updated SocketAppender instantiation to set remote host and port in SocketMin . java to ensure proper handling of remote host and port settings
refactor ` getPromptHeaders ` method to use ` getPromptHeaders ` to improve code readability and maintainability by encapsulating the
updated the method call from ` RecordDescriptor . msgLengthOffset ` to ` msgLengthOffset ` in ` ManyToOneRingBuffer . java `
updated variable assignments in CapacityManagerImpl . java to use clusterCpuOvercommitRatio instead of cpuOvercommitRatio to improve code readability and
added a ` flags ` field and a ` flags ` field in ` ShadowPaint . java ` and ` PaintTest . java ` to manage anti
updated the title from " Set / clear / append / rename " to " Manage field names & content " in MassSetFieldsDialog . java
added a conditional check for Eclipse bugs in DetectorsTest . java to improve error handling and provide clearer feedback when no bug is
added a check for nonce in Realm and updated authentication header parsing in NettyAsyncHttpProvider and NettyAsyncHttpProvider to ensure that the
added a new interface ` RemoteInputListener ` and updated ` RemoteInputListener ` to accept a ` RemoteInputListener ` and ` RemoteInputListener
updated condition in OrcEncodedDataReader to use stripeIxTo instead of stripeIxTo to improve code readability and maintainability by
updated filter condition in HomeConnectBridgeHandler to check if the thing is enabled to ensure that the handler is only filtered when the thing is enabled
added null checks before adding policies in AuthorizeManager . java to avoid potential NullPointerExceptions during policy addition
updated regex patterns in DefaultTypeAdaptersTest , ObjectTest , and ObjectTest classes to ensure compatibility with Java 9 and later versions
added JSON serialization and logging for dag information in TezTask . java to improve traceability of dag information during execution
updated heap time calculation in ComputedSummary . java and added getHeapTime ( ) method in HprofHeap . java and HprofHeap .
replaced RxJava2Tasks . java with CommonsApplication . getInstance ( ) . getMWApi ( ) . getMWApi ( ) . get
removed redundant lock mode checks in MVTable . java to simplify locking logic for better readability and maintainability
[ issue # 116 ] fix messagestore . getmessagesize ( ) to use messagestore . messagestore _ timestamp _ position 8
added a check for the presence of a folder in the Launcher class to ensure that the folder is marked as open to avoid potential null pointer exceptions
added a new test method ` testSortOrder ` to verify the ordering of PGProperty names in ascending order to ensure that PGProperty names are sorted correctly
removed the constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN from Common . java to streamline the code
updated the ` supportsDrop ` method to accept ` ItemInfo ` instead of ` Object ` in ` UninstallDropTarget ` to improve type safety
updated assertion in RequestBuilderTest . java to include the exception message to improve clarity of error messages for better debugging
replaced ` NearbyFragment ` with ` NearbyListFragment ` and ` NearbyMapFragment ` in ` NearbyActivity
[ hotfix ] make FlatProfileContainerFree constructor use sessionstatus instead of status
added a boolean field ` send _ zero _ anomaly _ email ` and updated related methods in ` EmailConfiguration ` and ` EmailReportJob
[ hotfix ] [ kafka ] fix flinkkafkaconsumerbase # open with restore state
removed user and geofence queries from DataManager . java to streamline code by eliminating unnecessary user and geofence queries
added a constructor to BlockingResponseListener with a specified maximum size to enhance flexibility in handling large response requests
refactor memberbroadcastsreceived method to use byte array instead of thread . name ( ) .
refactor snapshot handling in MultiLeaderServerImpl . java to ensure proper resource management and prevent potential memory leaks
updated assertion statements in LoginSAMLAuthenticationFailureHandlerTest . java to improve clarity and accuracy of error descriptions
rename ConfigMetadataProviderTest . java file to improve clarity and maintainability of test code
refactor ` updateNoteReminder ` method to use ` noteToUpdate ` instead of ` noteToUpdate ` to improve code clarity and maintainability
added a new ` AcceptAllFilter ` class and refactored the ` Files ` class to use a new ` AcceptAllFilter ` class
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
[ gr - 26186 ] fix compilation to throw noclassdeffoundexception if noclassdeffoundexception be throw
added DockerImageName validation and corresponding tests in GenericContainer . java and DockerImageName . java , and created corresponding tests for DockerImageName .
updated message messages for wrong credentials in LoginActivity . java to improve clarity and accuracy of user feedback during login failures
added autofocus functionality to multiple form classes to enhance user experience by allowing automatic focus functionality in the application
added unit tests for saml properties in SamlIDPRefreshMockMvcTests . java to ensure correct behavior of saml configuration properties in the
added checks for empty list items in ComparableVersion . java and updated test cases in ComparableVersionTest . java to ensure proper handling of empty list items
updated Sheet . java to use bottom right mode instead of top left and right mode in Sheet . java and UIManager . java to ensure consistent
updated package names from ` org . robolectric . android . ParallelUniverse ` to ` org . robolectric . android . internal ` in multiple test files to
updated method handle handling in LocalCacheFactory and NodeFactory classes to improve code clarity and maintainability by using a more descriptive method name
updated the color pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to
added methods to draw self loops in ProcessingPreview . java to enhance graph rendering by allowing drawing of self loops
updated ALLOW _ TVM _ SOLIDITY _ 059 to ALLOW _ TVM _ SOLIDITY _ 059 to
rename ` addManaged ` method to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
added a translation indicator to the drag handle indicator in AllAppsTransitionController . java to ensure the drag handle indicator reflects the correct position of the
updated log statements in CollectionViewer , CommunityViewer , and ItemViewer classes to improve logging clarity and ensure proper handling of null collections
updated error message for query optimization in HiveConf . java to provide clearer guidance on filter behavior during query optimization
added a check for OS . IS _ OSX in ScanningAppProviderRuntimeUpdatesTest . java to ensure tests are only executed on non -
added Maven bundles for Jetty ' s Jetty ALPN client in TestJettyOSGiAnnotationParser . java to ensure proper
refactor executeasyncjob and executionentitymanager to use executeasyncjob ( ) instead of executeasyncjob ( )
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
replaced CustomFieldBehavior with ExcludeFromRuleKey annotation in GenruleBuildable . java to exclude Genrule executions from artifact caching to improve
added a ` whichExec ` method to ` AsyncExecute ` , ` FirefoxCustomProfileLauncher ` , and ` FirefoxCustomProfileLauncher `
added a conditional check for the existence of the ` colFamToDynamicColumnsMapping ` in ` PTableImpl . java ` to ensure that
[ hotfix ] [ hadoop ] make HadoopTupleUnwrappingIterator non - transient
added a check for MAPPED views in MetaDataEndpointImpl . java to ensure compatibility with MAPPED views in the application
update student cascade when instructor be update
updated import statements in AllXSSFTests . java to use TestCellReference instead of TestCellReference to improve code clarity and maintainability by
fix : do n ' t check for obsidian or tile . close # 244
added a new file ` LongPointerPressTest3049 . java ` with a test class ` LongPointerPressTest3049 . java ` to
truffle : make sure we do n ' t throw an exception if a direct method be not resolve to a constant
refactor null checks in BaseBuilder and XMLConfigBuilder classes to improve code readability and maintainability
updated indentation logic in ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to improve code readability and ensure proper
added a new abstract class ` AbstractOptionalAssert ` and updated ` OptionalAssert ` to use ` OptionalShouldContain ` and ` OptionalAssert ` to
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to address issue # 1070 related to issue # 1070
updated the ` saveMessage ` method to use ` String . NativeString ( ) ` instead of ` String . NativeString ( ) ` to simplify
refactored code in RouteStartupOrderLastTest . java to improve readability and maintainability
added a condition to check for video formats in RemotePlayHandler to ensure only video files are processed in the video format
added security settings for JDK tls algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by disabling SSL algorithms
cloudstack - 10286 : do n ' t check if the neighbor be not a local storage
updated cache entry retrieval from ` getCacheEntry ( ) ` to ` getCacheEntry ( ) ` in ` Driver ` and ` QueryResultsCache ` to
add manageddependency . update ( ) and managedependency . update ( ) .
added a new test method ` getLastIntentSenderRequest ` to ` ShadowActivity ` and implemented a ` send ` method in ` ShadowActivity ` to
replace GLJPanel with GL - disabling FBO in RocketFigure3d . java to enable FBO rendering and enable FBO
added synchronization for controller listeners in HydrawiseControllerListener and HydrawiseControllerHandler to ensure thread safety when accessing controller listeners
added a new test method ` beforeClass ( ) ` to ` TestCoreAdminApis . java ` to ensure compatibility with Java 9
updated year retrieval from ` Math . abs ( ) ` to ` YEAR _ OF _ ERA ` in ` TimestampUtils . java ` and added
add null check for connection in protocolproviderservicejabberimpl . disconnect ( )
updated TxnHandler . java to include cur _ ws _ commit _ id in TxnHandler . java to ensure consistency in naming conventions for
replaced ` ByteChunk ` with ` ByteBuffer ` in ` BufferedInputFilter . java ` to improve memory management and ensure proper handling of buffer operations
added a ` toSync ` method to ` AsyncUtils ` and a corresponding test case in ` AsyncUtilsTest ` to improve error handling and ensure
added ActionGraphBuilder and ActionGraphBuilder to multiple compiler classes to enhance the flexibility and functionality of the compilation process
added a new test method ` testUploadingWithHiddenFileInput ` to verify the functionality of uploading with hidden files to ensure that the upload
replaced ` createTables ( ) ` method with ` createTables ( ) ` in ` SQLManager . java ` to improve error handling and provide clear
added a check to return the localMavenDir if the file is not already exists to ensure that the file does not exist before proceeding with the
ggb - 132 : do n ' t show the algebra label when it ' s a hidden prefix
added null check for metadata in CtElementImpl . java and updated assertions in MetadataTest . java to ensure robustness by preventing potential NullPointerException
modified the buffer flag setting in DefaultTrackOutput . java to use a addFlag method to improve code readability and maintainability by using a more
fix ` ` reorder ' ' error in entityiterablebase # canbeordered ( )
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call " to improve clarity of error reporting for missing
added null check for backupFolder before logging to avoid potential NullPointerException when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` that implements a reflection method to demonstrate the usage of the ` ArrayNewInstanceOfVoid `
added @ AddToRuleKey annotation to ClangCompiler and GccCompiler classes to enhance rule key management and improve code clarity
added a new constant PINCODE _ TIMEOUT in PinCheck . java to improve code readability and maintainability
add issampled method to PrometheusMeterRegistryTest , PrometheusExemplarsSample , and PrometheusExempl
removed the @ Ignore annotation from multiple test classes to streamline test execution by eliminating unnecessary dependencies
[ java ] fix test inconsumeuncompressedcompressedmessagetest . testconsumeuncompressedcompressedcompressedmessagetest .
updated condition in MetaDataSource . java to check if the table is artifical to ensure correct handling of artifical tables
updated file status checks in FileOutputCommitterContainer . java and LaunchMapper . java to improve code readability and maintainability
added null and empty checks for session attributes in MongoSessionManager . java to ensure proper handling of session attributes and prevent potential NullPointerExceptions
changed surfaceHolder . setFixedSize ( 320 , 240 , 240 ) from setFixedSize ( ) to setSizeFromLayout ( ) to
changed the variable name from ` _ stopping ` to ` CountDownLatch ` in ` AbstractConnector . java ` to improve code readability and maintainability by
updated WebSocketClientHandshaker parameter name from ` handshaker ` to ` WebSocketMessageHandler ` in ` HuobiStreamingService . java ` to improve
camel - 14297 : camel - http : / / issues . apache . org / bugzilla / show _ bug . cgi ?
[ hotfix ] [ test ] fix small test failure in delayedsubscribertest
added a conditional check for WebSocketHandshakeException in WebsocketTest . java to ensure that WebSocketHandshakeException is not expected to be WebSocketHandshakeException
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener in AllAppsTransitionController to improve code readability and maintainability by
refactor code for consistency and readability in PolicyBasedAuthenticationManager . java to improve code readability and maintainability
added support for the " default - output - channel " attribute in XPathRouterParser and updated test cases in XPathRouterParserTests to ensure the default
updated cache configuration to use DurationCapable and modified the CacheSeconds initialization in CasCoreWebConfiguration to improve cache configuration flexibility and ensure compatibility with
updated formatting in multiple Java files to improve code readability and maintain consistency across the project
removed the append method call in ByteBufferPool . java to streamline the buffer management process
added a method to check if the alt - rt . jar is detected and added a test to check if the alt - rt . jar is detected
updated SQL query parameters in JdbcScimUserProvisioningTests . java for consistency and clarity to enhance readability and maintainability of the test code
add debug non - safepoints option to the flight recorder profile
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and updated the ` imageDropHappened ` method to
added a condition to check if the content view has content before processing in HttpParser and added a new test for chunked put functionality to ensure proper
[ hotfix ] [ javadoc ] fix typo in atmosendpoint
added support for " print " and " print " in Java2TypeScriptAdapter . java to enhance functionality by allowing additional parameter types
added a new file ` TestCapacityUntilGCWrapAround . java ` with a native method ` incMetaspaceCapacityUntilGCWrapAround
refactor package - info . java files for improved clarity to enhance code readability and maintainability
removed unnecessary checks for stamped times in SamplingStatCalculator . java to streamline code by eliminating unnecessary checks for stamped times
added unit test for error handler advice with advicewith ( )
updated error messages for ICC _ PROFILE chunks in JPEGImageReader . java and added a new test for invalid ICC _ PROFILE chunks to improve
refactored item handling in multiple classes to use a mutable list instead of a single instance to improve code clarity and maintainability by using a more
added a conditional check for entry type in JoobyModule , SpringModule , and Environment classes in SpringModule , and SpringModule to prevent unnecessary
refactor webapploader to use container . parentClassLoader instead of thread . currentThread ( ) .
add nameupdater . properties file to the nameupdater . properties file
added a variable ` started ` to ` EllipsoidRegionSelector . java ` in ` EllipsoidRegionSelector . java ` to
updated URLs in JavaSEPort . java to use a default codenameone protocol instead of a hardcoded URL to improve maintainability and
do n ' t throw exception when sort by attribute be invalid
updated null check for grantTuple in AbstractJdbc2DatabaseMetaData . java to ensure proper handling of null values to avoid potential NullPointerExceptions
updated DiagramGenerationTest to use GraphicsEnvironment instead of GraphicsConfiguration to improve image processing accuracy and ensure compatibility with different graphics configurations
added a null check for sidedDelegate in FMLCommonHandler . java to ensure proper handling of null sidedDelegate to prevent runtime errors
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
refactor locktest to use AssertTask instead of CountDownLatch to improve code readability and maintainability
added a new method ` wholeWordTokenize ` and ` joinTokens ` in ` StringUtil . java ` to enhance tokenization functionality for better token
do n ' t log an error if the host be not find
refactor command handling in SystemHighlighter to use a command index instead of a hardcoded value to improve code readability and maintainability by central
update version from " 1.10 . 0 " to " 1.10 . 1 - SNAPSHOT " and updated VERSION _ DATE to " PENDING "
updated buffer position from idx to dimensionSize in StarTreeRecordStoreCircularBufferImpl . java to ensure correct buffer positioning based on dimension size
added a new method ` isDragAndDropReady ` to handle drag state in ` QuickstepTestInformationHandler ` and ` SystemUiProxy `
[ hotfix ] [ test ] fix checkstyle violation in securesocketappendersocketoptionstest
added support for PSK - AES - AES - GCM - SHA384 and TLSv1 . 2 in TestCipher . java to
updated method call from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java
added @ JsonProperty annotation to ScimGroupMember . java to enable JSON serialization and deserialization of the object
updated HqlQueryRenderer to support JpaQueryParsingToken and added a new test case for schema scoping in HqlQueryRenderer to
updated null check from " d " to " s " in SubscriptionHelper . java to improve code readability and maintain consistency
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
updated the ` offsetStreamIndex ` method to include ` indexStartsAtOne ` instead of ` indexStartsAtOne ` to ensure accurate
updated byte encoding in MagicDetector . java and updated test cases in TestMimeTypes . java and TestMimeTypes . java to ensure correct decoding of
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - b
added equals and toString methods to OneTimeTokenAccount , OneTimeTokenAccount , and OneTimeToken classes in OneTimeTokenAccount , OneTime
added a condition to check if the assistant is not launched before proceeding to ensure that the fling is only processed when theAssistant is not launch
added a new file SolarisShortDSA . java that implements a cryptographic algorithm to verify the validity of DSA keys to ensure that the
added a call to toggleSearchLabel ( false ) in ListFragment . java to ensure the search label is properly toggled for better user experience
cloudstack - 10284 : fix crash when create a snapshot on primary and secondary
refactor ` FileDetailActivity ` to use a new ` DetailsServiceConnection ` class to improve code readability and maintainability by encaps
refactor throwable handling in HttpClientTLSTest to use AtomicReference for better readability to improve code maintainability and reduce boilerplate code
removed the equals method from ConjunctionScorer . java to simplify the equality check for Scorer instances
added a null check for ` v ` in ` Launcher . java ` to prevent potential NullPointerException when attempting to bind items
update raftgroupmanager to use getraftgroupgroupmanager . getraftgroupgroupmanager . getraftgroupinfo ( ) instead of
updated cache size checks in DefaultCache . java and added warning logging for shrinked cache sizes to ensure cache size does not exceed desired size
updated API version from " v2 " to " v3 " in multiple files to ensure compatibility with the latest API changes
added a method ` empty ( ) ` to return a boolean value of ` size ( ) ` to provide a way to check if the size is
added null checks for page data in AsyncPageReader and TestDrillParquetReader classes to ensure proper handling of null values in the parquet
added validation for market data type in SerumStreamingService . java to ensure that only valid market data types are processed and provide clearer error messages
add a configuration option to disable the charging animation when an item is charging on top of mana pool
[ java ] use egress . isConnected ( ) and egress . isConnected ( ) instead of ischallenged
added error logging for InterruptedException in WaitForHelper . java to improve error logging for interrupted exceptions
fix test that fail on window
updated method calls from ` StyleInjector . inject ` to ` StyleInjector . inject ` in ` ResourcesInjectorFull . java ` to ensure consistency in
updated variable names from String to FileResource in BaseLiquibaseTask and DBDocTask classes to improve code readability and maintainability by using
corrected method calls in BlockWorldVector . java for better readability to improve code readability and maintainability
refactor LongConcurrentLRUMap to use a final class for better immutability to improve code readability and ensure immutability of the
refactor resource configuration to use regex handling to improve code readability and maintainability by using a more descriptive variable name
updated cache retrieval logic in FileCredentialsCache and EmptyCC classes to improve cache handling and error handling to enhance robustness by ensuring proper cache initialization and
updated the database path from " PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " in ValidateMultiSignContract
[ pan - 132 ] fix flaky test in eth protocolmanager . hassufficientpeers ( )
[ java ] fix checkstyle issue in webdriver servlet
added a condition to check if the operation is EQUAL _ BOOLEAN in ExpressionNode . java to ensure that the expression expands only when the
added a check to clear pendingRenderingOperations in AndroidAsyncView . java to ensure pendingRenderingOperations is only cleared when it isMinimized
[ hotfix ] [ test ] fix race condition in HazelcastTestSupport
fix ( writebehind ) : use volatile value instead of queue . put ( key )
added a icon to the GroupTreeCellRenderer to set the icon to null to improve the visual appearance of the group tree
refactor test methods in TestBlacklistAwareRedirectResolver to use default and non - strict to improve clarity and consistency in naming conventions
refactor ShutdownMonitor and ShutdownMonitorTest to improve resource management and ensure proper cleanup of server sockets to enhance resource management and ensure proper
refactor RandomAccessStore to use a new variable for better readability and maintainability to improve code readability and maintainability by reducing redundancy in
refactor serialization exception handling in Json . java to improve readability and maintainability to enhance code readability and maintainability by encapsulating
[ hotfix ] [ runtime ] move componentclosingutils to coordination . coordination . coordination
cloudstack - 10284 : fix cloudstack crash when create a snapshot with the same volume .
cloudstack - 10297 : fix typo in getip6range ( )
rename ` userDetailsManagerConfigurer ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` and ` InitializeUserDetailsBeanManagerConfigurer
updated the leader retry rate from 15 seconds to 30 seconds in the CollectionsAPIDistributedZkTest . java file to allow more time for the leader
replaced string parameters with slf4j logging for error handling to improve logging consistency and maintainability of error message formatting
updated drawImage method call from ` x ` to ` y ` in ` URLImage . java ` to ensure correct positioning of the image ' s
updated the condition in SolrTestCaseJ4 to compare both SolrDocument1 and SolrDocument2 to ensure consistency in the comparison logic for field names
refactor code to use a new method ` isItemZeroHighCardDim ` to improve code readability and maintainability by encapsulating
[ hotfix ] [ stream ] add exception to streamtaskexception
refactor hashtag handling in Preprocess . java to improve readability and maintainability of the code
refactor read methods in MessagePack . java to improve readability to enhance code readability and maintainability
added a new annotation ` Mapper ` in ` org . apache . ibatis . annotations . Mapper . java ` to implement a Mapper interface to provide a
added support for ` isFhirComment ( ) ` in ` JsonParser ` and ` JsonParserR4Test ` in ` JsonParserR4Test `
added null checks for ` child ` and ` child ` in ` Artifact . java ` and ` LibraryManager . java ` and ` LibraryManager .
added a alias for the " node _ popup _ scripting " entry in ScriptingMenuEntryVisitor . java to support popup scripting functionality in the
updated HIDDEN _ FOCUSED _ SCROLL and added a DEFAULT _ ALPHA _ ANIMATION _ DURATION constant to
camel - 14284 : camel - jms : use the class instead of the type of the exchange . getout ( )
updated method names from " extraResourceFields " to " extraResourceFields " across multiple files to improve code readability and maintain consistency in naming convention
deleted the ` AbstractDelegatedVerb ` , ` FailureContext ` , and ` FailureContext ` classes to remove outdated code that is no longer needed
updated the ` __ content ` variable to be final and added a ` MicroServlet ` class to ensure immutability of the ` __ content `
fix onsubscriberedo to use backpressureutils . getandaddrequest ( ) instead of mock
refactor SpeedmentImpl to use a logging framework for better traceability to improve debugging and maintainability of the code
added a new file ` LoadDSpaceOAIConfig . java ` that uses ` ConfigurationManager . getgetInitParameter ( ) ` for loading configurations
added null checks for kv and row handling in StoreScanner . java and modified test cases in TestWideScanner . java to improve robustness by preventing
camel - 15836 : camel - Nagios - eventnotifiertest , camel - jbang - add usejmx ( )
added a constant for the CANONICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation and updated sourcePath handling in SourceCodeDisplay to ensure
added YARNBIN functionality to the HiveConf and RemoteSparkJobMonitor classes to enhance the configuration options for YARN application kill commands in the
added support for " maria " database in DbConnectionManager . java to ensure compatibility with additional database types
[ flink - 18186 ] [ log ] fix log message in splitlogmanager . log ( )
added a new file ` ExecuteAndReturnStringTest . java ` to test the functionality of the ` ExecuteAndReturnStringTest ` class to ensure
added a new file ` InvokespecialInterface . java ` that implements interface I , I , and ` InvokespecialInterface . java ` , and `
refactor EvictingBoundedList class implementation to improve code readability and maintainability
graphhopper : remove turncosts support when use edge _ based _ 2DIR
added a null check for ` style . backgroundDisabled ` in ` SelectBox . java ` to ensure that selections are non - negative to prevent
added a null check for the md parameter in RpcServer . java to ensure that an UnsupportedOperationException is thrown when the header is null
updated hotseat cell size calculation in TaskbarViewController to use border spacing to improve layout consistency and maintainability of the hotseat icons
updated key equality handling in ExpressionTree . java to use values . get ( " partitionColumnIndex " ) instead of a hardcoded string to
[ hotfix ] [ runtime ] add versioned to taskdecorator and taskdefinition
updated directory retrieval from getIndexDir ( ) to getNewIndexDir ( ) in ReplicationHandler . java to ensure the correct directory is used for indexing
updated the comparison logic in DisplayModeTest . java to include a true flag to ensure correct behavior of display mode equality checks
added a check for BMPCodePoint in UnicodeToLatexFormatter and updated HTMLUnicodeConversionMaps to include a check for BMPCodePoint to
added handling for ISO control characters in OAIDCCrosswalk and Item classes to ensure proper handling of character encoding in data processing
[ java ] do n ' t select the window handle if it ' s the original window .
added a conditional check for BOOKMARKFILE _ EXTENSION in StringSearchPanel and updated related buttons in BookmarksPanel to enhance user interface
replaced port handling with UrlUtils . buildFullRequestUrl in OAuth2AuthorizationRequestRedirectFilter . java to simplify the code and improve maintainability by
updated assertions in SoftAssertionsTest to use ` parseDatetime ` instead of ` new Date ( 0 ) ` to improve accuracy of date comparisons
added a reverse parameter to adaptOrders methods in BitmexAdapters . java and updated order handling in OrdersContainer . java to enhance
added null checks and null checks for the var type in PrettyPrinter . java and created a new Java11Var class to improve robustness by preventing
[ java ] remove unused import of notyetimplemented
updated Configuration initialization in HiveConf . java to use a default value instead of a hardcoded default value to enhance flexibility in configuration management by allowing
updated draw method call from ` parentAlpha ` to ` parentAlpha ` in ` WidgetGroup . java ` to ensure the correct parentAlpha is used
added a new test class ` FileSplitStreamingWithChoiceTest ` to verify the behavior of the ` FileSplitStreamingWithChoice ` method in the
replace system . getProperty ( ) with system . getcatalinabase ( ) . getcat ( )
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and ` getBestDateTimePattern ` classes to ensure
added color codes to the map in PlotSquared . java to enhance the visual representation of the plot squared color codes
added zuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance flexibility in handling zuul properties
fix fontparserstest to use timezone . gettimezone ( ) instead of timezone . gettimezone ( )
added new classes ` SampleApplication ` , ` SampleApplication ` , and ` SampleApplication ` , and ` SampleApplication ` , and ` BuildInfo
updated the calculation of xDist from ` getFinalX ( ) ` to ` Math . abs ( ) ` in ` PagedView . java
removed the GUIRWTester . java file to remove the GUIRWTester . java file to remove unused code to streamline the codebase
updated the ` LazyMessage ` and ` countPlaceholders ` methods in ` LazyMessage ` , ` StandardSubjectBuilder ` , and ` Subject `
corrected a typo in the error message in TestStream . java to improve clarity of error messages for better debugging
updated package names from ` org . thymeleaf . templateparser ` to ` org . thymeleaf . templateparser . markup `
added a new test method ` testXPathString ` to ` XPathTest . java ` and modified XPathTest . java to ensure correct evaluation of XPath
added @ Nullable annotation to FutureUtils . java to enhance null safety in FutureUtils . java
add warning to warn if invokedynamic be not resolve during call - graph construction .
updated email from " myfakeemail @ gmail . com " to " myfakeemail @ example . com " in ContextTest .
updated response handling in HttpConnectionTest . java and modified URIUtil . decodePath method in HttpConnectionTest . java to improve code readability and
added a method ` getColumnDataType ( int columnIndex ) ` to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` to provide
camel - 15836 - camel - aws2 - dynamodb - aws - aws2 - aws - aws2 - aws - aws - aws
refactor HSSFPictureData class to improve code readability to enhance maintainability and facilitate future updates
replaced ` System . currentTimeMillis ( ) ` with ` Instant . between ( ) ` and ` Instant . now ( ) ` in ` Statistics .
updated library version handling in LibMediaInfoParser . java and added version handling in LibMediaInfoParser . java to ensure compatibility with new media features
removed unused imports and improved proxy creation logic in ProjectReader . java to streamline code and enhance maintainability by eliminating redundancy
added a new class ` SerialHeap ` and modified the ` CollectedHeapName ` to use it to provide a standardized name for serial heap
added @ SuppressWarnings ( " serial " ) annotations to the $ Types class to suppress serialization warnings for better code clarity
updated mouse wheel event handling in InputSystem and MouseWheelEvent classes to include a Vector2i parameter to enhance event positioning and improve tooltip position
updated the ` findByAppropriateLikeRegexTo ` method to handle null values in ` MongoQueryCreator ` and added a new test for
[ hotfix ] [ table - common ] add a new class ` MapTypeInfo . java ` and implement a new ` MultisetTypeInfo . java
added a method to retrieve all OIDC providers in XOAuthProviderConfigurator to improve error handling for duplicate issuers in the XOAuth provider configuration
refactor CMapParser to improve handling of delimiters in CMapParser to enhance readability and maintainability of CMap parsing logic
added operations service connection handling in ContactsBackupJob . java and updated service connection handling in ContactsBackupJob . java to improve service management and
updated method signatures in Attr . java and added new classes T6938454a . java and T6938454a . java and T69
added a check for configuration visibility in AccountList and implemented a new method ` isConfigHidden ( ) ` in ` ProtocolProviderFactory ` to ensure
added logging for unsupported bounds in DisplayController . java to improve debugging by providing insights into display state changes
replaced ` SchemaUtil . getSchemaName ( ) ` with ` getSchemaKey ( ) ` in ` PMetaDataImpl . java ` and added a test
ggb - 271 do n ' t fire passive login when login fail
added a new file Box2DTest . java for testing Box2D functionality to enable testing of Box2D functionality in the application
patch by jbellis ; review by jbellis for cassandra - 142
updated the default buffer request timeout from 5 seconds to 5 seconds in HybridShuffleConfiguration . java to allow more time for the default buffer request timeout
added a new constant for the GENERATOR _ NAME and updated the DEFAULT _ GENERATOR _ VERSION in SpeechClient . java
added a help button to the OpenOffice widget to enhance user experience by providing a clearer help option
[ java ] use child option instead of child option in nettyacceptor and protocoldecodingserver
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceTradeService classes to enhance type safety and improve code clarity
refactor class reference handling in ScanResultObject to use a transient Class < ? > instead of a hardcoded string to improve type safety and
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 : fix
updated Querydsl to use a new method ` toQueryDslNullHandling ` and added a new test class ` QuerydslIntegrationTest `
added null check for actor before processing actions in ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions when actor is null
updated filter methods in CtTypeTest . java for consistency and clarity to improve code readability and maintainability
added synchronization for sfWriters in HDFSEventSink . java to ensure thread safety during concurrent access to write operations
added a new interface ` Issue888 _ JavaI ` that implements ` Issue888 _ JavaI ` that implements ` Issue888 _ JavaI `
added a new constant REVOKE _ AGENT _ CRT and updated the script argument handling in CertificateManager and CertGenerationTest to
added a condition to check if the response code is not present in the ` AbstractHttpTest ` class to ensure that the ` writeBodyAfterNo
added error handling for script loading errors in ScriptTransformer . java to ensure compatibility with Java 6 and above to improve robustness by providing clearer error
added " HikariCP " and " NONE " to the connection pooling configurations in HiveConf and updated test assertions in TxnHandler
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to ensure consistent
added methods to filter lock and unlock files in FileMenuFilter , OCFileListFragment , and OCFileListFragment to enhance file management
refactor Version class implementation to improve code readability and maintainability
patch by jbellis ; review by jbellis for cassandra - 151
replace ` thrsync . waitForSignal ( ) ` with ` waitForState ( Thread . State . BLOCKED ) ` in ` Locks . java
replaced ` getCoercedAttrValues ( ) ` with ` getCoercedAttrValues ( ) ` in multiple Java files to
[ java ] rename localstorage interface to storage interface and add storage interface .
fix nullpointerexception when create view statement with unnecessary or replace option
refactor error handling in SegmentGenerationJobRunner to use Throwable instead of Exception to improve robustness by catching potential exceptions during segment generation failures
added a null check for the query string in SpellCheckComponent . java to ensure that the query string is retrieved only if it is not null
added validation checks for illegal characters in header values in Headers . java to ensure proper handling of illegal characters in header values
changed instanceSize and arrayBaseOffset from instanceSize to arrayBaseOffset in HybridLayout . java and HostedInstanceClass . java to improve
removed the ` @ Override ` annotation from the ` setContainsComment ` method in ` ASTCommentContainer ` and ` AbstractApexTreeBuilder `
hhh - 11717 add log for ` fetchmode . join ` and ` fetchtype . LAZY ` association with ` fetch
refactor ` NoGetOperationsFilter ` , ` NoUserOperationsFilter ` , and ` Remove ` implements ` in ` NoGetOperationsFilter `
added assertions for database and table names in TestCompactionTxnHandler and TxnHandler to ensure correct database and table names are used for compaction transactions
added a suspendable interface to the TimerConsumer class and created a new test for the TimerGracefulShutdown functionality
added a conditional check for processed blocks before adding it to the traces list to ensure that only processed traces are added to the trace list
updated the handling of null providers in ProviderManager and added test cases in ProviderManagerTests to ensure proper handling of null values and improve test coverage for
removed unnecessary exception handling for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to simplify the code and improve readability
added LOCAL _ INDEX _ LIMIT handling in LocalIndexIT , BaseScannerRegionObserver , and ExplainTable classes to ensure correct filtering behavior for
added validation for collection additions with the same name in AlterTableStatement . java to ensure that additions with the same name are not duplicated
refactor cursor positioning logic in VDUBuffer and vt320 classes to improve accuracy of cursor positioning in VDUBuffer and v
removed the static final String USE _ RETRIES constant from HttpShardHandlerFactory . java to simplify the code by eliminating unnecessary constant
updated VERSION _ NUMBER in JavaVersion . java and added a new test for Java 11 to ensure compatibility with the latest Java features and fixes
added a check for empty input gate list in StreamTask . java to avoid unnecessary processing when there are no input gate
added a new test method ` test ( ) ` to ` TestReceivingMessageSourceParserTests ` to improve test coverage for message source parsing
added null check for properties in RemoteCluster . java to avoid potential NullPointerExceptions when properties are null
updated IOException handling in FileSystemBlobStrategy . java to use initCause instead of throwing an IOException to improve error handling by providing a more descriptive exception
updated error messages from " rolling upgrade to " stack upgrade " in multiple classes to improve clarity and consistency in error reporting
added a txConfidenceListener to the TxIdTextField class to enhance confidence updates for transactions in the wallet service
added a constant G1 _ PERM _ GEN for G1 Perm Gen in JmxSupport . java to ensure compatibility with G1
refactor NearbyController to streamline code and improve readability to enhance maintainability and reduce boilerplate code
pdfbox - 4071 : make clonefornewdocument public , a suggest by valerybokov
updated task type checks in BaseSwipeUpHandlerV2 . java to ensure correct handling of home activity types in swipe - up gestures
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` in ` DefaultEdgeClientFilter ` and ` EdgeAddHeaderClient
updated test methods in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and consistency in naming conventions
added a call to setUnfreezeAmount in UnfreezeBalanceV2Actuator . java to ensure the correct unfreeze balance is used
updated descriptions in ConferenceSchedulingXlsxFileIO . java for clarity to improve readability and maintainability of the code
updated the ` copyModel ` method to use ` commons . io . FileUtils ` instead of ` google . common . io . Files ` to
refactor assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
refactor Observable class to improve code readability to enhance maintainability and facilitate future updates
replaced ` keyValue ` with ` addMultiFieldOperation ` in ` Update ` and added a new test for ` DocumentWithMultipleCollections `
added null check before setting the UUID in MockHubService . java to avoid potential NullPointerExceptions when randomUUID is null
added a ` onHoverEvent ` method to ` InputConsumer ` , ` OverviewInputConsumerProxy ` , and ` OverviewInputConsumerProxy
refactor configuration handling in CoreContainer . java to use a separate variable for better readability to improve code readability and maintainability by reducing redundancy
changed default value of ` maxHeadersSize ` from " 8192 " to " consumer " in ` NettyHttpConfiguration ` and ` Netty
hbase - 13232 update hbase client number from 5 to 35 ( sergey shelukhin , review by ashutosh chau
updated file handling in SourceSnippetHelper . java to ensure consistent file path formatting across different operating systems
trufflegraphcachetest : fix nullpointerexception in encodedgraphcachetest
updated query command from " customer _ count " to " all _ tables " in SchemaCrawlerTextCommandsOutputTest . java and added a new test
added handling for kraken assets in KrakenAdapters . java to enhance currency metadata management for kraken assets
added a ` toString ( ) ` method to the ` AnyOf ` class and created a new ` AnyOf _ toString _ Test ` class to
updated the handling of email names and subject names in AlertTaskRunnerV2 . java to improve clarity and maintainability of the code
fix influxdb publisher to check for nullness and nullness
rename ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in naming conventions
updated address filtering logic in NetUtils . java to use a dedicated method to improve code readability and maintainability by encapsulating address filtering
updated the ` writeRowHeader ` method to use ` quoteColumnNames ` instead of ` writeRowHeader ` to improve code readability and maintain
added methods to retrieve and set properties in ` WrapSystem ` , ` StrUtils ` , and ` StrUtils ` , and ` StrUtils `
added a constructor to the UpdateRequest class to initialize the UpdateRequest class with a specified URL to ensure proper initialization of the UpdateRequest class
renamed ` EnumSerialization ` to ` EnumSerialization ` in multiple Java files to improve clarity and consistency in the codebase
removed the addition of anExperimentalFormatWarning method in DataImportHandler , ReplicationHandler , and RequestHandlerUtils to streamline the handling of experimental
added a format method to the moduleNames collection in JpmsUtil . java to improve readability and maintainability of the code
bug fix : adjust row height for table view to be consistent with other table .
refactor brokerheartbeatmanager to use optional parameter for consistency to improve code readability and maintainability
refactor the calculation of mean and partition sizes in CqlInputFormat . java to improve code readability and maintainability by reducing redundancy
updated the condition in JUnitTestsShouldIncludeAssertRule to simplify the condition to improve code readability and maintainability
added equals and hashCode methods to RuleTerminalNodeLeftTuple and RuleTerminalNodeLeftTuple to ensure proper comparison and hashing of RuleTerminalNodeLeft
added a check for HIVESTAGEIDREARRANGE in TezCompiler . java to ensure that StageIDsRearranger is resolved only when
[ ambari - 18147 ] fix the issue of the mbean registration in the messagingservice . java file
updated memory consumption logic in LotsOfOutput . java to check if the total memory is greater than the initial and total memory to improve memory management
added imports for ` DocValuesFormat ` and ` DimConfig ` in multiple Java files to improve code clarity and maintainability by standardizing
updated ` LdapAutoConfiguration ` , ` LdapProperties ` , and ` LdapProperties ` classes to use ` anonymousReadOnly ` instead of ` baseEnvironment
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
make exampleechopipelinetest class private to make it easy to test .
added ` finishMocking ` method to ` MockitoSession ` , ` DefaultMockitoSession ` , and ` StubbingWarningsTest ` classes to
refactor dependency handling in GoTestDescription and add a new testGenRuleWithLibAsSrc method in GoTestIntegrationTest to improve code readability
changed variable names from ` buffer ` to ` writePending ` in ` SPDYAsyncConnection ` and ` writePending ` in ` SPD
replace static block retrieval with flowing block retrieval to improve code readability and maintainability by using a more descriptive method name
updated URL handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use Uri for URL parsing to improve URL handling and ensure proper handling of URL
camel - 15836 - camel - aws2 - apr - http : / / issues . apache . org / jira / browse /
[ hotfix ] [ cli ] use streamingplan instead of optimizedplan in cli frontend
updated item hash calculation in CraftingManager . java and updated shapedRecipes . computeIfAbsent method in CraftingManager . java to improve
flume - 241 : fix test failure on window
updated whitespace handling in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a regex pattern for the ` pg _ temp _ . * ` in the ` NeuteredLinesFilter . java ` class to enhance the
added a new parameter ` false ` to ` PoliciesClient ` , ` HttpJsonPoliciesStub ` , and ` HttpJsonPoliciesStubSettings `
added checks for " INTERVAL " and " NCLOB " data type in DataTypeFactory and modified conditional checks in ColumnSnapshotGenerator to support
add isPublishingHistogram ( ) method to WavefrontDistributionSummary . java and update metric registration in WavefrontMeterRegistry . java to ensure accurate
updated the handling of the DivideUpstreams and DivideUpstreams method in ShenyuClientRegisterSpringCloudServiceImpl and DivideUpstream
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enhance functionality by allowing dynamic listener registration based on latency
added tests for full methods and headers in SelectChannelServerSslTest and SslConnection classes to ensure proper SSL connection behavior and provide clearer logging
camel - ignite : fix npe in camel - osgi - karaf
added a null check for ` cnt ` in ` AbstractClient . java ` to handle cases where ` cnt ` is zero to improve error handling and
pdfbox - 4071 : catch unsupported flavorexception instead of IOException
added unit tests for the ` setDisplayHdrCapabilities ` method in ` ShadowDisplayTest . java ` to ensure proper functionality of ` setDisplayHdr
set classLoader to null in JavacInMemoryStep . java to ensure proper resource management and avoid potential memory leaks
updated error messages in SemanticAnalyzer and SemiJoinHint to include additional context to improve debugging clarity and provide more context in exception messages
added a constructor to the Message class to allow instantiation of the Message class
added handling for " java . awt . Component " in SerializableIdiom . java and modified priority assignment logic in SerializableIdiom . java
updated PhoenixDecimalObjectInspector to use PrimitiveTypeInfo instead of DecimalTypeInfo in PhoenixDecimalObjectInspector to improve type safety and ensure correct precision scaling for decimal
updated CompressionResponseStream and CompressionServletResponseWrapper to check if the response is already committed to ensure that the output stream is only created when the response is
replace WWWWAuthenticate with authenticateHeader in the Authenticator class to improve clarity and maintain consistency in naming conventions
removed unnecessary check for " com \ ibm \ " in DCD . java to streamline code logic for better readability and maintainability
refactor thread group retrieval in ThreadLeakTest to use a dedicated method to improve code readability and maintainability by encapsulating thread
added logging functionality to the MethodInvocationPrivilegeEvaluator class and modified the afterPropertiesSet method to improve logging clarity and ensure proper validation of security interceptors
updated package names from " org . apache . nutch . crawl " to " org . apache . nutch . tools . Dmoz
removed unused import of lombok . ToString in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy to clean up the code and
cloudstack - 10297 : add iso path to the vm when the vm be not a uservm
refactor signal handling logic in SigInt and SigIntTest to improve code readability and maintainability
replaced the use of ` ArrayUtils . isEmpty ` with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code readability
refactor AxonAutoConfigurationWithSpringCloudTest to utilize HibernateJpaAutoConfiguration and HibernateJpaAutoConfiguration to improve
refactor ColorRGBA class to improve code readability and maintainability to enhance maintainability and facilitate future modifications
[ hotfix ] remove deprecated resetinitializedplanningentity ( ) method from planningentityselector
added build time and build time handling in multiple classes to enhance rule key management by incorporating build time measurements
refactor GroupByOperator to use getDeclaredFields ( ) and getDeclaredFields ( ) for fixed row size calculation to improve code readability and maintainability
added null checks before adding blockAppearance in Wallet . java to avoid potential NullPointerExceptions when the block is null
added CNC _ BTC and CNC _ BTC _ BTC _ BTC and CNC _ BTC _ BTC to the
updated skewAllowance from 5 to 15 and updated related classes to use CasConfigurationProperties instead of int to improve flexibility and maintainability of the
updated SongListActivity to use ItemSortBy instead of ItemSortBy in SongListActivity and Utils to enhance sorting functionality for better user experience
replaced the ` readBodyToBytesIfNecessary ` method with a ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to streamline the code
add legacybaseblockwrapper to make it compatible with blockwrapper
updated IcebergBranchExec and TestHiveIcebergBranchOperation to handle tags more effectively to improve robustness by ensuring only valid tags are
replaced the import of ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to improve code readability and
refactor ` HybridDemoSsboInstancing ` and ` PhotonMappingDemo ` classes to improve code readability and maintainability by
updated password change validation logic in IdentityProviderEndpoints . java and added debug logging for unsupported operations to ensure proper validation of password change requirements for Identity Provider
added a call to removeAll ` notInitializedInConstructors ` in ` UnreadFields . java ` to ensure that only fully initialized constructors are
updated SQL execution error handling in JdbcExecutor . java to use CLOSED CONNECTION instead of CLOSED CONNECTION to ensure proper connection handling when the
added a new test method ` testRequiredBody ` in ` SpringmvcClient . java ` to validate required parameters in the template to ensure that
updated pattern patterns in CredentialInjector and related test cases in CredentialInjectorTest to ensure proper handling of user passwords in credential configurations
added new items " Item4 " and " Item4 " to the menuItems array in ActionListenerCalledTwiceTest . java to enhance user
updated test assertions in TestCoreParser . java to use the class name instead of a string concatenation to improve clarity and maintainability of test output
corrected the spelling of " id " to " id " in the comparison logic to improve code readability and maintainability
changed the visibility of the PopulatorContextStackItem class from public to public to allow access to the PopulatorContextStackItem class from other packages
updated the logic for retrieving the number of documents in MoreLikeThis . java and added a new test in TestMoreLikeThis . java to ensure
refactor QuestManager to improve readability and maintainability to enhance code readability and maintainability
[ hotfix ] [ test ] make networkbufferpooltest static
updated SQL query string concatenation in MongoSessionDataStore . java to improve readability and maintainability of the code
added a native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to provide a native method for retrieving the long value
updated time zone values from AAST to EET in multiple languages to ensure accurate representation of time zones in the application
updated the id from 9000001010 to 90000011 in DeprecationLogger . java to improve clarity and maintainability of the code
hhh - 16458 - do n ' t throw a JDBCexception if the transaction do not exist
refactor suffix handling in DownloadExternalFile . java to improve code readability and maintainability to enhance readability and maintainability of the code
bug fix : set menu bar to false on macosx
[ geogebra ] fix piecewise integration test for piecewise
changed access modifiers of STATE _ SCREENSHOT _ CAPTURED from private to protected in BaseSwipeUpHandlerV2 and FallbackSwipe
added a configuration check for the " modWhiteListPattern " parameter in HiveConf . java and a corresponding test in TestJdbcWithSQLAuthorization .
added a value to the invalidClasses map in EntryLoader . java to ensure the correct value is stored for invalid classes
updated the method call from ` Team . sharded ` to ` player . team ( ) ` in ` MobileInput . java ` to ensure accurate
updated Cookie . Builder from " comp1 " to " domainHelper . getHostName ( ) " in CookieImplementationTest . java to ensure consistency in cookie
added validation logic for nullable values in MissingColumnChangeGenerator , MissingTableChangeGenerator , and ColumnSnapshotGenerator classes to ensure proper validation of nullable values
refactor multiple security classes to improve code organization to enhance maintainability and readability of the security framework
updated test cases in CustomCollectionTest . java and CompositeIdRouter . java to enhance query functionality and improve code readability
updated ` ExecutablePreparedStatementBase ` and ` PostgreSQLIntegrationTest ` to utilize ` SnapshotGeneratorFactory ` and ` SnapshotGeneratorFactory `
updated conditional checks in DefaultServlet . java to include max _ cached _ files and max _ cached _ file _ size checks to ensure proper handling of
fix a bug in jabrefframe when the tab be not in the right place .
updated assertions in ExecutionUnitRunner and CucumberTest to include a new description in ExecutionUnitRunner to improve clarity and accuracy of test descriptions
updated condition in CommandLineUtils . java to use StringUtils . isNotEmpty ( ) instead of StringUtils . isEmpty ( ) to improve code readability and maintainability
changed access modifiers of ` isToday ` method from public to package - private in ` TimeUtils ` and ` TimeUtilsTest ` classes to
updated security frame detection logic in ` System . java ` and modified conditional checks in ` RefectionMHTests . java ` to improve clarity and
updated file name validation in PreviewImageFragment . java to include " . jpg " to ensure compatibility with both jpg and jpeg files
update nativeimagedebuginfoprovider to handle hostedmethod instead of hostedmethod
added icon handling methods in Data , Data , Data , Data , Data , Data , Data , Data , Data , Data , Data , and DataTable
modified the substring method in CounterRequestAggregation . java to check for non - empty substrings before returning the request name to improve robustness by avoiding
updated regex replacement logic in FindAndReplace . java and added a new test for dollarsignsTolerated functionality to ensure proper replacement behavior for dynamic
[ java ] make debugger and smackpacketdebugger compatible with jabber
refactor SchemaExtractionProcessor class to improve code readability to enhance maintainability and facilitate future updates
added a ` copyDir ` method to ` IO ` and modified ` SpecWebAppTest ` to utilize ` CopyOption ` for file copying
added a check for unknown datum class in JacksonUtils . java to ensure proper error handling for unknown datum instances
replaced ` buildAbiFromClasses ( ) ` with ` getLibraryTarget ( ) ` in ` DefaultJavaLibraryBuilder . java ` to improve
refactor item height calculation in SelectBox . java to simplify height calculations to improve code readability and maintainability
added identifiers for database and table names and tables in ObjectStore . java to ensure consistency in identifier handling across database and table names
added schema checks for " postgres " and " oracle " in DbSqlSession . java to ensure correct schema is used for Oracle databases
removed the call to Logout ( ) in HomeFragment . java to simplify the logout process by eliminating unnecessary code
updated ` MockStreamingRuntimeContext ` and ` ArrowSourceFunctionTestBase ` to use ` 1 ` instead of ` 0 ` in multiple test files
added null check for candidates before accessing the priviledged list to avoid potential NullPointerExceptions when accessing the result
added a boolean variable ` wasManaged ` and updated related assertions in ` ContainerLifeCycle . java ` and ` ContainerLifeCycleTest . java ` to ensure
rename IExecutionAttributesDialect to IExecutionAttributeDialect in multiple files to improve clarity and consistency in dialect naming conventions
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure proper resource management and prevent memory leaks
added null checks for loc in CmdGetTime . java to avoid potential NullPointerExceptions when loc is null
added a null check for measurement in TabletInsertionDataContainer and created a DisruptorQueueExceptionHandler class in DisruptorQueue to improve error
deleted the Session2Token . java file to the class is no longer needed for the current implementation
cloudstack - 10297 : remove the volume from the db when create a new volume
added a new ` Install ` class to the ` PopupDataProvider ` and implemented a ` InstantAppResolver ` class in ` SystemShortcut ` to
added a constructor to ` LdapAuthenticationProvider ` and updated related tests in ` LdapAuthenticationProvider ` and ` LdapAuthenticationProviderTests ` to ensure that
updated the retrieval of the retrolambda jar path from " / com / codename1 / builder / codename1 / builder / codename
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to improve code readability and maintainability
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` to improve code clarity and ensure proper handling of
added handleNullResult method to JMESPathExtractor to handle null results in JMESPathExtractor . java to ensure proper handling of null
updated import statements and added checks for usernames in AuthorizeTag . java to improve code robustness and prevent potential null pointer exceptions
updated test assertions for logout URLs in multiple test files to improve code readability and maintainability
cloudstack - 10225 : fix typo in vmsnapshotmanagerimpl . java
updated annotation handling in RobolectricTestRunner and Config classes in RobolectricTestRunner to improve clarity and maintainability of configuration handling
updated JettySolrRunner to use SocketConnector instead of SelectChannelConnector in JettySolrRunner . java to ensure compatibility with the latest Jetty
refactor HiveAlterHandler to use a new method ` checkPartialPartKeys ` for partition keys to improve code readability and maintainability by
added a new boolean flag ` ENABLE _ ICON _ IN _ TEXT _ HEADER ` to the ` FeatureFlags ` class to enable the icon
updated the condition from ` isComponentActive ` to ` isComponentActive ` in ` SimulationStatus . java ` to improve code readability and
replaced SharedBlockingCallback with Callback . Completable in multiple classes to improve code readability and maintainability by using a more descriptive method
added workspace listener functionality to PreviewControllerImpl and updated PreviewUIController to handle workspace updates to enhance user experience by allowing updates to the workspace
updated conditional checks in ReflectionFactory , ReflectUtil , and related classes to ensure only non - anonymous classes are processed
refactor TransportHelper class to improve code organization to enhance maintainability and readability of the code
updated file path formatting in CatalinaAcegiUserRealm . java to improve code readability and maintainability
updated log statements in AmbariServer . java for better clarity to improve code readability and maintainability
added null checks for for ` forNode ` and ` modify ` in ` JSONWriter . java ` to ensure robustness by preventing potential NullPointerException
updated method signatures in SliderAppsViewControllerImpl . java for consistency and clarity to improve code readability and maintainability by using a more de
added a condition to check if the backgroundManager is attached before attaching it to ensure that the backgroundManager is only attached when it is not attached
updated tab settings in AllAppsTabbed , Launcher , and Workspace classes to ensure proper tab positioning for better user experience
added null check for the URL in BaseDataSource and added a new test for TypoPostgresUrl in SimpleDataSourceTest to ensure proper error handling
updated PebbleModuleTest . java to include JRE for JRE support and updated PebbleTemplateEngine initialization to ensure compatibility with new
added a new EditNameDialog to manage directory creation and deletion in FileDisplayActivity to enhance user experience by allowing users to dismiss directories
added ` actionToggleBarBorders ` and ` barChartActivity ` classes for handling action and dataset borders to ensure proper rendering of chart data
updated the SSL URI from " www . okcoin . com " to " www . okex . com " in OkCoinExchange . java to
[ jbrules - 2424 ] fix test that fail on the ci server
replaced FileChannel . open ( path ) with SeekableByteChannel and modified byte reading logic in BytesAndLines . java and BytesAndLines . java to improve
refactor getFlattenFieldTransferPair method to use FieldReference instead of FieldReference in FlattenRecordBatch . java to improve code readability and
renamed ` mockHandler < T > ` to ` mockHandlerImpl ` across multiple files to align with the new naming convention for better clarity and consistency
[ hotfix ] fix checkstyle violation in serializationconfigurationparser . parseandregister
added a heap limit setting for debug devices in QuickstepProcessInitializer . java to improve performance by reducing memory usage during debugging
refactor sumWithCompensation method calls in Collectors . java for clarity to improve code readability and maintainability
[ log4j2 - 1343 ] fix test that fail on linux
refactor error handling in PrecompactedRow . java to improve code readability and maintainability
updated the return statement in ICC _ Profile and ColorConvertOp classes to use ` 0xffff & 0xffff & 0xffff & 0xffff & 0
added a new ` MeterRegistryLifecycle ` bean to manage meter registry lifecycle to enhance the monitoring capabilities of the meter registry in the application
updated logging level from warn to info in ConfigurationUtils . java to improve logging granularity and reduce log verbosity
added test cases for certificate generation in CertificateFactoryTest . java to ensure proper handling of CertificateExceptions during certificate generation
camel - 15836 : simpletokenizer : fix a bug where the expression be not a binary
refactor onTabUnselected method in EditorActivity and IDEEditor classes to improve code readability and maintainability by reducing duplication
updated error message in AccessLogValve . java to include the user ' s name to enhance error logging by including the user ' s name for
updated ogreSkinningTest , SkeletonModelGpuSkinningTest , OgreXmlLoader , and SkeletonModelViewer to
removed the throw statement from the createOrThrow method in DefaultProjectFilesystemFactory . java to simplify the method signature for better readability and maintainability
added @ Deprecated annotation to UpgradeResponse . java to indicate that these methods are outdated and should no longer be used
added support for the " dtsout " option in JSweetCommandLineLauncher and JSweetTranspiler classes to enable dynamic generation of
[ hotfix ] [ stream ] add test for kinesisfetchtimeout ( )
added " . html " to the timestamp in StreamingDataflowWorker . java to improve clarity and consistency in timestamp formatting
increased the maximum number of METASTORESERVERMAXTHREADS from 100000 to 1000 in HiveConf . java to allow more time for the metastore
changed the return type of the onTaskSnapshotChanged method from void to boolean in RecentsModel . java to enable the method to return a boolean
changed the shadow radius from mMaxShadowRadius to shadowRadius in SwipeUpAnimationLogic . java to ensure the correct shadow radius is set for
added a test for chaining and aggregation in ChainParserTests . java to ensure that the chaining and aggregation functionality works as expected in the message
updated loop condition in MarketSellAssetActuatorTest . java to improve clarity and correctness of the loop logic
[ gr - 16186 ] fix the check for interactive source in polyglotcontextimpl .
added a null check for previousCachedFilePath in CreateKeytabFilesServerAction . java to prevent potential NullPointerExceptions when previousCachedFilePath is null
added DisplayController import to LauncherPreviewRenderer . java and updated WindowManagerProxy . INSTANCE to include DisplayController . INSTANCE to enhance functionality by allowing
removed unnecessary checks for root directory in MetalFileChooserUI and SynthFileChooserUIImpl to streamline code for better readability and maintainability
updated screen size retrieval from getToolkit ( ) to Toolkit . getDefaultToolkit ( ) in LooksFrame . java to ensure compatibility with the current Toolkit
updated the type of the ` recognise ` method in ` TensorflowRESTCaptioner ` and ` TensorflowRESTRecogniser `
added unit tests for fetching results with factory expressions in JPASQLBase . java to improve test coverage and ensure correct behavior of entity retrieval
removed unnecessary drag index calculation in FreeformFinSetConfig . java to clean up the code and improve readability
updated moe version from " 1.1 . 2 " to " 1.1 . 0 " to ensure compatibility with the latest features and bug fixes
updated error message from " canot " to " constant cannot set call value " and added program . spendAllGas ( ) to enhance user
updated error message formatting in multiple Java files to improve clarity and consistency in error message formatting
added a @ Deprecated annotation to Weights . java to indicate that the Weights class should no longer be used
refactor registration logic in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to improve code readability and maintainability by reducing duplication
added @ Hint annotation to AndroidAppModularityDescription and corresponding tests in AndroidGraphEnhancerArgs and AndroidBinaryModularIntegrationTest to ensure
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable center pages vertically based on user
[ hotfix ] [ table - common ] fix a typo in migrationrequestoperation
rename ` ipAddress ` to ` BASE _ URL ` across multiple files to improve clarity and consistency in naming conventions
updated WSFederationClaimsReleasePolicy and WSFederationClaimsReleasePolicyTests to use resolvedAttributes instead of resolvedAttributes to improve
added methods to create and process database tables in TestJdbcWithMiniLlap and LlapBaseInputFormat to support database creation and query execution for
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure correct parsing and deparsing of SQL
refactor copy mode handling in ConsoleActivity . java to improve code readability and maintainability by encapsulating copy mode logic
refactor XML output handling in TestCommand . java to use a try - with - resources for better resource management to improve resource management and ensure proper
camel - 14284 : added null check for exchange in the aggregation strategy to avoid npe
camel - 14284 : camel - log4j2 - use exchangeexception instead of exchangehelper . createexceptionmessage ( message , cause )
[ java ] move basic configurator and socketmin from logback to logback .
added a check for PHI _ NODE in TypeQualifierDataflowAnalysis . java to ensure that the targetVN flag is only checked when the
removed unused import of SharedStringSource in TestXSSFRichTextString . java to clean up the code and improve readability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to enhance the functionality of the ` invokeMethod ` method in the
refactor BoxAndWhiskerDataset and HistogramDataset classes to improve code organization and maintainability
[ hotfix ] [ test ] updated ReadableWritableConfigurationTest to use JUnit 5 and updated annotations in ReadableWritableConfigurationTest . java
updated NormUpdate and CoreDescriptor classes to use static methods for field comparisons to improve performance and readability of the code
changed the access modifier of IndexFileNameFilter from public to private to restrict access to the constructor and enhance encapsulation
fix ifstatementtest to use ifstatementexpression instead of ifstatementexpression
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
replaced GsonBuilder with a new nullSafe method in TypeAdapter and StreamingTypeAdaptersTest classes to improve code readability and maintainability by
updated the size of BundledDistributionTest from 12 to 13 in BundledDistributionTest . java to reflect the correct number of entries in the size
added a new file ` EXIFReader . java ` that implements an EXIFReader class to handle image thumbnails like compression and compression to facilitate
[ cloudwatch ] fix nullpointerexception when batch to standardunit be unknown
( chore ) camel - pmml - applypmml : set result code to error - 3
updated error message formatting in FluentProtocol . java to include a new message for repeated CounterCurrencyTransferStartedMessage to improve clarity and accuracy of error messages
added a check to prevent unnecessary processing when the bar is not visible to improve performance by avoiding unnecessary processing when the bar is not visible
fix aarch64 backend to handle branch target out of bounds exception
added a try - finally block to initialize the JDKLogManager and modified the XRLogManager initialization logic to ensure proper resource management and
added a ` find ` method to ` TicketCatalog ` , ` DefaultTicketCatalog ` , and ` DefaultTicketCatalog ` , and ` Hazel
refactor SSL connection handling in TestSSL . java for improved readability and maintainability to enhance code readability and maintainability by reducing redundancy
[ hotfix ] [ runtime ] fix deadlock in sortmergeresultpartition
updated the ` Read ` and ` Write ` constructors in ` JmsIO . java ` to use ` null ` instead of ` Read `
updated PluginHandleController , PluginHandleDTO , and PluginHandleDO classes to include type parameter for plugin IDs to enhance functionality by allowing sorting of
updated span creation logic in DefaultSpanCreator , SleuthAdvisorConfig , and SleuthAdvisorConfig to ensure the span is created
added cocoatouch glkit color and depth formats to IOSApplicationConfiguration and IOSGraphics classes to enhance compatibility with cocoatouch
refactor login tests to use attemptLogin method to improve code readability and maintainability by encapsulating method calls
added checks for ` handle ` in ` JniUtils . java ` and ` handle ` in ` JniUtils . java ` to ensure proper
refactor lock retrieval logic in SynchronizationStatistics . java to improve readability to enhance code readability and maintainability
refactor Implements and ShadowPicker classes for improved clarity to enhance maintainability and readability of the codebase
refactor HttpClientOptions and TransportClientConfig to use a dedicated method for creating HttpClientOptions to improve code readability and maintainability by encapsulating
updated type checks in DynamicStruct , SolidityFunctionWrapper , SolidityFunctionWrapper , SolidityFunctionWrapper , and Solidity
updated ` text _ align ` and ` font - size ` properties in ` InlineLayout . java ` and ` FontUtil . java ` to ensure
added properties to CopyStep constructors and its constructors in CopyStep and CopyStepTest to enhance flexibility in handling different file paths
fixed - RedissonsSemaphore . acquire ( ) should use ' publish ' instead of ' acquire ( ) '
camel - 14284 : fix camel - load - balance test to work with routecontextprocessor
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` and ` BuildTargetParser ` to use ` FlavorParser `
replaced ` String ` with ` ByteString ` in ` WitnessScheduleStore . java ` and updated related methods to use ` ByteString ` instead of `
added a conditional check for empty results in TestElementsAnnotatedWith . java to ensure that results are only logged when no results are present
refactor ConcurrentLinkedQueue handling in ConcurrentLinkedQueue . java and introduce a new class RemoveLeak . java to improve code readability and maintainability by
added a boolean parameter ` addSpecialTokens ` to ` encode ` and ` encode ` methods in ` HuggingFaceTokenizer ` to enhance flexibility in
[ hotfix ] [ runtime ] fix bug in taskmanagerservice . getresourceprofile ( )
refactor chunk data handling in LoadSingleTsFileNode to use AlignedChunkData for consistency to improve code readability and maintainability
added a new constant ` KEY _ SESSION _ STORAGE _ CONTEXT ` and updated ` DuoSecurityMultifactorWebflowConfigurer ` to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42132 : fix
added a constructor to TypeAdapter and updated warnings in ReflectionAccessTest to ensure compatibility with Java 17 and improve code clarity
refactor event handling in Debugger . java and SuspendedEvent . java to handle KillException and prepareKill to improve error handling and ensure proper
refactor AntPathRequestMatcher class to improve code readability to enhance maintainability and facilitate future updates
removed null parameters from createResourcePolicy method parameters in multiple classes to simplify the method signature and improve code readability
added null check for _ deflaterEntry before releasing it to prevent potential NullPointerExceptions when _ deflaterEntry is not initialized
added JUnit @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper lifecycle management of test execution
updated MD5 checksum calculation to use Normalizer for normalization to ensure proper handling of unknown characters in MD5 checksums
refactor command handling in Example . java to improve null safety to enhance code robustness and prevent potential NullPointerExceptions
make keylistener final to avoid npe
replaced ` @ SuppressWarnings ( " unchecked " ) ` with ` dbDoc ` in ` MongoTemplate ` and added a new test for saving JSON
added a method to check if an IP address contains multiple remote addresses in the RequestUtils class to ensure that only valid remote addresses are processed
replaced ` String ` with ` ObjectBuilder ` in ` JsLibrary . java ` and updated method signatures in ` JsLibrary . java `
refactor CookieManagerTest and UnmodifiableMaps to use a static method for retrieving the host address to improve code readability and maintainability by
refactor glyph handling logic in GlyphLayout and BitmapFontTest to improve code readability and ensure proper resource management
added pauseOrResumeSplits method to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to handle multiple splits
added HIVESCRIPT _ OPERATOR _ ID variable to HiveConf and updated environment variable handling in ScriptOperator to enhance the flexibility of environment variable management
refactor ` getListedTermCounts ` method to use ` SimpleImmutableEntry ` for sorting terms to improve code readability and maintainability by
added a new file ` UseSeparateStepSizeAction . java ` for managing step sizes in the JOG plugin to enhance user experience by allowing
refactor FileMenuFilter to use a new method ` filterUnlock ` for file locking to improve code clarity and ensure immutability of file
hbase - 16297 table split : fix empty region name in hbase table split
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3l
pdfbox - 4071 : do n ' t close subdoc if it ' s not null
added fullscreen and exitFullscreen mode methods to GwtApplication and GwtGraphics classes to enhance rendering capabilities for fullscreen and fullscreen modes
updated the ` LoadingCache ` class to use ` URI ` instead of ` String ` in ` WebfingerIssuerService ` to improve flexibility
add a new test class SoulApacheDubboClientConfigurationTest for testing SoulApacheDubboClientConfiguration to
replaced Gdx . files . internal ( ) with a direct path resolution in SkinLoader . java to improve code readability and maintainability by
updated logging statements in ChainingAttributeReleasePolicy , OidcDefaultJsonWebKeystoreCacheLoader , and OidcDefaultJsonWeb
replaced calls to ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK
changed the package name from ` java . lang ` to ` java . lang ` in ` Compiler . java ` to improve organization and clarity of the
added handling for CodeExceptions in NullDerefAndRedundantComparisonFinder . java to ensure correct handling of exceptions in JSR subroutine
refactor DashRendererBuilder to use DefaultHttpDataSource instead of String to improve code readability and maintainability by using a more descriptive
added a configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` to
rename ` WritableConfig ` to ` Configuration ` across multiple files to improve clarity and consistency in naming conventions
added error handling for command execution in AutoScalingHandler . java to ensure proper error handling for command execution errors
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future updates
removed unnecessary byte array creation in InflateIn _ DeflateOut . java to simplify code and improve readability
added methods to remove cryptography restrictions in Utilities . java to enhance security by preventing unauthorized access to cryptography restrictions
fix entity . moveTonether ( ) and entity . moveTonether ( ) to avoid race condition .
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to verify page margins long text
added null check for vContext in Vectorizer . java to avoid potential NullPointerExceptions when accessing vectorization contexts
fix ( net ) : adjust the speed of the position . setspeed ( ) to double . 539957 .
hbase - 13232 disable the default metric user in cluster metrics ( sergey shelukhin via ashutosh chauhan )
added a ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test for the ` isEmpty ( ) ` method in ` JsonObjectTest `
added fields mUserPresent , mVisible , mVisible , mAttached , and mAttached in Launcher . java to ensure proper handling of receiver
refactor AsyncFile , HttpClientResponse , and NetSocket classes to improve code organization and maintainability
added params parameter to the ` zadd ` method in ` PipelineBase . java ` to include additional parameters in the ` zadd ` method
[ hotfix ] [ test ] fix test to use UTF - 8 encoding
replaced JUnit @ Ignore with TestAsyncMessagesPerformance in TestAsyncMessages . java to improve test reliability by enabling GC delays
added a ` getNodeOptional ` method to ` VersionedTargetGraphBuilder ` and modified ` VersionPropagatorBuilder ` to handle non - 
updated EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW values in TimeZoneProvider . java to improve accuracy of epoch
updated return value from 4 to HEADER _ SIZE in EscherBlipRecord . java and created a new TestOLE2Embeding . java
refactor row and column initialization in JSONParser . java to improve code readability and maintainability
replaced ` JavaType . ShallowClass . FullyQualified ` with ` Pattern . compile ` for type matching to improve code readability and maintainability
updated the DETAIL _ THUMB _ HEIGHT from 200 to 300 and added a new action for playback to enhance user experience by allowing playback
added a method to remove glyph information from the cache in CStrike and CStrikeDisposer classes to improve memory management by ensuring glyph information
do n ' t delete execution entity when terminate
camel - 15836 : camel - core - camel - xml - add support for camel - xml
updated the endpoint from " http : / / scottb . html " to " https : / / www . apereo . org "
add a new option to reset all preferences to default if it ' s invoked
changed access modifiers of ` source ` and ` slowResponseTime ` from private to protected in ` ThriftMetrics ` and ` ThriftServer ` classes to
added support for manual fan speed in the DanfossAirUnitHandler and updated channel handling in DanfossAirUnitHandler to improve
updated assertions in TestEndpoint . java to use hamcrest assertions for consistency to improve readability and maintainability of the code
removed unnecessary null checks in TweetActivity . java to streamline code by eliminating unnecessary null checks
added equals and hashCode methods in PartitionPanel , PartitionFactory , and PartitionFactory classes to ensure proper equality and hashing of PartImpl instances
added a check for the existence of the ROOT _ DISK _ SIZE in customParameters to ensure that the disk size is only set when it is
updated PredictionRowView to use PreferenceManager2 instead of mPredictionsEnabled in PredictionRowView . java to enhance user experience by allowing
do n ' t throw exception if crs be null or empty
added validValueParams and validPositionParams methods to LibrustzcashParam and LibrustzcashTest to ensure valid value and position parameters are
added a deprecate annotation to the IThrowableEntity class to indicate that the class is outdated and should not be used in future development
updated the initialization of ` x ` and ` y ` in ` NodeDataImpl . java ` to correct the positioning of the node data
changed the ` validateRefreshToken ` method to ` validateRefreshToken _ happycase ` and added a test for missing scopes in ` TokenValidationTest . java
replaced ` invocation ` with ` declaredDepsBuildResult ` and ` returnedStderr ` in ` JavacStep . java ` to ensure proper resource
updated the version string from " 0.0 . 1 " to " 0.0 . 2 " to reflect the latest release version
added a condition to check if the item type is DEEP _ SHORTCUT in LoaderCursor . java to ensure proper handling of shortcuts
added a ` hashCode ( ) ` method to ` TimeGranularitySpec ` and ` TimeGranularitySpec ` to ensure proper
changed access modifiers of ` BooleanWeight ` , ` DisjunctionMaxQuery ` , and ` DisjunctionMaxWeight ` classes from private to
added a boolean variable ` useProxyResponseCode ` and modified the ` useProxyResponseCode ` flag in ` HttpURLConnection . java ` to ensure
refactor AArch64Move and AArch64Move to use a scratch register instead of aarch64 to improve code readability and maintainability
cloudstack - 10225 : use reserved and used capacity instead of default value
added a null check for the max score in JSONResponseWriter and created a query in TestDistributedSearch to ensure that score queries are only executed when
updated audio recoder from 22050 to 44100 in AudioRecorderTest . java to ensure compatibility with the latest audio playback standards
updated the calculation of newOriginX based on subjectBounds _ m . getMinX ( ) and subjectBounds _ m . getMinX ( ) to ensure accurate
added null and empty check for Druid data source in DruidQueryBasedInputFormat . java to ensure data source is not null or empty before processing
updated ORIGINAL _ ID pattern to include ORIGINAL _ TYPE and updated regex patterns in CustomProperty . java and CustomPropertyTest . java
added a static method ` create ` to the ` Index ` class to enhance index creation functionality for better data management
removed the variable ` isBetweenGivenPeriod ` from ` checkLowerBoundaryPeriod ` and ` checkUpperBoundaryPeriod ` in ` Dates . java
updated the implementation of the ` mergedWith ` method in ` SchemaCompatibility ` and added a new test for union writer incompatibility to ensure compatibility
added support for multiple persistent attribute types in QueryUtils . java to enhance the handling of entity paths in the query processing logic
added synchronized block for spans in TestSpanHandler . java and modified return statements in TestSpanHandler . java to ensure thread safety when accessing
changed generic type parameters from ` Object ` to ` List < ? > ` across multiple classes to enhance type safety and prevent potential ClassCastExceptions
updated error handling in ViewContextImpl . java to use InvocationTargetException instead of Exception to improve logging granularity and provide more informative error
refactor OAuth2AccessTokenEntity class to improve code readability to enhance maintainability and facilitate future updates
updated error messages in ` SCBEngine ` , ` TestInvocationFactory ` , and ` TestSCBEngine ` , and ` TestSCB
added new project files for the Default - 1024w - 1366h @ 266h @ 266h @ 266h @ 266
replaced java . util . ArrayList with ConcurrentMergeScheduler in TestSearcherManager . java to improve concurrency handling during test execution
updated conditional checks in QTestUtil and GenericUDTFInline classes to handle cases where the session state is empty to improve robustness by preventing
refactor MapIterable , FJIterate , ParallelIterate , and ParallelIterate classes to improve code organization and maintainability
added a call to ` e . preventDefault ( ) ` in ` SpreadsheetKeyListenerW . java ` to ensure proper handling of key events
hhh - 13232 - fix osgi bundle to be able to register and unregister the sessionfactory service
updated timeout calculation in HikariPool . java and HikariPool . java to use connectionTimeout instead of elapsedTimeMs to ensure accurate
refactor voicecompiler to use non - packaged resource directory
updated file name handling in Compat . java and FileOpener . java to improve code readability and maintainability
changed the return type of ` row ( ) ` from ` Cell < T > ` to ` void ` in ` Cell . java ` to simplify
add a check for the specified port in the BesuCommand class to ensure that only valid port values are processed and provide clearer error messages
added mask generation functionality to WebSocketClient , WebSocketServlet , and updated WebSocketConnectionD12 initialization in WebSocketClient , WebSocketServlet , and WebSocketServlet to
refactor ` genUDTFPlan ` and ` genUDTFPlan ` to return a new Pair < RelNode > instead of a
added buckets and non - preferred node selection statistics to NodeScheduler , NodeSelectionStats , and NodeSelectionStats classes to enhance tracking of node selection statistics
added a new file ` Person . java ` that implements a string representation of a person to provide a structured way to retrieve the person ' s name
refactor owner pointer handling in CPlatformWindow . java to improve readability and maintainability of the code
added clock handling for fade animations in PlaybackOverlayFragment to enhance user experience by providing smoother transitions and smoother transitions
remove unnecessary markdirty ( ) call from world . updatecomparatoroutputlevel ( )
replaced the ` IMPL ` constant with ` IMPL ` in ` SegmentReader . java ` and added a try - catch block for security exceptions
replaced ` Cell ` with ` SwingUtilities ` for event firing in ` SudokuGridEvent ` to improve UI responsiveness and ensure proper event
refactor ` DefaultInetAddressAdapter ` and ` MiniGson ` classes to use ` Class < T > ` instead of ` InetAddress `
added methods for handling null values and string values in Series . java and corresponding tests in DataFrameTest . java to improve error handling for null values in
updated audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager .
updated bounds checks in GeoRelationUtils and TestGeoPointQuery to use Math . max for latitude and longitude calculations to improve accuracy in geometric calculations
cloudstack - 10284 : fix bug in disk offering fetching ( # 3385 )
add a cleanup method to the HazelcastTest class to ensure proper resource management and prevent potential memory leaks
added tests for encryption algorithms in BlockCipherTest . java to ensure robustness of cipher mode retrieval and error reporting
added filter for printing operations logs in QFileClient . java to enhance user experience by providing clearer logging information
added a new interface ` ChildIntroduction ` , ` InjectParentInterface ` , and ` ParentInterface ` , and ` ParentInterface ` to
added a null check for currentConnectionAddress in ProtocolProviderServiceSipImpl . java to ensure proper handling of connection addresses when the current connection address
replaced ` MathUtils . cappedAdd ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to improve code readability and
replaced ` NullPointerException ` with ` Files . delete ` in ` SetOutput . java ` to ensure proper resource management and prevent potential memory leak
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with ` SearchActivity . SearchActivity ` in multiple classes to
replaced ` this ` with ` this ` in ` SchemaCrawlerOptions ` and modified the ` toString ` method in ` GrepOptions ` to improve
add osgi configuration for webconsole to make it easy to configure the webconsole
added a @ Autowired annotation to the RepositoryIndexCreationIntegrationTests class to enable dependency injection for the PersonRepository
updated the stop method from Exception to InterruptedException in UIServer and TestVertxUIManual classes to improve error handling and clarify the purpose of the
refactor case statements in BlockCactus . java for improved readability to enhance maintainability and readability of the code
refactor mouse event handling in ThemeSelector . java to improve code readability and maintainability by encapsulating mouse event handling logic
added a new abstract class ` AbstractMinMulticastFlowControlRhsPadding ` and modified ` AbstractMinMulticastFlowControlRhsPadding `
added alignment parameters to the ` editStringAt ` method in ` IOSImplementation ` and ` IOSNative ` classes to enhance the functionality of
refactor StatTokSentAnnotator constructor to improve error handling to enhance code readability and maintainability
added a condition to check if the query context is distinct and updated related logic in ClusterIntegrationTestUtils . java and QueryGenerator . java to ensure that
graalvm : make ` stringSimilarity ` public and add ` getClosestLinkage ` method in ` OptionsParser ` and ` JNI
fix a typo in jsyntaxtextarea . loadproperties ( ) .
added null check for children before processing to avoid potential NullPointerException when children is null
added tokenPosition , currentPosition , and currentPosition in MessagePackParser . java and updated exception handling in MessagePackParserTest . java to improve
added a ` savedLocale ` variable and a method to set the default locale in ` AbstractSolrMorphlineTestBase . java ` to ensure consistent locale
refactor size assignment logic in LauncherFragment . java to simplify code for better readability and maintainability
added unit tests for MetricsReporter functionality to ensure correct functionality and error handling of metric registrations
removed unused import of ` typeCacheMap ` from ` OsgiServiceRegistry ` and ` CamelMockBundleContext ` to clean up the code and
added equals and hashCode methods in Rectangle class to ensure proper comparison and hashing of rectangle instances
[ hotfix ] [ test ] fix test failure in streamkafkaptest
updated strength checks in DSAParameterGenerator . java for clarity and consistency to improve code readability and maintainability
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and updated related methods in LlapUtil and LlapUtil
fix clientoutofmemoryhandlertest . testoutofmemoryhandlertest . testclientoutofmemoryhandlertest . testclientoutofmemory
updated ` setObjectId ` methods to use ` getCmoObjectId ( int ) ` instead of ` getCmoObjectId ( int ) `
added a new test method ` testWithDistinctScalarQuery ` to the ` DistinctTest ` class to ensure that the ` doInJPA
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravRetTask classes to improve code organization and maintainability
remove bindextensionadapter and unbindextensionadapter from managedkurnetesclient
replaced ` getSubtitle ( ) ` with ` Utils . getInfoRow ( ) ` in ` DetailsDescriptionPresenter ` and added a method to retrieve
updated TestAuthHandlerBoot , TestRSAProviderTokenManager , and TestRSAProviderTokenManager to use JUnit 5 ' s latest JUnit 5
refactor generateSummary method to handle IOException and TransformerException in BugCollectionBugReporter and XMLBugReporter classes to improve error handling and provide clearer
replaced ` false ` with ` bytePool . reset ( ) ` in ` TermsHash . java ` to simplify the reset process by eliminating unnecessary
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
added a new ` WindowSessionDelegateU ` class and implemented ` addToDisplayAsUser ` method in ` ShadowWindowManagerGlobal . java ` to
updated URL handling in UrlHelper . java and added a new test for forceAddSchemeHostAndPort in UrlHelperTest . java to ensure correct
updated conditional checks for OracleDatabase and MSSQLDatabase in AddForeignKeyConstraintGenerator . java to ensure compatibility with MSSQLDatabase and improve compatibility with MS
hbase - 13232 clean up the code and fix typo in replicationsource
fix ( pipe ) : add a filter event to the pipe emzuli .
refactor htmlidentifier to use a static variable for logging to improve code readability and maintainability by reducing duplication
[ hotfix ] [ table - common ] [ table - planner - blink ] [ table - planner - blink ] [ table
[ exoplayer ] add releaselock and verifycurrentthread ( ) method to listenerset and listenerset
updated the schema name handling in SequenceSnapshotGenerator to use CatalogAndSchema instead of CatalogAndSchema to improve clarity and maintainability of the schema name
updated color calculations in SpriteBatch , SpriteCache , LwjglDebugStarter , SpriteCache , and AlphaTest classes to
fixed - redissonconnection : use batchpromise instead of asyncjoin ( ) . join ( )
added baseCore variable and modified statistic year core handling in SolrLoggerServiceImpl . java to ensure that all relevant data is included in the statistic year
updated the ` launchTask ` method to accept a ` @ NonNull ` parameter and modified task handling logic in ` TaskActionController ` and ` Icon
updated MorfologikFilter and MorfologikFilter to utilize DictionaryHolder for resource loading to enhance flexibility in handling dictionary resources
updated sorting options from " stars " to " community " in GridFragment . java to ensure consistency in sorting behavior across the application
added imports for ListRow and ViewKt in CustomListRowPresenter . java to ensure proper visibility of header items in the user interface
refactor case handling in StressAction . java to improve resource management to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
updated case sensitivity checks in CatalogAndSchema and AbstractDb2Database to use DB2Database instead of iscasesensitive to ensure compatibility with DB2
added support for java time module in the jsr310 serialization process
updated import statement from apache . log4j . MDC to slf4j . slf4j . slf4j to ensure compatibility with the latest
updated type handling in PhiTypeResolver . java to use TypeBearer instead of TypeBearer to improve type safety and reduce potential runtime errors
rename CoinbaseTransactionStatusDeserializer to CoinbaseTransactionStatus instead of CoinbaseTransactionStatusDeserializer to improve code readability and maintainability
added ` getBuildTargetList ` method to ` BuckConfig ` , ` ProjectCommand ` , and ` ProjectCommand ` classes to allow users to
replaced ` System . gc ( ) ` with ` BusySpinIdleStrategy ( ) ` in ` Ping . java ` to improve performance
updated OCFile and FileList classes to use ContentResolver instead of ContentProvider to improve compatibility with ContentResolver for file management
refactor state checks in ReportPanel . java to improve code readability and maintainability
added null check for slotOwner in TestingLogicalSlot . java to ensure that slotOwner is not null to avoid potential NullPointerExceptions
added a new class ` RemoveCallsToSystemGc . java ` that removes calls to System . gc ( ) and runtime . gc ( )
remove the super ( ) method from the super ( ) method in multiple exception classes to streamline the code and improve maintainability
added a method ` setUIID ` to ` ScaleImageLabel ` to set the UIID of the image to ensure the correct icon is displayed
replaced ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve clarity and consistency in variable naming
updated argument checks in Main . java to include " - cp " for classpath , classpath , and " - cp " to ensure proper handling of additional
updated the link from " nodeprecated " to " nodeprecated " in avutil . java to improve clarity and maintainability of the code
updated the initialization variable from ` initialized ` to ` initialized ` in ` StorageService . java ` to ensure proper initialization of the storage service
refactor Test7196045 . java to improve code readability to enhance maintainability and facilitate future updates
updated density and decay values in ShaderParametersLightShaft . java to improve the visual quality of the shader parameters
added ` withState ` and ` withState ` properties to ` OidcConfiguration ` and ` OidcRedirectActionBuilder ` classes to
added null and nullable check for unique constraints in BaseTableDdl . java to enhance robustness by ensuring unique constraints are only added when nullable
added FileDataStorageManager to check for federated sharing in UsersAndGroupsSearchProvider and EditShareFragment to improve user experience by ensuring shared share
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to provide a way to check if document values are
[ java ] improve error message for unaligned source file .
added a new method ` intForEach ` to ` Int2ObjectHashMap ` and modified the ` SpecialisationGenerator ` interface to handle null values
do n ' t share scoreboards early if we do n ' t share scoreboards early .
updated method names from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository to ensure consistency in method
refactor MManager . java to use mtreeSnapshotThresholdTime instead of mtreeSnapshotThresholdTime to improve code readability and maintainability by
updated the calculation of the dotProduct method in VectorUtil . java and updated the test assertions in TestVectorUtil . java to improve the accuracy of
added a new constant IRREVERSIBLE _ THRESHOLD and a method to update the last confirmed block number in DynamicPropertiesStore to enhance the
refactor locale handling in GpsMainActivity and MainPreferenceActivity to utilize Systems for locale management to improve code readability and maintainability
added a new boolean variable ` mNewDbCreated ` in ` LauncherClings ` , ` LauncherProvider ` , and ` 
refactor error messages in BasicAclEntryAfterInvocationCollectionFilteringProvider to improve readability and maintainability to enhance code readability and maintainability
refactor conditional checks in Constants . java for better readability to improve code readability and maintainability
added thread handling in TestIndexWriterDelete . java to ensure proper handling of thread - related operations
changed the visibility of the closeDatabase method from private to protected in BaseLiquibaseTask . java to allow subclasses to access the closeDatabase method
updated import statements for BaseItemPerson and PersonType in FullDetailsActivity and BaseRowItem to use ModelCompat for better compatibility to ensure compatibility with
added attributes to the SVG element in BatikSVGDrawer . java to ensure proper attribute assignment for SVG elements
refactor error handling in ConsoleKeys . java to improve code readability and maintainability
added support for " WaitForResult " in AndroidImplementation and CodenameOneActivity in CodenameOneActivity and CodenameOneActivity to ensure results are
refactor HitQueue and SpanPositionQueue to use Supplier for better type safety to improve code readability and maintainability by using more descriptive
refactor widget description handling in WidgetCell . java to improve code readability and maintainability by encapsulating widget description loading logic
added a maximum attribute count check in Attribute . java to ensure that only registered attributes are registered to avoid runtime exceptions
move predicatestest to impl . predicates . impl . predicates . impl . predicates . impl . predicates . impl . predicate
camel - 15836 - camel - defaultheaderfilterstrategy : add case - insensitive flag to defaultheaderfilterstrategy
refactor inline handling in InlineLayout and Breaker classes to improve code readability and maintainability by using a more descriptive variable name
added null checks for ` mAvatarRadiusDimension ` and ` mAvatarRadiusDimension ` in ` ShareUserListAdapter ` to improve robustness by
refactored the ` shouldInstrument ` method to include a ` isFromAndroidSdk ` and ` parentIsInstrumented ` to improve clarity and
added a null check for association before source in BrowserContentPane . java to prevent potential NullPointerExceptions when accessing table columns
updated the ` memoryLimitedRedis ` method to use a ` getMemoryLimitFilePath ` method to improve code readability and maintainability by central
updated ` CxxDeps ` to use ` EMPTY _ INSTANCE ` instead of ` singleton ` in ` AbstractCxxDeps ` and ` Cxx
added a null check for the specified source under test dependency in JavaTestRule . java to improve error handling for invalid source dependencies
fix cross - version proxy for Minecraft 1 . x . mc . version
removed unnecessary conditional check for atIndex in StringUtils . java to simplify code and improve readability
updated BuckBlockJUnit4ClassRunner from 100ms to 500ms in TimeoutTest . java to allow more time for test execution to complete
added AssistContentRequester parameter to TaskOverlayFactoryGo and updated TaskOverlayGo constructor to include a new AssistContentRequester instance to
refactor witness address handling in VoteWitnessProcessor to use encode58Check for better readability to improve code readability and maintainability by using a
refactor DefaultMethodRegressionTests class for improved clarity to enhance code readability and maintainability
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the code
updated import statements in KafkaOutboundAdapterParserTests . java to use KafkaException instead of KafkaProducerException to ensure compatibility with the latest version of the
added a call to container . closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a ` clear ( ) ` method to ` ExceptionThrowingTaskletStub ` and ` FaultTolerantExceptionClassesTests ` to
[ ambari - 18147 ] improve error message when config be not find ( dsen )
added a ` Map < String , String > extraProperties ` parameter to multiple table configurations to enhance flexibility in configuring table configurations
added handling for in - progress segments in PinotRealtimeSegmentsManager . java to ensure only relevant segments are added to the list of segments
added a condition to check if touchable is disabled before proceeding to prevent potential null pointer exceptions when touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` to ensure that the build process
do n ' t throw RetryableHazelcastexception if cache config be null
refactor npm package installation checks in JSweetTranspiler and ProcessUtil classes to improve code readability and maintainability by encaps
added ManagedObject annotation to MBeanContainer and Destroyable classes in MBeanContainer , Destroyable , Destroyable , Destroyable , and Destroyable classes to
changed the conditional check from ` inAppBrowser ` to ` false ` in ` LongClickableSpan . java ` to ensure that the inAppBrowser
refactor condition checks in EspMilightHubDiscoveryService , EspMilightHubHandler , and EspMilightHubHandler to improve
updated conditional checks in Types . java and added new classes T6558559a and T6558559b . java and T65
updated player position handling in WorldEditListener . java and updated print statements in WorldEditListener . java to ensure accurate representation of player position information
camel - 14284 : camel - kafka should shutdown the consumer when the consumer be shutdown .
removed the ` examples ( ) ` parameter from the ` Schema ` class to simplify the code by eliminating unnecessary parameters
refactor thread interrupt logic in AgentRunner . java to improve readability and maintainability to enhance code clarity and ensure proper handling of thread interruption
removed unnecessary dimensions and results from DefaultAggregationLoader , PinotDataSourceDimensionFilters , PinotDataSourceDimensionFilters , and PinotDataSourceDimensionFilters to
updated the condition for shards in FacetComponent . java to improve code readability and maintainability
replaced LinkerProvider with CxxPlatforms . getParseTimeDeps in RustBinaryDescription . java and RustLibraryDescription . java to
added ` name ` and ` name ` properties to ` JdbcAuthenticationProperties ` , ` NtlmProperties ` , and ` NtlmProperties
updated print statements in CFGPrinterObserver , IdealGraphPrinterDumpHandler , IdealGraphPrinterDumpHandler , and IdealGraphPrinterDumpHandler
refactor scan logic in BaseQueryPlan and QueryServices classes to use a new constant for small scan threshold to improve code readability and maintainability
refactor RetryGatewayFilterFactory to use routeId instead of routeId in RetryGatewayFilterFactory . java to improve code readability and maintainability
replaced calls to ` redisplay ( ) ` with ` callWidget ( ) ` in ` LineReaderImpl . java ` to improve code clarity and
updated method names from ` onOverviewShown ` to ` showForOverviewIfNeeded ` across multiple classes to improve code readability and maintainability by consol
updated null checks in CheckIndex . java and added a new test for deleteAllPointDocs in TestPointValues . java to improve code readability
updated the publish method from ' true ' to ' updateLastState ' in ZkController . java to improve state management by allowing updates to the
updated string LIST _ VALUES formatting in MetastoreDirectSqlUtils . java to ensure proper formatting of string LIST values in SQL queries
removed the addition of a null value in SpliteratorCollisions . java to ensure proper handling of null values in the SpliteratorCollisions class
Added text condition checks to the ` Condition ` class and implemented ` textConditionIsCaseInsensitive ` and ` exactTextCaseSensitive ` methods in `
removed redundant loop statements in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
added ` forwardOnlyFetchSize ( ) ` method to ` OrmQueryEngine ` , ` CQueryEngine ` , and ` DefaultOrm
add a check for a closed channel exception in the HttpServerMultiplexChannelHandler class to ensure proper handling of closed channels and improve error handling
pdfbox - 4071 : use the size of the bead list instead of the size of the list
added support for rounded corners on Windows in QuickstepAppTransitionManagerImpl . java to enhance user experience by allowing rounded corners on Windows
refactor background and background handling in DesktopTaskView to use View instead of ShapeDrawable to improve code readability and maintainability by centralizing background
updated properties initialization in UpstreamCheckServiceTest . java for improved clarity to enhance code readability and maintainability
updated conditional statements in AbstractSession . java and AbstractSessionManager . java to improve code readability and maintainability
updated lock retrieval logic in ZooKeeperHiveLockManager . java to return the locks object instead of throwing an exception to improve error handling and
refactor multiple Java files to improve code organization to enhance maintainability and readability of the project
added a conditional check for ` containsCustomData ` in ` FileTextureArrayData . java ` to ensure that MIPmap generation only occurs when
updated test assertions in DefaultMaskingFormatterTest to use newlines instead of newlines to improve readability and maintainability of the test
added a boolean property ` selectable ` and ` isSelectable ( ) ` and ` setSelectionToNothing ( ) ` to the ` List ` class
added a check for zero values in LlapArrowBatchRecordReader . java to ensure proper handling of zero values in the LlapArrowBatchRecord
updated the ` PolicyContext ` class to use ` File . separator ` instead of ` $ { / } ` in ` PolicyContext ` to improve
replaced Set < Query > with List < Query > in FieldQuery . java to improve performance by utilizing a more efficient data structure
refactor TLSRestrictions class for improved readability to enhance maintainability and facilitate future updates
( chore ) camel - kafka : fix thread leak in kafkamanager . submit ( )
added a new parameter ` ignorableNodeValues ` to the ` assertNodeStateProvider ` method and modified the ` assertNodeStateProvider ` method to
added a lock file in RocksdbMavenPomCache . java to ensure proper resource management and prevent potential memory leaks
updated the initialization of ` standaloneServerFactory ` to use ` InetSocketAddress ` instead of ` NIOServerCnxn . Factory ` to ensure
added a new method ` getResponse ` to ` RestClient ` and implemented a ` RestResponse ` method in ` RestCallSpec ` to improve error
updated the way segmentTarURIs is retrieved in IngestionUtils . java to ensure that the segmentTarURIs array is
updated loginStudent calls from ` TestProperties . TEST _ STUDENT2 _ ACCOUNT ` to ` TestProperties . TEST _ STU
added null checks for ` mCurrentItem ` in ` EnhancedBrowseFragment ` , ` StdBrowseFragment ` , and ` StdBrowseFragment
increase the number of strings from 500 to 100 in TestSpecialOperations . java to allow more time for the number of strings being processed
refactor wkbattributeio to use ByteArrayInStream instead of ByteArrayInStream to simplify code and improve readability
updated the method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in method naming
added a method ` isDirectSubstate ` to check if the transition has a direct submachine state to improve state management and ensure proper state management
added handling for ListMultimap and SetMultimap in MultimapSubject and corresponding tests in MultimapSubject . java and MultimapTest . java to ensure
added JoinOperation interface to the PostJoinOperation class to enhance the functionality of the PostJoinOperation class
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to verify the behavior of the
added exception handling for JMSException in the destroyDurableSubscriber method in AMQ5035Test . java to ensure that the destroyDurableSubscriber method
refactor AvaticaDatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
added @ DurationCapable annotations to MongoDbConnectionProperties and MongoDbConnectionFactory to enhance flexibility in managing connection durations
updated the type of the createAudioMediaFormat method to use the getMediaService ( ) method to improve code readability and maintainability by using
refactor filter handling in FacetProcessor to use a boolean variable for applied filters to improve code readability and maintainability by encapsulating
added a new constant ` TIMEOUT _ HANDLER ` and modified ` IdleState . WRITER _ IDLE ` and ` TIMEOUT
changed the variable ` mQuickStepStartingRotation ` from - 1 to ` QUICKSTEP _ ROTATION _ UNINITIALIZED ` to
updated log statements in XPathBuilder . java and XQueryBuilder . java to improve readability and maintainability of log messages
fix ( NNDataSet , NNDataSet , NNDataSet , NNDataSet , NNDataSet , and ClauseTest ) to use
add test case for escaped back slash ( # 1751 )
added a null check for the ` atlas ` property in ` AtlasTmxMapLoader . java ` to ensure that the ` atlas `
camel - 15836 : remove property placeholders helper , which be no longer need .
refactor BlockchainTest and KafkaTest to use levelDbDataSource . closeDB ( ) instead of ReceiveSource . BlockchainTest . java to
refactor ` getLines ` method to use ` List < String > ` instead of ` String [ ] ` in ` CoreMarkdownNodeRenderer `
updated import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code readability and maintainability
replaced ` ImmutableList ` with ` List < Object > ` in ` ProjectableSQLQuery ` , ` SQLBindings ` , and ` AbstractSQLClause
added support for OpenJDK VM names in VirtualMachine . java to enhance compatibility with OpenJDK environments
added a keepAlive flag to the baseUrl setting in ReactorClient . java to ensure that the base URL is properly keepAlived in the reactor client
replaced ` ` a _ position ' ' attributes with ` POSITION _ ATTRIBUTE ` in ` MD5Renderer ` and ` ObjLoader `
camel - 14284 : camel - default - camel - spring - boot : add a property component to the default camel context
refactor account retrieval logic in UnfreezeBalanceActuator . java to improve code readability and prevent potential null pointer exceptions
updated version from 0 to 1 in XMPPServer . java to reflect the latest release status
replaced direct calls to ` t ` with ` t . unannotatedType ( ) ` in ` Types . java ` to improve clarity and
refactor assertions in StorageGroupProcessorTest to improve readability and maintainability to enhance code readability and maintainability by reducing redundancy
updated import statements to include " environments " in various classes to ensure compatibility with the latest Jetty Ee10 environments
added a call to ` params . waitbeforestart ` in ` FFMpegVideo . java ` to set the wait before starting to
removed the ` skipCorrupt ` parameter from the ` GenericColumnVectorProducer ` and ` OrcEncodedDataConsumer ` and ` OrcEncodedData
refactor AccessorsTest to use JUnit ' s Assert class for better readability and maintainability to enhance code readability and maintainability
added a new method ` CiTargetMethod ` to ` GraalCompiler ` , ` LIRGenerator ` , and ` LIRGenerator ` to
added ` @ ConditionalIgnore ` annotations to ` DynamoDbTicketRegistryTests ` , ` BaseAuthenticationRequestRiskCalculatorTests ` , and ` Base
fix itemfootat . gettop ( ) to use block water instead of block water .
updated the return statement in Directory and RAMDirectory classes to improve clarity and consistency in the string representation of the lock factory
removed the allowExperimentalOptions method from the Launcher class to simplify the code and improve readability
added methods for ` then ` and ` then ` in ` BDDAssertions . java ` to enhance assertion capabilities for path assertions
updated HostPort initialization to use ` hostField ` instead of ` hp ` in ` ForwardedRequestCustomizer ` and ` ForwardedRequestCustomizer
updated log level from debug to warn for Kubernetes config files to improve logging clarity and provide clearer warnings for missing Kubernetes
added handling for OCFile cancellation in FileUploadService and updated upload status handling in UploadListActivity to improve user experience by allowing users to cancel
added ProviderInstaller class and updated TerminalManager to use ProviderInstallListenerWrapper instead of ProviderInstaller to improve provider installation and error handling in the application
replaced Span . SPAN _ ID _ NAME with TraceMessageHeaders . SPAN _ ID _ NAME in StreamEnvironmentPostProcessor . java and Stream
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig instead of MD5SUM , MD5SUM , and ORDEREXECUTED ASC to
hhh - 16464 - fix the issue where the schema be not select from the database .
fix ( core ) : fix checkstyle violation in internalpartitionserviceimpl . java
added error handling for scheduling state checks in ExecutionScheduleManager and ExecutionSchedulerImpl classes to ensure proper scheduler state management and provide clearer error messages when
replaced ` toString ( ) ` with ` isInlineTable ( ) ` in ` BoxBuilder . java ` to improve code readability and maintainability
updated assertion statements in StatisticMap . java for consistency to improve code readability and maintainability
updated the return value of getStagedRectSlideEnd from 383 to 500 in TabletSplitToConfirmTimings . java to reflect the
updated button settings from " Random " to " commandmode . name " in WaveInfoDialog . java and PlacementFragment . java to utilize
updated the condition in BukkitMain to include a plot area in the plot area check to ensure that the plot area is not uninitialized before proceeding
added a new test method ` setTouchExplorationEnabled ` to ` ShadowAccessibilityManagerTest ` and updated listener handling logic in ` ShadowAccessibility
pdfbox - 5328 : fix a bug in cmapsubtable . getcharactercodetocharactercodelookup ( )
do n ' t use stringproperty instead of stringproperty . getPropertyAsString ( ) .
refactor NPOIFSFileSystem initialization to use POIFSFileSystem . create ( big ) instead of FileOutputStream to improve code readability and
added imports for PS and PlotArea in Move . java to improve code clarity and ensure proper handling of plot areas
updated version matching from " version " to " version " in TestWebHCatE2e . java to ensure compatibility with the latest version requirement
updated the condition for count from 0 to 1 in Filters . java to ensure that the count does not exceed the expected range of events
fix kafkaconsumerprocessor # getconsumerid and clientId in kafkaconsumerprocessor # getconsumerid ( )
added IsolatedClassLoader import and exception handling in JavacCompiler . java to improve error handling by throwing a specific exception when executing javac
refactor : add a repaintNeeded flag to drawlist . closeoptions ( ) method .
camel - 15836 - camel - spring - batch - java : fix nullpointerexception in camel - spring - batch - java
added a method ` isAnimationFinished ` to check if the animation completes in ` Animation . java ` to provide a way to check if the
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` in ` LoginInfoEndpoint ` to verify the functionality of
added null check for otherUrl before setting refreshing text in TimeLineCursorAdapter and HomeFragment to prevent potential NullPointerExceptions when otherUrl is
updated the ` stopEditing ` method from ` newValue ` to ` newValue0 ` in ` RadioButtonTreeItem ` and ` EquationWeb `
refactor ObjectHashSet class to improve code readability to enhance maintainability and facilitate future updates
refactor conditional checks in DataUtilities . java to improve readability and maintainability to enhance code readability and reduce boilerplate code
bugfix : allow for deletion of enchanted books ( mc - 12770 )
added unit tests for async resource retrieval and put functionality in the microprofile server
rename ` target - flat - headers . hmap ` to ` target - user - headers . hmap ` in ` ProjectGenerator . java `
added logging for invalid and invalid addresses in MailService . java to improve logging clarity and ensure proper handling of send failures
replaced ` resetTaskItemView ` method with ` resetToEmptyUi ` in ` TaskItemView ` and ` TaskItemView ` classes to
added unit tests for partition retrieval functionality in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct behavior of partition retrieval with multiple size
added a semicolon to the FileListListAdapter class to improve code readability and maintainability
updated variable names from ArrayList to List in OCFile . java and OCFileListAdapter . java and OCFileListAdapter . java
updated the position of the removeViewInLayout method in BubbleBarView . java to correct the positioning of the view in the layout
replaced " org . eclipse . jetty . websocket . util . server . internal . " with " org . eclipse . jetty . websocket . util .
changed the default value of S3Request from true to false in S3Request . java to simplify the code by removing unnecessary parameter
added a null check before calling initializeComponents ( ) in JFXRadioButtonSkin . java to avoid potential NullPointerExceptions when timeline is not initialized
added error handling for invalid dewey numbers in DeweyNumber . java and introduced a new test for zero splits to improve robustness
added a static variable ` categorySetString ` and modified return statement in ` MwVolleyApi . java ` to replace " Category : "
updated assertion messages in WebSocketClientTest . java for consistency to improve readability and maintainability of test assertions
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader and TestVirtualWebappClassLoaderWeaving to ensure proper
removed redundant checks for mappedSuperclassClass in PersistentAttributeTransformer . java to simplify code and improve readability
pdfbox - 4071 : do n ' t throw exception if page label be not a number
added a new test class ` TestPorterStemFilter ` to validate the behavior of the ` TokenStream ` class to ensure the correctness of
modified the ` postBatchMutate ` method to accept a ` success ` parameter and modified the ` postBatchMutateIndispensably ` method to
updated package names from ` exlore . support ` to ` explore . support ` across multiple test files to align the project structure with the new
added synchronization to the active panel in ChatWindowManager . java to ensure thread safety when accessing the active panel
replaced ` Sys . touch ( ) ` with ` Sys . touch ( ) ` across multiple files to streamline code by eliminating unnecessary imports
updated the ` untrackedFiles ( ) ` method in ` HgCmdLineInterface ` , ` NoOpCmdLineInterface ` , and
camel - 14284 : camel - netty : fix thread safety issue in camel - netty
updated constructors in DirectionalLight , Vector3 , and PointLight classes to be final to ensure immutability and prevent unintended modifications to
updated width and height calculations in X11GraphicsConfig , WGLGraphicsConfig , and WGLGraphicsConfig classes to ensure non - negative dimensions are
added a ` toString ( ) ` method to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and ` Delegating
added a new class ` AnnoFilterTreeSet ` and implemented ` findAnnotatedClasses ` method in ` ClassFinder ` to enhance annotation processing capabilities
updated length handling in BytesColumnVector . java to improve error handling and maximize size of the smallBuffer to ensure proper handling of overflow scenarios and
refactor assertions in WriteBehindMapStoreWithEvictionsTest to use a new AssertTask to improve readability and maintainability of the
added ` @ Override ` annotations to ` uninstallListeners ` methods in ` MotifScrollPaneUI ` and ` XTextAreaPeer ` to
[ ggb - 241 ] fix the intersection of poly function in the same degree .
added a null check for the table before calling configureValue in SynthTableUI . java to avoid potential NullPointerException when table is null
added exception handling for ClassCastException in CustomChangeWrapper . java to improve robustness by handling potential ClassCastException during instantiation
replaced ` ConfigPathGetter ` with ` DistBuildConfig ` and updated ` DistBuildConfig ` and ` RecordingFileHashLoader `
refactor ` isDoubleEntryEnabled ` method in ` GnuCashApplication ` , ` GnuCashApplication ` , and ` Export
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests that are not ready for execution
changed the return type of ` doJoin ` to ` boolean ` across multiple classes to ensure that ` doJoin ` returns a boolean indicating success
removed the ` getAutodeps ( ) ` method from the ` JavaLibraryDescription ` class to simplify the code and improve readability
added FLAG _ ACTIVITY _ NEW _ TASK _ RESET and FLAG _ ACTIVITY _ NEW _ TASK _ TASK _ RESET
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable sorting functionality for query results
fix test for maven - apache - maven - apache and maven - apache - maven - apache
added a new file AffiliationTask . java to create a new AffiliationTask . java file to facilitate the creation of Affiliation
added error handling for invalid URIs in TagLibraryInfoImpl . java to improve robustness by providing clearer error messages for invalid URIs
changed access modifier of the buildUserProfileByClassCompleteName method from private to public to allow access to the method from other packages
refactor CacheKey class to improve array handling and update logic in CacheKeyTest to enhance code readability and maintainability by encapsulating
updated file type detection methods to use FileSystemProvider instead of FileSystems to improve compatibility with Java ' s file type detection mechanism
added a call to wsSession . close ( ) in TestWsWebSocketContainer . java to ensure proper resource management and prevent potential memory leaks
replaced ` VirtualDeviceParams ` with ` VirtualSensorCallback ` in ` ShadowVirtualDeviceManagerTest ` and added ` VirtualSensorCallbackDelegateReflector `
added a condition to check if the context is not removed from the session before execution before the context to ensure that the context is not removed from the
refactor InetAddress handling in NetUtil . java to improve clarity and correctness to enhance code readability and maintainability by using a more descript
replaced ` BUF _ SIZE ` with ` DEFAULT _ BUF _ SIZE ` in ` Zlib . java ` and updated the handling of deflate
added secure validation and improved error handling in KeyInfoReferenceResolver , KeyInfoReferenceResolver , and TransformXPath classes to enhance security by ensuring sensitive information
added a private boolean flag ` iconChangeListenerInstalled ` and modified the icon listener handling logic to ensure that the icon is only removed when it is initialized
added Russian language support to the Language class to enhance localization support for Russian - speaking users
hhh - 11717 - fix typo in basesqmtosqlastconverter
added a call to ` frameState . disableStateVerification ( ) ` in ` SubstrateGraphKit . java ` to disable state verification
added ` priorEnabledSdks ` and ` priorAlwaysInclude ` properties to ` RobolectricTestRunnerTest ` and ` TestUtil ` to
added system class loading for " org . slf4j . " in ViewClassLoader . java and updated test cases in ViewClassLoaderTest . java to
updated the condition in ChangePackaging to check for " jar " in MavenResolutionResult and added a new test for the removal of " jar "
updated file downloads in multiple test files to include " txt " extension to enhance test coverage for different file formats
added a call to clear the nk _ buffer _ clear in GLFWDemo . java to ensure that the nk _ buffer _ clear
rename ` setDefaultUnits ` to ` setPreferredUnits ` for consistency and clarity to improve code readability and maintainability by using a more descript
updated date formatting in DatePatternConverterTest to use UTC timezone to ensure consistent date formatting across different time zones
updated return statement in Terminator . java to improve code readability and maintainability
updated error messages for file URIs in FileSystem and LocalFileSystem classes to provide clearer error messages for invalid file URIs to improve user understanding of
fix a race condition in jabrefframe . gettrackednotification ( )
refactor FtpReconnectAttemptServerStoppedIT and FtpEmbeddedService to utilize Awaitility for connection counting to improve test reliability and ensure
updated KeyedProperties class to use ConcurrentSkipListMap instead of ConcurrentHashMap to improve performance and memory efficiency in keyed properties
added a ` ignore ` method to ` JavaUtilLog ` , ` Logger ` , and ` StdErrLog ` classes to track the presence of
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when runningTaskView is not initialized
removed unnecessary type casting in BukkitWorld . java to simplify code and improve readability
refactor image cleaning logic in PanelManager . java to improve code readability and maintainability
added MMapDirectoryFactory , SimpleFSDirectoryFactory , and SimpleFSDirectoryFactory , and SimpleFSDirectoryFactory , and SimpleFSDirectoryFactory to
added null check for ic before creating a new BaseColor instance to avoid potential NullPointerExceptions when ic is null
updated the assertion in QueryEqualityTest from " graphTerms " to " graphTerms " in QueryEqualityTest . java to ensure the test accurately reflects
updated the implementation of ExtendedOperatingSystemMXBeanImpl . java to improve performance and reliability of operating system management
added a ` installLeftCommands ( ) ` method to ` SideMenuBar ` and modified ` SideMenuBar ` to utilize ` leftCommands ` for
added a ` advanceWindowed ` flag to ` AppSettings ` and modified the ` setUpWindow ( ) ` method in ` TweetActivity `
added support for SybaseDatabase in the DropPrimaryKeyGenerator class to ensure compatibility with additional database types
refactor Client class to improve code organization to enhance maintainability and readability of the code
[ java ] notifyleaderready ( ) should reset the lastrecordingPosition , not the lastrecordingposition .
updated the ` invalidate ( ) ` method in ` BubbleTextView ` , ` CellLayoutChildren ` , and ` CellLayoutChildren ` classes to
added a return statement to the NearCachedClientMapProxy class to ensure the method exits early to avoid potential null pointer exceptions
refactor package - info . java files for improved clarity to enhance code readability and maintainability
added a method to shutdown the HTTP server in ListenHTTP . java to improve robustness by handling potential exceptions during server shutdown
camel - 15836 - camel - aws2 - s3 - aws2 - s3 - aws2 - s3 - s3 -
[ hotfix ] [ runtime ] use taskmanagershandler instead of parameter _ TM _ ID instead of parameter _ TM _ ID
added a method to drop non - existent keys in Upgrade226to227 . java to ensure that only non - existent keys
added a new test class ` TestThriftCLIServiceSecurity ` and modified password handling in ` TOpenSessionReq ` to ensure that the password is
added a private long maxEnergyLimit variable and updated energy limit assignment logic in VMActuator . java to improve code clarity and maintainability by
added a ` maxInMemorySize ` property and a ` getMaxInMemorySize ` method in ` HttpClientProperties ` and ` WebClientPluginConfiguration
refactor Cache class to improve code readability to enhance maintainability and facilitate future updates
added ` RunCucumberTest ` , ` StepDefinitions ` , and ` StepDefinitions ` classes to support Cucumber functionality in the project
added error handling for JSON parsing in TypeJsonUtils . java and updated test cases in TestArrayOperators . java to improve robustness by handling
removed unnecessary byte array appending in Utf8StringBuilderTest . java to streamline the code and improve readability
updated parameter handling logic in Params . java and added a new method ` isParamSet ` in RestInvocationHandlerTest . java ` to ensure
camel - 15836 - camel - circuit - breaker : allow to specify maximum number of output on circuit breaker .
updated assertions in TestIndexWriterExceptions to use maxBufferedDocs instead of maxBufferedDocs to ensure proper handling of buffered documents based on configuration settings
updated hashing methods in ComputeExopackageDepsAbi , HasAndroidResourceDepsAbi , and HasAndroidResourceDeps to use Sha1
removed unused enumValue and longValue methods from AsmRuntime . java to improve code readability and maintainability
added new biome tags for MANGROVE _ SWAMP , DEEP _ DARK , and DEEP _ DARK to enhance
refactor AsyncImageLoader to use ExecutorService for requestImagePool in PApplet . java to improve thread management and ensure proper handling of image loading
changed access modifiers of ` _ tableConfig ` and ` _ segmentPreloadExecutor ` from private to protected in ` BaseTableUpsertMetadataManager `
updated "   " and "          
updated comparison logic in AbstractSunSecureRule . java to use hasImageEqualTo instead of getImage ( ) to improve code readability and maintainability
camel - jbang - use -- repos instead of -- repos for camel - jbang
added checks for NaN values before processing scores in CrawlDbReader . java to improve robustness by handling NaN values more effectively
added a cleanup method to OnStartupTriggeringPolicyTest to ensure proper resource management and prevent memory leaks
updated focus handling in FilterConditionEditor and added window focus handling in FindAction to ensure proper focus behavior when the component is focused
[ hotfix ] [ test ] fix checkpointscleaner to clean up checkpointscleaner
added a new file ` XPathWhiteSpaceTest . java ` that includes a test class for XML parsing to demonstrate the use of XML schema tests for XML
add a check for empty hash in ` BonsaiPersistedWorldState ` and ` BonsaiWorldStateArchiveTest ` to ensure that
refactor FilledNewArrayInstruction class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] fix test timeouts in simplenetworktest . java
updated the return statement in OCFile . java to ensure that the parent path ends with a slash to improve code readability and maintainability by
added logging for the skin file loading failure in JavaSEPort . java to aid in troubleshooting the loading process of the skin file
updated LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to handle the dirty state of the LgoLevel2Update class
added a new constant ` UNDEFINED ` in ` Result . java ` and updated the return statement in ` TestStep . java ` to improve code
replaced PersistenceException with NullPointerException in TestTransactionCallback . java to ensure proper handling of null values in transaction callbacks
fix uploadjobmultipartoperation to work with JetServiceBackend
[ hotfix ] [ table - common ] fix exception in jobschedulerstoreimpl . recover ( )
[ fix ] summarylevels . of ( nodemodel ) : add ignorechilds method to summarylevels .
changed the visibility of the ` pos ` variable from ` volatile ` to ` sizeMask ` and added a new method ` ensureAvail `
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java files to temporarily disable tests that
replaced ` targets ` with ` endpoints . subList ( 0 , endpoints . size ( ) ) ` in ` StorageProxy . java ` to simplify the
updated parameter name from ` bufferedIo ` to ` advertiseUri ` in ` FileManager . java ` to improve code readability and maintain consistency in
updated TransformFunctionType methods to include " plus " and " minus " and " pow " in TransformFunctionFactory and TransformFunctionFactory to enhance functionality
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` , ` VariableElement ` , and ` package
updated RFC3280 in multiple Java files to ensure compliance with RFC standards for compliance
updated the version number from " 2 . 17 . 3 " to " 2 . 17 . 4 " in Recaf . java and SearchAnnotationVisitor
replaced ` HashMap < Integer , Integer > ` with ` SparseBooleanArray ` in ` ListActivity ` and ` NoteAdapter ` classes to improve performance
refactor conditional checks in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener . java and added a new test for absolute resource path handling in ConfigFileApplicationListenerTests . java to
updated ` PreviewPositionHelper ` to use ` mContext ` instead of ` deviceInsets ` in ` TaskViewSimulator ` and ` TaskThumbnail
[ java ] : fix election . newleadershipterm ( ) to not publish new follower .
updated assertions in PMDCoverageTest to use StandardErrorStreamLog in PMDCoverageTest . java to improve clarity and accuracy of test assertions
refactor byte counting logic in ByteArrayInputStream . java and add a new Skip class for skipping bytes to improve code readability and introduce a new Skip
refactor conditional checks in UpdaterTask . java to improve readability to enhance code readability and maintainability
changed the visibility of the MAX _ HEADERS constant from public to public in HeadersMessage . java and added a check for the size of the block
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to include the " rt . jar "
refactor connection handling in AbstractHandshakeHandler to improve code readability and maintainability to enhance maintainability and reduce boilerplate code
updated GranuleDescriptor , RasterLayerResponse , and GTDataStoreGranuleCatalog to throw IOException instead of IOException to improve error handling and ensure proper
added a conditional check for already committed responses in HttpChannel . java to ensure that error messages are sent only when the response is already committed
updated condition in HttpSession . java to include a conditional check for hold in pendingElements and connectionQueue to improve code readability and maintainability
updated fadeOutFakeTaskView method in HomeGestureTutorialController and added background color handling in SwipeUpGestureTutorialController to
[ terasology ] fix prefab serialization error when no component be present
updated ScimGroupBootstrap instantiation to include " internal . superuser " and " internal . superuser " parameters to enhance flexibility in managing external groups
updated thirtyDays variable in FreezeBalanceActuator and added a validation check for non - existent amounts in TransferActuator to ensure
updated path handling in FileResolverTestBase . java to use File . separator instead of ' / ' to ensure consistent path formatting across different operating systems
ggb - 271 fix a bug that could lead to a crash .
updated GpsMainActivity and AnnotationViewFragment to use session . getDescription ( ) instead of context . getDescription ( ) in GpsMainActivity and
added a conditional check for the number of pages in JsoupNonVisualRegressionTest . java to ensure that the test correctly verifies the number of
use androidnativebufferallocatorjme instead of androidbufferallocatorjme
refactor flag name handling in Main and PrimaryItem classes to improve code readability and maintainability
added a NOPMD comment to the method call in JDBCHistoryCache . java to improve code readability and maintainability
updated the condition to check for " ITEM _ USE _ GRANT _ SELECT _ REWARD " instead of " ITEM _ USE _
updated QueuePriorityTest and PriorityElement to use ArrayList instead of ArrayList in QueuePriorityTest . java and added a toString method in PriorityElement . java
updated AffinityApiUnitTest to use AffinityGroupDao for creating affinity groups to improve test reliability and ensure proper exception handling for invalid affinity groups
added null check for ` main . command ` in ` Main . java ` and modified conditional checks in ` Main . java ` to enhance error handling
updated LightOutputStream instances from ` new LightOutputStream ( ) ` to ` new LightOutputStream ( 5 ) ` in multiple classes to improve memory efficiency and
changed the visibility of the Scanned class from static to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` to ` ClassWriter . java ` and created a new class ` T8032819 . java `
replaced Assert . hasLength with Assert . hasLength method in Person . java to improve code readability and maintainability
added null check for file extension in VirtualFile . java to ensure robustness by avoiding potential NullPointerExceptions
removed the return statement from the continue statement in ContactRightButtonMenu . java to streamline the process of exiting the loop
[ hotfix ] [ table - common ] fix slotsharinggroupassignment # markcancelled ( ) in simpleslot .
refactor loop logic in InstallShortcutReceiver . java for improved readability to enhance code readability and maintainability
refactor PlainSocketImpl to use SocketImpl instead of FileDescriptor to improve resource management and ensure proper closure of PlainSocketImpl instances
added functionality to manage removed media items in BookmarkListRootFragment and MediaDetailPagerFragment to enhance user experience by allowing users to remove items from
updated log message from " in - view center point " to " in - view center point " in Actions . java to clarify the purpose of
added a new file ` bug4865918 . java ` to verify scrollbar block increment behavior to address bug 4865918 related to scrollbar
replaced VelocityEngine with VelocityEngine in ADKerberosOperationHandler . java to simplify the code and improve readability
updated import statements and added group trigger handling in QuestCommand . java to improve code clarity and ensure group triggers are displayed correctly
added a method to start the XML file chooser in the DatabaseAdapter and AccountsActivity classes to improve user experience by providing feedback when a file manager
added ` lombok . ToString ` annotation to PartitionChangeEvent and TbApplicationEvent classes to enable serialization and deserialization of PartitionChangeEvent and TbApplicationEvent
updated the configuration URI from " io : openhabcloud " to " io : CONFIG _ URI " in CloudService . java to improve code maintain
removed the setViewportComponent method from BrowserPanel . java to streamline the code by eliminating unnecessary components
refactor key handling in LwjglInput , ParticleEditor , and Layout classes to improve code readability and maintainability by standardizing
added a conditional check for indexMimeTypeParts in MoreIndexingFilter . java to enhance flexibility in handling MIME types based on configuration
added a regex pattern for author formatting in JSDoc . java to improve readability and maintainability of the code
updated metric names from " delta _ total _ databases " to " delete _ total _ partitions " in MetricsConstant . java and TestMeta
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and DrillHiveMetaStoreClient for database access
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap ` parameter and added error handling in ` LoginPageGeneratingWeb
updated date formatting in TCKChronology and TestUmmChronology . java to include Islamic Umm al - Qura Calendar
added support for Firefox in WebAudioWrapper . java to ensure compatibility with both Firefox and Firefox versions
added a ` appendInterceptor ` method to ` GrpcServerBuilder ` and modified ` InterceptorConstants ` in ` GrpcServerBuilder ` to
added default charset handling in Parser . java and updated table creation statements in TestCompatibility . java to ensure default charset is set for compatibility
removed redundant calls to kill ( ) in WriterRecordBatch , StreamingAggTemplate , and setOkAndReturn ( ) in StreamingAggTemplate
[ hotfix ] [ runtime ] fix typo in executiongraph
added ` hasFrom ` and ` withHasFrom ` methods to ` Delete ` , ` DeleteDeParser ` , and ` DeleteDeParser `
refactor ` SynchronizeFolderOperation ` to use ` isMultiStatus ` instead of ` isSuccess ` to improve code readability and maintainability
refactor RecipeScheduler and RecipeLifecycleTest to utilize a new method for checking applicable tests to improve code readability and maintainability by
updated log line formatting in LogAnalyser . java to ensure only valid characters are processed in log files
updated IntegrationTest to include environment variable " GOOGLE _ APPLICATION _ CREDENTIALS " in IntegrationTest . java and added GoogleCloudIT to
fixed - redissonsearch : use max exclusive instead of min exclusive
refactor license selection logic in CCLicenseStep . java to improve type safety and clarity to enhance code readability and maintainability
added a null check for ` ifcRoot . getGlobalId ( ) ` in ` IfcModel . java ` to avoid potential NullPointerException
updated comparison logic in OptionalAssert . java to use objects . getComparisonStrategy ( ) instead of actual . equals ( ) to improve accuracy of comparison
updated memory settings in NoNewLineParagraphCssApplier , ParagraphCssApplier , ParagraphCssApplier , and ParagraphCssApplier
added a new file TestArrayCopyToFromObject . java that implements a test method for array copying to ensure that ArrayStoreException handling is correctly
updated escape sequences for Python paths in BuckPythonProgram . java and BuckPythonProgram . java to improve code readability and maintainability by standardizing
[ java ] fix checkstyle violation in jp protocol
add a new ` ` visitallfiles ' ' parameter to the ` ` findfiles ( ) ` method .
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable to temporarily disable the test case due to
added a null check for the client ' s doRequest ( ) method in TestInternalInputBuffer . java to avoid potential NullPointerExceptions during request
replaced ` autoloadCall ` method with ` autoloadLocks ` in ` Environment . java ` and modified ` SplClassLoader . java ` to
updated server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to improve code clarity and maintainability
replaced ` BasicKrb5Test . java ` with ` OneKDC . writeJAASConf ( ) ` in multiple classes to ensure
updated Jsr250Voter to include jsr250AttributeFound and added a new Jsr250Voter class to
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability
added a constant for HS2 _ PROXY _ USER and updated sessionParams handling in ConnectionFactory . java to ensure proper handling of session parameters
camel - 14284 : camel - hive - camel - compression - add snappy codec to hdfs compression codec
added a sleep method to the HttpClientTest class to allow more time for tests to complete before proceeding with further operations
[ bug - 66286 ] fix bug where multi - cell formula can not be change in multi - cell
updated glyph offset calculations and modified text formatting in GlyphLayout . java and BitmapFontTest . java to ensure correct rendering of glyphs with multiple whitespace
updated Fabric8IstioIT . java to use File instead of File in Fabric8IstioIT . java to improve code
updated playback start and progress reporting in PlaybackController . java and Utils . java to ensure compatibility with TvApp ' s playback manager functionality
patch by jbellis ; review by jbellis for cassandra - 152
[ hotfix ] [ table - common ] fix maploader hitting eviction on initial load
updated the return statement in ResponseFlag . java to improve clarity and maintainability of the code
[ dspace ] fix default policy not work for non - collection .
refactor font reference handling in FontUtilities . java to use a SoftReference for better memory management to improve memory management and prevent memory leaks
changed prefHeight from 0 to 0 in Tree . java to ensure prefHeight is set to 0 to avoid potential null pointer exceptions during height calculations
[ drools - 4071 ] [ dmn ] improve error message for invalid dmn expression
removed unused import statements and modified the isVacant method in multiple classes to streamline code and improve readability by eliminating unnecessary dependencies
changed access modifiers of ` finishRunningRecentsAnimation ` method from private to public in ` TaskAnimationManager ` and ` OtherActivityInputConsumer `
added null checks and error handling for node IDs in ElementFactoryImpl and ImporterGDF classes to improve robustness by preventing NullPointerExceptions
[ flink - 20635 ] [ runtime ] add warn log for unknown error response ( # 10220 )
nifi - 10220 : fix flowfiles . createsession ( ) to use sessionfactory . createsession ( ) instead of sessionfactory . create
refactor tile retrieval logic in Teams . java to use a loop to improve code readability and maintainability by encapsulating logic
added a check to skip the content - length header in RestTemplateCopyHeaderFilter and implemented a test for content - length handling in TestRestTemplate
updated type handling in Java2TypeScriptTranslator and added test cases in SyntaxTests and Literals classes to improve code clarity and ensure correct handling of
updated method parameters in FilterFactory , ChannelizerViewer , and PolyphaseChannelManager classes to improve clarity and consistency in channel processing logic
hbase - 13232 add - all - region - server - all - region - server - all - region - server - all - region -
testcassandraconnector should use node . environment instead of node . environment
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure the order index is reset before proceeding
added setMinimumSize method to OneToOneCallPanel and updated frame dimensions in OneToOneCallPanel to improve layout responsiveness by adjusting frame dimensions
fix loss of state information during world gen
refactor test setup and cleanup in TestHTTPSamplersAgainstHttpMirrorServer . java to improve test structure and ensure proper initialization of the
added null checks for kerberosPrincipalEntity in KerberosPrincipalDAO and updated related imports in KerberosPrincipalEntity to improve robustness
updated the method call from ` true ` to ` true ` in ` StatsOptimizer . java ` to ensure the correct table snapshot is used in the
use exceptionutils . handleThrowable ( ) instead of int to improve error handling and provide more informative log messages
updated the exception message in AndroidGradleBuilder to include a " Monetization setup " section and paste the Base64 - encoded RSA public key
replaced the method ` fileFolder ` with ` getDisplayName ( ) ` in ` DLNAResource ` and ` FileTranscodeVirtualFolder ` to
[ drools - 351 ] add support for package name in kerberos . jar . classes .
added a conditional check for the feature in CheckIndexTest . java to ensure compatibility with the latest features and features
refactor ` assignTargetsForSplitScreen ` and ` assignTargetsForSplitScreen ` methods in ` AbsSwipeUpHandler ` and ` RemoteTarget
refactor LeaderLatch class to improve code readability to enhance maintainability and facilitate future updates
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 1262626 .
refactored transaction confidence handling to use a new method ` getDepthFuture ` to improve code readability and maintainability by encapsulating
added a new method ` createMediaRecorder ( String path ) ` to ` CodenameOneImplementation ` , ` Location ` , and ` Location `
change platformName from " ios " to " ios " in JavaSEPort . java to ensure platformName is set to " ios
refactor PageEditClient class to improve code organization to enhance maintainability and readability of the code
updated type checks in Graphics2D . java for better readability to improve code readability and maintainability
refactor CreateVisibleSignature class to improve code readability to enhance maintainability and facilitate future updates
added error handling for the nextOutgoingFrame method in AbstractExtension . java to improve robustness by handling potential exceptions during execution
refactor class loading logic in ContextHandler to use AccessController for better security to improve code readability and reduce boilerplate code
added filtering of feed categories in CategoryREST . java to ensure only relevant categories are processed in the user ' s category
updated title handling in ContributionManagerDialog to use language strings instead of hardcoded strings to improve readability and maintainability of the code
added a vwap field to the Ticker class and updated the Ticker constructor to use it to enhance the functionality of the Ticker class
added a TextView to manage the visibility of the no widgets view in SearchAndRecommendationsScrollController and updated WidgetsFullSheet to enhance user interface
add rendergraphapi and worldrendererimpl . rendergraphapi . rendergraphapi . rendergraphapi . rendergraphapi . rendergraphapi to
added a color setting for the primary color in NCFirebaseMessagingService . java to enhance the visual appearance of the messaging service
refactor ShadowUsbManagerTest . java for improved test coverage to enhance reliability and maintainability of the test cases
updated variable names and logging in ` AbstractDifferenceRecommenderEvaluator ` , ` AverageAbsoluteDifferenceRecommenderEvaluator ` , and ` AverageAbsoluteDifferenceRecommend
added a call to ` this . selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is updated
updated bounds calculation in AndroidGraphics . java to use Math . max instead of Math . max to ensure the bounds do not exceed the bounds bounds
replaced HashMap with LinkedHashMap in multiple Java files to ensure consistent iteration order across the application
replaced ` nativeClosureManager ` with ` closurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a more efficient
camel - 15836 : camel - test - spring - boot : use junit 5 instead of junit 5
added new files WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java to implement and validate Websocket functionality to enhance the
[ ds - 2470 ] [ ds ] remove unnecessary dependency on dsm . getservicebynameconfig ( )
updated authentication comparison logic in AbstractCasWebflowEventResolver to use EqualsBuilder for equality checks to improve code readability and maintainability by encaps
added a conditional check to return false if the jnr . ffi . compile . x86asm property is set to " true " to ensure
refactor method calls in CodeGenerator . java for consistency and clarity to improve code readability and maintainability by using a more descriptive variable
added a new interface ` Insecure ` and updated ` MessageBuffer ` to use ` @ Insecure ` and ` @ Insecure ` to enable
added new configuration variables for Hive queue configurations in HiveConf . java to enhance Hive configuration options for better performance
replaced ` scopes ` with ` HashSet ` in ` ResourceSet ` and added a null check for ` policies ` in ` DefaultResourceSetService `
modified the ` decrefOnClose ` variable and added a ` Collection ` parameter to the ` MultiReader ` class to enhance immutability and
refactor multiple Java files for improved clarity and consistency to enhance maintainability and readability of the codebase
[ java ] fix inputfieldtest to use val instead of html5 . html
updated the ` getFirstTypeArgument ` method in ` LinkedTreeMap ` , ` LinkedTreeMap ` , and ` LinkedHashTreeMap ` to
renamed methods from Set < Integer > to KeySet and Values in Int2IntHashMap . java to improve clarity and consistency in naming conventions
added a ` duration ` parameter to the ` FlipTransition ` class and updated related methods to include ` bgColor ` and ` bgColor `
removed the condition for setting subsAreValidForStreaming in DLNAResource . java to streamline the streaming configuration process by eliminating unnecessary logging
updated major and minor version from 8 to 9 and 10 in ForgeVersion . java to ensure compatibility with the latest features and improvements
replaced System . err . println with LowLevelLogUtil . log for compatibility with multi - release JARs to improve logging clarity and ensure compatibility
added java 14 and java 16 / 16 to the parser configuration .
updated padding calculations for replies in ExpansionViewHelper . java to ensure proper padding for status views based on the number of replies
[ hotfix ] [ table - common ] fix test failure on v3 . 9
added metadata retrieval and setter methods to SeedUrl and SeedResource classes to enhance metadata management for seed URLs
added a null check for the declaration before creating a Pattern instance to avoid potential NullPointerExceptions when the declaration is null
refactor TestCoprocessorWhitelistMasterObserver to improve code readability to enhance maintainability and facilitate future updates
[ wip ] fix annotationactionvalidatormanager to use package name instead of package name
replaced ` containsAllOf ` with ` Arrays . containsExactlyWithOnlyNull ` in ` IterableTest . java ` and added a new test method
added ` stream ( ) ` and ` parallelStream ( ) ` methods to ` MapIterable ` , ` PrimitiveObjectMap ` , and ` Primitive
modify return statement to clone the notifInfo object to ensure that the notifInfo object is not cloned to prevent unintended modifications
refactor key comparison logic in AppW . java to use commandKeysSet instead of commandKeysSet to improve code readability and maintainability by
refactor AEADBlockCipher class to improve code readability to enhance maintainability and facilitate future development
added method ` isVariableLocal ` to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap ` to
added a null check for resName and updated the default resource mode in PackageResourceTable . java and RobolectricTestRunner . java to ensure
added a conditional check for ` ulSize ` and ` ulPos ` in ` TrueTypeFont . java ` to ensure that ` head _ Table
updated SignPlugin and SignPluginConfiguration to include a ServerCodecConfigurer parameter to enhance flexibility in handling HTTP message readers
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
removed the validation check for the remote repository in StandardMavenAuthenticationProvider . java to streamline the authentication process by eliminating unnecessary validation
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
updated SSL context handling in LinkyHandlerFactory and EnedisHttpApi to use SSLContext instead of CookieStore to improve security and error handling
refactor HiveFunctionRegistry to use Stream and Map for function replacements to improve code readability and maintainability by using a unified Java stream for better
camel - 14284 : camel - jbang - fix camel - jbang issue in camel - core
changed the method ` getBuildTargetForAlias ` from ` alias ` to ` possiblyFlavoredAlias ` in ` BuckConfig . java ` to
added a check for ODataFeed types before processing results in Olingo2Consumer . java to ensure that only non - empty entries are processed
updated version retrieval logic in MetaStoreSchemaInfo . java to use a map instead of a hardcoded value to improve code readability and maintain
cloudstack - 10225 : fix a typo in the expunge check in the vm manager
added @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
refactor reminder handling in ONDashClockExtension and AlarmReceiver to use a context - based method to improve code readability and maintainability by
updated GoogleAuthUserConfigTable to Google / int4 / int4 / int4 / int4 / int4 / int4 / int4
replaced ` commit ( ) ` with ` markFirstRunClingDismiss ( ) ` across multiple classes to improve code readability and maintainability by
updated the TestIdleListener parameter from ` TestController ` to ` TestIdleListener ` in ` AsyncTimeoutTest . java ` to include a new
updated the initialization of the testBigQueryTable variable to use String . format instead of String . format to improve readability of the testBigQuery
added a background resource for predicted and BubbleTextView in HotseatPredictionController and BubbleTextView classes to enhance the visual appearance of predicted icons
changed the variable name from ` getFlushAfterQuery ` to ` FlushAfterQuery ` in ` MondrianProperties . java ` to improve code
add a new test class ` AbstractTestNativeSystemQueries ` to test the behavior of query execution in the ` AbstractTestQueryFramework ` class
updated the retrieval of active features in LIMEExplanation . java and added a new test for feature retrieval in LIMEColumnarTest . java to
added a ` List < String > args ` parameter to ` AppleSimulatorController ` , ` InstallCommand ` , and ` InstallCommand ` classes to
refactor code to use GenericStyledArea instead of getCurrentLineStartInParargraph ( ) to improve code readability and maintainability
added state checks in ContainerBase . java and StandardContext . java to ensure proper management of available state in the Lifecycle class
added a method to set the clip to outline in QsbWidgetHostView to enhance the visual appearance of the Qsb widget
added flag conversion logic in SQLManager , BlockTypeListFlag , and BlockTypeListFlag classes , and modified flag processing logic in PlotArea to
updated import statements in FloatingTextRenderer . java and added glEnable and glDisable methods in FloatingTextRenderer . java to improve code clarity
rename libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ lib
added a private variable ` propagationBehavior ` and updated related methods in ` JdbcAggregationRepository . java ` to improve code readability and maintainability by
updated the ` configureBaseLayer ` method to include ` L1Regularization ` and ` L2Regularization ` to improve handling of regularization
refactor readWrite ( ) method to throw exceptions instead of System . exit ( - 1 ) in AbstractChecker . java to improve error handling and
changed the access modifier of the colorStack variable from static to instance variable to improve code readability and maintainability
changed the return value from false to true in the getMappedStatement method from false to true in Configuration . java to ensure the method correctly reflects the
changed the method call from ` btceDepth ` to ` toLowerCase ( ) ` in ` BTCEPollingMarketDataService . java ` to ensure
updated assertions in ChannelStateTests . java for consistency and accuracy to ensure accurate testing of channel state values in the application
remove versionedhash . versionedhash ( ) in enginepayloadparameter and enginenewpayloadv2test
updated trigger price handling in MutableOfferView to set the trigger price to " " instead of " " to improve user experience by ensuring the trigger price
refactor studentfeedbacksubmissioneditsaveaction to improve code readability and maintainability
removed unnecessary print statements in I18NPageController . java to clean up the code and improve readability
hbase - 16205 fix log in hstore . getdebugger ( )
no effective change - fix for entitybeaninteraction . setchangedproperty ( ) in persistmanybeans
added a boolean variable ` _ alwaysSaveUri ` and a method ` getAlwaysSaveUri ` to manage the ` _ alwaysSaveUri ` variable
added method ` nSetLayerType ` , ` nSetLayerPaint ` , and ` nSetLayerType ` , and ` nSetLayer
updated import statements and added popup visibility handling in LWChoicePeer . java to improve user interface responsiveness and ensure proper visibility of popup menu
removed redundant null check for insert in StressProfile . java to simplify code and improve readability
replaced ` scala . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple classes to improve code readability and maintainability by
add a null check for ` requests ` in ` MockServerEventLog ` , ` HttpForwardObjectCallbackActionHandler ` , and ` HttpForward
added warning log for unable to load properties file in DefaultEnvironment . java to improve error handling for file loading failures
refactor SessionDataSet initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential resource leaks
added support forMulticast in nic checks in SetOutgoingIf . java to ensure that multicast support is only applied when the nic is up
updated the initialization of SQLCommand in Parser . java to specify the length of the command to ensure proper handling of command lengths during execution
replaced ` setLatestConsumeTime ` with ` setLatestConsumeTimeForEnergy ` and ` setLatestConsumeTimeForEnergy ` in multiple classes to
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to enhance flexibility in managing invalid session strategies
updated error message in ProtobufAnnotationSerializer to include " empty " labels to improve clarity of error messages for better debugging
added a new file ` MapAssert _ containsKeys _ Test . java ` that implements a test class for verifying internal effects to facilitate testing of
added a new interface ` JDBC4TemporaryPreparedStatementMethods ` and updated method signatures in ` JdbcProxyGenerator . java ` to enhance compatibility with JDBC
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated related tests in ` DirectUpgradeTest ` and ` DirectUpgradeTest ` to
updated the ` toLanguageFlags ` method to use ` ImmutableListMultimap ` instead of ` ImmutableMultimap ` to improve performance by utilizing a more efficient
pdfbox - 4071 : fix npe in curvetoreplicateinitialpoint # getcurrentpoint ( )
added a static final ` EMPTY ` array and modified ` hooks ` initialization in ` Method . java ` and ` Method . java ` to simplify the
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the ` MockAuthenticationManager ` to accept a ` grant
updated method names from ` afterJob ( ) ` to ` afterJob ( JobExecution ) ` across multiple classes to improve clarity and consistency in method
added a condition to check if the file can write and executed in SharedLibraryLoader and UtfFontTest to ensure that the file can be executed
added a method ` hasTimeSeriesQueryLanguage ( ) ` to ` TimeSeriesQuery ` and ` TimeSeriesQueryOrBuilder ` in ` TimeSeries
do n ' t throw exception when unmarshalling
added new constants for BATTERY _ LEVEL , STARTTIMESTAMP , and PROFILE _ NAME in BundleConstants . java and CustomUrlManager .
updated method signatures in SearchExpression . java to use Map instead of Hashtable to improve flexibility in handling BibtexEntry instances
rename widget to AbsoluteScreenLocateable in EuclidianController . java to improve clarity and consistency in naming conventions
updated resize method in JoglGraphics , ProjectiveTextureTest , and ProjectiveTextureTest classes to improve rendering accuracy and maintainability
replaced the method ` setResourceToDelegate ( ) ` with ` File ` in ` MultiResourceItemWriter . java ` to improve code clarity and
camel - 14284 : camel - spring - boot - spring - boot - spring - boot - spring - boot - spring - boot -
updated the condition for determining the last attempt time from 1 to 2 in ActionScheduler . java and updated the assertion in TestActionScheduler . java to
updated dbg _ zip from " / tmp / ums _ dbg . zip " to " / tmp / ums _ dbg .
updated import statements in RenderingDebugConfig . java and added visibility binding in NotificationOverlay . java and NotificationOverlay . java to improve code clarity and
refactor gate reset method to use resetGate ( ) method to improve code clarity and maintainability by encapsulating gate reset logic
refactor TestSupplementary to use Locale . getDefault ( ) in TestSupplementary . java to ensure consistent locale handling for test execution
updated the random number from 8 to 4 in the Team constructor to enhance the randomness of the team for better visual representation
refactored the handling of active matched states in SequenceMatcher . java to improve logging consistency to enhance readability and maintainability of the logging output
updated the condition to check for null or empty exceptions in SoftAsserts . java to improve code readability and maintainability
added error logging for invalid JSON errors in StorageResources , StoragePluginRegistryImpl , and StoragePluginRegistryImpl to improve debugging and error handling for JSON
updated call tree printing methods in CallTreePrinter . java to use CsvFile instead of ReportUtils . report to improve code readability and maintainability
updated null checks in DetailFragment . java and added null checks in DetailFragment . java to improve robustness by preventing potential NullPointerExceptions
added peakTasks variable and adjusted calculation logic in AssetManager . java to ensure peakTasks is properly initialized before processing to avoid potential null pointer exceptions
[ firefoxdriver ] enable native event on non - Windows platform
added new constants for score , fetch interval , and fetch interval in Injector . java and updated CrawlDatum initialization in Injector . java to
updated import statements from ` org . apache . commons . collections . ListUtils ` to ` org . apache . commons . collections4 . map `
added a new method ` isShareSchema ( ) ` to ` CoreContainer ` and implemented a test for the ` shareSchema ` method in `
updated ` sizeInBytes ( ) ` to ` sizeInBytes ( true ) ` for consistency across multiple classes to ensure accurate size representation for better
refactor versioning tests to use gson . fromJson instead of gson . fromJson to improve readability and maintainability of the test code
updated SQL query to include typo type in SQL queries and added a new test for null domain columns in DatabaseMetaData to ensure proper handling of null
[ java ] do n ' t return false if there be no follower .
removed the buildMediaType method from WebClientPlugin . java to simplify the code and improve readability
replaced ` fillUsingLengthPrefix ` with ` fillAndGetIndex ` for consistency across multiple files to improve code readability and maintainability by using
added a compact check for ` isCompactedBase ` in ` AcidUtils . java ` and updated conditional checks in ` TestCleaner . java
added null checks for immutableStorageScheme and qualifierEncodingScheme in PTableImpl . java to improve robustness by preventing potential NullPointerExceptions
added new classes ` PojoProducersCustomized ` , ` RestProducersCutomized ` , and ` RestProducersCutomized
updated cache configuration names from " http _ client _ tls _ cert " to " http _ client _ tls _ key " in ArtifactCacheBuck
removed the registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to streamline the serialization process
added a new item " slabWood " to the item replacements in OreDictionary . java to enhance the functionality of the wooden slab item
refactor multiple Session classes to improve code organization to enhance maintainability and readability of the session management components
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class structure and
updated the version string from " 3.2 - SNAPSHOT " to " 3.2 . 2 " to reflect the latest release version
hhh - 16464 - fix denormalizedtableincludedtableconstrainttest to use ` ` suptable ' '
updated spriteBatch draw method to use centerX and centerY in HelloWorld . java to ensure proper positioning of spriteBatch drawing
updated the loop condition in PlayerFunctions . java and added a toString ( ) method in WorldGuardListener . java and WorldGuardListener . java to
added a deprecated version constant LUCENE _ 8 _ 5 _ 0 to indicate that the version is outdated and should no longer be used
corrected the spelling of " selfInitiated " to " selfInitiated " in the println statement to improve code readability and
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure that the SQL parser correctly handles signed integer
refactor dependency type handling in CoNLLUOutputter . java and SemanticGraphCoreAnnotations . java to improve code readability and maintainability by
removed static method ` NoSuchBuildTargetException ` and ` ParseContext ` from ` NoSuchBuildTargetException ` and ` ParseContext ` classes to streamline code
updated the initialization of MyChild in TestOutOfMemory . java to simplify the initialization process for the MyChild class
updated the initialization of configBlocks from Block . blocksList to 256 in Configuration . java to optimize memory usage by reducing the number of blocks
updated logging statements in BukkitMain . java to include a check for " git - Spigot " and updated title handling in PlotSquared . java to
updated SQL statement handling in AbstractSQLChange . java and added a new test for escaping PostgresOperators in AbstractSQLChangeTest . java to
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and ` MutableBag
added HTML escape codes for file names in BuildNavAndPDFBody . java and updated exception handling in BuildNavAndPDFBody . java to ensure
added a false parameter to the MqttBrokerConnection constructor in NhcMqttConnection2 . java to ensure that the connection is only created when
updated the retrieval of the change set from ` getChangeSet ( ) ` to ` getChangeLog ( ) ` in ` ChangeSet . java `
refactor code to use a more descriptive variable name for clarity and consistency to improve code readability and maintainability
added a new HiveMetaStoreClient instance and logging for database deletion in TestHiveMetaStorePartitionSpecs and TestObjectStore to improve database
added " order _ currency " parameter to the ` @ FormParam ` annotation in ` BithumbAuthenticated ` and ` BithumbAccountServiceRaw `
deleted the SSEFluxWebConfig . java file to the class is no longer needed for the current implementation
updated JsonBuildHelper and IDocBuildTemplate to use ` isVoid ( ) ` instead of ` getReturnType ( ) . getReturns ( ) `
added a method to list detection configurations by ID and ID in YamlResource . java to enhance functionality by allowing users to access detection configurations
changed access modifiers of the ` equals ` method from public to public in ` Marker . java ` to enhance encapsulation by restricting access
replace ` ThreadFactory ` with ` AsynchronousChannelGroup ` in ` Basic ` , ` GroupOfOne ` , and ` GroupOfOne `
added unit tests for ` PersonWithAList ` and ` PersonWithAList ` in ` MongoTemplateTests ` and created a new ` Person
ggb - 271 fix applet panel size calculation in web
refactor toolbar visibility handling in DrawerActivity to use a Runnable for better responsiveness to improve code readability and maintainability by using a
refactor ` initFirstPageReader ( ) ` and ` unpackAllOverlappedPage ( ) ` methods in ` SeriesReader . java ` to
cloudstack - 10297 : do n ' t attempt to save password for vm on vr
added default values for output stream and character encoding in Response . java to ensure proper handling of output streams and character encoding settings
added a conditional check for assignment side effects in GroupDialog . java to improve user experience by preventing unnecessary assignment side effects
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated the condition in FileUploadApiController to use maxWidth instead of maxHeightWithMargin in the conditional check to improve code readability and maintainability by
refactor RegisteredServiceProperty and JwtTokenCipherSigningPublicKeyEndpoint to use JcaPEMWriter instead of EncodingUtils to improve code readability
updated import statements and added a check for Windows mime types in Basic . java to ensure proper handling of non - Windows operating systems and improve error reporting
refactor nettyconnection to use jzlibencoder instead of system . out . println
added a method ` doesClassLoaderDescendFrom ` to ` Util ` and ` MethodHandles ` classes in ` Util ` and ` MethodHandles `
removed the ` doConnect ` method from ` ChannelProvider ` and ` ProxyChannelProvider ` to simplify the connect method signature and improve error handling
added a new test method for handling empty final columns in TextReader and TestCsvHeader to ensure proper handling of empty final columns in CSV queries
added compass gravity and margin calculations in NearbyMapFragment . java to enhance user interface responsiveness and visual consistency
added a new test method ` testInterpolation ` in ` GeoPathTest . java ` to verify the functionality of the ` distance ` method in `
added exception handling to the getLeafFilterBuilderByType method and updated exception handling in ParquetFilterPredicateFactory and ParquetFilterPredicateConverter to improve
added conditional logic to set the language for currentAudioTrack in LibMediaInfoParser . java to ensure the correct language is set based on the current
added a warning log message for compatibility issues in MicroserviceRegisterTask . java to provide clearer feedback on version compatibility issues
refactor array handling in Array , FloatArray , and LongArray classes to improve code readability and maintainability by reducing duplication
refactor resource closing logic in DataSourceProxy . java to improve code readability and maintainability
added constructors for ClientRegistrationsMap in InMemoryClientRegistrationRepository and InMemoryClientRegistrationRepository to enhance flexibility in client registration handling
added a method ` resetUIState ( ) ` to ` SchemaUpgradeHelper ` to handle UI state resetting to ensure UI state is correctly reset
added a boolean variable ` failedStep ` and modified conditional logic in ` JUnitReporter ` to include a ` strict ` flag in ` JUnit
add a new file ` PlayerSelector . java ` for generating player selectors to enhance functionality for managing player interactions in the game
changed the ` Selector ` class to implement ` Closeable ` instead of ` Selector ` to ensure that the ` Selector ` class implements ` Closeable `
added multiple x connection pool factory in MaxConcurrentStreamsTest . java to improve connection management and enhance test reliability
added new method ` stringType ( ) ` to the ` CoreOptions ` class to enhance the functionality of the ` stringType ` method
added null checks for ctx . character ( ) and ctx . parameter ( ) in HqlQueryRenderer , HqlQueryRenderer , and Eclipse
updated HTTP status checks to use HttpStatus . SWITCHING _ PROTOCOLS _ 101 and HttpStatus . NOT _ SET _ 000 instead of
pdfbox - 4071 : fix nullpointerexception in catalogvalidationprocess
[ java ] fix test failure in hikariCPCollectorTest . java
refactor ParquetFormatPlugin and ParquetGroupScan to utilize a new method for managing Parquet metadata files to improve code readability and
updated the ` isSuccess ` variable to true and added exception handling for IOException during compilation to improve error handling and provide clearer error messages during compilation
updated ` baseRenderer ` and ` baseModelListener ` to be ` TableModelListener ` and added a new class ` BaseTableModelListener ` to
updated the number comparison from 49152 to 65535 in ServerConfig . java to ensure that the number is within a valid range of 65535
added support for handling document provider authority in AuthenticatorActivity and AccountRemovalJob classes to ensure compatibility with devices running Kotkat and above
added a call to ` Log _ OC . startLogging ( ) ` in ` MainApp . java ` to enable logging of application context
added ThrowableAnalyzer for handling RequestRejectedException in FilterChainProxy to improve error handling and ensure proper handling of rejected requests
replaced ` newSize ` with ` this . length ` in ` StringBuilder . java ` to improve code clarity and maintainability by using the current instance
pdfbox - 4071 : do n ' t throw an exception if the filter list be empty
add a new file ` TbStopWatch . java ` that implements a ` TbStopWatch ` class to implement a new StopWatch class for
updated the initialization variable from ` this . initialized ` to ` this . initialized ` in ` PListStore . java ` to ensure proper initialization of
added @ Deprecated annotations to Continuation and ContinuationFilter classes to indicate that these classes are outdated and should no longer be used
added a method to set the context class loader in RemoteInterpreterServer . java to ensure the correct class loader is used in the application
fix typo in commandsourcestack . getsource ( )
updated the minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest
updated method names from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve clarity and
add ` getSimpleName ( ) ` method to ` BeanDescriptor ` , ` CQueryPlan ` , and ` BeanPropertyAssocMany ` classes to enhance
updated the URL format in BasePage and WroManagerFactory to use " static / all . css " instead of " wro / all . css
[ iotdb - 4071 ] [ iotdb - 4071 ] add a test to verify the latest timeseries functionality
rename ` appContextLocation ` to ` contextConfigLocation ` across multiple files to ensure consistency in naming conventions across the codebase
added type checking for CertPathValidatorException in OCSPChecker . java to ensure proper exception handling for OCSP requests
added writeOutputSolutionEnabled property to ProblemBenchmarksConfig and ProblemBenchmark classes to enable configuration of writeOutputSolution in the benchmarking process
[ hotfix ] [ runtime ] set maxinboundmessagesize to Integer . MAX _ VALUE in TranslationServiceStubSettings . java to ensure
added a new file ` Issue _ 815 . java ` that implements a new test class for sliceSize functionality to address issue # 815
add shapeless recipe for slime _ ball and slime _ ball
[ mahout ] fix index outofboundsexception in sequentialaccessdvector
added handling for owner plots in BukkitMain and EntitySpawnListener classes to ensure proper management of plots in the plot area
added a method ` getDebugLogger ( ) ` to the ` DIHWriter ` and ` SolrWriter ` classes to provide access to the debug
refactor file name length handling in IOHelper and MultiKahaDBPersistenceAdapter to improve code clarity and maintainability by encapsulating
added a check for tag matching in UpToTagChangeSetFilter and implemented a warning message in UpToTagChangeSetFilter to improve error handling and provide
rename ` LinkedList < T > ` to ` ArrayList < T2 > ` across multiple files to improve clarity and consistency in naming conventions
refactor BrokerRoutingManager class to improve code readability to enhance maintainability and facilitate future updates
updated color settings for volume and up paint in CandlestickRenderer . java to improve visual consistency by using a more visually appealing color
refactor InsettableFrameLayout to use a new LayoutParams class for layout parameters to improve code readability and maintainability by centralizing layout parameters
added a ` duration ` parameter to the ` BuildTargetDurationListener ` class and updated related test cases in ` BuildTargetDurationListenerTest ` to
added ` assumeTrue ` annotation to ` HsqlDbMigrationIntegrationTest ` , ` PostgresDbMigrationIntegrationTest ` , and ` PostgresDbMigration
added a null check for the user before processing claims to avoid potential NullPointerExceptions when user is null
camel - 14284 : camel - test - base on user forum issue .
replace ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to improve performance by avoiding unnecessary concurrent modifications
fix listpublicipaddresses command to retrieve the source network id by source network id
added unit tests for battery optimizations in ShadowPowerManager and ShadowPowerManager to ensure correct behavior of battery optimizations in the power manager
updated the version from " 9.4 . z - SNAPSHOT " to " 9.4 . z - SNAPSHOT " in Jetty .
added unit tests for verifying number invocations in NumberOfInvocationsInOrderVerifier to ensure correct behavior of verification methods in the verification process
refactor conditional logic for evaluating regex results in TRegexExecNode . java to improve code readability and maintainability by reducing redundancy
updated the profile start method to include " - foreground " in the process start profile to ensure the application starts with a foreground profile for better user experience
replaced ` executorClient ` with ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve code readability and maintainability by using
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` in ` MetadataIndexer .
updated log level from ` getFile ( ) ` to ` getName ( ) ` in ` CodeEditorView ` , ` EditorTextActionWindow ` ,
updated error message formatting in ClassFileReader and JdepsTask classes to improve clarity of error messages for better debugging
added LinkStorage and LuceneStorage instances to Fetcher and FetcherMain classes and updated related logic in Fetcher and FetcherTask classes to enhance
added a new ` BubbleBarBubble ` parameter and modified ` BubbleBarBubble ` initialization to include a ` existingBubble ` parameter to enhance
[ hotfix ] [ runtime ] improve error message for scheduledroutepolicy
updated method signatures in MotanServiceBeanPostProcessor , MotanRpcExt , and TarsRpcExt classes to improve clarity and consistency in method
[ java ] add a new option for multicast delay generation in mediaconductor and Receiver classes to enhance performance by allowing dynamic delay generation
added client id and secret properties to the Gson object in ClientInformationResponseView . java to enhance client information handling by allowing access to client information
added a conditional check for the field amount before adding to the limitOrders list to ensure that the order is only set if the field amount is
removed the ` rawExecutionReports ( ) ` method from the ` executionReports ( ) ` method in ` BinanceStreamingMarketDataService `
added a ` fail ` method to ` LdapTimeoutTest . java ` and updated ` fail ` logic in ` LdapTimeoutTest . java ` to
add a check for the existence of the userdict file in jphonemiser .
ambari - 20247 . ambari - 244 . ambari - 244 . ambari - 234
added a check for already parsed segments in ParseSegment . java and implemented a method to check if a segment is already parsed to improve error handling and
[ hotfix ] [ yarn ] add a configuration option for application attempt failure
[ geos - 6492 ] fix h2 driver not be unloaded when h2 driver be not find
hbase - 16464 add default readtype configuration for snapshot - based inputformat . readtype
added fixed height and width parameters to LoginInstanceRequest for instance login options to enhance user experience by allowing customizable layout options
added a corner radius parameter to the update methods in ActivityControlHelper , WindowTransformSwipeHandler , and LauncherLayoutListener classes to enhance the rendering
updated the ` COMMANDS _ TO _ REMOVE ` command to include a ` MASKED ` and ` MASKED ` parameter to
refactor connection retry logic in TxnHandler to use a separate variable for better readability to improve code maintainability and handle potential exceptions during connection
[ hotfix ] [ txn ] add ` txncheckreserve ` and ` txnOfferBackupReserve ` method to queuecontainer
added a new variable ` strings ` to the ` FirstOfStringsMatcher ` class to allow initialization of the ` strings ` array
updated SQL statement names from " DELETE ROWS \ n " to " DELETE ROWS SERVER SELECT " and added a new Explain
added handling for SocketTimeoutException and SocketException in BaseServiceException . java and updated related test cases in BaseServiceExceptionTest . java to improve error
added a ` rapidInstallTypes ` parameter to ` AdbHelper ` , ` RealAndroidDevice ` , and ` RealAndroidDevice ` classes to
updated the seed pattern from " - srand " to " - ? \ d + " in SortTest . java to ensure correct seed formatting for
refactor MultimapSubject to use Factory for key factory methods to improve code readability and maintainability by encapsulating key creation logic
updated the return value from " hotseat " to " hotseat " in the launcher to ensure accurate display size retrieval based on device orientation
added a transmux flag to the Transformer class and updated its initialization in Transformer and TransformerInternal classes to allow for more flexible transcoding based on media
added localization for string values in Picker . java to ensure consistent formatting of strings in the picker
camel - 234 : camel - camel - cxf - fix camel - cxf
hhh - 11717 - fix lock lock issue in PostgreSQL81dialect
updated database query ID validation in TestJdbcDriver2 and HiveStatement classes to ensure that queryId is not null to improve robustness by preventing null
[ beam - 10286 ] add usesunboundedpcollections to ParDoTest to improve test coverage
updated text formatting in GpsSimpleViewFragment . java to improve code readability and maintain consistency in formatting
[ java ] remove leadershiptermid from joinlogasfollower method
changed the access modifier of the ` exchange ` variable from ` getHttpExchange ( ) ` to ` this ` in ` HttpSender . java `
[ hotfix ] [ test ] rename test logger to junit 5
updated method names from ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` and ` AppOpticsPropertiesAdapterTests
added null checks for the tree before processing markers in Recipe , Markers , and SearchResult classes to improve robustness by preventing potential NullPointerExceptions
updated method signatures in CharacterRun , XWPFDefaultRunStyle , and XWPFRunStyle classes to use double instead of float to improve
refactor email handling in AddressBookDoCoMoResultParser to use an array instead of a single email to improve code readability and maintainability
refactor the handling of exclusions in RawMavenResolver to improve clarity and efficiency in managing exclusions to enhance code readability and maintainability by
added support for the DSX exchange info in DSXAdapters , DSXPairInfo , and DSXBaseService , and DSXBase
refactor TestBlockingIO , TestValidatingIO , and TestValidatingIO classes to improve code organization and maintainability
[ drools - 90 ] disable incremental build if KieModule POM is invalid
updated the initialization of ` copy ` to use ` sobj . has ( k ) ` instead of ` 0 ` and added a conditional check for
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
use compilerasserts . neverpartofcompilation ( ) in hostfielddesc . getstaticmethod ( )
added a new annotation for CompletableFuture and CompletionStage in DefaultNullnessAnnotations . java to enable support for CompletableFuture and CompletionStage in the database
updated the calculation of mFreezeCheckPoint from 9000 to 10000 in PlaybackController . java to improve the accuracy of the freeze check point
replaced ` AbstractCommonPowerMockRunner ` with ` AbstractCommonPowerMockRunner ` and removed ` RunNotifier ` from ` PowerMockRunner ` to
updated the method signature from typeCode to realType in AnyImpl . java to ensure correct type handling in the unmarshalIn method
added handling for ` lastIndent ` in ` TabsAndIndentsVisitor . java ` to improve code readability and maintainability
replaced LuceneTestCase with JUnit TestCase in TestSingleTokenTokenFilter . java to ensure compatibility with JUnit ' s test framework
added a new table class ' wrappedText ' in HtmlProcessInformationsReport . java to enhance the readability of the HTML process information report
added a null check for ` latest ` in ` JdbcStepExecutionDao ` and ` MapStepExecutionDao ` to ensure that ` latest ` is
added a conditional check for the presence of a new media folder before adding to the addChild method to ensure that the folder is only added when necessary
added null checks for ` actor ` in ` SplitPane . java ` and ` removeActor ( null ) ` methods in ` SplitPane . java
added type parameter handling for JavaType . Parameterized in RemoveUnusedImports . java to ensure compatibility with Parameterized types in the code
added null and empty check for modInfos in UniqueModListBuilder . java to ensure proper handling of empty modInfos to avoid potential NullPointerExceptions
changed the visibility of the Logger from ` this . getClass ( ) ` to ` static ` in ` TicketGrantingTicketImpl . java `
updated timeseries data type in PhysicalPlanTest . java to reflect the correct timeseries version to ensure compatibility with the latest timeseries data type
added a ` isValue ` method to ` AttrData ` , ` Converter ` , and ` Converter ` classes and updated exception handling in ` LayoutInflater
added a new method ` isLocaleUSInternationalPC ` in ` CPlatformResponder . java ` and added a method ` isCharModifierKey
[ java ] add aeron _ PUBLICATION _ CONNECTION _ TIMEOUT to the mediadriver . launch ( ) method
added a condition to check if the request URI starts with " / images " and " / favicon " in GTVGFilter . java to
added a test for apk installation in TestUtil . java to ensure that the install process correctly verifies the device ' s root status
no effective change - remove oracle ansisqlrowslimiter from testqueryforupdate
updated assertions in TestSimpleBodyHandler , TestVertxTLSBuilder , and TestVertxTLSBuilder to use a mocked MultiMap to improve
updated path formatting in DiffRuleKeysScriptIntegrationTest . java to improve readability and maintainability of the code
added a boolean variable ` mIsDismissHapticRunning ` and modified conditional logic in ` TaskViewTouchController . java ` to ensure that
fix crash when exploder be not a projectile
removed unused imports and modified getItemId method in SymbolInputAdapter . java to improve code clarity and maintainability
updated the ` getBook ` method to use ` QueryParam ` instead of ` QueryParam ` in ` Bitfinex ` and ` BitfinexPolling
added a condition to replace ' \ ' with ' ' in the result string in StaxConverterTest . java to ensure proper handling of special characters
[ hotfix ] [ zookeeper ] add ` ` configmapname ' ' to ` ` zookeeperleaderleaderelectiondriver . toString ( )
refactor SqlSessionFactoryBean class to improve code organization to enhance maintainability and readability of the code
add null check for methoddescriptor in TripleInvoker . java to improve robustness by preventing potential NullPointerExceptions
updated error handling in PolygonRegionLoader to throw a GdxRuntimeException instead of throwing an exception to improve error handling by throwing a specific exception instead of
added a method to check if a threadlocal Deadline is started in Deadline . java and implemented timer registration in RawStoreProxy . java to
added exception handling for closed channels in NettyRequestExecutor . java to provide clearer error messages for clients when the channel is closed
added a null check for genres in the textView to avoid potential NullPointerException when genres is null
[ flink - 27386 ] [ checkpoint ] fix masterhook reset call in region recovery
added a new ` MappedContainerComponent ` class and corresponding test cases in ` EntityDataJSONFormat ` and ` ProtobufPersistedData ` to
hbase - 18105 avoid unpinned mem table if no version be available
updated the ` handler . handle ` method to use ` handler . handle ` instead of ` handler . handle ` and added a new test for retry
updated package - info . java files for consistency to improve organization and clarity of the codebase
added a new test class SQLServerEscapeQuestionCharacterTest for SQL server escape functionality to ensure proper handling of special characters in SQL queries
fix camel module constructor to not throw npe if no route be find
refactor thread safety checks in JavaFXSEPort . java to improve code readability and maintainability
updated import statements from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider `
refactor cropbehavior to use imageobject instead of regiondecoder
removed the appName parameter from the configure methods in InputRC and InputRC classes to simplify the code by removing unnecessary appName parameter
graalvm : add test for installwithignoredeps and uninstalltest
updated command - line arguments in ChromeDriverFunctionalTest , EdgeDriverFunctionalTest , and EdgeDriverFunctionalTest classes to include headless
updated value assignment in VersionedValue . java to use intern ( ) instead of intern ( ) to improve readability and maintainability of the code
added " MOVE " to recv status checks in Connection . java to ensure compatibility with additional incoming status scenarios
updated ISO8601 date formatting in FixedDateFormat . java to ensure consistency in date formatting across the application
updated import statements from ` org . apache . curator . shaded . com . google . common . com . google . common . collect . List
[ hotfix ] [ hsbuffer ] fix spill error in hsbuffercontext . startspilling ( )
updated permission checks in Visit . java to remove unnecessary permission checks to streamline permission checks for untrusted visits
added a check to return early if the service is registered before proceeding to avoid unnecessary processing when the service is not registered
updated conditional checks in BasicURLNormalizer and added a new test for curly braces in TestBasicURLNormalizer to ensure correct handling of curly
changed access modifiers of ` addRemoteAnimations ` and ` unregisterRemoteAnimations ` methods from protected to private in ` QuickstepTransitionManager `
added a null check for the ` res ` variable in ` EncodingConfiguration . java ` to ensure proper comparison of clock rate values
added ` getProjectPath ` method to ` ProjectGenerator ` , ` SeparatedProjectsGenerator ` , and ` SeparatedProjectsGenerator
refactor calendar ID handling in HostLocaleProviderAdapterImpl . java to improve code readability and ensure proper validation of calendar IDs
added a new file ` MSwingUtilities . java ` that implements a utility class to demonstrate the use of the MSwingUtilities class to provide a
camel - 15836 - camel - mail : use asyncproducer instead of defaultproducer to allow for asynchronous processing .
added @ RefreshScope annotation to CasCoreWebConfiguration , PasswordlessAuthenticationConfiguration , and PasswordlessAuthenticationConfiguration classes to enable refreshing of configuration
added unit test for onexceptionhandleandthrownewexception
added new classes ` Main ` , ` ScriptRenderer ` , and ` ScriptRenderer ` , and ` ScriptRenderer ` , and ` ScriptRenderer `
updated conditional checks for form encoding and input state in Request . java and added a new test for querying responses in RequestTest . java to ensure
updated touch focus handling logic in BitmapFont , FlickScrollPane , SelectBox , and SelectBox classes to improve touch event handling and ensure proper
updated the ` reportFailure ` method to use ` context . runCloseHooks ` in ` DeploymentManager . java ` and added a new test for
refactor wildKey handling in LexiconRecipeMappings to use a boolean parameter to improve code readability and maintainability by encapsulating wild
updated sleep duration in ConstantTimeBackoffTest to use a constant timeout value to improve test reliability by allowing more time for concurrent execution
updated import statements and condition checks in LoincHandler . java to improve code readability and maintainability
updated classpath handling in JollyDayHolidays . java to use ClasspathURLStreamHandler instead of ClasspathURLStreamHandler to improve code clarity and maintainability
added a new file ` FieldUtils . java ` that utilizes the ` FieldUtils ` class to provide utility methods for field retrieval and field
updated assertions in DeferredAttr . java and added a new file DoubleStaticImport . java with a new class DoubleStaticImport . java with a new
updated layout inflate method to use a screen instead of a hardcoded value to improve layout layout consistency and ensure proper padding for custom content
added updatesettingswithsavelastaccount ( ) method to XabberAccountManager and updateSettingsWithSaveLastAccount ( ) in AccountAddFragment
added a new method ` setvar ` to ` Commands . java ` for setting variable values in a command - line argument to enhance command - line
add a new file ` CatEntity . java ` forAnimalTame event handling in ` CatEntity . java ` to ensure proper event
[ hotfix ] [ table - common ] handle null value in window frame .
pdfbox - 4071 : add unit test for createsignature
added a method to set the mode of the app in PageListController . java to ensure the application uses the correct mode for user interaction
added ` withBuildArg ` and ` withBuildArgs ` methods to ` ImageFromDockerfile ` and ` ImageFromDockerfileBuildTest `
added a null check for threadInfos [ threadId ] in ThreadInfos . java to avoid potential NullPointerException when threadInfos [ threadId ] is
updated the condition to check for FLOAT _ EPSILON in PieChartRenderer . java to improve precision in calculations for chart rendering
[ hotfix ] [ checkpoint ] add log to channelstatepersistencer and singleinputgate
added SYNONYM and INOPERATIVE _ QUERY _ TABLE support to the Schema class to enhance schema functionality by allowing additional
added minimumSimilarity parameter to FuzzyQuery and updated FuzzyTermEnum constructors in FuzzyQuery and TestFuzzyQuery classes to enhance query
updated method name from ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java ` to improve
fix layout wrapping encoder to use OutputStreamAppender instead of OutputStreamAppender
added " AMQPAutoConfiguration " to the ` @ AutoConfigureAfter ` annotation in ` ZipkinAutoConfiguration ` to support additional AMQP - related configuration
added null check for ` comp ` in ` JLayer . java ` and created a new test class ` bug6875716 . java `
updated import statements in ResolvingVisitor , SchemaResolver , SchemaResolver , SchemaResolver , Schemas , SchemaResolver , and Schemas classes to
refactor BciBlock mapping and unwind block handling in BciBlockMapping and GraphBuilderPhase classes to improve code readability and maintainability by
refactor legacyRenderer handling in Label . java to improve code readability and maintainability by encapsulating logic in a separate method
replaced ` intToFourBytes ` method with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJwe
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is null
updated the ` thenComparing ` method to ` thenComparing ` and added a new ` Department ` class in ` TypeTest `
refactor DocIdSet class to improve code readability to enhance maintainability and facilitate future updates
updated the ` setEndTimeUtc ` method in ` UserRuleAnomalyFunction . java ` to use ` currentKey ` instead of ` null
added error handling for NumberFormatException in VisualScoreTagTest . java to improve robustness by handling potential NumberFormatException during parsing
updated the naming policy in MockFactory . java and added classloader setting in MockFactoryTest . java to improve clarity and maintainability of the code
added a new ` OriginalFormat ` class to the ` ConverterWithEnumFormat ` class and implemented the ` parseObject ` method in ` ConverterWith
added a constant for the PATTERN _ YYYY _ MM format in FileStorageUtils . java to improve code readability and maintainability by
refactor JAWTRenderer class to improve code readability to enhance maintainability and facilitate future updates
camel - 15836 - camel - aws2 - lambda : use autowire instead of autodiscoverclient
cloudstack - 10286 : add validation for mac address in the network ( # 11717 )
updated string header name handling in ProxyServlet . java to ensure proper authorization handling for HTTP requests
replaced the submit method with execute method in TraceableExecutorService . java to improve code readability and maintainability
added ` getDetails ( ) ` and ` setDetails ( ) ` methods to ` Authentication ` , ` UsernamePasswordAuthenticationToken ` , and `
updated randUsePoints initialization from nextBoolean ( ) to nextInt ( ) in SolrTestCaseJ4 . java to improve randomness in test cases
rename ` appendDot ( ) ` to ` endSentence ( ) ` for clarity and consistency to improve code readability and maintainability by standardizing
updated formatForConsole method to include locale parameter in multiple files to ensure consistent formatting across different locales
refactor import statements in GroovyParserVisitor and GroovyPrinter to use a wildcard import for map entries to improve code readability and maintainability by using
added validation checks for bottom and rightInsetPx in Border . java to ensure that bottom and rightInsetPx values do not exceed bounds
refactor gesture state handling in TouchInteractionService and GestureState classes to improve code clarity and maintainability by centralizing gesture state management
replaced ` DateTime ` with ` Instant ` in ` LlapServiceDriver . java ` to utilize ` DateTimeFormatter . BASIC _ ISO _
refactor openblas and openblas _ nolapack classes to improve code organization and maintainability
replace IOUtils with IOException in TorrentsStorage . java to ensure proper resource management and prevent potential memory leaks
added synchronization to the initTxnMgr method in SessionState . java to ensure thread safety when accessing the txn manager
updated timeout values in ` AbstractDistribZkTestBase . java ` and ` AbstractFullDistribZkTestBase . java ` to improve timeout
added a new file ` SearchResults . java ` that implements a method to retrieve and retrieve results as objects to facilitate the retrieval and retrieval of results
refactor threadCPURefresher to use threadCPUTimer instead of threadCPUView to improve code readability and maintainability by encapsulating
added null check for primitivesTemp in BytecodeNode . java to ensure primitivesTemp is initialized before use to avoid potential NullPointerExceptions
added new versions " 8 . 9 . 0 - cfs " and " LUCENE _ 8 _ 10 _ 0 - nocf
updated feature flags from DISABLED to TEAMFOOD in FeatureFlags . java and AppIcon . java to ensure compatibility with TEAMF
added a method to retrieve tenant pools for current instances in InstanceResource . java to enable retrieval and retrieval of instance pools for the current instance
refactor ` canEarlyTerminateOnDocId ` to ` canEarlyTerminateOnPrefix ` and ` canEarlyTerminate
updated ` InlineBytecodeGenerator ` to include ` isToString ( ) ` and ` isToString ( ) ` in ` InlineBytecodeGenerator `
added logging statements for compiling command execution in CxxCompileStep and CxxPreprocessStep classes to improve error handling and provide clearer diagnostics
added a method ` removeCharacter ` to ` StringUtil . java ` and updated its usage in ` Util . java ` to improve character removal functionality and
[ scb - 13232 ] add support for metadata service protocol ( # 11717 )
add a new interface ` DataTransformer ` to the ` org . kie . api . process ` package to implement the ` DataTransformer ` interface
replaced ` Collection < ? > ` with ` Collection < Number [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [
refactor conditional checks in FormatStringChecker . java to improve readability to enhance code readability and maintainability
updated the initialization of SolrCore in ElectionContext . java to ensure proper initialization of the core variable
updated ITestDbTxnManager . java file to improve transaction management functionality
refactor connection handling in DatabasePlatformFactory . java to ensure proper resource management to prevent potential memory leaks
added a remoteCodeFirstPojo _ testMapModel method to CodeFirstPojoClient and updated related tests in CodeFirstPojo to improve test coverage for
pdfbox - 4071 : do n ' t throw an exception if the xobj be null
refactor selection option handling in ScaleDialog . java to improve code readability and maintainability by reducing duplication
rename ` updatePlayerStepStatus ` method to ` tickBelt ` across multiple files to improve clarity and consistency in method naming
pdfbox - 4071 : do n ' t throw exception if no appearance stream be create
replaced SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to ensure consistent ordering of key sets
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer and PagePreview
updated preload values from " libusb - 22 " to " libusb - 25 " in dc1394 . java to ensure compatibility with
added a conditional check for agentSupport before setting constructors to public in MainMockTransformer and created a new test class for mocking static methods in
pdfbox - 4071 : do n ' t decrypt a security handler when no object be present
added a new method ` setWindowTitle ( ) ` to ` MainFrame . java ` and modified the ` DEFAULT _ APP _ NAME ` variable
updated depth assignment logic in XRSurfaceData . java to use Transparency . TRANSLUCENT instead of Transparency . OPAQUE
added error handling for response body reading in OkHttpDataSource . java to improve error reporting for unsuccessful responses
added a new method ` exit ` to ` TopLogging ` and updated its usage in ` TopLogging ` and ` TopThreadGroup ` to improve
added a conditional check for global regexps in NativeRegExp . java to ensure correct indexing based on the regexp ' s global state
[ flink - 468 ] [ test ] ignore test when upgraded to optaplanner 6 . 1
updated the variable name from ` availableAllocations [ lowIndex ] ` to ` availableAllocations [ highIndex ] ` in ` DefaultAllocator .
added a ` cleanEntriesWithoutFeeds ` method to ` DatabaseCleaner ` and ` FeedEntryDAO ` classes in ` DatabaseCleaner ` and `
changed the return type of the appendToLabel method from void to AtomicCounter in AtomicCounter . java to allow the method to return the current instance
added a new class ` NoOpIdleStrategy ` and updated imports in ` BusySpinIdleStrategy ` and ` LowLatencyMediaDriver
added a check for NOT _ MODIFIED status in CacheControlHeadersWriter and corresponding tests in CacheControlServerHttpHeadersWriter to ensure proper handling of
rename ` constantValueInertInstrumentListener ` and ` constantValueInertToolEvalNode ` methods to ` constantValueInertToolEvalNode
removed the ` paintTabArea ` method from ` SynthTabbedPaneUI ` to streamline the code for better readability and maintainability
updated KrakenMarketDataService and KrakenMarketDataServiceRaw to accept a ` Object . argument ` instead of ` Long ` to improve flexibility in handling
camel - 14284 : camel - remote - file - api : add relative path to remote file endpoint
added JavaProvenance . java and MavenProjectParser . java to enhance the JavaProvenance class with additional classpath information
added trace logging for non - deterministic UDFs in HiveFunctionRegistry and updated related tests in TestInbuiltHiveUDFs to improve
updated loop iteration from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for state updates
[ java ] handle unknown columnfamily exception instead of unserializable columnfamily exception
added a conditional check for writable output files in NativeErrors . java to improve error reporting for writable output files
added exception handling for application info retrieval in LauncherModel . java to improve robustness by handling potential NameNotFoundExceptions
added error handling for CloudRuntimeException in DatabaseUpgradeChecker and updated prepareStatement statements in Upgrade410to420 . java to improve robustness
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a new test in FaultTolerantChunkOrient
replace startsWith ( ) with isSet ( ) in LineReaderImpl . java to ensure proper handling of case sensitivity in string comparisons
added imports for SourcesFileErrors and SourcesFileErrors and SourcesFileErrors in Recipe . java to improve code readability and
added a method to dismiss all tasks in TaplTestsTaskbar to ensure that all tasks are dismissed when no tasks are available
add database upgrade check to make it easy to update system vm template
refactor connection handling in LdapClient . java to improve code readability and maintainability
refactor conditional checks in SequenceAction . java for better readability to improve code readability and maintainability
patch by jbellis ; review by jbellis for cassandra - 152
added a check to skip processing for synthetic fields in ReflectUtils . java to ensure that only synthetic fields are processed
added LoggerProvider to manage Ninja logging in ApplicationController and ApplicationController classes to enhance logging capabilities for better debugging and monitoring
replaced ImmutableMap . Builder with ImmutableMap . Builder for port handling in ServerStatusCommand . java and updated test assertions in ServerStatusCommandTest . java to
added a deprecationWarningIssued flag to the SpringFactory class and improved error handling in SpringFactoryTest to indicate that the spring context is deprecated and
added a deepStart method to the Startables class to facilitate asynchronous processing of startable objects
removed deprecated method reservePrimitiveExtensionArray from Shape . java and ShapeImpl . java to indicate that the method is outdated and should no longer be used
fix the laser table to be able to use it in the buildcraft .
updated object name validation logic in AbstractJdbcDatabase . java to improve code readability and maintainability
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated memory limit test to set expire messages period to zero to ensure proper handling of memory consumption during test execution
updated conditional checks in RequestHandlers . java for consistency to improve code readability and maintainability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 419
updated import statements and modified Python module search path handling in ProjectBuildFileParser . java to improve code readability and maintainability by centralizing the
updated frame size calculations in DirectAudioDevice , Toolkit , and Toolkit classes to improve error handling and ensure frame sizes are valid before processing
added null checks for enums in ElasticSearchStringLookupService . java to avoid potential NullPointerExceptions when enums is null
updated error message formatting in CommitLogReader . java to improve clarity of error messages for better debugging
added a call to ` containerScope . getPolicy ( ) ` in ` WebSocketSession . java ` to ensure the correct policy is used for WebSocket
refactor static field initialization logic in Java2TypeScriptTranslator . java to improve readability and maintainability of the code
updated the ` createContext ` method to use ` webroot ` instead of ` UI _ DIR ` to ensure the application uses the correct web
updated JUnit tests to use JUnit 5 for improved testing framework to align with the latest JUnit 5 features and improvements in JUnit 5
[ netbeans - 4071 ] remove unused method from profiler . isattachable ( )
replaced calls to ` printHeaderObject ` with ` createHeader ` in multiple formatter classes to improve code readability and maintain consistency in naming conventions
removed unused imports and added a method to place stop orders in VircurexTradeService . java to streamline import statements and provide a placeholder
added buffer reset calls in ReduceRecordProcessor . java to ensure buffer is reset before processing operations
added null checks for mOriginalForeground and mOriginalBackground in FloatingWidgetBackgroundView . java to avoid potential NullPointerExceptions when mOriginalBackground
updated conditional checks in FloatingDecimal . java and added a new ToString . java file for string representation to improve code readability and maintainability by
updated property type check in PropertyDescriptor . java and added a new test class Test7189112 . java with a test case for property setter
removed the maxVersion variable from the getVersions method in RealTimeGetComponent . java to simplify the code by eliminating unnecessary complexity
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 511
updated animations in RecentsView and TaskView to use alpha instead of View . INVISIBLE for task overlay overlays to improve user experience by ensuring
updated error messages to include field types in ORCRecordReader . java to improve clarity of error messages for better debugging
update demoutils to use the latest version of hls
[ hhh - 14236 ] remove unused import of java . lang . reflect . method
[ flink - 18186 ] [ hadoop ] fix log file name in hadoop - ipc
added warnings handling in TestSpecificCompiler . java and implemented a new test for union and fixed fields in TestSpecificCompiler . java to improve error reporting
added a return statement in WebSocketEndpoint . java and added a new test for session closure in WebSocketIT . java to ensure proper handling of session closure
updated random number generation in multiple service classes to use ` onChangeAfterBatchProcessing ` instead of ` onDaoStateBlockChainChanged ` and ` 
updated XML configuration mappings for OpenSymphony Groups in XmlConfigurationProvider . java to ensure consistency in naming conventions for improved readability and
added a conditional check for the stream ' s stop method in WebCamInputPanel . java to ensure proper handling of video track termination in the
replaced List with ArrayList for chart data retrieval in BittrexChartDataResponse and added a new method ` getChartData ` and ` getChart
updated import statements in GMLExamples . java and updated import statements in GMLExamples . java to improve code clarity and maintainability by
updated the ` g ` method in ` TargetType58 . java ` to use ` skip ` instead of ` substream ` to improve performance by
hhh - 10956 - fix compositeidfkgeneratedvalueidentitytest to handle null identifier
rename ` FindFullTextAction ` to ` DownloadFullTextAction ` in multiple classes to improve clarity and consistency in the codebase
updated URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultService to utilize a list of URI registrations instead of a single URI to improve
refactor WebSocketMapping , WebSocketUpgradeFilter , and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for OSDb hash before retrieving parameters in OpenSubtitle . java to avoid potential NullPointerExceptions when the hash is blank
added transferToken method to RuntimeImpl and MUtil classes in MUtil and MUtil classes to enhance token transfer functionality for better contract management
do n ' t delete the current directory if it ' s stepwise
updated the return statement from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to simplify the
added validation for empty join results in MapJoinOperator , HybridHashTableContainer , and HybridHashTableContainer to ensure proper handling of empty
added ` endPoint ` and ` endPoint ` methods to ` HTTPSPDYAsyncEndPoint ` and ` ServerHTTPSPDYTest `
added " id " parameter to various adapter adapters and TweetFragment classes to ensure the intent holds the correct ID of tweets in the intent
refactor disconnect logic in HttpURLConnection to use a dedicated disconnect method to improve code readability and maintainability by encapsulating disconnect logic
replaced int _ numChildren with AtomicInteger in TraceContext . java and updated traceId formatting in TraceContextTest . java to improve thread - safety and
updated JWT parameters in multiple classes to use " jwt " instead of " jwt " to ensure consistency in naming conventions across the codebase
disable the test in ValueTypeTests . java to ensure that the test is executed only once to avoid unnecessary failures
make resourcefactoryserviceimpl implement KieResources instead of resourcechangenotifierservice
corrected the spelling of ` PredicateType . IN ` to ` Predicate . NOT _ IN ` across multiple predicate classes to improve code readability
refactor exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to use OwnCloudAccount instead of OwnCloudAccount to improve
added a null check for witnessService before validation to avoid potential NullPointerException when witnessService is not initialized
updated the variable name from ` colExprMap . get ( col ) ` to ` colExprString ( ) ` in ` JoinDesc . java
added a check to ensure the item ' s javadoc is not present before setting it to avoid potential null pointer exceptions
replaced ` holderMethod ` with ` holderMetadata ` in ` CompiledICHolder . java ` and added new class ` RedefineInterfaceCall .
refactor revalidate methods in Tabs . java for consistency to improve code readability and maintainability
[ hotfix ] [ table - common ] remove unnecessary exception throw from kafkarecordserializationschemaadapter
updated the calculation of the x and y coordinates in Polygon . java to improve accuracy in positioning of polygon coordinates
updated the type of cacheManager . createCache method to accept a Configuration type to improve type safety and prevent potential ClassCastExceptions during cache creation
added length checks for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a test
refactor ShadowCookieManager class implementation to improve code readability and maintainability
added a new configuration option for managing external tables in Hive configurations and updated test cases in TestStorageBasedMetastoreAuthorizationProviderWithACL to ensure
updated type checks in Stage . java and ProgressBar . java in ProgressBar . java and ProgressBar . java to ensure proper rendering of WebGL
add getplatformbyteorder ( ) and getplatformbyteorder ( ) to platformcapability capability
updated PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the ` initWebViewLogin ` method to improve flexibility in
updated exception message from " Paramter " to " Parameter " in CallableStatementHandler . java to improve clarity of error messages for better debugging
updated date formatting in AuditEventsMvcEndpoint . java and added a new test method in AuditEventsMvcEndpointTests . java to ensure proper handling of
rename ExponentialTimer and ExponentialTimerBeanInfo classes to PreciseThroughputTimer and PreciseThroughputTimer to improve clarity and
added a method to remove soft bodies in SoftBodyTest . java to ensure proper cleanup of soft bodies and prevent potential memory leaks
[ hotfix ] [ table - common ] make sink - related interface public
updated log messages to use ` toString ( ) ` instead of ` cause ` in ` ZeppelinhubClient ` , ` Zeppelin
add a new test class ` JingleTest . java ` to verify the behavior of ` JingleContent ` to ensure that the Jingle content
fix redplasma and redplasma can not be load
added HTTP _ 2 _ HEADER _ PREFIX to BareResponseImpl and updated HttpInitializer to use HttpToHttp2 headers instead of Http2
replaced direct calls to ` plot . getTrusted ( ) ` with ` plot . getTrusted ( ) ` in ` Remove . java ` to improve
updated delimiter formatting in SimpleReport . java to improve readability and maintainability of the code
removed the ` - XDignore . symbol . file ` option from the ` JavapFileManager ` and modified the ` Options ` class to
renamed ` TickerDemo ` to ` StreamingTickerDemo ` in ` TickerDemo . java ` and removed the ` TickerDemo .
refactor contract type handling in Runtime . java to improve code readability and ensure contract address is valid before proceeding
ggb - 132 : do n ' t create input3d on non - linux
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
removed the ParserException declaration from the parsePayload method in ScriptTagPayloadReader . java to simplify the method signature and improve error handling
added a @ Override annotation to the getRepositoryFactoryBeanClassName method in JpaRepositoryConfigExtension . java to ensure proper overriding of getRepositoryFactoryBeanClassName
replaced ` getExecutableCommand ` with ` List < String > ` for command execution in multiple classes to improve type safety and simplify command retrieval logic
replaced ` this . x ` and ` this . y ` with ` IOSGLES20 . setDimensions ` in ` IOSGLES
removed the UploadPathActivity class from ComponentsModule . java and removed the UploadPathActivity . java file to streamline the codebase by eliminating
updated return statements in SimpleTextFieldsReader . java to use IndexOptions . DOCS _ ONLY instead of totalTermFreq to ensure correct handling
fix : fix findbugs issue with implicit constructor
added a database parameter to the populateValidateUniqueIfNeeded and validateForeignKeyIfNeeded methods in ColumnSnapshotGenerator . java to ensure compatibility with OracleDatabase during validation
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder class to improve code organization to enhance maintainability and readability of the code
removed the ` indexOptions ` variable from the iterator assignment in ` DefaultIndexingChain . java ` and ` PointInSetQuery . java `
updated the way rawName is processed in SchematicHandler . java to improve code readability and maintainability
added case for " java . util . Collections $ EmptyList " and " java . util . Collections $ EmptySortedSet " in AbstractCollectionAssert
renamed the ` Option ` enum from ` static ` to ` Option ` in ` ProcessExecutor . java ` to improve code readability and maintainability
added twitlonger handling in Compose . java and updated AlertDialog . Builder in ComposeActivity . java and ComposeActivity . java to
replaced ` toggleKeepInSync ( ) ` method with ` CheckBox ` in ` FileDetailFragment ` and ` OCFileListFragment ` to
replaced ` DatatypeConverter . parseBase64Binary ` with ` getMimeDecoder ( ) . decode ( b64encoded ) ` in ` Image
added new classes ` ControllerCounter ` , ` DBCallback ` , and ` DBCallback ` , and ` DBCallback ` , and ` DBCallback
changed the ` deleteTicket ` method from ` String ` to ` final ` in ` EhCacheTicketRegistry . java ` to enforce immut
added a new file ` FlywayMigrationRunner . java ` to create a new file ` FlywayMigrationRunner . java ` to facilitate
replaced ` isEmpty ( ) ` with ` size ( ) ` in ` HashMap . java ` and added a new class ` NotEmptyHashMap ` with
updated the version string from " 0.0 . 6 . 0 " to " 0.0 . 7 . 0 " to reflect the latest release version
updated the ` modify ` method to accept ` @ Nullable ` and added a warning log for missing compression modifiers in ` CompressionCodec ` and ` Z
added null checks for mainValue in LauncherHelper and updated TestHelper methods in Arrrghs to improve error handling and ensure proper resource management
refactor test class names from ` BasicErrorControllerIntegrationTest ` to ` AnsiOutputTests ` to improve clarity and consistency in naming conventions
[ gr - 27335 ] fix graal _ node _ count and hotspotprofal _ node _ count bug .
rename CellCopyPolicy to CellCopyPolicy for consistency to improve code readability and maintainability
added a method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and modified ` sIconLoadResult ( ) ` to
updated formFieldValuesToCaps method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCap
added orientation checks for landscape and landscape orientation in IconRecentsView . java to ensure proper item decoration for landscape and landscape orientations
deleted the AddAdapter . java file to the AddAdapter . java file to remove unused code to streamline the project
refactor constructor code retrieval logic in NonStaticLifter . java to improve code readability and maintainability
refactored the handling of sorting columns in OpTraitsRulesProcFactory . java to improve code readability and maintainability
refactor TestLogWatcher to use a looper method to improve code readability and maintainability by encapsulating the looping logic
added a print statement for " < any > " in Java2TypeScriptTranslator . java to improve readability of the code
updated SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
added a conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor . java to ensure that
added a singletonLock variable to TypeCachingBytecodeGenerator and modified singletonLock handling in TypeCachingBytecodeGenerator . java to improve thread safety and
rename ` responseClassCallback ` to ` responseClassCallbackWithClass ` and ` forwardClassCallbackWithClass ` in ` CallbackActionExamples `
[ bugfix ] [ html ] add append to output file in suitehtmlreporter
updated MavenExecutionContextView and MavenRepositoryMirror in MavenExecutionContextView . java and added a new test for useFirstMirror in MavenRepositoryMirror . java
added a ` name ` parameter to ` BuildRuleSourcePath ` and ` PathSourcePath ` classes to enhance the flexibility and usability of path
updated the comparison logic for serviceRedirectUri in OAuthCallbackAuthorizeEndpointController and added a new test for verifying operation client relationships with same redirect URI
replaced the use of ` EMPTY _ ANNOTATIONS _ ARRAY ` with ` AnnotationParser . toArray ( ) ` across multiple classes to improve code
replaced ` getBadgedDrawableForUser ` with ` getBadgedIconForUser ` in ` UserManagerCompatVL . java ` to
updated line separator configuration from " OS default " to " LF or CRLF to provide clearer guidance for users regarding line separators
updated method signature from isImplementingInterface to isDerivedClass in ConfigurationManager . java and added assertions in CMUTests . java to ensure proper
do n ' t sanitize input when use template engine
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw IOException instead of @ Ignore for file contents to improve error handling and ensure
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
updated containerType assignment in AllAppsRecyclerView and UserEventDispatcher classes to use LauncherLogProto instead of int to improve code readability and
hbase - 13232 - deprecate bufferpoolsizekey and bufferpoolpoolpoolsizekey ( ) in hbase . ipc . server
[ native ] fix ` ` not null ' ' in ` ` join type ' ' query
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameters in ` Executable ` , ` Parameter ` , and ` Parameter ` to
refactor TestFSTs class to improve code readability to enhance maintainability and facilitate future updates
refactor method signatures in CanvasDrawable , DrawInputBox , and LaTeXTextRenderer classes to improve code readability and maintainability by
hbase - 26286 addendum : add default initial size to the region split policy ( # 261 )
removed the resetLoadedState method from LauncherClings . java to streamline the loading process for better user experience
replaced ` keys ` and ` updatesAt ` with ` keys ` and ` updatesAt ` in ` ManagedSelector . java ` to improve clarity and
added a set of excludedDatasources to SpringDataSourceBeanPostProcessor to enable tracking of excluded data sources in the application
added storeUndoInfo ( ) method in TableValuesView , TableValuesPanel , and TableValuesPanel classes to ensure undo information is stored in the
updated KinesisProxy to use ClientConfiguration instead of ClientConfiguration in KinesisProxy and related classes to improve code readability and maintainability by central
[ hotfix ] [ platform ] fix velbus trigger event for channel identifier .
updated statement statements in LocalCacheSelectorCode and BoundedLocalCacheTest to disable tests due to unfavorable benchmarks to ensure tests are
added a test for illegal database names in IoTDBSessionSimpleIT and created a PartialPath class to ensure that illegal database names are correctly
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that the garbage collection is reset before proceeding
renamed ` desiredWorkspaceLeftRightOriginalPx ` to ` desiredWorkspaceHorizontalMarginPx ` for clarity to improve code readability and maintainability
refactor CharTokenizer to improve code readability and maintainability to enhance maintainability and readability of the code
updated GoogleCredentialsProvider to use JWTAccessWithScope ( true ) in DeviceManagerStubSettings . java to enhance security by enabling JWT access
updated the XENSERVER _ NETWORK _ LABEL constant from " xenservernetworklabel " to " xenservernetworklabel " to
update libgdx version to 1.7 . 6 and update libgdxNightlyVersion to reflect the latest features and improvements in the library
removed the ` metricNames ` field from the ` SolrCore ` class to streamline the code by eliminating unused functionality
replaced URI creation with Path creation in MavenManifestFactory . java to improve code readability and maintainability
replaced direct calls to System . getProperty ( " os . name " ) with a static final variable ` IS _ MAC ` to improve code readability
refactor JdbcAggregationRepository class to improve code readability to enhance maintainability and facilitate future updates
added a clear ( ) method to the slotList in Frame . java to ensure that the slot list is properly initialized and added to the other
set m _ predCount to - 1 in PredicatedNodeTest . java to set a default value of - 1 to avoid potential null pointer exceptions
added ` mergeProperties ( ) ` method to ` ConfigurationSpringInitializer ` and implemented a ` mergeProperties ( ) ` method in ` ConfigurationSpringInitializer
refactor setupLogging method to use slf4j . logger instead of slf4j . logger .
replaced HashMap with LinkedHashMap in multiple classes to ensure consistent iteration order for mapping operations
added null checks for jdbcHandlerMap in TypeHandlerRegistry . java to ensure proper handling of class hierarchy in the TypeHandlerRegistry
added debug logging statements for writing to Hibernate and JPA items in Hibernate and FlatFileItemWriter classes to improve traceability and debugging of
updated language range parsing logic in LocaleUtils . java for better readability to improve code readability and maintainability by reducing redundancy
added a call to ` handlerContext . executeFromIO ` in ` VertxHttp2Handler ` and ` VertxHttp2Test ` to
bug 60297 - improve performance of evaluationworkbook . gettable ( ) method
updated the type checks in BaseSchemaTextFormatter . java for clarity and consistency to improve code readability and maintainability
updated MongoClient imports from MongoFactoryBean to MongoClientFactoryBean in MongoNamespaceReplicaSetTests . java to ensure compatibility with the latest MongoDB
replaced ` HashSet < BaseWork > ` with ` LinkedHashSet < BaseWork > ` in ` SparkWork . java ` to ensure consistent iteration order for
added a check to ensure the operator tree is cloned before cloning it to improve performance by avoiding unnecessary cloning of the Operator tree
added null checks for getClientId in DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to handle null client IDs to improve robustness
added a call to clear the AchievementList field _ 187981 _ e . clear ( ) in StatList . java to ensure that the
set default values in MutableDatabaseInfo , MutableJdbcDriverInfo , and MutableJdbcDriverInfo in MutableDatabaseInfo and MutableJdbcDriverInfo classes to
updated method names from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottom
added long buffer handling in ByteBuffersDataInput . java to improve memory management and error handling for long buffer operations
updated file time handling to include sec and nsec parameters in UnixFileAttributes . java and Basic . java to improve accuracy of file time handling by
added a new file ` TestNoEagerReclaimOfHumongousRegions . java ` that tests the ` humongousRegions
added a conditional check for the visibility of the search bar in AllAppsContainerView to enhance user experience by hiding the search bar when it is
[ hotfix ] [ runtime ] fix a typo in envrouterfeature
added a null check for cur in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class and a ` ReloadPageAction ` class to handle the " Reload Page " action to
updated log level from info to warn in SQLManager . java to improve logging granularity and reduce clutter in log statements
updated the minimum Spring version from 3.1 . 7 . RELEASE to 3.1 . 8 . RELEASE to ensure compatibility with the latest Spring features and improvements
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that the configuration type does not have a selected version
( chore ) camel - geoserver : use ServiceLoader instead of java . util . iterator ( )
added a finalize method to the HiveHBaseTableInputFormat class to ensure proper resource management and prevent memory leaks
added a ` stopStatementExecutor ` method to ` JdbcConnector ` , ` HiveViewImpl ` , and ` HiveViewImpl ` classes to ensure
add support for external - dtd and non - external - dtd in documentfactory and elementhandlerfactory
updated JdbStopThreadidTest to use a OutputAnalyzer instead of a waitForPrompt method to improve clarity and maintainability of the test code
added a ` getType ` method to ` ShadowContentResolver ` and a corresponding test in ` ContentResolverTest ` to ensure that the ` getType ` method
updated the type of the ` removeIf ` method in ` ExpressionThreadPoolManager . java ` to use ` entry ` instead of ` runnable ` to
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to use " vertx . httpPort "
changed the listener from addCaptureListener to addListener in the buttonTable to improve code readability and maintainability
updated the default batch size from 10 to 3 in NewSessionQueueOptions . java to improve performance by optimizing the batch size based on available
added error handling for resource manager connection discovery in TaskExecutor . java to improve robustness by logging errors when connection fails
updated the handling of classFile in LambdaRewriter and added a LambdaExpressionFallback in AbstractMemberFunctionInvokation . java to improve error handling
updated error message in ProgressBar . java to include " min " instead of " max " to improve clarity of error messages for better debugging
updated the ` onMessage ` method to include ` owner ` and ` telegram ` parameters across multiple classes to improve clarity and consistency in message handling
added a new interface ` Cursor ` , ` Database ` , and ` Row ` classes , and ` Database ` , and ` Row ` classes to
refactor multiple assertion classes for improved clarity to enhance maintainability and readability of the assertion framework
added setbeanid method to ebeanserver and TDSpiEbeanServer and TDSpiEbeanServer to enhance bean ID handling and ensure proper
replaced " tools / xslt / add - to - site - descriptor . xsl " with ` getAddToSiteDescriptorXsl ( ) `
refactor the handling of request matchers in HttpSecurity . java to improve code readability and maintainability by reducing duplication
added hashCode ( ) and equals ( ) methods in ContactResource . java to ensure proper comparison and comparison of ContactResource instances
camel - 15836 - camel - coyote : remove unnecessary dependency on coyote .
updated log messages for clarity and consistency in FileManager . java to improve readability and maintainability of log messages for better debugging
added a tearDown method in TestJdbcDataSource and created a tearDown method in TestIndexSearcher to ensure proper resource management and prevent potential memory leaks
refactor code for improved readability and maintainability in SyntaxTests . java to enhance code readability and maintainability
refactor ConnectionModel , ModeledConnection , and ModeledConnection classes to improve code organization and maintainability
[ tika - 2424 ] remove unused parserdecorator . parse ( stream )
add a check for cpw . mods . fml and cpw . mods . fml . server . dedicated . server . MinecraftServer . Minecraft
updated variable declarations in AccountUtils and IndexedForest classes for consistency to improve code readability and maintainability
updated parameter names from " swap " to " rename " in ` TestCoreAdminApis . java ` and ` CoreApiMapping . java `
added a new test method ` testJsxComment ` to ` JsLexerJsxTest ` and updated formatting in ` Parser ` to improve
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality in the launcher
added a new test method ` printsErrorWhenBuckConfigIsMissing ` to ` BuildEndToEndTest ` and ` CxxEnd
added usage of OperatingSystemMXBean in TestStringBufferAndBuilderGrowth . java for memory management in TestStringBufferAndBuilderGrowth . java
added a ` conversionService ` parameter to the ` MapToLocalDateConverter ` class and updated related method calls to use ` conversionService ` to
added a success flag to the HiveMetaStoreClient class to enable successful execution of the Hive metastore operation
updated the condition in ResourceReferenceInfo and Dstu2BundleFactoryTest in ResourceReferenceInfo and Dstu2BundleFactoryTest to ensure
added support for " amp . twimg . com " and " amp . twimg . com " in TimeLineCursorAdapter and TweetActivity
added a @ Deprecated annotation to AreaReference . java to indicate that the method is outdated and should no longer be used
refactor ElementType and Target classes for improved clarity to enhance code readability and maintainability
added assertions for ` REF _ invokeStatic ` , ` REF _ invokeSpecial ` , and ` REF _ invokeSpecial ` in `
changed the default value of ` submitKeyUpdates ` from " false " to " true " in ` SelectorManager . java ` to ensure thread safety
fix a typo in the mouse event type in the editnodefield .
camel - 14284 : camel - spring - bean : add support for type : and type : in beanexpression
refactor BenchmarkPublisher , ProtocolPublishDecodingServer , and PublishReceiverHandler classes to improve code organization and maintainability
refactor exception handling in AgentRunnerTest . java to improve code readability and maintainability
added methods to return the specified Maven project property value in multiple Java files to improve clarity and consistency in the description of Maven project properties
refactor face addition logic in ObjLoader . java to improve code readability and maintainability
refactor ProcessEngine class to improve code organization to enhance maintainability and readability of the code
replace reentrantLock with lock . unlock ( ) in JavassistProxyFactory , JBoss6VFS , and LogFactory
added " jar " parameter to the getBomReference method in PrintMavenAsCycloneDxBom and PrintMavenAsCyclone
updated the back method call in UIBuilder to use the evt ' s getComponent ( ) method to ensure the correct component is returned for processing
[ java ] do n ' t attempt to verify certificate on server - to - server certificate
updated the visibility of ` actual ` parameter in ` ObjectArraySubject ` , ` StandardSubjectBuilder ` , and ` Truth ` classes to improve type
replaced NutchConf with getConf ( ) in Fetcher , Generator , Generator , Generator , Generator , Generator , Generator , Generator , Generator ,
updated SheetAssembly and StubsController to deselect the tab in SheetAssembly and added a conditional check in StubsController to improve user experience
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` field
added null checks for ` getTimeInterval ` in ` ImportContainerImpl ` and ` ImporterGEXF2Test ` to prevent potential NullPointerException
updated command name from " logLevel INFO - serverPort " to " - serverPort " in MockServerContainer . java to improve code readability and
updated error message formatting in FunctionRegistry . java to include the exception message to improve clarity of error messages for better debugging
rename robotshonoringpolicy to robotshonoringpolicy instead of robotsHonoringpolicy
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
camel - 15836 - camel - test - java : use file . separator instead of file . contains ( ) . contains ( )
added a method to retrieve the alternative path in ExpectNewDemo . java to provide a method to retrieve the alternative path from the input stream
updated input initialization in LogEntryParseTester . java to use getFirstFilter ( ) instead of input . init ( ) to ensure proper initialization of the
added protectionDomain parameter to BufferAlignmentAgent . java to enhance protection domain handling in the code
added a dispose method to the WaterRipples class to ensure proper resource management and prevent memory leaks
added configuration for disabling semijoin optimizations and operations in HiveConf and updated dynamic partition optimization logic in DynamicPartitionPruningOptimization to
updated the authorization description from " base64 " to " base64 " in TokenKeyEndpointDocs . java to clarify the purpose of the authorization request
updated wallpaper offset calculation in Launcher . java and Workspace . java to optimize wallpaper offset calculations for improved user experience
updated ` SybaseASADatabase ` and ` CreateSequenceGenerator ` to check for ` SybaseASADatabase ` instead of ` Sybase
updated descriptions in PutSQL . java and added a new test for rollback behavior in TestPutSQL . java and TestPutSQL . java to
added error handling for creation of sub - files in SnapPuller and created a corresponding test in TestReplicationHandler to ensure proper directory creation and
updated the id from " id : launcher " to " launcher : launcher : launcher : launcher : launcher : launcher : launcher : launcher : launcher "
[ java ] move framer . frame to framer . frame ( ) instead of framer . frame ( ) .
updated parameter names from ` DEFAULT _ FILTER _ PROCESSES _ URI ` to ` DEFAULT _ FILTER _ PROCESSES _ URI ` across multiple
updated error messages in GenericUDFStringToMap . java to provide clearer guidance for users regarding key - value pairs and delimiters
replaced ` INSTANT _ STAMPLE ` with ` TemporalUnit ` in ` PlainFormatter ` and modified the ` formatInstance ` method to
updated timeout duration from 1000ms to 3000 and refactored close methods in AgentRunner . java to improve resource management and ensure proper timeout handling
hhh - 14288 - remove unused import and refactoring in classloadingstrategyhelper
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
updated debug log message from Closing to New proto event file in HiveProtoLoggingHook . java to provide clearer context for the event per file
added JUnit Ignore annotation to SamplingNamingTest . java to temporarily disable tests that require at least one sample result
updated error message from " then zero " to " then zero " in GridLayout . java to improve clarity of error messages for better debugging
updated output formatting in DecisionNode and WagonCART classes to improve code readability and maintainability by using try - with - resources for better
added sorting functionality for bound sheet records in XLS2CSVmra and BoundSheetRecord classes to enable sorting of sheet records based on their position
refactor pulse calculations in ThrustCurveMotor . java for better readability to improve code readability and maintainability by using more descript
refactor inputSys initialization to use inputManager instead of inputManager to improve code readability and maintainability
refactor hashCode field handling in UniverseBuilder . java to improve code readability and maintainability
removed unused imports and added a new method ` getMesh ( ) ` in ` Block . java ` to streamline code and improve maintainability
updated keytabPath to localKeytabPath and localKeytabPrincipal in YarnApplicationMasterRunner . java and YarnTaskManagerRunner .
added a new option ` EMPTY _ WORD _ OPTIONS ` and modified matcher logic in ` LineReader ` and ` LineReaderImpl ` to
updated the call to ` writeCommitLog ` in ` Keyspace . java ` to include ` writeCommitLog ` in ` pushViewReplicaUpdates
added functionality to manage the auto - open web preferences in the CaptureActivity and PreferencesActivity classes to improve user experience by allowing users to open the web
added a new test method ` testBatching ` to ` JoinedTableTest ` for batching in JPA to ensure that batching functionality
added exception handling for duplicate timestamps in JpaPersistenceService . java to improve error reporting for duplicate timestamps during item persist operations
removed deprecated ` -- format ` option in ` CucumberOptions ` and updated the ` @ CucumberOptions ` annotation in ` RuntimeOptions
removed the save ( ) method from the PMS class to streamline the code by eliminating unnecessary saving operations
refactor back key handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the variable name from ` newCapacity ` to ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new class ` Capacity
updated method call from goHome ( ) to onNoteSaved ( noteTmp ) in DetailFragment . java to improve code clarity and maintainability
fix xwpfwordextractor . getendnotes ( int id ) and xwpfwordextractor . getendnotes (
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager and modified related tests in CasEventsReportEndpoint to include clientInfo
added a new test method ` testVersion ( ) ` to ` BridjOGRDataStoreTest . java ` to verify the version of the
added a new file Lifecycle . java to manage network error handling to provide a framework for managing network errors in the application
updated URL handling in DeviantartRipper . java and added a sleep mechanism to handle 404 URL requests to improve error handling and provide clearer
updated import statements in BodyTubeShapes , BodyTubeShapes , RocketFigure , and RocketFigure classes to improve
fix crash when use nativewindow . gettexturebuffer ( ) .
add a method to set the initial value of the settings component in the settingsStep and add a method to set the initial value to enhance user experience
replaced ` PackedInts . PackedInts . PackedInts . PackedInts . PackedInts . Packed
refactor ` DefaultStatusRoute ` to use ` originatingType ` instead of ` Collection < StatusRoute > ` in ` DefaultRouteBuilder `
refactor code to simplify data handling in GoAwayTest . java to improve code readability and maintainability
added support for FluentPropertyBean in ReflectionUtils and created a new test class ` FluentSetterBean ` with ` FluentPropertyBean ` to enhance the
refactor ` BlockingHttpEndpoint ` and ` HttpEndpoint ` classes to use ` CharStreams ` instead of ` ByteStreams ` to
updated the ` FileSortByExpressionTest ` and ` FileSortByIgnoreCaseExpressionTest ` to use ` prepareFolder ` instead of ` noop `
updated the logging statement in GestureState . java to use the current task ID instead of mLastAppearedTaskTarget to improve clarity and accuracy
add ` ` writeimagescalinginformation ' ' and ` ` writeimagescaleance ' ' option to rtfdocumentsettings
added SQL constant handling for aggregate function names in TSServiceImpl . java to improve code readability and maintainability by using a more descript
updated TestExceptionInBeforeClassHooks and WithNestedTests classes to extend WithNestedTests and added a new TestRule to improve test structure and ensure
added functionality to select and display the XCAP server URI in the PresencePanel to enhance user experience by allowing dynamic selection of the XCAP server
added a new constant STRUTS _ HANDLE _ EXCEPTION to StrutsConstants and modified error handling logic in Dispatcher to enhance error handling
added a ` stopTextEditing ` method to ` CodenameOneImplementation ` , ` TextArea ` , and ` TextArea ` classes to ensure that the
nifi - 10225 : fix nullpointerexception in controlrate . getgroupattribute ( )
updated the ` showDialog ` method to include a ` isNewComponent ` parameter and modified the ` selectPreset ` method in ` ComponentConfigDialog
added error handling and logging in ChatAnnotation . java to improve error handling and logging for better debugging
added a check for Windows operating systems in HTMLDataFlavorTest . java to ensure that the test only runs on non - Windows operating systems
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to TransactionIsolationLevel . java to support SQL server snapshot functionality in the transaction isolation
added a loop to wait for newRecids to complete before adding newRecids to improve resource management and prevent potential memory leaks
use java . util . zip . file . openread ( ) instead of jreCompat . getInstance ( ) . jarfileismultirelease (
added null checks for ` getCommandClass ` and ` getCommandClass ` in ` RegisteredServiceSimpleFormController . java ` to avoid potential NullPointerException
[ hotfix ] [ config ] add ignore option to disk failure policy
removed public access modifiers from RipperInterface and RipStatusHandler classes to enhance encapsulation by restricting access to these methods
do n ' t use InetAddresses . isInetAddress ( ) in peerdiscoveryagent
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to streamline the code by eliminating unused functionality
updated import statements for AutoRebalanceStrategy and ClusterDataCache in PinotSegmentRebalancer . java to utilize a new cluster data cache
[ java ] remove ` ` delete ' ' method and add ` ` autoremove ' ' to ` ` container ' '
refactor DefaultSeleneseCommand to improve argument parsing logic and add unit tests for command parsing to ensure robustness by preventing invalid input lines
added multiple attempts rule to CreateGlossaryTests to enable testing of multiple attempts in the test suite
updated schema references from ` AllOfRef . getName ( ) ` to ` COMPONENTS _ SCHEMAS _ REF ` in ` Model
replaced ` deleted ` with ` source ` in ` EntityDeletedEvent ` and updated related assertions in ` IdentityZoneEndpointsMockMvcTests ` to improve
added support for " Format _ Settings _ GOP " in FormatConfiguration . java and updated media handling in DLNAMediaInfoParser . java to
added a new file TestProfileReturnTypePrinting . java that implements a method to test the return type printing functionality to facilitate testing of method return types
added locking mechanism in ParseConfigUtils . java to ensure proper resource management and prevent potential memory leaks
refactor MinMaxValueBasedSelectionOrderByCombineOperator to use AcquireReleaseColumnsSegmentOperator instead of IntermediateResultsBlock to improve code clarity and
[ java ] remove the @ Ignore annotation from firefoxprofiletest . java
updated return statements for display density and bounds information in HasAndroidDeviceDetails . java and getSystemBars ( ) to improve clarity and consistency in the
removed unused imports in ProjectStats , SortedBugCollectionHandler , and Filter classes to simplify code and improve readability by eliminating unnecessary dependencies
added disabled shadow and disabled shadow color to the HTML text in ImportPanel . java to improve the visual appearance of disabled shadows in the UI
removed multiple @ Override annotations from CacheControlImpl . java to streamline code and improve readability
added a check for empty dates in ScheduledAction . java and a corresponding test in ScheduledActionTest . java to ensure that the scheduled actions do not
refactor upload button handling in ShareActivity to use actionMenu for better organization to improve code readability and maintainability by encapsulating the
[ hotfix ] [ core ] fix typo in javadoc .
added method ` loadMetaData ( InputStream ) ` to ` MeXBTExchange ` , ` RippleExchange ` , and ` RippleExchange `
added JSON serialization support for Writable objects in CrawlDbReader . java to enable proper serialization of Writable objects in JSON format
testjaspicbasicauthenticator : remove testerrequest from testjaspicbasicauthenticator
added a configurationPid parameter to the Component annotation in MDNSDiscoveryService . java to enable the discovery process for the Discovery service
added null check for messageItem before scrollToPositionWithOffset in ChatViewerFragment . java to avoid potential NullPointerException when messageItem is null
added ForkJoinWorkerThread to the ForkJoinPool initialization in TestBPIndexReorderer . java to enhance thread management by allowing parallel execution of the pool
removed unnecessary assertions in RoleCommandOrderTest . java to streamline test execution by eliminating unnecessary dependencies
added methods to restore local info from a table info in PartInfo . java to ensure proper handling of null table information during serialization
refactor conditional statements in JvmUtils and LikeCondition classes to improve code readability and maintainability
added Matrix4 transformation and transformations in BitmapFontTest . java to enhance rendering performance and improve visual quality
[ hotfix ] [ python ] fix typo in streamphysicalpythongroupwindowaggregaterule
removed the ` hasPendingEcho ` and ` hasPendingEcho ` method from ` EndpointState ` , ` Gossiper ` , and ` 
added a method ` getUnreachableTokenOwners ` to the ` Gossiper ` class and updated related checks in ` StorageProxy `
geosymbolic : fix coordmultiplication replacer not change to multiplication
updated contentType handling in FormAuthenticator and added getter and setter methods in SavedRequest to ensure the correct content type is used in the saved request
replaced static variables with static final variables and added null checks in XToolkit . java to improve code readability and ensure proper initialization of display variables
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
replaced ` Object ` with ` ReentrantReadWriteLock ` in ` EnvironmentImpl . java ` to improve thread safety and maintainability of locking mechanisms
added a new test method ` testReadIdentityProviderInOtherZone _ Using _ Zones _ Token ` in ` IdentityProviderEndpointsMockMvcTests .
updated JobHandle to use ExpireJob in ObjectTypeNode and added null checks in PointInTimeTrigger and PointInTimeTrigger classes to ensure
removed unused import of Service from SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 114 ] add heartbeat message to rebalance push ( # 11486 )
added a ` getDetachedMkDirMode ( ) ` method to ` PropServerConfiguration ` , ` CairoConfigurationWrapper ` , and `
[ java ] disable the cluster test when there be a slow follower .
updated default label pattern from authors3 to auth in JabRefPreferences . java to improve clarity and consistency in naming conventions
replaced ` getLd ( ) . getLd ( ) . getParseTimeDeps ( ) ` with ` getParsedTimeDepsInferr
added null checks for oAuthService in GoogleCloudAPI and updated initialization logic in GoogleTTSService to ensure proper resource management and prevent potential memory
camel - 14284 : add support for dynamic file name in the end of the file on completion .
added a boolean parameter ` reopenReaders ` to ` SolrConfig ` and modified the conditional check in ` SolrCore ` to ensure readers are only
[ hotfix ] [ runtime ] add dialect version to mapwriter
added ` currentDate ` and ` currentTimestamp ` methods to ` Update ` and ` getUpdateObject ` methods in ` Update ` and ` Update
added a dup method ` dup ` to ` ResultInfo ` and created a new ` PrimitiveTypeInBoundForMethodRefTest ` class to enhance
refactor ` AddConfigWidgetTest ` , ` ItemSearchCondition ` , ` ItemSearchCondition ` , and ` ItemSearchCondition ` classes to
replaced ` Term ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` to utilize ` ConstantScoreQuery ` for better
added new classes " AbstractValidatingLambdaMetafactory " , " InnerClassLambdaMetafactory " , and " InnerClassLambdaMetafactory " ,
updated the ` providesUploadController ` method to include ` direct _ nearby _ upload _ prefs ` and ` direct _ nearby _ upload _ prefs `
added handling for SYSDUMMY1 and SYSDUMMY1 database tables in multiple classes to ensure compatibility with MySQL and Postg
refactor TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration to use ConditionalOnProperty instead of ConditionalOnMissingBean to improve code readability and
added lastPid and getLastPid ( ) methods to POIXMLProperties and modified property retrieval logic in TestPOIXMLProperties to improve property management
fix ` ` neg infinity ' ' error in geotiffreader . read ( )
updated CLIDriver and SessionState classes to use a dedicated method for processing file processes to improve code readability and maintainability by encapsulating
replaced ` Executor ` with ` Schedulers ` in ` MockRestAdapter ` and updated ` MockRestAdapterTest ` to use ` Schedulers `
updated the ` selectByRuleIdSet ` method to accept a ` ruleIdSet ` parameter and modified the ` selectByRuleIdSet `
added a new method ` addExitDescription ` to ` ExitStatus ` and updated exception handling in ` AbstractJob ` , ` AbstractStep ` ,
added a check for the player in the MultiblockRenderHandler to ensure proper event handling based on the player ' s player context
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity and consistency in naming conventions
removed unused imports from getRangeLength ( ) in PlotConfiguration . java to simplify code and improve readability
fix issue with ui alert controller in ios input
replaced ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java `
updated the method name from ` arrayValue ` to ` values ` in ` Value ` and ` HasValue ` classes to improve clarity and consistency in the
removed the assertion in AdvServiceTest . java to streamline the test by eliminating unnecessary assertions
replaced ` potentiallyConvertMapKey ` with ` potentiallyEscapeMapKey ` in ` MappingMongoConverter ` to improve code readability and maintainability by
updated log statements in NearbyMapFragment . java to improve readability of log messages for better debugging
camel - 15836 : camel - jbang - use deprecated value instead of javatype instead of javatype
updated FuzzyLikeThisQuery to handle non - existent fields and added a test for non - existing fields in FuzzyLikeThisQuery to
modified the ` writeApplicationsLinks ` method to accept a ` tabularList ` parameter to enhance flexibility in handling application links based on tabular
[ dspace ] use identifierservicefactory instead of createmissingidentifiers ( )
replaced ` bytes . length ` with ` bw . getLength ( ) ` in ` VectorColumnAssignFactory . java ` to improve code readability and
changed the return type of the getDisplayScript method from abstract to null in LocaleNameProvider . java to provide a default implementation of the method
refactor sequence handling in RemoteWebDriver and BasicKeyboardInterfaceTest to improve code readability and maintain consistency in naming conventions
pdfbox - 4071 : use list . size ( ) instead of list . size ( )
added synchronization and synchronization for active interfaces in NetworkConfigurationWatcher and corresponding listener implementations in NetworkManagerListenerImpl to ensure thread safety when accessing active
fix for bug # 45538 - add test for read nested object ( # 45538 )
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve readability
replaced hostParams with roleParams in AmbariManagementControllerImpl . java to improve code readability and maintainability
pdfbox - 4071 : do n ' t use symbol in pdsimplefont , a suggest by valerybokov
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure compatibility with GL
updated LiveTvGuideActivity and ProgramListAdapter to include the current guide start time to ensure accurate tracking of the current guide ' s start time
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added a new ` CommonParentTest . java `
added libfreetype , libfontmanager . so , and libfontmanager . so to the dlopen method in the JREUtils class to
refactor ` ExpressionValue ` to use ` ExpressionWithDummyArg ` instead of ` ve2 ` to improve code readability and maintainability by
[ gr - 27335 ] fix loop limit check to be protected non - overflow .
refactor type handling in TypeFrameModelingVisitor to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy
added a new class ` LocalizedString ` and updated related methods in ` Formattable ` , ` Attr ` , and ` Attr ` classes to
added a new boolean property ` disableClasspathSearch ` and updated related logic in ` ServerConfig . java ` and ` DefaultContainer . java ` to
refactor DataLine class to use immutable arrays instead of immutable arrays to improve immutability and ensure immutability of formats array
updated the default value of retries ( ) in Reference . java and Reference . java to reflect the correct number of retries in the reference class
added settings handling in TexturePacker . java and updated output formatting in TexturePacker . java to improve flexibility in handling settings in the TexturePack
added a new view binding for uploaded images and wiki text in AchievementsFragment . java to improve code readability and prevent potential null pointer exceptions
( chore ) camel - translatingjavacphasetracertest : fix annotation processing round .
updated ` CategoryInterface ` and ` MwQueryPage ` to include ` categoryinfo ` in ` CategoryInterface ` and added ` CategoryInfo `
updated assertion messages from " username " to " password " in AuthzAuthenticationRequest . java to improve clarity and consistency in error messages
refactor taskbar timeout handling in TaskbarStashController to utilize AccessibilityManager for improved accessibility support to enhance user experience by allowing custom
added handling for ' ^ ' in signature handling in GenericSignatureParser . java to ensure proper exception handling for duplicate entries in signature processing
updated access flag handling in ClassVisitorDriverFromElement and added new test cases for generic interface and enums in StubJarTest to ensure proper handling
replaced ` in ` with ` Objects . requireNonNull ( in ) ` in ` IntervalFilter ` and added null checks in ` LowpassIntervals
added a test method ` testEntrySetIteratorLastHashNext ` and ` testEntrySetIteratorLastNext ` in ` MapInterfaceTest . java
added a serialVersionUID field to the TreeMap class to ensure proper serialization of the TreeMap class
updated the createdAt method from ` Instant . ofEpochMilli ` to ` Instant . ofEpochSecond ` in ` ImageData . java ` to
updated SingularWebService and CASTranslator classes to include " grobcovF2m " and " grobcovF2m " to
added EncryptionUtils import for EncryptionUtils and PUBLIC _ KEY in AccountRemovalJob . java to enhance security by ensuring private and public keys are
updated keepAlive header handling in JDKAsyncHttpProvider and NettyAsyncHttpProvider to use a dedicated utility method to improve code readability and
added a check for empty interceptor list in PostJoinMapOperation and corresponding unit tests in PostJoinMapOperationTest to ensure proper handling of empty map
mondrian : remove unused processor from standarddialect . java
removed the ` spillEnabled ` parameter from ` BaseHybridHashTable ` and ` LongHybridHashTable ` classes to streamline the code by eliminating
refactor EnvironmentVariableHelper to use a separate method for obtaining process environment variables to improve code readability and maintainability by encapsulating the
refactor defaultactionmapper to work with xwork 2 . x
added SerializableMode import and added SerializableMode import in Mockito . java and PluginSwitch . java to enhance serialization support and improve code clarity
fix dependency injection exception when field value be null
updated Expression array handling in Parser and added isolation level clause parsing in Mode to enhance flexibility in select statements based on user - defined isolation levels
updated the import statements and variable names for HIVE _ SERVER2 _ TRANSPORT _ MODE and HIVE _ SERVER2 _ HTTP
added a method ` isCacheable ( LeafReaderContext ) ` to the ` GlobalOrdinalsWithScoreQuery ` class to provide a way to
added a new file TestStrangeControl . java for testing strange control functionality to facilitate testing of strange control behavior in the compiler
updated method names from " % s . json " to " % s . jslib " in JsFile . java and JsLibrary .
added selectionStart , selectionEnd and selectionStart and selectionEnd methods to ShadowEditText . java to enhance the selection functionality for better user experience
refactor GRPCEnrichment to use try - with - resources for improved resource management to ensure proper resource management and prevent potential memory leaks
added ` use ` method to ` Jooby ` and ` Router ` classes in ` Jooby ` and ` Router ` classes to enhance
added null check for fst in FreeTextSuggester . java to prevent illegal state exceptions during lookups
updated string formatting in T4975569 , T6729471 , and T6729471 classes to improve code readability and ensure
added a method to load abi writer class in JavacInMemoryStep . java to improve the handling of ABI writer classes in the application
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to boolean method
added a condition to check if the thread is stopped before executing the scheduled Runnable in PullMessageService . java to ensure proper scheduling behavior when the thread
[ hotfix ] [ javadoc ] fix typo in energyendpointer
refactored the handling of displayed column keys in ComponentPresetChooserDialog . java to improve code readability and maintainability by encapsulating
removed unused imports in BazaarRepository , CVSRepository , IndexDatabase , and IndexDatabase classes to clean up the code and improve
camel - 14284 : camel - google - sheets - fix typo in camel - google - sheets
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and modified ` CxxLibraryMetadataFactory `
deleted unused files related to Constants . java and DistanceUtils . java to clean up the codebase
refactor the handling of the key splitting logic in RandomPartitioner . java to improve readability and maintainability of the code
[ gr - 27186 ] fix build - time initialization failure in native - image - generator
added a new test method ` testCreateInline ` to ` RoleBinding ` and modified the ` Create ` method in ` RoleBindingOperationsImpl `
added logging statements for session cookie configuration in UaaSessionCookieConfig . java to improve debugging and traceability of session cookie configurations
updated the calculation of the file name from LOG _ DAYS to Calendar . DAY _ OF _ YEAR in HotseatFileLog . java to
updated condition in ObservableBlockingSubscribe . java for better clarity to improve code readability and maintainability
added error handling for invalid options in JavapTask . java and created a new T8033711 . java file to improve robustness by
replaced calls to ` Collectors . toList ( ) ` with ` Collectors . toList ( ) ` across multiple files to improve code readability and
updated logging level from error to warn in TaskDriver . java to improve logging clarity and ensure proper handling of shutdown conditions
[ hotfix ] [ network ] added tieredstorage configuration to input gatespecutils
add isnotsuccessstatus ( ) method to emailsenderservice and sendgridservice . isnotsuccessstatus ( )
set gl20 to true in cuboc and cubocdesktop to use gl20
fix a typo in jimplebody . getunits ( ) . getunits ( ) . last ( ) . getunits ( )
replaced ` DefaultSourcePathRuleFinder ` with ` SourcePathResolver ` and updated import statements in ` OutputMacroExpander . java ` to improve
[ hotfix ] [ table - common ] fix test for light job
added a check for ` \ \ " in the ` MergeWordsListTask ` class to ensure that only valid files are processed
updated method signatures in FeedbackSessionResultsBundle , InstructorFeedbackResponseComment , and InstructorFeedbackResponseComment classes to improve clarity and
refactor conditional checks in Container . java to improve readability to enhance code readability and maintainability
added a new file TestEscapeThroughInvoke . java with a class TestEscapeThroughInvoke . java that tests object escaping functionality to facilitate testing of escape
replaced the ` skip ` method with ` IOUtils . read ` in ` FilePreviewService . java ` to ensure that the input stream is only read
updated the ` init ` method to use ` InterceptorDefinition [ ] ` and added exception handling in ` JdbcInterceptor ` and ` JdbcInterceptor `
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching a broader range of exceptions
added eviction logic in LruBlockCache and added unit tests in TestLruBlockCache to improve cache eviction handling and ensure correct eviction behavior
removed unnecessary dependency on AbstractFloatingView in RecentsView . java to simplify code and improve readability
updated sleep duration from 1000ms to 5000ms in HelixBrokerStarter and HelixServerStarter to allow more time for the helix
added ` CoinmateExchange ` and ` CoinmateMetadataServiceRaw ` classes and implemented ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw
fix ( modelbuilder ) : use systempath instead of hard - coded value
pdfbox - 4071 : do n ' t update object key when write to object .
add ` setdisplaydata ` method to ` PTransform ` , ` PTransform ` , ` PTransform ` , and ` PTransformTest `
updated assertions in SubjectTest . java to use assertThat instead of DefaultSubject . ASSERTION _ ERROR to improve readability and maintainability of the
remove jdk . certpath . disabledalgorithms property from clientjsseserverjsse
updated error messages for subcommand groups in OptionData . java to improve clarity of error messages for better debugging
refactor module - info . java files for improved clarity to enhance code readability and maintainability
added error handling for server errors in IOSImplementation . java to improve robustness by providing clearer error messages when server errors are encountered
updated the variable name from ` sCheckingEvents ` to ` sCheckingEvents ` in ` LauncherInstrumentation ` and ` LogEventChecker ` to
refactor exception handling and logging in FileSinkOperator . java to improve code readability and maintainability while ensuring proper resource management
added diagnostic handling in SchemaGenerator . java to improve debugging by providing clearer error messages during task execution
replaced SemanticException with OptiqSemanticException in SemanticAnalyzer . java to improve error handling by using OptiqSemanticException instead of RuntimeException
updated DataSourceMonitorTests . java file to improve test coverage for DataSourceMonitor functionality
added a synchronized set of loadedResourcePaths in ClasspathMethodScanner . java to ensure loadedResourcePaths is only added when it is already loaded
added null checks for the test instance before accessing the test instance to improve robustness by avoiding potential NullPointerExceptions during service initialization
added null check for ` o ` in ` RoutingInBoundHandler . java ` and updated response handling in ` RoutingInBoundHandler . java `
added natIp parameter to EkeyConfiguration , EkeyHandler , EkeyUdpPacketReceiver , EkeyHandler , EkeyUdpPacket
added ArrowByteBufAllocator and ArrowBufAllocator to multiple classes and updated import statements in multiple classes to improve memory management and ensure compatibility with
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added a null check for header and body buffer before setting the state in HttpConnection . java and created a corresponding test in RFC2616BaseTest .
refactor SubscriptionHelper to use AtomicReference for upstream and requestedInitial in MultiTimeout . java to improve code readability and maintainability by encaps
patch by jbellis ; review by jbellis for cassandra - 142
added @ Test annotation to TestOrcTimezone1 . java to indicate that the TestOrcTimezone1 class is intended for testing purposes
refactor conditional logic to include a ` findMatch ` method and add a ` findMatch ` method to improve code readability and maintainability by
added error handling for JSON processing in ` PinotSegmentRestletResource ` and ` TraceContext ` classes to improve robustness by catching potential
modified JTable . java to ensure columnClass is not null and added a new Test6888156 . java file to improve robustness by preventing
added a conditional check for ` SHELL ` existence before adding ` BUSYBOX ` and ` BUSYBOX ` to the command
updated the delete operation from 10 to 1 in DatabaseCleaningService . java to optimize resource cleanup by reducing the number of subscriptions
refactor MockitoExtension and JunitJupiterTest to use Set instead of List to improve performance and ensure correct instance of mock in tests
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
refactor BTreeMapTest to use transactionDisable ( ) instead of deleteFilesAfterClose ( ) to improve code readability and maintainability by
updated iterator initialization logic in SortedIntList . java and added a new test class SortedIntListTest . java with a reset method to
added JMXHelper . unregister ( ) method to DefaultRemoteProxy . java and updated exception handling in JMXHelper . java to improve error handling
updated the default writebuffer size from 4MB to 64MB in RocksDBConfigurableOptions . java to reflect the correct default writebuffer size
updated the ` getFgColor ( ) ` method to use ` style . getBgImage ( ) ` instead of ` true ` to
updated the argument name from " message " to " messageNoEncoding " in FacebookShare . java to ensure that the message has a valid encoding
( chore ) camel - maven - plugin : remove unused json graph
refactor code to use mouseinput instead of vector3f to improve code readability and maintainability
refactor LoopRotateBadNodeBudget class for improved clarity to enhance code readability and maintainability
added type information handling to AbstractMongoConverter , MappingMongoConverter , and MappingMongoType methods in multiple classes to enhance type conversion functionality and ensure proper
[ ggb - 116 ] add test for imaginaryunit in inputbox
danielwagnerhall : add test for sendkeytoactiveelement . sendkeys ( )
added methods to retrieve and reduce BufferedImage instances based on target dimensions in AddAndScaleMultiImage . java to enhance image processing capabilities to improve image rendering
removed the extendArgumentCheck ( ) method from DBMaker . java to streamline the code by eliminating unused methods
added a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to ensure the shift state is updated for better user experience
removed the detection of the detected activity in multiple files to simplify the code and improve readability by eliminating unnecessary null checks
updated import statements from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . websocket . protocol . ExtensionConfig ` to
removed unused import of Buildable from AaptPackageResources . java to clean up the code and improve readability
updated readUnsignedShort ( ) method calls in CodeException , ConstantInvokeDynamic , and ConstantMethodHandle classes to improve code readability and maintainability by
updated error message for invalid upgrade protocol in WebSocketUpgradeHandler . java to improve clarity of error reporting for invalid upgrade protocols
refactor block mode assignment in P11Cipher . java to improve code readability and maintainability
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
refactor permission checks in Merge . java for clarity to improve code readability and maintainability
remove deprecated getConversationID ( ) method in HttpContentResponse , HttpRequest , and Response classes to clean up the codebase and improve maintainability
updated import statements in DummyFreeTTSVoice . java and DummyFreeTTSVoice . java to use unitselection for PhoneSetImpl to improve
refactor stripQuotes method in BaseSemanticAnalyzer and PartitionSpec classes to utilize PlanUtils for better readability to improve code maintainability and
refactored rendering logic in DLNAResource and Request classes to improve clarity and maintainability of rendering logic
updated the handling of resolution and remote artifact repositories in DefaultPluginManager . java to improve clarity and maintainability of the code
camel - 15836 - camel - cxf - cxf - cxf - cxf - cxf - cxf - cxf -
refactor PhysicsClient class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable tests that are not ready for execution
added a new File instance to the ZipFile class to ensure the file is properly initialized for future use
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the ` handleAll ( ) ` method is
added a new test class ` ChannelTest ` and modified the ` Channel ` initialization in ` Channel . java ` to ensure that the ` Channel `
added logging functionality for stack traces in GenericDAOImpl , ForumServiceImpl , and ReflectionUtils classes to improve traceability of stack traces and
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the code and improve readability
do n ' t use ` ` fun ' ' in ` ` fun ' ' in ` ` fun ' '
updated error messages for cluster name selection in CheckDatabaseHelper . java to improve clarity of error messages for better debugging and monitoring
changed the variable ` supressWarnings ` from ` supressWarnings ` to ` suppressWarnings ` in ` UnsafeAutomaticSubstitutionProcessor . java `
added handling for JsonToken . NAME , JsonToken . END _ ARRAY , and JsonToken . END _ DOCUMENT in JsonTreeReader . java to improve
added a command - line argument handling for the internal runner in TestCommand . java and created a new test method in ExternalTestRunnerIntegrationTest . java to
added methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` , ` SolrIndexer ` , and ` SolrIndexer
[ hotfix ] [ table - common ] fix flink planner in streaming mode
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is cleared before further operations
refactor progress handling in Progress . java and add displayProgressPercentage in RSSReader . java and RSSReader . java to improve resource management
added a check to ensure the parent file exists before proceeding to prevent potential errors when accessing the parent file
added methods to write and close POI documents in IOUtils . java to enhance functionality for writing and closing POI documents
updated output formatting in JavaBuild . java to improve readability and maintainability of the code
replaced ` Box ` with ` BlockBox ` and added getter methods for root and dotsPerPoint in ` ITextRenderer . java ` to improve
added user search query handling in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance security by preventing
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 511 : add default port
added ThingStatus handling in SnmpTargetHandler and updated unit tests in AbstractSnmpTargetHandlerTest to ensure proper status updates and improve test
updated error message for instructors with submit privileges in the InstructorFeedbackEditPageAction and added instructorsWhoCanSubmit list to
added @ Incubating annotation to AvailableSettings . java to indicate that the AvailableSettings class is outdated and should no longer be used
refactor file path handling in FileResolverImpl . java and add warFileResolverTest . java with a new warFileResolverTest . java file
updated the format of newFlushedSize in DocumentsWriterPerThread . java to include docstores in the newFlushedSize string to improve
updated the string concatenation in ExampleMod . java to use the unlocalized name instead of a hardcoded value to improve readability of the
updated conditional statements in ImageProcessor . java for consistency to improve code readability and maintainability
increase the number of lazy weak locks from 1000 to 1000 in FeedRefreshUpdater . java to allow more time for lazy weak locks to be
added exactSearch parameter to MetadataIndexNode in TsFileSequenceReader and updated MeasurementChunkMetadataListMapIteratorTest to include exactSearch parameter
refactor CSVSaveService to use a more descriptive parameter name to improve code readability and maintainability
added a dimension to the pane ' s getPreferredSize in NavigationShareTab . java to enhance the visual appearance of the pane
updated BeiderMorseFilter to use State instead of OffsetAttribute and modified state handling in TestBeiderMorseFilter . java to
refactor UpnpAudioSinkReg , UpnpHandler , and UpnpEntryQueue classes to improve code organization and maintainability
fix burst . setcollidedat ( x , y , z ) not work
updated JsonTest . java to utilize JUnit ' s TestFactory for better test structure to ensure compatibility with JUnit 5 and improve test coverage
refactor MutableContextDataSupplier class to improve code readability to enhance maintainability and facilitate future updates
updated exception handling in CoreContainer . java to use Throwable instead of Exception to improve error handling by logging errors instead of throwing exceptions
added a https parameter to the KubernetesMockServer constructor in KubernetesServer . java to enhance the server ' s functionality by
updated ForeignCallNode instantiation in DefaultJavaLoweringProvider . java to use Stamp for foreign calls to improve code clarity and maintainability by using
updated HTTP request headers from METHOD _ NOT _ ALLOWED _ 405 to POST in DefaultServlet . java and modified assertions in DefaultServletTest .
[ tika - 2424 ] add locale to the tika - text - format format in tiffextractor
updated error response handling in ShowFileRequestHandler and added a new test method in ShowFileRequestHandlerTest to improve error handling and provide clearer feedback on
added exception handling methods for Throwable , InvocationTargetException , and INVOCATION _ TARGET _ EXCEPTION _ TYPE in ReflectorClassWriter .
added a ` clamp ` method to ` Vector2 ` and implemented a ` clamp ` method in ` Vector2 ` to provide functionality for clamping
added imports for ClientDetailsEntity and updated access token creation logic in ChainedTokenGranter . java to enhance security by ensuring requested scopes are
refactor BC _ instanceof class to improve code readability to enhance maintainability and facilitate future updates
added a logging constant for the SAVE _ ALL flag in EditorBottomSheetBehavior . java to improve code readability and maintainability by using a
updated UaaUrlUtilsTest and UaaUrlUtilsTest to use JUnit 5 ' s PollutionPreventionExtension for improved test structure
hhh - 16464 - make nativesqlqueryscalarreturn a basicdomaintype
added a WeakHashMap for font information retrieval in SunLayoutEngine . java to ensure thread safety when accessing font information for improved performance
refactor TypedSet to use IntArrayList instead of IntBigArray to improve memory efficiency and performance by utilizing a more efficient data structure
replaced HTML _ UNIT _ JS with REMOTE in multiple test files to improve code readability and maintain consistency in naming conventions
refactor BrokerRequestUtils class to improve code organization to enhance maintainability and readability of the code
refactor instance handling in InjectorBuilderImpl to use a sorted order for better clarity to improve code readability and maintainability by centralizing the
replaced ` ParserConfig ` with ` getBasePath ( ) ` in ` RawTargetNodeFactory ` and ` BuildTargetToBuildFileManifestKey `
added null check for the value in EchoMessage . java to avoid potential NullPointerExceptions when val is null
[ java ] use keepAlivemanager instead of create a new instance of KeepAliveManager instead of create a new instance
updated the default load factor from 0.0F to 0.0F in IntHashSet . java to ensure consistent loading behavior across the application
added a method ` getAllDataTypePhysicalVariations ( ) ` to ` VectorizationContext ` , ` VectorPTFOperator ` , and ` Vector
updated package structure from com . google . zxing . zxing to com . google . zxing . client . j2se
updated OverviewState . java to include a conditional check for ENABLE _ OVERVIEW _ ACTIONS and RECENTS _ CLEAR
added Entity import for javax . persistence . Entity in BaseActivityEventEntity . java to enable proper entity management in the application
added TraceHelper partition sections in NavBarSwipeInteractionHandler , TouchInteractionService , and TouchInteractionService classes to improve traceability and maintainability of
added a new file ` InvalidOptions . java ` that implements a command - line interface to validate option usage and error handling to provide users with error
added logging for unsupported bounds in DisplayController . java to improve debugging by providing insights into display state changes
refactor ` getClientIdAndClientSecret ` method to use ` OAuth20Utils ` instead of ` BasicAuthExtractor ` to improve code readability
changed the default value of ` _ unwrapServletException ` from false to true in ` ErrorPageErrorHandler ` and ` AsyncContextTest ` classes to enable
added a condition to set the status of the ShortcutInfo in PackageUpdatedTask . java to ensure that the status is set correctly based on the
camel - 14284 : camel - seda : fix seda queue size issue in seda component
added batchUpdateStart and batchUpdateEnd methods to the App class to ensure proper handling of batch updates in the application
added HttpClient configuration to ThirdEyeApplication . java to enable customization of the HTTP client in the application
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enable sorting functionality for job instance fetch requests
refactor CryptoFacilitiesTradeService to use OpenOrders instead of ExchangeException to improve code clarity and ensure proper handling of order cancellation
do n ' t hide keyboard when click on click
replace ` memMove ` method with ` NativeFunctionHandle ` in ` LLVMHeap . memMove ` and ` LLVMHeap .
refactor method names in BindLdapAuthenticationHandler and related classes to improve code readability and maintain consistency in naming conventions
added a ` blockToolTip ` property and its getter / setter methods in ` ToolTipManagerW . java ` and ` ModeToggleMenu . java ` to
added a ` timeStyle ` parameter to the ` DefaultDateTypeAdapter ` and ` DefaultDateTypeAdapter ` classes and updated related methods accordingly to
replaced " < UID : " with " ( " ) " in ListCommand . java to improve readability and maintainability of the code
added a check to return a List < Z > instead of a List < Z > to ensure that a List < Z > is returned when no
added exception handling for CommandException in ParametricCallable . java to ensure proper exception handling for CommandException instances
added a boolean parameter to the getLikeExpression method in VectorizationContext . java to allow for more flexible matching of vector expressions based on the
added ` start ( ) ` and ` stop ( ) ` methods to ` StreamSupplierComponent ` , ` NativeStreamSupplierComponentImpl ` , and
removed the runChild method from LuceneTestCase . java to streamline the code by eliminating unnecessary locale management
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor context handling in DefaultServlet to use a dedicated method to improve code readability and maintainability by encapsulating context handling logic
add a test for the route builder reference in the OSGiBlueprintTestSupport class to ensure that the route builder references are correctly referenced in the
nifi - 10286 : fix test failure on window
refactor ` returnTypeSubstitutable ` methods to use ` returnTypeSubstitutable ` instead of ` erasure ` to improve code
added ThrottleType enum and modified the process throttling logic in TestExecutor . java to improve flexibility in handling throttling scenario
updated color handling in ColorBleedEffect and SpriteBatch to ensure proper handling of blend source and dst functions in SpriteBatch
refactor Annotation and AnnotatedElement classes for improved clarity to enhance code readability and maintainability
added a new interface ` Model ` in ` Sheet ` , ` Workbook ` , and ` Workbook ` classes to implement the ` Model ` interface
camel - 15836 - camel - http : use camel - cxf _ filter _ pattern instead of camel - http
added a ` clearEntityManager ` property and a ` setClearEntityManager ` method in ` JpaItemWriter ` and ` JpaItemWriterBuilder
added null checks for ` info ` in ` InstallShortcutReceiver ` , ` LauncherModel ` , and ` LauncherModel ` classes to prevent
updated TwoDimensionalCollectionValuedMap initialization in CoreMapNodePatternTrigger . java to ensure proper initialization of the TwoDimensionalCollectionValued
updated exchange name from " btc - e . nz " to " wex " in WexExchange . java to ensure consistency in naming
added null checks for columnReaders and reader in OrcEncodedDataConsumer and EncodedTreeReaderFactory to prevent potential NullPointerExceptions during buffer
added null checks for files in SegmentInfos and implemented a test for file handling in TestIndexReader to ensure robust error handling when no segments are found
[ hotfix ] [ test ] fix typo in hsearchsorthelperimpl . getobservability ( )
updated the calculation of the percent value in DeviceHandler to handle negative values more effectively to improve robustness by preventing potential null pointer exceptions
updated limits in RangeInputStream , RangeReader , and RangeReader to return - 1 instead of - 1 in RangeInputStream , RangeReader , and Range
camel - 14284 : camel - defaultroutescollector : use debug instead of debug log
[ hotfix ] [ hls ] fix typo in hlschunksource . getnextchunk ( )
refactor TestParser and NumericRangeQueryBuilderTestCase to use LuceneTestCase instead of TestCase to improve organization and clarity of test classes related to Lucene
[ hotfix ] [ stream ] add statefulmapper2 to outputhandler . map ( )
removed null check for fill and stroke in Area . java and Line . java to simplify code and improve readability
added a new ` Blockchain ` constructor and modified ` BlockchainTest ` to use ` BlockDBExists ` instead of ` BlockDB ` to
remove trailing whitespace in SQLPlusSupport . java to improve code readability by removing unnecessary whitespace
fix socket . setasync ( true ) and socket . setasync ( true ) in http11aprprotocol
updated the calculation of divider location in DockSplitPaneW . java to ensure consistent divider location for better user experience
added new metric methods for health checks in ControllerMeter and PinotControllerHealthCheck to enhance monitoring capabilities for controller health checks
added visibility of shared avatars in LocalFileListAdapter to improve user interface by hiding shared avatars
[ mow ] move scss / mebis / web / resources / mebis / mebis / mebis / me
[ java ] remove unnecessary ' > = ' and ' > = ' from args . length
added logging for command execution in LogInterceptor . java to ensure proper execution of commands based on log level
replaced ` latch . countDown ( ) ` with ` assertWaitUntil ( ) ` in ` EventBusTracingTestBase . java ` to improve test reliability
refactor QueryParser to use Locale . getDefault ( ) instead of a static method to improve code readability and maintainability by encapsulating
refactor ` EntryCustomizationDialog ` and ` FieldSetComponent ` to use ` Collections . singletonList ` instead of ` Arrays . asList ` to improve
do n ' t throw exception in rulebaseimpl so that it do n ' t throw exception .
added a new class ` OcspUnauthorized ` and created a new class ` OCSPResponse . java ` and added a new class `
added a volatile variable ` serverState ` and modified sleep duration in ` SSL . java ` to improve thread safety and ensure proper handling of server state
added a new constant ` COUNTER _ OPEN _ CONNECTION _ COUNT ` and updated related methods in ` SourceCounterMBean ` and ` A
changed the access modifier of the execute method from package - private to public in ExecutionStrategy and ExecutorServiceExecutionStrategy to allow external access to field definitions
changed the access modifier of the ` createDefaultJavaPackageFinder ` method from private to public to allow access to the ` getSrcRoots `
updated output writer initialization in ScriptExecutable . java to improve performance by utilizing a more efficient output writer
[ hotfix ] [ test ] use UUID . randomUUID ( ) for stagingfile
added import for DataTable in JRubyStepDefinition . java to ensure proper handling of DataTable instances in JRuby step definitions
updated visibility settings in SearchImagesRenderer , ApacheHttpClientMediaWikiApi , and ApacheHttpClientMediaWikiApi to improve user interface clarity and maintainability by
refactor ReadSentimentDataset class to improve code readability to enhance maintainability and facilitate future updates
updated error message formatting in FormulaParser . java to improve clarity of error messages for better debugging
added getter and setter methods for WebSocket connection binding in WebSocketClient . java to improve code readability and maintainability by encapsulating socket binding
[ java ] do n ' t delete aeron directory when close the media driver .
refactor hit method in WidgetGroup . java for improved readability and maintainability to enhance code readability and maintainability by encapsulating
updated the sessionFixation attribute check in HttpSecurityBeanDefinitionParser . java to use Boolean . valueOf to improve code readability and maintainability by using
[ hotfix ] [ table - common ] use edge option instead of digital channel .
added a linearBackoffCoefficient constant and modified sleep logic in ChromeBinary . java and ChromeDriver . java to allow dynamic adjustment of the backoff coefficient
added HTTP method and route attributes to TraceExchangeFilterFunction , TraceExchangeFilterFunction , and WebClientTests classes to enhance client response handling by allowing
updated ColumnFamily initialization in PrecompactedRow . java to use Integer . MIN _ VALUE instead of Integer . MIN _ VALUE to ensure compatibility with
updated the return statement in ICC _ Profile and ColorConvertOp classes to use ` 0xffff & 0xffff & 0xffff & 0xffff & 0
fix : do n ' t attempt to edit a question if it ' s not -ure
added a call to ` PublicMethed . waitProduceNextBlock ` in ` ContractInternalTransaction003 . java ` to ensure that the
[ hotfix ] [ kafka ] suppress fbwarnings in kafkaexactlyoncesink . java and kafkarecord . java
updated connection handling in PooledConnectionImpl . java and added a new test for PGConnection in BaseDataSourceTest . java to ensure proper handling of PG
refactor PropertyTable , CloseIgnoringInputStream , and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to trace in TokenAuthenticationHandler . java and updated logging statements in TokenAuthenticationHandler . java to improve logging granular
[ hotfix ] [ core ] deprecate Hazelcast class
added a new method ` sendCompletedCommandReport ` to the ` AmbariManagementControllerImpl ` and updated the ` FinalizeKerberosServerAction
refactor NamedListCodec to use ` writeExternString ` and ` writeExternString ` instead of ` writeStr ` and ` write
add a null check for the state before assigning owners to avoid potential NullPointerExceptions when assigning LOST partitions
added schema inclusion rule to ApiExample . java to enhance API documentation by allowing users to specify schema inclusions
updated the expected value from 3.0 to 7.0 in the StreamExpressionTest . java file to ensure the test accurately reflects the expected value
fix a bug in the sdo _ polygon _ with _ single _ point _ Ring method .
added methods to retrieve base and getDimension names in ConstantPool . java to enhance functionality for retrieving the base and size of the ConstantPool class
added a method ` setDebugEvaluationOutputForNextEval ` to ` FormulaEvaluator ` , ` SheetUtil ` , and ` SheetUtil
updated JUnit 5 tests to use JUnit 5 instead of JUnit 5 to improve test reliability and ensure compatibility with JUnit 5
updated ExoPlayerProfile initialization from false to false in LegacyMediaManager and PlaybackController to ensure that the profile is only enabled when the user
added a return statement to the DynamicStyleBar class to ensure the method exits early to avoid potential null pointer exceptions
added logging statements for REPL DUMP properties in Utils . java to improve visibility into database dump state changes
refactor ReactiveAuthorizationManager class to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if the type is a boolean before promoting strings to objects to ensure proper handling of boolean types in the code
[ gr - 24437 ] make nullify ( ) public in llvmstackframenuller
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
add a new test class ` CaffeineCacheDefaultConfigurationTestSuite ` to verify transaction - aware cache manager proxy behavior to ensure proper testing of cache
added a method to calculate the bounding box based on the number of vertices in the mesh to enable the calculation of the bounding box based on the number
added a new ` TargetHashFunction ` enum and updated the ` getHashFunction ` method in ` TargetsCommand . java ` to provide a
refactor DefaultConfigurationProperties class to improve code readability to enhance maintainability and facilitate future updates
added color settings for high light and high light colors in ListViewMultiChartActivity and BarChart classes to enhance visual appearance and visual feedback during chart rendering
remove pgSgPathPlanMap from pgSgPathPlanMap in ClusterPlanRouter . java to streamline path plan management by eliminating unnecessary
[ hotfix ] [ test ] fix infinispanremoteproducerit
refactor MavenArtifactFetcher and MavenDependencyResolver to use a whileLocked method to improve thread safety and ensure proper resource management during artifact fetching
added " # ifdef GL _ ES " to fragmentShader in SpriteBatch . java to ensure compatibility with OpenGL ES features
replaced SortedSet with Set in RSGroupInfo and TestRSGroupsAdmin2 classes to improve performance by using a more efficient data structure
added exception handling for JspPage loading in TagLibConfiguration . java to improve robustness by handling potential exceptions during tld processing
removed null check for defaultMatchVersion in CustomAnalyzer and added a new test class DummyVersionAwareTokenFilterFactory in TestCustomAnalyzer to streamline
added a test method ` getPackageArchiveInfo ` to ` ShadowPackageManager ` to ensure that the ` getPackageArchiveInfo ` method correctly retrieves the
replaced ` method . invoke ` with ` MethodUtil . invoke ` for method invocations in multiple Java files to enhance security by ensuring proper access control
updated import statements and added progressUpdateTypes method in GradleBuildService , Main , and ProjectReader classes to enhance progress progress handling and improve code
removed synchronized block from AndroidWebDriver . java to improve performance by avoiding unnecessary synchronization
refactor exception handling in HikariConfig and HikariPool classes to improve code readability and maintainability
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42149 - fix
changed the ` isNative ` variable from ` in . readBoolean ( ) ` to ` isNative ` in ` JMethodIdTable . java `
updated error message format in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ` RuleEnableHandler ` to ` RuleEnablementActionHandler ` in ` CoreModuleHandlerFactory ` and ` RuleEnablementActionHandler `
refactor variable declarations in multiple Java files to improve code readability and maintainability
updated logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to include ' credentials ' parameter and added debug logging in AuthzAuthenticationManager to
[ hotfix ] [ table - common ] [ test ] fix typo in kafka dynamic table factory test
added null check for repository owner in UsersPanel . java to improve robustness by preventing null pointer exceptions during repository retrieval
added support for " . otf " in font names in SunFontManager . java and SunFontManager . java to ensure compatibility with additional font
refactor type handling in AnnotationMatcher to use Class . class . build for queryTypeFqn to improve code readability and maintainability by
changed the default value of " OFF " from " OFF " to " SEVERE " in Grep . java to clarify the purpose of the
added a conditional check before logging inputs in FaultTolerantChunkProcessor . java to avoid potential NullPointerExceptions during debugging
[ java ] use ` ` excludes ' ' instead of ` ` includes ' ' and ` ` excludes ' ' in ` SurefirePlugin . java
added a method ` shouldMoveToDefaultScreenOnHomeIntent ( ) ` to ` openFolder ` and modified ` onHomeIntent ( ) `
updated the maximum bitrate from 110 to 30 in PMS . java to increase the maximum bitrate for improved performance
removed the ` getOptions ( ) ` method from the ` CommandLineParser ` class to simplify the code and improve readability
modified the return statement in MutableDatabaseProperty . java to ensure that descriptions are trimmed before returning them to avoid potential null pointer exceptions
updated the path for the output filename in XOMParserTest . java to ensure the correct file path is used for the output file
updated error message in ProcessBesuNodeRunner . java to use process . pid ( ) instead of process . pid ( ) to improve clarity of
added getLoadedMusic ( ) method to MusicLoader , SoundLoader , SoundLoader , and SoundLoader classes to provide access to the music and sound
updated import statements in OnBeanCondition . java to use Map instead of ClassUtils to improve code readability and maintainability
added ScreenRecord annotation to RequestPinItemTest . java to enable screen recording capabilities in the test cases
added null check for lrPauseButton in CPUFeature , MemoryFeature , and MemoryFeature classes to ensure the button is selected only when it is not
replaced ` PreferenceMultiline ` with ` PreferenceCategory ` and updated preference handling in ` Preferences . java ` to improve code readability and maintainability
change the packet type from AVAILABLE to AVAILABLE in XMPPConnection . java to ensure the correct packet type is used for sending messages
added a conditional check for utflen before creating a StringBuilder instance to improve performance by avoiding unnecessary object creation when utflen is non - negative
added configuration property ` spring . metrics . export . statsd . enabled : false ` in ` WebEndpointsAutoConfigurationIntegrationTests . java ` to
refactor InterruptedException class to improve code readability to enhance maintainability and facilitate future updates
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the code
refactor connection handling logic in ConnectionCheckOperation . java to improve code readability and maintainability
refactor conversion logic in ArgumentArrayMessageMapper to check for Map class to improve type safety and maintainability of the conversion logic
updated condition checks in SolrServiceCommunityCollectionItemFilterPlugin and XmlWorkflowFactoryTest to improve code readability and maintainability
removed the ` sExemptOfPassivites . add ` FLAG _ ACTIVITY _ REORDER _ TO _ FRONT ` flag to
[ fix ] deprecate patternparameterconfigurator to use template instead of template
modified the ` beginDraggingWidget ` method to return a boolean if the image is not null to improve error handling by preventing potential null pointer exceptions
added JUnit Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root in DynamicStyle . java to prevent potential NullPointerExceptions when processing components
add a new ` ` confusion matrix ' ' to ` ` confusion matrix ' ' .
fix a bug in jmeterthread . getlastsampleok ( ) in jmeterthread . java
added unit tests for enabling and disabling Bluetooth connection states in ShadowBluetoothHeadsetTest . java to ensure correct behavior of Bluetooth device
updated the test method name from " # autowire " to " # autowired " in PropertyBindingSupportTest . java and PropertyBindingSupport
added " clone " , " finalize " , " hashCode " , " hashCode " , " hashCode " , " hashCode " , and " finalize "
added null checks for counters and write verification in IntegrationTestBigLinkedList . java to ensure that tests do not fail due to insufficient YARN configuration
added a new class ` REFERRING _ OBJECTS ` and updated the ` canGetInstanceInfo ` method in ` DebuggerConnection . java
updated the method to check if the service ID matches the specified service ID to ensure that the filter only occurs when the service ID matches the specified service
added a null check before executing the UI thread in PhotoFragment . java to avoid potential NullPointerExceptions when the activity is not initialized
rename logger to logger in multiple classes to improve clarity and consistency in log message formatting
added a ` setStringType ` method to ` DatabaseAdaptor ` and updated related fields in ` JDBCSessionDataStore ` and ` JDBCSessionDataStore ` to
refactor test methods in UIMAUpdateRequestProcessorTest . java for improved readability and maintainability to enhance code readability and maintainability by
updated thread name handling in CliDriver and SessionState classes to improve thread name management and logging to enhance code readability and maintainability by centralizing
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the code
[ drools - 2200 ] [ dmn ] add unit test for dmn . evaluateall ( )
updated TextureMap . java and SplashProgress . java to use glFlush for texture map creation on macOS to ensure proper resource management on mac
added a tooltip to the showCGCP checkbox in RocketPanel . java to enhance user experience by providing clearer feedback on CGCP
updated type addition logic in EnumFactory , InterfaceFactory , and InterfaceFactory , and added a new test for declaration creation in TypeTest to ensure proper
add text and description to hotreload action and hotreloadflutterapp
ggb - 138 fix spelling of column name in column column column name and column name
updated the BRIGHTNESS _ FACTOR constant from HUNDRED to HUNDRED . doubleValue ( ) in BindingConstants . java to ensure
refactor SSCMHistoryParser to improve code readability and maintainability to enhance maintainability and reduce boilerplate code
added a boolean parameter ` isAdmin ` to the ` createUser ` method in ` HomekitAuthInfoImpl . java ` to allow users to
added null checks for indexedWriteMethod in IndexedPropertyDescriptor and PropertyDescriptor classes and created a new Test6723447 class to ensure proper handling of
updated debug log messages in DynatraceExporterV2 . java and DynatraceExporterV2Test . java to improve clarity and consistency in
updated method names from ` runnable ` to ` task ` in ` Context ` , ` Request ` , and ` Response ` classes to improve clarity and
added a method ` setCapabilitiesFromSpongeBuilder ( NBTTagCompound ) ` to ` MixinItemStack ` to ensure capabilities are properly deserialized from
changed the assertion from " default " to " default " in LifecycleUtilsTest . java to ensure the correct execution ID is passed to the binding
updated contract creation logic in Wallet , GetContractServlet , and GetContractServlet to ensure only valid contracts are created to prevent errors during contract creation
added new package - info . java files for image , runtime , and module - info . java to organize package - info . java files for better
refactor the add method in DocumentsWriterDeleteQueue to use a loop instead of a synchronized variable to improve performance by avoiding unnecessary synchronization
added a check to ignore duplicates in JavadocTool . java and modified test cases in T7091528 . java to ensure that duplicates are
changed the default value of ` STRIP _ IPV6 ` from ` true ` to ` false ` in ` HostPort . java ` to
added a parameter ` addNewUser ` to the ` LoginServerTokenEndpointFilter ` class and modified the ` LoginServerTokenEndpointFilter ` to
added a language check for CPPLanguage in LanguageFactoryTest and updated language equality checks in CPPParserTokenManager to enhance language validation and ensure
updated the ` BuckEventBus ` and ` DefaultStepRunner ` classes to use ` MoreExecutors . newSingleThreadExecutor ` instead of ` More
updated the version of LoginService and FormAuthenticator to include cache control and expiration headers in FormAuthenticator and ConstraintTest to ensure proper response handling for cache
improve error message in VoiceManager . java for better debugging by providing more context in error messages
replaced AllHSSFUtilTests with TestAreaReference and TestSheetReferences in HSSFTests and TestEmptyDocument classes to enhance test coverage and
refactor FetchHTTP2Test , FetchHTTPTestBase , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for output in TestCommand . java to avoid potential NullPointerException when output is null
added a new external resource control priority to the Java2DRenderer to enhance security by ensuring proper access control during URI processing
added error handling for JDK rendering in TestTriggerCoverage . java to ensure robust error handling and provide clearer feedback on JDK failures
modified the ` HotspotThreadMBean ` variable to be ` final ` and added a new method ` testCPUTime ` to ensure immutability
added checks for empty space comments in TabsAndIndentsVisitor . java to ensure that space comments are only processed if they are empty
updated assertions in SimDistribStateManager , TestTriggerIntegration , and related test cases in TestTriggerIntegration . java to reduce log verbosity and improve
updated comparison methods to use case - insensitive comparisons across multiple classes to ensure consistency in string comparisons across different operating systems
removed the ` getString ` method from the ` ShadowBundle ` class to simplify the code by eliminating unnecessary null checks
added locale - specific formatting for time display in TweetActivity . java to ensure consistent time formatting across different locales
added a check to return an empty list if no connections are available in StandardProcessSession . java to ensure that an empty list is returned when no
refactor keyboard handling in DetailFragment to improve code readability and maintainability by encapsulating keyboard focus logic
updated the path handling in the main class path setting in App . java to ensure the correct path is used for file handling
ggb - 271 solve ( matrix , matrixforsolve , matrixforsolve ) should be synchronized .
added import statement for Message in GenericMessage . java to enable integration with Spring ' s Message class for improved functionality
refactor SQL query to use a new join method for better readability and maintainability to improve code readability and maintainability by centralizing join
refactor filter filtering logic in AquaFileChooserUI . java to improve code readability and maintainability by encapsulating filter filtering logic
refactor p2ptransportmanager to use wrapupsyncroot instead of wrapupsyncroot
updated the return statement in ArrayPtg . java and added a new test for the toFormulaString method in TestArrayPtg . java to
updated import statements for assertions in PGtokenizerTest . java to ensure compatibility with the latest JUnit testing framework
refactor type handling in Java2TypeScriptTranslator and related classes to improve code readability and maintainability to enhance code maintainability and ensure correct
added a sequence name for auto - increment columns in AddAutoIncrementChange . java to ensure compatibility with PostgreSQL ' s auto - increment
updated byte handling in DataInput and readUtf8 _ slow method calls in DataInput . java to improve code readability and maintainability
removed unnecessary assertions in ImageParserTest . java to clean up the code and improve readability
updated the parent assignment from ` getParent ( ) ` to ` parent . getParent ( ) ` in ` Component . java ` to ensure the correct parent
updated import statements in multiple Java files to improve code readability and maintain consistency in naming conventions
replace ` ENGINE _ finish ( ) ` with ` ENGINE _ free ( engine ) ` in ` NativeCryptoTest . java ` to ensure
added iteration event handling in the InterleaveControl and IterationListener classes to improve the handling of iteration events in the controller
updated the handling of HttpContent in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of logs during recovery operations
added a check for " twitter : / / " in the URL handling in BrowserActivity . java to ensure that URLs are only launched when "
[ hotfix ] [ test ] fix test failure in deploymentgrouptest
updated logResult method from false to true in VisibilityController . java to ensure accurate logging of list labels in the logs
increased the maximum retry limit from 25 to 25 in RestTemplateRetryTests . java to increase the maximum number of retries for better debugging
[ hotfix ] [ test ] remove system . out . println ( )
added a new ` FromFraction ` class and implemented a ` FromFraction ` class in the ` ResourcesResourceLoader ` and ` ResourcesTest ` classes to
removed the conditional check for file write confirmation in BasicFrame . java to simplify the code and improve readability
refactor dependency version retrieval to use ` tagGroupId ` and ` tagArtifactId ` instead of ` groupId ` to improve code readability and ensure
hbase - 16297 namespaceauditor do n ' t retry if the table be not in the namespace
refactor multiple attribute classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class to improve code readability to enhance maintainability and facilitate future updates
added a check for ` f0 ` in ` HTSVocoder . java ` to ensure that ` f0 ` is non -
refactor database connection handling in SchemaRetriever and TableRetriever classes to improve robustness by avoiding potential NullPointerExceptions
remove unnecessary clear ( ) method from request , inputbuffer , and inputbuffer
added configuration for empty screens in Workspace . java to enhance user experience by allowing users to choose between empty screens
added warnings for deprecated cucumber - needle using cucumber - cdi2 or cucumber - jakarta - cdi instead of cucumber - cdi2
updated theme handling in ShadowThemeTest , ShadowArscAssetManager , and ShadowArscAssetManager , and ShadowArscAssetManager to improve
updated import statements in VerifyFast . java to use Arrays . toString ( ) instead of string concatenation to improve code readability and maintainability by using
no effective change - remove @ dbmigration annotation from ehistory2 . java
added support for ` IdentNode ` and ` setProto ` in ` CodeGenerator ` , ` Global ` , and ` ScriptObject ` classes to
replaced ` Collections . shuffle ` with ` Collections . shuffle ( readers , random ( ) ) ` in ` TestFilterDirectoryReader . java ` to
updated displayName retrieval logic in UsersAndGroupsSearchProvider to handle known remote clarification information to improve user experience by allowing users to share known remote
updated the path formatting in CookieRetrievingCookieGenerator to use StringUtils . defaultIfBlank for better readability to ensure that the path is
removed unnecessary semicolons in multiple model classes to improve code readability and maintainability
changed cacheName assignment from final to final in AbstractCacheService . java to improve code readability and maintainability
updated comparison logic for pageNumber in ValidationResult . java to ensure correct comparison of pageNumber values
added a null check for the TabbingManager ' s focusedWidget before comparing it to ensure proper handling of focused widgets when the widget is highlighted
updated method names from ` playSoundAtLocationExcept ` to ` playSoundAtLocationExcept ` and ` playSoundPitchRange ` to
refactor ` getAppleCxxPlatformFlavorDomain ` method to use ` getAppleCxxPlatformFlavorDomain ` instead of ` get
added a SQL statement to verify the correct SQL syntax in ClickHouseStatementTest . java to ensure that the SQL statement correctly reflects the expected format
updated method names from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
refactor EnglishPTBTreebankCorrector class to improve code readability and maintainability
added a new file TestGetLoggerNPE . java to implement a test method to verify the behavior of the logger in Java to facilitate testing of
added a ` getData ( ) ` method to ` PathSharingContext ` , ` ActionDirectory ` , and ` ScriptedDecideRule ` to
refactor espressoroot to use castexact instead of getUnsafeField to improve code clarity and maintainability
updated NextValExpression and ExpressionDeParser to accept an optional ` NEXT _ VALUE _ INSENSITIVE ` parameter to enhance flexibility in
add more info to warn about resource bundle not pre - cached
updated the handling of pending writes in BoundedLocalCache . java and added a new test for clearing pending writes to improve cache management and ensure
added " Leverage _ Level " parameter to QuoineExchange and updated the getOrderDirection method in QuoineNewMarginOrderRequest
added bound bound methods in PropertyDescriptor . java and created a new Test7192955 . java file in Test7192955 . java
updated LwjglApplicationConfiguration to use ` SetDisplayModeCallback ` instead of ` failsafeWidth ` and ` failsafeHeight ` to
added a null check for the parent form before setting buttonsAwatingRelease to prevent potential NullPointerExceptions when the parent form is not initialized
updated wrapWidth calculation to use getWrapWidth ( ) instead of getWrapWidth ( ) in LineCell and StyledTextAreaSkin to improve
updated error message in XSLTErrorResources _ it . java to clarify the purpose of the error message in XSLTErrorResources _ it . java to improve
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain insertion order for parameter values
replaced calls to ` getName ( ) ` with ` String . format ( ) ` in multiple text classes to improve string formatting for better readability and
replaced ` getNamespaceURI ` method with ` getNamespace ` in ` StaxXmlPullParser . java ` to simplify namespace retrieval logic
removed the ` nestedJoins ` property from multiple test classes to streamline the configuration of nested joins based on configuration settings
change account _ type _ normal to account _ type _ admin in querymanager
added a cursor parameter to the CompletionTaskProcesor constructor in SourceFileManager and modified the CompletionTaskProcesor instantiation in CompletionProvider to
added METASTOREURIS . varname and SQLStdHiveAuthorizerFactory in TestMsgBusConnection . java to enable support for SQL standard authorization
updated import statements in KuduIOIT and XmlIOTest classes to improve readability and maintainability of the code
added @ Nullable annotation to MetadataRenderer , TextRenderer , and Util constructors in MetadataRenderer , TextRenderer , TextRenderer , and TextRenderer classes
updated offsetMemSize calculation from Long . SIZE to Long . BYTES in SymbolMapReaderImpl . java and added a new test for symbol file
removed unnecessary print statements in TermFilterTest . java to clean up the code and improve readability
replaced the ` TypeConverters ` class with ` TypeConverters ` in the ` Jooby . java ` package to simplify the codebase
replaced ` ExecutorService ` with ` isFinished ( ) ` in ` ThreadlessExecutor ` and refactored the ` ThreadlessExecutor ` class to
replaced ` IndexOutOfBoundsException ` with ` IndexOutOfBoundsException ` in ` DateTimeFormatter ` and added a new test for the ` toFormat _ 2
rename ` CHUNK _ LENGTH _ KB ` to ` CHUNK _ LENGTH _ KB ` in ` CompressionParameters . java `
added a new case for WILDCARD in Types . java and created a new class T7034495 . java with generic interface interfaces to
refactor loop condition in LotsOfEvents . java to improve readability to enhance code readability and maintainability
[ hotfix ] fix typo in transclusiondeciderule . java
fix ( micronaut ) : remove version from micronaut . java
added assertions to verify the correctness of the ` new _ sheet ` method in ` TestBugs . java ` to ensure the correctness of
updated MindIcon instantiation to include a description for better clarity to improve code readability and maintainability by using a more descriptive variable
changed the ` onHomeIntent ` method from ` onHomeIntent ` to ` onHomeIntent ` in ` LauncherCallbacks ` to allow for
replaced ` getPreferDependencyTree ( ) ` with ` getPreferDependencyTree ( ) ` in ` CxxBuckConfig . java
added a new method ` showDetails ` to ` ContactsPreferenceActivity ` , ` FileDetailFragment ` , and ` FolderPickerActivity ` to
updated constants from " $ applyStatic " to " apply " across multiple files to ensure consistency in naming conventions across the codebase
refactor MinimalEncoder and HighLevelEncodeTestCase to use a randomize253State method to improve code readability and maintainability by central
updated header formatting in SourceBuilder . java to include optional and non - optional header values to improve code readability and maintain consistency in formatting
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure that the adapter updates after data changes
removed the setDefaultWALSyncMode method from ShadowSQLiteConnection . java to streamline the code by eliminating unnecessary functionality
updated type checks in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java and Collections . java to improve type safety and ensure correctness
removed unused methods from DefaultS3CrtAsyncClient . java to clean up the code and improve readability
[ hotfix ] [ test ] fix test for corrupted stream
[ hotfix ] [ test ] fix checkstyle violation in HazelcastTestSupport
refactor exception handling in GraalCompiler and GraphBuilderPhase to include a conditional check in GraphBuilderPhase to improve error handling clarity and ensure correct
ggb - 272 fix image creation to be more robust .
refactor SQLXML class implementation to improve code readability and maintainability
added a ` limit ` parameter to the ` getOrderBook ` method in ` YoBit ` and ` YoBitMarketDataService ` classes to enhance
updated exception classes from GotWrongOOME to HeapOOMEException , HeapOOMEException , and TriggerUnloadingByFillingMeta
added a streamReadConstraints to the StandardDataFlow class to ensure proper handling of stream read operations
updated the retrieval of engines from configuration to string in PmsConfiguration . java to ensure thread safety when accessing the engine configuration
replaced ` FullIterator ` with ` WheelIterator ` in ` TimerWheel ` and ` TimerWheelTest ` classes to improve code readability and
added error handling for missing bug pattern in BugInstance . java to improve robustness by providing clearer error messages when a bug pattern is missing
[ hotfix ] [ test ] use a constant for the wait _ chunk _ is _ ready _ in _ seconds
changed the visibility of the uncomplete checklists item from true to false in ListFragment . java to disable the uncomplete checklists
refactor DefaultResultSetHandler to resolve discriminated result map and add a new Contract class in DiscriminatorTest . java to improve code clarity
added null checks for ` defaultHome ` and ` mUpdateRegisteredPackage ` in ` OverviewComponentObserver . java ` to ensure proper handling of
removed the @ VertxGen annotation from PumpImpl . java to clean up the code and improve readability
replaced direct casting of ` FileDisplayActivity ` with ` FileDisplayActivity ` in ` FileDetailFragment ` and ` OCFileListFragment
updated token handling in ConfigAttributeEditor and added unit tests in ConfigAttributeEditorTests to ensure proper handling of leading and trailing spaces in attribute attributes
refactor ClassUsingAnotherAuxiliary and SelfClassWithAux classes to improve code organization and maintainability
changed access modifier of ` singleModulReference ` to public and added ` getUnnamedModule ` method in ` Target _ java _ lang
updated case statements in DatabaseMetaData . java and DatabaseMetaData . java to check if the string starts with " pg _ " in DatabaseMetaData . java
updated ENTERPRISE _ PLUS _ VALUE from 3 to 3 in Agent . java and AgentProto . java to indicate that these constants are
updated RQST field name from " rqst " to " rqst " in ThriftHiveMetastore . java and HiveMeta
added a new module - info . java file for the ` com . speedment . runtime . core ` and ` com . speedment . runtime
updated flush state handling in SslConnection . java to handle both IDLE , INTERESTED , and INTERESTED states to ensure
updated Log4j2LogDelegateFactory to implement LogDelegateFactory instead of Log4j2LogDelegateFactory and added a new test case for
refactor LIBJVM handling in ExecutionEnvironment and Test7029048 to improve clarity and maintainability to enhance code readability and ensure
refactor ` ExecutableFindOperation ` , ` ReactiveMongoOperations ` , and ` ReactiveMongoOperations ` classes to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to PGProperty . java to enable support for LibPQFactory in the
added an @ Test annotation to TestInterProcessSemaphoreEdges . java to disable the test to indicate that the test is currently failing
updated sorting logic in EditableResources . java to improve code readability and maintainability
added a new file ` OSvTerminal . java ` for handling OSV terminals in the TerminalFactory . java file to enable support for OS
added support for " . gr " in ClassType . java to ensure compatibility with additional file types
replaced HashMap with TreeMap for combined vectors in DrillTestWrapper . java to ensure consistent iteration order for vector results
added a condition to check if the index is within the bounds of the names and values to ensure that the loop only runs when the names and values
refactor WebSocketPolicy class for improved readability to enhance maintainability and ease of understanding for future developers
renamed ` readPhoneStateGranted ` and ` setReadPhoneStatePermissionGranted ` to ` setReadPhoneStatePermission ` across multiple classes to improve
added a new method ` resolveMessage ` to the ` StandardMessageResolver ` class to enhance message resolution flexibility based on configuration
replaced ` TraceMethodVisitor ` with ` Class < ? extends ClassVisitor ` in ` AsmUtil . java ` to improve type safety and clarity
added a new file ` LoggingAuditService . java ` that logs user authentication success and failure messages to provide auditing capabilities for user authentication and authentication
added null checks for temperature and air conditioning zones in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance robustness by preventing
refactor conditional checks in BeanDefinitionInjectProcessor to use modelUtils . isAbstract ( concreteClass ) to improve code readability and maintainability
camel - 14284 : camel - http - add support for proxy host and port in camel - http
updated MAX _ ENCODING _ VERSION from " 1 . 1 " to " 1 . 2 " in TemplateDTO . java to reflect the latest version
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to utilize the JDKSerialFilter ( ) `
camel - 14284 : camel - jbang - reduce jvm object allocations to reduce jvm object allocation .
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple classes to improve code readability and maintainability by
updated method name from ` ensureRealtimeClusterIsSetUp ` to ` rawRealtimeTableConfig ` in ` PinotHelixResourceManager
added ` isError ` and ` error ` methods in ` ValidationReport ` , ` DisallowValidator ` , and ` DisallowValidator ` to
updated inlineQsb handling in InvariantDeviceProfile . java to use closestProfile . inlineQsb instead of result . inlineQ
added exception handling for URL encoding in SortedArrayStringMapTest . java to improve error handling and ensure proper URL decoding
updated the ` @ Given ` annotation from ` 10 ` to ` . * ` in ` TransformSteps . java ` and ` Car . java `
added null checks for ` prop ` and ` prop ` in ` Toolkit . java ` and ` PGraphicsJava2D . java ` to ensure
added a timeout value from 60 _ 000 to the waitUntil method in FaultToleranceTest . java to improve clarity and maintainability of the
refactor package - info . java files for improved clarity to enhance code readability and maintainability
added a method to set the Docker image URL in Environments . java to ensure the application uses the correct docker image URL
[ hotfix ] [ test ] fix test failure in knowledgeagenttest
refactor multiple Java files for improved clarity to enhance maintainability and readability of the codebase
refactor ` createHardLink ` method to use a new method ` copyFile ` to improve code readability and maintainability by encap
updated method names from ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in method naming
updated NDArray handling in LSTM , MxNDManager , and MxNDManager classes to use a singletonOrThrow for
added a conditional check for XML type before adding it to the FindIndentXmlVisitor to ensure that only valid XML elements are processed
updated ` NotesHelperTest ` and ` ReminderHelperTest ` to use ` AndroidJUnit4 ` instead of ` InstrumentationTestCase ` to improve
added GasLimitRule and ParentGasLimitRule to CommonConfig . java to enhance rule management by including GasLimitRule and ParentGasLimit
changed the access modifier of the setupData method from public to private in BaseAssumptionsRunnerTest and Iterable _ special _ assertion _ methods
updated the ` ChangeSet ` class to use ` runInTransaction ` instead of ` autocommit ` to improve clarity and consistency in handling transaction execution
added null check for endStream in TripleServerStream . java to improve code readability and prevent potential NullPointerExceptions
updated URLs in JobManagerOptions . java and RestartStrategyOptions . java to include the Site . BaseURL for task failure recovery strategies to
added a new test method ` testIssue154 ` to ` SelectTest . java ` to verify SQL parsing and deparsing to ensure that
refactor Common class to improve code readability to enhance maintainability and facilitate future updates
refactor exception handling in Launchable . java to use try - with - resources for better resource management to improve resource management and ensure proper closure of
[ hotfix ] [ javadoc ] fix typo in streamexecdeduplicate
[ hotfix ] [ kafka ] log a warning when send kafka message to topic .
added PersistentPropertyAccessor and PersistentPropertyAccessorFactory to SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to enable the use of PersistentPropertyAccessor
refactor setcoord method to return boolean instead of void
added a new constant ` scrollX and ` scrollY ` and ` scrollY ` and updated related logic in ` AskGestureEventsListener . java
refactor comparison logic in NGramEstimator . java to improve readability and maintainability to enhance code readability and ensure accurate comparison logic
updated import statements for ScenarioScoped from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to improve
updated the ` StatsLogCompatManager ` to include ` getFromLabelState ( ) ` and ` getFolderIcon ( ) ` and ` get
updated variable names from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to improve clarity
added a new file TestSkeletonPredicates . java to test the behavior of the ` TestSkeletonPredicates ` method in ` IRNode ` to
refactor SelectionHighlighter to improve equality comparison and hash code generation to enhance code clarity and maintainability by encapsulating equality checks
added a new ` StringResultConverter ` class and modified ` AsmRuntime ` and ` AsmUtil ` to utilize ` Charset ` for
camel - 19751 - camel - aws : disable test that do n ' t work on ci
updated the condition from ` WaitForSingleObject ` to ` WaitForSingleObject ` in ` JansiWinSysTerminal . java ` to ensure that the
updated the ` setInBuffer ` method to include a null check for ` buffer ` and ` buffer ` before calling ` setInBuffer ` to
updated data directory path from " data / " to " dataDir " in TestSolrDiscoveryProperties . java to ensure compatibility with different operating systems
updated OS version checks in AutoUpdaterServerProperties . java to ensure compatibility with macOS versions to improve compatibility with different operating systems
replaced ` File ` with ` String ` in ` FSDirectory ` and ` Lock ` classes to improve clarity by using a more descriptive variable
updated the variable name from " android . widget . TextView " to " apps _ view " in Overview . java to improve clarity and consistency in
replaced Invocable . Invocable . Invocable . InvocationType with ClientDatagramEndPoint . this in ClientDatagramEndPoint . java
updated GET _ STEP _ EXECUTIONS from " oreder " to " order by STEP _ EXECUTION _
updated button handling in LwjglInput . java to handle unknown buttons to ensure correct button handling for better user experience
updated TaskRestRepositoriesIT . java to include additional authentication parameters for submitted tasks to ensure proper handling of rejected requests in the application
updated logging statements in multiple classes to use slf4j for better logging consistency to improve code readability and maintainability by standardizing logging practices
removed the ` public ` modifier from the ` SsoAccessTokenProvider ` and ` SsoAccessTokenProviderTest ` classes to simplify method visibility and improve
do n ' t delete directory on macos
added ` createAlarmSuppression ` and ` deleteAlarmSuppression ` methods to ` GreetResourceMockedTest ` and ` OciMetrics
refactor conditional checks in JFrame . java to improve code readability and maintainability
added a null check for the connection before executing the SQL statement in LibraryScanner . java to avoid potential NullPointerExceptions when connection is null
refactor metricsContext initialization in SuggestComponent . java to use super . initializeMetrics method to improve code clarity and maintainability by centralizing metrics
refactor conditional checks in OCFileListFragment . java for improved readability and maintainability to enhance code readability and ensure consistent formatting of
updated configuration settings in ScpServerTestSupport , FileKeyPairProvider , ResourceHelperKeyPairProvider , and ResourceHelperKeyPairProvider to use Iterable instead of
refactor SourceVersion class to improve code readability to enhance maintainability and facilitate future updates
added a new test class ` ThreadFactoryTest ` to validate thread creation functionality to ensure that thread creation behaves as expected in concurrent scenarios
refactor ` getLockPeriod ( ) ` method to use ` getLockPeriod ( ) ` instead of ` getLockPeriod ( ) ` to
added a new TicketModel instance in EditTicketPage . java to create a new TicketModel instance to enhance ticket management functionality
changed the default value of ENABLE _ PREDICTION _ DISMISS from false to true in FeatureFlags . java to enable the dimiss
updated superclass constructors to include Class < S > in multiple assertion classes to enhance type safety and prevent unchecked cast exceptions
updated MENU _ DELETE _ TWEET and MENU _ QUOTE in TweetActivity . java and added a new menu item for quote
[ hotfix ] [ runtime ] remove redundant interruptlock . lock ( )
[ java ] rename codecpassthrough and decryption codec to decryption to improve clarity and consistency in codec handling
added a conditional check for the result before accepting failure in ServerHTTP2StreamEndPoint . java to ensure that failure is only sent when the result is
updated error messages from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ fr . java and XSLTError
added @ ThreadSafe annotation to CheckpointsCleaner . java to enable thread safety in the CheckpointsCleaner class
refactor ` MockRestAdapter ` to use ` Subscriber ` instead of ` Observer ` in ` MockRestAdapter ` and ` RestAdapter `
refactor configuration file creation logic in ComponentPresetManager . java to improve code readability and maintainability
added support for unique column names in Hive configurations and updated assertions in TestJdbcDriver and TestJdbcDriver2 to ensure unique column names are used
do n ' t update audio effect when the voice be select
added error handling for invalid sessions in Session . java and updated test cases in SessionHandlerTest . java to ensure that invalid sessions are properly handled and
hhh - 11717 remove exceptionhelper . getrootcause ( Throwable error )
updated keyPairGenerator initialization from 256 to 255 in JceX25519Domain . java to improve randomness for key pair generation
set Lucene41PostingsFormat to alwaysPostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41
added logging for empty checkpoint range headers in CheckpointRangeHeaders . java to improve debugging and traceability of checkpoint range headers
updated algorithm creation logic in OperatorHelper . java to ensure proper handling of OAEP and OAEP algorithms to enhance robustness by preventing
updated platform annotations from DARWIN _ AARCH64 to MACOS _ AARCH64 in multiple Java files to ensure consistency in platform naming
added null checks for builder and uri initialization in DebugSourcesResolver . java to improve robustness by handling potential SecurityExceptions during URI resolution
modified the return statement in AbstractTest . java to use a more descriptive variable name to improve code readability and maintainability
updated error messages in FileUploadUtils , ControllerConf , and UploadRefreshDeleteIntegrationTest to include a boolean parameter for better debugging to improve error reporting and
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` in multiple classes to improve memory management and ensure proper resource management during buffer operations
changed the default value of ` USE _ PIPELINE _ DOWNLOADER ` from false to true in ` FastSyncChainDownloader . java ` to
replaced ` tz . getRawOffset ( ) ` with ` tz . getRawOffset ( ) ` in ` SimpleDateFormat . java ` and added a new
refactor logic in AllAppsView . java for improved readability and maintainability to enhance code readability and ensure immutability of the
cloudstack - 10286 : fix bug in virtualnetworkappliancemanagerimpl . getsupportedhypervisortype ( ) ( #
refactor StringBuffer class to improve code readability to enhance maintainability and facilitate future updates
added a variable ` rule . uid ` to the ` RuleResource ` class to ensure the rule ' s UID is correctly set during execution
added a null check before removing the subscription listener in RegistryProtocol . java to avoid potential NullPointerExceptions when listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified json string conversion logic to improve
[ gr - 27186 ] make the method public in InstrumentBranchesPhase . java to allow external access to the ACCESS _ TABLE array
updated error message formatting in DataSourceInitializer and DataSourceInitializerInvokerTests to improve clarity of error messages for better debugging
refactor ` doRun ` method in ` TcpTransport ` , ` XmppTransport ` , and ` XmppTransport ` classes to improve code
refactor EventDirContext , ControlFactory , and UnsolicitedNotification classes to improve code organization and maintainability
added a new parameter ` isUpgradeSuspended ` in ` AmbariManagementControllerImpl . java ` to include ` ClusterVersionEntity ` to
removed the copyright year from FindsByCssSelector . java to clean up the code and improve maintainability
removed the variable ' wfields ' from the Resolver class to simplify the code and improve readability
added a constructor to the OAuthProperties class to initialize OAuthEncryption and Signing keys to ensure proper key size configuration for OAuth encryption and signing
hbase - 13232 add a method to get the columnfamilycount ( ) in htabledescriptor . getfamilycount ( ) . length (
replaced ` AllowedResourceAliasChecker ` with ` AllowedResourceAliasCheck ` in ` SampleWebJspApplicationTests . java ` to simplify
refactor ObjectInputStream , ObjectOutputStream , and Serializable classes to improve code organization and maintainability
added a new ` reset ( ) ` interface to the ` Cluster ` interface and updated the ` Cluster ` interface to extend ` IdleStrategy `
updated the initialization of the Writer in ChunkedWriter . java to ensure consistency in naming conventions for better readability
added a new file ` AbstractJobExecutor . java ` that implements the ` JobExecutor ` class to facilitate the execution of a job execution in batch
replace replay ( core ) with replayFuture in RecoveryStrategy . java to improve code readability and maintainability
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in naming conventions
add a method to retrieve service IDs in AbstractConsulClient to ensure proper handling of service IDs based on discovery configuration
replaced Float . floatToIntBits ( float ) Math . random ( ) with SecureRandom ( ) for hashSalt in DB . java to enhance security by preventing collision
refactor runtimeCompilationsFailedDuringParsing into a separate method to improve code readability and maintainability by encapsulating logging logic
removed redundant calculation of currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline code by eliminating unnecessary complexity
added support for abstract method invocations in CallsRealMethods and updated CreatingMocksWithConstructorTest to handle abstract method invocations to enhance
changed access modifiers from public to private in NashornScriptEngine and Context classes to enhance encapsulation and maintainability of access checks
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added ` setupErrorConfiguration ` method to enhance test coverage and ensure
refactor ContributionListPanel to use model instead of dtm to improve code readability and maintainability by using a more descriptive variable name
added support for the ` has - touch - interaction - service ` request in ` QuickstepTestInformationHandler ` and ` LauncherInstrumentation ` to
refactor connect action handling in ` ConnectAction . java ` to use ` Mutex . EVENT . writeAccess ` to improve code readability and
changed the type of ` showRulesResult ` from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` to improve type
add a new package for ` ArrayHelper ` , ` NativeRegExp ` , and ` NativeRegExp ` , and ` NativeRegExp ` , and `
added handling for HOME and END in Less . java to enhance functionality to handle additional case scenarios for home , ending , and end lines
removed the synchronized block for retrieving connected plots in PlotHandler . java to simplify the loop structure by eliminating unnecessary synchronization
refactor intent handling in Utilities . java to improve code readability and maintainability by centralizing intent creation logic
changed the access modifier of the Roster constructor from public to public to allow instantiation of Roster instances
added extension handling for basic constraints in TestUtils . java to enhance cert generation functionality for improved security
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to mark the test as ignored due to the
removed redundant calls to ` field . multiValued ( ) ` in ` TrieDateField . java ` and ` TrieField . java ` to
replaced TaskbarStateHandler with TaskbarStateHandler in BaseQuickstepLauncher . java and removed TaskbarStateHandler . java to streamline the
added a new file ` ArrayLength . java ` that implements a method to verify the behavior of field and field lengths in Java to ensure that
[ hz ] add log for destroyforcibly ( ) and wait for destroyforcibly ( )
refactored the save method in ApplicationSettingsService to use a PostConstruct annotation to improve code readability and maintainability by encapsulating
updated assertion in Safepoint . java to correctly handle negative values to ensure that the value is non - negative
updated threadNameField from " [ C " to " Ljava / lang / String " in OopUtilities . java to use Ljava /
updated the default RAND _ SEED value from ` System . currentTimeMillis ( ) ` to ` 42 ` in multiple classes to reflect the current
pdfbox - 4071 : make stroke object protected , a suggest by valerybokov
refactored the expanded expression expansion logic in SqlValidatorImpl . java to improve code readability and maintainability by encapsulating the expansion
added a ` findInterestingChildren ( ) ` method to the ` Comment2000 ` class and implemented a ` FindInterestingChildren ( ) `
added import for PMS . 141 and updated the status code in HTTPServer . java to provide users with a clearer and more informative
refactored modifier handling in PSurfaceAWT and MouseEvent classes to use ` getModifiersEx ` instead of ` InputEvent ` to improve code clarity and
[ gr - 12286 ] fix amd64 countleadingzerosnode . getcyclecycles ( ) to be more robust .
camelas2 : fix null check for content transfer encoding in entityparser . getcontenttype ( )
refactor Locale class implementation to improve code readability and maintainability
added ` clearLog ( ) ` button and ` clearLog ( ) ` methods to ` ErrorConsoleController ` and ` ErrorConsoleViewModel ` to
changed the variable name from ` mRecentsAnimationController ` to ` mRecentsAnimationController ` in ` RecentsView . java ` to
updated method signatures in Debug , CaptionMap , and DummyCaptionMap classes to use LocaleHolder instead of ConsolePlayer to improve code clarity and ensure
add connection pooling to the test , so it do n ' t fail on slow ci server .
[ java ] add operadriver capability to the defaultdriversessions .
updated error handling in ManageJournalsPanel to handle exceptions more gracefully to improve user feedback during file download failures
added new BUTTONS , BUTTONS , and BUTTONS to the LifxProduct class to enhance the product ' s functionality by allowing
refactor async request handling in OverseerCollectionProcessor and CollectionsHandler to improve clarity and functionality to enhance code readability and maintainability by using
refactor PostgresDatabase to use assertPrimaryKeyName for consistency and clarity to improve code readability and maintainability by standardizing naming conventions
updated LogPanel instantiation to use ` getRepositoryModel ( ) . HEAD ` instead of null in ` LogPage ` and ` SummaryPage `
corrected the spelling of " UNIT _ Y " to " UNIT _ XYZ " in the SkeletonInterBoneWire class
added a ` browserDestroy ` method to ` AndroidImplementation ` and modified the ` deinitialize ` method in ` AndroidImplementation ` to ensure proper resource
added a timeout for readApiTestViolations in AutoScalingHandlerTest . java to ensure the test runs in a valid state before proceeding
updated loop iteration logic in ScreenTerminal . java and Tmux . java to improve performance and readability of the code
added ControllerState checks in SoftResetAction . java to support additional controller states to ensure proper handling of active actions based on controller states
disable on - disc stream cache by disable on - disc stream cache
added logic to retrieve the parent folder from the mediaRenderer in Request . java and RequestV2 . java to ensure proper retrieval of the parent folder
corrected the spelling of " isPersistent " to " persistent " in NetworkOfferingVO . java to improve code readability and maintainability
added a close method to the FileOutputStream in AndroidImplementation . java to ensure proper resource management and prevent memory leaks
added exception handling for RestClientException in StandardGitHubRepository . java to improve robustness by handling unauthorized requests gracefully
log4j2 - 1338 add the original messagefactory2adapter to the messagefactory2adapter
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , DurationTest , and SizeTest classes to suppress
updated regex pattern in Version . java to include a new minor version to ensure compatibility with the latest version requirements
updated the initial delay and dismiss delay settings in ExtractionModelFrame . java to improve responsiveness and user experience
refactor ProjectCommand to use ` passedInTargetsSet ` instead of ` options . getBuildTargets ( ) ` to improve code readability and
added timezone handling in TimeTest . java to ensure correct formatting of time zones in time representation
refactor MediaSessionConnector class to improve code organization to enhance maintainability and readability of the code
replace jsefactory with endpoint . gethandler ( ) . getsslimplementation ( ) . getsslimplementation ( )
updated the string concatenation for accuracy display in GpsLoggingService . java to improve readability and maintainability of the code
added a new method ` isFuturesEnabled ( ) ` and updated related methods in ` BinanceExchange ` and ` BinanceTradeService `
add instructorcoursestable to adminaccountmanagementhelper and adminaccountmanagementhelper
added a method to set the accept queue size in ThriftHttpCLIService to ensure proper handling of queue sizes in the application
updated the variable name from ` getClass ( ) . getName ( ) ` to ` PROPERTY _ DISABLE _ WATCHER ` in ` Path
added a check for " ssl " scheme in JmsFactory . java to ensure proper handling of SSL protocols in the application
replaced ` parseErrorHelper ` with ` validationError ` in ` DrillSqlWorker . java ` and updated exception handling in ` TestWindowFunctions .
updated the duration calculation in GCInspector . java to ensure that the duration is zero for a really fast collection
fix ( javadoc ) : do n ' t return empty optional
updated the ` ReserveMemory ` and ` WhiteBox ` classes to use ` isOsx ( ) ` instead of ` Unsafe ` to
[ hotfix ] [ table - common ] fix indexrebuildregionscanner . checkregioncloseorsplitting ( ) call in indexre
hbase - 14284 make hbaseadmin . getprocid protected in hbaseadmin . java
updated ReflectionUtil . setAccessible ( ) and WSDLServiceFactoryBean in CxfEndpoint . java and added a constructor to WSDLServiceFactoryBean
replaced BufferedWriter with a List < Object > for dumping the databaseChangeLog output to improve performance and readability of the output stream
updated print statements in SchemaPrinter . java for better readability to improve code readability and maintainability
refactor code for better readability and maintainability in debugroadregen and SchematicHandler classes to improve code clarity and reduce redundancy in
updated the initialization of HomeFragment . java to use the current activity context instead of the context to ensure the correct context is used for the footer row
hhh - 13486 : add native generator to the auto - generated code . ( # 174 )
removed the country parameter from the getSystemTimeZoneID method in TimeZone . java to simplify the method signature and improve code readability
updated the write method to include position and remaining data in BZip2Codec and TestBZip2Codec to improve data handling and ensure proper byte
ggb - 221 add startlogger ( ) method to appw and appw ( )
added a new constant ` VALUE _ TYPE _ EMPTY ` and modified the creation logic in ` Type ` and ` Value ` classes to improve flexibility in
updated condition checks in GroupManager . java to use ` equals ` instead of ` equals ` to improve code readability and maintainability
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and facilitate future updates
added a method to create an instance of TargetNode in TargetGraphFactory and updated related tests in VersionedTargetGraphBuilderTest to improve flexibility in
patch by jbellis ; review by jbellis for cassandra - 142
added ArtifactVersionAdapter to MetadataCollection and ModMetadata classes to ensure proper serialization and deserialization of ArtifactVersion objects
added a new boolean variable ` hasCurrent ` and modified the handling of ` sobj . get ` and ` sobj . has ` to ensure
updated file handling logic in FileUploader . java to ensure the correct parent file is used for file uploads
added a new file ` UTF8ReaderBug . java ` to handle supplementary characters in XML parsing to ensure proper handling of supplementary characters in
added unit test for camel - http : / / issues . apache . org / activemq / browse / camel - builder - add unit test
updated assertions in BinanceIntegration . java and BinanceUsIntegration . java to use depth - specific tags instead of depth to ensure compatibility with
added a method ` resetAllocation ( ) ` to ` SimpleParallelizer ` and implemented a ` resetAllocation ( ) ` method in ` Wrapper `
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
replaced calls to ` putAll ` with ` sysProps ` in ` Agent . java ` and added a new ` AgentCMETest . java `
refactor ModelUtils class to improve code readability to enhance maintainability and facilitate future updates
refactor AbstractDoubleArrayAssert class to improve code readability to enhance maintainability and facilitate future updates
refactor width and height calculations in Legend . java to improve code readability and maintainability
added tests for delay and abort methods in CodeFirstSpringmvcIntf , CodeFirstSpringmvcIntf , and CodeFirstSpringm
updated the handling of term frequencies in MoreLikeThis . java to use an array instead of a single value to improve performance by avoiding unnecessary
replaced the dependency on ` BuildTargetSourcePath ` with ` BuildTargetSourcePath ` in ` Omnibus . java ` to simplify the code by
[ botania ] disable versioning for botania versioning
updated ` filePaths ` to ` filePaths ` and ` numberOfFiles ` in ` MediaFolder ` , ` MediaProvider ` , and ` Media
updated argument formatting in AidlStep , GenAidlTest , and GenAidlTest to ensure correct formatting of command - line arguments
added a new test class ` Issue79Test ` and updated ` ObligationAnalysis ` and ` ObligationAnalysis ` to ensure correct behavior
removed the TODO comment from FakeHttpLayer . java to simplify the code and improve readability
replaced candidate . handleError ( cause ) with revokeLeadership ( ) in EmbeddedLeaderService . java to streamline error handling by eliminating redundant entries
refactored CompositeDiscoveryClient to use Single instead of Stream to improve code readability and maintainability by using a more descriptive method
updated configuration initialization in ParallelUniverse and BootstrapTest to use a new Configuration instance instead of a hardcoded value to improve code readability and maintain
[ hotfix ] [ configuration ] add description to jobmanageroptions
refactor ` updateNoWidgetsView ` method to use ` updateRecyclerViewVisibility ` instead of ` updateNoWidgetsView ` to improve code
added exception handling for WstxInputFactory and WstxOutputFactory in XmlUtil and MultiVersionXmlParserTest to improve robustness by
added a ` @ Before ` annotation to the ` AuditAliasCommandIntegrationTest ` class and modified ` TestDataHelper . createProjectWorkspaceForScenario `
added logging statements for header view height and recommended widgets in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to improve debugging and
camel - 15836 - camel - cxf : disable test that do n ' t support invocation without parameter
added error handling for periodical refresh failures in CachedStore . java to improve robustness by logging errors when periodical refresh fails
replaced ` lombok . val ` with ` lombok . RequiredArgsConstructor ` in ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAudit
added a method to check default background fills in HSSFCellStyle , HSSFFont , and HSSFPalette classes to ensure
refactor ZonedDateTimeFormatterBenchmark class to improve code readability to enhance maintainability and facilitate future updates
refactor DistributedUpdateProcessor to use @ VisibleForTesting for buffer update logic to improve code readability and maintainability by encapsulating logic
added a null check for the motor and stageNr in SimulationListHandler . java to ensure proper handling of null motor and stageNr
modified the ` getItem ` method to include a ` allAllowed ` parameter and modified the ` getItem ` method to include a ` allAllowed ` parameter
refactor ExtendedMasterSecretExtension class to improve code readability to enhance maintainability and facilitate future updates
changed the variable ` processor ` from ` java . util . List ` to ` final ` in ` AndroidInput . java ` to ensure immut
added error handling for end of stream writing in WritableKeyProcessor . java to improve error handling for stream writing failures
added " CUBE " to MySQLDatabase . java to enhance compatibility with MySQL ' s CUBE database
added a try - catch block for IOException in TestUtil . java to improve robustness by handling potential IOExceptions
renamed ` ExperimentalRobolectricTestRunner ` and ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` to
refactor DefaultOkHttpClientFactoryTest to use a new method ` readTimeoutMillis ( ) ` to improve code readability and maintainability by central
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for os in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 271 add support for inertia and inertia .
added a ` fromCli ` parameter to the ` jailerMain ` constructor and modified the ` jailerMain ` method to include ` fromCli
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added an putInt for " pull _ unread " in TalonPullNotificationService . java to enable tracking of unread pull notifications for better user experience
added a condition to check if the parent object is a Kind . Object in IsNullNode . java to ensure correct handling of non - null objects in
refactor Box2DTest , Pong , OrthographicCamera , and OrthographicCamera classes to improve clarity and maintainability of the
added null checks for mCommentsRecyclerView and mCommentsRecyclerView in ViewPostDetailFragment . java to ensure proper layout management for tablet and landscape orientations
updated logging level from trace to warn in CLIService . java to improve logging clarity by using a more descriptive log level
added debug output for method instance flags in JimpleBodyBuilder . java to improve visibility into method instance flags for abstract methods
ggb - 222 fix mouse click on ie10plus
updated the ` getNotificationUsers ` method to include a ` deviceId ` parameter in ` NotificationManager ` and ` CacheManager ` classes to enhance
updated the URL for SRT - ZIP and SRTM data geotiff in CGIARProvider . java to ensure compatibility with the latest
removed propertyChangeListener and modified action listener handling in MotifFileChooserUI . java and added a new test class bug6520101 . java
changed return type of ` handle ` methods from void to boolean in ` HollowExplorerUI ` and ` HollowExplorerUI ` and ` HollowExplorerUI
refactor ` getRuleOptional ` methods to use ` getRuleWithType ` and ` getRuleWithType ` instead of ` fromNullable `
set the visibility of the transportSpinner in HostListActivity to hide the spinner when making shortcuts
updated lint handling in Attr . java and added new classes T7073371 . java and T7073477 . java with new
refactor BookmarkFragment and ExploreListFragment to return false if the media details are pressed to prevent unnecessary actions during navigation
added a constant for ` LONG _ VIEW _ INDEX _ ENABLED ` and ` DEFAULT _ VIEW _ INDEX _ ENABLED _ ATTRIB
updated the variable name from " V " to " v " in SDRTrunk . java to ensure consistency in variable naming conventions
replace ` with ` StringUtils . cleanPath ` with ` StringUtils . cleanPath ` in ` PrivateKeyParserTests . java ` to improve code readability
removed the ` columnPosition ` parameter from ` diffDropColumn ` and ` diffDropColumn ` methods in ` MTable . java ` to simplify
updated IndexWriter configuration from LUCENE _ 40 to TEST _ VERSION _ CURRENT in TestAddIndexes . java to ensure compatibility with the
hbase - 16297 importtsv : disable unmatched column family check for non - strict column family
[ java ] use logsubscriptionid instead of logrecordingchannel instead of logrecordingchannel .
added voice button proxy functionality in Launcher . java to improve user experience by preventing unintended interactions
added a check for " i " in the JSON node in PoloniexStreamingService . java to prevent processing of " i " in JSON
refactor Procedure class to improve code readability to enhance maintainability and facilitate future updates
added Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) to ResourceBundle . getBundle ( rbName ) in Toolkit . java and Window . java
added a new class ` NormalizeArrayCreationsKotlin : : new ` NormalizeArrayCreationsKotlin : : new ` NormalizeArray
refactor term enum handling in PerSegmentSingleValuedFaceting . java to improve clarity and correctness to enhance code readability and ensure accurate
updated authorList initialization to use Objects . firstNonNull instead of Optional . fromNullable to improve type safety and avoid potential NullPointerExceptions
added a new file ` OSGiTest . java ` and created a new test class ` OSGiTest . java ` with tests for
refactor isDependentServiceEnableable method to use a new method ` isDependentServiceEnableable ` to improve code readability and maintainability by
hbase - 13232 remove unnecessary ` ` clearbufferonfail ' ' from htable . setautoflush ( false )
fix : use ifelement . ifelement . ifelement . ifelement . ifelement . ifelement . ifelement . ifelement . ifelement
added a method ` hasUserData ( ) ` to the ` SimpleFeatureImpl ` class and a corresponding test in ` Property ` to ensure that the
removed HiveException from method signatures in DDLPlanUtils and ExplainTask classes to simplify method signatures and improve code readability
refactor RelyingPartyRegistration class to improve code readability and maintainability
removed the enableLogging method from the JavaCompiler class to streamline the logging process by eliminating unnecessary logging
added a new file ` InJavaSourceSet . java ` that includes a ` InJavaSourceSet ` class and modified import statements in ` Use
added gdalinfo file to testgdalparser . testgdalinfo . fits ( )
added a method ` createGetter ( Object object , String attribute ) ` to the ` ReflectionHelper ` class to provide a way to create a getter
removed the conditional check for useExternalStorage in DirectUpload . java to simplify the conditional logic for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` and updated ` IndexerOutputFormat ` to use ` NO _ COMMIT ` to
cloudstack - 10297 : delete disk offering id when create volume
updated content assignment in ToHtml and BaseTestCellComment to handle non - empty notes to improve code robustness by preventing potential null pointer exceptions
added null checks for ` amountToAdd ` and ` periodToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` LocalDateTime ` classes to
added a new file ` Issue382 . java ` that implements error handling for specific error types to ensure proper exception handling for specific error scenarios
replaced RuntimeException with Integer . signum in PositionUtils . java to simplify code and improve readability
added visibility of the holder ' s text in AttachmentAdapter . java to improve user interface responsiveness by hiding the text when the holder is
fix : fix nullpointerexception in ctimportbuilder and ctimportimpl # getimportkindfor ( )
updated the method call from ` getProfile ( ) ` to ` getProfile ( ) ` in ` XpiDriverService . java ` to improve
fix LiquidBlock . getblockstateproperties ( blockstateproperties , blockstateproperties , blockstateproperties . f _ 61422 _ )
add a check for exception in log in amq2902test
updated timezone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate time zone representation for users
refactor ` DistinctObservation ` to use ` DistinctObservation ` instead of ` DistinctObservation ` to improve code readability and maintainability
updated ` TEST _ NIGHTLY ` to include ` SYSPROP _ MONSTER ` and ` TEST _ BADAPPLES `
added null check for logger in SQLEditorSupport and SQLExecutionLoggerImpl in SQLExecutionLoggerImpl and SQLExecutionLoggerImpl to improve robustness and
added imports for Field , Method , Proxy , and Proxy in GraalContext . java to enhance security by preventing unauthorized access
refactor PGraphics2 to utilize a new method for retrieving and retrieving images to improve code readability and maintainability by encapsulating
updated the method call from ` partition ` to ` partition ` in ` HiveAbstractReader . java ` to ensure accurate verification of transactional properties for
refactor overlay handling logic in Workspace . java to improve clarity and ensure proper handling of overlay scroll changes
hhh - 11717 add new batchbuilderimpl and unmodifiablebatchbuilderinitiator . buildbatch ( ) in order to
improve error message for analysiserror . shouldnotreachhere ( ) method
added a test method ` spyingOnAClassRetainsState ` to ` PartialMockingRetainsStateTest ` and created a new
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure correct parsing and deparsing
added null check for ugi before executing action execution in SecurityUtil . java to improve robustness by handling potential exceptions during action execution
updated error handling in OpenALMusic and OpenALMusic classes to include error code for audio buffers to improve error reporting by providing more informative error
camel - 15836 : camel - quartz : add a new resolveparameter method to the endpointhelper
refactor rexnodeconverter to use scale 1 instead of scale 1 to improve precision and scale handling for literal creation
updated the logic for retrieving vendor and device properties in WebAuthnMultifactorDeviceProviderAction . java to improve null safety and prevent potential NullPointerException
updated the assertion in WalletTestAccount003 . java to use Long . toString ( ) instead of String . toString ( ) to ensure accurate
replaced ` AxialStage ` with ` RocketComponent [ ] ` in ` DesignPanel ` and updated selection logic in ` DesignPanel `
added a ` longRunningTime ` parameter and a default value in ` Args . java ` to ensure that the ` longRunningTime ` parameter is
updated conditional checks in FindRefComparison and added a new class Ideas _ 2012 _ 05 _ 21 with a new class Ideas _ 2012
replaced ` sun . misc . service . providers ` with ` sun . util . ServiceLoader ` in multiple files to improve code readability and maintainability
fix gml3encodingtest to use plain string instead of string
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
added a check for referenceDatabase in MissingUniqueConstraintChangeGenerator . java to ensure proper handling of unique constraints in comparisons
removed the addAndroidConstants method from IjProjectTemplateDataPreparer . java to simplify the code for better readability and maintainability
updated assertions in DuplicateCookieTest and SessionRenewTest to use ` await ( ) ` instead of ` s1122 . getRequests ( )
added user arguments for build IDs and timestamps in ChromeTraceBuildListener . java and ChromeTraceBuildListenerTest . java to enhance the build
refactor localizationsupport and nativelibs to use targetelement instead of list
corrected the spelling of " set match limit " to " match order " in HepPlanner . java to improve code readability and maintain
added a new file TheRockMetaDataDemo . java to demonstrate the usage of the TheRockExchange class to demonstrate the integration of the Rock ExchangeMetaData
change FloatingDecimal , FormattedFloatingDecimal , and FormattedFloatingDecimal to strictfp in FloatingDecimal , FormattedFloating
removed the unparseIdentifier method from columnNamesBuilder in ColumnStatsSemanticAnalyzer . java to simplify the code and improve readability
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified ` BlockStatementTemplateGenerator ` to handle variable declarations
added a check for ` m . isSynthetic ( ) ` before accessing ` m . isStatic ( ) ` in ` InstantiateStaticClass ` and
changed the method call from ` projectFilesystem . getPathForRelativePath ( basePath ) ` to ` basePath ` in ` WorkspaceAndProjectGenerator . java `
updated IkStepDefinition to use a list of pending rescues instead of sending a message to improve resource management and ensure proper handling of pending
updated ` equals ` and ` hashCode ` methods in ` AbstractType ` , ` DateType ` , and ` TimestampType ` , and ` Timestamp
added a ` getSyncLevel ` method to the ` SyncLevel ` enum and implemented a ` getSyncLevel ` method in ` UpdateLog `
[ hotfix ] [ test ] use try - with - resources for jedis . clientpause ( )
added a condition to check if the slice ' s state is not RECOVERY to ensure that only valid slice states are processed
updated the parameter name from CV _ MAKETYPE to CV _ MAKETYPE in opencv _ core . java to ensure consistency in
added SDKPath and SDKPath fields to AppleBundle and SwiftStdlibStep classes and updated ProcessExecutorParams initialization in SwiftStdlibStep to enhance
replace ` writeLock ` with ` deleteInternal ` in ` BlobServer ` , ` TransientBlobCleanupTask ` , and ` TransientBlob
cloudstack - 10297 : fix a typo in networkmanagerimpl . java ( # 1143 )
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion method to HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type is used for sorting and union
refactor BetterBlockPos class implementation to improve code readability and maintainability
updated the return value from ` getProxy ( ) ` to ` getProxy ( ) ` in ` EmbeddedVelocityToolboxView . java ` to
updated version handling in multiple classes to use a more descriptive variable name for clarity to improve code readability and maintainability by centralizing version
added support for OracleDatabase in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing characters in SQL statements
added a new boolean constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to support handling of
updated the URL format in MainTest . java to use a specific port instead of a hardcoded value to improve readability and maintainability of
updated BLOB _ SIZE from 7 to 6 , PLAY _ MARGIN and PLAY _ MARGIN in DrawAudio . java to
added a method to add a duoSecurityPrincipalMultifactorAuthenticationProviderBypass in DuoSecurityMultifactorProviderBypassConfiguration to ensure proper authentication
refactor findPositionForNewNodeBestAreaFit and findPositionForNewNodeContactPoint methods in MaxRectsPacker . java to improve
updated import statements in KBase , KnowledgeBuilderFactory , and KnowledgeBuilderFactory classes to improve code clarity and maintain consistency in naming conventions
added a new ` helpPage ` variable and updated related methods in ` PMS ` , ` HelpTab ` , and ` LooksFrame `
added a new class ` GeocodeProviderFactory ` and modified ` Constants ` to extend ` GeocodeProviderBaseFactory ` and ` ConstantsBase `
updated import statements from CharArraySet to CharArraySet in LuceneAnalyzerUtil , LuceneTokenizer , and LuceneTokenizer classes to ensure compatibility with the latest
added a new test method ` testConstructorException ` in ` OptionTest ` , ` ResourceManagerImplTest ` , and ` ResourceManagerImplTest ` to
updated the object ID from " GATEWAY _ SERVER _ ID " to " GATEWAY _ SERVER _ ID " and
updated document handling logic in SegmentsInfoRequestHandler and CollectionsAPISolrJTest to improve clarity and maintainability of the code
updated the calculation of numPredictiveAppCols from Math . max to 4 in DeviceProfile . java to improve accuracy in determining the number of
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` , ` DrillJoinRelBase ` , and ` DrillJoin
add a new file ` BlockBuildCraft . java ` that implements the ` BlockBuildCraft ` class to facilitate the construction of a crafted craft
refactor gravity handling in DeviceProfile . java to use FrameLayout . LayoutParams instead of Resources . Resources to improve code readability and maintainability by
replaced the call to ` run ( ) ` with ` start ( ) ` in ` YahooSession . java ` to ensure proper execution of the session
added null checks for ` ms ` in ` HiveMetaStore ` , ` HiveMetaStoreClient ` , and ` HiveMetaStoreClient `
updated display script retrieval from ` getDefault ( ) ` to ` Category . DISPLAY ` in ` LocaleCategory . java ` and added a new test
updated method calls from ` CORE _ NAME _ PROP ` to ` CORE _ NAME _ PROP ` in ` Replica . java ` to
replaced ThreadLocalRandom with a Random instance in StoreDirectTest . java to improve performance by using a more efficient random number generator
added a check for launcher readiness before backuping items in LauncherBackupHelper . java to ensure that backup operations are only performed when the launcher is
updated error messages in Cell . java for clarity and consistency to improve readability of error messages for better debugging
added unit tests for the ResiliencePooledRouteOk class to ensure that the resilience functionality works as expected in the application
renamed ` bodySpace ` and ` getBodySpace ` to ` barSpace ` across multiple chart classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability to enhance maintainability and facilitate future updates
updated FileMessageHistoryTest to use TemporaryFolder instead of File to improve test reliability by using a temporary folder for file operations
added logging levels in Grasscutter . java and Grasscutter . java to enhance logging capabilities for various components
changed the visibility of ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` to
updated state checks in Launcher and Workspace classes to include a new state check for WORKSPACE and NORMAL to ensure proper handling of workspace state
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
updated conditional checks in SnippetTemplate . java for better clarity to improve code readability and maintainability
updated SCOPE _ ENTITY , SCOPE _ SOLR _ DOC , and DataImporter to include coreScopeSession in multiple classes to enhance
added a primary key to the CREATE TABLE measurement in DatabaseMetaDataTest . java to ensure that the database correctly retrieves primary keys for measurements
updated variable names from ` -- permissions - path ` to ` -- permissions - config - file ` in ` PantheonCommand . java ` to
refactor session creation logic in HttpSessionContextIntegrationFilter . java to improve code readability and maintainability
added a new file ` TestIfWithDeadRegion . java ` that implements a Supplier < String > to test the behavior of the ` getString `
corrected the spelling of " English UD . gz " to " English USD . gz " in the DependencyParser class to
added HighResolutionTimer . enable ( ) and testConcurrentAccess ( ) in SnowflakeIdGeneratorTest . java to ensure HighResolutionTimer is
added a static UI option to hide the toast bar based on user preferences to enhance user experience by allowing customizable snackbar visibility based on user preferences
replaced the return statement with a try - finally block in WindowsSecurity . java to ensure proper resource management and avoid potential memory leaks
updated parameter handling in SamlRedirectLogoutHandler and WhitelistLogoutHandler to ensure that only non - existing parameters are processed to improve robustness by
updated JOptionPane messages in multiple classes to use string resources instead of hardcoded strings to improve readability and maintainability of the code
tika - 132 : add test for x - tika - ooxml and vnd . openxmlformats - officedocument . xlsx
updated logging statements in Runner , FixJava , and FeaturePathFeatureSupplier classes to improve logging clarity and maintain consistency across the codebase
camel - 14297 : camel - eip - documentation - enricher - fix xml output to be more robust .
[ hotfix ] [ table - common ] make migrationcoordinator # removeversioninfoforendpoint ( ) synchronized
added debug logging for stored and stored audio devices in DeviceConfiguration . java to improve traceability and maintainability of device handling logic
added WebsocketConfig and ReactorNettyWebSocketClient to ShenyuConfig and implemented maximum frame payload size configuration in WebSocketPluginConfiguration to enhance
added unit test to cachevalidationlistener . beforeinvokedmethod ( )
added a null check for the content length in MoreIndexingFilter . java to ensure that the content length is only added if it is not empty
[ hotfix ] [ runtime ] fix deadlock in defaultsolverjob
refactor ` createTimeseries ` method to use ` internalCreateTimeseries ` to improve code readability and maintainability by encapsulating
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide access to the ` result ` boolean value
changed access modifiers of methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
cloudstack - 10265 : do n ' t create account owner if the account be not in recursive mode .
updated HttpParser and related test cases in HttpParser and HttpParserTest to ensure proper handling of compliance with RFC2616 and improve test coverage for
refactor thread - complete initialization and output handling in J9VMInternals and Thread classes to improve code readability and maintainability by centralizing
added an ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created a new ` EnvironmentTest ` class for managing external storage state to
jbrules - 283 add a test for mvel type coercion after mvel 2.7 . 0 .
updated logFilePaths to logFilePaths and logFilePaths in PMS . java and LoggingConfig . java to improve code readability and maintain
updated logging statement in ActionNode . java to include the exception message to improve error reporting by providing more context about the exception
added a check to ensure the number starts with " tel : " in the SipUtil class to ensure the correct number is used for processing
refactor shared view visibility logic in FileListListAdapter . java to improve readability and maintainability of the code
updated the deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf and TestTxnCommands3 to ensure compatibility with the latest Hive
added a new parameter ` confOverlay ` and updated related methods in ` ExecuteStatementOperation ` , ` Operation ` , and ` Operation ` classes to
replaced Lists . newArrayList with ArrayList in BTCMarketsStreamingAdapters and BTCMarketsWebSocketSubscriptionMessage to improve code readability and
updated the assertion in OGRDataStoreTest to use getTypeName ( ) instead of getName ( ) in OGRDataStoreTest . java to ensure the
removed the ` onErrorInStep ` method from the ` StepListenerSupport ` class to streamline error handling by eliminating unnecessary method
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 14284 : camel - netty - http : fix camel - netty - http to use http : / / and http : /
remove system . out . println ( ) from testnonblockapi
added a check for the number of connections in DbConnectionDialog . java to ensure that a valid row is returned when there are no connections available
add a new file ` MethodWithSameNameAsEnclosingClass . java ` to handle method declarations with the same name as the enclosing class
added support for ExtendedPlatformComponent and ExtendedPlatformComponent in ManagementFactory . java and created a new ExtendedPlatformComponent . java file to enhance platform management
added quotes to SQL statements in BasicQueryTest . java to ensure proper handling of special characters in SQL syntax
updated URLs in multiple test classes to include the " org / knowm / bleutrade / dto " directory to ensure compatibility with the new
refactor TextEscapeUtils class to improve code readability to enhance maintainability and facilitate future updates
added a FILTER _ PARAM constant and modified the FilteredQuery instantiation in AbstractSpatialFieldType . java and TestSolr4Spatial . java to improve query
updated autoemail sending logic in GpsLoggingService and AutoEmailHelper to improve user experience by providing feedback during email sending
replaced ArrayList with HashSet inlinks . iterator ( ) and LinkDb . java for consistency to improve performance and maintainability of the code
added a synchronized method to remove old results in TradfriDiscoveryService to ensure thread safety when stopping scans
changed the ` isClientFilterEnabled ` parameter from ` isClientFilterEnabled ` to ` false ` in ` HiveMetaStoreClient ` and `
updated TicketModel , TicketBasePage , TicketBasePage , TicketBasePage , TicketBasePage , TicketBasePage
updated columnAliasPrefix initialization from " c " to " c " in multiple platforms to ensure consistency in naming conventions across platforms
updated LlapRowRecordReader and LlapRowInputFormat to accept BytesWritable instead of Text to improve data handling by utilizing a more efficient data
add a new class ` NonNativeJVMDetector ` for handling 32 - bit JVM architecture in the ` TerasologyEngine ` class
updated the condition for adding PARENT and B elements in PdfCopy . java to improve code readability and maintainability
added a DAEMON option to the RESET _ ALARM option and implemented daemon mode providing a web pendant UI to enhance user experience
added a new file ` FlushIndexTask . java ` that extends ` PerfRunData ` to implement a FlushIndexTask ` class to facilitate
updatedFlushWriter methods to include estimatedSize parameter in BinaryMemtable , ColumnFamilyStore , ColumnFamilyStore , ColumnFamilyStore , and Memtable
added SEASONS _ NOSORT and SEASONS check in MediaLibraryFolder . java to ensure proper handling of SEASONS
added a new file ` LocalSocketAddress . java ` that implements a network interface to validate IPv6 addresses to ensure that only valid IPv6 addresses
updated grid size steps for grid size steps in GridSizeMigrationTask . java to ensure accurate representation of grid size steps
updated method calls from ` getName ( ) ` to ` fields ` in ` SerializerPojo . java ` to improve code readability and maintainability by
added a ` READ _ ONLY ` constant and a ` options ` variable in ` Context . java ` to ensure proper handling of read - only
refactor LookAndFeelCommand class to improve code organization to enhance maintainability and readability of the code
updated the calculation of lastRunEnd in BlockBoxing . java to use ceiling instead of floor to ensure accurate calculation of runEnds based on
added EofException and EofException instances in GracefulStopTest . java to ensure proper exception handling for EOFExceptions
refactor NetJavaImpl to use a synchronized variable for better readability to improve code maintainability and reduce boilerplate code
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
removed the conditional check for allowAccountAssetOptimization in DynamicPropertiesStore . java to streamline the code by eliminating unnecessary checks for account asset optimization
added a new constant J9 _ GC _ POLICY _ NOGC in VM . java to provide a default value for GC policy in the VM
added error handling for invalid protocol buffer exceptions in TransactionCapsule . java to improve error handling for invalid protocol buffers
[ net . sourceforge . pmd . rules . strictexception : remove exceptiontypecheck from strictexception
updated resource retrieval from " en / " to " en / " in HelpContent . java to improve localization support and provide clearer error messages when
added a new file ` ProcessorInfo . java ` with a method to determine the number of available processors to provide functionality for managing CPU status processes
added a default stylesheet option to PrintingBugReporter to enhance the printing capabilities of HTML output based on user - defined options
make logbacklogger . logbackxmllocation final to avoid npe
updated ` HostLevelParamsHolder ` and ` ServiceComponentRecoveryChangedEvent ` to use ` ServiceComponentRecoveryChangedEvent ` instead of ` Collection ` to improve
updated SleuthTagPropagationAutoConfiguration to use ` @ ConditionalOnProperty ` instead of ` @ ConditionalOnProperty ` in ` Sle
refactor the handling of SHARED and STATIC dependency types in RustCompileUtils . java to improve readability and maintainability of the code
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap ` parameter and added error handling in ` LoginPageGeneratingWeb
hbase - 13234 fix miss miss key in halfstorefilereader . getlastkey ( )
hhh - 11717 - deprecate ` ` isalways ( ) ' ' and ` ` isalways ( ) ' ' (
add a test for the Nd4j backend to verify the behavior of the ND4j constant with ND4j # configs
replaced the ` showShareFile ` method with ` getFile ( ) ` across multiple activities to streamline the code by directly calling ` getFile ( )
added a new file ` LiquibaseUpdateMojoExecutionTest . java ` to validate the functionality of ` LiquibaseUpdateMojo ` to ensure
updated proxy type handling to use uppercase to ensure consistent behavior when converting proxy types to uppercase
add mod _ Minecraftforge . getdungeonlootTries ( ) to make things Initialize
added filtering logic for column retrieval in JdbcDatabaseSnapshot . java to improve performance by reducing the number of columns in queries
added a border image to the CSS border in CSSBorderTest . java to enhance the visual appearance of the CSS border in the application
added ` RetryAutoConfiguration ` and ` RetryLoadBalancerInterceptor ` classes , and modified ` RetryLoadBalancerInterceptor ` to include ` RetryTemplate ` and `
updated layout dimensions from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure proper positioning of layout elements
updated task name formatting in PinotHelixTaskResourceManager . java to ensure accurate task name representation
added logging for UncheckedIOException in ServiceResourceProvider . java to improve error handling for invalid Add Service requests
[ hotfix ] [ table - common ] fix indexdatabase . isindexversionedfilesonly ( ) to return false
ggbround ( x ) : fix bug in casgiac . java
refactor AnonCipherWithWantClientAuth class implementation to improve code readability and maintainability
added @ Deprecated annotations to ProducerTemplate . java to indicate that these classes are outdated and should no longer be used
refactor JLayer class to improve code organization to enhance maintainability and readability of the code
[ hz - 24187 ] fix the test that fail on slow ci server
replaced ` encodeInternal ` method with ` saltedPass ` in ` Md5PasswordEncoder . java ` to improve code readability and maintainability
replaced the variable ` viewTreeObserver ` with ` mTaskRecyclerView . getViewTreeObserver ( ) ` in ` IconRecentsView . java `
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
updated variable name from MIN _ VALUE to MAX _ VALUE in SSTableMetadata . java to ensure consistency in naming conventions
updated the setPreferredSize method in SecurityPanel . java to adjust the panel ' s size to improve user interface responsiveness and responsiveness
added null checks for replies and replies in TweetActivity and TimeLineCursorAdapter classes to ensure that replies are only processed when there are no replies
updated HitbtcBalance and HitbtcAdaptersTest to use ` ToStringBuilder ` instead of ` ToStringBuilder ` to improve object comparison and
fix ( sql ) : update order direction to order by in statement
updated return statement in RetriesExhaustedWithDetailsException . java to use addrs . toString ( ) instead of s to improve clarity and
[ netbeans - 462 ] fix a bug in the editgcodefile . java file
updated import statements in JsonToGrpcApplicationTests . java for improved clarity to enhance maintainability and readability of the code
refactor energy handling logic in PipePowerWood . java to improve code readability and maintainability
added a check to delete the temporary output file before deleting it to ensure that temporary output files are deleted before proceeding with operations
updated the constructor parameters in BitstampWebSocketTransaction and BitstampStreamingMarketDataServiceTest to include " id " and " order _ type " to enhance
updated ReplayProcessor , ReplaySubject , ReplayProcessor , ReplaySubject , ReplayProcessor , ReplaySubject , and ReplaySubject
updated expectedCitation from " [ 1 ] " to " [ 1 ] " in the CitationStyleGeneratorTest . java file to
[ java ] add video hd format to mediatablefiles . getvideohdformat ( )
g3d - 483 : show only definition for equation in prerelease , not prerelease .
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerException when the component is null
hbase - 16464 add caching for startrow in metareader . getstartrow ( )
updated the script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math class to improve code organization to enhance maintainability and readability of the codebase
added a debug flag ` ENABLE _ TRANSIENT _ TASKBAR ` to the ` FeatureFlags ` class to enable transient taskbar functionality
refactor AccessExecution , ArchivedExecutionVertex , and ArchivedExecutionVertex classes to improve code organization and maintainability
added a conditional check for the scale value in IOSGraphics . java to ensure proper density handling when the scale is 3
rename ` optional ` to ` vararg ` in ` Parameter . java ` to improve clarity and consistency in variable naming
added an exception to the log message in RegionStateStore . java to improve error handling by providing a more informative exception message
refactor assertions in TestClusterUpgradeUtils to use a new method for assertions to improve code readability and maintainability
added warning messages and updated related methods in AsyncHttpConnection and AsyncContextTest classes to improve logging clarity and ensure proper handling of async requests
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` class to enhance functionality by allowing the ` showArrow ` parameter to be
added lock mode assignment logic in Database . java and modified test cases in TestRowLocks . java to ensure proper lock mode assignment for MV
skip linux / amd64 test on linux / amd64
added checks for ` input ` and ` input ` types in ` Scalars . java ` to improve type safety and ensure proper string representation of input
updated error message for missing PRIMARY KEY specifications in CreateTableStatement . java to improve clarity of error handling for missing PRIMARY KEY specifications
added support for lmp and hover icons in CellLayout , Hotseat , and Launcher classes to enhance visual consistency for devices running Lolli
vmservicemanager : throw exception if no isolate to query for flutter view
added new method ` headersOptions ` and ` xssProtection ` and ` xssFrameOptionsHeaderWriter ` to ` HeadersConfigurer `
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and ease of understanding for future developers
[ grid ] rename devtoolsprovider . create ( ) to devtools . router . router . router
[ hotfix ] [ test ] add type to eventsourcingrepositorytest
added prebuilt libraries directory handling in PythonBinaryDescription . java and implemented a test for packagePrebuilLibrariesProperly to ensure proper handling of
updated client authentication handling in NetServerOptionsConverter and HttpServerOptions to use ClientAuth instead of ClientAuth to improve flexibility and maintainability of client authentication
updated directory paths for repl files in HiveConf . java and MetastoreConf . java to ensure consistency in file naming conventions across the application
refactor task view handling in RecentsView . java to improve code readability and maintainability by reducing duplication
[ hotfix ] [ test ] increase timeout in AmqpTransformerTest . java to allow more time for test execution
removed the clearAll ( ) method from DataTableTopComponent . java to simplify the code by eliminating unnecessary method calls
rename ` controller ` to ` flowcontroller ` in ` DecreaseContextLevelProcessable ` and ` SimpleModelProcessable ` classes to improve
[ hotfix ] [ runtime ] fix pipelinebuilder # dealwithconsumeallchildrenpipelinebuilder # dealwithconsumeallchildrenpipelinebuilder
added ClassLoaderHandler functionality to the module - info . java file to enhance class loading capabilities in the application
add planningproblem to the solutionbusiness . solve ( ) method so that it would well reflect our new plan .
added JsonIgnore annotation to ApplicationSettings . java to enable JSON serialization and deserialization of JSON objects
updated the null check from ` throwable ` to ` throwable ` in ` PlotListener . java ` to ensure that ` throwable ` is not null before
updated queryInfo retrieval logic in QueryTimeManager . java to improve readability and maintainability of the code
updated deltaProgress from NONE to GUI _ ONLY in TileAutoWorkbenchBase . java and modified condition checks in TileAutoWorkbenchBase . java to
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 419
rename timeColumnName to incomingTimeFieldSpec in AvroRecordToPinotRowGenerator . java for clarity to improve code readability and maintain
replaced calls to ` waitToProduceOneBlock ` with ` waitToProduceOneBlock ` in ` HttpShieldTrc20Token004 .
[ xwork2 ] add init ( ) method to container . getexternalcontext ( )
refactor TimerObservationHandler to use a new ` LongTaskTimer ` for better readability to improve code maintainability and reduce duplication
updated SYNC _ DELTA _ RATE to double and adjusted fetch time calculations in AdaptiveFetchSchedule . java to improve precision in fetch time
[ thymeleaf ] warn about unwrapped fragment expression in future versions of thymeleaf
changed the type of _ attributes from HashMap to ConcurrentHashMap in SessionData . java to improve memory management by using a more efficient data structure
use copy ( ) instead of copy ( ) in activemqmessageconsumer
added constants for light and light colors in ColorExtractionAlgorithm . java and modified extractInto methods in ColorExtractionAlgorithm . java to enhance color handling and
added access check for the data folder in SketchBuilder . java to ensure the data folder is accessible before adding it to the src folder path
updated the ` appendContent ` method to include a ` includeTitle ` parameter and modified the ` appendContent ` method to include ` includeTitle `
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify the session registry initialization process
added logging statements for connection completion and error handling in NettyStreamingService . java to improve debugging and traceability of connection failures
updated proxy factory initialization to use JavassistProxyFactory instead of Factory to ensure compatibility with Javassist ' s internal Javass
replaced ` java . util . concurrent . ConcurrentLinkedQueue ` with ` ConcurrentHashSet < Thread > ` in ` QueuedThreadPool . java ` to improve
refactor SocketExceptions and ExceptionText classes to use InetAddress instead of InetAddress to improve readability and maintainability of the code
added a method to check if the view directory is under the repository directory to ensure that the view directory is not under the repository directory
remove tab - header - area from jabrefframe
added " - XX : + UseCompressedClassPointers " and " - XX : + UseCompressedClassPointers " to multiple test
added error handling for update log not in active or rePLAY state in PeerSync . java to improve user experience by providing clearer error messages when
deleted the ConnectionHook . java file to remove unused code to streamline the codebase
updated the ` waitForReplicasInSync ` and ` waitForReplicasInSync ` methods for consistency and clarity to improve code readability and maintain
camel - 14284 : fix camel - dsl - xml - generator for camel - dsl - java
updated ApexLanguageModule to use ` String . valueOf ( ) ` instead of ` " 45 " to ensure compatibility with the latest Apex features
refactor multiple Java files for consistency and clarity to improve code organization and maintainability across the project
refactor AggregateEngine and OverflowQueryEngine to use a dedicated thread pool to improve thread management and ensure proper shutdown of aggregate engines
updated WebSocketAsyncConnection constructor to accept ByteBufferPool instead of StandardByteBufferPool to enhance flexibility in buffer management for WebSocket connections
added scrollToPositionWithOffset logic in UploadActivity . java to ensure correct positioning of thumbnails based on index values
fix ( sqlcodegenerator ) : fix columnalias overridden by other column alias
refactor animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation classes to improve code readability and maintainability by encapsulating
added a check to disable default user agent in HttpClient . java to ensure that the default user agent is disabled for HTTP requests
added a check for the presence of a pubsubhubbub in FeedRefreshUpdater and ApplicationSettings classes to ensure that pubsubhubbub is only
changed the visibility of the finalize method from public to protected to allow subclasses to override the finalization of the finalize method
updated the ` isAnonymousOrLocalClass ` method to include ` ACC _ SYNTHETIC ` in ` StubJarClassEntry . java
add a new file ` DSpaceWebapp . java ` that extends ` AbstractDSpaceWebapp ` to implement the ` DSpaceWebapp
added a method to retrieve table alias containing column names in CalcitePlanner and RowResolver classes to ensure that column names are not present in any
updated trigger key identification from " Trigger " to " Trigger " in JobGenerator . java to provide clearer context for trigger key identification
wallet : use trx . gettransactionid ( ) instead of dbmanager . getpendingtransactions ( )
fix test that fail on slow ci server
updated variable names from " rcfileOptimizedWriterEnabled " to " rcfileWriterValidate " across multiple files to ensure consistency in naming conventions
added a new enum ` TlsClientCertPolicy ` and updated related logic in ` Constants . java ` and ` GitBlitServer . java
added debug logging for subscription failures in KrakenFuturesStreamingService . java to improve error handling and debugging capabilities
added a new ` HttpHeaders ` parameter and modified the ` ProxyWebSocketHandler ` constructor to include ` headers ` and ` subProtocols ` to enhance
added debug logging for fetchReq in HiveQueryResultSet . java to improve traceability of fetch requests during execution
[ hotfix ] [ event ] fix typo in holidayeventformatter
refactor ` FinalizePrivateFieldsTest ` and ` FinalizePrivateFields ` classes to include a new method ` ignoreInnerClass ` to improve
refactor UnexpectedJobExecutionException class for improved error handling to enhance code clarity and maintainability
deleted the ` AquaLookAndFeel . java ` file and removed the ` shouldUseOpaqueButtons ( ) ` method in ` AquaUtils . java
updated the handling of maxFreq and maxCost in DrillSidewaysQuery and DrillSidewaysScorer to improve code clarity and
added GeoDegeneratePath class to StandardObjects . java to support GeoDegeneratePath functionality in the application
refactor constructors in ParticleEffectPool , FlushablePool , and ReflectionPool classes for improved clarity to enhance code readability and maintainability
added state updates for the taskbar in the launcher and updated FLAG _ STASHED _ IN _ TASKBAR _ ALL _ APP _ I
added null check for ` StyleInfo ` in ` CascadeDeleteVisitor . java ` to ensure proper handling of null values to avoid potential NullPointerException
refactor size and maxWidth methods in GuiUtil and StatusTab classes to improve code readability and maintainability by encapsulating size and
replaced ` FileTreeViewHolder . java ` with ` TreeFileExtension . Factory . forFile ( ) ` in ` FileTreeViewHolder . java ` to
updated assertions in ParallelUniverseTest to include " v18 " instead of " v18 " to improve clarity and accuracy of qualifier assertions in tests
added synchronization to calculate the number of results in XMLReporter to ensure thread safety when accessing the list of suite results
add a new file TestNativeProbabilityFunctionQueries . java to implement a test for native probability function queries to facilitate testing of native probability function queries
added a call to ShutdownThread . deregister ( this ) in ClientContainer . java to ensure proper resource management and prevent memory leaks
added a method ` dropTemporaryTableAfterUse ` to the ` SybaseASE15Dialect ` class to provide a way to disable temporary table
[ jsweet ] disable htmlunit test for htmlunit and htmlunit
refactor SolrCore , XMLWriter , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code readability to enhance maintainability and facilitate future updates
updated string concatenation in VirtualAllocCommitUncommitRecommit . java to include reserved 1024KB for Test to improve readability and maintainability of the
refactor ad playback state handling in AdTagLoader , AdsLoader , and AdsMediaSource classes to improve code readability and maintainability
refactor equality check in MultimapSubject . equals method to improve code readability and maintainability
updated the method calls from ` deg _ text ` to ` unit _ hz ` in ` WaveGeneratorActivity . java ` to align with the
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.16 . 0 (
replaced ` putAll ` with ` putAll ` in ` TestLabelOptions . java ` to simplify the code and improve readability
refactor vertex format handling in VertexLighterFlat . java to use a static final NORMAL _ 4F constant to improve code readability and
replace ` onStart ` with ` try ( Tracer . withSpanInScope ` in ` TracingClientInterceptor ` and ` ITTracingServer
replaced ` ZoneId . of ( timeZoneStr ) ` with ` TimeZone . getTimeZone ( timeZoneStr ) ` in ` ScheduledTrigger . java ` to
added a new ` AsyncBucket ` and ` InMemoryExtension ` classes to implement asynchronous mode and custom time measurement capabilities in the bucket implementation
updated the test class directory handling in resexhausted003 . java and improved error messages in TestDescription . java to enhance flexibility in handling
updated variable names from ` _ maxIdleTime ` to ` _ lowResourceMaxIdleTime ` in ` AbstractConnector . java ` to improve code
refactor OngoingStubbing class to improve code readability to enhance maintainability and facilitate future updates
updated the ` getValidWebServer ` method to accept a ` WebServer ` parameter and modified the ` getValidWebServerPort ` method to
replaced productConstructor with constructor in HttpClientUtil and SolrTestCaseJ4 classes to improve clarity and maintainability of the code
added error handling for thread allowlist clearing in ParametersInterceptor . java to ensure that the thread allowlist is cleared before proceeding with further operations
updated the method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity
[ drools - 351 ] fix overlaphitpolicy not work in dmndtanalyser
added a new test method ` testSlidingWindowsCombine ` to ` PCollection < String > ` to verify the behavior of the ` Combine ` class
updated logging statements in Launcher and LauncherModel classes to ensure app icons are only bound when all apps are dirty to improve debugging clarity and ensure
added a check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest . java to ensure that the test accurately verifies the status of the
refactor code to improve readability and maintainability to enhance code readability and maintainability
replaced ` getPrivSysProp ` method with ` GetBooleanAction ` in ` AquaMenuBarUI . java ` to enhance security checks for embedded
add fall distance parameter to setrawlocation ( ) and setrawlocation ( )
refactor query handling in SimpleJpaRepository to use CriteriaQuery for query execution to improve code readability and maintainability by encapsulating
updated the ` setDifficulty ` method to include ` timestamp ` and ` parentHash ` and ` parentHash ` and ` parentHash `
[ gr - 27335 ] fix unsafepointinsertionphase . cansafepoint ( ) to be a safepoint .
added null checks and null checks for children in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs classes to ensure robust handling of null
changed access modifiers of ArtifactResolver from package - private to public in ArtifactResolver . java to allow access to these methods from other packages
added thread management and shutdown methods in ClientConnectionHandler , BulletPhysics , and ChunkProcessingPipeline classes to ensure proper resource management and prevent memory leak
added a check to ensure maxBufferedDocs is at least 1 to prevent IllegalArgumentException when maxBufferedDocs is less than 1
added logging in logging in logging in the login state in LoginActivity to improve tracking of login state during state transitions
added null checks for ` next ` and ` val ` in ` Pump . java ` and updated ` PumpTest . java ` to ensure
changed access modifiers of ` loadbalancer ` to protected in ` HttpShardHandlerFactory ` , ` LBHttpSolrServer ` , and `
updated the order variable from Ordered . LOWEST _ PRECEDENCE to Ordered . HIGHEST _ PRECEDENCE to
added imports and handlers for Server and HandlerList in TestJNDI . java to enhance server functionality and improve handler management
updated method calls in SortedDynPartitionOptimizer . java for consistency and clarity to improve code readability and maintainability
removed the type check from FileStreamChannel . java to simplify the return statement for better readability
updated the calculation of the number of nulls in StatsUtils . java to ensure that the number of nulls does not exceed the number of rows
camel - 15836 : camel - yaml - dsl - add support for kamelet in dependency download
replaced ` OkHttpOAuthConsumer ` with ` OpenStreetMap ` and updated imports in ` OSMJob . java ` to improve error handling
refactor ` TestMetaAccessProvider ` , ` BasicPTXTest ` , and ` PTXBackend ` classes , and ` BasicPTX
added a clientAuth property to IoTDBRestServiceConfig and updated related methods in RestService and RestService classes to enable configuration of client authentication
replaced the variable ` mocksToBeInjected ` with ` mockCandidates ` in ` PropertyAndSetterInjection . java ` and added a new test
refactor BloomFilter64bit and BloomUriUniqFilter classes to use InitializingBean for consistency to improve code readability and maintainability by
changed cursor adapter from false to true in HomeFragment and TweetPager classes to ensure cursor adapter is refreshed correctly based on user preferences
updated the height ratio from 1f to 75f in ProfilePager . java to improve the responsiveness of the scroller for better user experience
replaced ` @ SuppressWarnings ( " null " ) ` with ` jdk . nashorn . runtime . events ` in multiple Java files to improve
added SYS _ PREPPED _ HOSTS _ HOSTS _ KEY and SYS _ PREPPED _ HOSTS _
added logEveryUnknownFileFormat parameter to DatabaseChangeLog . java and created a new UnknownChangeLogFormatLoggingTest . java file to enhance the
added a loop to remove the ' / ' character from the location in DefaultServlet . java to ensure proper handling of special characters in the location
added properties to the StaticPipeline class for managing entities and scores to enhance the pipeline ' s ability to manage multiple entities based on specified properties
refactor filename handling in Frame . java and add configuration handling in WhoopsModule . java and Utils . java to improve code readability and maintain
do n ' t throw exception if the datastore be not find in the workspace
refactor Assert class to improve code readability to enhance maintainability and facilitate future updates
updated ` MultiLineTests ` to extend ` MultiLineGridlikeTextTests ` and ` MultiLineJaggedTextTests ` to improve test coverage
camel - 15836 : camel - test - java : use sendamessagetoonetopic instead of sendmessagetoonetopic
removed unnecessary initialization of measurement schemas in multiple files to simplify code and improve readability by eliminating unnecessary object creation
[ hotfix ] [ test ] fix test promotion from SurvivorAlignmentTestMain to SurvivorAlignmentTestMain . SURVIVOR to improve performance
updated the log file name from " slf4j - log4j12 - . * " to " slf4j - reload4j
updated assertion in HueBridgeHandlerOSGiTest to use waitForAssert for better readability to improve code readability and maintainability by ensuring
refactor package structure for better organization and clarity in the codebase to improve organization and clarity of activity - related classes within the project
added JUnit @ Ignore annotation to KieContainerSolverFactoryTest . java to mark tests as ignored due to DROOLS - 1276 issues
added a new constructor ` PullRequestMergedEventsStream ` to handle schema retrieval and producer retrieval in ` PullRequestMergedEventsStream ` to enhance functionality
refactor AbstractExpressionPart class to improve code readability to enhance maintainability and facilitate future updates
refactor TaskSlot class to improve code organization to enhance maintainability and readability of the code
rename ` FIRE _ EXCEPTION _ ON _ FAILURE ` to ` CLOSE ` in ` NettyWebSocket ` and ` NettyWebSocket
added error handling for unlocking locks in MoveTask . java to avoid potential NullPointerExceptions when unlocking locks
replaced ` Properties ` with ` ResourceBundle ` for resource loading in ` JRubyBackend . java ` to improve code readability and maintainability by using
replaced ` ZERO _ ADDRESS ` with ` ByteUtil . EMPTY _ BYTE _ ARRAY ` in ` Transaction . java ` to improve code
refactor class loading logic in ClassGraphClassLoader . java to improve readability and maintainability of the code
[ hotfix ] [ test ] fix jobmanager startup test
updated schema files in CloudDatastreamResourcesProto . java for consistency and clarity to improve code readability and maintainability by standardizing naming conventions
added a new Bundle instance to set additional extras in FileDisplayActivity to enhance user experience by allowing dynamic extras
modified the condition for looping particles in ParticleEmitter . java to improve code readability and maintainability
updated test assertions in AmbariManagementControllerImplTest . java to reflect the correct number of cluster instances to ensure tests reflect the correct number of
updated the column name from " SERVICE " to " SERVICE " in TransientSessionTicketImpl and added a NoResultException handling in JpaTicket
updated Bug4823811 . java file to improve code clarity and maintainability
replaced ` patternToDelete ` with a ` pathRelativizer ` for pattern removal to improve code readability and maintainability by utilizing a
updated the ` requestFullState ` method to accept a boolean parameter and modified the ` requestFullState ` method in ` DeconzBridgeHandler `
refactor ShibbolethCompatiblePersistentIdGenerator to utilize a new method ` getAttribute ` and ` getAttribute ` to improve code readability and
updated the @ Inject annotation from ` @ Inject ` to ` @ Inject ` in ` RequestValidationService . java ` to improve code readability and
added a new bundle for hiding the keyboard message in UiThreadHelper . java to enhance user experience by allowing users to hide soft input from the window
replaced direct calls to ` pathList . isEmpty ( ) ` with ` MManager . getInstance ( ) . clear ( ) . clear ( ) `
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a new test method ` testSlurpFile ` to ` IOUtilsTest . java ` to verify the functionality of the ` IOUtils ` class
chore ( deps ) : upgrade gapic - generator - java to 2.1 . 0 and update gax - java to 2.16 . 0 (
refactor span retrieval to use a new method ` spanWithName ` to improve code readability and maintainability by encapsulating span name
added DateWritable support to the ETypeConverter and DataWritableWriter classes to enhance date conversion capabilities and ensure compatibility with HIVE - 6384
updated the handling of sequence separators in StyleConverter . java to improve readability and maintainability of the code
ggb - 271 fix error message in stringparser . parse ( string )
refactor conditional checks for column count in SemanticAnalyzer . java to improve readability and maintainability of the code
updated assertions in WANDScorer . java for consistency and clarity to improve code readability and maintainability
refactor Correspondence class to improve code structure to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java for improved clarity to enhance code readability and maintainability
updated the variable ` curPixVal ` from - 1 to 0xFF000000 in ` XRSolidSrcPict . java ` and added
refactor ` listSubTypes ` and ` listSupertypes ` methods to use ` Collection < Type > ` instead of ` ArrayList < Type >
changed the variable ` withinTolerance ` from ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache . java ` to improve clarity
updated testStability annotation to include flavors and flavors in TaplTestsLauncher3 . java to address issue b / 293191790
refactor package - info . java files for improved clarity to enhance code readability and maintainability
added a check to ensure logFileSuffix is not empty before proceeding to prevent potential NullPointerExceptions when logFileSuffix is empty
refactor PythonBuckConfig class to improve code readability to enhance maintainability and facilitate future updates
added unit tests for adding and clearing system shared library names in ShadowPackageManager and ShadowApplicationPackageManager to improve test coverage and ensure correct functionality of shared library
[ meiligao ] fix meiligao to be consistent with meiligao protocol
added a null check for the tile before returning it to avoid potential NullPointerException when tile is not initialized
updated the ` PrefFragment ` to use ` final ` instead of ` final ` and added a ` TrimCache ` class to improve cache management
updated import statements in multiple Java files to use the latest version to ensure compatibility with the latest library changes
updated exception handling in BasicAuthAccessControlFactory and BasicAuthBatchIntegrationTest to throw an NotAuthorizedException instead of returning false to improve error handling clarity and
added a new abstract method ` schedulePeriodically ` to ` Scheduler ` and updated related methods to use ` @ SuppressWarnings ` instead of t2
added a call to ` onItemClicked ( ) ` in ` FileDisplayActivity . java ` to handle item click events to improve user experience by
updated stream handling logic in StreamUtil . java to handle multiple streams more effectively to improve robustness by ensuring only one xsd files are processed
replaced ` create _ table _ with _ environment _ context ` with ` CreateTableRequest ` in ` SessionHiveMetaStoreClient ` and `
added a synchronized variable ` aborted ` and modified ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to ensure
refactor indentation checks in multiple parser classes to improve code readability and maintainability to enhance readability and maintainability of the code
added new NetworkWifiStatusReceiver and updated PostFragment classes to implement network status change events to enhance functionality for managing wifi status changes in the application
refactor conditional checks in FrameGenerator . java to improve code readability and maintainability
set the visibility of the collapse handle in WidgetsBottomSheet to VISIBLE to improve user interface by providing a visual indication of the collapse handle
added new files ` Issue475 . java ` and ` XSS . java ` and ` XSS . java ` for handling HTML and JS
added a check for the presence of units to scroll in StandardGraphIO . java to avoid unnecessary processing when the unit is zero
updated the condition to check for the presence of a single contract in the trxCap class to ensure that only one contract is processed when the contract
added ` add ` method to ` JsonArray ` , ` JsonObject ` , and ` put ` methods in ` JsonArray ` , ` JsonObject ` , and
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class in TestRaceCond to ensure consistent hash code
[ flink - 18186 ] [ table - planner - blink ] use version instead of iversion
added a condition to check if the transaction ' s platform fee is greater than or equal to the transaction ' s fee to ensure that the transaction is
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
refactor mediacodecrenderer to use adaptivereconfigurationbytes instead of a try - with - resources
changed access modifiers of ` AsynchronousAntn ` to ` Bulkhead ` across multiple classes to enhance encapsulation by restricting access to
added Retrofit import in Part . java and PartMap . java to enhance functionality by utilizing Retrofit functionality
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter processing logic to enhance code readability and maintainability by reducing redundancy
added support for additional taskbar types in AbstractFloatingView . java to enhance functionality by allowing additional taskbar configuration options
chore ( deps ) : add @ betaApi annotation to clustersclient . java and azureclustersclient . java
updated alpha calculation logic in ClipAnimationHelper , RemoteAnimationTargetSet , and RemoteAnimationTargetSet to handle recents activity types to improve animation
updated the method call from ` createRenderScript ( true ) ` to ` createRenderScript ( true ) ` in ` AllAppsView .
refactor PMD class to improve code readability to enhance maintainability and facilitate future updates
refactor ` PluginListCellRenderer ` and ` PluginManagerActivator ` to use ` PluginManagerActivator ` instead of ` sysBundleProp ` to improve
updated import statements and modified job name formatting in IntegrationTestSparkBulkLoad . java and IntegrationTestSparkBulkLoad . java to improve code
updated the LOW _ FALSE _ POSITIVE _ RATE constant from 0 to LOW _ FALSE _ POSITIVE _ RATE in KeyChain
refactored configuration handling in Overview . java for better readability and maintainability to improve code clarity and ensure proper selection of default configurations
change the return statement from ` findAttache ` to ` agentAttache ` in ` AgentManagerImpl . java ` to improve code readability
added null check for value before adding to the data value in DefaultRecordStore . java to avoid potential NullPointerExceptions when value is null
cloudstack - 10284 : improve error message in cloudstack discovery process
updated constant names for no _ NAME and NO _ VALUE in ParamAction . java to improve readability and maintainability of the code
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to use Object instead of Object to improve
modified the method ` getMethodLine ` to use a static method ` stripMethodParams ` to improve code readability and maintainability by encaps
updated version name and code from " GreatVoyage - v4 . 2 . 1 - 62 - gaff237ef7 " to
refactor OutputFilter to use a set for allowed commands to improve performance and maintainability of the code
refactor symbolmblayer to use labelcacheitem . labelcacheitem . labelcacheitem . labelcacheitem . labelcacheitem . label
ggb - 271 fix popup panel not show when overlap feature be enable .
updated error messages from " Function : cannot return more than one value " to " Table : function - cannot return more than one value " to improve
refactor ` QuickstepTransitionManager ` to use a new ` StartingWindowListener ` class to improve code readability and maintainability by encap
added a doc comment inherited from MBeanServerConnection to improve code readability and maintainability
updated exception handling in CheckPackageAccess . java to include PackageAccess . java to improve clarity of security exception messages for better debugging
increase timeout from 30 seconds to 90 seconds in ThreadSafetyTest . java to allow more time for the executorService to terminate successfully
added null check for loggingEnabled in XRLog . java and created a new test class XRLogTest . java with a null check for
added a JsonIgnore annotation to the Schema class to ensure proper serialization and deserialization of fields
increased the timeout duration from 5000 to 10000 in TestNonTxIndexBuilder . java to allow more time for tests to complete successfully
refactor train methods in SimpleNaiveBayesClassifier to improve clarity and consistency to enhance code readability and maintainability by using more descriptive
added AuditLoggerModule to the CheckDatabaseHelper class and updated injector initialization in CheckDatabaseHelper . java to enhance audit functionality by integrating audit
refactor Prototype classes to improve code organization to enhance maintainability and readability of the code
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure proper handling of transactional table states
[ java ] add onblock method to recordingwriter . writefragment ( ) .
fix ( cue ) : use offset _ sample _ relative instead of 0
update dataPointsGroup to include " alias " in the ` groupByTypeAndTag ` method in ` KairosDatastoreTest ` and ` 
updated currency pairs in VaultOfSatoshiBaseService . java to include " USD " instead of " USD " to ensure accurate
hhh - 11717 - fix resource leak in test
updated import statements for KafkaSender and KafkaSender in ZipkinAutoConfiguration . java and ZipkinAutoConfigurationTests . java to ensure compatibility with the
added GwtBinaryIntegrationTest , GwtBinaryIntegrationTest , and A classes for testing gwt binary integration to ensure that the CI behaves correctly on heavily loaded
added loading cause label visibility and improved error handling in BrowserContentPane and SQLConsole to ensure loadingCauseLabel is only visible when the query dialog is
refactor EnhancedRandomImpl and related test cases in EnhancedRandomImpl and EnhancedRandomImplTest to improve code readability
added XML security property management to DTDConfiguration and NonValidatingConfiguration classes to improve code clarity and maintainability by centralizing security property management
added a new file ` InlineDefaultMethod . java ` that implements ` InterfaceWithDefaultMethod0 ` , ` InterfaceWithDefaultMethod1 ` , and `
updated SQL query string formatting in SqliteFieldPredicateView . java to improve readability and maintainability of the code
changed access modifier of getDMNProfiles method from private to protected to allow subclasses to access these methods from other packages
fixed - redissonscript . runall ( ) call on redissonslaveentry ( ) and redissonslaveentry ( ) in redissonscript
[ java ] add a static method for setwordfieldallocation ( ) and setwordfieldallocation ( ) .
updated debug log messages to use verbose logging instead of hardcoded values to improve log readability and maintainability by using a more descriptive
updated the proxy sending logic in FMLOutboundHandler to use retain and release payloads to ensure proper resource management and prevent potential memory leaks
added a constant for HTTP _ JETTY _ SERVER _ HANDLERS in ExecConstants . java and updated thread pool initialization in WebServer
refactor shortcut retrieval logic in LauncherModel . java to improve code readability and maintainability by reducing redundancy
camel - 15836 - camel - aws2 - default - http : fix typo in camel - http
removed the case of ` navigateUp ( ) ` in ` DetailFragment . java ` to streamline navigation logic for better user experience
added a condition to check if includesPlayServices is true before checking if it hasAndroidMarket ( ) is true to ensure that play services are only
updated cell handling logic in TableBlockParser . java and added a new test for pipes on outside whitespace to ensure proper handling of line endings in
added a ` bridgingHeader ` field and updated related methods in ` NewNativeTargetProjectMutator ` , ` ProjectGenerator ` , and `
replaced ` declared ` with ` listMethods ` in ` PotentiallyDeadCode . java ` to improve code clarity and maintainability by centralizing
added a new option ` findDiamonds ` in ` Attr . java ` and created new classes ` DiamondRedundantArgs . java
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` onStartSendRequest ( ) ` in multiple classes to
removed unused imports and logging statements in SolrCacheHolder . java to clean up the code and improve readability
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error handling for authentication failures
updated float comparison logic in Test6796786 . java to ensure correct handling of negative values in float comparisons
added a local file for the " logback . dev . xml " file in JoobyMojo . java and Main . java to ensure the
added a new file JaasEventCheck . java to handle Jaas authentication success and failure events to ensure proper event handling for authentication failures
replaced ` currentPage ` with ` viewsToAnimate ` in ` QuickstepTransitionManager . java ` to improve code readability and maintainability by using
updated the comparison logic for stringDistance in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure
updated import statements in ShadowSystemServiceRegistry . java to use Map instead of HashMap to improve code readability and maintainability
removed multiple SINGLE _ LEADER _ INFORMATION _ CHANGE _ EVENT _ NAME from DefaultLeaderElectionService . java to streamline
changed the visibility of the setAuthentication method from public to public to allow access to the method from other classes
add a timeout property to agent . script . timeout ( ) in agentmanager . wait ( ) .
updated JDBC _ TABLE and JDBC _ SCHEMA parameters from " . " to " . " in AbstractJDBCConnectorProvider . java to ensure
updated SQL update query syntax in multiple classes to improve code readability and maintain consistency in naming conventions
replaced ` schemaTypeCache ` with ` Collections . computeIfAbsent ` in ` SpecificData . java ` to improve performance by reducing contention
refactor headers handling in StaticServerHttpHeadersWriter and add a test for case - sensitive headers to improve header management and ensure correct handling of case
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable tests that rely on files available from CMU
added a method to mkdirs the storage directory in TestCollector . java to ensure that the storage directory is created for testing purposes
added chunked streaming mode setting in StarTreeJobUtils . java to enhance performance by optimizing streaming operations
add basicsyntaxchecker , multipletypesyntaxchecker , and singletypesyntaxchecker for jsonschema
hbase - 14283 addendum : move com . google . protobuf . ByteString to org . apache . thirdparty . com . google .
added a new test class ` Node ` with recursive structure to ensure that ` beansWithRecursiveStructure ` behaves as expected to prevent stack overflow
added IOException to getRemoteName method in AccountingTransceiver . java to ensure proper handling of IOException during method execution
updated exception handling in UserAccountManagerImpl , ClientFactoryImpl , ClientFactoryImpl , and ConnectivityServiceImpl to use HttpClient for client creation to
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser . java to enhance security configuration flexibility by allowing the use of the AspectJ
updated import statements and added hostname verification logic in Connection . java to enhance security by allowing dynamic configuration of hostname verification based on system properties
updated the ` remove ` method in ` OHLCSeries ` and added a new ` remove ` method in ` OHLCSeries ` to
updated method calls from ` invokeUrgent ( ) ` to ` invokeUrgent ( ) . invokeUrgent ( ) ` in ` ClientSchema
refactor joint removal logic in World . java to streamline the process of destroying joints to improve code clarity and maintainability by reducing redundancy
fix nullpointerexception in searchfilter . getphonephonenumbersmatch ( )
[ hotfix ] [ test ] move sourcereadertestbase to sourcereadertestbase
removed unnecessary null checks in DocumentsStorageProvider . java to streamline code and improve readability
added new ` HookDefinition ` , ` JavaHookDefinition ` , and ` JavaHookDefinition ` classes to implement the ` HookDefinition ` interface ,
refactor flushifdeadlockrisk method to use a new method to improve code readability and maintainability by encapsulating buffer handling logic
updated the ` setExoOptions ` method to include ` isLiveTv ` parameter and modified the ` setExoOptions ` method to
added a method to remove the user from the getIdentifierCollection in DMRDecoderState . java to ensure that the user identifier is properly removed from the
added a new static Color class and modified the toString method in RailButtonShapes . java and RailButtonShapes . java to improve color management
updated null handling logic in CountAggregationFunction . java and added a new test for null handling in NullHandlingIntegrationTest . java to ensure correct handling of
added a deep variable ` deep ` to the ` InternalTransaction ` class to ensure proper initialization of the transaction ' s deep state
added a escape method to the ` name = \ ' ' string in ` StreamInitiation . java ` to ensure proper handling of XML characters in
updated file handling to use config . get ( " work . dir " , " work . dir " , " work . dir " ) instead of
added a conditional check for the " deprecated " attribute in RuleSetFactory . java and updated the test cases in RuleSetFactoryTest . java to
fix amd64directcallop to use codebuffer . position ( ) instead of label
added static final constants for minStamp and maxStamp in TimeRange . java and updated related tests in TestTimeRangeTracker . java to ensure imm
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future updates
refactor ` emitMetricsJson ` method to use a dedicated method ` emitMetricsJson ` to improve code readability and maintainability by encap
refactor MIME type checks in DetailFragment and GalleryActivity to improve readability and maintainability of the code
fix tank tank . drain ( ) and tank . drain ( ) in world . isremote ( )
refactor CsharpLibrary to use RuleAnalysisLegacyBuildRuleView instead of RuleAnalysisLegacyBuildRuleView to improve code clarity and maintainability by
[ iqpep ] do n ' t create pep service when send to the sender .
added a null check for the runtime before accessing the intrinsicGraph variable to prevent potential NullPointerExceptions when runtime is null
[ hotfix ] fix checkstyle violation in metrictrackingwindmillserver
pdfbox - 4071 : make bf search cos parser more robust
added constructors for LwjglApplet and LwjglNativesLoader in LwjglApplet . java to enhance
refactor environment variable handling in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve code readability and maintainability by reducing duplication
refactor LDAP authentication handling to handle password and account policy configurations to improve code readability and maintainability by reducing duplication
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a ` resolveFromAttribute ` variable and a ` resolveFromAttribute ` variable in ` AbstractLdapAuthenticationProperties ` and ` LdapUtils ` to
refactor Readable class implementation to improve code readability and maintainability
pdfbox - 551 : fix bug # 551 - page - break - avoid - stuck test
updated menu item icon from ` share _ item ` to ` ic _ menu _ share ` in ` CaptureActivity . java ` to ensure the correct
updated JVM specification version handling in Constants . java to support newer Java versions to ensure compatibility with newer Java versions in the application
updated network timeout checks in PoolUtilities and PoolUtilities to include NoSuchMethodError for better error handling to improve robustness by preventing potential null pointer exceptions
refactor GenericContainer class to improve code organization to enhance maintainability and readability of the code
replaced HashSet with List for filteredSet and filteredList in Enclosed . java to improve performance and maintainability of the code
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasView classes to ensure proper method overriding and improve code clarity
updated parameter names from ` png ` to ` png ` and ` gif ` in ` ChartProvider . java ` to improve code readability and
add support for file extension in opendatabaseaction ( fixes # 119 )
replaced ` F . at ( 0 , 0 ) . Block ( 0 , 0 ) . Block ( 0 , 0 ) . Block ( 0 )
added support for AFTER and BEFORE queries in JpaQueryCreator and UserRepository classes to enhance query functionality and ensure correct retrieval of user creation
refactor Test15FloatJNIArgs class for improved clarity to enhance code readability and maintainability
updated import statements for plot properties in plugin . java and updated related imports in plugin . java to improve code readability and maintainability by using
updated the substring method from ` encrypted ` to ` encrypted ` in ` MockProcessContext ` and added a new test for encryption and decryption functionality
[ java ] ensure that reentrant call be not permitted during callbacks .
added a null check for the inp _ dep before merging dependencies to avoid potential NullPointerExceptions during dependency merging
increased the timeout duration of tests in SslBytesServerTest . java to allow more time for tests to complete
refactor Peer class to improve code readability to enhance maintainability and facilitate future updates
added ` toImmutable ( ) ` and ` toHistoricalIndexSegment ( ) ` methods to ` RealtimeIndexingCoordinator ` , ` Stream
added a null check for exportedData in FailureWatcher . java to avoid potential NullPointerException when accessing exportedData
refactor popup positioning logic in RecyclerViewFastScroller to use a new method ` getScrollThumbRadius ( ) ` to improve code readability
added a new method ` isToolWindowInstantiated ` to ` BuckEventsConsumer ` and modified import statements in ` BuckEventsConsumer ` to
added a conditional check for Windows on the preventSleep checkbox in GeneralTab . java to ensure that the checkbox is only added on non - Windows platforms
replaced ` javax . servlet . ServletException ` with ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java ` to ensure
added support for vertical bar layouts in QuickstepAppTransitionManagerImpl . java to improve layout handling for both horizontal and vertical bar layouts
added a new ` setFullScreenExclusiveModeState ` method to ` XWindow ` and updated related logic in ` XWindowPeer ` and ` X
fix string . getplayeddurationstr ( ) to be consistent with string . length ( )
added credentials and credentials handling in DagUtils to enhance DagUtils to support credentials and credentials for MapWork in the DagUtils class
camel - 14284 : use map . entrySet ( ) instead of map . keySet ( ) . get ( ) instead of keySet ( )
remove whitespace from thread name assignment in SessionState . java to improve code readability and maintain consistency in naming conventions
updated error message from " Not yet " to " Not yet " in GpsMainActivity . java to improve clarity of error messages for users
refactor Job class to improve code organization to enhance maintainability and readability of the code
added a new abstract abstract class ` Unused ` and a ` UnusedType ` method in ` Main . java ` to test the functionality of
updated HBase master host names from " hbase _ master _ host " to " hbase _ master _ hosts " in multiple files to ensure consistency in
deleted the EventReaderDeserializer and EventWriterSerializer interface to the interface is no longer needed for the project ' s functionality
refactor ` performJoin ` and ` joinUDF ` methods to accept an ` List < GenericRecord > ` instead of ` GenericRecord `
updated the maximum delegate lock period checks in ProposalUtil and CommonParameter classes to improve flexibility in managing delegate lock periods
getnetworkrate ( ) return null if no networkrate be available
camel - 15836 - camel - cmc : remove unnecessary initialization of cmcexchange
refactor config handling in GossipLocalNode and constant classes to improve clarity and maintainability of configuration management
fix clienttpcconfig to be able to disable tpc by default
updated the versioning of the swagger - ui to the latest version to ensure compatibility with the latest features and bug fixes in the API
refactor divide logic in MutableBigInteger and add a new ModInvTime class for modular inverse operations to improve code readability and maintainability by
replaced StringBuilder with String for key initialization in NamedObjectList . java to improve readability and maintainability of the code
updated cleanupEmptyDir method calls to use " _ " instead of " _ " for consistency across multiple classes to improve code readability and maintainability
refactor AsyncCache and Cache classes to improve code organization and maintainability
added RCFileInputFormat import and registered RCFileInputFormat in SerializationUtilities . java to enable proper handling of RCFile files in Hive
added ` TypeOf ` and ` CategoryOf ` methods to ` TypeMapperComponent ` and ` TypeMapper ` in ` TypeMapperComponent ` to
added error handling for invalid host header in Request . java and updated test cases in RequestTest . java and RequestTest . java to improve robustness
updated the ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ClassParameter ` instead of ` TimeZoneFinder ` to improve test
updated the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to improve the handling of outgoing values and
replaced ` segment ` with ` cfsDir ` in ` SegmentCoreReaders ` and ` SegmentReader ` to improve encapsulation and
added ` hasMainThreadProfile ` method to ` AggregateDao ` , ` AggregateRepository ` , and ` AggregateRepository ` classes , and ` Aggregate
added error handling for non - required annotations in a Buck rule to ensure that annotation definitions are not allowed in a non - required source ABI
updated constant names from " greekLowerCase " to " greekLowercase " in various filter factory classes to ensure consistency in naming convention
refactor HSSFSheet and Sheet classes to improve code organization and maintainability
[ webui ] use DiscoverySearchRequestProcessor instead of LuceneSearchRequestProcessor to ensure compatibility with the latest DSpace version of the application
added support for the " America / Dawson " , " America / WhiteHorse " , and " Canada / Yukon " in the
changed the initialization of SurfaceSyncGroup from ` SurfaceSyncGroup ( ) ` to ` SurfaceSyncGroup ( " TaskBarController "
replaced ` BsonObjectId ` with ` GridFSFile ` in ` GridFSTemplate ` , ` GridFSTemplateIntegrationTests ` , and `
updated ` query _ shouldReturnColumnIndexes ` and ` query _ shouldReturnColumnIndices ` methods in ` ShadowDownloadManagerTest ` and ` ShadowDownloadManager
refactor text insertion logic in TextField . java to improve code readability and maintainability
added a check to return early if the target object is the same as the target object to avoid unnecessary processing when the target object is equal
refactor the ` afterSetStatements ` method in ` Lower ` , ` BlockLexicalContext ` , and ` BlockLexicalContext ` classes to improve
added hashCode ( ) method to IntervalXYDelegate and XYSeriesCollection to ensure consistent hash code generation for XYSeriesCollection instances
fix clientqueuedisruptiontest to not fail on slow ci server
updated log group describe methods in CloudWatchAppender and added new attribute repository tests in RegisteredServiceScriptedAttributeFilter to improve code readability and
updated the method name from " serializeSpecialDoubleValues ( ) method to " serializeSpecialFloatingPointValues ( ) method to ensure consistency in serialization
added a new method ` waitToProduceOneBlock ` to ` HttpMethed ` and ` WalletTestZenToken007 `
updated language tag handling in Locale . java and modified language tag handling in LanguageTag . java and LanguageTag . java to improve code robustness and
add config . ssh . ssh . ssh . ssh . ssh . ssh . ssh . ssh . ssh . ssh . ssh . ssh . to .
renamed the ` ScheduledAction ` class to ` ScheduledAction ` in ` SchedulerWhen ` and ` SchedulerWhen ` classes to enhance encapsulation
replaced the import of ` PagerSlidingTabStrip ` with ` PagerSlidingTabStrip ` in ` EmojiKeyboard . java ` to simplify
added a check for " - " in the filter condition in SimpleSearchQueryConverter . java to ensure that only non - empty strings are processed
updated column names from " natural order " to " Natural column order " in BrowserContentPane , DataBrowser , and DataBrowser classes to improve clarity
replaced Arrays . copyOf with Arrays . copyOf ( in , 6 ) in Utils . java to optimize memory usage and improve performance
updated the write method in HtmlSessionInformationsReport to use htmlEncodeButNotSpace instead of htmlEncodeButNotSpace to ensure proper
updated item name check from " smarthome / items " to " smarthome / items " in ItemStateTriggerHandler . java to ensure consistency with
refactor synchronized block in FastHttpDateFormat . java to improve code readability and maintainability
refactor file move logic to use a concurrent executor for better resource management to improve performance and reduce resource usage during file operations
added a new ` trigger ` method and a ` trigger ` method in ` WrapTimer . java ` to handle triggers with a specified period to
added support for LOCAL _ DATE and LOCAL _ TIME types in TypeStringUtils to ensure proper handling of LOCAL _ DATE and LOCAL _ TIME types in the
added a verbose flag to the error log message in AbstractStatusReporter . java to enable logging of error messages based on user - defined options
added menu visibility checks to the ClickStartHandler and ItemControls classes to ensure proper handling of menu visibility based on app state
guacamole - 102 : ensure VPN connection can only be esitablished between account ' s VPN gateway
updated error handling logic in CursorReadingTask . java and added a new test for error handling in CursorReadingTaskUnitTests . java to improve error
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 12448 : do n
fix ( CuratorZookeeperClient ) : ensure CuratorWatcherImpl . shutdown ( ) do n ' t close the CuratorWatcherImpl .
refactor AnomalyDetectionResource and AnomalyDetectionResource classes to improve code organization and maintainability
refactor ` deleteItem ` method to use ` id ` instead of ` getSelectedItemId ` to improve code readability and maintainability
refactor Java6Assertions and Conditions classes to improve code organization and maintainability
updated method signatures in Bitmex . java and BitmexTradeServiceRaw . java to use List instead of Collection to improve type safety and
replaced the ` enterDefault ` method with ` enterIdentNode ` in ` FindScopeDepths . java ` and added a ` enterIdentNode
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to utilize ` J9ConstantHelper .
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for testing concurrent invocation invocations to ensure that concurrent invocations are
added roster removal method to the session and transport session to improve user experience by notifying users when the roster is unavailable
updated method names from ` getTableDesc ` to ` getOverlayProperties ( ) ` in ` MapOperator ` , ` PartitionDesc ` , and `
updated method signature handling in CodeGenerator . java and FunctionObjectCreator . java to improve code readability and maintainability
added null checks for extTypeCustomDeserializers in MessagePackFactory and updated related tests in MessagePackFactoryTest to improve robustness by preventing potential
set mockserver . logLevel to " WARN " in Main . java to ensure the mock server log level is set to WARN
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the code and improve readability
removed unused imports and modified the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code and improve
replaced ` scoreMap ` with ` termScoreMap ` in ` TestGrouping . java ` to improve clarity and consistency in variable naming
updated condition checks in U64 . java and added a new eq method in U64 . java to improve code readability and maintainability
bugfix : add font size to the main view to improve user experience by providing more visual feedback
added support for dark text in WallpaperColorInfo . java to ensure that dark text notifications are only notified when the theme support is enabled
[ hotfix ] [ checkpoint ] fix flaky checkpointrequestdecider . oninvalidpending ( ) call
updated the MAX _ POOL _ SIZE from 1000 to 8 in Parallel . java to increase the maximum pool size for better resource management
updated the filtering logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use anyMatch instead of filter to improve code readability and maintainability by
added tests for not - Windows ServerCore container in OpenCVImageFactoryTest . java to ensure compatibility with Windows ServerCore containers
[ amq - 4071 ] use getdurabletopicprefetch ( ) and getqueuebrowserprefetch ( ) in activemqconnectionfactory
refactor getreturnvalue method to use Throwable instead of null to improve error handling by providing more informative exception messages
added @ Repeatable annotation for Issue . Issues in Issue . java to enable the handling of Issues in the application
updated userProps from " hcat - user " to " webhcat _ user " in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest
added a null check for socksProxyHost in the socket connect method to ensure that the socket creates a resolved socket when socksProxyHost is not set
refactor SlotReport and SlotStatus classes to improve code readability and maintainability
removed unused import of ClassUtils from ReflectionUtils . java to clean up the code and improve readability
replaced ` HashSet < String > ` with ` LinkedHashSet < String > ` in ` SslContextFactory . java ` and ` SslContextFactory
added a static variable ` systemResource ` and a static variable ` systemResource ` in ` Resources . java ` to ensure that the system resource is
[ hotfix ] [ stream ] fix buffer allocation in streamingaeaddecryptingchannel
added a new test method ` circuitBreakerInvalidFallbackThrowsException ` to ` ServerMvcIntegrationTests . java ` to ensure that the
updated SSL connection handling in AppPage . java to use SSLContexts to enhance security by allowing SSL configuration for hostname verification
removed the resetBytesReadCounter ( ) method from PerformanceTest . java to simplify the code and improve readability
added a ` preferAES ` variable and its getter / setter methods in ` ProtectionPolicy . java ` and ` StandardProtectionPolicy . java ` to
camel - 14263 : camel - opentelemetrytestsupport : use log level instead of console output
added a new test method ` testLoadBalancerInstanceOperations ` for instance management in ` ElbIntegrationTest . java ` to ensure correct behavior of instance registration
updated the method name from ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity and consistency in
added error handling for file creation in DiacriticTest . java to improve robustness by catching InvalidPathException during file creation
hhh - 16464 - fix issue with oracle 11 when use ojdbc6
updated file handling in TextureUnpacker . java and improved exception handling in TextureUnpacker . java to improve robustness by ensuring atlas
replaced ` @ Transactional ` with ` lock ` in ` AmbariManagementControllerImpl . java ` to improve thread safety and ensure thread safety during
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a new test method ` testResultSetShouldNotCloseStatement ` to ` HiveQueryResultSet ` and modified ` HiveQueryResultSet ` to ensure that
refactor InputStreamBodyGenerator and ChunkingTest classes to improve readability and maintainability to enhance code readability and maintainability by encaps
added pre - deleted database removal logic in ClusterSchemaManager . java to ensure proper handling of database deletions in the schema management process
removed unnecessary writeAndFlush calls in Http1xUpgradeToH2CHandler . java to streamline resource management by eliminating unnecessary writeAndFlush
updated the condition for deleting items in EnhancedBrowseFragment and added a new delete button in FullDetailsFragment to improve item deletion accuracy and provide
added a new interface ` RuleBank ` and updated ` RuleFinder ` and ` RuleFinder ` to implement a new ` RuleBank ` interface to
added error handling for the init method in JcaTlsCrypto . java to improve robustness by catching potential exceptions during initialization
added a new file TestMonomorphicObjectCall . java and Object . java for testing monomorphic object behavior to facilitate testing of monomorph
updated method calls from ` toFront ( ) ` to ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop . java
hbase - 16286 addendum : add support for timerange in test ( sergey shelukhin , review by brand
[ hotfix ] [ runtime ] rename localstaterootdirectories to localRecoveryStateDirectories in taskmanagerservices
updated the ` AlterTimeSeriesStatement ` initialization and added a ` isAlterView ` parameter in ` ASTVisitor ` and ` AlterTimeSeriesStatement `
updated regex pattern matching in ` Condition . java ` and added a new test class ` MatchTextConditionTest . java ` to ensure correct matching of
added error handling for retrieving routing table builder in HelixBrokerStarter . java to improve robustness by handling potential exceptions during retrieval
camel - 14284 : camel - aws - http : use putIfAbsent instead of put ( ) to avoid concurrentmodificationexception
use char [ ] instead of string [ ] for password
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 12626
removed the ` toSortedListWithCounts ` method from ` Counters ` and ` equals ` methods in ` Counters . java ` to
updated the ` initialize ` method to use ` original ` instead of ` status ` in ` BasicTumbleStepper . java ` to improve clarity
replace system . currentTimeMillis ( ) with system . currentTimeMillis ( )
updated variable handling in PrettyPrinter to use a variable variable instead of a tree to improve code readability and maintainability by using a more descript
added null checks for indexToNode in LRUDictionary . java to avoid potential NullPointerExceptions when accessing the indexToNode array
refactor DatagramPacket initialization and filtering logic in DatagramSocket . java and DatagramChannelImpl . java to improve code readability and maintainability by encap
updated JUnit imports and annotations in TestQueryDNS . java to align with the latest JUnit 5 features and improvements in JUnit 5
added a new class NutchServerInfo for managing job and running jobs to provide a structured way to retrieve and manage job and running jobs based on
replaced ` OffsetAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter . java ` to simplify attribute handling and improve code clarity
added timestamp handling in CqlInserter , ThriftInserter , and SettingsColumn classes to ensure accurate timestamp representation based on user - defined settings
updated strength checks in DSAParameterGenerator . java for clarity and consistency to improve code readability and maintainability
updated ` NumberUtils ` and ` Numbers . doubleToLongBits ` methods in ` NumberUtils . java ` and ` Numbers . java ` to
updated mask condition in InetAddressSet . java and added test cases in InetAddressSetTest . java to ensure correct masking behavior in InetAddressSetTest .
added SQL constraint violation checks in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of database exceptions
[ hotfix ] [ runtime ] remove unused parameter in rewriterequestforstatictopic
added a new method ` addTab ` to ` Tabs ` and modified ` createTab ` methods in ` Tabs . java ` to enhance
updated array sizes from size ( ) to array size ( ) in multiple files to ensure consistent array size usage across multiple files
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironmentbuilder
refactor conditional checks in MavenVisitor . java to improve readability and maintainability to enhance code readability and maintainability
refactor ZookeeperDataChangedListenerTest to use " MOCK _ NAME _ UPDATE " instead of " MOCK _ APP _ NAME2 "
added a new file FormatCheckingTest . java to test the handling of class format errors to ensure that the Java process correctly handles invalid class names and
updated line number handling in CodeGenerator . java to ensure correct lineNumber assignment for method execution
added a try - catch block for exception handling in ConfigHelper . java to improve robustness by preventing application crashes due to potential exceptions
added new methods to create RadioButton with icons , icons , and commands in RadioButton . java to enhance the functionality of the RadioButton class with
updated CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 in LRUCache and MetadataQuerierByFileImpl to improve
changed the visibility of the DEFAULT _ CAPACITY constant from private to public in SimpleChannel , ChannelParser , and MessageBusParser to allow external access
fix nullpointerexception when try to quote the symbolic name .
updated logging statements in ModeContribution . java and added mode class loading in ModeContribution . java and ModeContribution . java to improve logging clarity and ensure
[ hotfix ] [ runtime ] add log for shutdown hook for iomanager and yarnsessionfifofoitcase
rename projectRoot to androidManifestPath in RobolectricTestRunner and RobolectricTestRunner constructors to improve clarity and consistency in handling Android
added a null check for notPropagatedHeaders in AbstractMessageProducingHandler and modified conditional logic in AbstractReplyProducingHandler to ensure
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
implement HasTests interface in RustBinaryDescription , RustLibraryDescription , and RustLibraryDescription classes to enhance functionality by allowing tests to be
updated placeholder drawable names in FileMessageVH . java for clarity to improve code readability and maintain consistency in naming conventions
refactor OnExitTest class for improved clarity to enhance code readability and maintainability
added a method ` onUserPreferenceChanged ( ) ` to ` TaskbarManager ` to ensure the taskbar is recreated when the user preference
refactor HeapDump to use a new method ` isIbmVm ` and ` isIbmVm ` and ` dumpHeap
camel - 14297 camel - jbatis : ensure session . commit ( ) and session . close ( ) do n ' t close
updated driver initialization from FIREFOX to IE in SingleTestSuite . java and added wdQuit method in ExportedWebDriverFunctions .
replaced JDK 5 for - loop with JDK 5 for - loop and updated SAFE _ COLLECTION _ METHODS to ensure compatibility
added a new state implementation in JmxApplicationProvider to set the application ' s state to unavailability to ensure that the application is properly
updated assertions in ByteBufferAs - X - Buffer , Heap - X - Buffer , Heap - X - Buffer , and StringCharBuffer classes
updated the method call from ` toUri ( ) . toUri ( ) ` to ` Path . SEPARATOR ` in ` ConditionalResolverMergeFiles
added setEmpty methods to ArrayData and DeletedArrayFilter , and DeletedRangeArrayFilter , and DeletedRangeArrayFilter , and Object
changed enum visibility from package - private to public in VirtualAuthenticatorOptions . java to allow access to the Protocol enum from other packages
updated document handling in TestMultiPhraseQuery . java to use document6 instead of document4 to improve code readability and maintainability by using a
updated the method to assign ticket reservations to use PaymentProxy . OFFLINE _ PAYMENT in ReservationController and TicketHelper . java to
added a ` _ onTimeoutThread ` variable and improved exception handling in ` HttpChannelState . java ` to ensure thread safety and prevent illegal state
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest classes to include debug logging to improve
refactor package - info . java files for improved clarity to enhance code readability and maintainability
updated the logic for retrieving rows based on consistency for LOCAL _ SERIAL and LOCAL _ QUORUM to ensure compatibility with local ConsistencyLevel
added a check for " Home " modelName in HeosDiscoveryParticipant . java and updated the property handling in HeosPlayerHandler . java to ensure
added a new ` Wait ` class and its associated methods in ` PlainSelect ` and ` SelectDeParser ` , and created a new ` Select
refactor Neo4j to utilize Lookup and AttributeController for attribute management to improve code readability and maintainability by centralizing attribute management
added null checks for serverName in SessionManager . java to ensure robustness by preventing potential NullPointerExceptions
nifi - 11446 : deprecate rocksdbmetronome package , deprecate it
updated the isGrantable variable from " IS _ GRANTABLE " to " IS _ GRANTABLE " in TableExRetriever . java to
added logging statements for the " About " command in JavascriptContext . java to improve debugging and ensure correct handling of command execution
added a check for Mac OS in CxfMtomConsumerTest . java to enhance compatibility checks for Mac OS environments
added a check for ` isNewCf ` before modifying ` columnDesc ` in ` LoadTestTool . java ` to ensure correct column
added a Disposable interface to the Texture class to ensure proper resource management and prevent memory leaks
added null checks for tldBundleLocation and updated MANAGED _ JSP _ REGISTRATION _ HELPERS for WebApp
add a method to check if goquorum privacy be enabled
replaced IOException with Throwable for error handling in HttpInput . java to improve error handling by using a more specific exception type
added a condition to check for " JP " in Thailand in LocaleTest . java to ensure that Thailand skips due to the change in era
updated API calls to use ` HostResponseWrapper ` instead of ` Wrapper ` in multiple service classes to ensure consistency in response handling across the service
updated equality checks in FilteredQuery . java to use getBoost ( ) instead of getBoost ( ) to ensure accurate comparison of query objects
updated the parameter name from ` int ` to ` int ` in the ` FileMenuFilter ` constructor to improve code readability and maintain consistency in
ggb - 271 add support for a new VerticalPanel in the textediteditadvancedpanel to enhance user experience by allowing
added a new file ` TestCMSClassUnloadingDisabledHWM . java ` that tests CMS class unloading functionality to verify the behavior of
added a check for empty entities before creating the event in SpongeForgeEventFactory . java to avoid potential NullPointerExceptions when accessing
updated ` ColumnMapKeyMappingPreparedStatementSetter ` and ` MultipleColumnJdbcKeyCollector ` classes to use ` ItemPreparedStatementSetter ` instead of
replace range with IdentityQueryFilter in CompactionsTest . java to simplify import statements and improve code readability
added error handling for invalid ' type ' attribute in MiniAapt . java and added a new test for invalid resource types to ensure proper resource
added SPELJudge operator to LIKE , SpELJudge , and created a new SpELJudge class in OperatorJudge
[ hotfix ] [ runtime ] fix checkstyle violation in localexecutionplanner
replaced ` SwingUtilities . isEventDispatchThread ( ) ` with ` EventQueue . getDispatch ( ) ` in ` Profiler . java ` to improve
refactor CertBlacklist , ConscryptHostnameVerifier , and Java8FileDescriptorSocket classes to improve code readability and maintainability
updated attribute resolution logic in AttributeResolution9 , ShadowArscAssetManager9 , and ShadowArscAssetManager9 to ensure correct resource name resolution
updated the version of the ` fullOptions ` list from " 1.5 " to " 6 " in ` SetupHid . java ` to
changed access modifier of ` extractMetadataColumns ` method from private to public and added metadata handling in ` PushProjectIntoTableSourceScanRule ` to
added sorting functionality to the list of localized names in AboutActivity to improve code readability and maintainability by using a sorted list for localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.16 . 0 (
added a conditional check for live streaming mode in HomeFragment . java to ensure that refresh behavior only occurs when live streaming is enabled
added exception details to the MappingException message in AuditConfiguration . java to improve error handling by providing more context about the exception
[ hotfix ] [ test ] fix test failure in fileconsumerpollstrategystoponrollbacktest
changed generic type parameters from ` AbstractType < ? > ` to ` AbstractType < ? > ` in multiple Java files to enhance type safety and
added transport support in GitClientApplication and updated RepositoryUrlPanel to include transport support to enhance flexibility in handling transports in repository URLs
added descriptions for " trackpad gesture " and " AccessibilityInputConsumer " and " AccessibilityInputConsumer " in multiple input consumer classes to
added null check for mavenMetadata and updated version comparison logic in ChangeParentPom . java to improve robustness by preventing potential NullPointerExceptions
added a null check for the " Disabled " parameter in TestLargePageUseForHeap . java to ensure proper handling of large page support in
cloudstack - 118to22 : do n ' t run event migration when cloud usage db do n ' t exist
camel - 14284 : camel - jbang - fix test failure on window
added a new file ` TestObjectStreamClass . java ` and created a new test class ` TestObjectStreamClass . java ` with a test class for
added null checks for myself ' s data center info in ZoneAwareDiscoveryFilter . java to improve code readability and maintainability
change log level from error to warn in OpenTracingTracer . java to improve logging granularity by using warn instead of error
added a toString ( ) method to the Generator class to provide a clearer string representation of the generator ' s registered state
refactor doquote handling in URI . java and add test cases in Test . java to improve readability and maintainability of the code
added a null and empty resource check in ClusterControllerImpl and added a test for resource not found in ClusterControllerImplTest to ensure that the resource
refactor response handling and error logging in AccepttoApiUtils . java to improve code readability and maintainability
updated vertex buffer initialization logic in VertexBufferObject . java to ensure compatibility with Android versions below 5
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the code
added ` forceProjection ` parameter to ` HashJoinInfo ` and updated related methods to include ` forceProjection ` parameter to ensure proper handling of projection
added a method to retrieve the string distance in SpellChecker . java to provide access to the string distance from the class
added flags _ ONE _ SHOT , FLAG _ IMMUTABLE , and FLAG _ IMMUTABLE in PendingIntent . java to enhance security by
refactor read column ID handling in HiveFileFormatUtils and HiveInputFormat classes to improve code readability and maintainability by encapsulating the
updated method names from ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java
added ` DisplayTemporaryToast ` and ` DisplayTemporaryToast ` methods to the ` SavedExperiments ` class to enhance user experience by
added null checks for serviceInfo and version in ServiceModule and corresponding unit tests in ServiceModuleTest to ensure proper handling of service versions and validate the
added a new test class ` RawSerializationTest ` to validate JSON serialization functionality to ensure correct handling of primitive and primitive types in Gson
[ java ] rename ` server ` to ` sslcertgenerator ` and add a new ` SslCertificateGenerator ` interface to improve clarity and consistency
updated the loop iteration in ExpansionViewHelper to handle multiple replies instead of a single reply to improve user interface responsiveness and ensure proper padding
increased the timeout duration from 3 to 60 in the ExpiringUrlCacheTests to allow more time for resource access exceptions to be thrown
added a new test method ` testNGramFilters . java ` to verify NGramFilterPayload functionality to ensure that the NGramFilter correctly handles
refactor AclImpl class to improve code readability to enhance maintainability and facilitate future updates
added a new test method ` differentArraysShouldBeRandomizedWithDifferentSize ` to ` EasyRandomTest ` for testing different array sizes
added exception handling to RebootAnswer , StopAnswer , and CitrixResourceBase classes and updated Connection initialization in CitrixResourceBase to
added a ThreadLocal for tryWriteAgain in SslConnection . java to ensure thread - safe execution of write operations
updated null checks in Actor . java and added ancestorsVisible method in ancestorsVisible ( ) to improve code readability and maintainability
added logging for rolling - update step failure in RollingUpdateOpFactory . java to improve debugging and traceability of rolling update steps
[ hotfix ] [ table - common ] fix checkstyle violation in sinkprovider
added exception handling for AuthenticationFailureUsernameNotFoundEvent in DaoAuthenticationProvider and introduced a new event class ` AuthenticationFailureUsernameNotFoundEvent ` to improve
refactor AtMostXVerificationTest class for improved clarity to enhance code readability and maintainability
updated variable names from " OldLuceneQParserPlugin . NAME " to " LuceneQParserPlugin . DEFAULT _ QTYPE " across multiple
added Locale . US for SimpleDateFormat in WeekDateTest . java to ensure consistent formatting across different locales
added a ` isInitialized ( ) ` method to ` ILanguageServer ` and created a new test class ` LocalsCompletionTest _ template `
updated test assertions in ClientAPITokenIntegrationTest . java to use true and shouldHaveIdToken instead of boolean to improve clarity and maintainability of the
added ` beginTransaction ` and ` setTransactionSuccessful ` methods to ` DatabaseAdapter ` , ` GncXmlHandler ` , and ` Gnc
replaced byte array copying with ByteArrayOutputStream for reading and writing bytes to improve performance and reduce memory overhead when reading data
refactor exception message formatting in MessagingTemplate . java to improve code readability and maintainability
added a method ` isAcceptable ( SourceFile ) ` to the ` AutoFormatVisitor ` class to ensure that the ` CompilationUnit ` is
added a maximum buffered document buffer size in TestIndexWriterMergePolicy . java to optimize memory usage during index writing operations
added ` wits . clear ( ) ` and ` witnesss . clear ( ) ` method in ` Manager ` , ` NodeDelegateImpl `
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by handling NoSuchElementException during iteration
flume : remove log4j and log4j dependency from flumenode
refactor BasicAuthIntegrationTest and DaemonStream to use a dedicated ExecutorService for reindexing to improve code readability and maintainability by centralizing
replace HashMap with LinkedHashMap for nodes in DependencyUtil . java to ensure consistent iteration order for graph nodes
added support for internal error mapper in the JerseySupport class to enhance error handling capabilities and improve test coverage for internal errors
updated header validation logic in Http2TestBase . java to improve code readability and maintainability by encapsulating header validation logic
refactor property handling in System . java for improved clarity and maintainability to enhance code readability and ensure compatibility with newer Java versions
changed method names from ` String ` to ` CharSequence ` in ` StringSubject ` , ` StringSubject ` , and ` StringTest ` classes to
added a new ` toBeInvestigated ` method to the ` CheckGraalIntrinsics ` class and event writer in ` CheckG
rename IntUtilsTest to PrimUtilsTest for clarity to improve clarity and consistency in naming conventions
updated DataSource initialization in PersistenceManagerProvider to use a compactor object instead of a hardcoded value to ensure compatibility with compactor configurations
refactor DeploymentOptions class for improved clarity to enhance maintainability and readability of the code
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable . ConstantState ` instead of ` Drawable . ConstantState ` to improve code
replaced InputStreamReader with StringReader in XmlParser and YamlParser classes to improve code readability and maintainability
added a new method ` rewriteCoalesceChildren ` to ` RexNodeConverter ` and updated related logic in ` SqlFunctionConverter ` to
camel - 14297 : camel - unmarshal : remove unnecessary test that fail when unmarshal fail
updated the classloader handling in the proxy factory factory factory to use the correct class loader to ensure proper context class loading and avoid potential memory leaks
refactor ` DefaultDateTypeAdapter ` to use ` final ` instead of ` DateFormat . getDateTimeInstance ( ) ` in ` DefaultDateType
refactor method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
updated URI handling in HttpClientRequestBase . java and added assertions in HttpClientRequestBaseTest . java and HttpClientRequestBaseTestBaseTest . java to improve code clarity
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to simplify the code and improve maintainability
updated log level from fatal to warn in FSHLog . java to improve logging clarity by using a more descriptive warning level
replaced the ` getValues ` method with ` NodeMapIterable ` and updated the ` forward ` method to implement ` NodeMapIterable ` to improve
updated import statements from ` RouteDefinitionLocator ` to ` RouteDefinitionLocator ` in ` DiscoveryClientRouteDefinitionLocator . java ` to align with the
added a condition to check if fields are empty before adding them to MongoRecordReader and refactored SQL query handling in RexToMongoTranslator
added a check for empty admin list in DefaultAdminProvider . java to ensure that the admin list is only added when no admin list is available
updated terms retrieval to use SolrIndexSearcher instead of MultiFields to improve robustness by preventing potential NullPointerExceptions when terms are null
updated the return statement to use ` ObjectHelper . getIdentityHashCode ( bean ) ` instead of ` bean . toString ( bean ) ` to improve
refactor the handling of primitive type in GroovyParserVisitor to improve code readability and maintainability
[ gr - 27186 ] remove uninterruptible code from FrameInfoQueryResult and JavaLangSubstitutions classes to improve code efficiency and maintainability
updated string formatting in SedaBlockWhenFullTest . java to improve readability and maintainability of the code
added a new package - info . java file to package - info . java to provide package - level documentation for test resources
updated the calculation of the buffer size in MessageUnpacker . java to ensure that the buffer size does not exceed the buffer size to prevent potential
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core . lang . Nullable `
added SQL query for COLUMN _ COMPONENT and COLUMN _ USER in IconDB . java to enhance query flexibility by allowing users to specify the user '
( chore ) camel - defaultmq : fix typo in defaultmqproducerimpl . getbackpressureforasyncsendsize ( )
added a boolean parameter ` isClassfileOnly ` and updated resource addition logic in ` ClasspathElement ` and ` ClasspathElementModule ` to
added a new method ` fixBaremetalForeignKeys ` in ` Upgrade410to420 . java ` to handle foreign key
removed the IJava2DRenderer interface from the Java2DRenderer class to streamline the codebase by eliminating unused interfaces
added onTearDown method to DefaultAudioSink to handle offload buffer emptying to ensure proper handling of offload buffers in the audio sink
refactor UpstreamCacheManager to utilize a thread - safe scheduling mechanism to improve performance and responsiveness in managing upstream task execution
refactor StreamType class to improve code clarity to enhance maintainability and readability of the code
updated assertion message in Recording . java to provide clearer context to improve debugging by providing more context about the expected output
updated import statements and added admin role validation in FilestorePage and RootPage classes to enhance security by ensuring only authorized users can access files
added JUnit @ Ignore annotation to CamelElasticsearchRestTest . java to temporarily disable tests that are not ready for execution
added a check for the declaring class in the accept method in ExpressionControlBusFactoryBean . java to ensure that the method correctly identifies the declaring class
updated button names from " market " to " buyWithFiat " in OfferBookChartView . java to ensure consistency in naming conventions for
camel - 14284 : camel - restlet should match the consumer context path if it ' s not allow .
added coinbase parameter to createnextblock ( ) and createnextblockwithcoinbase method
updated BTreeMapJava to implement Serializable and added a new method for serialCloneNoCatch in ConcurrentSkipListMapTest and JSR166Test to
added null check for getCause ( ) before logging errors in RuleEngineImpl . java to avoid potential NullPointerExceptions during error logging
refactor conditional checks in Main . java to improve readability to enhance code readability and maintainability
updated the method call from ` mFilesAll ` to ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter . java `
deleted the PlainVerifier . java file to remove the PlainVerifier . java file to streamline the codebase by eliminating unused components
added a condition to close the system windows when the action is triggered from a specific tab to ensure proper resource management and prevent potential memory leaks
updated DialogFragmentIT and OCFileListBottomSheetDialog to use BottomSheetBehavior instead of BottomSheetBehavior to improve dialog behavior and
updated charset parsing from UTF - 8 to UTF - 8 in RestAdapter . java and added deprecation warnings in MimeUtilTest . java to
added a call to ` super . deinitialize ( ) ` in ` TextField . java ` to ensure proper initialization of the TextField class
replaced ` ByteArrayInputStream ` with ` TestUtilities . serialised ` in ` LogFormatTest . java ` to simplify code and improve readability by
updated method signatures in LogicalGenerator , GroupByFillDataSet , and GroupByFillDataSet , and added a new test case in GroupByFillDataSet
added validation for ` len ` and ` len ` in ` JAXWSExceptionBase . java ` to improve error handling for negative array sizes
updated import statements in CtUnresolvedImportTest . java to use JUnit 5 ' s JUnit 5 API to ensure compatibility with the latest J
updated the join time from 10 seconds to 60 seconds in T6567415 . java to allow more time for the join operation to complete
[ hotfix ] [ test ] change slotsharingstrategyfactory from legacy to region
added ` title ` parameter to ` ShadowActivity ` , ` ShadowDialog ` , and ` ShadowToast ` classes in ` ShadowActivity ` ,
updated import statements for LogFactory and POILogger in POIFSFileSystem . java to use POILogger instead of LogFactory to improve logging consistency and
[ instar ] do n ' t log the last event when the instar be trigger .
fix mapdeletemessagetask . delete ( ) and add a test for delete ( ) method .
updated enum values in Option . java and added a switch statement in Response . java to improve code readability and maintainability
refactor findJavacLocation method to use JavaFileManager . Location instead of JavaFileManager . Location to improve accuracy in finding Javac files
[ stablechannel ] add support for project name in create additionalsettings
added a new test class ` DeprecatedStubbingTest ` to verify the behavior of ` objectReturningMethod ` and ` objectReturningMethod `
updated import statements in ITBraveServletFilter . java to use javax . servlet . DispatcherType instead of org . eclipse . jetty . server
added NX and NX support to the GrammaticalRelations and related tests in EnglishGrammaticalStructureTest to ensure compatibility with
[ bouncycastle ] allow rsa key exchange to be enable by default
replaced ` output _ reader ` with ` reader . close ( ) ` in ` PerforceHistoryParser ` and ` PerforceRepository ` classes to
[ sdmapi ] add ` ` deleteoauthserviceandaccesstoken ' ' and ` ` deleteoauthserviceandaccesstoken ' ' method to
replaced AGGRESSIVE _ EASE with EMPHASIZED in TaskbarEduView . java to improve animation responsiveness
[ iotdb - 3571 ] add log for updateregionlocationplan ( # 5571 )
added a new file FileDialogLeakTest . java that tests the finalization of the FileDialog class to ensure that the FileDialog implementation behaves as expected
updated package structure from org . apache . hadoop . hbase to org . apache . hbase . coprocessor in TestOpenTableInCoprocessor . java
fix trufflefeature . isinterruptible ( ) to return false if uninterruptible .
[ hotfix ] [ table - planner - blink ] remove unnecessary splitmethod call
added a null check for the disi variable in DrillSidewaysScorer . java to ensure that the condition correctly handles cases where the
replaced calls to ` setNewSourceInfo ` with ` setNewSourceInfo ` and added a ` sourceInfoRefreshHandler ` in multiple test classes
added JVM specification version handling in Constants . java and modified conditional checks in Helper . java to enhance compatibility checks for Java versions in the application
updated the ` FileReporter ` initialization to use ` String ` instead of ` NullPointerException ` to ensure proper handling of null values in the test
updated the condition in SettingsActivity to check if the end encryption key exists before proceeding to simplify the logic for better readability and maintainability
added home button functionality to DirectMessageConversation to enhance user experience by allowing navigation to the home button
updated protocol versions from 5 to 6 and added user retrieval logic in RpcServlet and RpcUtils classes to enhance security by ensuring proper handling of user requests
added a property ` @ EnabledIfSystemProperty ( " amd64 | x86 _ 64 " ) " to the ` TestJdbcPluginWithMS
replaced ` startClass ` with ` originalStartClass ` in ` WhiteboxImpl . java ` to improve code readability and maintainability by using a
refactor exception messages in DexBody . java to use Jimple . v ( ) . newLocals ( ) . newLocal ( )
replaced ` getAsyncContext ( ) . getResponse ( ) ` with ` get getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
add a fixatele ( ) method to the common app , fix a bug in the common app .
updated newline character in AppPage . java to ensure correct formatting of the version string
refactor LauncherAppTransitionManagerImpl to use ` launcherIconAnimatorSet ` instead of ` mUiResetListener ` to improve code readability
updated AddressFormatException message from base58 to version in DumpedPrivateKey . java to improve clarity of error messages for better debugging
updated the method call from ` getExtraDataMap ( ) ` to ` newOfferPayload ( ) ` in ` EditOfferDataModel . java
refactor milestone parameter handling in TicketPage . java for improved clarity to enhance code readability and maintainability by using a more descriptive
changed the battery size from 640 to 80 in PipeItemsWood . java to allow for more flexible battery options
added a new method ` getClusterKey ` to the ` StateMachineInvoker ` class to enhance the method ' s functionality by allowing the retrieval of
changed the default value of ` downgradeAllowed ` from ` false ` to ` true ` in ` UpgradePack . java ` and added a test
replaced ` NameType . ATTRIBUTE ` with ` NameType . ATTRIBUTENAME ` across multiple classes to improve clarity and consistency in naming conventions
added a configuration configuration for EmulateSystemLoadLibrary in Library . java and updated library loading logic in Library . java to improve library loading efficiency and
replaced ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ` in ` AppsCustomizePagedView ` and `
updated entry handling in DefaultPlatformManager , FatJarStarter , and FatJarStarter classes to ensure proper resource management and prevent potential resource leak
updated method names from ` doTest ` to ` doTest ` in ` TestSecretKeyCredentialHandler . java ` to improve clarity and consistency in
camel - 15836 : camel - spring - boot : rename routebuilderfinder to camel - spring - spring - boot - spring - boot -
[ hotfix ] [ metric ] fix typo in metricoptions
hbase - 16297 testfulllogreconstruction . testfulllogreconstruction . testfulllogreconstruction . java fail
added a boolean variable ` reuseAddress ` and ` setReuseAddress ` and ` setReuseAddress ` to ` DatagramSocketOptions ` and ` setTraffic
updated player kick message to use getShutdownMessage ( ) instead of getShutdownMessage ( ) in GlowServer . java and ServerConfig . java
deleted the Locatable . java file to remove unused code to clean up the codebase
updated error messages from " indexed " to " retrievable " and " stored " in VersionInfo . java to improve clarity of error messages
refactor equality predicate handling in StarTreeIndexOperator to use predicateColumns instead of equalityPredicateColumns to improve code readability and maintainability by using
refactor code for better readability in HelloMessage and HandshakeHandler to improve code readability and maintainability
removed unnecessary semicolons in Navigator . java to improve code readability and maintainability
[ pinot - 1386 ] add parquet - plugin - parquet - plugin - inputformat . parquet _ record _ reader _
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator and related tests to ensure
refactor grouping clause checks in CalciteSqlParser to utilize a new method to improve code readability and maintainability by encaps
replaced UnsupportedOperationException with Unsafe . invokeCleaner in FileChannelLinesSpliterator and FileChannelLinesSpliterator to improve memory management and prevent memory leaks
replaced ` l . getValidator ( ) . getValidator ( ) . getValidator ( ) . getValidator ( ) . getValidator ( ) `
added a ` schedule ` method to ` CircuitBreakerImpl ` and modified ` WAIT _ SLEEP _ TIMEOUT _ MILLIS `
updated FLAG _ ACTIVITY _ NEW _ TASK flags from ` FLAG _ ACTIVITY _ NEW _ TASK ` to ` FLAG _ ACTIVITY
change the property name from " webui . submit . ajax " to " webui . submit . progressbar " in multiple files to align with
added JUnit Disabled annotation to TableExtRetrieverTest . java to enable tests for retrieval strategy for column privileges
added synchronization to the addExportedCount method in EntityGraph . java to ensure thread safety when accessing the exported count
updated import statements from IntRangeUtil1 to IntRangeUtil . requireNonNegative in MetricsImpl . java to ensure compatibility with the latest version of
updated HttpParser to handle invalid characters in HttpParser and added a new test for encoded headers in HttpParserTest to improve error handling and ensure correct
updated the layout reference from trends _ activity to configuration _ activity in ConfigurePagerActivity . java to ensure consistency in layout naming conventions
updated log message from " Found SLWT at " to " pos " in SLWT in SLWTTextListing . java to
refactor ForceLeaderTest to use TimeOut for better readability and maintainability to improve code readability and maintainability by encapsulating
refactor Thread class to improve code readability to enhance maintainability and facilitate future updates
updated RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES and RECOGNIZED _ TEMPLATE _ FILE _ SUFFIX
camel - 15836 : camel - cxf - add support for xmlns _ attribute in camel - cxf
refactor ` YamlRepresenter ` and ` RepresentConfigurationSection ` classes for consistency to improve code readability and maintainability
updated date formatting in ToChar . java and added a new SQL statement in TestFunctions . java to enhance readability and maintainability of the code
added support for valid txn and write IDs in GenericUDTFGetSplits . java to ensure proper handling of transaction and write IDs
updated logging statements to use ` Collections . emptyList ( ) ` instead of ` ArrayList < String > ` and ` Collections . emptyList ( ) ` to
added a null check for the book path before loading to avoid potential NullPointerExceptions when the book path is not available
refactor SSTDeserializer and TestSSTDeserializer classes to improve clarity and consistency to enhance code readability and maintainability
refactor grid column retrieval in AppPreferencesImpl and ExtendedListFragment to use a constant for the DEFAULT _ GRID _ COLUMN to improve code
updated field names in Platform and ComparisonFailureWithFieldsTest in ComparisonFailureWithFieldsTest to improve clarity of error messages for better debugging
added a ` waitingForKeys ` flag to ` DecoderInputBuffer ` , ` ClippingMediaPeriod ` , and ` SampleQueue ` classes to
updated API paths in OkexV3 . java from " / api / accounts / borrow " to " / margin / v3 / accounts "
refactor conditional checks in LineUtilitiesTests . java for better readability to improve code readability and maintainability by reducing redundancy
added error handling for varargs and old array syntax in JavacParser and created new classes VarargsAndOldArraySyntax and T656963
[ java ] allow setplayer ( ) to be call before setplayer ( ) .
added methods for method calls in VariableContext and updated test cases in TestVariableContext to enhance functionality to support method calls in variable context parsing
added a test method for invalid compilation unit in ExperimentParser and updated ExperimentParser to handle invalid compilation unit cases to ensure that the parser correctly
updated buffer limit calculation in Piece . java and SharingPeer . java to improve code readability and maintainability
added a ` HttpClientProperties ` parameter to the ` GatewayAutoConfiguration ` and ` NettyRoutingFilter ` classes to allow customizable response timeouts
refactor ` getCxxLibraryFactory ` and ` NativeLinkTargetGroup ` to use ` getTargetForPlatform ` instead of ` getNativeLinkTarget
add unit test for camel - main - camel - rest
added ` visitFieldAccess ` method to ` ASTConverter ` and ` RexNodeConverter ` classes to enhance field access handling in the Hive parser
[ hotfix ] [ log4j2 - 1789 ] fix querylogentry . values ( ) to be static final
add support for proxy . noproxypredicate ( ) in webclientrequesturi
updated certificate handling in PKCS12KeyStore and StoreSecretKeyTest to use ALIAS2 for consistency to improve code readability and maintainability
added method ` checkReflectionAccess ` and ` checkReflectionClass ` in ` Bootstrap ` , ` Bootstrap ` , and ` ReflectionCheckLinker `
changed the access modifier of the constructor from public to public in CollisionMap . java to restrict access to the constructor from other classes
[ transaction wallet ] deprecate rawinputfromtransactioninput ( ) method in tradewalletservice
refactor log level handling in ConfigurationValueConverter and Main classes to use switch - case statements to improve code readability and maintainability
cloudstack - 10284 : remove region _ id and region _ id from configurationserverimpl
bug 60284 : throw a EncryptedDocumentException if encryption be not supported for old Excel files
add extra _ image _ build _ argument to mx _ java _ benchmarks . py
updated the visibility of the holder ' s image in TimeLineCursorAdapter . java to improve code readability and maintainability
increase wait time in batchingstateuploadschedulertest to avoid all attempts timing out
updated the ` EXTERNAL _ FILES _ DIR ` method to use ` File ` instead of ` EXTERNAL _ FILES _ DIR
refactor ExceptionFactory instantiation to use Class . forName for better readability to improve code maintainability and reduce boilerplate
updated WAIT _ TIME _ MS from 10000 to 60000 in LauncherInstrumentation . java to increase the timeout duration for better user experience
added support for a specific input parameter in ConnectOAuth2RequestFactory and ConnectRequestParameters in ConnectOAuth2RequestParameters and ConnectTokenEnhancer to
[ hotfix ] [ kafka ] remove default value of breakonfirsterror from kafka configuration
added a new constant ` selectableItemBackground ` to the R class to enhance the visual appearance of the selectable item
removed unused imports and added a method to place stop orders in GatecoinTradeService . java to streamline import statements and provide a placeholder for
removed redundant code in TxnSetOperation . java to improve code readability and maintainability by reducing redundancy
added a new class ` ResumableRandomAccessFileListener ` and modified ` ResumingExternalDownload ` and ` ResumingExternalDownload ` to
updated class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java to
added handling for formats in HSSFDataFormat and updated test assertions in TestWorkbook . java to ensure accurate representation of format values in the workbook
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer and flinkkafkaproducer
updated the condition to check for the maximum compressed length in CompressedInputStream . java to ensure that the chunk length does not exceed the maximum allowed length
added a new class ` RedisStringIdempotentRepository ` for handling Redis key expiration and expiry in the ` RedisStringIdempotent
fix a bug where the itemstack . func _ 77964 _ b can not be damage .
added a reallocalrepo check to legacylocalrepositorymanager . getversion ( )
added checks for task manager initialization and logging in LocalInstanceManager and JobManager classes to improve error handling and ensure proper initialization of TaskManager
added a new exception message for deploying files in AbstractArtifactResolutionException . java to enhance the exception message for better clarity and usability
replace direct calls to ` getTemporalPath ( ) ` with ` getInternalTemporalPath ( ) ` in ` UploadFileOperation
refactor FeedEntryStatusDAO to utilize a functional method for retrieving feed entries to improve code readability and maintainability by encaps
added DISABLE _ TIMINGS check in ContextImpl and modified deploymentOptions initialization in BlockedThreadCheckerTest to ensure proper execution of the
updated the ` instantiate ` method to accept a ` String ` parameter and added a null check for ` ctorArg ` in ` FormatterConverter ` to
added conditional check for SDK version in LoadContactsTask . java to ensure compatibility with devices running Android O and above
replaced calls to ` setRemoteAddress ( ) ` with ` setRemoteHostname ( ) ` in ` Credentials . java ` to improve code clarity and
added null check for realClass in Robolectric . java to ensure that a valid shadow class is annotated with @ Implements to prevent runtime errors
added support for tlsMutualAuthenticationRequired ( ) in NettySslContextFactory and ExampleNettySslContextFactory to enhance security by allowing optional
added a new test method ` requestingPlainHttpEndpointOverHttpsThrowsSslException ` in ` BasicHttpTest . java ` to ensure
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance encapsulation and provide access to consumer and producer instances
refactor event handling in PageChangeListener and FrameRenderer classes to improve code readability and maintainability
updated warning message from address / subject / text / subject / text to SMS in CommunicationsManager . java to improve clarity of warning messages related to email
add draftqueryoptimise ( query ) method to beandescriptor and beandescriptordrafthelp
added handling for temporary resource transfer failures in MultipartBody . java to improve error handling and provide clearer logging for unavailable resources
updated array initialization in ExecutableFactory and ZipFolder classes to improve code readability and maintain consistency
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
fix ( editor ) : use workingdirectory instead of jabrefreferences instead of jabrefreferences
added LoadOptionsBuilder for SchemaInfoLevel and SchemaInfoLevel in AccessTest . java to enhance configuration flexibility for schema crawler options
updated package structure and added JUnit Assert annotations to TestLoadLegacyLibrary . java to improve organization and clarity of test cases
updated exception handling in TestReader . java to return null instead of throwing an exception to improve error handling by returning null instead of throwing an exception
added name , enabled , and expanded settings for the prototype in ProjectProperty . java to improve clarity and functionality of property management
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources for resource management to ensure proper resource management and prevent potential resource
refactor DataStreamJob class to improve code organization to enhance maintainability and readability of the code
added error handling for ErrnoException in TestContentProvider . java to ensure proper resource management and prevent potential resource leaks
[ cxf ] fix typecastexception in cxfendpoint . getserviceclass ( )
added a check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure compatibility with H2 - 14 protocol
refactor method reference handling in LambdaToMethod and LambdaToMethod classes to improve clarity and functionality to enhance code readability and maintainability by ensuring
updated the regex pattern for SBARQ in CoordinationTransformer . java to improve accuracy in matching verbs
updated the cache file size from 5000 to 60000 in DL4JInceptionV3Net . java to allow a longer cache file size
added phraseSlop setting in QueryParser . java to ensure phraseSlop is correctly set during query parsing
increase sleep duration from 10 to 100 in LongPressMouseListenerTest . java to improve test reliability by allowing more time for triggering events
updated server configuration from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink classes to ensure consistent host configuration for metrics
use threadmonitor instead of threadmonitor . parallel ( ) instead of Mono . fromRunnable
added conditional checks for edit options in EditShareFragment to ensure visibility only occurs when edit options are available
updated progress calculation in DepthController . java to ensure progress is within a valid range to improve accuracy of progress tracking
removed the ` packetReceived ` method from ` ClientSession ` and ` ComponentSession ` classes to streamline the code by eliminating unused methods
refactor authentication handling in DefaultCasDelegatingWebflowEventResolver and DelegatedAuthenticationGenerateClientsAction to improve code readability and maintainability by
updated null checks in SamlIdPEntityIdAuthenticationServiceSelectionStrategy , SamlIdPMetadataUIAction , and SamlIdPMetadataUI
added hidden = true to the arity and arity in PantheonCommand . java to enhance user control over account level permissions
added a call to doNotInstrumentClass ( " androidx . room . CoroutinesRoom $ Companion " ) in AndroidConfigurer .
removed the ` isSupported ` method from the ` NegotiateAuthentication ` class to simplify the method signature and improve readability
removed the setInitScript method from InitializingDataSourceFactoryBean . java to streamline the initialization script management process
camel - 14284 : use thread name instead of name in queue reply manager
refactor AuthenticationProvider , TargetObject , and TargetObject classes to improve code organization and maintainability
added checks to ensure proper handling of tags in the PdfDocument class to improve readability and maintainability of the code
added a new test method ` testPatternSelector ` in ` PatternLayoutTest . java ` to verify the functionality of the ` PatternLayoutTest .
updated HTABrowserLauncher and WindowsHTMLRunnerTest to use TestRunner . hta in HTABrowserLauncher and updated test suite URLs to
added MwThankPostResponse class and created MwThankPostResponse class with a new MwThankPostResponse class to enhance
added a new interface ` SocketBased ` and updated its implementation in ` ChannelEndPoint ` and ` SslConnection ` to implement ` SocketBased `
refactor revoking store initialization and maximum size settings in Manager . java to improve code readability and maintainability
added a new test method ` test _ hql _ collection _ implicit _ join _ 1 ` in ` HQLTest . java ` to ensure
updated regex patterns in NonVisualRegressionTest . java to handle line endings correctly to ensure consistent line endings across different operating systems
refactor ` IndexWriter ` and ` MockDirectoryWrapper ` to use ` filesToCommit ` instead of ` pendingCommit ` to improve code clarity
changed ` @ Final ` annotations from final to ` @ Final ` in ` BaseError . java ` and ` Memory . . args ` to ensure
added validation for resource percent in ConsumeUserResourcePercentActuator to ensure that the percent is within a valid range of 100 to prevent errors
added a condition to check if the old login is displayed in AuthenticatorActivity to enhance user experience by allowing customizable login options
rename ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to clarify the purpose of the test class
refactor response page handling in EditTeamPage . java to improve code readability and maintainability
updated debug log message from " error with cred file " to " error " in PMS . java to improve clarity of error reporting during startup
added try - finally blocks for closing the server socket channel in ConnectionManager . java to ensure proper resource management and prevent potential memory leaks
refactor Rocket class to improve code organization to enhance maintainability and readability of the code
added a method to create DynPartSpec in BaseSemanticAnalyzer . java to improve code readability and maintainability by encapsulating the
refactor rounding logic in Kernel . java and StringTemplate . java for improved clarity and consistency to enhance code readability and maintainability by standardizing
added method ` visitDirectory ` to handle directory entries in ` JarDirectoryStep ` , ` DirectoryTraversal ` , and corresponding tests in ` JarDirectory
added a new file ` JWKSetEditor . java ` that implements the ` setAsText ` method in ` PropertyEditorSupport . java ` to
replaced ` minTerm ` with ` lastPendingTerm ` in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` to
fix ` ` traceThrowable ' ' and ` ` traceThrowable ' ' in ` ` invokeespressonode ' '
changed the default value of ` byIP ` from true to false in ` Fetcher . java ` to disable the fetcher ' s per host
refactor query timeout handling in StatementUtil . java to improve readability and maintainability of the code
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to ensure proper handling of target
refactor ReplicaPosition class implementation to improve code readability and maintainability
cloudstack - 10220 : fix bug in network usage stats update task when initial delay be 0
replaced ` QuickstepAtomicAnimationFactory ` with ` ANIM _ FINAL _ FRAME ` in ` QuickstepAtomicAnimationFactory ` and
updated swipe length calculation in Background . java to improve layout responsiveness by adjusting swipe size based on display density
added a new module - info . java and updated the FillInterest initialization in multiple Java files to improve modularity and encapsulation of
added null checks for JSON values in JsonType . java and updated variable names in JsonTest . java and JsonTest . java to improve robustness
refactor context initialization in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in checkpointconfig
updated the ` reportInnerClassReferences ` method to use ` ElementKind ` instead of ` TypeElement ` in ` InnerClassesTable . java ` to
updated command string from " test . tool . vm . opts " to " test . tool . vm . opts " in TimestampCheck . java to
replaced FluentIterable with MoreCollectors for stream handling in ChromeTraceBuildListenerTest . java to improve code readability and maintainability by utilizing
[ dubbo ] add register _ key to serviceconfig . register ( ) to enable register service by default .
added onSettingsChanged ( ) and onSettingsChanged ( ) methods to OTRManager , OTRManager , and OTRManager classes to ensure
added outline size and outline color properties to the PreviewProperty and NodeLabelRenderer classes to enhance the rendering process by allowing customizable outline size and
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
added a boolean parameter to the Win32FontManager class to enable font rendering in the application
added null check for v before visiting the visit method to avoid potential NullPointerExceptions when v is null
added error handling policy for JDTBatchCompiler to ensure proper error handling behavior when no classpath is available
added contentAlignmentPoint and textAnchor properties to LabelBlock and LabelBlock classes to enhance the label ' s functionality by allowing dynamic alignment and text alignment
refactor Class and Parameter classes for improved clarity to enhance code readability and maintainability
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
refactor network interface handling to use Boolean instead of boolean to improve code clarity and prevent potential NullPointerExceptions
added a locale parameter to the ` fromRfc1123DateString ` method in ` DateUtils ` and ` Rfc1123DateDeserializer
updated the test to include a new file extension for downloading missing files to ensure the test accurately reflects the correct file extension used in the test
flowfile : add output nohits property to AbstractJsonQueryElasticsearch to allow flowfile to be output even if no hits are found
replaced BigDecimal with RoundingMode . HALF _ UP in ` QuotaManagerImpl . java ` to simplify code and improve readability by eliminating unnecessary
refactor case statements in Election . java to use try - with - resources for clarity to improve code readability and maintainability
[ hotfix ] [ stream ] fix race condition in readfilesp and streamfilesp
refactor PageChangeListener to improve widget handling to enhance readability and maintainability of the code
added a method ` isWriteProtected ` to ` Workbook ` , ` RecordInputStream ` , and ` FileSharingRecord ` classes to check if the
added error handling to unregisterInvalidatedSessions ( ) method in PluginMonitoringFilter . java to improve robustness by logging exceptions during session validation
refactor CategorizationFragment class to improve code organization to enhance maintainability and readability of the code
updated the status message from ` false ` to ` not reachable ` in ` HueLightHandler . java ` to clarify that the status is not
added a ` isLoading ( ) ` flag to ` FMLClientHandler ` and implemented ` isLoading ( ) ` method in ` GameSettings
updated string concatenation in UI . java and BlockInventoryFragment . java to use ` Core . bundle . getOrNull ( " unit . millions " )
updated MessagePackParser to handle BYTES and STRING types in MessagePackParser and added a new BinKeyPojo class in MessagePackDataformatTestBase
added unit tests for usingReservedWordsAsIdentifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to enhance test coverage for reserved
added a new test method ` testMapOfMapSerialization ` and ` testMapOfMapSerialization ` in ` MapTest . java ` to ensure
added offset checks for x2 and y2 in GeometryUtils . java to ensure correct positioning of geometries based on offset
replaced ` SORT _ ORDER _ DIALOG _ TAG ` with ` SORTING _ ORDER _ FRAGRMENT ` in ` FileDisplay
do n ' t try to find the testplan if there be no test plan
replaced ` dbmsType ` with ` Lazy < DbmsType > ` in ` GeneratedEntityTranslator ` and ` JdbcManagerSupportImpl ` to
added a check for non - strict mode identifiers in ` Parser . java ` to ensure correct handling of ` argIdent ` based on the type of
change the default protocol from " SSL - HTTP / 1.1 " to " SSL - HTTP / 1.1 " in JettyHttpComponent9 . java to
change the default value of displayVolume from true to true in VolumeVO . java to enable display volume functionality for better user experience
updated version method to include " javah . fullVersion " and " javah . msgKey " in JavahTask . java and added a
refactor condition checks in ChangeLogParameters . java for better readability and maintainability to improve code readability and ensure proper handling of global change
updated log level from warn to debug in JtaTransactionManager . java to improve logging granularity and reduce log verbosity
hhh - 16457 - skip test that fail due to exception in basicformatterimpl
refactor socket timeout handling in Connection . java to improve clarity and maintainability of socket timeout management
updated size calculations in multiple fragments to use ` Utils . getStatusBarHeight ( context ) ` instead of ` Utils . getStatusBarHeight ( context )
change optionkey from false to true in espressooptions and noopclasshierarchies to true
[ amq - 4071 ] use classloader instead of classloader in activemqresourceadapter
refactor JodaTimeRangeRandomizersTest to improve readability and maintainability to enhance code readability and reduce boilerplate
added a conditional check for SERVLET _ MAJOR _ VERSION in WebDescriptor . java and updated resource loading in WebDescriptor . java to
fix Readiness . isready ( ) and add isnodeready ( ) method in Readiness . java
replace liveEndpoints with handler . endpoints in StorageProxy . java to improve clarity and maintain consistency in naming conventions
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions when accessing creationStatements
updated RPC version from 1 to 2 in DataRpcConfig and UserRpcConfig classes to reflect the latest RPC features and improvements
added a security check for the caller class before accessing access checks in ObjectStreamClass , ObjectStreamField , and ObjectStreamField classes to avoid potential NullPointerException
removed unused ` timeSince ` and ` timeSince ` methods from ` Utils ` and ` XLCDCommunicator ` to streamline code and
refactor default metrics tag handling in DefaultMetricsTagProvider . java to improve code readability and maintainability by reducing redundancy
updated the test case in ClientDriverSuite . java to ensure consistency in naming conventions for better readability
updated the default setting from Level . OFF to Level . ERROR in Launcher . java to correct the logging level for better user experience
changed access modifiers of ` mPaintIcon ` , ` mCanvasARGB ` , ` mDir ` , and ` mRandom ` to be
added a boolean flag ` firstCallPrepareDo ` and modified ` PrefixMethodInvocationUtil ` to handle ` firstCallPrepareDo ` and ` prefixes `
refactor the workspace display logic in Launcher . java for improved readability and maintainability to enhance code clarity and ensure proper handling of workspace state
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ` in ` AuthWithStoreFeature ` , ` Auth ` , and ` Auth `
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method in ` GraphicalDataModelView . java `
cloudstack - 10297 : remove unused capacity from db when remove a non - private ip .
updated the relativeUrl format in ProfileServlet . java to include a description for empty diagram and Linux 4 + to improve user understanding of the async profile
added a new ` RequiredRefFieldModel ` class and created a new ` RequiredRefFieldModel ` class in ` RequiredFieldModel ` to enhance
updated class names from ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreConfigurationWatchAutoConfiguration ` across multiple configuration classes to ensure consistency
refactor FeatureFlags class implementation to improve code readability and maintainability
updated StringBuilder size from 23 to 17 and modified uniqueId handling in ConfigStore . java and CommonSetup . java to improve code readability and maintain
added handling for picture rendering in TimeLineCursorAdapter , TimelineArrayAdapter , and TimelineArrayAdapter , and TimelineArrayAdapter to improve
updated error messages related to ` Means Major compaction ` and ` insert - only tables in ` HiveConf . java ` to provide clearer
added a check to ensure the storage path is not null before proceeding to prevent potential NullPointerException when mWaitingToSend is not initialized
updated condition checks in VectorMapJoinFastBytesHashMap , VectorMapJoinFastBytesHashMap , VectorMapJoinFastBytesHashMap , and VectorMapJoin
refactor LDAPConnectionService class to improve connection handling to enhance performance and reliability of LDAP connections
updated the @ XmlAttribute annotation from ` @ XmlAttribute ` to ` @ XmlAttribute ` in ` AggregateDefinition . java ` to indicate that the @ XmlAttribute `
updated debug logging statements in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to enhance debugging capabilities by providing clearer insights
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated assertions in TestMultiSearcher . java to reflect the correct number of hits to ensure accuracy of length assertions in tests
added a new file ` LucenePackage . java ` that implements a method to retrieve the LucenePackage class to facilitate the retrieval and retrieval of the Lucene
updated the calculation of sizeInBytes from ` sizeInBytes ` to ` sizeInBytes ` in ` RAMDirectory . java ` to ensure
added estimate method to StatsRulesProcFactory , GenericUDAFBloomFilter , and GenericUDAFBloomFilter classes to improve performance
added null check for the drawerToggle before processing to avoid potential NullPointerExceptions when the drawerToggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method in DefaultAuthenticationAdapter . java to suppress warnings related to unused variables
refactor classpath handling in Scanner . java for better clarity to improve code readability and maintainability by encapsulating class loading logic
[ msbib ] fix typo in msbibexportformattestfiles
refactor recovery cancellation logic in CoreContainer . java to utilize a dedicated method to improve code readability and maintainability by encapsulating
replaced direct calls to ` System . currentTimeMillis ( ) ` with ` currentTimeMillis ( ) ` in ` bug5070081 . java ` to
added a null check for found in RepoEditView . java to improve code readability and maintainability
updated error messages in PGProperty , CommonCreateSlotBuilder , and ChainedPhysicalStreamBuilder classes to clarify connection parameters to improve user understanding of connection
added trust resolver and permission evaluator in SecurityEvaluationContextExtension and updated root object creation in SecurityEvaluationContextExtension to ensure proper handling of trust resolver and
added a conditional check for exponentSize in DHParameterGenerator . java to ensure exponentSize is set correctly based on primeSize
replaced direct instantiation of ` ocLocalFolder ` with ` getUsableSpace ` in multiple files to improve code readability and maintainability by
refactor DistinctSqlAggregation to use for loops and add unit tests for the DistinctSqlAggregation class to improve code readability and ensure
added a new test method ` postLoginActivities ` to verify the behavior of login activities in ` UserServiceTest . java ` to ensure that the
refactor ExtractorFramesRare to use a new constructor for ExtractorSpanishStrippedVerb to improve flexibility and maintainability of verb
refactor CharArraySet and TestCharArraySet classes to improve code readability and maintainability to enhance readability and maintainability of the code logic
updated error message formatting in MuxerWrapper . java to improve clarity and consistency in track type checks
refactor JsBundleGenrule to use AndroidPackageable instead of JsBundleAndroid in JsBundleGenrule and JsRulesIntegrationTest
added character encoding setting to StringDictionary and modified string indexing logic in StringDictionary and Dictionaries to ensure proper handling of UTF - 8 characters
updated case names from " Logical Analyzer " to "Logic Analyzer " in InstrumentsFragment . java to improve code readability and maintain
added instanceClassName and instanceClass handling in AbstractVector . java to improve performance by avoiding unnecessary instantiation of Vector instances
removed synchronization of meta leader in CMManager . java to streamline the code by eliminating unnecessary synchronization
updated return statements in FeedbackContributionQuestionDetails and FeedbackQuestionDetails to use ` perceivedContributionHtml ` instead of ` claimedToInstructor
added import for TestLoggingExtension in DiagramRendererTest . java to enable logging functionality in the diagram rendering process
updated method names from ` findProperty ` to ` findProperty ` across multiple classes to improve clarity and consistency in naming conventions across the codebase
added support for VIOMI Internet electric water heater 1A ( 60L ) in MiIoDevices . java to enhance functionality by providing additional
updated method calls from ` getSslSessionData ( ) . getCerts ( ) . getCerts ( ) . getCerts ( )
add a new file ` CreateNewSpreadsheet . java ` that implements a new file ` CreateNewSpreadsheet . java ` to demonstrate the functionality
updated CacheProperties and RedisCacheConfiguration methods to use long values instead of Duration to improve flexibility in handling time - to - live configurations
updated CONTENT _ URI in LauncherBackupHelper and LauncherModel classes to use CONTENT _ URI _ NO _ NOTIFICATION instead of CONTENT _ URI
updated the version number in SwaggerResolveTest . java to ensure compatibility with the latest features and bug fixes
replaced ` lucidaFontName ` with ` this ` in ` SunFontManager . java ` to improve performance by avoiding unnecessary synchronization
updated the condition to check for ' < ' and ' < ' in DocClassUtil . java to ensure that only valid characters are processed
updated the method call from ` String . format ` to ` String . format ` in ` Workspace . java ` to improve code readability and maintain
added import and message for no validation errors found in ValidateCommandStep . java to improve user feedback when no validation errors are found
refactor IntegrationTestContextLoader to utilize a new configuration method for WebMergedContextConfiguration to improve code readability and maintainability by encap
refactor scroll handling logic in multiple classes to improve code clarity and ensure proper handling of mouse event events
modified the condition for UUID type checking in RamlType . java to improve code readability and maintainability
added a new class ` ClientStat ` and updated related methods in ` StatsService ` , ` DefaultStatsService ` , and ` StatsService `
updated string replacement logic in CellContentConverter . java to use spaces instead of spaces to ensure consistent formatting of string values across different operating systems
updated glob matching logic in SeleneseTestCase . java to correctly handle multiple whitespace characters to ensure proper formatting of glob patterns in the output
refactor MondrianProperties class to improve code readability to enhance maintainability and facilitate future updates
added stack trace printing for thread dump failures in ProcessTools and CustomLauncherTest to improve debugging and traceability of thread stack traces in the process
removed the ` testEmbeddedImage ` method from the ` TumblrRipperTest ` class to streamline the testing process for embedded images
added a condition to check if the store type has a slot for the store type to ensure that the method only converts when the store type is
refactor data specification handling in ContainerMediaChunk and InitializationChunk classes to improve code readability and maintainability
replaced ` IndexWriterConfig ` with ` PrintStreamInfoStream ` in ` BaseLockFactoryTestCase . java ` to utilize ` PrintStreamInfoStream `
tika - 358 : add support for dynamic service loader in tika config
updated import statements in DocLint and DocLintTester to use javax . tools . JavaFileObject instead of java . util . Pattern to improve code clarity and
added support for IMPORT _ CMD in DataImportHandler and DataImporter to enhance functionality to handle additional import commands in the data import process
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest ` and modified ` ChangeType ` to
removed unused import of Log from JettyService . java to clean up the code and improve readability
updated the ` checkItemPlacement ` method to include a ` workspaceScreens ` parameter and modified ` checkItemPlacement ` method to include ` workspace
added a new servlet for KillSwitchServlet in Jetty7AppServer . java and created a new KillSwitchServlet . java file to handle the
fix npe in llrealtimesegmentdatamanager # index ( )
added a check for Windows operating systems in Tests . java to ensure compatibility with Windows operating systems
added error dialog for non - registered protocol provider in AddContactDialog . java to improve user feedback when the protocol provider is not registered
updated the registration of the USER _ DETAILS _ SERVICE _ FACTORY bean in AuthenticationConfigBuilder to ensure the correct bean is registered for the
updated the drawBitmap method from ` r . left ` to ` null ` in ` FastBitmapDrawable . java ` to ensure proper rendering of bitmap
updated date formatting in multiple protocol decoder classes to improve readability and maintain consistency in date formatting
changed method visibility from ` getFontPath ` to ` getPlatformFontPath ` and ` getPlatformFontPath ` in ` SunFontManager `
added @ Deprecated annotations to EnhancedRandom . java to indicate that these classes are outdated and should no longer be used
updated exception handling in ClientMapStoreTest and ClientMapStoreTest to use ExecutionException instead of ReachedMaxSizeException to improve test reliability by ensuring
added a ` keepEmptySentences ` option to the ` DocumentPreprocessor ` class and modified conditional checks in ` MaxentTagger ` and ` Max
added error handling for artifact subdirectory creation in MavenArtifactFetcher . java to improve error reporting for artifact subdirectory creation failures
replaced the use of ` JavaCompilerService . NO _ MODULE _ COMPILER ` with ` JavaCompilerService . NO _ MODULE _ COMPILE
added a null check for the resource in DirectAgentAttache . java to ensure that a null resource is returned to avoid potential NullPointerExceptions
refactor sendemail method to throw exception instead of try - catch
added a new API annotation and a new file ` PipeItemsObsidian . java ` for the ` PipeItemsObsidian `
updated method names in DateFormatEvaluator and FileListEntityProcessor to improve clarity and consistency in method naming to enhance code readability and maintainability by using
added a boolean property ` includeDecals ` to the ` StorageOptions ` class and a checkbox in ` StorageOptionChooser ` to enable users
added a null parameter to the generateDocumentation method in Liquibase . java and modified the getImplementedDatabases method in LiquibaseTest
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to use a thread - safe method for retrieving perf duration to improve performance monitoring and
updated log message from " Begining with Solr 5 . 0 " to " Beginning " in multiple classes to clarify the purpose of the log message
added a new string for the MAJOR _ VERSION in ignoreRecordAttribute . java and updated the test assertions in recordReflectionTest . java to
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP password authentication to ensure proper functionality and functionality of the ` LdapPasswordAuthentication ` class
updated import statements for OrcInputFormat and BasicStatsNoJobTask in TaskCompiler . java to use BasicStatsNoJobTask instead of Orc
add a new method ` beforeActionPerformed ` for saving events in ` FlutterReloadManager ` to improve event handling by allowing users to save
refactor VisibleAdvance class to improve code readability to enhance maintainability and facilitate future updates
fix ( kubernetes - client - api ) : add reconnect ( ) method to reflector . start ( )
added support for dynamic number column checks in EdgeDataTable , NodeDataTable , and NodeDataTable classes to enhance functionality to support dynamic number column
added null checks for repo and version in RawPom . java to enhance code robustness by preventing potential NullPointerExceptions
added null check for apiInfo in V2HttpCall . java to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added shader loading and deletion methods to PhotoPanel and FlameRenderer classes to enhance rendering capabilities and provide better debugging information for texture management
updated scene parameters in FxWindow , InsnListEditor , InsnProxyListEditor , InsnListEditor , and InsnProxyList
updated conditional logic in CSSParser . java to ensure proper handling of line endings to improve data integrity by ensuring only valid characters are processed
added a boolean property ` isDecorated ` to the ` UIServiceImpl ` class to enable the use of JDK ' s JDK
updated SQL query in HostRoleCommandDAO . java for consistency to improve code readability and maintainability
updated LJ1200Message . java to use " 2 - TOWER TEST " and " TRANSPONDER _ TEST _ 
refactor swipe handling logic in WindowTransformSwipeHandler to improve code readability and maintainability
changed the import of ` HostDatabase ` from ` HostDatabase ` to ` ColorStorage ` in ` ColorsActivity . java ` to improve code
refactor String class implementation to improve code readability and maintainability
updated logging configurations across multiple classes to ensure consistent logging behavior across multiple classes
added a method to retrieve global entries in MapGlobalResolver to enable retrieval of global entries from the map
added assertions for the sendcoin method in MultiSign34 . java to ensure that the sendcoin method behaves as expected to improve test coverage and
updated import statements in CUFilterTest . java to use JUnit 5 ' s JUnit 5 API to align with the latest JUnit 5
changed the path separator from " ; " to " path . separator in JavadocReport . java to ensure consistent path formatting across different operating systems
removed the static modifier from the augmentSuccessViewModelObjects method in AbstractServiceValidateController . java to simplify the method signature and improve code readability
updated assertion in InheritanceTest and TestUtil to include the presence of a property in the metamodel class to enhance clarity and maintainability of the
replaced ` getConf ( ) ` with ` getConf ( ) ` in multiple classes to simplify the code by eliminating unnecessary configuration parameters
removed the ` LexicalContext ` parameter from ` ensureUniqueNamesIn ` and ` copyFinally ` methods across multiple classes to simplify the code
removed unused imports and modified type expression handling in UseLambdaForFunctionalInterface . java and TypesInUse . java to improve code clarity and ensure
replaced appendClassSelector with appendClassSelector in TestNGAntTask . java to improve code readability and maintainability
added a check for ` rootInput ` in ` HiveCardinalityPreservingJoinOptimization . java ` to ensure that the root input is not supported
added a ` IForgeRegistry ` parameter to the ` Mapping ` class and updated its usage in ` RegistryEvent ` and ` ForgeRegistry
updated variable assignments in Intersector . java for consistency to improve code readability and maintainability
add sbeDecodedLength , sbeLimit , and sbeLimit methods to MessageDecoderFlyweight and MessageDecoderFlyweight to
updated ElasticsearchContainerTest to use ` ELASTICSEARCH _ VERSION ` instead of ` 5.0 . 12 ` to ensure compatibility with the latest ES
[ java ] use ByteBuffer . wrap ( ) instead of ByteBuffer . wrap ( ) to improve memory efficiency by reducing memory usage
updated cluster and version properties in ClusterDefinition , GSInstallerClusterProvider , and GSInstallerClusterProvider classes to improve clarity and consistency in cluster
camel - 14284 : remove unused ` ` setconfiguration ( ) ' ' method in camel - hdfs
[ zeppelin - 1398 ] [ zeppelin - 1398 ] set dependency status in interpretersetting . java and add unit test
updated method calls in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest . java to ensure
added a check for ` targetCertConstraints ` in ` ForwardBuilder . java ` and created a new class ` BuildEEBasicConstraints . java `
added a ` initAfterFirstDbConnection ` method to ` JdbcPostgresqlDAO ` to ensure compatibility with different database versions
added a maximum message size for WebSocket requests in SimpleEchoClient and modified input buffer size handling in AbstractWebSocketConnection to ensure that WebSocket requests do not
replaced ` undeleteAll ` with ` rollbackUnDeleteAll ` in ` SegmentReader ` and added assertions in ` TestIndexReader ` to improve
added null checks for scopes in ClientRegistration and updated test cases in ClientRegistrationTests to improve robustness by preventing potential NullPointerExceptions
added null check for orderBy before adding explanation to avoid potential NullPointerExceptions when orderBy is null
updated import statements in ClusterEntrypointTest . java to use ` MatcherAssert . assertThat ` instead of ` Assert . assertThat ` to ensure compatibility with
cloudstack - 10286 : do n ' t check if uservmvm . gethypervisortype be back up
updated the initialization of HiveLog4j ( ) in HiveServer2 . java to improve logging clarity by using a more descriptive variable for
added a check for empty tasks before proceeding to avoid potential NullPointerExceptions when tasks are empty
make deletenode return a boolean instead of a void .
[ iotdb - 4071 ] fix flaky kventry and kventry to be a bit more efficient .
added checks for empty barcodes in Code128Reader , Code39Reader , and Code39Reader , Code39Reader , Code39Reader , and
replaced TreeSet with LinkedHashSet in SSLContextImpl . java and SystemPropCipherSuitesOrder . java to ensure consistent iteration order for cipher suites
updated character check logic in Escaper . java and added isControlCharacter method in InternationalizationTest . java to enhance character handling and improve test coverage
updated method invocation logic in ProviderSqlSource and SqlProviderTest to use CharSequence instead of String to improve type safety and ensure proper handling of string types
added null checks for aliasChildren and aliasChildren in InternalMNode . java to improve robustness by preventing potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` to handle page transitions in ` PagedView ` and ` Workspace ` classes to improve page
refactor JavaTemplate to improve clarity and functionality to enhance code readability and maintainability by using a more descriptive variable name
added setAccessible ( true ) method to WidgetInterceptor to ensure proper initialization of the method
added checks for " database . server . id " and " database . server . id " in ConnectorConfigGenerator . java to ensure proper handling of
updated Mozilla versions in AbstractRipper . java to include Windows NT 10 . 0 and Windows NT 10 . 0 to ensure compatibility
added a menu item for the web interface in BasicSystemUtils . java to enhance user experience by allowing users to navigate to the server ' s host
refactor value handling in HandleGetter to use a constant for the actual value name to improve code readability and maintainability by encapsulating
added error handling for record creation in EncryptedSlideShow . java to improve robustness by handling potential ArrayIndexOutOfBoundsExceptions
[ hotfix ] [ runtime ] fix checkstyle violation in filecheckpointio
added a call to ` loadBattlePassManager ( ) ` in ` Player . java ` to avoid null pointer exception to avoid potential NullPointerException
updated Docker image names from " testcontainers / sshd : 1.0 . 0 " to " testcontainers / sshd : 1
added a bigObject array to the ThresholdTest class to ensure proper memory management and prevent potential memory leaks
added checks for ` _ level ` in ` StdErrLog ` and ` StdErrLogTest ` classes to ensure proper logging behavior based on the
( chore ) camel - redisson : add a new method ` getRemoteSerivce ` to ` RedissonClient ` and ` Redis
added method ` isSelected ( ) ` and ` setSelected ( ) ` to ` MultiButton ` and ` setSelected ( ) ` methods in ` MultiButton
replaced UpNextActivity with NextUpActivity in CustomPlaybackOverlayFragment . java to ensure the correct activity is used for playback playback
do n ' t create replicasmanager if controller mode be not enable
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection instead of ReactiveRedisConnection to improve resource management and ensure proper closure of Redis connections
refactor ` getBrandColor ` method to use ` Utils . getBackgroundColor ( ) ` instead of ` TypedArray ` in ` ProgramGridCell
rename participantTransportAddressChanged to peerTransportAddressChanged in multiple classes to improve clarity and consistency in naming conventions
refactor ToolingApiLauncher to improve code organization to enhance maintainability and readability of the code
updated payload check query parameters in TestPayloadCheckQuery . java to improve test coverage for payload checks
replaced the ` putChar ` method with ` mask ` in ` ConsoleReader . java ` and added a new test case in ` ConsoleReaderTest
added user confirmation handling in BaseCommand . java to enhance user experience by providing clearer user information during command execution
rename org . graalvm . compiler . compiler . test to org . graalvm . compiler . api . test
[ hotfix ] [ runtime ] remove unnecessary parameter from slotsharinggroup constructor
updated compareTo logic to check for " one . util . streamex . emulateJava8 " instead of " one . util . streamex . emulate
updated Texture references from " wheel . png " to " sys . png " in DecalTest , MusicTest , and SimpleDecalTest to
refactor the registration and unregisterReceiver calls in Launcher . java to improve code readability and maintain consistency in naming conventions
updated import statements in HostsRemovedEvent . java to ensure compatibility with the latest package structure
added support for introspection in ClientDetailsEntity , ClientDetailsEntity , and IntrospectionEndpoint classes , and updated related methods in IntrospectionEndpoint to
added HTML encoding for session attributes in HtmlSessionInformationsReport . java to ensure proper handling of HTML encoding for session attributes
updated link tags in Query . java to include PhrasePrefixQuery and SpanQuery to enhance link functionality for better search functionality
updated condition checks in CommentsInserter , CommentsParser , and CommentsParser classes to improve code readability and maintainability
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation logic in NoValueOfOnStringType . java to
updated method signatures in AbstractAssert , Assert , and DateAssert classes to use generics instead of generics to enhance type safety and improve type safety
updated import statements and package names in JwtPlugin , JwtPlugin , and ThrowingFunction classes to improve clarity and consistency in naming conventions
refactor ` getUploaderBehaviour ` method to ` setUploaderBehaviour ` and ` setUploaderBehaviour ` across multiple classes to improve code clarity and
fix : do n ' t initialize final field in constructor
updated BitmapDrawable instantiation in ShadowDrawable . java to use Robolectric . newInstanceOf ( Bitmap ) to improve compatibility with Robolectric
changed the method name from ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to improve clarity
updated the pageindicator resource resource reference from ic _ pageindicator _ add to ic _ pageindicator _ current to reflect the current state of the page
added a variable for reinvocations in BasicInvocation . java to track the number of backups completed to improve clarity of log messages for better debugging
updated padding calculations in DefaultLookAndFeel . java to use inner height instead of height to ensure correct padding calculations for different font sizes
added a break statement to the break statement in Recognize . java to ensure proper flow control during execution
added HapticFeedbackConstants for locking home screen in Workspace , FolderNameEditText , and PopupContainerWithArrow classes to enhance user experience
updated formula type checks in ExcelBatchReader . java and added a new test for text formulas in TestExcelFormat . java to ensure correct handling
added a new test descriptor for assignment in anonymous inner class method in ImmutableFieldTest . java and implemented a dump method in ImmutableField . java to
added a ` userAgent ` variable and modified the initialization of ` CommaFeedConfiguration ` and ` HttpGetter ` to use ` getUserAgent ` to
added a required annotation to the AvroDataFormat and BarcodeDataFormat classes to ensure that the XmlAttribute annotation is not required for processing
updated logging level from info to debug in Utilities . java to improve logging granularity and reduce log verbosity
rename QueueTest to QueuedPipeTest in QueueTest . java to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to ensure compatibility with the latest Bukkit version and handle potential exceptions gracefully
refactor defaultroutescollector to use ` ObjectHelper . equal ( " false " ) ` instead of ` ObjectHelper . equal ( " false
added a vertexColor variable and modified color handling in PShape3D . java to enable customizable vertex color settings for better visual feedback
updated ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest ` to include ` isPkColumnFiltered ` and ` isPkColumnFiltered `
replaced Shadow . extract with Shadow . extract in ShadowMotionEvent . java to simplify code and improve readability
changed package declaration from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser . api ` across multiple
refactor class handling in GroovyEngine to simplify code and improve readability to enhance maintainability and reduce boilerplate code
updated package structure and added PluginContextListener class to include PluginContextListener and PluginContextListener to improve organization and clarity of the branding framework
replaced System . out . println with System . out . println in NativeCodeGenerator . java to improve code readability and maintainability
replace updateMotors ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve event handling by using fireChangeEvent ( ) instead of update
refactor ThrowableAssert _ hasCause _ Test to include a new test method for better clarity to improve readability and maintainability of the assertion logic
removed unnecessary flattenName and pack assignment in AutomaticDependencies . java to streamline code and improve readability
updated the condition for retrieving requested and allowed scopes in ClientDynamicRegistrationEndpoint . java to improve clarity and consistency in variable naming
added unit tests for Firefox options and capabilities in MarionetteTest . java to ensure proper functionality and functionality of the Firefox driver
added description property handling in multiple routes to enhance route management by allowing descriptions instead of descriptions
refactor JavacTreeMaker class to improve code readability to enhance maintainability and facilitate future updates
added edge weight setting in ImporterCSV . java to ensure edge weight reflects the current weight of the edge
updated the method ` getCostPerHour ` to include ` usageRecord . getStartDate ( ) ` in ` QuotaManagerImpl . java `
updated SQL query parameters in DatabaseMetaData . java and DatabaseMetaData . java to use ` r . getBytes ( 9 ) ` instead of ` null `
added a null check for binarized sentences in SentimentAnnotator . java to ensure that binarized sentences are not built by
added string concatenation for username and password in User . java and updated UserTests . java to include additional information to enhance user information for better debugging and
added null check for the message body in MessageHelper . java to ensure robustness by avoiding potential NullPointerExceptions
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory to taskdeploymentdescriptorfactory
refactor cansubscribe and cansubscribe to use groupmanager instead of subjid
added a reference to " maven . test . classpath " in AbstractJRubyMojo . java and removed unused @ SuppressWarnings annotation in Cucumber
refactor method handling in MethodHandleImpl and add a new userClassInSignature test in MethodHandlesTest to improve code readability and maintainability by
added imports for StopFilterFactory and NamedSPILoader and updated imports in CommonGramsQueryFilterFactory , AnalysisSPILoader , and Legacy
updated width and height checks in URLImage . java to ensure proper comparison of image dimensions
added a condition to check if the name starts with " META - INF / " before appending the package name to ensure that the package name
added conditional checks for Edt and Form in ImageDownloadService . java to ensure proper handling of image creation based on display state
updated assertions in StackWalkerTest . java for version checks in VersionCheck . major ( ) to ensure correct number of values based on the major version
changed the access modifier of the addViewportJob method from protected to public to allow access to the method from other packages
removed the ` partitions ` parameter from the ` buildFlow ` method in multiple classes to simplify the code and improve readability by eliminating unnecessary parameters
updated server restart behavior in TestDatabase . java to ensure server restarts on shutdown to improve reliability by preventing unnecessary server restarts
added null and empty checks in NodePathsConvertOperator and SchemaQueryMergeOperator to ensure robust handling of null and empty children in SchemaQueryMergeOperator
add harvestingtime ( ) method to callinfoframe . getstealingtime ( ) .
updated font drawing parameters in ParticleEditor . java for better readability to improve rendering accuracy and maintainability of the code
added configuration properties for " keyserver _ port " in UpgradeCatalog240 and updated test cases in UpgradeCatalog240Test to ensure
added a background color to the SvgViewerFactory class to enhance the visual appearance of the SvgViewer
updated import statements in ShadowKeyguardManagerTest , ShadowKeyguardManager , and ShadowKeyguardManager classes to ensure compatibility with the latest Robole
updated the ` containsExactly ` method to use ` asList ( varargs ) ` instead of ` accumulate ( first , rest , rest ) `
refactor Bucket4jFilterFunctions to use refillGreedy and refillGreedy for key resolution to improve code clarity
refactor German analyzer and stemmer classes to improve code readability and maintainability
added ` isMaterializedView ` and ` isMaterializedView ` to the ` Generator ` class and updated related logic in ` Optimizer `
added a catch block for NoClassDefFoundError in REngine . java to handle cases where no class definitions are found
refactor span handling in TraceWebFilter and TraceWebFluxTests to utilize a new ` Tracer . SpanAndScope ` for
updated exception handling in AbstractUpdateCommandStep to include a null check before setting the exception to avoid potential NullPointerException when the exception is null
added a base URL parameter to the SolrServerException constructor in CommonsHttpSolrServer . java to enhance error handling by providing more context for SolrServer
updated the return statement in HSSFPrintSetup . java to check if the landscape is not null to ensure that the print setup record
updated null return logic in JavaVoidObjectInspector . java to handle null values gracefully to improve robustness by preventing potential NullPointerExceptions
added validation for argument names in ArgDesc . java to ensure that argument names do not contain spaces to prevent runtime errors
added support for handling background location updates in AndroidLocationPlayServiceManager and updated PendingIntent handling in AndroidLocationPlayServiceManager to ensure proper handling of background
added a check for GL _ POINTS in MeshBuilder . java to ensure proper handling of primitive types in the mesh builder
trufflestring : make sure we do n ' t call execute ( ) if there be no array .
added a call to ` l . setCommandList ( isCommandList ( ) ) ` in ` ComboBox . java ` to ensure that the
nifi - 11486 : avoid backslash in pem file in tlsclientmanager and tlsToolkitStandalone
updated command - line arguments in ZkCLI . java to use localhost instead of localhost to improve clarity and maintainability of command - line
updated comparison logic in multiple files to improve code readability and maintain consistency in naming conventions
added a conditional check for remoteGrpcStatus in LocalFallbackStrategy . java to ensure that the event is only sent when remoteGrpcStatus is OK
refactor method signatures for consistency across multiple classes to improve code readability and maintainability
added a new entity ID to the tick entity in ForgeChunkManager . java to ensure that the tick entity is properly added to the world
added a method ` getErrorString ` to return an empty string instead of a hardcoded string to improve code readability and maintainability by en
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 : add support
updated serverURI handling in RFC2616BaseTest . java to use http : / / github . com / codenameone / codenameone /
added a call to addToHelperList in Construction . java to enhance the functionality of the construction process
added handling for escape sequences in GlyphLayout . java to improve handling of escape sequences in the layout
replaced ` Thread . currentThread ( ) ` with ` AccessController . doPrivileged ( ) ` in ` Transport . java ` and ` TCPTransport . java
added null checks for files and folders in ReceiveExternalFilesActivity . java to ensure proper handling of null folders and prevent potential NullPointerExceptions
added null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
updated the calculation of the deltap in BarrowmanCalculator and TubeCalc classes to improve code readability and maintainability
added type checks for ` Node ` and ` getEdgeTable ( ) ` in ` TimelineControllerImpl . java ` to ensure proper handling of
added a method to register extra components in BaseBrokerStarter to enable the registration of extra components for the broker admin application
added a new test method ` testBug4658 ` to verify the behavior of ` MultiCfQueryExecIT ` to ensure correct handling of
fix peergroup . getbestversionmessage ( ) and peergroup . getbestversion ( ) to be consistent with peergroup .
added a new variable ` mjPrev ` and ` mjUnchangedCycles ` and modified ` mjStored ` and ` mj
[ iotdb - 4071 ] fix a problem with the consensus snapshot trigger threshold
refactor multiple Java files for consistency to improve code readability and maintainability
added a check for ManagedService before registering JMXHelper to avoid potential NullPointerExceptions when the ManagedService annotation is not available
[ tika - 2424 ] fix hanlde non - unicode entry name in packageparser
added a new file TestSplitThruPhiDivMod . java with a test method to verify the behavior of modulo and modulo operations
refactor TemplateRegistry to utilize generic interfaces and superclass lookups for better type safety to improve code clarity and maintainability by encapsulating
updated the size of ByteArrayOutputStream from 512 to 1028 in ByteArrayOutputStream . java to improve performance by reducing memory usage
updated language exclusion logic in PlayerSettingsScreen . java to include Chinese , Persian , and Persian symbols to improve user experience by providing clearer information about
refactor byte array handling in TransferCompletionHandler to use a loop for better readability to improve efficiency and maintainability of the code
removed the ` addWindowFocusListener ` method from ` SelectAvatarMenu ` , ` SIPCommPopupMenu ` , and ` WindowAdapter ` classes to improve
updated error handling in SemanticAnalyzer to check for null values before throwing an exception to improve robustness by preventing potential null pointer exceptions
added scaling calculations for skeletal meshes in SkeletonRenderer . java to enhance the rendering capabilities of skeleton meshes
added the ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in the application
removed the method ` getAccount ( ) ` from the ` UserListItem ` class to streamline the code by eliminating unnecessary method
added tests for package install functionality in ShadowPackageManager and ShadowApplicationPackageManager to ensure correct handling of package names and activity names
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future updates
added TransactionCapsule and ReceiptCapsule fields to TransactionTrace class to enhance transaction tracing capabilities for better transaction management
added shuffle member list property to client . client . shuffle . member . list and client . client . shuffle . member . list ( )
replaced Text instantiation with CrawlDatum instantiation in SegmentReader . java to improve clarity and maintainability of the code
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future updates
updated TsfileDBConfig , QueryProcessExecutor , QueryProcessExecutor , and QueryProcessExecutor to use ThreadLocal for fetchSize to improve thread safety
corrected the spelling of " trunk " to " trunc " in GenericUDFTrunc . java to clarify the purpose of the error message
removed unused import of ExecutionContext from TaskletStep . java to clean up the code and improve readability
changed the variable name from ` title ` to ` empty ` in ` Lwjgl3WindowConfiguration . java ` to ensure the title is
fix asyncclientcall # body should not be null in response
add a new interface ` EmbeddedServerInstance ` to the ` io . micronaut . runtime . server ` package to indicate that the interface is
use macadapter instead of macadapter . macadapter . macadapter . macadapter . macadapter . macadapter . macadapter . macadapter .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcher ` for clarity to improve clarity and consistency in naming conventions
updated the return statement from ` toEnum ` to ` toEnum ` in ` HandlerLibrary . java ` to ensure correct handling of enum types
changed the visibility of the hideUnprivilegedObjects variable from private to final to ensure immutability of the hideUnprivileg
updated logging level from info to fine in ThreadedAcousticScorer and AudioDataSourcesTest to improve logging granularity and
added a check to save GiphyAndroid11 in IOUtils . java to ensure compatibility with Android Q and above for Android Q and above
refactored servicetaskvariablestest and servicetaskvariablestest to use variableinstanceentity instead of context
refactor multiple service classes to improve code organization to enhance maintainability and readability of the codebase
refactor logger retrieval logic in MavenLoggerFactory to use computeIfAbsent method to improve code readability and maintainability by reducing redundancy
deleted the DataOutputOutputStream . java file from HbaseObjectWritableFor96Migration . java to remove unused code to streamline the codebase
updated configuration values for autogather in TestAcidOnTez . java to ensure accurate tracking of autogather behavior during testing
updated logging level from info to debug in MavenEnhancePlugin . java to improve logging granularity for better debugging
added a new method ` getDefaultProviderName ( ) ` to ` Platform ` , ` OpenSSLProvider ` , and ` OpenSSLProvider ` to
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod to enhance the handling of instance fields in tests
added checks for ` onlyRun ` , ` testMethodNames ` , and ` testMethodNames ` in ` TestSuiteBuilder . java ` to
updated import statements and added whitespace checks in GroovyAutoComplete . java and GroovyLanguage . java to improve code readability and maintainability by consolidating
fix import of graphhopper on window
[ java ] fix http client to be able to connect to the correct endpoint .
updated the ` mHideSysUiScrim ` variable to be ` final ` and added a method to invalidate the ` mRoot ` variable to
added a canceled flag to the ` enqueue ` method in ` Call ` , ` OkHttpCall ` , and ` OkHttpCall ` classes to
refactor swipe handling logic in WindowTransformSwipeHandler to improve code readability and maintainability
changed the ` RequestMatcher ` interface from ` org . springframework . security . matcher . RequestMatcher ` to ` org . springframework . security
added ` IF ` parameter to the ` DeferredAttr ` class and created a new ` ImplicitLambdaConsideredForApplicabilityTest `
[ j2kt ] add test for boxedanddevirtualizedtypes ( ) and boxingvalueof ( )
added unit tests for the ` setDimensions ` method in ` DeviceConfigTest ` and ` DeviceConfig ` classes to ensure correct handling of density and
updated exception handling in multiple test files to use RuntimeException instead of LocalDateTime to improve code clarity and maintainability by standardizing exception handling
updated the icon from logo to mipmap . ic _ launcher in RootCursor . java to ensure the correct icon is displayed for the launcher
added a call to setContentText ( ) in FileUploader . java to ensure the error message is properly formatted for better debugging
refactor ConcurrentHashMap class to improve code readability to enhance maintainability and facilitate future updates
added a method to adapt user trades using AbucoinsFill in AbucoinsAdapters and AbucoinsTradeService classes to enhance trade
updated plot event handling in PlotSquared . java and added new event handling in Claim . java and SetBlockFast _ 1 _ 8 . java
alexeibarantsev : add support for firefox and internet explorer in htmlunitdriver
added handling for " varbinary " type in BlobType . java to ensure correct data type is returned for VARBINARY types
refactor cookie version handling in SetCookieSupport . java to improve code readability and maintainability
added synchronization to the LibFFIContext class to ensure thread safety during concurrent access to the code
replaced ` Context ` with ` ContextInternal ` in ` InboundBuffer ` and added a new ` checkThread ` method in ` InboundBuffer
updated the ` waited ` variable from ` true ` to ` true ` and added a new ` deadServerNoTimeout ` method in ` LdapTimeout
updated usage message from " UniocdeData . txt " to " UnicodeData . txt " in CharacterName . java and Properties . java to
[ cxf ] fix cxfmessageheadersrelaytest to use inoutheader instead of inoutheader
refactor multiple SynthComponentUI classes to improve code organization to enhance maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver , ComponentAssemblySaver , and BoosterSet classes to enhance functionality by allowing booster
added password authentication for proxy host and port in JabRef . java to enhance security by enabling password authentication for proxy requests
refactor MetricsUtil and MetricsUtil classes to use a time variable instead of a hardcoded value to improve code readability and maintainability by
updated error handling in Class . java to return false instead of throwing an InternalError for JEP 359 support to ensure compatibility with JEP 359
fix testipcutil . testipcutil . testipcutil . testipcutil . testipcutil . testipc
replace chunkedTransfer with chunkedTransfer in NettyRoutingFilter . java to simplify code and improve readability
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that attributes are properly cleared before processing
added a pollingPeriod parameter to the VerificationAfterDelayImpl constructor and updated related methods to include a timeout parameter to enhance error handling by providing more
added compaction check in multiple classes to ensure proper handling of compaction based on session state ' s compaction status
[ zeppelin - 1186 ] fix interpreterprocess . copytocontainer ( ) to work with jar file .
hbase - 13232 cleanup catalog tracker in hbase admin . gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
removed the ` calcXBounds ` method from ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to stream
added exception handling in SimpleSAX . java to ensure proper resource management and prevent memory leaks
removed the header buffer in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified test cases in ` Java17TypeSignatureBuilderTest ` to
added a null check before closing the ResultSet in JdbcExecutor . java to avoid potential NullPointerExceptions when the ResultSet is not initialized
updated driver version values from - 1 to 6 in DerbyDatabase . java to ensure compatibility with the latest driver features and improvements
added a new test descriptor for boolean literals in UseStringBufferLengthTest . java and modified the return statement in UseStringBufferLength . java
removed error logging in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
replaced the method ` createDb ( ) ` with ` createDb ( ) ` in ` TestIndexHints . java ` to ensure proper resource management
refactor CreateCustomMetric , ListResources , ListResources , and ListResources classes to improve code organization and maintainability
added a new configuration variable ` offPeakMaxCompactSize ` and updated related methods in ` ExploringCompactionPolicy ` and ` Exploring
added handling for " address " node in BitstampDepositAddress . java and created a new JSON test class for deposit addresses to enhance functionality and ensure
updated error handling in BufferingResponseListener to use response . abort instead of throwing an IllegalArgumentException to improve error handling by providing a clearer error
updated the method call from ` linkInDeletedDirectories ` to ` linkPath . toAbsolutePath ( ) ` in ` ProjectView . java ` to
renamed ` InvocationFinishedEvent ` to ` InvocationType ` and updated its implementation in ` DefaultMetricsRegistry ` and ` DefaultMetricsRegistry ` to improve
added support for multicast support in the NetworkInterface enumeration to ensure compatibility with multicast protocols
removed redundant checks for valid check sums in ChangeSet . java to improve code readability and maintainability
added a clone method to BufferedChecksumIndexInput in BufferedChecksumIndexInput . java to ensure that the clone method does not throw an UnsupportedOperationException
refactor radius calculation in Circle . java for better readability to improve code readability and maintainability by reducing redundancy
updated frequencyBand assignment logic in P25Channel . java and modified return statement in P25ExplicitChannel . java to ensure proper handling of frequency bands
updated variable names and parameters in GestureDetector . java and GestureDetector . java for better clarity to improve code readability and maintainability by
changed the default value of the DEFAULT _ REPLICATE _ ON _ WRITE flag from true to false in CFMetaData . java to disable
added a ` lastFillTime ` parameter to ` CryptoFacilitiesAuthenticated ` , ` CryptoFacilitiesTradeServiceRaw ` ,
added ` getDelegate ` method to ` TraceCallable ` , ` TraceRunnable ` , and ` TraceRunnable ` classes to provide access to the delegate
refactor file synchronization logic in FileActivity and FileDisplayActivity to improve clarity and functionality to enhance code readability and maintainability by consolidating
added quiche stream writable method to ForeignIncubatorQuicheConnection and JnaQuicheConnection to improve error handling and
added a new parameter ` true ` to the ` JavascriptContext ` class to improve code readability and maintainability
replaced ` Align . left ` with ` TableCell ` in ` BaseTextFormattingHelper ` and ` TableCell ` and ` TableCell `
added a new file ` TracingAutoConfiguration . java ` that implements tracing functionality to facilitate tracing functionality in the application
updated the insertion logic in Submissions . java to use a secondP variable to improve code readability and maintainability by encapsulating
updated the ` getPrunedQueryableSegments ` method to accept a ` listOfQueryableSegments ` parameter and modified the ` getPrunedQueryableSegments
refactor VertxBufferTest class for improved readability to enhance maintainability and ease of understanding for future development
fix a bug in the messagesubmissionchunk and add a new test case for mapimessageextrahyphensubmissionchunk .
changed the access modifier of the mContext variable from private to protected in PredictionAppTracker . java to allow subclasses to access the context directly
removed unused import statements from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve readability
added a new exception class ` MongoDataIntegrityViolationException ` and updated related imports in ` MongoTemplate ` and ` MongoTemplateTests ` to
[ hotfix ] [ runtime ] return jobcoordinationfuture instead of jobcoordinationservice . jobcoordinationfuture ( )
refactor ` bitsToHumanReadable ` method to use ` HashMap ` instead of ` bitsLen ` and ` bytesToHumanReadable ` to improve
removed redundant check for TieredMergePolicy in TestMergePolicy . java and added a new test method in TestMergeOnFlushMergePolicy .
added a check for mOverviewStateEnabled in RecentsView . java to avoid unnecessary processing when mOverviewStateEnabled is false
updated error message in CpuNDArrayFactory . java for better clarity to provide clearer context for usage issues related to CPU without instructions
replaced ` loadSettingModels ` method with ` referencePropertiesInputStream ` in ` GitBlit . java ` and ` contextInitialized ` methods to enhance
added null checks for incoming fields and documents in FilterLeafReader . java to prevent NullPointerExceptions when input fields and docsEnum cannot be null
[ bouncy castle ] add secretkeysize provider to ensure key size be non - negative
updated exception handling in NetSocketReader , SoftEndOfStreamException , and SocketUtils classes to improve clarity and maintainability of exception handling logic
removed unused imports from multiple Java files to clean up the code and improve readability
updated size and attributes from 9 to 10 in BundledDistributionTest and PostgreSQLTest for improved test coverage to enhance test coverage and ensure
[ hotfix ] [ runtime ] add pipeline . name configuration option to streamexecutionenvironment
updated scaling calculations for two - panel devices in OverviewState . java to ensure correct scaling based on device profile status
refactor IcePlainsBiome class to extend SnowyBiome and introduce a PopulatorTree for PopulatorTree to improve biome structure and maintainability
refactor methods in DataUpdateManager and StorageUtils to simplify time comparison logic to improve code readability and maintainability by reducing redundancy
added isqualified flag to ` ThisReference ` , ` CompilationUnitBuilder ` , and ` CompilationUnitBuilder ` in ` ThisReference ` , `
updated regex pattern in XhamsterRipper . java to use \ \ w instead of \ \ wmde to ensure correct matching of the
fix bug in quickworld . getall ( ) .
alexeibarantsev : fix nullpointerexception in oracledialect
updated condition in FlutterConsoleFilter . java for consistency to improve code readability and maintainability
added a ` mNumberOfAllFiles ` parameter to the ` FileMenuFilter ` class and updated related methods in ` FileDisplayActivity ` to enhance
[ java ] add termlength mask to networkpublication . termoffset ( )
refactor GuildUpdateOwnerEvent class to improve code readability to enhance maintainability and facilitate future updates
update inPortalTicks logic in Player . java and Entity . java to ensure inPortalTicks does not exceed 80 for creative players
added compression logic for chart data in ClusterMonitorTileSkin . java to improve layout responsiveness for chart data visualization
[ hotfix ] [ runtime ] fix typo in javadoc
updated the calculation of lengthDataBits from int to long in Base64 . java to ensure compatibility with larger data types and avoid potential overflow issues
removed unnecessary null check for header in RendererConfiguration . java to simplify code and improve readability
cloudstack - 10265 : add a check for the same disk offering with custom service offering .
updated order handling in HitbtcAdapters and HitbtcAdapters to use LimitOrder instead of HitbtcAdapters to improve order
updated variable names from ` idleCount ` to ` consecutiveIdleCount ` and ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager
updated the ` @ ConfigurableService ` annotation from " automation : jrubyscripting " to " automation : jrubyscripting " to improve
updated the ` name ` variable from ` name ` to ` displayName ` in ` ConfigCategory . java ` to improve clarity and consistency in variable naming
added a condition to check for preciseExchangeAmount in ParticipateAssetIssueActuator . java to ensure that preciseExchangeAmount is not
removed unnecessary loop condition in FeedUtils . java to streamline code execution by eliminating unnecessary loops
added a new test method ` testHDF4 ( ) ` to ` HDFParserTest . java ` to ensure correct parsing of HDF
added a new constant ` CALCITE _ 6092 _ FIXED ` and updated the cast method in ` SqlOperatorTest . java ` to
refactor null checks in IDEEditor . java to improve code readability and maintainability
added a new method ` quietCloseAll ` and ` quietCloseAll ` to handle ` AutoCloseable ` and ` AutoCloseable ` to
updated the command - line argument name from ` posBtn ` to ` common _ yes ` in ` RemoveFileDialogFragment . java ` to improve clarity
added a null check for ` srcWidth ` and ` dstHeight ` in ` Pixmap . java ` to avoid potential NullPointerExceptions when
replaced ` ReflectionHelpers ` with ` Unsafe . class . getClassMethod ` in ` UnsafeAccess . java ` to enhance security by using
updated regex pattern formatting in GUIUtil . java and added test cases in GUIUtilTest . java to improve regex matching accuracy and ensure correct handling of
refactor conflict handling in CachedRowSetWriter to use long conflicts instead of boolean to improve code readability and maintainability
updated version checks in SdkConfigurationNotificationProvider , FlutterSdkUtil , and FlutterSdkUtil classes to ensure compatibility with newer SDK versions
added a conditional check for reference equality in ReferenceMemory . java to ensure that references are only assigned when the reference is the same as the same
added seed file handling in Injector . java to ensure seed URLs are processed correctly and improve error logging for missing seed files
added a condition to hide the original view based on the ' hideOriginal ' tag to ensure that the original view ' s visibility is only visible when
updated maxNodes calculation from 0 to 0 in DefaultLoopPolicies . java to ensure correct calculation of node counts based on the current limit
added logging for unsupported texture coordinates in CombinedTexture and UVCoordinatesGenerator classes to improve error handling and provide clearer logging for unsupported texture coordinates
added a check to prevent deletion of the barcode file in EncodeActivity and SupplementalInfoRetriever classes to ensure that the barcode file is not deleted
[ hotfix ] [ kafka ] fix tracingconsumer . seek ( ) and close ( ) in tracingconsumer .
updated the ` handle ` query to use ` oldPrefixLength ` instead of locate ( ' / ' , ' % ' , ' % ' )
replaced ` convertedValsList . addAll ( collection ) ` with ` convertedValsList . addAll ( collection ) ` in ` JSONSerializer .
added a deprecated constructor to AbstractTimer to indicate that this class should no longer be used in favor of an alternative implementation
added a check for nightly builds in MainWindow . java to indicate that the version of Universal Gcode Sender is a nightly build
updated the ` getResponsesSortedByRecipient ` method to accept a ` sortByTeam ` parameter and modified the ` getResponsesSortedByRecipient ` method
updated the return statement in UnnecessaryThrows . java to include ` ` declarations . " to clarify the purpose of the return statement
replaced the ` CacheApplication ` class with ` CacheData ` in multiple classes to simplify the codebase by removing the ` CacheController ` class
updated method calls from ` realObject . getApplicationContext ( ) . startService ( ) ` to ` RuntimeEnvironment . application . startService ( )
refactor StatisticsServlet class to improve code readability to enhance maintainability and facilitate future updates
updated configuration update logic in RuntimeEnvironment . java to ensure compatibility with devices running KITKAT and above to ensure compatibility with newer Android versions
add a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` to ` VersionDefinition
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during processing
added " com . sun . org . apache . xml . internal . resolver . helpers . " and " com . sun . org . apache
updated method names from ` save ` to ` updateExecutionContext ` across multiple classes to improve clarity and consistency in method naming conventions
added handling for loop exit nodes in GraphUtil . java to ensure proper input processing for loop exit nodes
refactor SearchAndRecommendationsScrollController to use WidgetsRecyclerView instead of RecyclerView to improve code clarity and maintainability by using more descriptive
added a check to ensure the terminal is supported before proceeding to avoid unnecessary processing when the terminal is not supported
updated time allowed logic in CloudExitableDirectoryReaderTest , LBHttpSolrClient , and LBHttpSolrClient to use int instead of
added a check for session validity before flushing sessions in AbstractSessionCache and updated session handling in RemoveSessionTest to improve session management and ensure session
added null checks for columnNames in ChangedIndexChangeGenerator . java to avoid potential NullPointerExceptions when columnNames is null
replaced ` java . util . Vector ` with ` ArrayList < RadioButton > ` in ` ButtonGroup . java ` to improve code readability and maintain
refactored UserManagerCompat and UserManagerCompatVNNMR1 and UserManagerCompatVN and UserManagerCompatVN to
added ` getDatabaseMajorVersion ` and ` getDatabaseMinorVersion ` methods to ` MockDatabase ` , ` AbstractDatabase ` , and ` HibernateDatabase
updated the ` spawnThreadToCompareActionGraphs ` method to use ` ActionGraphAndResolver ` instead of ` ActionGraph ` to improve clarity
added new classes ` LockDatabaseDesc ` , ` UnlockDatabaseDesc ` , and ` UnlockDatabaseDesc ` , and ` UnlockDatabaseDesc ` ,
refactor RankingTopComponent and RankingToolbar to use a new RankingUIModel instance to improve code readability and maintain
added disconnect message handling and improved logging in HandshakeHandler and NodeImpl classes to enhance connection management and provide clearer logging for disconnection messages
added a new test method ` testSetDeleteSG ` to ` IoTDBAuthorizationIT ` to verify the behavior of ` SET STORAGE GROUP
chore ( deps ) : fix typo in documen , documen , and documen proto
refactor variable type validation logic in Assertions and FindMissingTypes classes to improve type validation accuracy and provide clearer error messages for missing or malformed variables
added ` afterTestClass ` method to ` StepScopeTestExecutionListener ` and ` beforeTestClass ` methods in ` StepScopeTestExecutionListener
refactor CountersManager to use a CachedEpochClock instead of AtomicBuffer to improve code readability and maintainability by using more descriptive
updated logging statements in MultiSteps , SendEmail , and SendEmail classes to improve code readability and maintainability
added null checks and cloning of joinKeys in JoinDesc . java to ensure proper handling of join keys in the join process
added PrincipalResolver annotation to WebAuthnConfiguration to enhance authentication handling by allowing customizable principal resolvers
updated the ` addSettingsFromFile ` method to accept a ` ImmutableList < Path > searchPaths ` parameter in ` XcconfigStack ` and `
changed the type of the ` binarizedTrees ` variable from ` to ` final ` in ` Oracle . java ` to ensure immut
[ hotfix ] [ javadocs ] [ runtime ] ignore unaligned checkpoint option until rescaling of unaligned checkpoint
[ calcite - 2424 ] allow queryparser to accept unsupported operation
[ gr - 12247 ] add log to compiletheworld ( ) and log the test .
do n ' t throw CannotDelambaException if lValue is a LocalVariable instance to ensure proper exception handling for uninitialized variables
added support for MySQLDatabase in CreateTableGenerator . java to ensure correct handling of timestamp column types for MySQL databases
added classloader management in EnvConfiguration . java to ensure proper class loader management in the application
added a condition to set the ejection delay based on stageNr in SimulationListHandler . java to ensure that the motor configuration reflects the
updated method names from FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig in CommandLineRunner and SpringApplicationTests to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class implementation to improve code readability and maintainability
updated issuer claim validation methods to accept a Optional < OAuthRegisteredService > parameter to enhance flexibility in handling OAuth registered services
added null checks for ` coll ` and ` coll ` in ` ClusterState . java ` to improve robustness by preventing potential NullPointerExceptions
refactor alignment setting in TextArea . java to use getAllStyles ( ) instead of getStyle ( ) to improve code readability and maintainability by using
added support for foreign database and schema names in ForeignKeyColumn and AbstractRelationalDbmsHandler to enable dynamic configuration of foreign database and schema names for better
[ java ] throw a timeout if the leader be not ready to notify the leader .
replaced static imports with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice ` to improve encap
added null and empty root checks in FileSelection . java and modified selectionRoot handling in TestBugFixes . java to improve error handling and ensure
added a deprecated method ` onInventoryTick ` and ` onInventoryTick ` in ` IForgeItem ` and ` IForgeItemStack `
replaced FileOutputStream with ByteArrayOutputStream and added war resource handling in Export . java and IOUtil . java to improve code readability and maintainability by
added a null check for getSherlockActivity before invalidateing the options menu to avoid potential NullPointerException when getSherlockActivity is not initialized
refactor widget binding logic in AppsCustomizePagedView , Launcher , PendingAddItemInfo , and PendingAddItemInfo
added a new constant ` CAPABILITY _ AIR _ PRESSURE ` and ` CAPABILITY _ AIR _ QUALITY _ ACCUR
do n ' t check if the contact be not in the profile page , so we can use the session instead .
added environment variable " AAPT " and " AAPT2 " in Genrule . java and updated test cases in GenruleTest . java to
do n ' t dump access table if TruffleCompilerOptions . TruffleInstrumentBranches . getValue ( ) be false .
added a null check for the message before disposing to avoid potential NullPointerExceptions when the message is not initialized
added ` @ Getter ` and ` @ Getter ` annotations to ` TronStoreWithRevoking ` , ` TxCacheDB ` , and `
updated log message in CoreContainer . java to provide clearer warnings when SLF4J version is not yet implemented for log4j
replaced print stack trace print statements with fail statements in CategoryPlotTests . java to improve error handling and provide clearer failure messages
replaced ByteArrayOutputStream with SmallByteArrayOutputStream in IOSImplementation . java and created a new SmallByteArrayOutputStream class for writing byte arrays to improve performance and
updated OGLESShaderRenderer to use VertexBuffer instead of HashMap in OGLESShaderRenderer and Shader classes to improve code readability and maintain
updated the connection name from " territory = en _ US " to " shutdown " in AbstractDIHJdbcTestCase . java to ensure proper resource management
added null checks for ` firstExchangeTimestamp ` and ` lastExchangeCompletedDateObj ` in ` RouteInfo . java ` to improve robustness by
updated TestHtmlTag and TestUseOption classes to use a default language instead of a hardcoded default language to improve code readability and maintain
updated the condition in CompletionProvider to check if the result is incomplete before proceeding to ensure that the result is only processed when there are items
updated command - line argument handling in HybridClusterIntegrationTestCommandLineRunner to use timeColumnName instead of timeFieldSpec to improve clarity and maintainability of
updated output format handling in SiteSnapshotVariationsTest , SiteSnapshotVariationsTest , and OutputOptions classes to ensure correct output format is used for
updated the condition in DeviceProfile . java to include a conditional check for the hotseat bar bottom space to improve code readability and maintainability by
added equals and hashCode methods to AnimationList , SceneKey , and GltfModelKey classes to ensure proper comparison and hashing of objects
added a ` setDate ` method to ` AbstractGenerator ` , ` Generator ` , and updated the ` setDate ` method in ` HttpGenerator ` ,
replaced ` Adler32 ` with ` CRC32 ` in ` Store . java ` to improve code readability and maintainability by using a more
added null parameter to the XenHeartBeatInterval configuration in XenHeartBeatInterval configuration to ensure that the heartbeat interval is
added a new constant ` ZERO _ AREA _ FIN ` and updated warning checks in ` FinSetCalc ` and ` FinSetCalc `
updated JSON serialization and deserialization in ElasticsearchIO . java to improve JSON serialization and deserialization of DocumentMetadata instances
hhh - 16458 add trunc function to commonfunctionfactory . datetrunc _ trunc ( )
added a check for memory pool not found in MetricUtils and updated error handling in MetricUtilsTest to improve error reporting and provide clearer diagnostics
added JavaScript flag to UserTests and modified return statements in FileAccess and FileTreeNode classes to enhance security by allowing the use of JavaScript for signing up
updated error messages in ValidationTask . java to use PROTOTYPE _ FACTORY _ TYPE and PROTOTYPE _ FACTORY _ TYPE to improve
updated BACKFILL string from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java
updated return statements in PrecompiledContracts . java and added a new id variable in PrecompiledContracts . java to improve clarity and maintainability
refactor AllAppsContainerView to use BubbleTextView instead of AlphabeticalAppsList . AdapterItem to improve code readability and
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.16 . 0 (
updated the start method in ResourceService , ResourceHandlerTest , and ServletContextHandler in ResourceServiceTest , ResourceHandlerTest , and ServletContextHandler to improve
removed unnecessary conditional check for the WORKSPACE _ CUSTOM feature in Cling . java to streamline code logic for better readability and maintain
trufflejdkservice : remove assertion that do n ' t work
added JUnit @ Ignore annotation to the ` shadowInvocationWhenChildIsInstrumentedButUnshadowed ` method in ` ClassicSuperHandlingTest
updated import statements in ItBitDemoUtils , ItBitOrderBookDemo , ItBitTradesDemo , ItBitTradesDemo , ItBit
refactored code to use parameter . isDefined ( ) instead of null check
added ` private ` constructors to ` Utils ` and ` ApplicationUtils ` classes to enforce immutability of ` Utils ` and ` Whois
fix npe in regionsapiutil . getobjectinputstream ( ) . getobjectinputstream ( )
replaced instances of ` o . getClass ( ) . getName ( ) ` with ` java . util . Vector ` in ` Util . java ` to
added tableNameWithType parameter to the warning message in RetentionManager . java to provide more context about the retention time being skipped
modified the condition in QueryExecutorImpl . java to use trim ( ) instead of trim ( ) for fragmentList to ensure proper handling of empty string
updated the exception message from ` path . toFile ( ) ` to ` modFile . getFilePath ( ) ` in ` ModFileResourcePack
refactor nodeTransformerGroup and edgeTransformerGroup handling in PartitionToolbar . java and edgeTransformerGroup . java to improve code readability and maintainability
refactor conditional checks in RecentsView . java to improve code readability and maintainability to enhance code readability and ensure proper handling of task
updated the ` calculate ` method to accept ` BMIViewObject ` instead of ` Map < String , String > ` in multiple classes to enhance
replaced Comparator . comparing with Comparator . comparing for key comparison in QueryCommand . java to improve readability and maintainability of the code
fix the damage calculation in entity . getblock ( ) .
updated environment variable handling in WindowsProcessAddressSpace , J9DDRImageProcess , and NewElfDump classes to improve code readability and
added plugin property handling in OptionsParser and corresponding tests in OptionsParserTest to enhance the flexibility and functionality of plugin configuration handling
updated the condition in HashJoinBatch to check if the hashTable is empty before proceeding to ensure that the hashTable is not null or empty
added a condition to check if ` timestamp . getTime ( ) ` is non - negative in ` Timestamp . java ` and updated related tests accordingly to
[ java ] use ` archivecontext ` instead of ` archivecontext ` in clusteredserviceagent .
added a condition to check if the compile threshold is not zero and updated assertions in LambdaForm . java to ensure that the method only executes when
added a new GeneralEnvelope and corresponding test cases in AbstractTest . java and related test classes to enhance testing capabilities for image processing in the application
added new constants for NAMESPACE _ LAUNCHER and NAMESPACE _ LAUNCHER in TogglableFlag and LauncherAppState to
updated log messages in DockerClientFactory from debug to info in DockerClientFactory . java to improve clarity of log messages for better debugging
added a check for ANDROID platform in SnapshotScreenListener . java to prevent processing on non - ANDROID platforms
added assertion for ` containsString ` in ` RoutesTest . java ` to enhance readability and maintainability of the code
added new interface ` ByteToLongFunction ` , ` FloatToLongFunction ` , and ` ShortToLongFunction ` , and ` ShortTo
updated getSubsColor method to return a string instead of a int to enhance flexibility in color handling and improve logging clarity
added a condition to check if the future is complete before deregistering the invocation registry to ensure that the invocation registry is only deregistered when the future
replaced the call to ` output ( null , nop ) ` with ` output ( null , null ) ` in ` AbstractWebSocketConnection . java
added a null check for the extras before opening the WelcomeActivity and updated intent handling in SignupActivity to improve robustness by ensuring the intent
added a new ` CheckedTextView ` class and a new ` ShadowCheckedTextView ` class in ` Robolectric . java ` to implement a
added Serializable interface to the ParserState class and updated access modifiers in AccessorProperty and Property classes to ensure proper serialization of the ParserState class
added a new method " identrustdstx3 [ jdk ] " to the VerifyCACerts . java file to enhance cert verification capabilities
removed the TEMPDIR attribute from WebInfConfiguration . java to streamline the code by eliminating redundancy
[ smack ] fix the nick of the occupant nick in the user chat .
added context parameter to QuicSession constructors and updated related parameters in QuicSession and QuicSession classes to enhance session management by allowing context
replace NoMergeScheduler with LogMergePolicy in CreateIndexTask . java to ensure consistent merge policy configuration across the codebase
updated null checks in ICU4JImpl and TextPosition classes to improve code readability and maintainability
replaced ` AddDefaultValueChange ` with ` ComputedDateValue ` and ` ComputedDateValue ` in ` AddDefaultValueChange ` and ` Abstract
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future updates
refactored metadata resolution logic in SAML2Configuration and SAML2FileSystemMetadataGenerator to check for existence before storing metadata to improve error handling and ensure
changed the access modifier of the printer variable from private to protected in GraphPrinterDumpHandler and IdealGraphPrinter to allow subclasses to access the printer
added BigDecimal import for BigDecimal and set average price in HuobiAdapters . java to ensure accurate calculation of order values in the order
updated methods in ProjectionOperation , TypeBasedAggregationOperationContext , and TypeBasedAggregationOperationContext to use the target field instead of a string to improve clarity and
fix bug in fakeplayer # addviewer0 ( )
added constant state handling in Workspace , FolderAdaptiveIcon , and ShiftedBitmapDrawable classes to improve code robustness and maintainability by ensuring
refactor connection handling in SPDYClient to improve clarity and maintainability to enhance code readability and maintainability by encapsulating connection
fix : fix nullpointerexception in protostuffobjectoutput . writeobjectnull ( null , null )
pdfbox - 4071 : fix typo , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code organization to enhance maintainability and readability of the code
added a check to return early if no axis are displayed in DrawAxis . java to improve performance by avoiding unnecessary processing when no axis is displayed
added a unsafeSetFilter parameter to the setFilter method calls in Texture . java to ensure proper handling of unsafe textures during processing
updated the returnToWorkspace method call from ` wi ` to ` wi ` in ` XmlWorkflowServiceImpl . java ` to improve code readability
updated SSL connection handling in CustomUrlJob . java and added a new SSL trust mechanism in CustomUrlTrustEverything . java to enhance security by
refactor encoding handling in EncodingConfigurationTableModel and MediaFormatImpl to use getRealUsedClockRateString ( ) instead of getClockRate (
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
updated the ` getProductNameForBuildTargetNode ` method to use ` moduleName ` instead of ` - Swift . h ` in ` AppleLibrary
added locking mechanism in TestSlot . java to ensure proper resource management and prevent memory leaks
no effective change - add test for findidwithInheritance ( )
updated WebSocket response handling in WebSocketServletRFCTest . java to improve readability and maintainability of the code
[ wasm ] do n ' t reset reference stack when call the same function .
added TTL configuration to ClickHouseLogCollectClient and updated related logging settings in ClickHouseLogCollectConfig and ClickHouseLogCollectConfig classes to
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper , CustomPreconditionWrapper , and XMLChangeLogSerializer to
updated DeploymentExceptionTest to use HandlerCollection instead of QueuedThreadPool to improve thread management and context management during test execution
added error handling for initialize and initialize methods in CommonsApplication , NearbyController , and NearbyController classes to improve robustness by preventing
added a null check for objectName in PostgresDatabase . java to avoid potential NullPointerExceptions when objectName is null or empty
updated error message in Command . java and TestPrint . java to improve clarity of error reporting for file access issues
[ hotfix ] [ table - planner - blink ] make the planner class static
updated X500Name handling in KeyTool and Resources classes to improve clarity and correctness in subject retrieval logic
added a deprecated annotation to RuntimeOptions . java to indicate that the method is outdated and should no longer be used
removed unnecessary byte array conversion in Utils . java to simplify code and improve readability
added a new interface ` PermissionEvaluator . java ` that implements a ` PermissionEvaluator . java ` interface to provide a mechanism to check if a permission
added ERASE _ LINE _ ON _ FINISH option to BRACKETED _ PASTE and BRACKETED _ PAST
[ hotfix ] [ master ] check if the server be not in the online server list
updated exception types from CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ MERKLE _ ERROR in multiple classes to
refactor jar file handling in ExpandWar . java to use URLConnection for better resource management to improve code maintainability and readability by encaps
fix ( http ) : do n ' t throw exception when handler be complete
change the layout of the wrapper from center to centerAbsolute in Picker . java to ensure the wrapper is centered on the center of the spinner
added a method to recycle memory segments in NetworkBufferPool . java and a corresponding test in NetworkBufferPoolTest . java to ensure memory segments are
added a static variable ` newMbeanServer ` and changed the initialization of ` MBeanServerFactory . createMBeanServer ` to ` MBeanServerFactory . createMBeanServer
replaced ` AndroidJUnit4 ` with ` RetryTestRule ` in ` AbstractIT . java ` to utilize ` RetryTestRule ` for
updated transaction handling in CallTask and QueryStateMachine to use session ID instead of autoCommit to improve clarity and maintainability of transaction management logic
updated import statements in CsvFieldType , CsvTable , and CsvTableScan classes to improve code clarity and maintain consistency in naming conventions
added support for " javax . net . ssl . DistinguishedNameParser " and " javax . net . ssl . khronos
[ hotfix ] [ test ] remove unnecessary code in streamtasktimertest
added null checks for ` _ uri ` and ` _ uri ` in ` Request . java ` and ` RequestTest . java ` to ensure proper
updated the KEY _ LAST _ SEEN _ VERSION _ CODE constant from " lastSeenVersionCode " to " WhatsNewActivity .
added method ` sessionAvailable ` and ` sessionUnavailable ` to the ` SessionManager ` class to enhance session management functionality for better session management
added a package to the ServiceLocator to enable the inclusion of the liquibase . pro package in the application
replaced ` ArrayList < SyncedFolder > ` with ` deleteOtherSyncedFolders ` in ` MainApp ` and ` SyncedFolderProvider
updated the ` loadWithNewGlobal ` method to accept a ` Object [ ] ` parameter and modified the ` loadWithNewGlobal ` method to
refactor regexp handling in FastPathResolver . java for improved readability and maintainability to enhance code readability and maintainability by reducing redundancy
updated weigher method calls to use ` toIntExact ` instead of ` length ( ) ` to improve code readability and maintainability by using
updated method names from ` isExceedRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple classes to improve clarity and consistency
added support for " LAG " function in UnsupportedOperatorsVisitor and updated related tests in TestWindowFrame to ensure compatibility with additional SQL functions
reset the headers of the proxy request in AbstractProxyServlet to ensure that the proxy request headers are reset before proceeding
added a condition to check if SA attach is not expected to work in CompressedClassSpaceSizeInJmapHeap . java to ensure that SA
added null checks for bgColor in GraphicsDevice . java and created TranslucentWindow . java with a new TranslucentWindow . java file
added null checks for userInfo and email in UserInfoActivity to improve user experience by providing clearer feedback when no info is available
added custom serialization methods for Precompiled headers in PrecompiledHeaderData , PreprocessorDelegate , and PreprocessorDelegate classes to ensure that precompiled headers
[ hotfix ] [ table - common ] add update - mode property to kafkatablesourcesinkfactorybase
added a new file ` MultipleOutputsIntegrationTest . java ` to validate the behavior of named output groups in the build process to ensure that named output
added a check for the old content in FileSettings . java to ensure the correct content is used for setting keys and values
[ flink - 18186 ] [ runtime ] fix sslcontext to be able to load versioned flow into the flow .
replaced ` new Object [ ] ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java ` to
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable taskbar mode switching for improved performance
added new DeviceStatus entry for leaving - dock and energy - save - mode in DeviceStatus . java to enhance device status tracking for better user experience
do n ' t throw exception when load item model from the normal location
added JUnit Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
add a check for 2x graphics in PSurfaceJOGL . java to ensure proper handling of pixel scales based on graphics type
refactor RussianLowerCaseFilter class implementation to improve code readability and maintainability
updated configuration handling in CsvBulkLoadToolIT and QueryUtil classes to utilize PropertiesUtil for better configuration management to improve code clarity and maintainability
updated displayName to replace ` File . separatorChar ` with ` File . pathSeparatorChar ` in ` FileDisplayActivity . java ` to ensure consistent
[ jme3 ] make wavloader extend SeekableStream and wavloader class
added a boolean parameter ` repeatFirstLineIndent ` and ` setIndent ` to ` ColumnText ` and updated indentation logic in ` ColumnText `
updated the type of the oid comparison in Oid . java to ensure type safety and prevent potential ClassCastExceptions
[ hotfix ] [ runtime ] fix npe in hikaripool . getmetricstrackerfactory ( )
[ gr - 27335 ] fix checkstyle violation in loopex
added focus paint to the buttons array in WindowsPlacesBar . java to improve user interface responsiveness and visual feedback
added support for UniqueConstraint , ForeignKey , and ForeignKey in DatabaseSnapshot . java to ensure compatibility with UniqueConstraint and ForeignKey types in the database snapshot
added a new method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and updated ` AccountAPI ` to
[ dspace - 232 ] fix communityadmingrouplinkrepository . setmetadata ( ) to throw unprocessableentityexception if the group
do n ' t throw error if utterance have no word
added a new test class RubyScriptTextTest to verify the behavior of the script engine with cached scripts to ensure that the script engine is correctly reuse
updated thread retrieval from getBackgroundThreads ( ) to getDatabaseUpdateThreads ( ) in FeedRefreshUpdater and ApplicationSettings classes to improve clarity and consistency in thread
updated the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to improve the responsiveness of
replace MetaUtil . toInternalName with " Ljava / lang / System . class . getName ( ) " Ljava / lang / System "
hhh - 13644 fix procedurecallimpl to handle null pointer exception
added null check for configuration . getApiProperties ( ) in RestSwaggerSupport . java to avoid potential NullPointerExceptions when accessing API properties
added new classes ` BinaryFrameGenerator ` , ` TextFrameGenerator ` , and ` TextFrameGenerator ` , and ` TextFrameGenerator ` to
[ java ] add wait for peas element in page loading test
refactor random double calculations in RandomGeo3dShapeGenerator . java to use nextBoolean ( ) method to improve code readability and maintainability
added a keepAlive method to the ResourceBundle class to improve resource management by allowing customizable class loaders
changed return value from false to true in SQLiteDatabase . java to ensure correct behavior of the SQLiteDatabase class
added a constant ` UTIL _ CONCURRRENT _ PREFIX ` and updated bug reporting logic in ` FindJSR166LockMonitor
added MkdirStep and updated MkdirStep initialization in multiple classes to enhance directory management and improve test coverage for Mkdir operations
updated error messages in MeshLeveler . java for clarity and consistency to improve readability and maintainability of error messages
( chore ) camel - pmml : add a check for jpmml module availability of jpmml - pmml
changed locationMode from locationMode to thermalStatus in ShadowPowerManager . java to clarify the purpose of the thermal status in the code
added a new constant ` OS _ MAC _ TMP _ DIR _ PREFIX ` in ` MountableFile . java ` to ensure compatibility with
added a boolean flag for USE _ MEMORY _ MAPPED _ BUFFERS in PrjFileReader and CatalogManager to ensure memory buffers are
added a null check for the organization in the pom . xml file to ensure the plugin does not require an organization in the pom . xml file
updated contributor license agreement in SepPostingsWriterImpl . java to ensure compliance with copyright standards
deleted the TerminateWebSessionListener . java file to remove unused TerminateWebSessionListener . java to streamline the codebase
updated the return statement to use System . getProperty ( " java . class . path " ) instead of a hardcoded string to ensure compatibility with
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device . java
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` and modified the ` AddLicenseHeaderTest . java
changed the default value of LAUNCHER3 _ PHYSICS from false to true in FeatureFlags . java to enable the feature feature
added a CSS element to the HTML report in HtmlThreadInformationsReport . java to enhance the readability and usability of the HTML report
updated LUCENE _ MAIN _ VERSION from " 3 . 1 " to " 4 . 0 " in various test files to reflect the
added symbolicator and task handles for symbolicator , symbolicator , and macosx in BsdDebuggerLocal and PlatformInfo classes to enhance
fix potential memory leak when send a message to the network .
added a conditional check for connection reset in NetworkDispatcher . java to improve error reporting for connection reset failures
[ java ] add null check for conductorbuffers in order to avoid npe
added a break statement to the TouchImageView class to ensure proper flow control during execution
chore ( deps ) : update ggb / ggb / ggb / ggb / ggb / gg
removed the flushOnSSLHandshakeComplete method from FeedableBodyGenerator . java to simplify the code for better readability and maintainability
added handling for " java . lang . Object " and " java . lang . Object " types in TypeUtils . java to ensure correct type assignment
replaced NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush in ColumnFamilyStore . java to improve performance by reducing unnecessary blocking operations
added null checks and improved error handling in MemberEnter and Erroneous classes to enhance robustness by preventing potential NullPointerExceptions
updated browser initialization from NO _ BACKGROUND to NONE in BugInfoView . java to ensure consistent browser behavior across different UI components
corrected the method name from ` finish ( ) ` to ` cancel ( ) ` in ` AboutActivity . java ` to improve code readability
updated calculations for lowerBound and upperBound in IntegerStamp . java and added unit tests in IntegerStampTest . java and IntegerStampTest . java to ensure
added a ` readStream ` method to the ` ITextUserAgent ` class and modified the ` readStream ` method in ` ITextUserAgent `
refactor SwitchCompiler and ExprGenerator classes to use a Set for variable declarations to improve code clarity and maintainability by using a more descriptive
added exception handling for SSL provider initialization in RSAClientKeyExchange . java to improve robustness by catching invalid key exceptions during handshake
updated library names in WinGammaPlatformVC10 . java to use psapi . lib instead of psapi . lib to ensure consistency in library naming
updated StringUtilsTest to use line separator instead of line separator to ensure consistent line separator handling across different operating systems
updated TemplateEngineFreemarker . java and ApplicationController . java to use NinjaConstant . UTF _ 8 for script validation to ensure compatibility with
replaced ByteArrayInputStream with byte array handling in CRDGeneratorTest . java to improve performance and readability of the code
removed the private static field from SampleSenderFactory . java to improve encapsulation and maintain consistency in naming conventions
added a check for the existence of the " testngEmailableReporter " property before adding it to the EmailableReporter to avoid potential NullPointerExceptions
updated conditional checks in CommandLineBuilder and added a new test for quotation marks in CommandLineBuilderTest to ensure proper handling of special characters in command line quotes
renamed ` Clock ` and ` MetricProducer ` to ` DelegatingGauge ` across multiple files to enhance encapsulation by restricting access to
added a call to setNumReduceTasks in FreeGenerator . java to ensure the job uses the correct number of processed tasks
[ guacamole - 102 ] fix npe in schemageneratorhelper . getvaluefromobjectvalue ( )
updated the file version from 505365 to 532077 in SaveService . java to correct the file version from 505365 to 5320
added support for " OES _ texture _ float " and " GL _ ARB _ texture _ float " extensions in FloatTextureData . java
make fileserver . write ( filename , value ) synchronized
added a null check for outputDirectory in ClassDump . java to avoid potential NullPointerExceptions when outputDirectory is null
updated the ` getFuture ` method to use ` PerfStatsCollector . getInstance ( ) ` instead of ` PerfStatsCollector . getInstance (
updated JMapHProfLargeHeapTest to getTestJDKTool in JMapHProfLargeHeapTest and JDK
added a new enum ResourceErrorHandling . java for error handling in the configuration package to provide a mechanism for handling resource errors in the application
updated buffer position handling in RAMInputStream and added a new test for EOFException in TestRAMDirectory to improve robustness by preventing EOFExceptions
updated error messages in DefaultServlet . java and JspServlet . java to include the request URI to improve error reporting by providing clearer context for
updated ForkJoinWorkerThread and ForkJoinWorkerThread to accept a boolean parameter and added AccessControlContext class for access control context to improve thread management and ensure proper access control
updated memory checks in Caches . java and added logging for HardRefCache to improve memory management and enhance logging capabilities
hbase - 13232 fix testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction
added null check for currentSelectionArea in CompatibilityEngine . java to avoid potential NullPointerExceptions when currentSelectionArea is null
added a new test method ` provideEnvironmentsToTest ` to the ` DemoModulesTests ` class to ensure that the ` provideEnvironmentsToTest `
updated condition in CellLayout . java to include spanX and spanY in cellBoundsWithSpacing . width ( ) to ensure correct layout calculations for
refactor CacheOffHeap class to improve performance to optimize memory usage for better performance
added support for the ` createtable ` method in ` CreateTable ` , ` CreateTable ` , and ` TestCases ` to ensure compatibility with
added checks for extra XML gid values in TiledLoader . java and improved error handling in TiledLoader . java to enhance robustness by preventing
added synchronization to the setWorkingSet method in InMemoryTileCache to ensure thread safety when accessing the setWorkingSet method
added a new file ` Solution . java ` that implements a algorithm that calculates the minimum and maximum steps based on a stone to provide functionality for
add a new interface ` AddressChecker ` and modified ` TrackerRequestProcessor ` to use ` AddressChecker ` instead of ` InetAddress . getByName `
fix translucent move block in multilayer model
added a method to remove tags in GuiConfigEntries to improve code readability and maintainability by encapsulating tag removal logic
changed the type of the thingTypeVersion variable from int to String in ModuleType and Capability classes to improve code readability and maintainability by
added null check for recieptents before sending to avoid potential NullPointerExceptions when recieptents is null
refactor isSingle method to use a new method ` isSingle ` to improve code readability and maintainability by reducing duplication
add failfast flag to DockerClientFactory and RemoteDockerImage and RemoteDockerImage to improve error handling and logging for image retrieval failures
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` class and updated its initialization in ` AndroidMetadata ` and ` AndroidMetadata ` to
replaced ` DateUtils . truncate ` with ` Calendar . getInstance ( ) ` in ` HistoricProcessInstanceQueryImpl . java ` to improve code readability
updated the import method from ` gradleImporter . importProject ` to ` gradleImporter . importProjectCore ` in ` OpenAndroidModule . java `
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve user feedback during command execution failures
refactor TreeMap class to improve code readability to enhance maintainability and facilitate future updates
added methods to check if asynchronous stack traces are enabled in CN , Display , and EdtException classes to enhance error handling capabilities for asynchronous
added a ` setGlowColor ` method to ` BubbleTextView ` and ` Folder ` classes to allow customization of glow colors in the
added new styles for link , desc , and file row text in LinkedFilesEditor . java to enhance the visual representation of file row text
removed the return statement for " java . lang . Short " in AbstractJdbc2ResultSetMetaData and added a new test for class class matching functionality to
removed redundant code in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to streamline code by eliminating unnecessary try - catch
added null check for _ info in HttpConnection . java to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation with a provider parameter to enable instantiation of ShadowLocation instances with a specified provider
added a condition to check if the deviceRam is greater than 2048 in LauncherPreferenceJavaFragment . java to ensure that the deviceR
fix localmapstatsprovider . getstatsofnodataincludedmaps ( ) to use proxyservice . getlocalstats ( ) .
added logging for file existence checks in FileProfileActivator to improve error handling and logging for missing files
updated the method name from " noname1234 " to " invalid _ " in PdfWriter . java to improve clarity of the error message for invalid
change the order of roles from list to set in GuildImpl . java to improve code readability and maintainability
updated the return statement in ExpandableUploadListAdapter . java to adjust the array size based on the maximum number of uploads shown to ensure that
added assertions to verify deletion methods in DashboardUserMapperTest . java to ensure correct behavior of delete operations in the delete operation
updated recipient and secondary participants names in InstructorFeedbackResultsPageData . java to improve clarity and consistency in naming conventions
[ gr - 25286 ] fix memory leak when use auto - deref .
added a method to retrieve the buffer size in BufferedIndexOutput . java to provide access to the buffer size of the BufferedIndexOutput class
add usagehelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelphelp
refactor title setting logic in DrawerActivity to improve readability and maintainability of the code
refactor CommandLineParserTest class for improved readability to enhance maintainability and ease of understanding for future development
added animation animations for the ALL _ APPS _ SCRIM _ FADE animation in QuickstepAtomicAnimationFactory and PortraitStatesTouchController
updated the return statement from ` toUnderscoreSeparated ` to ` toUnderscoreSeparated ` in ` DefaultJavaLanguageNamer . java ` to
removed unused native methods from CWrapper . java to clean up the code and improve maintainability
added handling for null and non - null values in Checker . java and created a new ValueTest class in ValueTest . java to ensure that
refactor MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code organization and maintainability
removed null check for constructors in PojoUtils . java to simplify code and improve readability
refactor JiraConfiguration class to improve code readability to enhance maintainability and facilitate future updates
updated error handling logic in UploadBuild . java to improve code readability and maintainability
updated bounds calculations in DeviceProfile . java to use getSearchBarTopOffset ( ) instead of getAvailableWidthPx to ensure correct positioning
[ hotfix ] [ pulseaudioaudioaudio ] fix disconnection when idle timeout be zero .
refactor OverviewCommandHelper to run on a UI thread to improve code readability and maintainability by encapsulating task launching logic
removed the ` getSourceGroupOptional ( ) ` method from the ` AppleSource ` class to streamline the code by eliminating unnecessary dependencies
updated the wait time from 220000 to 32000 in TestSimTriggerIntegration . java to allow more time for trigger fired latchs
replace outputPositionCount with positionCount in FloatSelectiveStreamReader . java to improve clarity by using a more descriptive method name
refactor logic in AbstractNodeCostSearch to use a loop for better readability to improve code readability and maintainability by reducing duplication
added a condition to skip processing for Form , Dialog , and Dialog components in ResourceEditorView . java to ensure that only valid UI components are processed
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView ` , FloatingIconView ` , and ` FloatingIcon
added a null check for commitPoint in ReplicationHandler . java to ensure the correct commitpoint is used when no commitPoint is provided
added unit tests for retrieving imeis and telephony managers in ShadowTelephonyManagerTest and ShadowTelephonyManager to
updated debug logging logic in SimpleHostRoutingFilter . java to utilize the current context for handling HTTP / 1.1 requests to improve debugging capabilities for host
added ` destory ( ) ` method to ` IndexSegment ` , ` BitmapInvertedIndex ` , and ` BitmapInvertedIndex
[ issue # 114 ] add test to verify that the consumer be send to the same group .
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer . java `
hbase - 26286 addendum addendum addendum addendum addendum addendum fix
added a ` commission ` parameter to the ` DefaultWithdrawFundsParams ` class and updated the ` DefaultWithdrawFundsParams
removed unused import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve readability
replaced MorphlineRuntimeException with MorphlineRuntimeException in LoadSolrBuilder , SolrLocator , and SolrLocator classes to simplify exception handling by eliminating unnecessary
added null checks for method body and interface scope before executing abstract overloaded methods in Java2TypeScriptTranslator . java to improve error handling and ensure
added StacklessLogging to the file session sweep method in TestFileSessions . java to ensure proper resource management and avoid potential memory leaks
added serialization support for SQL data types in MutableColumnDataType , SqlDataType , and Entities classes to ensure compatibility with serialization and improve code clarity
refactor SubExactLConstantTest and SubExactLNonConstantTest classes for improved clarity to enhance code readability and maintainability
added null checks for claimRequestString in ConnectOAuth2RequestFactory . java to avoid potential NullPointerExceptions when claimRequestString is null
updated the constructor of HiveFilterSetOpTransposeRule to use HiveRelFactories instead of FilterFactory to improve flexibility and maintainability of the
updated the ` processTypeHintForNestedDocuments ` method to use ` null ` instead of ` Object ` in ` UpdateMapper ` to improve
updated ` CollectionsAPIDistributedZkTest ` and ` CoreAdminRequest ` to use ` CoreStatus ` instead of ` mcr ` to improve
changed the initialization of transformers and locators from static to static in ModDirTransformerDiscoverer . java to ensure that the transformers list
updated string concatenation in AbstractQuerydslProcessor . java to improve readability and consistency of error messages
graalvm : add getcallstack ( ) and getcallstack ( ) to PEGraphDecoder . java
updated method names from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` and ` RestTemplateBuilder . java
camel - 14284 : camel - mail : use identityhashhashcode instead of debug log message .
added null check for getRedeliveryPolicy ( ) in ActiveMQConnectionFactory , PrefetchSubscription , and PrefetchSubscription to avoid potential NullPointerException
updated getIdentifierName method to use setIsPropertyName ( ) instead of setIsPropertyName ( ) to improve clarity and functionality of identifier name retrieval
added WaveGeneratorActivity and InstrumentsFragment in InstrumentsFragment and InstrumentsFragment , and updated Toast display in InstrumentsFragment
added logging for missing or missing sheets in KeyedProperties and SheetOverlaysManager classes to improve error handling and provide clearer logging for missing
fix : add log ( ) and exec ( ) method to podit . java
added a new test method ` testNoWriter ( null ) ` to ` TestReplicationHandler . java ` to ensure proper indexing behavior when no
added a method dispatchMethodKernelOkra call in GraalKernelTester . java to ensure proper dispatching of method kernel Okra events
updated the ` DnsClient ` and ` DefaultMxRecord ` classes to implement ` Comparable ` instead of ` Object ` to improve data organization and
refactor toolkitThread initialization to use a doPrivileged method for action execution to improve code readability and maintainability by reducing boilerplate
added validation for SelectBox in SelectBox . java and updated UITest . java in UITest . java to ensure the dropdown is selected on Linux
replace IllegalStateException with Collector . printStackTrace ( e ) in JobGlobalListener . java to improve error handling by using Collector . printStackTrace ( ) instead of
updated the ` createState ` method to include a ` parentSplit ` parameter and updated related logic in ` SplitState ` to enhance state management by
changed the visibility of the connectionState variable from ` int ` to ` volatile ` in ` SSLSocketImpl . java ` to ensure thread safety for
updated the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and added a new PollingConsumer bean in EnableIntegrationTests . java
replaced ` ByteBuffer ` with ` MemoryUtil ` in ` MemoryStack ` , ` MemoryUtil ` , and ` MemoryUtil ` classes to improve memory
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractDoclet classes to improve error reporting and
pmd : fix unusedmodifierrule to avoid npe
updated interceptor handling in multiple classes to use ` : ifAvailable ` instead of ` : ifAvailable ` to improve code readability and maintainability by
added ssl parameter name to the Parameterized . Parameters annotation in AbstractHttpClientServerTest . java to enhance test coverage for SSL configurations
refactor transformation handling in TransformationHelper . java to improve error logging and provide clearer diagnostics for transformation failures
updated access keys from userPermissions to activeConnectionPermissions in ActiveConnectionRESTService . java to ensure consistency in accessing user and active connection permissions
refactor Point class to use EqualsBuilder for equality checks to improve readability and maintainability of the code
added null check for outputRoot in FileProcessor . java to avoid potential NullPointerException when outputRoot is null
added a new annotationfilter interface in the PDPage class and implemented a new AnnotationFilter interface in PDFRenderer to enhance annotation filtering capabilities in the
refactor StackTraceCleaner class implementation to improve code readability and maintainability
updated content type handling for CSS and JS files in PluginServlet . java to ensure proper content type is set based on path information
hhh - 16458 - skip test for sql server in select expression test
updated the ` upgrade ` method to use ` slotSize ` instead of ` versionValue ` and ` versionValue ` and ` slotSize ` to
added ` getStats ` method to ` AbstractDataImportHandlerTest ` , ` ContextImpl ` , and ` ContextImpl ` classes , and `
( chore ) camel - kerberos : enable long timeout for servicecomb . servicecomb . config . kie
added AccessibilityManagerCompat and updated gesture handling in PagedView , BaseOverview , and LauncherInstrumentation classes to improve responsiveness and ensure
updated unlocks dialog initialization in UI . java and added a button for unlocks in PausedDialog . java to improve user experience by providing clear
added clearing of drops in PlayerEventListener . java to ensure that drops are properly cleared before processing events
added a new constant ` DEFAULT _ PARAM ` to the ` StreamResult ` class to provide a default value for the input name parameter
removed MalformedURLException from the testNormalizeOrder method in AttributeNormalizerTest . java to simplify error handling by removing unnecessary MalformedURLException
updated print statements in TsFileSketchTool . java and added chunk type handling in LocalTsFileInput . java to improve clarity of output
added headersToExclude to the UmbrellaHeader class and updated ProjectGeneratorTest to check if the umbrella contents are present to improve header handling
fix typo in the onHttpError method signature to improve code readability and maintainability
added encode ( ) method to RequestPlugin . java to ensure proper encoding of request plugins
added support for DB2 in RolapNativeSql and RolapNativeTopCount in RolapNativeSql and RolapNativeTopCount classes to
added null and empty password validation in LdapAuthenticationProviderImpl and created a new TestLdapAuthenticationProviderImpl class to ensure that a valid LDAP user is
pdfbox - 4071 : fix typo , a suggest by valerybokov
added handling for complex writer clearing in ProjectRecordBatch . java to ensure proper resource management and prevent memory leaks
added ` @ SuppressWarnings ( " serial " ) ` annotations to multiple Java files to suppress serialization warnings for better code clarity
changed the access modifier of ClassGraphClassLoader from public to public and added null check for classInfo to enhance encapsulation and improve error handling
added error handling for " _ errors " in ErrorResponseException . java to ensure proper formatting of error messages based on the presence of " _ errors
added a constructor to EventSourcingRepository for eventStore and snapshotTriggerDefinition in EventSourcingRepository to allow instantiation of EventSour
refactor code to improve readability and maintainability to enhance code readability and maintainability
refactor search logic in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle exceptions and improve search functionality to enhance robustness
updated NuvoConnector and NuvoHandler to use a boolean flag for standalone mode in NuvoConnector to improve code readability and maintainability by
updated the variable ' planarConfiguration ' from ` TIFFExtension . PLANAR _ CONFIGURATION _ PLANAR _ CONFIGURATION _ 
added a call to is . close ( ) in ItemListTag . java to ensure proper resource management and prevent memory leaks
add a new utility class ` AverageUtil ` and ` TileAdvancedCraftingTable ` and ` TileAdvancedCraftingTableBase ` to
added new classes ` SigInt ` , ` SigIntBarrier ` , and ` SigIntBarrier ` , and ` SigInt
refactor ExporterGEXF to use HierarchicalGraph instead of GraphModel to improve clarity and maintainability of graph handling logic
refactor ` TCTLSeparatedProtocol ` to use ` Text ` instead of ` byte [ ] ` in ` TCTLSeparated
added validation for rubric responses in FeedbackRubricQuestionDetails and updated FeedbackResponseDetails to handle invalid indexes to ensure correct handling of
replaced ` DB2Database ` with ` ORIGINAL _ CASE ` in ` CatalogComparator . java ` to ensure correct comparison of catalog case
added ` setUp ` and ` closePreviousWebdriver ` methods to ` BrowserMobProxyTest ` and ` stopBrowserMobProxyServer ` methods to
updated the formatting of criticalErrors in ModelRepositoryImpl . java to use Integer . toString for better readability to improve code readability and maintainability
removed redundant calls to mTextWatcher . reset ( ) in InPlaceEditView . java to improve code readability and maintainability
trufflestring : fix typo in javadoc
[ hotfix ] [ table - common ] fix compilation error in graph and outedgesfunction
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
added a new file ` DiacriticTest . java ` and created a new test class ` DiacriticTest . java ` to
replace CountDownLatch with CyclicBarrier in ClusterMembershipTest . java and add a new method assertExecutionsDone in ClusterMembershipTest . java to improve thread safety
added error handling for workspace readers in DefaultMaven . java and updated workspace readers in DefaultGraphBuilder . java to improve robustness by ensuring proper workspace
updated ssl check in ServiceRegistryConfig . java and added tests in TestServiceRegistryConfig . java to ensure correct SSL scheme validation and improve test coverage
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
updated the constructor signature from ` String ` to ` String ` in ` Jdbc3Connection ` to ensure consistency in naming conventions across the codebase
added a synchronized method ` ensureInstance ( ) ` in ` ServletHolder . java ` to ensure thread safety when accessing the servlet instance
added logging for deltaServerTime in BinanceExchange and BinanceBaseService to improve server time tracking and debugging capabilities
added support for NonStop ( tm ) Servlets for JavaServer Pages ( tm ) Servlets for JavaServer Pages ( tm ) Servlet
added null check for the form before deregistering animated to avoid potential NullPointerExceptions when the form is not initialized
added options parameter to ` decodeResource ` and ` decodeBitmap ` methods in ` ShadowCanvas ` and ` ShadowCanvas ` classes to enhance flexibility in
[ java ] add a number of message in the example publisher to allow for more than 10 message .
added a new ` preventNextClick ` flag and updated ` EmojiUtils . linkifyText ` method in ` TimelineArrayAdapter . java
added " text " parameter to various database types in PostgresDatabase and updated column size handling in NumberType and ColumnSnapshotGenerator to enhance data type
[ hz - 3683 ] fix test failure in entryprocessorbouncingnodestest . testentryprocessorbouncingnodestest
updated state checks in AmbariManagementControllerImpl and related classes to improve clarity and consistency in state management logic
added null check for bridgeUid in CreateBridgeServlet and updated test cases in CreateBridgeServletTest to improve robustness by preventing potential NullPointerExceptions
refactor ` PreconditionEnforcer ` and ` CrawlServer ` methods in ` PreconditionEnforcer ` , ` CrawlServer ` , and ` Crawl
replaced calls to getDisplayName ( ) with a null check for " Teredo " in multiple classes to improve robustness by preventing potential NullPointerExceptions
added a default shader parameter to SpriteBatch constructors and modified SpriteBatch constructors to include a default shader to enhance flexibility in shader creation
added properties for " options " and " - c synchronous _ commit = on " in TestUtil . java to ensure proper configuration for asynchronous commit
added a ` elementCoercer ` method to ` SortedSetTypeCoercer ` and modified ` SortedSetTypeCoercer `
refactor confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and correctness to enhance code readability and maintainability by standardizing
added a conditional check for ` c < 256 ` in ` URLPathEncoder . java ` to ensure compatibility with larger URLs
added port parameter to the registerFragmentStorage method in UserContext . java to improve clarity and maintainability of the code
updated the test to check for empty clusters in HostResourceProviderTest . java to ensure the test accurately reflects the expected behavior of cluster retrieval
[ hotfix ] [ runtime ] remove log from loadconfiguration ( )
refactored the code to use init ( ) and initialize ( ) method to improve code readability and maintainability
removed the ShadowHtml class from RobolectricBase and HtmlTest classes to simplify the codebase by eliminating unnecessary shadow implementation
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements a ` StarTreeRecordStoreFactoryBlackHoleImpl `
updated JettyLogger and JettyLogger to use Jetty ' s Jetty level instead of Jetty ' s Jetty ' s Jetty
changed the access modifier of the addListeners method from private to private in MockSettingsImpl and added a test for null listeners in MockSettingsImplTest
refactor StateHandleStore class implementation to improve code readability and maintainability
updated import statements from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty . http . security
improve error message for put team section
use try - with - resources to prevent resource leak
camel - 14263 : camel - test - java : add getspecificport and getspecificport ( ) to camel - test - java
added a new ` BuildTarget ` parameter to ` AndroidBuildConfigJavaLibrary ` , ` AndroidPrebuiltAar ` , and ` JarBuild
updated the link from " validating - cerficates " to " validating - cerficates " in TrustEverything
removed the ` getPageSizeVal ( ) ` method from the ` ListCapacityCmd ` class to simplify the logic for retrieving the pageSize value
added a case CLOSED in IteratingCallback . java to return early if the callback is closed to prevent unnecessary processing when the callback is closed
added a private boolean variable ` isAuthorized ` and modified the ` AccessController ` initialization in ` AccessControlContext ` and ` AccessController ` classes to
updated OSGiDeployer to check if the app is an instance of AbstractOSGiApp before executing deployment events to ensure proper handling of
added handling for " tiff " codecV and " tiff " in DLNAMediaInfo . java to ensure correct MIME type is used
refactor OptimizedCallTarget to use a synchronized variable for assumption and assumption in OptimizedCallTarget . java to improve thread safety and
added a new file ` CubocDesktop . java ` and modified the loop structure in ` Map . java ` and ` Map . java `
updated directory references from ` getResourceDir ( ) ` to ` getTargetDir ( ) ` in ` PolicyMonitorTest . java ` to ensure
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure that all files are removed from the trashbin list
updated the method call from ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` to ` com . sun . jdi
[ gr - 27335 ] fix llvmcheckglobalvariablestoragenode . execute ( ) to return boolean .
updated the ` createLauncherEvent ` method to include a ` Intent ` parameter and modified the ` createLauncherEvent ` method to include a ` intent
updated the calculation of the max BURN _ LOWER _ FLOOR value in BurningManPresentationService . java to ensure that the maximum
updated import statements and added a snapshot object method in UniqueConstraintSnapshotGeneratorSnowflake . java to improve code readability and maintainability by
refactor item assignment logic in DMLTransformer . java to use a more descriptive variable name to improve code readability and maintainability by
updated import statements in ServiceValidateControllerTests . java for improved clarity and consistency to enhance code readability and maintainability by using more descriptive
modified the ` getDefaultValidFunctionName ` method to accept a ` isStatement ` parameter and added a hideDefaultName ( ) ` method to improve function
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated type parameters in JdkConcurrentResultQueue , RepeatInternalState , and RepeatTemplate classes to use generics for better type safety and
[ java ] make sure we do n ' t send hole punch packet if the peer be not a jabber .
added a new test method ` testpgobject ` in ` ResultSetTest . java ` to verify the behavior of ` updateObject ` with PGobject
updated PasswordResetEndpoints to handle non - UAA origins and added a new test case in PasswordResetEndpoints . java to ensure proper handling of
replaced the type casting of ` item ( 1 ) ` with ` getDocumentElement ( ) ` in ` XMLUtils . java ` to simplify the code
refactor Cache class to improve code readability to enhance maintainability and facilitate future updates
updated variable names from ` timeInSec ` to ` timeMillis ` in ` Isochrone . java ` and ` SPTResource .
add a check for a valid binding binding in the light relay .
added a new ` Chainer ` class and updated related methods in ` CollectionSubject ` , ` CollectionSubject ` , and ` CollectionSubject ` to
refactor Model class to improve code readability to enhance maintainability and facilitate future updates
updated recordedTime calculation from 619315200000L to 619315200000L in Locations . java to correct the calculation of the
added a check for Windows terminal type in LineReaderImpl . java to ensure the status reflects the current terminal type
added a condition to check if the host version state is not required before setting the state to ensure that host versions are only set when the state is
updated test paths in IntegrationTestCase , JsInteropRestrictionsCheckerTest , and NativeSourcesErrorTest classes to ensure compatibility with the latest Java
[ mng - 5160 ] add support for setgloballocation ( ) and set ( ) in mavenproject
removed exception handling in OperationServiceImpl . java to simplify the code and ensure immutability of the Operation object
updated the method call from ` resolvePropertyConfigurer ` to ` resolvePropertyConfigurer ` in ` KnativeEnvironment . java ` to improve code readability
[ hotfix ] [ runtime ] rename commitlog _ archiver to commitlogarchiver
added connect ( ) and connect ( ) methods in CloudSolrClient , and created a test for uploading configurations in TestCloudSolrClientConnections
added synchronization to multiple bindings in Breakpoint , DebuggerSession , and DebuggerSession classes to ensure thread safety when accessing multiple bindings
added methods to clear files and cache in RobolectricTestRunner and ShadowContext classes to improve code readability and maintainability by centralizing file
added LinkedHashSet and TreeMap imports and updated getStyles method in SecureXStream . java and XStreamPersisterTest . java to enhance performance and ensure
( chore ) camel - internal - k8s : add a new ` ` kiemodel ' ' model to the kiebuilder
updated conditional logic in BlockEventListener . java to check for Farmland newFarmland and newFarmland types to ensure proper handling of farm
added a default method ` getLocalIp ( ) ` to the ` FinishedSpan ` class to provide a default implementation of ` getLocalIp ( )
updated executionContext handling in JdbcStepExecutionDao and added new test cases in AbstractStepExecutionDaoTests to ensure proper serialization and deserialization of ExecutionContext
fix typo in worddictionary . getchararray ( )
added " - python - gpu " and " - python - gpu " and " - python - gpu " to the resource paths to
refactor ` PluginTab ` to use ` plugins ` instead of ` plugins ` to improve code readability and maintainability by encapsulating
updated log level from info to warn in DefaultHistory . java to improve logging granularity and reduce clutter in logs
[ vmware ] fix nullpointerexception in vmwarestorageprocessor . getvmdatacenter ( )
use sshd . stop ( true ) instead of sshd . stop ( true )
refactor ExperimentalMockitoJUnitRunner class to improve code organization to enhance maintainability and readability of the code
added a check for ` GetBuildSerial ( ) ` in ` GpsSettingsActivity ` , ` Session ` , and ` Utilities ` classes to
refactor SwapGBuffers class to improve code readability to enhance maintainability and facilitate future updates
added null checks for skeletonControl in AnimControl . java to ensure proper cleanup of skeletonControl when spatial is null
added a new method ` setSmartReplies ` to ` ShadowRankingTest ` and updated ` ShadowRanking ` to use ` ArrayList `
[ java ] do n ' t add segment file to the archive directory if it ' s a prefix .
updated resource directory retrieval from ` getConfigDir ( ) ` to ` LEXICAL _ RESOURCES _ DIR ` in ` CarrotClustering
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new test class ` bug8004298 . java `
updated method names from ` buildStdArgs ` to ` buildStdArgs ` in ` ScriptUtils . java ` and ` CompilationConfig . java `
updated exception handling in RecommenderMapper and CacheTest to throw TasteException for null keys to improve error handling and provide clearer feedback
added a clientInfo initialization method to SurrogateAuthenticationEventListenerTests to ensure proper handling of client information during test execution
added a variable ` isUserView ` to the ` CardPresenter ` class to reset the user view state for better user experience
updated method names from ` isGraphvizJavaAvailable ` to ` isGraphvizJavaAvailable ` across multiple files to improve code clarity and
[ hotfix ] [ metric ] fix bug in logdispatcherthreadmetrics
added a new module - info . java file for module - info . java to define module - info . java to define module - info . java
added a sleep method to the StreamResetTest class to allow for a longer wait time to complete before proceeding with tests
removed conditional check for " new " and " api " in permissionsManager initialization to simplify code and improve readability by eliminating unnecessary conditional checks
refactor DateParser and TestDateParser classes to improve code organization and maintainability
added a method to get the depth of the SpringLoadedState class to provide a way to calculate the depth of the SpringLoadedState class
replaced System . arraycopy with Arrays . copyOfRange in BinaryDecoder . java to simplify code and improve performance by eliminating unnecessary array copying
refactor ExecutionGraph class to improve code readability to enhance maintainability and facilitate future updates
refactor notification handling in NotificationActivity and NotificationRenderer classes to improve code clarity and maintainability by eliminating unnecessary swipe layout handling
updated exception handling logic in DefaultExceptionConverter , ExceptionsTest , and EndpointTest classes to ensure proper exception handling and improve code clarity
updated lock handling in GlowContainer . java to accept null values instead of null to improve null safety and prevent potential NullPointerExceptions
replaced ` LOOKUP . findSetter ` with ` java . lang . reflect . Method ` in ` ProxyMaker . java ` to improve
update bitand to use integer instead of int to avoid type cast exception
updated the return statement from " metrics " to " - " in BaseEmailContentFormatter . java to improve readability and maintainability of the code
added a simple panel to manage the visibility of the layout provided in the LayoutPanel to improve user interface responsiveness by controlling the visibility of the
added null check for location in ServerCallable . java to ensure proper handling of null location to avoid potential NullPointerExceptions
refactor BuilderFactory and Pipeline classes to improve code organization to enhance maintainability and readability of the codebase
added a null check for key parameters before generating public keys in BasicChecker . java to ensure key parameters are not null before generating public keys
refactor MediaTypeRequestMatcher to use a new method ` shouldIgnore ` to improve code readability and maintainability by encapsulating the logic
updated logging statements in LlapBaseInputFormat . java to use taskID instead of MRJobConfig . TASK _ ATTEMPT _ ID
added properties for Spring . main . allow - bean - definition - overriding in EventServiceTests . java to enable configuration of bean definition overriding in Spring
added a null check before closing the indexReader in DeleteDuplicates . java to avoid potential NullPointerException when indexReader is not initialized
updated package declarations in BTCMarketsStreamingAdapters , BTCMarketsStreamingService , and BTCMarketsStreamingService classes to improve
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest . java ` to verify the rendering behavior of `
added a new file ` CompatibilityTest . java ` to verify the behavior of the Compatibility . xml property loading to ensure proper handling of property
added new modules ` VariantComponentsModule ` , ` PushUtils ` , and ` SecurityUtils ` , and ` VariantComponentsModule ` ,
refactor replica assignment logic in TableRebalancer and TableRebalancerTest to use Integer . MAX _ VALUE instead of int to improve code
update version number in ExoPlayerLibraryInfo . java to reflect the latest release and update the latest release version
[ log4j2 - 2789 ] fix regexreplacertest to use line separator instead of line separator
added socket timeout handling in AjpAprProcessor . java to ensure proper handling of socket timeouts in AjpAprProcessor
set default values for friction and density in FixtureDef . java to ensure proper initialization of friction and density variables
updated method signatures in ClassificationTaskRunner and AnomalyDetectionInputContextBuilder to include AnomalyFunctionSpecMap to enhance anomaly
added a try - catch block for executing a shell command in LauncherInstrumentation . java to improve error handling and provide clearer debugging information
added unit tests for font and link tag functionality in ResourcesTest . java and ResStringPool . java to ensure that font and link tags are correctly
fix ( guistatscomponent ) : remove duplicate src _ work _ base / common / src _ work _ base / common
added permission checks for call calls in Launcher . java to ensure proper permission handling for phone calls in the application
updated return values in SimulationPanel , BasicEventSimulationEngine , BasicEventSimulationEngine , BasicEventSimulationEngine , and Startup classes to enhance
updated BUF _ SIZE _ LONG and BUF _ SIZE _ LONG constants in GeoPointInBBoxQuery , GeoPointInPolygonQuery ,
added a synchronized method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to check if the Docker client is available to ensure thread safety
removed the static final String VPX constant from CodecTypes . java to clean up the code and improve maintainability
added coordinator - address option to DistBuildFactory , DistBuildRunCommand , and modified getCoordinatorAddress method in AbstractDistBuildRunCommand
added a ` match ` method to ` FsUtils ` and modified ` WrapTimer ` to use ` PathMatcher ` instead of ` FileSystems
added a condition to check if the value is non - zero before adding to labelValues to ensure that labelValues are only added if the value is
added null checks for result and ans in App . java to ensure robustness by preventing potential NullPointerExceptions
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the code and improve readability
added materialization time setting in ObjectStore and created a test for update creation metadata in TestObjectStore to ensure proper functionality of materialization time handling
added error handling for missing native dependencies in VoskSTTService . java to improve error reporting for missing native dependencies
do n ' t set response code in jms sampler when send queue
refactor break weight checks in GlyphView . java to improve code readability and maintainability
refactor data reading logic in RCFile . java to improve code readability and maintainability while ensuring proper buffer management
added @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 related to SOLR
replaced ` steps ` with ` unwound ` for steps and processors in ` ToePool . java ` to improve performance by reducing the number
updated the ` setToSortedDataFlavorArray ` method to use ` getMimeType ( ) ` instead of ` flavorsToDataFlavorArray ` to
hbase - 26286 add - infoport parameter to testThriftservercmdline . java
added a check for ` atEOF ( ) ` in ` RegExpScanner . java ` to ensure proper handling of EOF conditions
added null checks for enabled metrics and timers in Debug . java to ensure metrics and timers are only added if they are present in system properties
added null check for getNickname ( ) in ChatRoomJabberImpl . java to avoid potential NullPointerException when getNickname
pdfbox - 4071 : fix nullpointerexception in papplet . getfilename ( )
refactor ` DefaultOAuth2ProviderTokenService ` to use a new method ` createRefreshToken ` to improve code readability and maintainability by en
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] [ k8s ] remove locking of job graph in YarnFlinkApplicationMasterRunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` to ensure thread safety when accessing the
added SSL URI for BTCChina exchangeSpecification in BTCChinaExchange . java to enable secure access to the BTCChina exchange service
add a method to retrieve the output file from the project ' s base directory to ensure that the output file is consistent across different operating systems
added OauthController . java and Oauth2PluginTest . java files to implement and validate Oauth2 functionality in the application
refactor SemgrexPattern class to improve code organization to enhance maintainability and readability of the code
refactor ` flatMap ` methods in ` AbstractStreamEx ` , ` EntryStreamEx ` , and ` EntryStreamEx ` classes to improve code
camel - 14284 - camel - rest - converter : fix error message in exceptiontoproducerresponseconverters
added support for mixed scala projects with mixed scala in RobolectricClassLoader to ensure compatibility with Android projects with mixed scala projects with Maven Surefire
added a condition to check if the sdp encoding is not present in the transmittable audio encoding to ensure that only valid audio encodings are processed
updated ` CreateTableGenerator ` to use ` DatabaseFunction ` instead of ` SequenceNextValueFunction ` in ` CreateTableGenerator ` and added a
add unit test for normalizedmultimultimultimultimultimultimultimultimultimultimultimultimultimultimultimultimultimultimultimultimultimultimultimulti
added a volatile boolean variable ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added a conditional check for processor configuration and updated return statements in ColumnarDataSource , RowProcessor , and RowProcessor classes to ensure that the processor is
updated the ` splitIntoThirtyParts ` method to use ` SEEK _ LENGTH ` instead of ` splitIntoThirtyParts
added new classes XLCDCommunicator and XLCDCommunicator , GrblController , and XLCDController , and XLCDController to
( chore ) camel - kmodule : use kie / api / kmodule . xsd instead of hardcoded resource
added ` retryTimes ` checks to ` EventQuery001 ` , ` EventQuery002 ` , and ` EventQuery002 ` classes to
refactor WorkerProcessPoolTest to use a constant WAIT _ FOR _ TEST _ THREADS _ TIMEOUT to improve code readability and
updated DelegatingMethod to use DelegatingMethod instead of MockitoMethod and added a new test class DelegatingMethodTest for DelegatingMethod to improve
updated FREEZE _ V2 and UNDELEGATE _ RESOURCE constants from 20000 to 10000 in EnergyCost . java to allow for
updated the ` command ` method to return ` throws ConfigurationException ` instead of ` pid . waitFor ( ) ` to improve error handling and ensure proper
deleted the ` SpringTransactionHooks ` class and replaced it with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest ` to streamline the
refactor AbstractClassAssert class implementation to improve code readability and maintainability
added a new file ` GetUninitializedStringValue . java ` that tests the ` GetUninitializedStringValueTarg ` method to demonstrate the
added provided dependencies handling in AndroidLibraryDescription , AndroidLibraryDescription , and GraphEnhancementQueryEnvironment classes to enhance dependency resolution and improve test coverage for
added a new boolean flag ` ENABLE _ KEYBOARD _ TRANSITION _ SYNC ` to ` FeatureFlags . java ` to
added a boolean variable ` sSavedBugreport ` and modified the handling of system anomaly messages in ` FailureWatcher . java ` to improve
added a constant CINEPACK from " cinepack " to FormatConfiguration . java and modified format assignment logic in LibMediaInfoParser . java
added hand - movement animations and updated poke logic in Player . java to improve user experience by managing hand - movement animations more effectively
replace ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java ` to ensure
deleted the HSQLDBServerFilesFilter . java file and modified the TestUtility . java file handling in TestUtility . java to streamline the
added a null check for restoreFromSeed in WalletAppKit . java to ensure that restoreFromSeed is not null before proceeding to prevent
updated the retrieval of the latest version of the IMDb ID in MediaTableTVSeries . java to improve clarity and logging when title retrieval fails
added a method ` visitMethodInvocation ` to handle the existence of a type in the ` HasTypes ` class to ensure proper handling of method invocations
refactor AmbientCubemap to use a constant NUM _ VALUES for better readability and maintainability to improve code readability and maintainability by
[ netbeans - 4071 ] profiler : show info when current mode be not set to 0
added checks for ` value ` in ` GenericUDFMask ` , ` GenericUDFMask ` , and ` GenericUDFMaskFirstN
refactored ` BoundedOverheadBlockStoreTest ` and ` DerbyBlockStoreTest ` to use ` TemporaryFolder ` instead of `
add item . isitemintentable ( ) and gethastypes ( ) to item . itemlist . itemlist
fix line width ( # 167447 )
updated the Firefox profile settings in FirefoxProfile , FirefoxDriverTest , and FirefoxDriverTest to ensure the correct page is used for
added support for Upgrade HTTP requests in Http1xClientConnection . java to ensure proper handling of upgrades in HTTP requests
updated the task ' s accept method from " compile " to " process - classes " in JoobyMojo . java to align with the new
updated connection management in HTTPHC4Impl . java to ensure proper resource management and prevent potential memory leaks
added a condition to check if the aggregate function suffix is not present before processing metrics to ensure that metrics are only added when the aggregate function suffix is
added a method to set fullscreen parameters in TaskOverlayFactory , TaskThumbnailView , TaskThumbnailView , TaskView , and TaskView classes to
added a new file ` Counting . java ` that implements a method to generate a random number of frequencies to demonstrate the usage of the
set SocketChannel to null in ClusteredAgentManagerImpl . java to ensure proper initialization and avoid potential null pointer exceptions
updated MutisignOperationerGodicTest . java file to improve test coverage for Mutisign operations
added error handling for ` readToStartFragment ( ) ` in ` StaxEventItemReader ` to handle NoSuchElementException to improve robustness by
updated import statements and added null checks in ShadowTextView and TestAttributeSet classes to improve code clarity and ensure proper handling of null resource names
updated import statements from ` com . nimbusds . jose . shaded . json . JSONArray ` to ` net . minidev
added support for " AIX " and " AIX " operating systems in OS . java and PKCS11Test . java to ensure compatibility
fix : use router control IP address instead of private IP address
added a new method ` invokeWithoutBlockingWithResultSync ` to ` CN . java ` to provide a way to invoke without blocking tasks
removed the PresenceMessageComboTests . java file to the test class is no longer needed for the project
updated calculations in PortraitPagedViewHandler to use Math . round for width , right , and bottom calculations to improve precision and avoid potential overflow
updated method names from " testdata " to " clusteredPoints " in TestClusterDumper . java to ensure consistency in naming conventions for
updated the calculation of class sizes in ClassSize . java for better memory management to improve memory efficiency and prevent potential null pointer exceptions
camel - 15836 : camel - runtime - camel - spring - boot : use typeconverter instead of typeconverter
added conditional task handling in SparkCrossProductCheck . java to ensure proper dispatching of tasks in the Spark cross product process
refactor action addition logic in Launcher and LauncherModel classes to improve code readability and maintainability
updated ` LoginInfoEndpoint ` to include ` jsonResponse ` in ` LoginInfoEndpoint ` and added unit tests for ` LoginInfoEndpointTests `
added a ` toDescriptiveString ( ) ` method to ` AssignmentManager ` to provide a way to descriptive string representation of
updated variable names from ` message ` to ` result ` in ` HuobiAccountInfo ` and ` HuobiAccountServiceRaw ` to
added support for the " PERIOD " column in MariaDBDatabase and corresponding unit tests in AddColumnGeneratorTest to ensure compatibility with MariaDB '
[ beam - 10286 ] provide clearer guidance on the default environment of the Beam Java SDK to enhance user understanding of the process command
added Launcher shortcuts and bug fixes in VersionChangeLogs . java to provide clearer guidance for users regarding Launcher shortcuts and dictionary loading
updated NUM _ MILLIS _ IN _ DAY constant from private to public in IndexExpressionIT and TestUtil to allow external access to NUM _ 
removed the print statement from ImageResourceLoader . java to clean up the code and improve readability
[ java ] use aeronclient instead of aeronclient ( ) instead of aeronclient ( ) .
updated validation logic in Attr . java and added a new class NoWarnOnImplicitParams . java with a new method NoWarnOnImplicitParams .
refactor menu item handling in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by reducing duplication
added BTC _ deposit and reserved6 to BTCETransHistoryResult . java and updated assertions in BTCETransHistoryJSONTest . java to
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance by using Set instead of List for series and exceptions
added @ Deprecated annotation to PluginLoader . java to indicate that the class is outdated and should no longer be used
[ iotdb - 4071 ] fix lastqueryexecutor . lastwithseqtimegreaterthanseqtime ( ) in iotdb
updated the formatting of the request string in HttpResponse . java to improve readability and maintain consistency in formatting
added a static variable " slf4j . simpleLogger . log . org . slf4j . simpleLogger . log . org . slf4
added a method to set the title bar ' s safe area in Sheet . java to ensure the title bar reflects the intended visual appearance of the
modified the loop condition in OverflowSeriesImpl . java to use a for - each iteration instead of a loop to improve performance by avoiding unnecessary iteration
added a SQL statement to validate SQL parsing and deparsing in AlterTest . java to ensure that SQL commands are correctly parsed and deparsed
changed the access modifier of the copyState method from package - private to public to allow access to the copyState method from other classes
[ hotfix ] [ runtime ] fix typo in asyncservice . executecallable ( )
added a constant for SUFFIX _ SPLIT _ FILE in FileLister and modified file name handling in FileSystemSplit to improve code maintainability and
refactor multiple Java files for consistency and clarity to improve code readability and maintainability
refactor conditional checks in CompareFunctionsProcessor . java to improve readability to enhance code readability and maintainability
refactor ` reduceScopeForLimitedSpace ` method to use ` expectedSize ` instead of ` earlySSTableEstimate ` to improve clarity and
added ` toString ( ) ` method in ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to stream
added a check for the state handler in AbsSwipeUpHandler and updated task stack listener registration in TaskAnimationManager to ensure proper cleanup of task stack
added ` getLockTimestamp ( ) ` and ` setLockTimestamp ( ) ` methods to ` AppPreferences ` , ` PreferenceManager ` , and
refactor artist retrieval logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
add a null check for remoteMessage in NCFirebaseMessagingService . java to prevent potential NullPointerException when remoteMessage is null
[ java ] fix nullpointerexception in splittext and add test for zero - byte input
added keystore handling for Windows key stores in HttpsConnectorFactory to ensure compatibility with Windows - specific key stores
updated default check timeout values from 400 to 1 _ 000 in RestTemplateSenderTest , WebClientSenderTests , and WebClientSenderTests to
added a conditional check for FILE _ NOT _ FOUND in FileSyncAdapter . java to handle cases where the file NOT _ FOUND is ignored
added animation functionality to the Slider class and updated related fields in Slider . java to enhance slider functionality by allowing customizable animation options
updated assertions in LineSeparatorProcessorTest . java for consistency to improve readability and maintainability of the test code
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to accommodate larger texture pack sizes
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParentheses ` to ensure that
camel - 14284 : camel - Hazelcast queue consumer should not throw exception if body be null
added a new test class ` TextFeedbackTest ` and implemented a new test class ` TextFeedbackTest ` and ` TestRunner ` for testing text
replaced Math . round with Float . compare in DefaultSolrHighlighter . java to improve accuracy of score comparisons
updated case statements in AddAndScaleMultiImage . java and ResourceEditorApp . java to ensure proper resource management and prevent potential resource leaks
added a new method ` arrayClassElementOffset ` to the ` HotSpotReplacementsUtil ` class and updated ` ArrayCopySnippets ` to
[ hotfix ] [ log4j2 - 1870 ] fix the bug in defaultlogpublisher . getstage ( )
added remoteScmSupported property and its getter / setter methods in Configuration and RuntimeEnvironment classes to enable support for remote SCM systems in the application
added support for additional state changes in MieleApplianceHandler . java to ensure proper handling of state changes in the application
replaced ` StatsLogCompatCompatCompat ` with ` SysUiStatsLog . LAUNCH _ EVENT ` in ` StatsLogCompatManager . java
updated logger variable name from ` log ` to ` log ` in ` LocalZookeeper . java ` to improve code readability and consistency
added unit tests for project generation events in EventSerializationTest . java to ensure correct serialization and deserialization of project generation events
ggb - 221 fix selectionmanager . getspecpoints ( ) to work with special point
refactor JavaCompiler class to improve code organization to enhance maintainability and readability of the code
added error handling for non - positive time in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to ensure that the test execution time is
refactor multiple Java files for consistency and clarity to improve code readability and maintainability
added " -- gc - sections " and " -- nocopyreloc " to the ldflags in NdkCxxPlatform . java to
updated URI handling in the SpringCloudCircuitBreakerFilterFactory and added a new test for URI expansion in the CircuitBreakerFilterFactory to improve
refactor multiple test files for improved clarity to enhance maintainability and readability of the test codebase
added null checks for URI and localName in ReadOnlySharedStringsTable . java to ensure robustness by preventing potential NullPointerExceptions
added a method to retrieve an accountnet with a query address and a test for the getAccountNet method in HttpMethed . java to
added a conditional check for availTextWidth in SwingUtilities2 . java and updated UIManager . setLookAndFeel method in Test6635110 . java to
refactor ` FlatteningIterator ` and ` FlatteningIterator ` to use ` next ` instead of ` blank ` to improve clarity and
replace ` ` title ' ' with ` ` replace ' ' for ` ` title ' and ` ` body ' ' in ` NotificationUtils . java
refactor SecurityCenterSettingsServiceClient and package - info . java files to improve code organization and maintainability
added a test method ` reloadAndDeleteAnyExistingQuestion ( ) ` to the ` InstructorFeedbackEditQuestionsUiTest ` class to
updated return statements in HSSFSheet . java and BaseTestSheet . java to ensure accurate row comparisons and improve test coverage for physical row
added permission checks for malicious intents in InstallShortcutReceiver , Launcher , and Launcher classes to prevent malicious intents from being added to the
[ java ] use sendevent ( ) instead of notifysessionopened ( ) in sequenceragent .
refactor ` AbstractParquetMapInspector ` to use ` hashCode ( ) ` instead of ` StandardParquetHiveMapInspector ` to improve
added a check for remotely closed remotely in HTTP3StreamConnection . java to ensure proper resource management and prevent memory leaks
changed the ` SplitReader ` interface from ` AutoCloseable ` to ` AutoCloseable ` to enable AutoCloseable functionality for better resource management
removed the deepCopy method from GsonBuilder to streamline the code by eliminating unnecessary duplication
replace null return statements with a static final constant for NOT _ FOUND in LLScanner and LLSourceBuilder to improve code readability and
replace ` fileOpenFuture ` with ` fileOpenFuture ` in ` RestClientRequestImpl . java ` to improve code readability and maintainability
updated the method call from ` dispatchStatusString ( ) ` to ` dispatchStatusString ( ) ` in ` GrblController . java ` to
replaced MockFactory with SearchingClassLoader in MockFactory . java and created SearchingClassLoader . java with a new class SearchingClassLoader . java for
added a new file TestRefreshFlagBug . java to test the refresh flag behavior in the scene
updated join type checks in ConstantPropagateProcFactory . java to include LEFT _ SEMI _ JOIN to ensure proper handling of LEFT _ SEMI JOIN
updated response completion logic in HttpReceiver , HttpSender , and HttpSender classes to ensure proper handling of CONTINUE _ 100 status codes
rename array length offset from arrayLengthOffset to arrayOopDescLengthOffset in multiple classes to improve clarity and consistency in naming conventions
add default policy to brokertestsupport to make it easy to configure the broker .
updated multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
added a check for the presence of the app context before stopping to ensure that the application context is stopped only if it is not already running
refactor drawItem method to return GlyphLayout instead of void to improve code readability and maintainability by using a more descriptive method
refactor metrics handling in SpringmvcClient and CodeFirstSpringmvc to utilize a dedicated metrics publisher to improve code maintainability and reduce
updated the SAFE _ ACCOUNT _ AGE _ DATE constant in AccountAgeWitnessService . java to improve code readability and maintainability by
refactor code for better readability and maintainability in StructureHeader . java and StructureReader . java files to improve code readability and maintainability
added ` ResourceUrlProviderExposingInterceptor ` to the ` CasWebflowContextConfiguration ` and ` DefaultLoginWebflowConfigurerTests `
added a new ` DeadAssignmentEliminator ` class and created a new ` DexReturnInliner ` class to facilitate the transformation of
refactored EnrichedRuleDTO and EnrichedRuleDTO to improve code readability and maintainability
updated method calls in PathResource and AliasCheckerSymlinkTest to include a symlink directory parameter to enhance functionality by allowing users to navigate to the correct directory
[ hotfix ] [ table - common ] remove sql dialect from executionentry
added a Supplier parameter to the ` rDotJavaPackagesSupplier ` and updated related methods in ` AndroidBinaryGraphEnhancer ` and ` AndroidPackage
pmd : add test for deprecate package declaration
[ iotdb - 4071 ] set min _ cross _ compaction _ unseq _ file _ level for compaction unseq file
[ hotfix ] [ resourcemanager ] move activeresourcemanager to activeresourcemanager
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
replaced URI creation with URI creation in ZipResource . java and added a new test class for feature file parsing to improve robustness by handling URISyntaxException
refactor ExpandableUploadListAdapter to improve clarity and maintainability to enhance code readability and ensure proper thumbnail creation based on upload status
refactor configuration handling in RobolectricTestRunner and add unit tests in RobolectricTestRunnerTest to improve clarity and maintainability of configuration
replaced ` Block ` with ` Iterables . filter ` in ` ModelLoader . java ` to improve code readability and maintainability by using a
renamed ` AbstractDataChangedListener ` and ` WebsocketDataService ` to ` DataEventTypeEnum ` across multiple classes to improve clarity and consistency in
updated JSONPojoConvertor to handle Enum types and improved color handling in JSONPojoConvertor to enhance type safety and ensure correct color handling in the
added a conditional check for ` -- view ` option in ` IjProjectCommandHelper . java ` to indicate that the ` -- view ` option
refactor GWTRequestWrapper to use ByteArrayOutputStream for payload and character encoding to improve performance by utilizing ByteArrayOutputStream for byte array processing
refactor GyroControl class to use OrientationCorrectionListener for improved sensor positioning to enhance user experience by enabling and disabling orientation
updated BIOME _ LIST _ SIZE from 256 to BiomeGenBase . getBiomeGenArray ( ) . length in BiomeDictionary .
refactor ` GetInterfaceTest ` and ` Foo2 ` interfaces in ` GetInterfaceTest . java ` to improve code readability and maintainability
refactor environment retrieval in FileCompilerConfig . java to improve code readability and maintainability
added a new interface ByteToLongCollector in the com . speedment . common . function . collector package to implement a byte - to - long
added a preload option to the mapDirectory to allow users to enable preloading based on user - defined settings
added custom chart metrics for various components in BukkitPlatform . java to enhance monitoring capabilities for various component configurations
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added aspect ratio and default card image retrieval in CardPresenter . java to enhance the visual appearance of the default card image
do n ' t throw exception when login page URL in authcountselector and loginredirect
added checks for empty values and decimal values in VectorHashKeyWrapper . java to improve robustness by preventing potential null pointer exceptions
added tests for the " testSystemNanoTimeJit " system and ` nanoTimeJit ` method in ` TimeChangeTest . java ` to
added null checks for line in MultiPartFilter and modified MultipartFilterTest to handle null values to improve robustness by preventing null pointer exceptions
fix entity entity drop event for vanilla entity . close # 552
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity of error messages
[ beam - 10286 ] remove unsupportedoperatorsvisitor from planner
added support for RdepsFunction in GraphEnhancementQueryEnvironment and updated related tests in GraphEnhancementQueryEnvironment to enhance dependency management and ensure
refactor Character class implementation to improve code readability and maintainability
added a flag to scale the entire rocket in the ScaleDialog to ensure that the entire rocket is only scaled if it is an AxialStage
replaced ` Arrays . toString ( bytes ) ` with ` Arrays . toString ( bytes ) ` in ` UpdateableResultTest . java ` to simplify
refactor time boundary handling in BaseBrokerRequestHandler to use a deepCopy method to improve code readability and maintainability by reducing duplication
refactor AjpAprProcessor and Http11AprProcessor to use a boolean variable to improve code readability and maintainability by reducing
refactor EightmusesRipper to use a more descriptive format for image titles to improve code readability and maintainability by standardizing
replaced direct calls to ` mDevice . getDevice ( ) ` with ` TestHelpers . getDevice ( ) ` across multiple test classes to improve
added a condition to check if the profile is phone or phone in QuickstepLauncher . java to ensure proper layout behavior for phone devices
replaced ` getValue ( ) ` with ` QueryImpl ` in ` PartTreeJpaQueryIntegrationTests . java ` to use ` QueryImpl `
refactor readAllLines method to use a dedicated method ` readMatchingLines ` to improve code readability and maintainability by encapsulating
added a dynamic check for the ` streamMethod ` variable in ` JpaQueryExecution . java ` to ensure that the ` streamMethod ` is
added null check for entity . type in PhysicsProcess . java to ensure robustness by preventing potential NullPointerExceptions
[ hotfix ] [ table - common ] fix entry processor to reset map when value attribute be indexed
[ jitsi - conference - room ] add callsipimpl to join jitsi - conference - room .
updated color calculation in Utils and UtilsTest classes to improve color management and enhance test coverage
fix defaultmenu . setdisable ( true ) in editormenus and editormenus
updated the ` scratchPath ` method in ` Aapt2Link . java ` to use ` % s / link - tree ` instead of
replaced ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest ` and ` ThriftOverHttp
ggb - 272 update selected geos by default
added handling for ` MarkedYAMLException ` in ` YsldValidator . java ` to improve error handling for CQL expression parsing
added ` isCanceled ( ) ` method to ` BehaviorCall ` , ` Calls ` , and ` ExecutorCallAdapterFactory ` classes to
added a default method ` isAnnotationPresent ( Class < ? extends Annotation > annotationClass ) ` to ` Class < ? extends Annotation > ` and `
added a default method to the removeAllWidgets method in UILayout . java to provide a clearer error message when the method is not implemented
[ hotfix ] [ test ] use log4j . log4j . runtime . client . jobclient . log4j . log4
fix for opensslcipher . getoutputsizeforupdate ( ) in opensslcipher
added handling for high - res content transcoding in PlaybackController . java to ensure proper transcoding of high - res content in the playback controller
[ beam - 11486 ] fix bug in datasourcemock ( # 11486 )
refactor GpsLoggingService to use a list of listeners based on the prefer _ celltower flag to improve code readability and maintainability
updated method signatures in vt320 . putString and Relay . java to use byte arrays instead of boolean arrays to improve memory efficiency and
added support for handling BaseItemDragListener in FolderIcon . java to enhance drag functionality for better user experience
add a new method ` createEmptyArtifact ` to ` RepositoryConnector ` , ` FileSystemConnector ` , and ` FileSystemConnector ` , and ` FileSystem
updated variable names for consistency and clarity in RabbitMQPublisherImpl . java to improve code readability and maintain consistency in naming conventions
removed unnecessary calendar checks in VideoViewerActivity . java to simplify code logic for better readability and maintainability
added a compactPath method to SftpOperations . java to ensure that the file path is compacted before proceeding with operations
updated mock assertions in BaseWeatherConsumerTest to allow more time for tests to complete before proceeding
updated variable name from ` groupSortStr ` to ` sortWithinGroupStr ` in ` QueryComponent . java ` to improve clarity and consistency in
added support for LARGE _ FERN and LARGE _ FERN in BlockDoublePlant . java and BlockType . java to
updated tree focus handling in TranscodingTab . java to improve user experience by enabling request focus functionality
added throw statement in VirtualMachineManagerImpl . java to ensure that exceptions are properly propagated to prevent runtime exceptions
added a method to accept licenses in DB2TestSystem and updated import statements in DockerDatabaseWrapper , DockerDatabaseWrapper , and TableIsEmptyGenerator
added a ` setUnitGroup ` method to ` DoubleModel ` , ` optimizationGoalUnitSelector ` , and ` optimizationGoalUnitSelector ` to
added a new constant BTC _ ZMW in CurrencyPair . java to provide a centralized currency pair for BTC and ZMW
added a check to set the number of samples in TestPBRLighting . java to ensure that the fpp has a valid number of samples
updated assertion methods in StepWithSimpleTaskJobParserTests . java for consistency to improve code readability and maintainability
changed the variable ` credentialsWithSameUsernameAndPassword ` from ` TestUtils . getCredentialsWithSameUsernameAndPassword ` to ` final ` to
updated string concatenation in ExpressionNode . java to improve readability and maintainability of the code
refactor DDLSemanticAnalyzer to utilize a new method for adding service output to improve code readability and maintainability by encapsulating
( chore ) camel - jbang : add toclassorinterfacetype to javaparser . toclassorinterfacetype ( ) .
added " org . eclipse . jdt . " to WebAppContext . java to hide jdt used by jetty
removed the call to ` super . useAuthCache ( ) ` in ` NegotiateAuthentication . java ` to simplify the code by eliminating unnecessary
updated namespace assignment from ` segments [ 0 ] ` to ` Utils . capitalize ( segments [ 0 ] ) ` in ` PageTitle . java `
camel - 14284 : improve error message when no consumer be available
added null check for zooKeeper in ZooKeeperHiveLockManager . java to ensure robustness by preventing potential NullPointerExceptions
updated the variable name from " Initializing Phase 2 " to " Initializing " in Loader . java to improve code readability and maintain consistency
replaced direct calls to ` mVibration . vibration ( ) ` with a new ` runOnUiHelperThread ( Runnable runnable )
added a call to updateLastRemoteStreamId in HTTP2Session . java to ensure proper handling of remote stream IDs
added hint hint for text aliasing in EditorHeader , EditorToolbar , and Preferences classes to enhance text rendering options for better user experience
[ java ] rename termwindowsize to sentPosition in driverconnection and driverpublication
remove static import from ctannotationimpl . onobjectadd and onobjectupdate ( )
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
updated getRGBPixelImpl method to return a Rectangle object instead of a native method to improve performance by avoiding unnecessary native method calls
added a new method ` newPrintStream ` to handle UTF - 8 encoding in ` System . java ` to enhance flexibility in stream handling by allowing
updated the vibrate from 1 to 25 in TouchableMovementMethod . java to improve the responsiveness of the touchable movement method
updated import statements for AppEngineSqlCloudSession and FlybushDataClearer in AppEngineSqlCloudSession . java and TestEnvironment .
refactor WebSocketClient constructor to use a custom executor parameter to improve code readability and maintain consistency in naming conventions
[ i18n ] fix i18ntest . java fail on window
refactor ` handleIllegalArgumentException ` and ` handleLoadConstantException ` methods to use ` RuntimeException ` instead of ` IllegalArgumentException ` to improve
added a call to context . restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper handling of authentication state changes
added a new class LowercaseComparator to compare String values in CoNLLUFeatures . java to ensure consistent comparison behavior for string values
refactor JavadocTool to use a new method ` parse ` to improve code readability and maintainability by encapsulating parsing logic
[ java ] ignore test that fail if the option be not in a multiselect
added a check for the number of keys in HighestKvno . java to ensure that the number of keys is valid before proceeding with
added error handling for retrieving attributes in HDF5BatchReader . java to improve robustness by logging warnings when no objects with a single record
[ beam - 10225 ] fix typo in class name .
updated the XmlRootElement annotation from " copySnippetRequestEntity " to " createTemplateRequestEntity " in CreateTemplateRequestEntity and ProcessGroupResource to improve
added a new file TestMultiANewArray . java that tests the behavior of the ` WriteClassFile ` method in ` JavaProcessBuilder `
added a new configuration option for managing secondary storage in the management server to enhance the management server ' s configuration options for managing secondary storage
updated the logic for adding block IDs in SyncBlockChainMsgHandler . java to ensure correct retrieval of block IDs based on the head number
added theme setting in PreviewTabView . java to ensure the preview content reflects the current theme for better user experience
added a null check before closing the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` to verify the behavior of the idle timeout in ` ConnectorTimeoutTest . java ` to ensure
add default dcoref . dictpmi and dcoref . dictpmi and dcoref . dictpmi and dcoref
updated the ` readIdentifier ( ) ` method to use ` readTagName ( ) ` instead of ` readIdentifier ( ) ` to improve code clarity
updated JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to ensure type safety and improve code readability
updated log level from warn to debug for child nodes in DistributedQueue . java to improve logging granularity and reduce log verbosity
refactor ColorExtractionService to use a new method ` getHotseatPallete ( ) ` to improve code readability and maintainability
added ` TableEntryByTypeTransformer ` and ` TableCellByTypeTransformer ` methods to the ` TypeRegistry ` and ` TypeRegistry ` classes to enhance
removed assertion for newAvailableShared in AtomicRemainder . java to streamline the code by eliminating unnecessary assertions
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
removed the ` projectGenerated ` field from ` ProjectGenerator ` and ` WorkspaceAndProjectGenerator ` to streamline the project generation process by eliminating unnecessary
[ hotfix ] [ table - common ] fix checkstyle violation in driverutils
updated route routes and added a new Contact class in the ApplicationController and ApplicationController classes to enhance contact form functionality and improve code organization
guacamole - 5 : refactored simpleuser . getconnectionpermissions ( ) to use objectpermissionset instead of permission
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
rename KnowledgeBase to KieBase in setMode method from KnowledgeBase to KieBase to improve clarity and consistency in method naming
updated findWhereNameLikeAndActive methods to include " alias like : name " and " alias like : name " in multiple classes to ensure accurate
replaced ` IOUtils . closeSafely ` with ` IOUtils . closeSafely ` in ` DocFieldProcessor . java ` to improve resource management and
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , HttpLongPollingDataChangedListener , HttpLongPollingDataChangedListener , and
added a click listener to the overflow button in ExpansionViewHelper . java to improve user interaction by allowing the overflow button to be clicked
updated ` failWithoutSubject ` methods to use ` non - null ` instead of ` IllegalArgumentException ` in multiple classes to improve clarity and consistency in
add help button to the help button and add help button to the help button
[ java ] move protobufferutiltest to core . util . protobuffer . protobuffer . util . protobuffer . protobuffer .
fix a bug in jabrefframe . getdivideddivided ( ) .
updated the ` getNewFileImpl ` method to return a ` toReturn ` and modified the ` AuxSubGenerator ` to improve type safety and
[ geos - 6492 ] fix typecastexception in geoserverfeaturesource
updated the variable ` extractTypes ` from ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity and
added a ` metaContactAvatarUpdated ` method to ` MclStorageManager ` , ` ContactList ` , and ` ContactList ` classes to
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command `
added a new test method ` testCleanUpAuditLogTablePostParametersByPosition ` to ` AuditLogTest . java ` to ensure that the
added @ SuppressWarnings ( " unchecked " ) annotation to injection methods in ComponentContext . java to improve type safety and suppress unchecked warnings during injection
added regex patterns for comment lines in ACLFileParser and modified parsing logic in ACLFileParser to improve comment processing and ensure correct parsing of comment lines
added a new ` FileSystemPlugin ` parameter to the ` isReadable ` method in ` MapRDBFormatMatcher ` and ` MapRDBSub
added ancestorDimensionValues to StarTreeImpl and updated related logic in TestStarTreeNodeImpl to improve the handling of dimension values in the tree structure
added a check for user unlock status before dumping views in TouchInteractionService , BaseQuickstepLauncher , and Launcher classes to ensure proper resource
updated the condition from ` widthStr ` to ` positionStr ` in ` Photo . java ` to improve clarity by using a more descriptive
refactor certificate validation logic in PKIXValidator . java to improve code readability and maintainability
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` org . apache . integratedtest . apache . integratedtest . apache . integratedtest . dubbo ` to ` org . apache
vpc : remove unnecessary skipProjectNetworks and skipProjectNetworks from acls
[ hotfix ] [ runtime ] fix runtimetypeadapterfactoryfactoryfunctionaltest
added a ` storeUndoInfoForProperties ` variable and a ` storeUndoInfoForProperties ` method to the ` App ` class to control the
updated the initialization of the gradProp variable in XRCompositeManager to use AccessController for privileged actions to enhance security by ensuring the gradProp is
updated StreamCloseTest to use awaitility for better readability and performance to improve test reliability by allowing more time for stream operations
added null checks for perFields in ` DocFieldProcessor ` , ` DocumentsWriterPerThread ` , and ` TermVectorsConsumerPerField `
added support for non - deprecated enums in ConfigurationMetadataGenerator and AbstractJpaProperties to ensure proper handling of non - deprecated enums in configuration
refactor capacity and mask handling in BiInt2ObjectMap and Int2ObjectHashMap to use values instead of capacity to improve code readability and
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 in HiveConf and modified file rename logic in Hive
[ hotfix ] [ runtime ] add trace for send message in parallelnioreceiver
added a null check for the context before returning a new SchemeAndroidIDE instance to avoid potential NullPointerExceptions when the context is null
refactor nativeimagegeneratorrunner to use thread . currentThread ( ) instead of thread . getclassloader ( ) .
updated method signatures in SwitchUserAuthorityChanger and SwitchUserProcessingFilter to use a list instead of a void to improve code clarity and maintainability
replaced ` JaxrsIntegrationTest ` with ` JaxrsIntegrationTestBase ` and added ` JaxrsIntegrationTest ` and ` JaxrsSpring
added querytimeout support to poolutil . getquerytimeout ( )
added DataProvider annotations for XML and supplementary characters in XslSubstringTest . java to enhance test coverage for various XML and supplementary characters
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter . java `
added support for MariaDBDatabase in CreateSequenceGenerator and updated sequence handling in CreateSequenceGenerator to ensure compatibility with MariaDB ' s sequence handling
updated error messages in MappedResizeableBuffer , UnsafeBuffer , and CompilerUtil classes to improve clarity and consistency in error reporting
added MetricsRegistry to QueriesSentinelTest , QueryExceptionTest , and QueryExecutorTest classes to enable tracking of server metrics for testing purposes
added support for MFLN extensions in SSLExtension to ensure compatibility with additional SSL extensions
replaced the constructor of ObjectIterator with ObjectHashSetIterator and ObjectHashSetIterator in ObjectHashSet and ObjectHashSetIntegerTest to improve code readability and maintain
added error handling for character remaining and shortened URL lengths in multiple classes to improve robustness by handling potential exceptions during text length calculations
add datapoint _ ttl to kairosdb . datastore . datastore . datastore . datastore . datastore . datastore . datastore . datastore . datastore .
updated the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and modified the ` checkForAndKillX
added a method to retrieve the terrain at a cell in TerrainGrid . java to enable retrieval of terrains at a specified grid location
added null checks for ` tree . defaultValue ` in ` Pretty . java ` and created a new file ` T6665791 . java ` to
added error handling for missing quest keys in ResourceLoader to improve robustness by logging errors when quest keys are not found
updated the return statement in Request . java to conditionally check if the HTTP channel is not push to ensure that the request only handles non - push
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign method from BlockUtil . java to simplify the signing process by directly using the private key
updated return statement in FileSystemView , Win32ShellFolder2 , and Win32ShellFolder2 classes to improve robustness by preventing null pointer exceptions
updated row height and footer handling in ColumnText , PdfPRow , and PdfPRow classes to improve clarity and accuracy in handling row spans
refactor undo state handling in ListFragment to use SparseArray for better memory management to improve performance and maintainability by utilizing SparseArray for better
add feedbackquestionspersistence logic to uploadbackupdata . getfeedbackquestionspersisted ( )
removed null check for data in bug8024061 . java to streamline code by eliminating unnecessary null checks
no effective change - remove unnecessary code from ebeaninternal
updated AppWidgetResizeFrame and Launcher classes to use Rect instead of Padding to improve layout handling and ensure compatibility with newer Android versions
refactor MethodHandle instantiation in NashornBeansLinker . java for improved readability and maintainability to enhance code maintainability and ensure proper handling
refactor ClassGraph and ScanResult classes to improve code organization and maintainability
updated CountDownLatch initialization from ` CountDownLatch ` to ` goAwayLatch ` in ` IdleTimeoutTest . java ` to improve clarity and accuracy in
replace ` getMessage ( ) ` with ` hasMessageThat ( ) ` in assertions in ` IterableSubjectTest . java ` to improve clarity of failure
removed redundant calls to ` ThreadLocal ` and ` Workbook . currentBook ` in multiple Java files to simplify code and improve readability by eliminating unnecessary object
added a method ` supports ( Class ) ` to the ` Vote ` method in ` ContactSecurityVoter . java ` to ensure that the
removed unused imports for GachaHandler and Tools in DataLoader . java to streamline code by eliminating unnecessary dependencies
added rowsAffected parameter to ` postUpdateLog ` methods in ` AbstractUpdateCommandStep ` , ` UpdateCountCommandStep ` , and ` Update
ggb - 222 fix suggestion margin to be a little more efficient .
updated foregroundFPS and backgroundFPS values from 60 to 60 in JglfwApplicationConfiguration . java to optimize memory usage for better performance
added ObjectReleaseTracker and TransactionLog imports for ObjectReleaseTracker and ObjectReleaseTracker in HdfsTransactionLog and TransactionLog classes to ensure
replaced ` DefaultWebSocketFrame ` with ` ChannelFutureListener . CLOSE ` in ` DefaultHttpServer . java ` to streamline WebSocket flushing process
updated StateMachineErrorTests to use ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` instead of ` TestApplicationEventListener ` to improve
refactor SettingsActivity to use a new method to improve code readability and maintainability by encapsulating background setting logic
updated import statements and added null check for the line in RMEThingHandler . java to improve code clarity and prevent potential NullPointerExceptions
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count based on the specified value
[ hotfix ] [ table - common ] fix typo in replicationsink
replaced Set with Map for the REGEXP cache in RegExpFactory . java to improve performance and maintainability by using a more efficient data structure
added a new method ` reset ( ) ` to ` GameThread ` to reset the game thread to ensure proper resource management and prevent memory leaks
added a method ` login ( username , credentials , request ) ` to the ` DigestAuthenticator ` class to ensure that the login method does not return
refactor parameter handling in SavedRequestAwareWrapper to use an iterator instead of an array to improve code readability and maintainability by reducing redundancy
updated info messages from " hiddenSingleton " to " lc " in multiple classes and added a toString ( ) method in multiple classes to improve clarity and
replaced the call to ` hasNotified ` with ` this . wakeup ( ) ` in ` CommitLog ` and ` HAService `
updated conditions in PhotoViewerActivity and added a new method ` isAndroidO ( ) ` in ` Utils . java ` to ensure compatibility with Android
updated schema info level setting from minimum to basic in SchemaCrawlerTest . java to ensure consistency in schema info level configuration
replaced ` XMLStreamWriter . createXMLStreamWriter ` with ` BufferedOutputStream ` in ` SaveTask . java ` and ` VizModel . java ` to
updated UTF - 8 encoding handling in TestPayloads . java to improve code readability and maintainability by centralizing UTF - 8 encoding
fix mc - 103516 : fix mc - 103516 ( # 103516 )
added " Tomcat101ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter " in ProbeConfig . java to
[ drools - 4072 ] add a test case for multi - accumulation of a person in the MarshallerTest class to ensure correct behavior of
refactor case handling in NowSearchTerm and SearchTermBuilder classes to improve readability and maintainability of the code
pdfbox - 4071 : make pdfcloneutil class public
added SpringExpressionLanguageValueResolver and modified method invocation in RemoteEndpointServiceAccessStrategy and WSFederationRelyingPartyAttributeWriter to utilize
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to improve code readability and maintainability by encapsulating
added notification for command starting in AsyncBackgroundTaskManagerTest . java to ensure the command is notified when the command is started
added a public method ` recomputePreviewDrawingParams ` to ` FolderIcon ` , ` PreviewItemManager ` , and ` PreviewItem
refactor tokenizer handling in LukeRequestHandler . java to use CharFilterFactory instead of TokenFilterFactory to improve code readability and maintainability by using
replaced IllegalArgumentException with ParamChecks . nullNotPermitted in AbstractCategoryItemRenderer . java to simplify null checks and improve code readability
added verbosity handling in JavacStep and ExecutionContext classes to enhance error message formatting based on verbosity settings
added a null check for " oracle " schema in DbSqlSession . java to ensure compatibility with Oracle database types
updated the string concatenation in AsyncLoggerAllThreadContextImplementationsTest to use LogManager . getContext ( false ) instead of LogManager . getContext ( false )
added a new file TestShrinkToOneRegion . java that tests the ShrinkToOneRegion class to facilitate testing of the shrinkToOneRegion
updated package splitting logic in SandboxTestRunner . java to use Splitter for better readability to improve code clarity and maintainability by using a more
updated the ` AnalyzingInfixSuggester ` to use ` asSet ` instead of ` utf8ToString ` in ` Analyzing
updated the handling of ` localAttachment ` in ` PushsaferMessageBuilder . java ` to include ` data : image / ' ' and `
updated command annotations in ModelExplorer , SequenceModelExplorer , SequenceModelExplorer , SequenceModelExplorer , SequenceModelExplorer , and StripProvenance classes
pdfbox - 4071 : remove unnecessary null check for characterlistmapping . clear ( )
removed the ' final ' modifier from multiple test files to simplify the code and improve readability
updated the ` evaluate ` method to include a ` n ` parameter and modified the ` evaluate ` method to accept a ` Integer ` parameter to enhance
updated injection enabled and useIncludedLibrary variables in GraalJSScriptEngineFactory . java to improve code readability and maintainability
changed Test1 and Test2 classes from package - private to public to allow access to Test1 and Test2 classes from other packages
refactor plot entry handling in PlayerEventListener . java for improved clarity to enhance code readability and maintainability by using more descriptive names
added session parameter to the getAdditional method in ConditionAndOr and ConditionInConstantSet classes to enhance the functionality of the getAdditional method in the
replaced stored fields with NumericDocValuesField in BaseNormsFormatTestCase . java to improve clarity and consistency in naming conventions
updated Box2DCharacterControllerTest to use transform and friction for DynamicBody in Box2DCharacterControllerTest . java to improve test accuracy and
added test cases for global buffer sizes in TestBadOptionValues . java and modified test cases in TestMemoryOptions . java to ensure that memory
removed unnecessary whitespace in ObjectAlignment and Options classes to improve code readability and maintainability
added a ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` , ` AndroidInstrumentationTestJVMArgs ` ,
refactor DocHelper class to improve code organization to enhance maintainability and readability of the code
updated the initialization of acceptableThrowawayItems to use a list instead of a list to improve code readability and maintainability
replace generics with generics in Test6987555 . java to improve type safety and prevent potential ClassCastExceptions
prevent starving when a lot of fetcher threads be use
refactor Inflection class to improve code readability to enhance maintainability and facilitate future updates
added getter and setter methods for the elContext in EvaluationContext . java to provide access and setter functionality for the el context
removed unused import of Plugin from SummaryPrinter . java to clean up the code and improve readability
added a break statement to the break statement in DrawerActivity . java to ensure proper flow control during execution
updated import statements in MongoQueryCreator . java to use a wildcard import for query objects to improve code readability and maintainability by using a more
add a userloggerfactory property to the xwork _ logger _ factory in the xwork _ logger _ factory
updated method names from ` adminAddPeerFailsWhenP2PDisabled ` to ` adminAddPeerFailsWhenP2PDisabledOn
add ` ` livenessstatehealthindicator ' ' bean name to the ` ` readinessstatehealthindicator ' ' bean
added a concurrent map for creating a PStore in LocalPStoreProvider . java to ensure thread - safe retrieval of PStore instances
refactor deleteFiles method to be private in TestUtility . java to improve encapsulation and maintainability of the code
renamed Provider < T > and ServiceProvider < T > to ServiceProvider < T > in ServiceLoaderSpliterator and TypeUtil classes to improve clarity and consistency
do n ' t throw javainteropreflect . findfield ( ) in javainteropreflect and javaobjectmessageresolution . setfield ( )
added functionality to check if the toolchain is not present in AbstractCell and DefaultToolchainProvider to ensure proper handling of toolchain creation in the
fix race condition in polyglotengineimpl . setcontextaddedtoengine ( )
updated conditional checks in AbstractCheckDescriptor . java to use contains instead of indexOf to improve code readability and maintainability
added ` exportedLinkerFlags ` method to ` CxxLibraryDescription ` , ` CxxLibraryBuilder ` , and ` setExportedLink
replaced the ` onConfigurationChangedInternal ` method with ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` RecentsView `
updated type checks in MulticasterBatchListener , SimpleStepFactoryBean , and SimpleStepFactoryBean classes to use generics instead of generics to
updated the ` newBlock ` array to include the ` getHeader ( ) . getHashAsString ( ) ` method in ` AbstractBlockChain . java
change defaultmessagestore . getphysic ( ) to use getstorepathcommitlog ( ) instead of storepathcommitlog
refactor ` MicrometerMetricManager ` to use ` try - with - resources ` instead of ` try - with - resources ` to improve code
updated CompactionLog to handle message transferred and miss messages in CompactionLog . java to ensure accurate message processing based on message status
added @ Deprecated annotations to various classes to indicate that these classes are outdated and should no longer be used
added a static final SYSTEMUI _ PACKAGE constant and a method to check if the system UI has a system UI object to enable testing of
changed the visibility of the logger variable from static to final in SessionRegistryImpl . java to ensure immutability of the logger and sessionIds map
added checks for empty cookie jars in InMemoryCookieStore and NullUriCookieTest to ensure proper handling of empty cookie entries
added a ` toString ( ) ` method to ` BonsaiValue ` , ` BonsaiWorldStateArchive ` , and ` Bons
updated method signatures in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to accept a CharSequence parameter to enhance flexibility in text
added @ NotYetImplemented annotation to AlertsTest . java to indicate that the bug is not yet implemented
added exception handling for connection return in SocketConnector . java to ensure proper resource management and avoid potential memory leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` across multiple files to improve clarity and consistency in
added synchronization for the Heartbeater thread in DbTxnManager to ensure thread safety when accessing the heartbeatExecutorService
refactor ` transformBuildResultIfNotPresent ` method to use ` wrapWithTracingAndCancellation ` instead of ` transformBuildResultIfNotPresent ` to
added a new method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to improve user experience by ensuring the first line is
added a temporary directory for testing files in TestInformationSchemaWithPrivilege . java to ensure compatibility with local and temporary files for testing purposes
added null checks for graphicsConfig in Component . java to avoid potential NullPointerExceptions during graphics configuration retrieval
[ tika - 232 ] fix test case for oom in legacy mode
refactor pipeline processing logic in Pipeline . java to improve code readability and maintainability by encapsulating process logic
updated argument handling in PrintTagList . java to use a parser file instead of a model file to improve flexibility and provide clearer error messages for
replaced ` getFullyQualifiedName ( ) . getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser ` and added a
[ java ] fix a test that fail due to invalid location size and message count
( chore ) camel - startfromtrippingrecordinglogtest : use connectclient instead of waitforleaderid
updated RoundRectangle2D . Float constructor in LineBorder and Test4252164 . java to ensure accurate rounding of rectangles based on the
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerExceptions when galleryImages is null or empty
updated deployment ID generation in StandardChangeLogHistoryService and created CreateDatabaseChangeLogTableGenerator to ensure proper handling of deployment IDs in the database
pdfbox - 4071 : rename fdf to interactive . form . setfield ( )
refactor ` canUseIndex ` method to use ` IndexColumn ` instead of ` boolean ` to improve code readability and maintainability by reducing
added a provisional engine map and modified engine handling in QuickfixjComponent to improve engine management and ensure proper engine management
added a boolean flag ` displayZoomControls ` to ` setMixedContentMode ` and ` setMixedContentMode ` methods in ` RoboWeb
add corporea and slab block to the botania botania library . close # 244
refactor ConnectionFactory class to improve code readability to enhance maintainability and facilitate future updates
added a method ` EnableDisableMenuItems ( ) ` to manage menu items in ` GpsMainActivity . java ` to enhance user experience by
updated the message for empty favorites in ExtendedListFragment . java to use a filter list icon to improve user experience by providing a more visually
hhh - 13232 fix test failure in entitytest ( h2 )
updated MotorMountConfigurationPanel to use JTable . AUTO _ RESIZE _ OFF instead of JTable . AUTO _ RESIZE _ OFF to improve
updated the LINE _ SEPARATOR constant from ` lineSeparator ( ) ` to ` System . getProperty ( " line . separator " ) ` to
added getter and setter methods to POIXMLProperties and set creator and subject properties in POIXMLProperties . java and TestPOIXMLProperties
updated the ` doStop ( ) ` method call from ` super . doStop ( ) ` to ` super . doStop ( ) ` to
added a condition to check for the length of cncFile before proceeding to ensure that cncFile is not empty before proceeding
rename ` NonMarkedFoo ` and ` FooCommand ` to ` FooCommand ` in ` UnsatisfiedTypeBounds . java ` to improve clarity
added support for jmod files in ClassFileSourceImpl . java to enhance compatibility with Java home and Java home files
updated ` TreeBackedElement ` and ` TreeBackedPackageElement ` to use ` Preconditions . checkNotNull ` instead of ` canonicalizer ` to
updated token request initialization in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest and request parameters to enhance token
replace arrayLength with valueRangeObject in AbstractFromPropertyValueRangeDescriptor . java to improve clarity by using a more descriptive variable name
added synchronization methods in ZKAssign , ZooKeeperWatcher , and ZooKeeperWatcher classes to ensure proper synchronization of Zookeeper nodes
added exception check for no current context in GlUtil . java to ensure proper exception handling for no current context
[ hotfix ] [ test ] fix ruleflowgroup activation in executionflowcontroltest
added a return statement to the HystrixDashboardConfiguration class to ensure the method exits early to avoid potential errors during execution
replaced ` PipeNotExistException ` with ` PipeInfo ` in ` IoTDBPipeIT ` and added exception handling in ` IoTDBPipe
fix clientqueuedisruptiontest to not fail on slow ci server
fix : use defaultjavaprettyprinter instead of signatureprinter . getsignature ( )
changed the access modifier of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated import statements in GeoPointField , GeoPointField , and GeoPointPrefixTermsEnum classes to enhance code clarity and maintainability
added a new file FakeBuildable . java to implement a FakeBuildable class to enhance testing capabilities for buildables in the build system
updated condition checks in GuiIngameForge and UniversalBucket classes to improve code readability and maintainability
renamed ` path ` to ` timeseries ` in ` TSParser ` and renamed ` path ` to ` timeseries ` in ` SQLParser
added a check for EPSILON in TubeCalc . java to ensure that the method returns 0 if the value exceeds the EPSILON value
replaced direct calls to ` getBucket ( ) . getBucket ( ) ` with ` _ storage ` in ` GcsPinotFS . java
removed the call to ` VertxUtils . blockCloseVertxByName ` in ` TestHighwayTransport . java ` to streamline the code
added ` createWithHistoryView ` and ` appendColumnNames ` methods to ` DbTriggerBasedHistoryDdl ` and ` PostgresHistoryD
updated the clustering engine test from 2 to 3 in CarrotClusteringEngineTest . java to improve test accuracy by adjusting the clustering
added JUnit Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need to be rewritten
updated ` ParserCacheCommand ` to use ` ParserStateObjectInputStream ` instead of ` ObjectInputStream ` and added a new ` ParserStateObjectInputStream
added null checks before setting the objectQuotingStrategy in ChangeSet and DatabaseChangeLog classes to improve robustness by preventing potential NullPointerExceptions
replaced parse method with fromXmlStream method in SliderAppsViewControllerImpl . java to improve readability and maintainability of the code
deleted the CsrfControllerAdvice . java file to remove unused CsrfControllerAdvice . java to streamline the codebase
refactored path handling in AntCompiler to use a dedicated method to improve code readability and maintainability by centralizing path separators
added scrim animation handling in Launcher and LauncherAnimUtils classes to enhance visual feedback during transitions for better user experience
updated the return value from 2 to 1 in TypeInferenceUtils and updated related test cases in TypeInferenceUtilsTest to improve accuracy of value comparisons
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
added support for ` UNC ` path prefixes in ` WindowsPathParser ` , ` PathOps ` , and ` PathOps ` classes to ensure
replaced InetSocketAddress initialization with MulticastSocket initialization in Promiscuous . java to improve code readability and maintainability
replace writer . close ( ) with writer . close ( ) in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
modified the return statement in IndexColorModel . java to ensure that nBits is not cloned to prevent unintended modifications
changed access modifier of ` deriveCollectorName ` method from private to protected in ` ProfilerCollector ` and added a new test class ` TestCollector
updated the ` hasCustomWriteTarget ` method to use ` requiresTypeHint ` instead of ` handledByCustomConverter ` to improve code readability
added PerfStatsCollector to create proxy factories in ProxyMaker . java to enhance performance monitoring for proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
improve error message when bind a local port to the remote host .
refactor reinflateWidgetsIfNecessary method in Launcher and Workspace classes to improve code readability and maintainability by encapsulating widget
added a new file ` DeleteInsideFileDialogTest . java ` with a test class ` DeleteInsideFileDialogTest . java ` to verify the
updated Display . update ( ) and Display . processMessages ( ) in LwjglAbstractDisplay . java and TestSoftwareMouse . java to
add a godmode image to the instructorstudentlistpageuitest . testshowphoto ( ) method .
added methods , onlyrun , and method in TestIgnorance . java to enable testing of environment variables based on environment properties
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature for better readability
added null check for pageable in QueryDslJpaRepository and added a new test for null pageable in QueryDslJpaRepository
added a ` computeMemorySize ` method to the ` MemoryManager ` class and corresponding unit tests in ` MemoryManagerTest ` to enhance memory management
increase test timeout from 2000000 to 20000 in publishjmsconsumerconsumertest . java and publishjmspublisherconsumertest . java
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future updates
refactor StreamingAggTemplate to use a new InternalBatch instance to improve code readability and maintainability by reducing redundancy
refactor error handling in BytecodeParser to use a new method ` pluginErrorMessage ` to improve code readability and maintainability by encaps
added a new method ` stream ( TableIdentifier < ENTITY > ) ` to the ` StreamSupplierComponent ` class to provide a default implementation for
updated logging statements in MediaMonitor . java to use a sleep instead of a hardcoded value to improve readability and maintainability of log messages
updated methods in InjectorProxy and StandardInjectorProxy to accept InvocationTargetException instead of void to enhance flexibility in creating instances based on constructor parameters
[ hotfix ] [ stream ] remove unnecessary call to out . close ( )
added unit tests for ` ShowStatement ` and ` UnsupportedStatementTest ` in ` ShowStatementTest ` and ` CreateTableTest ` classes to ensure
replaced null return with ImmutableList . of ( ) in AppleTest . java to ensure that the method returns a non - null list instead of null
[ java ] add quality distribution to the namedsettest . java file
refactor websocket connection handling in DeconzBridgeHandler and WebSocketConnection classes to improve code readability and maintainability by standardizing connection state management
remove null value from session . getsession ( ) in abstractprocessingfilter
hbase - 16286 testregionreplicareplicareplicationendpoint : use createorenabletablewithretries ( ) instead of getadmin ( )
added PMS configuration to PMS in FormatRecognitionTest . java to ensure proper PMS configuration is used for processing
cloudstack - 10284 : add a new method to create ova data disk template if it ' s template format .
replaced ` CasCoreServicesConfiguration ` with ` JUnit4 ` for improved test setup and integration with JUnit4 for improved test setup
added ` @ Override ` annotations to multiple authentication services to ensure proper method overriding and improve code clarity
updated SQL statements in AppendOnlySchemaIT . java for consistency and clarity to improve code readability and maintainability by standardizing naming conventions
added a check for document count mismatch in SegmentReader . java to ensure that the document count does not exceed the specified document count
added logtrace ( ) method to siplogger . logexception and logtrace ( ) .
corrected a typo in the FilamentFactory . java file to ensure proper handling of staves without starting barline
changed the variable ` handleFileUploads ` from ` true ` to ` true ` in ` VertxPlatformHttpServerConfiguration . java ` to
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
refactored the initialization of ` Fields ` in ` HotSpotObjectConstantImpl . java ` to improve code readability and maintainability
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in term handling across the codebase
updated the timestamp handling in FileIO . java to include watermark in the metadata match method to improve clarity and maintainability of the code
[ flink - 18186 ] [ table - planner - blink ] fix copy of ctestatement . copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable SQL metadata handling in the query compilation process
updated the library name from " out % s " to " root " in JsLibrary . java to ensure accurate representation of the library ' s
updated the slider model from 180 to Math . PI in RailButtonConfig . java to improve the visual appearance of the slider in the user interface
updated drawEncloser method from 8f to 9f in OverlayRenderer , Saves , and added a Timer for saving data to improve
added expressionLanguageSupported ( true ) method to KerberosProperties . java to enable expression language support in the configuration
removed unnecessary null checks for remote mount point components in ThirdPersonRemoteClientSystem . java to simplify code and improve readability
updated ` setupViews ` method to include ` scrimView ` parameter and modified ` setupViews ` method to include ` ScrimView ` to
[ hotfix ] [ state - backend ] [ state - backend ] enable periodic materialization in state backend
added a ` value ` field to the ` ProtocolParameter ` class and its getter and setter methods in ` List ` and ` ParamTagHandler `
added a new test method ` testChunkingWithHead ` to verify the behavior of ` ChunkingServlet ` with head headers to ensure correct handling
fix checkrouteranswer . parsedetails ( ) and setisBumped ( ) to true .
added a new header for " application / x - www - form - urlencoded " in SwitchToPostInterceptor . java and SearchRequestUnitTest .
refactor EmbeddedClientConnector class to improve code organization to enhance maintainability and readability of the code
added logging for SQLFeatureNotSupportedException in PhoenixResultSet . java to improve error handling by providing a warning instead of throwing SQLFeatureNotSupportedException
added a new instance of AndroidNet in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
updated variable names from " numRowsIndexed " to " numRowsConsumed " in LLRealtimeSegmentDataManager . java to improve clarity and consistency in
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify the code by
hbase - 14284 remove the prefixtree codec from TableMapReduceUtil . java to streamline the code and improve maintainability
added a boolean flag ` inflationFailed ` and modified the ` root ` variable in ` DesignerActivity . java ` and ` AttrInfo . java `
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future updates
[ gr - 14286 ] make the loweringphase abstract , so that it can be use in the schedule .
updated the message format from download _ folder _ failed _ content to sync _ folder _ failed _ content to improve clarity of the error message for better
updated Scanners . java and MakefilesTest . java to use string literals instead of string literals to improve code readability and maintainability
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( ) ` in ` ReadTask . java ` to
updated refresh flag handling in SimpleBatchNode . java to ensure correct refresh behavior based on transformation flags
[ gr - 27335 ] fix uninterruptible check for sharedmethod . isuninterruptible
refactor LwjglWindow to use IntBuffer for framebuffer size handling to improve code readability and maintainability by centralizing framebuffer size
updated the calculation of centerTaskParallaxToRight and otherAdjacentTaskParallaxOffscreen in LauncherAppTransitionManagerImpl
rename ` NodeLiteralNode ` to ` NullLiteralNode ` for clarity to improve code readability and maintainability by using a more descriptive
added length handling methods in CompoundFileWriter and IndexOutput classes to enhance file handling capabilities and ensure proper file length management
refactor AndroidNdkScriptGenerator and AntScriptGenerator to use Mpg123Test for manifest loading to improve code readability and maintain
camel - 14284 - camel - aws2 - s3 : use sourcebucket instead of copysource
added permission handling in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin and TestRuleBasedAuthorizationPlugin to improve authorization handling and ensure
updated ZookeeperClientServerRegisterRepository and URIRegisterDTO handling in ZookeeperClientServerRegisterRepository . java to improve robustness by preventing null pointer
replaced ` makeDeepMock ` with ` deepStub ` in ` ReturnsDeepStubs . java ` to improve code readability and maintainability by
added a check to ensure that the number of call values are empty before returning them to avoid potential NullPointerExceptions when the call value is empty
updated debug log message for date parsing in BibEntry . java to improve clarity of log messages for better debugging
updated the ` mapPBEAlgorithmToOID ` method to return an ` NoSuchAlgorithmException ` instead of null in ` PKCS12KeyStore
change variable name from ` length ` to ` inputLength ` in ` TIFFReader . java ` to improve clarity and maintainability of the code
added validation for job parameters in CommandLineJobRunner . java and updated exception handling in CommandLineJobRunnerTests . java to improve error reporting for invalid parameters
removed \ r \ n from messages in SmtpTests and MailTests to improve readability and maintain consistency in formatting
updated case statements in ExtendedConnectionDataSourceProxy . java to improve readability and maintainability of the code
replaced ` lastSequenceId ` with ` SEQUENCE _ UPDATER ` and updated access modifiers in ` LongSequenceGenerator ` to improve thread safety and
added a new file ` Test . java ` that implements a method to calculate and print the sum of a string to facilitate the calculation of the sum
updated API configurations in ShadowWifiManagerTest , WifiUsabilityStatsEntryBuilder , and WifiUsabilityStatsEntryBuilder to
added a new file ` Permuting . java ` that implements a algorithm to sort queries based on a specified number of queries to provide functionality for
replace Map with ConcurrentMap for columnFamilyStores in Table . java and Gossiper . java to improve thread safety and prevent concurrent modification exceptions
refactor taskbar creation logic in TaskbarManager . java to improve readability and maintainability of the code
refactor SyncFutureCache class to improve code readability to enhance maintainability and reduce complexity
updated the protocol version from " 2 . 0 . 1 " to " 2 . 0 . 2 " and updated the LOWEST _ RESPONSE
pmd : fix uselessstringvalueofrule to check for primitive type
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the behavior of the
[ hotfix ] [ runtime ] add target max type shard size to the producer .
added new versions " 5.0 . 2 - cfs " and " 5.0 . 2 - nocfs " to TestBackwardsCompatibility .
refactor CompilationTask class to improve code readability to enhance maintainability and facilitate future development
updated assertions in TestSemanticAnalysis and DDLTask classes to improve clarity and consistency in database parameter handling to enhance code readability and maintainability by
added a call to ` clearDatabaseChangeLogTableStatement ` in ` AbstractJdbcDatabase . java ` to ensure that the database change log table is
refactor RestClient and CallPath classes to improve version comparison logic to enhance code readability and maintainability by centralizing version comparison logic
refactor exception handling in PhoenixDriver to improve thread safety and ensure proper resource management to ensure proper resource management and prevent potential memory leaks
do n ' t throw unsupportedoperationexception if we do n ' t support it .
added a new test class ` FolderPickerActivityIT ` and modified ` FolderPickerActivityIT ` to extend AbstractIT ` and ` UploadFilesActivity
graalvm : do n ' t remove the first tier if it ' s not devmode .
added a check for the length of ` copy ` in ` StringHelper ` and a corresponding test for ` removeLeadingAndEndingQuotes `
added handling for NOT _ CONTAINING types in JpaQueryCreator and ParameterMetadataProvider classes to ensure proper handling of NOT _ CONTA
added a check for encrypted encrypted accounts in AccountManagerImpl . java and adjusted branch ID retrieval logic in SipSecurityManager . java to improve security by preventing
added a call to dispatch ( new P25Message ( mAliasList ) in P25MessageFramer . java to ensure that the message is
added null checks before checkClosed ( ) and checkClosed ( ) in WebSocketImpl and WebsocketTest classes to improve robustness by preventing potential NullPointerExceptions
[ dspace - 147 ] fix error message in indexeventconsumer and DiscoveryIT in indexeventconsumer
replaced calls to ` r . getDimensionPixelSize ` with ` Launcher . getWidgetInfo ( ) ` in ` AppWidgetResizeFrame . java
added ` hideAllApps ` method to ` LauncherTaskbarUIController ` , ` TaskbarAllAppsController ` , and `
changed the visibility of the launch method from synchronized to synchronized in CrawlJob . java to ensure thread safety during the launch process
updated Point calculations in JavaSEPort . java to ensure correct calculation of zoom levels based on canvas coordinates
refactor notification handling in UploadService to use startForeground for better readability to improve code clarity and maintainability by using a more descriptive
add test for static final final and static final final in the public count test .
hbase - 16286 addendum fix hbase . client . retries . number to testThrifthbaseservicehandler
updated log level from info to debug in TransactionalMessageServiceImpl . java to improve logging granularity and reduce log verbosity
added a catch block for FileNotFoundException in ResourceUtils and updated logging statements in AbstractCipherExecutor to improve error handling and provide more informative logging for
added a new method ` getTickers ` to the ` Bittrex ` class and created a new ` BittrexTickersResponse `
update entityentry to use state . getenumconstants ( ) instead of state . getenumconstants ( )
updated ` unregisterSession ` method to accept ` ObjectInstance ` instead of ` Class < ? > ` to improve type safety and clarity in session registration
added \ u0001 , \ u0002 , \ u0001 , \ u0006 , \ u0003 , and \ u
added stylesheet management functionality in ResourceService , ResourceHandler , and ResourceHandler classes to enhance resource management and improve code clarity
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before proceeding with operations
updated the method call from " getAddress " to " PointerParameterStrategy " in X86MethodGenerator . java to ensure the correct parameter type is used
updated condition in CreateSequenceGenerator to check for CockroachDatabase instead of PostgresDatabase to ensure compatibility with CockroachDatabase
updated the name comparison from " java . lang . String " to " java . lang . String " in ObjectStreamClass . java to improve clarity and
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and created a new class SymbolNotFoundError . java with a new class SymbolNotFoundError
added conditional checks for non - pseudo - fields in BinaryResponseWriter . java to ensure proper handling of document retrieval based on return conditions
added handling for PING , PONG , and PONG in WebSocketImplBase . java and created a test for WebSocketPausePing functionality to
updated the NON _ IDENT _ ESCAPES constant from " $ ^ * + " to " $ ^ ^ - " in RegExpScanner
refactor DnsResolverProvider and HostnameResolutionTest to accept a cache parameter and improve cache handling to enhance flexibility in managing DNS server selection options
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration . java to ensure compatibility with MessagingTracing . class
mondrian : remove unnecessary dialect check in sqlquery . quoteidentifier ( )
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionMode , EditorTextActionMode , and EditorTextAction
added a conditional check for the closing tag in XMLLightweightParser . java to ensure proper handling of closing tags in XMLLightweightParser
removed the setVisibility ( GONE ) method from TouchCharInput . java to clean up the code and improve readability
added a null check for the current user in Group . java to avoid potential NullPointerException when accessing the current user ID
added a conditional check for the presence of a member in JSObjectLinker . java to improve code readability and maintainability
refactor ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to use ` setSuffix ` instead of ` prepare
added @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
added @ Deprecated annotations to multiple Java files to indicate that these methods are outdated and should no longer be used
deleted the JoglDebugAdaptor . java file and removed it from RocketFigure3d . java and GuiceStartup . java to streamline
added ` toString ( ) ` method to ` ExtraFieldPropagation ` and ` AWSPropagation ` classes to enhance string representation of the ` ExtraFieldPropagation
added PendingIntent import for PendingIntent in FileDownloader , FileUploader , and FileUploader classes to ensure contentIntent is updated correctly in the notification
refactor nextOrd method to use a private method ` set ( ) ` instead of ` nextOrd ( ) ` to improve encap
refactor DateTimeFormatter class for improved readability to enhance maintainability and ease of understanding for future developers
replaced class loading for " DnD . Autoscroll . initialDelay " with " Win32ShellFolderManager2 " in desktopProperties to simplify
added null and empty check for administrator credentials in KerberosOperationHandler and updated test cases in KerberosOperationHandler to ensure that the administrator credential is
added a MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and modified width calculation in BaseWidgetSheet . java
added method to begin and end rendering in PSurfaceJOGL . java to ensure proper rendering of the sketch window color
refactor Hashing class implementation to improve code readability and maintainability
updated the ` accept ` method to include a ` folderPath ` parameter in the ` FileSenderFactory ` class to improve clarity and accuracy in file
updated the ` addToListIfNeeded ` method to include a ` contentDescriptionInt ` parameter and modified the ` addToListIfNeeded ` method to include `
added a null check for the newType variable in J . java to ensure proper handling of null types in the code
updated ACTIVITY _ START _ DELAY from 500 to 800 in Launcher . java to increase the ACTIVITY _ START _ DELAY for better
added a new constant ` WEBAPP _ HOME ` in ` SolrJettyTestBase . java ` and updated path configuration in ` Jet
removed the diameter assignment for selectedMotorSet in ThrustCurveMotorSelectionPanel . java to streamline the code by eliminating unnecessary null checks and
added BufferUtil import and clearToFill method in ByteBufferPool . java to ensure proper buffer management and avoid potential memory leaks
fix ( notification ) : remove edgeeventactiontype from rest api ( # 233 )
updated attribute names from " authorization . ldap . groupBase " to " authentication . ldap . groupNamingAttr " in Configuration . java to ensure consistency
[ java ] add deleteexchange ( ) method to clusteredchannel . queuedelete ( " x " )
[ hotfix ] [ test ] fix bulkslotproviderimpltest failure in bulkslotproviderimpltest
refactor connection handling in PingService and ServerInfoService to handle success and failure scenarios to improve error handling and provide clearer error messages
refactor CompositeHandlerAdapter class to improve code readability to enhance maintainability and facilitate future updates
refactor Quartz2Adapter class implementation to improve code readability and maintainability
added error handling for IllegalStateException in SulongLibrary . java to improve robustness by catching IllegalStateException during execution
updated Spring Security schema version from 6 . 2 to 6 . 3 in SecurityNamespaceHandler and XsdDocumentedTests to ensure compatibility with Spring
updated the ` newNameResolver ` method to accept a ` Args ` parameter and added synchronization context handling in ` DiscoveryClientNameResolver ` to enhance
updated annotations handling in JavacParser . java and added a new test class TestAnnotatedAnonClass . java with a new method in TestAnnotated
added " com . sun . naming . internal . " to the CheckPackageAccess . java file to enable compatibility with the latest Java naming conventions
changed the strict flag from false to true in StaxEventItemReader . java to enable strict mode for event processing
added an ` isExhausted ` parameter to ` OfflineSorter ` and updated the ` readPartition ` method to include ` isExhaus
refactor ActionResetingPool class to improve code readability to enhance maintainability and facilitate future updates
added a null check for the color mode in the light state conversion logic to ensure that the method only returns null if the color mode is not null
updated the ` getCellCreationRadius ` method to accept a ` targetCell ` parameter and refactored the ` getReorderRadius ` method to improve
added FileDisplayActivity import and updated loading dialog handling in FileOperationsHelper and OCFileListFragment to improve user experience by ensuring loading dialog is
added a null check for uigestureFile before instantiation to avoid potential NullPointerExceptions when xmlLogs is not available
updated the ` doesNotMatch ` method in ` FieldNamingPolicyTest . java ` to use ` Locale . getDefault ( ) ` instead of `
added a call to setListeners ( ) in XmlSuite . java to ensure listeners are properly set to the result
added a new method ` loadWithNewGlobal ` to the ` Global ` class and refactored the ` loadWithNewGlobal ` method to
added a new ` fromJsonString ` method to ` StarTreeIndexSpec ` and modified ` TableConfigTest ` to use ` ObjectMapper ` to improve
added import for ObjectPostProcessorConfiguration in HttpSecurity , HeadersConfigurer , OAuth2Login , OAuth2LogoutConfigurer , and OAuth2LogoutConfigurer to
updated file path handling in multiple files to improve consistency and correctness in file path handling
[ drools - 4071 ] fix npe in inoperator . equals ( )
added import for FieldCache and modified test cases in TestDistributedSearch . java to ensure proper cache management and prevent potential memory leaks
added unit test for boundary message event on subprocess multi instance
refactor resolveinterfaceorvirtualcall ( ) to resolvestaticcall ( ) and resolvestaticcall ( ) in pointeranalysisimpl .
add messagegrouphashbucketcount to queue and policyentry
added constants for NETSCAPE _ SLOT _ ID and FIPS _ SLOT _ ID in Secmod . java
added alignment support for widget additions in Layout and GdxRenderer classes to enhance layout flexibility by allowing different alignments
[ hotfix ] [ test ] disable unalignedcheckpointitcase test
added imports for Receiver , Transmitter , and Transmitter classes in JDK13Services . java to ensure proper handling of
added a condition to check if a keyword is present before adding it to the reference to ensure that only relevant keywords are processed in the reference
added a check for the type of ` pairs ` in ` MulticastProcessor . java ` to ensure proper handling of multiple exchange pairs
added a method ` getStartCount ( ) ` to ` SegGraph ` , ` WordDictionary ` , and ` WordDictionary ` classes to enhance
fix typo in flavorstatsdlinebuilder ( # 644 )
[ java ] add udp port to memberimpl to allow client broadcast on the same multicast address
rename OperatorMulticast to OperationMulticast in Observable and OperatorMulticast classes to improve clarity and consistency in naming conventions
increased the send timeout from 1 to 100 in EventBusTracerTestBase . java to allow more time for the message sending process
added try - finally block for exception handling in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
added a synchronized method to destroy the SessionFactoryServiceRegistryImpl class to ensure proper resource management and prevent memory leaks
fix : use jwt token from local storage instead of home page
refactor IValueUtilsTest to use NDArray instead of PtNDArray to improve code readability and maintainability by standardizing
added a TaskStackChangeListener to manage task stack visibility in RecentsView , BaseActivity , and BaseActivity to manage task stack animations more effectively
pdfbox - 4071 : do n ' t check if the optimization of the checkdatepattern method do n ' t work
camel - 14284 : camel - cxf : fix npe in camel - cxf
refactor animation handling in ContentFillItemAnimator to improve code readability and maintainability by reducing duplication
added logging for play time calculation in LauncherAnimationRunner . java to improve debugging capabilities by logging play time when debugging is enabled
added a check for BailoutOnException in C1XCompilation . java and introduced a new option in C1XOptions . java to
updated signup and passwd variables from " / forgot _ password " to " / forgot _ password " in Links . java and
[ hotfix ] [ runtime ] rename slotprofile . previousexecutiongraphallocations ( ) to reservedallocations ( )
replaced ` SimpleDateFormat ` with ` getOnlyFormat ` and ` getOnlyFormat ( ) ` in ` TimeConverter . java ` to improve clarity
added GC _ NODATA property to GeoTiffReader and updated test cases in GeoTiffReaderTest to ensure that GC _ NODATA is
[ gr - 16186 ] fix npe in llvmwritenode . getsource ( )
replaced ` toString ( ) ` with ` new String ( ) ` in ` JdbcExecutionContextDao ` , ` DefaultExecutionContextSerializerTests ` , and `
removed the blockUntilConnected ( ) method in TestPathChildrenCache . java to ensure proper handling of connection state changes
refactor ArrayTypeHandler to improve null handling to enhance code readability and prevent potential NullPointerExceptions
refactored the ` RegexpTunnel ` class to use a static field for prefix retrieval to improve code modularity and maintainability by en
updated the application selection from null to Application . class in Config . java to ensure correct application type is used for application selection
[ drools - 4071 ] add a test case to ensure that the global compiler behaves as expected when the global context is set
added validation checks for asset names and descriptions in AssetIssueActuator and TransactionUtil classes to ensure that asset names and descriptions are valid
do n ' t add parent algorithm when copy paste
[ hotfix ] [ webos ] fix error message for offline . config - error
refactor seed and trust nodes in TronNetService . java for consistency to improve code readability and maintainability
updated assertions in BaseTokenStreamTestCase to include " posLen " and " posLen " and added a failure check in BaseTokenStreamTestCase to
[ log4j2 - 116 ] fix timebasedtriggeringpolicy . getnexttime ( ) to use a boolean parameter
added methods to perform item clicks in ShadowAdapterView , ShadowListView , and ShadowListView classes to enhance functionality by allowing users to click first items
pdfbox - 4071 : fix typo , a suggest by valerybokov
added afterMethodScope method to GraphDecoder and modified PEGraphDecoder to handle method scope removal to improve code clarity and maintainability by encaps
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) to improve code readability and maintainability by centralizing attribute retrieval logic
added unit tests for the ` zipkin ` service name in ` ZipkinSpanReporterTest . java ` to ensure the correct service name is used
added logging for exclusion of classes pattern patterns in JavaInMemoryFileManager and JavacToJarStepFactory to improve traceability and clarity of log
rename ` SeparatedProjectGenerator ` and ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to
updated the timeout value from 4 to 10 in ClientMultiMapLockTest . java to improve test reliability by allowing more time for locking operations
added default cache capacity parameters to the ` ConfluentSchemaRegistryDeserializerProvider ` and ` of ` methods to enhance flexibility in configuring schema registry
replaced remind with checkAtStartup checkbox in UpdateInfoDialog . java to improve clarity and consistency in checkbox functionality
added methods for handling weak keys , weakValues , and expireAfterAccess in NodeGenerator . java to enhance method naming for better clarity and usability
refactor caching logic in CascadingActions . java to improve readability and maintainability of the code
added static constants for " __ proto __ " and " setProtoCheck " in ScriptObject . java to improve code readability and maintainability by
updated default read mode from heap and mmap to mmap in ReadMode . java and added logging in ImmutableSegmentLoader . java to improve read
added ByteArrayTemplate import for ByteArrayTemplate in ArrayTemplateBuilder . java to ensure proper handling of byte data types in ArrayTemplateBuilder
added a new ` Hipchat ` class and a new ` SamlSPHipchat ` class in ` SamlServiceProviderProperties ` to
replace List with Set for commandRegistryUrls in CommandRegistry . java to improve performance by using a more efficient list of URLs
added context - specific logging for uncovered http methods in ConstraintSecurityHandler . java to improve logging clarity and provide more context for debugging purposes
changed the method name from ` checkLoggedIn ( ) ` to ` loggedIn ( ) ` in ` SvnRepositoryConnector ` and ` S
camel - 14284 : camel - activemq - add a test for session transacting without a transaction manager
updated import statements in VmwareResource . java to ensure consistency in naming conventions for better readability and maintainability
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
rename OVERWRITE _ EXISTING to APPEND _ TO _ ZIP in DefaultDefectReporter . java to improve clarity and consistency in
removed deprecated constructors from UAX29URLTokenizer . java to clean up the codebase and encourage the use of newer alternatives
refactor ScriptObject class to use ` Map < Object , Object > ` instead of ` Map < Object , Object > ` to improve type safety
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - i18n : use eperson . getsupportedlocale ( ) instead of eperson . getsupportedlocale (
updated JaversTransactionalDecorator to implement InitializingBean and added ` ensureSchema ( ) ` method in ` JaversTransactionalDecorator ` to
removed null check for pgTypeName in TypeInfoCache . java to simplify code by eliminating unnecessary null checks
added multiple server configurations to the ScopedHandlerTest class to enhance testing capabilities for the ScopedHandler functionality
add calltimeout to calltimeout and waitnotifyserviceimpl . calltimeout ( ) for wait - notify phase .
updated the condition in RestLoginProcessingFilter to check for empty usernames instead of empty passwords to improve code readability and maintainability by using
replace Objects . equals with Strings . equals for permissionNode in CommandMap . java to improve code readability and maintainability
rename ` encoding ` to ` sourceCharset ` in ` AbstractCompiler ` and add ` setCharacterEncoding ` methods in ` ICompiler ` to improve
changed the type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and ` TerminalBridge ` to
refactor GeneralOptimizationDialog to use genericComponentModifier and modify simulation creation logic to improve code readability and maintainability by reducing duplication
added contextreloadenabled property to mainconfigurationpropertiesconfigurer to enable it to be enable by default .
updated logging configurations in CommonTestUtils . java to use ConsoleAppender instead of ConsoleAppender in CommonTestUtils . java to improve logging clarity and
refactor PrologSizeSanityCheck class implementation to improve code readability and maintainability
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a conditional check for ` markSupported ` before invoking ` invokeSafely ` in ` RequestBody ` and modified test cases in ` RequestBody
refactor conditional checks in Neo4jServer , DefaultBeanContext , and TypeArgumentQualifier classes to improve code readability and ensure proper handling of
fix crash when the player be not able to move a player to the player .
updated RandomLoadBalancer to include half - length weights and modified random method calls to include additional parameters to enhance the flexibility and correctness of the random number
refactor GsonParser to use ` StringBuilder ` instead of ` StringBuilder ` to improve code readability and maintainability by using a more descriptive
updated param names from " gcmsort " to " gcmdir " in ApacheHttpClientMediaWikiApi . java to improve clarity and consistency in
refactored ` checkTransactionSynchStatus ( ) ` to ` pulseTransactionCoordinator ( ) ` across multiple classes to improve clarity and consistency in
[ iotdb - 4272 ] fix pipetaskcoordinator lock issue
updated version handling in DefaultSdkProvider to include a conditional check for preinstrumented jars based on system properties to ensure compatibility with Robolec
changed the conditional statement from ` !Silent ` to ` isSilent ` in ` ExecDriver . java ` to improve code readability and maintainability
added validation for DYNAMIC _ FIELD in IndexSchema and created a new test for missing default values in BadIndexSchema to ensure that
[ hotfix ] [ table - common ] fix checkstyle violation in storageproxy
replaced ` ImmutableSortedSet ` with ` Iterables . transform ` for include directories in ` PrebuiltCxxLibrary ` and added a new test
added null checks for startDate and endDate in AdaptableX509CertSelector and AdaptableX509CertSelector to improve code readability and maintainability
refactor NoSQLAppender to use AbstractAppender for buffer size handling to improve code maintainability and reduce boilerplate code
added a @ Deprecated annotation to GuiScreenEvent . java to indicate that the class is outdated and should no longer be used
removed multiple methods from ` addToCategories ` and ` removeFromCategories ` and ` removeFromCategories ` in ` CategoryEditSearchRecyclerViewAdapter ` to
change servercachefactory to use servercachetype instead of cachetype
refactor RocketComponent to use a loop for each RocketComponent to improve code readability and maintainability by reducing duplication
updated the ` JavaCompilerService ` and ` SynchronizedTask ` methods in ` JavaCompilerService ` , ` SynchronizedTask ` , and `
refactor the ` forkOrSubmit ` method to use ` Supplier < V > ` instead of ` AbstractTask ` to improve code readability and
refactor the ` WanReplicationServiceImpl ` class to use ` mutex ` instead of ` executor ` to improve thread safety and ensure thread safety
added null checks for ` tPartition ` and ` table ` in ` Partition . java ` and ` DDLSemanticAnalyzer . java ` to ensure
refactor LocalServiceRegistryClientImpl to use ` ScheduledThreadPoolExecutor ` instead of ` RejectedExecutionHandler ` in ` LocalServiceRegistryClientImpl
added a new test class ` FilesTest ` and implemented a ` Delete ` method in ` Files . java ` to validate file deletion functionality
removed exception handling in ServerSocketAdaptor and SocketAdaptor classes to simplify resource management and improve code readability
updated the class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replaced ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f ) ` in ` Project . java ` to improve clarity and
added a null check for ` cn ` in ` ItemInfo . java ` and updated ` mInsets ` in ` Workspace . java ` to
changed the access modifier of the static String from public to private to restrict access to the class from other packages
updated csv - Durl and json - jar files in SimplePostTool . java to ensure proper handling of JSON jar files in the application
ggb - 271 add test for symbolic . hassymbolicchange ( )
replaced ` ShutdownThread . register ` with ` ShutdownThread . doStop ` in ` JavaxWebSocketClientContainerProvider . java ` to
updated condition to check for null or absent types in Linux . java to improve code readability and maintainability
cleanup web application context after test to prevent memory leak
added a method to retrieve the search string in RemoteBrowseHandler . java to enhance the functionality of the RemoteBrowseHandler by allowing users to specify search
removed the visibility of the neutralButton in SetupEncryptionDialogFragment to enhance user interface by providing visibility for the neutral button
hhh - 16464 - add item to itemDAO and itemDAOImpl . countitems ( )
updated SQL statement formatting in DDLTask . java to improve code readability and maintain consistency in formatting
added exception handling for OAuth2 exceptions in CheckTokenEndpoint . java to enhance error handling capabilities in the application
added a method ` lookupSeriesPaint ( ) ` to the ` XYDrawableAnnotation ` , ` IntervalCategoryItemLabelGenerator ` , and `
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use ParameterizedTypeReference for response processing to improve code readability and maintainability by using
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame , DataBrowser , and SQLConsole classes to improve user experience by providing clearer
added a surefire version check and updated warning messages in ActionProviderImpl . java to ensure compatibility with different JUnit versions and improve error reporting for
replaced HumanReadableException with RuntimeException in WorkerShellStep . java to improve error handling by providing a more specific exception type
[ hotfix ] [ core ] add @ publicevolving annotation to datastreamutils
[ hotfix ] [ stream ] fix typo in streamcepstrumsource
updated index calculation in List . java to ensure index is within valid bounds to prevent potential index out - of - bounds errors
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure compatibility with the latest JSQL parser features
added confirmation parameter to the DebugPaste class to enhance user experience by providing a confirmation option for debugging purposes
replace direct calls to ` get ( ) ` with ` orElseThrow ( ) ` in multiple configuration classes to improve code readability and maintainability by
updated focus logic in DrawEquationWeb . java and updated RadioButtonTreeItem . java to use MathQuillGGB instead of textareaJ
replaced ` Arg ` with ` GoBinaryDescriptionArg ` in ` GoBinaryDescription . java ` and updated imports in ` GoBinaryDescription .
refactor environment variable retrieval in Jooby . java to improve code readability and maintainability by reducing redundancy
replaced ` SimpleRetryExceptionHandler ` with ` SecondDummyRetryListener ` across multiple files to standardize retry listener implementation across the codebase
fix # 498 ( # 498 ) ( # 498 )
refactor email handling in Contribution . java for clarity to improve code readability and maintainability
updated the length calculation in JUnitFormatter to improve readability and maintainability of the code
updated the type of elements assignment in Subject . java to ensure proper handling of LinkedList instances to avoid potential NullPointerExceptions
updated exception messages in StaxEventItemReader and added URL retrieval in StaxEventItemReader to improve clarity of error messages for better debugging
fix testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirender
added null checks for currentProfile in DelegatedAuthenticationClientLogoutAction . java to avoid potential NullPointerExceptions when currentProfile is null
updated namespace declaration handling in SaajStaxWriter . java to ensure the correct namespace declaration is added to the new element
added BigInteger and DSAParameterSpec imports in KeyStoreManager . java and implemented BigInteger initialization in KeyStoreManager . java to enhance security by using a more
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape ` and `
added engine version setting to BpmnDeployer and BpmnDeployerTest to ensure the correct engine version is used for processing
updated the property names from " resource . loaders " to " resource . loaders " in SpecificCompiler . java to improve clarity and consistency
added verifyThreadIsCurrentThread ( ) and verifyIsCurrentThread ( ) methods to CEntryPointSnippets . java and VMThreads . java to ensure thread
updated GenericUDFMapValues to handle null map cases and added a new test class for generic UDFMapValues to improve robustness by preventing
camel - 14284 - camel - web - servlet - fix camel - web - servlet - integration test
added support for oil generation and propEnableOilSpouts in BCEnergyConfig and BCEnergyConfig classes to enhance energy generation capabilities and
added a check for the existence of the directory in ImportContext and updated related tests in JobQueue to ensure that the clean file is only created when
updated the exception message from " memoryRealm . readXml " to " memoryRealm . readXml " in MemoryRealm . java to improve error handling
updated import statements in CRLDistributionPointRevocationCheckerTests . java and CRLDistributionPointRevocationCheckerTests . java to improve
updated EXTID _ ZIP64 and EXTT _ UNIX constants in multiple classes to improve code readability and maintainability
refactor file handling in ZipFileSystemProvider to use a new method ` ensureFile ` to improve code readability and maintainability by encaps
updated the width of the condition panel in IfControllerPanel . java to ensure consistent layout alignment for the condition panel
updated the connection creation method in FailoverUpdateURIsTest . java to ensure proper handling of connection creation in tests
added annotations for baseUrl , mirrorsList , and repoId in ServiceOsSpecific . java to enhance serialization support for service objects
added a ` deleteBook ` method to ` DatabaseAdapter ` , ` FirstRunWizardActivity ` , and ` BooksDbAdapter ` classes to
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
corrected the calculation of responseMessage . getBuffer ( ) in AbstractAjpProcessor . java to ensure the correct buffer is used for processing
refactored startup and shutdown methods in XMPPServer , AdminConsolePlugin , and AdminConsolePlugin classes to improve code readability and maintainability
replaced unregisterHandlers ( ) method with MessageConsumer in WebSocketImplBase . java to improve code readability and maintainability
added properties for device and enable _ id _ transformation methods and log files in IoTDBDescriptor . java to enhance configuration flexibility for device and
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 in ExitableDirectoryReaderTest . java and added DelayingSearchComponent
updated the condition for mockTsp in TestSignatureInfo . java to ensure that the test correctly verifies if the timestamp is not null
refactor script code generation to use VarInt for better readability and maintainability to improve code clarity and ensure consistency in script handling
updated the expression from " / schema / types / fieldtype " to " / schema / types / fieldType " in IndexSchema . java to allow
added null checks for valueCompleter in Completers . java and created a new OptionCompleterTest . java file to ensure proper handling of null values
refactor S3Utils to improve code readability and maintainability to enhance readability and maintainability of the code
changed the type of ` sourcePeerId ` from ` String ` to ` int ` in multiple classes to ensure consistency in data type usage across the
refactor file handling logic in FtpHelper . java and add a new method ` UploadFile ` to improve code readability and maintainability by
updated the import statements in TweetFragment . java for the reply button in TweetFragment . java to ensure the reply button reflects the correct alpha
refactor access log handling in AccessLogSupportTest to use a mock to improve readability and maintainability of the test code
updated the mary cache file path from " testfiles - deleteme " to " tmp / testfiles - deleteme " to ensure compatibility with
refactor subscribers initialization in SettingImpl . java to simplify code and improve readability
refactored error handling in AbstractSamlObjectBuilder and AbstractSaml10ResponseView to improve code readability and maintainability
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve log readability and maintainability of the code
updated conditional logic in AssetsController and added a new test for static directory class path handling in AssetsControllerTest to ensure proper handling of file
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend . rocksdbkeyedstatebackend
updated the default format from " value - tag - index " to " value - index " in CoreLabel . java to ensure consistency in naming convention
refactor GraphHopper initialization to use req . getHints ( ) instead of hint to improve code readability and maintainability
updated wait times from 30 seconds to 60 seconds and changed the useNative variable from false to true in multiple classes to allow for a longer wait time
rename ` DuclsSandboxTest ` to ` SandboxTest ` for consistency to improve clarity and consistency in naming conventions across the codebase
camel - 14284 : camel - cxf : use exchange . setexception instead of log
changed the visibility of the ` forwardPropagateTree ` method from package - private to public to allow access to the ` forwardPropagateTree ` method from
updated the SQL query to include a maximum value of 20ms in the result set to enhance the accuracy of the query results
added validation for project basedir and profile activation in DefaultModelValidator . java to ensure proper handling of missing files during profile activation during profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future updates
added zoom event handling in ShareActivity to handle back navigation events to improve user experience by allowing back navigation through the launcher
added a conditional check for deprecated fields in Json . java to prevent processing of deprecated fields
added sendHandler and hideIsRunning methods to the LauncherFragment class to enhance user experience by providing smoother transitions when the layout is
updated method name from " readTokenStorageFile " to " readTokenStorageFile " in HadoopModule . java and Utils . java to improve
added progressable parameter to the createSequenceWriter method in Utilities and PTFRowContainer classes to enable progress tracking during sequence writing operations
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider . java
update panel ordering and color updates in ContributionListPanel . java to ensure proper management of panel ordering and color updates
rename HyervisorTemplateAdapter and HyervisorTemplateAdapter to HypervisorTemplateAdapter to improve clarity and consistency in naming conventions
added a check for the existence of the file path in RegularFileObject . java to ensure the correct directory path is used for file operations
[ java ] use sample rate instead of format . samplerate instead of format . samplerate
log4j2 - 1334 add a method to check if a map be not match
refactor VerificationInOrderWithCallsTest class for improved clarity to enhance code readability and maintainability
updated the ` setFromAxis ` method call from ` axis . z ` to ` axis . x ` in ` Quaternion . java ` to ensure
renamed the constant COLLECTION _ DELIM from " colelction . delim " to " collection . delim " in the serdeConstants class
added a new test method ` testListenerConnectedAtStart ` to ` TestFrameworkBackground ` for handling connection state changes to ensure that the listener correctly
updated type handling in DocRenderer . java and added new test cases in PHPCCDocumentationTest . java to improve code readability and maintainability by
added a boolean variable ` mIsOneHandedModeSupported ` and modified conditional checks in ` RecentsAnimationDeviceState . java ` to improve
added a ` onDetachedFromWindow ( ) ` method to ` AppsCustomizePagedView ` and modified the ` layout ` method
added a dictionary parameter to MorfologikAnalyzer , MorfologikFilterFactory , and updated MorfologikFilter to include a dictionary
updated exception handling logic in ResultSetTest . java to simplify exception counting logic for better readability
updated the message format from " debug " to " debug " in GradleBuildService . java to simplify the message initialization process by removing unnecessary debug
refactor ` preventedByLocking ` to ` preventedByMVCC ` and ` preventedByMVCC ` in ` AbstractPhenomena
refactor tooltip handling in ComponentTreeRenderer and ComponentTreeRenderer to improve code readability and maintainability by reducing duplication
updated wait time from 5 seconds to 10 seconds in ZipkinStreamTests . java to improve test reliability by allowing more time for the zipkin server
[ deviantart ] fix deviantart login for deviantart
replaced KNOWN _ GOOGLE _ SIGNATURES array with GOOGLE _ APP _ KEY and updated GOOGLE _ LEG
updated the method call from ` commonApp . solutionBusiness ` to ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirSolveAll
added a method ` notifyWindowStateChanged ` to handle window state changes in ` WWindowPeer . java ` to ensure proper handling of window state changes
added a description for the email description in EntityGroupKeyContentFormatter and updated TestEntityGroupKeyEmailContentFormatter in TestEntityGroupKeyEmailContent
updated the return statement from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
updated language retrieval logic in Locale . java and added error handling in LocaleTest . java to improve locale handling and provide clearer error messages for invalid
refactor code to use a new method ` createUpdateVisitor ( ) ` to improve code readability and maintainability by encapsulating the
added a check to return early if screen pinning is active before proceeding to avoid unnecessary processing when screen pinning is active
added a ` mNoDataText ` variable and modified the ` drawText ` method to include ` mNoDataText ` and ` mNo
added synchronization to checkHeadWritten ( ) methods in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety when dealing with
refactor chunker handling in NettyResponse . java to use a ssl handler to improve code readability and maintainability by encapsulating
added " : scheme " header to HTTP headers in multiple test files to ensure consistent HTTP scheme handling across different test cases
fixed - redissonlocalcachedmap . keySet ( ) , values ( ) , entrySet ( ) , and entrySet ( ) in localcachedmap
camel - 15836 : camel - jbang - camel - jbang - camel - jbang - camel - jbang
updated jumpSpeed assignment from fallSpeed to jumpSpeed in PhysicsCharacter . java and PhysicsCharacter . java to ensure proper assignment of jumpSpeed
added a null check for reparsedFunction in the condition to ensure that reparsedFunction is not null before proceeding with parsing without syntax extensions
refactor BitstampPusherService to utilize BitstampStreamingOrderBook instead of BitstampStreamingOrderBook to improve code readability and maintain
added a new constant ` OLD _ SEGMENT _ PATH ` to the ` getOldUploadSegmentHttpURI ` method in ` FileUploadDownload
updated the method call from ` dbCol . findOne ( ) ` to ` filter ` in ` MongoDbTailTrackingManager . java ` to ensure
added a method ` assertPredicateFails ` to ` LanguageTestSupport ` and modified the ` assertPredicateFails ` method in ` Juel
added a alpha value to the RecentsView class to ensure that alpha values are properly bound to the specified range
updated the version string for Import - Package in ManifestReversion . java to ensure the correct version is used for import packages
refactor DataSyncConfiguration class to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized it in JavaLanguageServer . java to ensure proper initialization of Java snippet services
updated the condition for updating the sums in StarTreeRecordStoreCircularBufferImpl . java to improve performance by avoiding unnecessary updates when the number of
updated URLs from " downloads / list " to " storage . googleapis . com / index . html " in ChromeDriverService and
camel - 14284 : use try - with - resources for pgeventconsumer and pgeventproducer
updated import statements in FeedParser . java to ensure proper resource management and prevent potential memory leaks
added handling for " Content - Length " header in TransferCompletionHandler , NettyAsyncHttpProvider , and NettyAsyncHttpProvider to ensure accurate
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
removed the constructor from EnhancedRuntimeException to streamline the constructor by eliminating unnecessary parameters
[ hotfix ] [ test ] fix socketappendertest to run on slow machine
camel - 15836 - camel - jbang - remove unnecessary dependency on EventAdminEndpointBuilderFactory to simplify code and improve maintainability
updated method signatures in ByteArray . java for consistency and clarity to improve code readability and maintainability
added a method to disable input proxy for touch events in RecentsAnimationWrapper . java to ensure proper handling of input events during touch event processing
camel - 6770 : remove @ ignore annotation from restletdomainservicetest . java ( # 6770 )
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method in ` HashTableTemplate . java ` to simplify the method
make modulepath test package - info . modulepath package - info . java package - info . java package - info . java package - info .
added source directories to the getCompiler method in JavaLanguageServer and JavaServerConfiguration to provide clearer context for the compiler creation process
updated the menu item ID for open web and mute hashtags in TweetPager . java to improve user experience by allowing users to select a
updated method names from ` nodeIsAncestorOfItself ` to ` nodeIsNotAncestorOf ` in ` AncestorDescendantTests ` and ` Has
fix worldeditplayer . getblocky ( ) to be non - negative
[ iotdb - 4071 ] fix data type mismatch exception in insertnode . getdatatype ( )
updated formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ stream ] remove unused mailboxexecutor from streamoperatorfactory
hbase - 11818 add a new method ` ` settablestateinmeta ' ' to ` ` settablestateinmeta ' '
updated meter ID mapping in GatewayMetricFilterTests to use Meter : : getId instead of meterId to improve code readability and maintainability by
fix a bug where blockjunit4classrunner can not create a test class .
[ drools - 461 ] change the name of ` ` delete ' ' from ` ` remoteItems ` to ` ` lastTimeData ' '
updated the calculation of allAppsCellWidthPx in DeviceProfile . java to adjust the width of all apps cells to ensure accurate rendering of
[ hotfix ] [ log4j2 - java ] add parent - first logging pattern to coreoptions . java
replaced direct references to ` doc ( ) ` with ` this ( ) ` in ` BooleanScorer2 . java ` to ensure proper reference to
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that the output reflects the
added a ` Closeable ` interface to ` Session ` , ` SessionDelegatorBaseImpl ` , and ` SessionDelegatorBaseImpl `
refactor GetLocations class to improve code readability to enhance maintainability and facilitate future updates
removed unnecessary stack trace print statements from SchemaValidatorTask . java to simplify error handling and improve code readability
replaced UncheckedIOException with UncheckedIOException in Contents . java to simplify error handling by avoiding unnecessary exceptions
updated ` GeneratePubkeyActivity ` to use ` AppCompatActivity ` instead of ` Activity ` to improve compatibility with newer Android features and enhance
refactor RubyFlavorProcessor to use a StringBuilder instead of a string concatenation to improve performance and maintainability of the code
updated logging level from warning to debug for username and password in DerbyDatabase and BaseLiquibaseTask classes to improve logging granularity and
removed the useCaches flag from the Nio2Endpoint class to simplify the code and improve readability
updated the ` readDatabase ` method to use ` Resource ` instead of ` MaxmindProperties ` in ` CasGeoLocationConfiguration ` to
fix test failure in instructorfeedbackresultspageuitest
added a scan parameter to the ` useEncodedQualifierListOptimization ` method in ` BaseResultIterators ` and ` EncodedColumnsUtil ` to
changed access modifiers of methods from public to public in ApprovalStore and ApprovalsControllerService classes to enhance encapsulation by restricting
added a boolean variable ` mStartedDownload ` and modified ` mService . mStartedDownload ` and ` mService . mStartedDownload ` to
updated method names from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController ` and ` AbstractFloatingView
updated project version and contributors in JFreeChartResources . java to reflect the latest release version and contributors
replaced ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve code readability and maintainability
refactor GsonBuilder class to improve code readability to enhance maintainability and facilitate future updates
added null check for centerGeo and fixedPoints in ProverBotanasMethod . java to avoid potential NullPointerExceptions when centerGeo is not
( chore ) camel - espresso : remove espressohome option from espressooptions . java
refactor CtCodeElement , CtTypeInformation , and CtQueryable classes to improve code organization and maintainability
changed the visibility of the DeleteSessionAction class from protected to private in DeleteSessionAction to enhance encapsulation and improve code readability
corrected the spelling of " InvalidDocumentStoreApiUsageException " to " InvalidDocumentStoreApiUsageException " to improve code readability and
updated the initialization of ` resultList . size ( ) ` in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and ` Test
updated the triggerMediaScan method call from ` file . getStoragePath ( ) ` to ` file . getStoragePath ( ) ` to include
removed verbosity checks from the postTestResults method in TestRunning . java to simplify the code by eliminating unnecessary verbosity checks
added settings for custom G - code text settings in MainWindow . java to enhance user experience by allowing dynamic configuration of custom G - code text
updated import statements in AdditionalJaxbMappingProducerImpl . java to use BufferedWriter for output encoding to ensure proper handling of character encoding in output streams
refactor JsonElement class to improve code clarity to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and reset exception handling in TestBadConfig . java to ensure proper exception handling for unset sys properties
added a new method ` removeFragmentsAndActionBar ( ) ` to ` GpsMainActivity ` to manage fragment removal to improve user experience by
added " \ " , " \ " , " \ " , " \ " , " \ " , " \ " , " \ " ,
replaced ` asByteRange ( ) ` with ` asByteRange ( ) ` for range parsing in multiple handler classes to improve code readability and
updated G - Code - Sender and G - Code - Sender files in VisualizerCanvas . java and GcodeViewParse . java to
added new versions " 8 . 0 - cfs " and " 8 . 4 . 0 - nocfs " to TestBackwardsCompatibility .
updated the method name from ` assertThatMethods ` to ` assertThatMethods ` in ` Assertions _ sync _ with _ isInstanceAssertFactories _ Test . java
added null check for outputStage and data initialization in StatementResource . java to ensure proper resource management and prevent potential resource leaks
fix integritycheck . expandfilename ( ) to be private
removed unused import of SolrClient from ChaosMonkey . java to clean up the code and improve readability
added null checks for ` fas ` in ` ConfigurationActivator . java ` to avoid potential NullPointerExceptions when ` fas ` is null
refactor ` NestedRepositoryTreePanel ` to use ` ListView ` instead of ` ListView ` to improve code readability and maintainability
added a check for the minimum and maximum byte type in ExtensionTypeHeader to ensure that the extension type is within a valid range of 128 to 127
pdfbox - 4071 : remove unnecessary try - catch block , remove unnecessary try - catch block
rename ` deleteOnShutdown ` to ` pushOnShutdown ` and update related methods in ` PrometheusProperties . java ` to improve clarity and
added a callback parameter for trigger events in ReactiveStateMachineExecutor to enhance error handling by providing more contextual error messages
added a new test method ` when multiple Python executables are used in ` BuckConfigTest . java ` to ensure correct handling of Python executables
added a new button to the initial account registration button in InitialAccountRegistrationFrame to enhance user experience by allowing the sign - in button to be clicked
added TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN _ REDUCTION _ FOR
updated error logging in RegistrationRestRepository . java to include additional exception details to improve error reporting by providing more context on the error message
refactored package structure in multiple Java files to improve organization and clarity of the codebase
added a new method ` listableCollector ` to ` OidcIdTokenClaimCollector ` and implemented corresponding test cases in ` Oidc
removed the center field from Circle and Polygon classes to streamline the code by eliminating unused variables
[ hotfix ] [ runtime ] fix nullpointerexception in bundleoperation
refactor SslContextFactory class to improve SSL context handling to enhance security and performance during SSL operations
[ hotfix ] [ config ] remove unnecessary @ ignore annotation from configurationproperties
change return value from " access _ confirmation " to " access _ confirmation _ error " in AccessController . java to clarify the purpose of the return
add a new ` ConsumerClassLoaderFilter ` class to implement a ` ConsumerClassLoaderFilter ` interface to enable the use of the context class loader for better
added a ` resetOriginalRowHeight ` parameter to the ` shiftRows ` method and modified the ` shiftRows ` method to include a ` resetOriginal
replaced ` setRolloverIcon ` with ` setRolloverPressedIcon ` and ` setRolloverPressedIcon ` in ` FontImage . java
refactor grid translation logic in TaskViewUtils and TaskViewSimulator classes to improve code readability and maintainability by encapsulating grid translation
refactor Assertions class to improve code readability to enhance maintainability and facilitate future updates
added null checks for currentDateTimeFunction in multiple database database classes to enhance code robustness by preventing potential NullPointerExceptions
added anonymousPath method to IOUtils and updated Log4jUtils to utilize a utility method for path handling to improve code readability and maintainability
added a new method ` getContentDescriptionForTask ` to the ` DigitalWellBeingToast ` and ` TaskView ` classes to enhance
added a timeout check for metaLocation in CatalogTracker . java to allow more time for metaLocation to be available before proceeding with further operations
refactor LineNumberTagAggregator and TestDominance classes to improve code organization and maintainability
[ smarthome ] use default conversion in genericitem . convert ( state , typeclass )
added a new test method ` fetchPostAndDetailsProjection ` to ` BidirectionalOneToOneNPlusOneTest . java ` and updated import statements
added a call to removeExtraEmptyScreen ( ) in LauncherModel . java and modified search page index assignment logic in LauncherModel . java
updated the initialization of baseDerivedRefs and derivedRefs in MarkBasePointersPhase . java and indexedValueMap . java to optimize memory usage and
updated string formatting in GoogleLineChart . java and GooglePieChart . java to ensure proper formatting of line values in the output
updated batch processing logic in SendingAccountor . java for better clarity to improve code readability and maintainability
added a ` position ` field to the ` WALPrettyPrinter ` class to manage the printer ' s position to enhance the printer ' s functionality
fix testnettytransceiverwhenfailtoconnect fail to connect
updated event handling in SimpleReport . java to use a sorted list instead of a hardcoded value to improve code readability and maintainability by
added a new test method ` getCsvLine _ DescriptionContainsDoubleQuote _ ReturnsCSVLineWithEscapedQuote ` to ` CSVFileLoggerTest `
refactor ` classifyStdin ` methods to include " coref . doConstituencyTree " , " parse . model " , and
add a check for the recipient jid in the IQRouter , IQHandler , and IQHandler in IQHandler to ensure that
removed @ JniImpl annotation from VM . java to clean up the code and improve readability
updated crawl delay calculation in Fetcher2 . java to use Protocol . CHECK _ BLOCKING and Protocol . CHECK _ ROBOTS to improve
added a condition to check if the video HDR format format is not " dolbyvision " in FFMpegVideo . java
updated the package name from " other _ package " to " other _ package2 " in AstTests . java to reflect the new package structure
updated WorldBorder . java to handle negative percentage values and added unit tests in WorldBorderIntegrationTest . java and WorldBorderIntegrationTest . java to ensure accurate
hbase - 26286 add a method to get walGroupsReplicationStatus ( ) to check if the master can host user region
updated the login event handling logic in AppWFull . java to include a caller parameter to improve event management and ensure proper cleanup of login events
refactor routing table to use a new method for generating instance configurations to improve code readability and maintainability by centralizing instance configuration generation
changed the visibility of the FieldAttributes class from public to public to allow access to the FieldAttributes class from other packages
add test for readerroneous maven project that do n ' t have a reference
removed redundant checks for oldProto and protoHistory in PropertyMap . java to simplify the logic for better readability and maintainability
updated the ` getControllerId ` method to accept a ` configId ` parameter and refactored the ` getControllerId ` method to improve
replace sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management and avoid potential memory leaks
updated the condition to check for refresh token generation in the prompts to improve clarity and maintainability of the prompt validation logic
removed console output from Http2SolrClient . java to clean up the code and reduce unnecessary console output
updated the extractor method to use NoopGetter in BaggagePropagation . java to improve code readability and maintainability by encapsulating
refactor ConditionalOnEnabledResourceChain class implementation to improve code readability and maintainability
added a condition to check if the treeRoot ' s getChildCount ( ) is greater than zero to ensure that the treeRoot is not empty before processing
updated the method from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
updated logging statements and logging statements in FacebookImpl . java and FacebookImpl . java to improve logging clarity and ensure proper handling of session state changes
updated return values from " h : mm a " to " h : mm a " in ShadowICU . java and added a new test for
replaced ` mKM ` with ` mKM ` in ` TouchInteractionService . java ` to simplify the condition for checking device locked status
cloudstack - 10265 : fix npe when use defaultdiskofferingid in cloudstack
replaced FileChannel with AsynchronousFileChannel and modified position calculation in UtowBodyHandler . java to improve code readability and maintainability by using
refactor SigInt and SigIntTest classes to improve code readability and maintainability
refactor : use preparetext . getmineditorwidth ( ) instead of updatebytext . update ( )
updated return value from - 1 to 0 in Asset . java to ensure the method returns a default value of 0
replaced ` SIZE ` with ` ITEMS ` and ` mappingFunction ` in ` ComputeBenchmark . java ` to improve code readability and maintain
added onRefreshListener to NotifyDataSetChanged ( ) method in UploadListFragment to ensure that the adapter updates when the data is refreshed
updated BibDatabaseContext and ParserResult classes to use ` Path ` instead of ` File ` in multiple classes to enhance flexibility in handling file paths
replaced ` ParticleEmitter . class ` with ` ParticleEmitter . get ` in ` ParticleEffect . java ` to improve code readability
refactor Tomcat service and host handling in Tomcat . java to improve code readability and maintainability by encapsulating service and container
corrected the spelling of " desired file " in multiple files to improve code readability and maintain consistency in naming conventions
added a check for playback state in PlaybackController . java to prevent unnecessary processing when the playback state is not active
removed dependency on ServiceComponentDesiredStateEntityPK from serviceComponentDesiredStateDAO to simplify code and improve readability
added a new method ` InnerClassFieldClash ` in ` Java2TypeScriptTranslator ` and created a new test class ` InnerClassField
added logging and follow redirect filter configurations to DockerClientFactory , DockerClientProfile , and DockerClientProfile classes to enable customizable logging behavior based
replaced direct displayChanged ( ) calls with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure proper resource management and prevent
hhh - 10183 - fix typo in nationalizedscalarquerytest
[ java ] do n ' t close the input stream when the zip header be close .
changed access modifier of the storeClassFile method from private to public to allow access to the method from other packages
updated assertions in SingletonSortedSetDocValues . java and added a new TestSortedSetDocValues . java file to ensure correct behavior of comparingIdent
updated error messages in CGIHandler to include a runnable parameter and added a start method in JavaVM to improve clarity of error messages and ensure proper
added support for newline characters in line endings in LineReaderImpl . java to ensure compatibility with additional character encodings
updated method signatures in DistBuildService , ServerContentsProvider , ServerContentsProvider , ServerContentsProvider , ServerContentsProvider , and ServerContentsProvider
added a check for vertex count in OGLESShaderRenderer . java to avoid unnecessary processing when there are no vertices in the mesh
refactor IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to improve error handling and provide clearer
updated file deletion method from createData ( root , menuPath ) to createFolder ( root , menuPath ) in MacroService . java to
truffle : remove unused import of node from typesystem
refactor JsonObject class to improve code readability to enhance maintainability and facilitate future updates
updated condition checks in SelectChannelEndPoint and HttpConnection to use a new method for determining low resource limits to improve code readability and maintainability by
fix farmlandblock . cansustainplant ( # 10225 )
added a new CREATE TABLE SALTEDTABLE123 and updated UpgradeUtil to use PRIMARY KEY and COLUMN _ SALT _ BUCKETS
updated date formatting in HttpCookie . java and added a new file B6791927 . java with a new class B6791927 .
added null checks for db . close ( ) in DbHelper . java to ensure proper resource management and prevent potential memory leaks
updated the poll timeout from 1 to 5 in BatchMessageListenerContainerIntegrationTests . java to improve test reliability by allowing more time for processing responses
[ gr - 26186 ] fix compile error when compile compile with tracera .
refactor codeareakeybinding to use keybinding repository instead of globals . keybinding . keybinding
added a line separator to the ObjectMapper initialization in DrillTest . java to ensure consistent line endings across different operating systems
added support for Windows path handling in NativeEnvironmentRepository . java to ensure consistent path formatting across different operating systems
added PostConstruct annotation to BaseTest , LiteFnQueryHttpFilterTest , and updated service initialization in LiteFnQueryHttpFilterTest to
[ java ] remove validation of leadershiptermid and leadershiptermid from recordinglog
updated import statements in ITSystemTest . java to use ErrorGroupName instead of GroupName to improve code clarity and maintain consistency in naming conventions
added a check for mvStore in TestFuzzOptimizations . java to ensure correct memory usage in Travis environments
added a new boolean variable ` reverseImage ` and modified preference handling in ` CameraManager . java ` to improve code readability and maintainability by
updated conditional checks for META - INF / and META - INF / directories in multiple files to ensure consistent handling of META - INF /
refactor TerserUtil and MdmMatchLinkSvcTest classes to use a predicate for field replacements to improve code readability and maintain
updated JUnit imports and method visibility from ` @ public ` to ` org . junit . junit . jupiter . api . api `
replaced ` New . arrayList ( ) ` with ` TYPES ` and replaced ` New . arrayList ( ) ` with ` TYPES `
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
added timezone information to the triggerTime variable in AbstractAlertNotifyHandler . java to ensure consistent time representation across different time zones
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` to handle abstract method errors to improve error handling for abstract method
camel - 14284 : camel - simple : fix error message when body . xxx do not contain OGNL syntax
removed the check for empty toExplore in AbstractParser . java to simplify the code and improve readability
camel - 14284 : camel - jclouds - add copy ( is , cos , cos ) to camel - jclouds -
camel - 14284 : camel - test - java : remove the @ ignore annotation from camelconsultest . java
updated conditional checks in Check . java and added a new test class CheckACC _ STRICT access flag in Check . java and added a new
[ java ] use drivertimeoutms instead of drivertimeoutms in channelvalidationtest
added a new file ` FileExtensions . java ` that implements the ` FileExtensions ` class for handling file extensions to provide a standardized way to
refactor DateFormatUtil to use a ThreadLocal for better thread - safety to improve performance by reducing the number of calls to the ThreadLocal
updated VMDeprecatedOptions . java to include additional options for fastTLABRefill , SafepointSpinBeforeYield , and SafepointSpin
added a new property ` displayName ` to ` Pac4jBaseClientProperties ` and modified ` DefaultDelegatedClientFactory ` and ` Delegated
updated exception handling in multiple operators to use EarlyTerminationException instead of RuntimeException to improve error handling for early termination scenarios
updated the method call from ` targetFunction . apply ` to ` targetFunction . apply ` in ` TraceFunctionAroundWrapper . java ` to
updated response handling in HttpBindServlet , HttpBindServlet , and HttpConnection classes , and added a new consumeResponse method in HttpSession to improve connection
added null check for parent in ForgeEventFactory . java to prevent potential NullPointerException when parent is null
wallettool : remove keycrypterexception and keycrypterexception from wallettool
added @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that the service is outdated and should no longer be used
updated the initialization of Hyphenation in HyphenationTree . java to ensure proper handling of the length of the Hyphenation object
added a sleep method to the IQRegisterHandler class to allow more time for the registration process to complete before proceeding
change package structure of resource . getresource ( ) to be package - private .
corrected the spelling of " named parameters " to " named parameters " in ParameterBinder . java to improve code readability and maintain consistency in
added a property ` providersChanged ` to ` false ` in ` ConfigurationManager . java ` to ensure proper handling of configuration changes
added a method to quote identifier tokens in SemanticAnalyzer to ensure proper handling of identifier tokens in the semantic analysis process
added a null check for the ' name ' entry in the FileSystemFontProvider to prevent potential NullPointerExceptions when processing PostScript names
replaced ` AbstractAnalysisFactory ` with ` AnalysisSPILoader ` in ` SolrResourceLoader . java ` to improve type safety and eliminate unchecked warnings
refactor condition checks in Window . java to use a loop for better readability to improve code readability and maintainability
added a null check for the appManifest before accessing it to avoid potential NullPointerExceptions when appManifest is null
refactor configuration metadata handling in ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to improve code readability and maintainability
added userName field and getter / setter methods to Driver , HiveSemanticAnalyzerHookContext , and HiveSemanticAnalyzerHookContextImpl classes to enhance user identification
added setter methods for xslt files , URLs , and XMLConverter in XsltBuilder and XsltComponent classes to enhance flexibility in
added HadoopShim to multiple classes to enhance compatibility with Tez ' s Hadoop implementations
updated expectedFileSize handling in ShadowAssetManagerTest and updated URI parsing in ShadowContentObserverTest and ShadowDownloadManagerTest to ensure compatibility with the
added null check for context before logging access in CoyoteAdapter . java to avoid potential NullPointerExceptions when context is null
[ hotfix ] [ log4j2 - planner ] fix timing issue in throughputlogger
updated VM version checks in CompilerConfigFileWarning and ConfigFileWarning to use Platform . isDebugBuild ( ) for debug builds to ensure compatibility with
refactor ` DefaultLogPublisher ` to use ` Map < String , MeterDetailStatisticsModel > ` instead of ` MeterStatisticsManager `
refactor logback configuration file handling in FrameworkLauncherExtended . java to improve code readability and maintainability
updated ` CipherExecutor ` , ` CookieValueManager ` , ` CookieValueManager ` , and ` CookieValueManager ` classes to accept ` @
updated Escaper class to use SHELL _ ESCAPER instead of BASH _ ESCAPER to ensure compatibility with Windows environments
refactor ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest ` in ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest `
renamed the TestLucene50FieldInfoFormat class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat
removed unnecessary semicolon in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate ShieldAddress in RpcApiService to enable the generation of ShieldAddress from the wallet
changed ` readConsoleInput ` method to return ` String ` instead of ` byte [ ] ` in multiple classes to improve type safety and ensure consistent
updated conditional logic in TestStabilityRule . java to remove the reference to PLATFORM _ PRESUBMIT to improve code readability and maintainability by
added a conditional check for multi - valued fields in DefaultSolrHighlighter and updated related test cases in HighlighterTest to ensure that multi - valued fields
updated the ` tryToLogin ` method to accept a URI parameter for username and password in the ` tryToLogin ` method to enhance security by
updated entity handling in HandlerSceneEntityDrownReq , PacketSceneEntityDrownRsp , and PacketSceneEntityDrownR
camel - 14284 : camel - jms - fix a typo in the resolveOrCreatedestination method .
replace wrapCollection ( parameter ) with wrapCollection ( parameter ) in DefaultSqlSession . java to improve code readability and maintainability
added handling for unknown currency exceptions in BTCEAdapters . java to improve error handling and logging for unknown currencies
replace clientId with candidateSubName in DurableConduitBridge . java to improve clarity and maintainability of the subscription creation process
pdfbox - 4071 : change average and spacing tolerance to 0 . 3f , a suggest by valerybokov
updated the ` startController ` method to accept a ` useTenantIsolation ` parameter and modified related methods in ` ControllerTest ` and ` ClusterTest
removed the builder method from the response value retrieval method in HasSettings . java to simplify the code and improve readability
added a check for empty attrs in ProjectWorkspace . java to ensure that only valid attributes are processed
added abstract method ` getProjectJdkName ` , ` getProjectJdkType ` , and ` getProjectLanguageLevel ` across multiple classes to
updated the term " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify the purpose of the optimization option for better
added a new test method ` scottWithUserDetails ` to the ` GrantedAuthorityEffectiveAclsResolver ` class to enhance test coverage for
[ java ] use getSolvedJavaLangObject ( ) instead of get ReflectionClassDeclaration ( ) to avoid classcastexception
added a constant for the number of buttons in XToolkit . java and modified the return statement in XToolkit . java to improve code readability and
updated import statement from jdk . testlibrary . Asserts . assertEquals to com . oracle . java . testlibrary . Asserts . assertEquals to ensure
refactor MessagePack and MessagePackFactory to use a new class for creating MessagePack instances to improve code organization and maintainability by encaps
added new tags for " is _ desert " , " is _ cave " , and updated tags in the ForgeItemTagsProvider to enhance biome
updated method names from " present " to " draw " across multiple screen classes to improve clarity and consistency in naming conventions
added conditional checks for horizontal and " GroupElement " elements in ComponentGroup . java to ensure proper layout behavior based on the presence of " GroupElement
removed the identifier matching from the condition in DOIServiceImpl . java to simplify the code and improve readability
fix a bug in androidinput . getmultitouch ( ) in androidlocklessinput . java
[ java ] make clusteredserviceagent close the commit position if it be close .
added new classes ` UserSite ` , ` UserSiteId ` , and ` UserSiteId ` , and ` RecordIdClassTest ` to
added exception handling for malformed URLs and URLs in HttpConverterRegistrar . java to improve robustness and provide clearer error messages for malformed URL
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 641
replaced openInput method with fileLength method in NRTCachingDirectory . java to ensure proper resource management and avoid potential memory leaks
replaced ` java . lang . reflect . InvocationTargetException ` with ` java . lang . JavascriptParser ` in ` JavascriptCompiler . java `
changed the class name from ` UISettings ` to ` UISettings . class ` in ` UISettings . java ` to ensure thread safety during serialization
added a condition to check if the text input support and focus is enabled in the TextField class to ensure that text input is only processed when necessary
added schemaChangeErrString , schemaChangeErrString , and retryMaxOnAbortedExceptionWithMessage methods to SpannerIO and SpannerIO
replace generic type parameters from ` TreeMap < String , byte [ ] > ` to ` HashMap < String , byte [ ] > ` in multiple classes
updated array cloning logic from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray class in ObjectInputStream . java
updated nonce handling in OIDCAuthenticationFilter . java to improve code readability and maintainability
added a condition to check for relationship fields in DCInputSet . java to ensure proper handling of relationship fields in the input set
added support for server slogans in FileDataStorageManager , FileContentStorageManager , and ToolbarActivity , and updated title retrieval in Toolbar
refactor conditional checks in DrawerActivity . java for better readability to improve code readability and maintainability
updated test assertions in SolrRequestParserTest to use JUnit ' s assumeNoException method to improve test reliability by providing a clearer error message
added a check to return early if missingSymbolEvents is empty to prevent processing of invalid build IDs
added new data types " Data 3 - 4 " and " Data 5 - 4 " in StringHelperTest . java to enhance test coverage for data
added a warning log statement to indicate that the data provider is not returning an empty array or iterator to improve error handling and provide clearer diagnostics
camel - 14284 : use Collections . emptyMap ( ) instead of Collections . EMPTY _ SET to return an empty list instead of an empty list
updated XML version and added selection style handling in MapStyleModel . java and MapStyleModel . java to ensure compatibility with the latest features and improve
updated the method call from ` mass ` to ` restitution ` in ` PhysicsRigidBody . java ` to ensure the correct
added a new file ` AutoFtpActivity . java ` that implements the ` AutoFtpActivity ` class to handle FTP test success and failure
updated token type checks in BaseSemanticAnalyzer . java to handle StringLiteral types to ensure proper handling of string literals in semantic analysis
added getter and setter methods for imageX , imageY , and component state in ImageViewer , GenericSpinner , and Component classes to provide access to
added a new file ` RemoteExecutionEnabled . java ` that implements CustomFieldSerialization and its tests in ` BuildableSerializerTest . java ` to
pdfbox - 4071 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` in ` ImportCsv ` , ` PublicBAOS ` , and ` PublicBAOS ` classes to
added assertion to assertWorkingScoreFromScratch and assertShadowVariablesAreNotStale in AbstractScoreDirector . java to ensure that working scores are not stale
updated the column name from " hive . enable . enable . semijoin . enable " to " hive . optimize . semijoin . conversion " to
added slf4j logging for message processing in multiple classes to improve logging clarity and maintain consistency in message handling
refactor directory removal logic in SynchronizeFolderOperation and FileDisplayActivity to improve code readability and maintainability to enhance code readability and ensure
added assertions for transaction hash retrieval in PollingTransactionReceiptProcessorTest . java to ensure the transaction hash is correctly associated with the transaction hash
updated test methods in ISchemaRegion and SchemaRegionBasicTest to reflect the new method ' testDeleteTimeseries ' to indicate that these methods are
added null check for sampleMimeType in MediaCodecRenderer . java to prevent NullPointerException when sampleMimeType is null
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource `
updated the @ AllArgsConstructor annotation from @ AllArgsConstructor to @ JsonCreator . Mode . PROPERTIES in J . java to ensure proper serialization
added SQLFeatureNotSupportedException to ensure that creating an index on a view is not supported to prevent SQLFeatureNotSupportedException when creating an index on a
added a new class ` Website ` and ` PopulatorImplTest ` for retrieving and retrieving website URLs to provide a structured way to populate
added a setup method in BSFormatterTest to set the default locale to " en " in the BSFormatterTest . java file to ensure
added a FilenameFilter for downloading jar files in CoreModManager . java to ensure that jar files are downloaded correctly and provide clearer error messages for
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of Matchers . containsString to improve readability and maintainability
added a check for variable expressions in SimpleExprGenerator . java to ensure correct handling of variable expressions in the analyzer
added a volatile boolean variable ` createdVertx ` and modified the condition in ` VertxComponent . java ` to ensure that the ` vertx `
updated attribute handling in NodeStyleBuilder to include a new node model to improve code clarity and maintainability by using a more descriptive variable name
updated log messages in SynchronizeFolderOperation and FileDisplayActivity to handle null files to improve robustness by preventing potential NullPointerExceptions
added a property ` ignoredReadStatus ` to ` Entries ` and updated the ` FeedREST ` class to include a ` ignoredReadStatus `
replaced ` targetPath ` with ` MavenPaths . targetDir ` for resource resolution in multiple test files to ensure compatibility with the latest Jetty tool
added validation for URI register data in RegisterServerConsumerExecutor and URIRegisterExecutorSubscriber classes to enhance data validation by ensuring only valid data is processed
updated the condition in GwtMusic . java to conditionally check if the sound ' s play state is not paused to ensure that the playback state is
added a new permission check for the SUDO _ AREA in the MainCommand and Captions classes to enhance security by allowing users to
updated ServerRequestPlanVisitor and QueryRunnerTestBase to utilize a trace enabled flag for query execution to enhance debugging capabilities by allowing traceability of query
updated comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , ReloadableJava
updated assertion statements in ResourcesTest . java to include pureEmoji and mixEmoji in attribute values to improve readability and maintainability of the assertion logic
updated the ` NMTWaitForDataMerge ` and ` NMTMallocWithPseudoStack ` methods in ` WhiteBox . java ` to
[ hotfix ] [ serializer ] rename ` EitherSerializerSnapshot ` to ` JavaEitherSerializerSnapshot ` instead of ` EitherSerializerSnapshot ` to
updated default values in AddressResolverOptions and AddressResolver . java to use resolvOption instead of - 1 in AddressResolver . java and Address
added a call to ` __ associate ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplateTest ` to ensure
pdfbox - 4071 : fix npe in nonterminalfield . getdictionaryobject ( )
updated XML file paths from " liquibase / parser / core / xml / " to " www . liquibase . org / xml / ns " across multiple
updated package name from ` com . oracle . truffle . api . source ` to ` com . truffle . api . test . source `
changed the return value from INIT to NOT _ REQUIRED in ServiceComponentDesiredStateEntity and ServiceImpl classes to indicate that the state is not
added schema comparisons to the diff result in GenerateChangeLogTask . java to enhance comparison functionality by incorporating schema information
updated import statements in TestBackwardAnoamlyFunctionUtils . java to use TestNG annotations to ensure compatibility with the latest TestNG framework
added a new file ` ProgressiveJPEGTest . java ` implementing a new file ` ProgressiveJPEGTest . java ` to
refactor MaterialLoader to use a new variable " AlphaDiscardThreshold " and set ambient , ambient , and texName to improve
fix native - image building on x86
added a null check for text before setting size in Label . java to avoid potential NullPointerException when text is null
updated the readVarInt method to include a constant value of 1 _ 000 _ 000 to ensure proper handling of integer values in the data
added ` PushUtils ` constructor to ` PushUtils ` and ` ThumbnailsCacheManager ` classes to enforce immutability of ` PushUtils `
refactor length calculation in RocketPanel . java to simplify code and improve readability
replaced ` MockDirectoryWrapper ` with ` SetEnableVirusScanner ` in ` TestDirectoryReaderReopen . java ` to simplify the code by
updated the loading of presets from " . * csv " to " i " in the componentPresetDao . load method to improve clarity and functionality
updated taskbar announceForAccessibility and FloatingIconView classes to improve accessibility handling and ensure compatibility with newer Android versions
replaced direct node creation with a RefreshTask instance in NodeManager . java to improve code readability and maintainability by using a more descriptive
add targetjdk15 to PMDTask and implement targetjdk15 to ensure compatibility with different JDK versions and prevent runtime
replaced PowerMockRunner with MockitoJUnit for mocking QuotaTariffVO in QuotaResponseBuilderImplTest . java to improve test
added console output stream and error handling in TestSchemaToolCatalogOps . java to enhance debugging capabilities by providing clearer output and error information
added a ` DFSClient ` parameter to the ` SaslNegotiateHandler ` class and updated related methods to include a ` DFSClient
added RepositoryMetadata parameter to MongoQueryMethod constructors in MongoQueryMethod and StringBasedMongoQueryUnitTests to enhance flexibility in query resolution by allowing
add a new EntityResolver2 wrapper to the Digester class to improve the handling of EntityResolver2 annotations in the Digester class
updated import statements in MetaDataEndpointImpl . java for consistency and clarity to improve code readability and maintainability by reducing redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS and ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and
refactor BarChartActivity and LineChartActivity to utilize a new utility method for positioning and positioning to improve code readability and maintain
added a new method ` isPrintableChar ` to check for printable characters in ` FsUtils . java ` to ensure that only printable characters
rename ` in ` using ` method to ` using ` across multiple classes to improve clarity and consistency in method naming
add a process plugin to the build request , so that it can be use in the build request .
corrected spelling of " amountTransfered " to " amountTransfered " in ProxyConnectionManager and ServerTrafficCounter classes to ensure consistency in
updated resource path handling in ITSystemTest . java to include a check for the existence of the resources directory to ensure that the resources directory is correctly
updated return statement in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes to use the user ' s getRemoteHost method to improve
add admin button to communitylistservlet for admin admin
replace ThreadFactoryBuilder with AtomicInteger for longCompactionThreadCounter and shortCompactionThreadCounter in CompactSplit . java to improve thread counter management for better
updated the package name retrieval from ` getApplication ( ) . getPackageName ( ) ` to ` resources . getResourcePackageName ( ) ` in ` WallpaperChooser
updated ` getPlayersInPlot ` method to use ` getPlayersInPlotVisible ` instead of ` getPlayersInPlot ` to
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest class to improve test coverage to enhance reliability and maintainability of the test cases
refactor JNIRegistrationManagementExt to use a constant for OPERATING _ SYSTEM _ IMPL in JNIRegistrationManagementExt to
updated the variable name from " referencedContainer " to " referencedContainer " in SchemeGenerator and added a new test for expected properties in SchemeGeneratorTest
replaced the use of ` encodeStringToBase64Bytes ` with ` EncryptionUtils . randomBytes ` in ` UploadFileOperation . java `
add @ Stability annotation to WorkProfileTest . java to address issue b / 243688989
added a check for bucketing version in TezCompiler . java to ensure only valid bucketing versions are processed
changed the method call from ` setCursorPosition ( x , y ) ` to ` input . setCursorPosition ( x , y ) ` to
changed the ` LockFreeBucket ` class to be abstract and added a new ` LockFreeBucket _ FinalFields _ CacheLinePadding ` class to
add a method to print threadpoolstats in nodeprobe . java to improve monitoring of thread pool statistics for better monitoring
updated the setting of maxBitrate from userPreferences to userPreferences in ExternalPlayerActivity and PlaybackController to ensure consistent retrieval of bitrate based
updated ZipkinHttpSpanExtractor and ZipkinHttpSpanReporter to check if only span IDs are present before processing to ensure that only span ID
updated method signatures in MutableOfferDataModel , CreateOfferDataModel , and DuplicateOfferDataModel classes to improve code readability and maintainability
removed reflection imports and modified the return statement in FlutterCompletionContributor . java to simplify code and improve readability
added a call to setProject ( p ) in LauncherUtils . java to ensure the project is properly set during execution
updated JsBundle and JsBundleBuilder to include ProjectFilesystem in ProjectFilesystem in JsBundleBuilder and JsLibraryBuilder to enhance the
refactor EnvelopeStyle , DatabindingModeFeature , DatabindingModeFeature , DatabindingModeFeature , and DatabindingMode classes to improve code
refactor MetricsDSLContext class to improve code readability to enhance maintainability and facilitate future updates
replaced ` VersionBuckConfig . java ` with ` ImmutableSet . builderWithExpectedSize ( ) ` in ` VersionBuckConfig . java `
added a try - catch block for TypeNotPresentException in the bindShadowClass method to handle potential TypeNotPresentException to improve robustness by
changed the access modifier of the validateTypes method from package - private to public in Assertions . java to allow access to the method from other classes
added @ BetaApi annotations to various classes to ensure compatibility with the latest Google API changes
added logging functionality to SimulationStatus . java to enhance logging capabilities for simulation status updates
updated the Splash version from 138 to 150 in Splash . java and updated the Font . SANS _ SERIF version to 14
refactor notification addition logic in UserInterfaceComponentImpl to runLater to improve code readability and maintainability
updated the return statement in ReturnsElementsOf . java for better readability to improve code readability and maintainability
updated error message from " equality " to " equality " in ErrorMsg . java to clarify the purpose of the error message
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify the functionality of ` LineFileDocs `
added a method to retrieve the version code in MainApp and updated FeatureList to use MainApp ' s getVersionCode method to improve code clarity and
camel - 14284 : camel - bean - add support for explicit method invocation in beaninfo .
updated assertions in ` MultiPartInputStreamTest . java ` to use ` getSubmittedFileName ( ) ` instead of ` getContentDispositionFilename ( ) `
added buffer management functionality to IndexBufferObject , VertexBufferObjectWithVAO , and VertexBufferObjectWithVAO classes to ensure proper resource management
added a new transition for the " forgotPassword " state in PasswordManagementWebflowConfigurer . java to enhance user experience by ensuring the password is
refactor JerseyClientConfiguration class to improve code readability to enhance maintainability and facilitate future updates
[ java ] add ` ` org . springframework . integration . stream . readerreadmessagesource ' ' to ` ` org . springframework .
updated print statements in InstanceOfPatternMatchTest , RemoveRedundantTypeCastTest , and RemoveRedundantTypeCastTest to improve code
added method ` crop ( ) ` to ` StringDict ` and ` Table ` classes in ` StringDict ` , ` Table ` , and `
added ` AutoCloseable ` annotation to ` Container ` and implemented ` CreateContainerCmdHooks ` in ` GenericContainer ` and ` GenericContainer `
refactored error logging in MediaInfo , RendererConfigurationTest , and RendererConfigurationTest classes to improve clarity and consistency in error handling
added schema pattern option options in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database connection configuration flexibility
use tlsutils . EMPTY _ BYTES instead of tlsutil . empty _ bytes to avoid npe
updated calculations for bounds and bounds in AndroidGraphics . java to improve clarity and maintainability of bitmap creation logic
refactor Base64 class implementation to improve code readability and maintainability
[ gr - 26186 ] fix getfallback ( ) and setfallback ( ) in LLVMGlobalContainer . java
updated the @ Ignore annotation from ` @ Ignore ` to ` @ Ignore ` in ` JavascriptEnabledDriverTest . java ` to include ` I
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
updated ` resName ` and ` resId ` fields in ` AttributeResource ` , ` OverlayResourceIndex ` , and ` OverlayResource
added a ` resolveContextTLSFile ` method to ` DefaultDockerClientConfig ` , ` DockerContextMetaFile ` , and ` DockerContextMeta
updated import statements from ` org . junit . After ` to ` org . junit . Before ` in ` SimpleReactiveElasticsearchRepositoryTests . java
updated condition in Attr . java and added a new class T6450290 . java with a new class T6450290 . java
added a new parameter ` log - level ` and ` log - level ` to the ` LoggingFlags ` class and updated the ` LoggingOptions `
added logging statements for removing items from the database and updated the deleteItemsFromDatabase method to improve debugging and traceability of app icon removal processes
added multiple method ` allFilesOption ( ) ` to ` FileActivity ` , ` FileDisplayActivity ` , and ` FileDisplayActivity ` to
added a new method ` forEachOperation ` and ` hasMatching ` to the ` MutationOperationGroup ` class to indicate that these methods should no longer
updated the calculation of numPredictiveAppCols from Math . max to 4 in DeviceProfile . java to improve accuracy in determining the number of
added UTF - 8 character encoding for the value in StringUtils . java to ensure proper handling of character encoding for better compatibility
added new classes ` RequestMatchers ` , ` AnyOf ` , and ` AllOf ` , ` AllOf ` , and ` AllOf
ggb - 262 fix for issue with non - applet and non - applet
updated position calculations for knob positions in ProgressBar . java to ensure correct positioning of knob elements based on their background dimensions
updated the path for the " json - based - function - definition " resource in PrestoSparkNativeQueryRunnerUtils . java to improve
added a native method ` extra _ L1 ` and ` extra _ L4 ` in ` BruteArgumentMoverHandle . java ` to
added a condition to check if the state handler is INVALID in the gesture state check to ensure that the gesture state is only processed when the handler is
updated layout calculations in DynamicGrid and Workspace classes to improve layout handling for landscape and landscape orientations
added a condition to check for " / robots . txt " file in the redir check to ensure that " / robots . txt "
updated import statements and modified notification messages in JBrowseModule . java and CallHierarchyTopComponent . form . form . form . form to improve code
updated widget registration from " continue " to " createWorld " in AdvancedGameSetupScreen . java to improve clarity and consistency in naming conventions
updated null checks in UDFOPDivide . java and added a new test class ` TestUDFOPDivide . java ` with a
[ hotfix ] [ runtime ] fix checkstyle issue in flowjob . executestep
updated BeanDefinitionBuilder to use ` matcherBuilder ` instead of ` filterProcessesUrl ` in multiple classes to improve flexibility and maintainability of the authentication filter
added onDestroy method to ShareActivity , ContributionsActivity , and ContributionsActivity in ShareActivity , ContributionsActivity , Contribution
updated variable names from thumbNail to thumbnail in WallpaperPickerActivity . java to improve clarity and consistency in variable naming
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added a method to set request timeout in RaftServerConfigKeys to ensure proper handling of request timeouts in the Raft server configuration
updated logging statements in TsFileResourceManager and refactored ResourceManagerTest to improve error handling and enhance test coverage for time indexing
added setSystemProperties ( ) method to setModelSource ( modelSource ) and setSystemProperties ( System . getProperties ( ) ) in MavenModuleLoader
added support for readiness checks in ServerMeter and updated method calls in AdminApiApplication and AdminApiApplication classes to improve monitoring of readiness checks and ensure
add a method to register the animatedtorch model in the blockanimatedtorch .
added a null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when writer is null
added a method to retrieve Hive configuration files from a specified directory to ensure compatibility with different Hive configuration files
added a new link for Muting Users in the FeaturesActivity to enhance user experience by providing direct access to Muting Users
added a property for useDirectMethodHandle in System . java to disable direct method handling in the system
hbase - 13232 splitonleadingvarcharcolumnspolicy : use steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] add plugin folder to ship and ship
updated method calls from ` getPronunciations ( ) ` to ` getSpelling ( ) ` in ` BuildTranscriptHMM .
updated JSON string formatting in JsonUtilsTest . java to improve readability and maintain consistency in formatting
added ` id ` parameter to ` TimeLineCursorAdapter ` , ` TimelineArrayAdapter ` , and ` Compose ` classes to ensure the
[ java ] log a warning if the underlying ring buffer data be lost due to reliable topic
add noclassesfoundtoanalyzeeexception to improve error message
updated import statement from java . security . Key to java . security . PublicKey in KeyFetcher . java to ensure compatibility with the latest Java security features
updated the ` isIncompatible ` variable from ` false ` to ` true ` in ` DLNAResource . java ` to improve clarity and maintain
updated the method signature from AccountCreateContract to AccountCreateContract in RpcApiService . java to enhance the functionality of the account creation process
pdfbox - 4071 : do n ' t check if there be no range
[ hotfix ] [ test ] fix flaky messagelistenerredeliverytest
set off - heap format to true in StarTreeIndexSpec , IndexLoadingConfigMetadata , and CommonConstants to enable off - heap format version to
updated title handling in FeedUpdateService to ensure title starts with a maximum of 2048 characters to improve readability and maintainability of the code
replaced ` previewPanel ` with ` previewPanel ` in ` BasicColorChooserUI ` and added a new test class ` Test6977726 `
updated logging level from info to debug in DefaultBuildExtensionScanner . java to improve logging granularity for better debugging
added null check for reusableBitmap before setting in bitmap factory options to avoid potential NullPointerExceptions when reusableBitmap is null
added a ` getLayoutParams ` method to the ` FakeView ` class to provide access to the ` layoutParams ` variable
added a check to ensure that a Cursor is closed before proceeding with operations to prevent illegal state exceptions when the cursor is closed
pdfbox - 4071 : do n ' t return - 1 if no page be find
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a ` ts ` field and its getter and setter methods to the ` Message ` class to enable retrieval and setter of the ` ts
refactor exceptionmapper to use exceptionmapperutils instead of javax . ws . rs . core . exceptionmapper
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the class from other packages
[ isochrone ] rename removelegacyparameters ( ) method to removelegacyparameters ( )
removed public access modifiers from multiple test classes to enhance encapsulation and improve code readability
updated CSRF attribute handling in PluginServlet . java to improve code readability and maintainability by encapsulating CSRF attribute management
added bootstrap functionality to EclipseLoaderPatcherTransplants . java to ensure proper loading of class loaders based on bootstrap status
do n ' t render numeric cell in rule sheet when a numeric be disabled
updated log level from info to debug for default value retrieval in HiveConf . java to improve logging granularity by avoiding unnecessary info logging
added null checks for axes and buttons in Lwjgl3Controller and updated related logic in Lwjgl3ControllerManager to improve code
updated import statements from ` cucumber . api ` to ` io . cucumber . core . backend ` in ` WeldFactoryTest . java ` to
refactored null checks in PortForwardListActivity . java for better readability to improve code readability and maintainability
added SHOULD _ SNAPSHOT _ DATA property and updated related configurations in GlobalConfiguration and Data classes to improve configuration management for snapshot data
refactored PersistableBundle and JobInfo handling in SyncedFolderObserver . java to improve code readability and maintainability by reducing redundancy
refactor LocationMarshaller class to improve code readability to enhance maintainability and facilitate future updates
refactor condition checks in StatusBarTouchController , TouchInteractionService , and OtherActivityInputConsumer classes to improve code readability and maintainability by
updated package structure for VectorReader and VectorReaderImpl classes to improve organization and clarity of the codebase
updated import statements in multiple test files to use Matchers instead of ArgumentMatchers to improve code clarity and maintain consistency in naming conventions
replaced ` getProjectFilesystem ( ) ` with ` getProjectFilesystem ( ) ` in ` AndroidInstrumentationTest ` and ` AbstractPathSourcePath ` classes to
updated method signatures in SegmentMapper , CompositeTransformer , and RecordReaderFileConfig to use RecordReaderConfig instead of RecordReaderConfig to enhance flexibility in
added null checks for the extractor in ControllerMethodInvoker and Params classes to ensure that the extractor is not null before proceeding to prevent potential NullPointer
cloudstack - 10284 : add findcorrectresourcelimitforaccountanddomain method to resourcelimitservice and volumeapiservice
fix issue with slot shift event in inventoryeffectrenderer
added a deprecated constant ` COLD _ READS _ TO _ OMIT _ KEY ` to the ` SizeTieredCompactionStrategyOptions ` class
added a call to leech . stop ( ) in ClientTest . java to stop the leech process to ensure that the leech process is
[ issue # 121 ] add metric for retry label in popmessageprocessor ( # 12186 )
refactor KeyboardAddonSettingsFragment class to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to mark the test as ignored for a moment
renamed ` MongoClientSettingsBuilderCustomizer ` and ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilder
added session . setUpgradeRequest ( request ) and testUpgradeResponse in UpgradeConnection and JettyTrackingSocket classes to ensure proper handling of upgrade
added timeout handling in AndroidImplementation . java to enable customizable timeout settings for better user experience
refactor ` getUserAccessPermissions ` method to use ` allUsers ` instead of ` url ` to improve code readability and maintainability by
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL parsing and deparsing behaves as
added a check for ` isRoot ( ) ` in ` Misc . java ` to check if ` isExecutable ( ) ` is true to
refactor FixedThreadExecutor to use DynamicPropertyFactory for thread group management to improve code readability and maintainability by encapsulating executor selection
added null check for field in AbstractChangeGenerator . java to prevent potential NullPointerExceptions when field is null
updated ` CasEventListener ` to use ` InitializingBean ` instead of ` CasEventListener ` in multiple configuration classes to align with the new
replaced direct calls to ` listener . onAnimationEnd ( ) ` with ` endAnimation ( ) ` in ` ShadowAnimation . java ` to simplify
added a close method to DeflaterOutputStream in RegionFile . java to ensure proper resource management and prevent potential memory leaks
added a new file ` gsp001 . java ` that tests JVMTI GetSystemProperty on early phase Agent _ OnLoad to facilitate testing of
refactor BeanDefinitionInjectProcessor to use concreteClassMetadata and concreteClassMetadata to improve clarity and maintainability of the code by encapsulating the
[ jme3 ] add cameracontrol . read ( ) and lightcontrol . write ( ) to cameranode and cameracontrol .
refactor PopupNotificationPanel to use SwingUtilities ' s getWindowAncestor method to improve code readability and maintainability by encapsulating window management
rename NoInstanceException and InvalidInstanceException to InferenceException in Infer . java to improve clarity and consistency in exception handling
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the feature value of the feature value
changed the type of the ` after ` method from ` int ` to ` long ` in ` Mockito . java ` to allow for greater flexibility in
added onBuild property and corresponding getter and setter methods to ContainerConfig and Info classes to enable tracking of build status in the application
added conditional checks for right - to - left and left - to - right icons in Toolbar , FlowLayout , and FlowLayout classes to ensure proper icon
added a boolean flag to enable position increments in StopFilterFactory to enable position increments based on user - defined settings
updated email address initialization in EmailsTest and SystemErrorEmailReportTest to use a new InternetAddress object instead of a hardcoded string to
added a new variable ` mTryShareAgain ` to the ` FileActivity ` class to manage sharing behavior for improved user experience
added tty name handling in JansiNativePty . java to enhance compatibility with jansi native pom properties
updated bandwidth cost calculation logic in BandwidthProcessor . java to use bytesSize instead of bytes to ensure accurate bandwidth cost calculations based on dynamic properties
replaced direct calls to ` awaitility . await ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests .
fix api . easee . cloud / api . easee . cloud / api . easee . cloud / api . easee . cloud /
[ hotfix ] [ kafka ] fix test failure in kafkaioit
updated the ` hasJsonPath ` method to use ` is ( itemName ) ` instead of ` allOf ` to improve code readability and
updated import statements and added SSL context initialization in OkHttp . java to enhance security checks for client and server trust configurations
replaced ` mA11yLongClickListener ` with ` buttonView ` in ` NavbarButtonsViewController ` and ` TaskbarNavButtonController `
added a new file ` HyperlinkFormula . java ` with a new file ` HyperlinkFormula . java ` and implemented a new file ` String
added null checks for output and stderr in ShellStep . java to ensure that null values are not null to avoid potential NullPointerExceptions
[ hotfix ] [ test ] increase timeout for asyncappendertest
refactored database object escaping methods in AbstractDatabase . java to improve code readability and maintainability by reducing duplication
added a boolean variable ` inputChanged ` and modified conditional logic in ` MaterialRenameDialog . java ` to ensure proper handling of material title changes
added a new test method ` stateChangeShouldApplyToOtherInstancesOfSameDisplay ` to ` ShadowDisplay ` and updated ` ShadowDisplay ` to
add support for direct invocation service in order to make it easy to configure .
added handling for KEY _ X and KEY _ Y in GlobalKeyDispatcherW . java to support additional key codes in the application
updated SQL queries in PgDatabaseMetaData . java to ensure correct retrieval of pg _ class IDs based on server version to ensure compatibility with server versions
[ hotfix ] [ runtime ] fix nullpointerexception in queuechannel
updated method signatures in ` getPathsFromResource ` and ` getPathsFromResource ` to use ` getRawPath ( ) ` instead of ` 
added support for handling Jenkins nodes in the CollectorServer class to enhance monitoring capabilities for Jenkins nodes in the application
updated attribute resolution logic in HeadersBeanDefinitionParser and added a new method for resolving placeholders in HttpHeadersConfigTests to improve code readability and maintainability
[ iotdb - 4071 ] fix error message in ProtobufLogReader . java
updated the destroy method in DefaultApplicationDeployer . java and added a shutdown method in NacosRegistry . java to ensure proper cleanup of the na
camel - 14284 : camel - mybatis : fix camel - mybatis / camel - mybatis / camel - mybat
refactor GoAwayGenerator and GoAwayBodyParser to improve code readability and maintainability to enhance maintainability and maintainability of the
added a test for the " BadCredentials " type in the AuditEvent class to ensure that the correct JSON object is returned for the event
added checks for rounding errors in Interpolation . java to ensure correct handling of floating - point values
updated the path variable from " / defaults / " to " / defaults / " in ForgeWorldEdit . java to correct the path format for
updated the way the DxExecutable is added to the builder in DxStep . java to improve code readability and maintainability by using a
added assertions for PointRangeQuery and PointRangeQuery in TestPointQueries . java to ensure correct comparison of PointRangeQuery and PointRangeQuery instances
hbase - 13234 fix testhfilecleaner to use / namespace / table / region in testhfilecleaner
added a check to ensure the file name is not equal to the file transfer request ' s file size before displaying it to improve user experience by preventing
removed the throw statement from JedisClusterCommand . java to clean up the code and improve readability
[ hotfix ] [ table - common ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap in FilterInvocationDefinitionSourceEditor to
refactor QMapReadRandomKeyBenchmark and QMapReadSequentialKeyBenchmark to improve performance and readability to enhance code readability and maintainability
added a HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B map to
added a check for empty fields and modified identifiers handling in GroovyEngine . java to improve robustness by ensuring only valid fields are processed
set the drawable to false in AlgoDependentNumber . java to disable the drawable for better visual representation
added SERVER _ READ _ SOCKET _ TIMEOUT configuration and updated TServerSocket initialization in HiveConf . java and HiveServer . java to
updated method name from ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java `
no effective change - remove unused import
refactor RealtimeSegmentRelocator to improve code readability and maintainability to enhance maintainability and reduce boilerplate code
cloudstack - 10225 : remove unnecessary variable in create vpccmdbyadmin . startvpc ( )
updated windowAlpha calculation in WindowTransformSwipeHandler and FloatingIconView to use Math . max ( 0 , 0 ) instead of interpolatedProgress
updated schema references in SecurityNamespaceHandler . java to include new version requirements to ensure compatibility with newer Spring Security versions
updated multiple Java files for consistency and clarity to improve code readability and maintainability
[ hotfix ] [ runtime ] make non - final in disruptorprovider .
added a new file ` TestConfigureUDF . java ` that implements a UDF class for testing UDF configuration to facilitate testing of UDF
updated string matching logic in LogMessageWaitStrategy . java and added a new test for line ending matching in LogMessageWaitStrategyTest . java to
replaced ` logger . instance ` with ` logger . getLogger ( INTERNAL _ LOGGER _ NAME ) . getLogger ( ) ` in ` LOG . java `
removed ` update _ time ` from ` updatePurgedShardNodes ` and ` deletePurgedShardNodes ` methods across multiple files to streamline
updated Java language handler version from " 16 " to " 17 - preview " in JavaLanguageModule . java to ensure compatibility with the latest Java language
[ log4j2 - 116 ] fix fileappenderresiliencetest to wait for compression job to finish
[ hotfix ] [ runtime ] fix potential npe in VolatileReadNode . java
added ` getSteps ` method to ` SimpleJob ` and ` getStep ` methods in ` SimpleJob ` to enhance encapsulation and
refactor ` TronJsonRpcApiUtil ` , ` TronJsonRpcImpl ` , and ` TronJsonRpcImpl ` classes to
refactor currency pair creation in BitstampAdapters . java to improve code readability and maintainability
[ hotfix ] [ runtime ] use basetimeunit instead of timeunit in longtasktimer .
[ hotfix ] [ table - common ] remove dependency on shaded ' s hashpartitioner
refactor color handling in HostEditorActivity to use CharSequence instead of String to improve code readability and maintainability by using a more descriptive
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` for consistency to improve clarity and consistency in naming conventions across the codebase
added a constant for MAX _ TWEETS _ IN _ CONVERSATION in ExpansionViewHelper . java to limit the number of
updated refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to increase the refresh interval for improved performance
updated tail page handling in Queue . java and added a new test for getsPersistedByteSizeCorrectlyForFullyAckedDeletedTail
updated the return statement from ` getClass ( ) ` to ` getClass ( ) . getImplementationTitle ( ) ` in ` GlowServer . java
refactor the grow method to use a new method ` grow ` to improve code readability and maintainability by reducing duplication
removed unused import of DataOutputStream from GdxSetup . java to clean up the code and improve readability
added a method to retrieve the submitted file name in AttachmentHttpBinding to provide access to the submitted file name for better resource management
added a call to markReadForLoad ( ) in LauncherFragment . java to enhance loading functionality for better user experience
replaced the ` PRINT _ FAILED _ CLASSES ` variable with ` NegativeArraySizeException ` in ` JarInstrumentor . java `
added a method ` checkForSpillPossibility ( int currentPartition ) ` to ` HashAggTemplate . java ` to ensure that a partition
updated method calls from ` info . info . getDocStoreSegment ( ) ` to ` segmentFileName ( ) ` in ` IndexWriter . java
added a default name ID format for SAML name ID formats in SamlProfileSamlNameIdBuilder . java to ensure proper handling of name ID formats
added error handling for password changes in ChangePasswordPage . java to improve user experience by providing clear feedback when a password change is aborted
removed unnecessary semicolons in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle time
deleted the FontScalingTest . java file to remove unused test class to streamline the codebase
added checks for filterBeginDate and filterEndDate in RRD4jPersistenceService . java to ensure filterBeginDate and filterEndDate are valid before
added checks for negative number of vectors in GenericUDAFComputeStats . java to prevent unnecessary processing when no vectors are available
updated import statements and import statements in ExecutableRefTest . java to utilize JUnit 5 features and improvements from the latest JUnit 5 library
added null checks for view and glassPane before setting view and glassPane in JLayer . java and created a new bug6994419 .
camel - 14284 : camel - wiretap : add a wiretap expression to the wiretap definition
changed the visibility of the setAction method from public to protected in CollectionAdminRequest . java to restrict access to the method for better encaps
added a new OptionValidator for planner . enable _ topn option in PlannerSettings . java and updated SystemOptionManager . java to support
[ java ] remove unnecessary ` ` aerondirectoryname ' ' from ` ` aerondirectoryname ' '
fixed - redisconnection # setqueued ( boolean ) should set queued flag to false ( # 1232 )
replaced ` ByteArrayOutputStream ` with ` FileOutputStream ` and updated ` getConfVarURL ` method to use ` FileOutputStream ` instead of ` ByteArray
updated model creation to use criteria . getDevice ( ) instead of Device . defaultDevice ( ) instead of Device . defaultDevice ( ) to ensure
added onCreateOptionsMenu and onMenuItemSelected methods to the SimulationViewer class to enhance user experience by allowing users to choose between save and save items
refactor certificate validation logic in CertificateValidator . java to improve code clarity and maintainability
updated the homeDir variable from " user . home " to " user . dirname " in Main . java to ensure the correct directory path is used
added a condition to return SINGLE _ SPACE instead of SINGLE _ SPACE in Space . java to ensure proper handling of empty comments and
changed ` mClosed ` and ` mNativeDict ` from ` false ` to ` volatile ` across multiple classes to ensure thread - safe access to
removed stack trace printing from ContextHandler . java to clean up the code and improve readability
moved CustomItemDropTest from ` modid ` to ` testutils ` and added a new test class for the ` CustomItemDropTest `
added a new boolean parameter ` ifNotExists ` in ` DDLTask ` , ` AddPartitionDesc ` , and ` AddPartitionDesc `
refactor byte reading logic in NfsSecondaryStorageResource . java to use Arrays . fill and BufferedReader for better readability to improve code clarity and
[ hotfix ] [ stream ] remove unnecessary call to controlrequeststreamid ( )
added spatial operator attributes to the CapabilitiesTransformer and updated related test cases in WFSTestSupport and WFSTestSupport to enhance spatial operator support
added LuceneTestCase @ LuceneTestCase . AwaitsFix annotation to BasicDistributedZkTest . java to address issue SOLR - 2161
added preface matching logic in Http11InputBuffer . java to ensure proper handling of preface matches during request processing
changed the ` isIngressExclusive ` variable from true to false in ` AeronCluster . java ` to disable the Ingress exclusive state
added a new array for HBase cache keys in HBaseStorageHandler . java to enhance flexibility in managing HBase cache configurations
added a new method ` currentRecordCount ` to ` JSONRecordReader ` to track the number of records to ensure accurate tracking of the number of
added filtering for year items in CategorizationFragment to prevent duplicate items from being processed
replaced ` mCacheCanvas . drawColor ( 0 , 0 ) ` with ` mCacheCanvas . drawColor ( 0 , Mode . CLEAR
added a check for OpenGL ES version in the render method to ensure compatibility with OpenGL ES 2 . 0 rendering
do n ' t set context in backgroundprocess . setcontext ( null ) .
added a new method ` getUnescapedName ` to ` BaseSemanticAnalyzer ` , ` QBParseInfo ` , and ` SemanticAnalyzer
added connection timeout configuration in TestConnections . java and modified AtomicInteger initialization in StubConnection . java to ensure proper connection management and prevent potential race conditions
added tests for the ` approx _ percentile ` method in ` TestHiveAggregationQueries . java ` to ensure the correctness of the
updated WebSocketConstants to use Duration . ZERO and modified idleTimeout handling in WebSocketChannel . java and WebSocketChannel . java to improve code readability and
updated the usage of the ` getSharesWithForAFile ` method to use ` user . toPlatformAccount ( ) ` instead of `
refactor InetAddress handling to use generics and improve type safety to enhance code readability and maintainability by using generics
refactor PlaybackControlView to use a new method ` setButtonEnabled ` for better clarity and consistency to improve code readability and maintainability
updated the method signature from ` isPresent ` to ` id ` in ` Session ` and ` Token ` classes to improve clarity and consistency in session management
updated method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java
changed the default value of UseExceptionProbability from true to ____ in GraalOptions . java to improve clarity and maintainability of the code
updated the color calculation in PredictedAppIcon . java to use M3HCT instead of alpha to enhance the visual appearance of the app
guacamole - 102 : refactor mysqluser . init ( userid , username , password ) and userwithblobs ( )
updated aliases from " center " to " centre " in Middle . java to ensure consistency in naming conventions
added DirectUpload import and inject method in CommonsApplicationComponent and DirectUpload classes to enable dependency injection for direct uploads in the application
updated axis positioning logic in BarChartActivity , BarLineChartBase , and YAxisRenderer classes to improve clarity and consistency in axis rendering logic
added support for additional Java ABI flavors in AndroidLibraryDescription and JavaLibraryDescription classes to ensure compatibility with additional Java architectures
added a new parameter ` operationEventStatusType ` in ` OnlineHubService ` and modified the services list initialization in ` CompositeLogService ` to
added logging for annotations in DexAnnotation . java to improve traceability and debugging of annotations in the code
refactor ` startBundle ` and ` teardown ` methods in ` JmsIO . java ` and ` JmsIO . java ` to improve
updated SortedArrayStringMapTest to use the classpath instead of a hardcoded string to improve code readability and maintainability by using a
updated the handling of file paths in PackageResourceLoader . java to ensure consistent file path formatting across different operating systems
refactor method names from ` this . method ` to ` this . method ` in ` DataSet . java ` to improve code readability and maintain
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable tests related to b / 243855320
updated error message formatting in ShouldHaveMessage and ShouldHaveMessage _ create _ Error _ Create _ Test classes to improve error message handling by allowing escaping
added ` getURI ( ) ` method to ` JCache ` , ` JCacheManager ` , and ` JCacheManager ` classes to ensure proper resource management
do n ' t reduce log level when the command context be not a technical exception
modified the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
updated double value handling in EntityPropertiesPacket . java to use the base value instead of the max value to simplify the code and improve readability by
updated SonosAudioSink to use ThingHandlerHelper instead of ThingStatus to improve code readability and maintainability by encapsulating
updated await timeouts in ContextRegisterListenerTest , SpringMvcClientBeanPostProcessorTest , and SpringMvcClientBeanPostProcessorTest to allow more
updated logging level from info to debug in LightThingHandler . java to improve logging granularity for better debugging
cloudstack - 10297 : fix asyncjobmanagerimpl to use property instead of thread pool .
updated exception messages for clarity and consistency in Reporter . java and ReturnsSmartNulls . java to improve code readability and maintainability
changed the type of the ` generate ` method from ` dataFrame ` to ` DataFrame ` in ` DataGenerator . java ` to simplify the method
updated multiple package - info . java files for consistency to improve code readability and maintainability
updated condition in OrcPageSourceFactory to check for empty column names before processing to improve robustness by preventing potential null pointer exceptions
added a call to mixPlay method in the Engine class to enhance playback functionality for better user experience
refactor JComponent and SynthTextPaneUI to improve code organization to enhance maintainability and readability of the codebase
updated the calculation of ` firstConfirmedCenter ` and ` firstConfirmedCenter ` in ` FinderPatternFinder ` , ` QRCode
removed unnecessary conditional checks for leadingIncludePaths in PreprocessorDelegate . java to simplify the code and improve readability
refactor method name from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` in `
added new search criteria to the SelenideElementProxy . java file to enhance functionality by including additional search criteria
[ java ] use sample rate instead of format . samplerate instead of format . samplerate
add getFormula ( ) and setFormula ( ) method to name . java and add setFormula ( ) to XSSFName . java to enhance
updated the calculation of the target value from 60000 to 90000 in HighDimensionsTest . java to improve test accuracy by adjusting the scale factor
updated the condition in SimpleTypeGT . java and added a new test for pattern schema parsing in GMLParserTest . java to ensure that the
added a new test class ClassPathXmlJobRegistryContextTests to verify job location in ClassPathXmlJobRegistryContextTests to ensure that job names
changed the data type of ` mHistoricTimes ` from ` float [ ] ` to ` long [ ] ` in ` MotionPauseDetector ` to
camel - 12320 : camel - restlet - fix camel - 12320 - camel - 12320 - camel - basicshouldnotbevalid
[ hotfix ] [ log4j2 - logging ] remove showout option from logendpointbuilder
refactor ChromeTraceEvent to use a new method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by encaps
added a condition to check if the order status is not CANCELED and REJECTED before adding them to limitOrders to ensure that
added pixel offset validation and improved image layout handling in BufferedImage . java and LCMSImageLayout . java to enhance image layout handling and ensure correct image
refactor ` ruby _ timestamp ` methods to use ` JrubyTimestampExtLibrary . RubyTimestamp ` instead of ` TIMESTAMP ` to improve
added handling for resource aliases in ContextHandler and created a test for resource path existence in WebAppContextTest to ensure that resource paths do not contain
updated ScriptFunctionImpl to include a new name handle in ScriptFunctionImpl . java to improve clarity and consistency in naming conventions
updated the calculation of ` amt ` and ` scrollAmount ` in ` JEditTextArea . java ` to use ` scrollAmount ` instead of
updated import statements and added null check for callerLoopScope before setting guards and stage flags to improve code clarity and prevent potential NullPointerExceptions
updated import statements in SniperPrettyPrinterJavaxTest . java to use JUnit ' s JUnit ' s JUnit jupiter
added try - with - resources for URLOutputStream and updated assertions in GuiceFactoryTest and GuiceFactoryTest to ensure proper resource management and prevent
added @ Entity annotation to Mail . java to enable entity management in the Mail class
updated output messages in Main . java to include tablespace and indexes to enhance user experience by providing clearer instructions on tablespace configurations
added ` metaDataBuffer ( ) ` and ` valuesBuffer ( ) ` methods to ` CountersReader ` and ` CountersReader ` to provide
added a boolean flag ` hasReadNonEmptyFile ` to ` ScanBatch ` and a corresponding test in ` TestJsonReader ` to ensure that
added a null check for internalCustomName in ` StringSubject . java ` and updated assertions in ` StringTest . java ` and ` StringTest
added a regex pattern for LIB _ PATTERN in LibUtils . java and modified conditional checks in LibUtils . java to improve code readability
updated catch blocks from ClassNotFoundException to Exception in JrtJavaBasePackages and PackageHelper classes to improve error handling by catching a broader range of
hbase - 13232 make sure file system be in safemode before write to master
updated error message formatting in TranslatingJavacPhaseTracer . java to improve clarity of error messages for better debugging
no need to clone plugin in defaultplugincache
do n ' t fire presence status event when the contact be online .
[ java ] remove the use of the resource name and parameter in the restful servlet .
added a new file ` AccountInfoFetchIntegration . java ` to test the fetching of account information to ensure the correctness of account information retrieval
added mouse wheel functionality to VDUInput , vt320 , and TerminalView classes to enhance mouse event handling capabilities in the terminal view
updated library path handling in Natives . java to ensure correct library path is used based on input requirements
no effective change - remove @ deprecated annotation
added support for the pLAYER _ SKIN _ FLAGS in the GlowPlayer and MetadataIndex classes to enhance the player ' s capabilities for
updated LoadBalancerWithServiceTests to use SLF4J logging instead of RequestFieldMatcher in LoadBalancerWithServiceTests . java to improve logging clarity and
refactor ` createsimpleentryview ` method to use a new method ` getMember ` to improve code readability and maintainability
replaced ` System . getProperty ( " os . version " ) ` with ` AccessController . doPrivileged ( ) ` in ` JRSUIUtils .
added a new constant FREEMARKER _ CONFIGURATION _ FILE _ SUFFIX and modified the fileSuffix initialization in TemplateEngineFreemarker . java to
fix selectmessagequeuebyhash to use size of mqs instead of mqs . size ( )
replaced ` DockSplitPaneW ` with ` AnimationCallback ` in ` ToolbarPanel . java ` to improve code readability and maintainability by
refactor binding logic in StyledTextAreaVisual . java to use a conditional bind method to improve code readability and maintainability
added ` declaredPlatforms ` to ` PrebuiltAppleFrameworkDescription ` and ` CxxBuckConfig ` classes and updated related methods to
updated JpaCountQueryCreator and PartTreeJpaQueryExecution to use ParameterAccessor instead of SimpleParameterAccessor to align with the new package structure
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerExceptions when passwordAttribute is null
added a check for array type in DataUtilities . java and a corresponding test in DataUtilitiesTest . java to ensure proper handling of array types and
added a null check for the address in SslContextFactory . java to ensure the correct host name verification is used when the address is null
updated assertions in TestFSTableDescriptors . java to check if the cachehits is greater than the specified count to ensure that the cachehits
[ java ] remove the ` ` wddeletecookie ' ' method from ` ` exportedwebdriver ' ' function
added a boolean variable ` mHasEndedLauncherTransition ` and modified logic in ` AbsSwipeUpHandler ` and ` RecentsView ` to
updated HTML output format in HTMLListWriter . java and HTMLWriter . java to ensure proper encoding of HTML titles in the output
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH values from 200 to 150 in multiple operators to improve consistency and
replaced ` arrowButton ` with ` arrowButton ` in ` BasicComboBoxUI . java ` and added a new test class ` bug63375
updated TestRandomAccessBuffer . java file to improve performance and readability of the code
refactor UserInfoActivity class to improve code readability to enhance maintainability and facilitate future updates
added HomeContentProvider imports and updated notifications in multiple service classes to ensure proper handling of content URIs during notification
added a new boolean variable ` mStayPressed ` , ` mPressedOrFocusedBackground ` , and ` setStayPressed ` , and
updated ` getFallbackResponse ` method to accept a ` Throwable ` parameter and updated related methods to include ` error ` parameter to enhance error handling by
removed conditional check for compile _ only in DumpBytecode . java to simplify the condition for better readability
added null checks for tags in ChannelUri . java to prevent potential NullPointerExceptions when accessing tags
updated JAVA _ REGEX _ SPECIALS from " [ ] ( ) ` to " [ ] ( ) ` in RegexpUtil .
added a new key ` ACTION _ BAR _ TITLE ` to the ` FileActivity ` class and updated the ` FileDisplayActivity ` to
replaced ` getOnlyElement ( ) ` with ` Iterables . getLast ( convertedElements ) ` in ` PythonDslProjectBuildFileParser `
updated the time zone in the @ Schedule annotation from " * " to " 0 " in CleaningService . java to ensure proper handling of time
refactor TransactionalValidationListener to utilize Warehouse for partition retrieval to improve code clarity and maintainability by encapsulating table partition retrieval logic
refactor ReplicationHandler and SnapPuller classes to improve code readability and maintainability
updated the handling of generated keys in ShadowSQLiteDatabase . java and added a new test for auto - increment functionality in SQLiteDatabaseTest . java to
changed the return statement from ` get ( ) ` to ` get ( ) ` in ` SimpleReferenceCache . java ` to ensure the method returns
updated test assertions in multiple Java files to use " failed to inline : * failed " instead of " inline " to improve clarity and accuracy of test
camel - 15836 - camel - web - client - create thread pool to avoid timeouts .
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
refactor error handling in Dispatcher and DispatcherTest to use try - with - resources for better resource management to improve error handling and ensure proper closure of
camel - 15836 : camel - cxf - add support for cxf message format in camel - cxf
added a case for ' ~ ' in ClientUtils . java to support handling of special characters in client operations
camel - 14284 : camel - slack : add a default delay to SlackEndpoint to allow for customization of the delay .
do n ' t fire fire block harvesting when drop a block . close # 244
updated layout parameters in TranscodingTab . java and encodedAudioPassthrough in TranscodingTab . java to improve layout responsiveness and ensure consistent
added a new file ` bug8057791 . java ` that implements a UIManager class for rendering list components to address bug 8057791
updated flags _ field handling in LambdaToMethod and added a new LambdaInterfaceStaticField class to improve clarity and maintainability of the code
refactor RunnerBuilder to use ` websocketMethodsFactory . methods ( ) ` instead of ` SubscriptionManager ` to improve code readability and maintain
added a null check for the to parameter in ComposeActivity . java to prevent potential NullPointerException when accessing the value
modified ParquetFixedWidthDictionaryReaders to check if a dictionary is used and added a new test forBigIntWithDictionary to improve data handling
refactor conditional checks in PortraitPagedViewHandler . java for better readability and maintainability to improve code readability and maintainability by
added a new annotation ` Log . java ` and ` LogInterceptor . java ` and ` LogInterceptor . java ` across multiple classes to facilitate logging
updated debug message formatting in QueuedThreadPool . java to include trace array to improve clarity of thread state information for debugging purposes
updated ` CacheGenerator ` and ` CacheProvider ` classes to accept ` implementation ` instead of ` keyType ` and ` valueType ` to enhance
updated reference map initialization in FrameMap . java to include the total frame size to ensure the reference map reflects the correct total frame size
refactor TypesafeConfigurator class to improve code readability to enhance maintainability and facilitate future updates
camel - 15836 : camel - karaf - add unit test for camel - itest - karaf
changed the main method from ` String [ ] ` to ` bug1 ` and added a new ` bug2 ` method in ` RFE2
updated URL encoding in HttpClientIntroductionAdvice . java for consistency to improve code readability and maintainability
refactor CommandAlias to use a new class ` UnsupportedPlatformTool ` instead of ` unsupportedPlatformTool ` to improve code readability and maintainability
updated the loop count calculation in RecoveryStrategy . java to use a TimeUnit for better readability to improve code readability and maintainability by using a
added a ` size ( ) ` method to ` FlightConfiguration ` , ` FlightConfigurationImpl ` , and ` FlightConfigurationImpl ` classes to provide
[ drools - 241 ] fix test to work with non - java address manager .
removed unused imports and modified separator handling in VLCVideo . java to streamline code and improve readability by eliminating unnecessary dependencies
[ bitsquare ] remove bisq / bisq / bisq / bisq / issues from the web page
updated the AUTHORITY constant from " talon . provider " to " twitter . provider " in HomeContentProvider . java to align with the
refactor MavenCli and MBoot classes to use " / . m2 / repository " instead of " ~ / . m2 / repository "
added a call to glBindBuffer ( GL20 . GL _ ARRAY _ BUFFER ) in VertexBufferObjectWithVAO . java to
refactor ServerHttpSecurity class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers to HttpClientProperties and CasCoreHttpConfiguration to enable dynamic configuration of default headers in HTTP requests
added new exception class ` ThingsboardCredentialsViolationResponse ` , ` UserPasswordNotValidException ` , and ` UserPasswordNotValidException ` to
deleted the NoOpConfigPathGetter . java file to the functionality is no longer needed in the project
updated signingKey initialization to use Bytes . fromHexString instead of Codec . base16Decode to improve code readability and maintainability by utilizing
updated FloatUtil to use CSSName for handling float values and adjusted inline block positioning logic to improve code readability and ensure correct positioning of
added imports for PlanningEntity , PlanningFactCollection , and PlanningFactCollectionProperties , and PlanningFactCollectionProperty , and PlanningFactCollectionProperty to
refactor ` getDefaultHeaders ( ) ` method to use ` MultiMap ` instead of ` CaseInsensitiveHeaders ` to improve code readability and maintain
renamed ` enc ` to ` charset ` in ` ProxyServer ` and ` Realm ` classes to improve clarity and consistency in the codebase
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to provide a way to
refactor comparison logic in ExpandableUploadListAdapter and FileStorageUtils to improve code readability and maintainability
added debug logging for HTTP responses in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity and reduce clutter
updated import statements from ` NamedAuthenticationHandler ` to ` NamedAuthenticationHandler ` in ` LegacyAuthenticationHandlerAdapter . java ` to ensure compatibility with the
changed the visibility of the WingDings class from public to public to allow access to the WingDings class from other packages
added a check for the owner key in the filter and updated log statements in FilterManager . java to enhance security by ensuring only valid filter data is
add ` wrap ` method to ` BCPGInputStream ` , ` PGPPublicKeyRing ` , and ` BCPGInputStream ` , and
replace DataOutputStream with BufferedOutputStream in MinimalLockingWriteAheadLog . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testSelectAll ` to ` HiveBaseResultSet ` and modified column qualifier handling in ` HiveBaseResultSet ` to improve
refactor FocusTransitionTest . java for improved clarity to enhance code readability and maintainability
updated import statement for GWT in ShareControllerW . java to ensure compatibility with the latest GWT library structure
added null checks for ` sourceTask ` and ` counters ` in ` CounterStatsAggregator . java ` to ensure robustness by preventing potential NullPointerException
updated the variable name from ` readListener ` to ` readListener ` in ` HttpInput . java ` to improve code readability and maintain consistency
added a ` changeComponentColor ` method to ` AppearancePanel ` and refactored color conversion logic in ` AppearancePanel ` to improve
updated the parameter type from false to hidden in TaskHelper . java to ensure proper handling of hidden state in the TaskHelper class
fix failovertimeouttest . testfailovertimeouttest . testfailovertimeouttest . testfailovertimeouttest . testfailovertimeouttest
pdfbox - 4071 : do n ' t close the stream when create a new tiff file .
added import for DefaultParameterHandler in BoundSql , SqlSource , and LanguageDriver classes to enhance scripting functionality by utilizing default parameters
refactor spill state assignment logic in LinearScanWalker . java to improve clarity and maintainability of spill optimization logic
add micronaut ast builder for compilation of groovy script
modified the ` closeInternally ( ) ` method in ` PgResultSet ` , ` PgStatement ` , and ` PgStatement `
change serviceAdvisorType from null to PYTHON in ServiceInfo . java to ensure proper service advisor type is set
added thread - local variables for resolver and thread - local variables in GenericDatumReader . java to improve thread - safety and prevent potential memory leaks
updated ` Path ` and ` PdfContentStreamProcessor ` to use ` List < String > ` instead of ` Collection < ? extends Subpaths `
updated test assertions in SendCoinShieldTest to use a random byte array instead of a new byte array to improve code readability and maintainability by
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class and implemented a ` setPersonalisation ` method to
removed unnecessary conditional checks in CodeGenerator . java to simplify code logic for better readability and maintainability
updated scroll method parameters in multiple classes for consistency and clarity to improve code readability and maintainability
added a ` reset ( ) ` method to ` FlatRecordReader ` and ` reset ( ) ` methods in ` FlatRecordReader ` to allow
rename ContentDigestHistory to BdbContentDigestHistory for consistency to improve clarity and consistency in naming conventions
updated import statements and simplified casting logic in CastExpression . java to improve code readability and maintainability
refactor accepts handling in AbstractResource to use a boolean variable for better readability to improve code readability and maintainability by encapsulating
added a false parameter to the TaskView class to indicate that the task view is not ready for execution
added a method ` isAutoIncrement ( ) ` to ` CreateTableChange ` , ` LiquibaseDataType ` , and ` Liquibase
changed the errorText variable from ` errorText ` to ` errorText ` in ` ExceptionResponse . java ` to provide a clearer error message
updated import statements and modified import statements in LocalManagementTest . java and LocalManagementTest . java to enhance compatibility with newer JDK features
updated the addition of currentStatus and boosterStatus in BasicEventSimulationEngine . java to improve code readability and maintainability
added AJP connector and port handling in GitBlitServer . java to enable dynamic configuration of AJP ports in the application
added type comparison logic in TransTypes . java and created a new Intersection03 . java file with a test class Intersection03 . java to
rename EmbeddingTest class from EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
added a native method ` startToolkitThread ` to check if the toolkit thread is not already started to ensure that the toolkit thread is only started when
( chore ) camel - bundle : add compression pool to bundlestoredlocalizationsupport
do n ' t hide the surface if it ' s not a platform .
updated the temporary directory name from " RecordTransformationTest " to " getClass ( ) . getName ( ) " in AbstractRecordExtractorTest . java to
added new variable ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` and ` solidityNodeHttpEnable ` across multiple classes to
added service property to GoogleCloudFirestoreTicketDocument and updated service retrieval logic in GoogleCloudFirestoreTicketRegistry to enhance ticket management by including service
refactor Generate class to improve code organization to enhance maintainability and readability of the code
updated the ` @ ScalarFunction ` annotation to use ` @ ScalarFunction ` instead of ` @ ScalarFunction ` in ` JsonFunctionsTest ` to
added a boolean flag ` DOTS _ ONLY ` in ` BadgeRenderer ` , ` BadgeRenderer ` , and ` PopupContainer
removed the final modifier from the getConfiguration method in FreemarkerManager . java to simplify the method signature and improve readability
added a new test method ` testInvalidExcludedPackageNamePatterns ` to ` OgnlUtilTest . java ` to ensure that the system correctly handles
updated deviceUdid assignment logic in AppleTest and IdbRunTestsStep to handle devices with " iphone " platform to ensure compatibility with
updated DefaultHttpClientFilter to use ProduceProcessorManager and updated test assertions in TestDefaultHttpClientFilter . java and TestDefaultHttpClientFilter . java to
added null checks for ` mScript ` and ` mInvokeResetWAR ` in ` AllAppsView . java ` to ensure proper execution
added a shadow layer setting for text paint in Utilities . java to ensure text paint is only enabled when the shadow layer is not enabled
added a ` Teardown ` method to ` TestColumnAccess ` , ` TestReadEntityDirect ` , and ` TestReadEntityDirect `
added a call to parsers . get ( name ) in SecurityNamespaceHandler . java to retrieve the parser directly from the parser
updated conditional checks in BoundedLocalCache . java and added a new test for fast path handling in BoundedLocalCacheTest . java to improve
refactor ` RawConnection ` to extend WebSocketConnection ` and implement ` flush ` methods in ` RawConnection ` and ` RawConnection ` classes to
added multiple test methods for assertions in SoftAssertionsPerfTest . java to enhance test coverage for all assertions in the testing framework
added TEST _ FAILURES _ EXIT _ CODE constant and modified the assertExitCode method in PythonRunTestsStep . java and ProjectWorkspace .
added conditional checks for rendering items in GlyphLayout . java to ensure proper rendering of glyphs based on markup enabled
refactor test cases in TestBooleanRewrites . java to use a stream for score documents to improve code readability and maintainability by utilizing
updated enumClass retrieval from getEnclosingClass ( ) to getSuperclass ( ) in TypeHandlerRegistry . java to use getSuperclass ( ) instead of getEnclosing
removed unnecessary type checks and added flush method to PlayerSocketConnection and PlayerConnection classes to simplify code and improve readability by eliminating unnecessary type checks
added a ` mStarted ` variable and modified the ` removeOnDrawListener ` method in ` Launcher . java ` and ` LauncherAnim
refactor CheckIndex , FuzzyTermsReader , and FuzzyTermsEnum classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java for consistency and clarity to improve code readability and maintainability by using wildcard imports
changed the boolean value of MEDIAPARSERV2 from false to true in RendererConfiguration . java to ensure that the MEDIAPARSERV2 is
added a method to check if a method is acceptable based on the presence of AROUND _ TYPE in the annotation metadata to ensure proper handling of
added assertions to verify existence of partitions in FolderPermissionBase . java to ensure proper permission verification and error handling for partition creation
[ java ] publish status for provider with duetoregistrationstate ( ) .
updated the color calculation in PastelColor . java to use a new colorBase variable to improve code readability and maintainability by using a
refactor ScriptEngineFactory class to improve code readability to enhance maintainability and facilitate future feature additions
refactor image handling in HolographicViewHelper to utilize a new method ` createOriginalImage ` to improve code readability and maintainability by
updated HTTP request method handling in CloudClient . java to ensure proper handling of null methods to improve robustness by preventing potential NullPointerExceptions
added a new ` containingPhrase ` parameter to the ` getTag ` method and modified the ` getTag ` method to include a ` containingPhrase ` parameter
removed unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
added a conditional check for HivePassThroughOutputFormat in Class . java to ensure compatibility with Hive ' s pass - through output format
refactor ChunkListener , AfterChunk , BeforeChunk , and AfterChunk classes to improve code organization and maintainability
added a check to ensure the length is within valid bounds before proceeding to prevent potential errors when handling invalid input lengths
refactor graph handling to use HierarchicalUndirectedGraph instead of ConnectedComponent and EigenvectorCentrality to improve type safety
camel - 14284 - camel - translate2 - add verification error for service not support in the region
added a new file ` TestInterfaceWithStaticAndDefaultMethods . java ` that implements ` InterfaceWithStaticAndDefaultMethods ` and implemented a test
camel - 14297 : camel - defaultkeyselector : use camelcontext aware to resolve property placeholders
refactor exception handling in LogResolverBean . java to improve code readability and maintainability
refactor multiple Java files related to certificate management to improve code organization and maintainability
updated JGit version from " org . eclipse . jgit . http . server " to " org . eclipse . jgit . server . server
refactor clientKey retrieval logic in HttpClientIntroductionAdvice . java to improve code readability and maintainability by reducing redundancy
added TransformerParser and MethodInvokingTransformer to the IntegrationNamespaceHandler and its corresponding test classes to enhance the integration of transformer handling in the application
updated the ` BACK _ FACTOR ` constant and adjusted the duration calculation in ` ResumeObj . java ` to improve accuracy of playback duration
added a ` isScrollWheeling ` method to ` CodenameOneImplementation ` and modified the ` Button ` class to check if the scroll wheel
updated usage string formatting in UtilityCommands and DocumentationPrinter to improve readability and maintainability of the code
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in naming conventions
removed seq and unseq files from the ` setSeqFiles ` method in ` CrossSpaceCompactionResource ` and ` RewriteCrossSpaceCompactionSelector
removed the @ Override annotation from the Observation class to simplify the code and improve readability
refactor build logic in ProjectPropertiesModelImpl . java to improve readability and maintainability of the code
[ java ] make sure we do n ' t need to check for phantom ref .
refactor elasticmeterregistry to use a new ElasticNamingConvention class and add a new ElasticNamingConvention class to improve code readability and
updated IController and TinyGController classes to include IController and updated related methods to enhance functionality and maintain consistency in naming conventions
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to verify the rendering behavior of ` bigHorizontalRule `
replaced System . out . println with TTY . print statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to improve code
refactor multiple Java classes to improve code readability to enhance maintainability and facilitate future updates
corrected a typo in the conditional check for frameLength in LogInspector . java to improve code readability and maintainability
added a variable ` value ` and updated return statements in ` IntFloatMap ` , ` IntIntMap ` , and ` IntIntMap `
refactor icon setting logic in ImageDownloadService to use a thread - safe method to improve code readability and maintainability by encapsulating
added a null check for the registered variable in HandlerRegistration . java to avoid potential NullPointerExceptions when the demand is not initialized
removed the ` hasNextSibling ( ) ` method from multiple nodes in ` AttributeNode ` , ` ElementNode ` , and ` HtmlNode ` to
added null check for results in RedisDistributedMapCacheClientService . java to ensure robustness by preventing potential NullPointerExceptions
added logging statements for MobFileCache initialization and cache size in MobFileCache . java to improve traceability and debugging of mob file cache
refactor ColConvCCMTest class to improve test coverage to enhance reliability and maintainability of the code
replaced ` target ` with ` allowCovariantReturns ` and ` allowCovariantReturns ` in ` Check . java ` to improve clarity and maintain
pdfbox - 4071 : add parameter to PDFtextstripperbyarea , a suggest by valerybokov
replaced Float . toString ( ) with a new X class and added a new main method for JSON serialization to improve code readability and introduce a new
added a return statement to the GenericFileConsumer class to ensure the method exits early to avoid potential null pointer exceptions
added a Runnable to invoke allInvoked ( ) in bug6638195 . java to ensure that allInvoked ( ) is called on
updated the calculation of the maxTextMessageSize in CompressExtension . java to ensure the correct maximum message size is used for compression operations
updated steering value calculations in TestAttachDriver , TestPhysicsCar , and TestPhysicsCar classes to ensure consistent behavior of steering value calculations
replaced Arrays . equals with MessageDigest . isEqual in PasswordEncryptionService . java to improve code readability and maintainability
updated JdbcSerDe to use LocalDate and LocalDateTime for date and time conversions to ensure consistent handling of date and month values across different locales
updated byte version from 2 to 3 in ParseData . java and modified metadata handling in ParseData . java to ensure compatibility with newer versions of
added ` FlywayJpaDependencyConfiguration ` and ` LocalContainerEntityManagerFactoryBean ` configurations in ` FlywayAutoConfiguration ` to
added a sorted ( ) method to the ClassesImpl class to ensure that the classes are sorted by their respective classes
added a method to retrieve the current StableState in LauncherStateManager and implemented a waitForLauncherCondition method in AbstractLauncherUiTest to improve
refactor SharedInformer class to improve code organization to enhance maintainability and readability of the code
refactor method invocations in TestCloseScope0 . java for improved clarity and maintainability to enhance code readability and ensure compatibility with newer
updated the test timeout from 500 to 5000 in AdaptServerSocket . java to improve test reliability by allowing more time for socket operations
updated test cases in CaptchaChannelProcessorTests . java to improve test coverage for CaptchaChannelProcessor functionality
added a condition to update the own collection in MetadataImport . java to ensure proper handling of owned collections in the import process
added retry logic to limit the number of retry attempts in AbstractRegistry . java to ensure that the registry cache does not exceed the maximum allowed retry times
updated the initialization of TrackingDirectoryWrapper from mergeDirectory to directory to ensure the correct directory is used for tracking tracking
pmd : fix unusedimportsruletest for loop and generics
added validation for bucket partitioned Iceberg tables in HiveIcebergStorageHandler and corresponding tests in TestHiveIcebergTableUtil to
updated assertions in BootstrapTests from 3 to 2 and updated test assertions in IdentityZoneProvisioning to improve test accuracy and ensure legacy SAML keys are available
updated the condition to check for anonymous or non - static types in Excluder . java to improve clarity and accuracy in determining if a class is
changed the access modifier of the getAddressVector method from ` getToAddress ( ) ` to ` getAddressVector ( ) ` in ` MailerModel
removed unused comments from CommentsParser . java to clean up the code and improve readability
replaced ` writeLock ` with ` writeLock ` in ` IndexWriter ` and added a new ` LockReleaseFailedException ` class in ` NativeFSLockFactory
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test . jdbc . datasource `
refactor SpelExpressionTransformer and OperatorNode classes to improve code readability and maintainability to enhance readability and maintainability of the code
added TypeValidation import for ByteBuddy in MockBytecodeGenerator . java to ensure byteBuddy is created with a disabled type validation
refactor JavacRoundEnvironment to use TypeElement instead of DeclaredType for improved type safety to enhance code readability and maintainability by standardizing
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and MySQLTableLockWithEmployeesIn
added null checks for logFile and logFile properties in LoggingApplicationListener . java and added a new test for logFileProperties to ensure proper logging
added a method to check if a redirect status code exceeds the maximum limit of HTTP redirects to ensure proper handling of redirects and improve error handling
added constant names for SERVICE _ MAPPING and APP _ MAPPING in ServiceCombConstants and MicroserviceFactory to enhance code readability and maintainability
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the correct
updated DB _ PATH _ REGEX and DB _ PREFIX in BaseAndroidTestCase and GeocodeHelperTest classes to improve clarity and consistency in database
updated return statement to retrieve unread count from HomeDataSource to ensure accurate retrieval of unread count from the current account
modified the ` testVirtualThreadPool ` method to include ` testVirtualThreadPoolPreview ` and added a test for the ` VirtualThreadPoolPreview ` method to
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule , MarketPriceListCapsule , and Wallet .
updated user retrieval logic in HomePage . java to handle null user cases to improve robustness by preventing potential NullPointerExceptions
updated file handling to use file . getAbsoluteFile ( ) instead of file . getAbsoluteFile ( ) in LocalFileSystem and added a new test for matching relative wildcard
added width , height , and width calculations in ComponentBuilders . java to ensure that the instance does not exceed the specified width and height limits
updated the ` request ` method to use ` slf4j . logger ` and added a ` setConnectionManagerTimeout ` method to improve error handling
added ExceptionHandler import and error handling in PrintController . java to improve error reporting for document creation failures
replaced ` Optional . of ( ) ` with ` map ( f ) ` in ` CrateType ` and ` RustBinaryIntegrationTest ` to
added methods to check for numbers with separators in SpellChecker to ensure accurate spell checking for numbers with separators
updated the constant name from " HelloWorld . message " to " HelloWorld . message " in HelloWorld . java to improve code readability and
refactor FileDisplayActivity to utilize a new method for retrieving and displaying file actions to improve code readability and maintainability by encaps
added setDaemon ( false ) to ReplicationHandler and updated logReplicationTimeAndConfFiles calls in SnapPuller and SnapPuller classes to
updated the method call from ` e . update ( ) ` to ` e . update ( ) ` in ` StoreCachedTest . java ` to
refactor StreamerLoader to use a loop for removing materials and materials to improve code clarity and ensure proper handling of MaterialColumnParser instances
added " Core Library for Gamepad API " and " Core Library / Gamepad API " to the DependencyBank . java file to enhance clarity and
added functionality to manage appcycled views in AppsContainerRecyclerView and AppsGridAdapter to enhance the layout responsiveness by allowing dynamic view
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that the build process correctly
fix examplebaritonecontrol . getlocationsof ( ) not work when there be no location for mining .
added imports for ParsedNode , ParsedNodeException , ParsedNodeException , ResourceAccessor , ParsedNodeException , ParsedNodeException , and ResourceAccessor
added null handling logic in FilterOperatorUtils and created a new test for range filtering in NullHandlingEnabledQueriesTest to ensure proper handling of null values
added validation checks for bootstrap method argument types in JDynamicInvokeExpr . java to ensure correct argument types are used for bootstrap method invocations
update JmsHttpJmsTest from " jms : in " to " http : 9000 " in JmsHttpJmsTest . java
removed redundant calls to ` runtimeOptions . getFormatters ( ) . clear ( ) ` in ` CucumberInstrumentation . java ` to ensure
updated ` AbstractRegisteredService ` and ` PrincipalAttributeRegisteredService ` to use ` DefaultRegisteredServiceContact ` instead of ` RegisteredServiceContact `
updated workspace label adjusting logic in DeviceProfile . java to improve layout responsiveness by adjusting workspace labels based on cell size
updated assertions in ReplicationFactorTest . java to use assertf for consistency to improve readability and maintainability of assertion messages
update llvmcontext to handle pre - initialization during context pre - initialization .
removed the @ Ignore annotation from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeyNothingIsSafeLeaderTest . java to
replaced RuntimeException with JsonIOException in Gson . java to improve error handling by using JsonIOException instead of RuntimeException
replaced ` Integer . valueOf ( values [ 0 ] ) ` with ` Integer . parseInt ( values [ 1 ] ` in ` VisualScoreTagTest
updated error message formatting in Copy . java to improve readability and maintainability of error messages
refactor segment name validation logic in HLCSegmentName and LLCSegmentName classes to improve code readability and maintainability by encapsulating
added startActivity methods to ShadowFragment and corresponding test cases in FragmentTest to ensure proper handling of null fragment states and prevent IllegalStateExceptions
updated the return statement in DueDateBusinessCalendar . java to use the current time instead of the current time to ensure accurate date representation based on the
updated the return statement to include " x86 _ 64 - none - linux - android " and " x86 _ 64 - none - 
added a method ` deleteAllFiles ` to ` FileDataStorageManager ` and ` ManageAccountsActivity ` to delete all files based on
updated the command line option from " - ? % n " to " - h " in SchemaCrawlerCommandLine . java to improve clarity of command line
added a new method ` createSuiteDescription ` and updated ` Description ` to use ` fUniqueId ` instead of ` getDisplayName ( ) ` to improve
replaced ` Reader ` with ` decodeBarcode ` in ` SnapshotThread . java ` to simplify code and improve readability
replaced ` ImmutableList < String > sources ` with ` ImmutableList < String > ` in multiple classes to simplify the constructor and improve code clarity
added unit tests for the GWCZoomContextFinder to verify the functionality of the ZoomContextFinder to ensure correct behavior of the Zoom
added a new constant ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` to the ` JRubyScriptEngineConfiguration ` class
updated the condition in PromptFilter to use the servlet path instead of the request URI to ensure the correct servlet path is used for authorization
[ hotfix ] [ table - common ] do n ' t attempt to create new keyspace if it already exist
replace bgImage with cache and cacheImage in WelcomeWindow . java to improve image rendering efficiency and ensure proper rendering behavior
refactor tuner configuration handling in multiple files to improve clarity and maintainability to enhance code readability and maintainability by centralizing tuner configuration
added HasTests parameter to ` ShBinaryDescriptionArg ` and added a new test method in ` ShBinaryRuleIntegrationTest ` to enhance functionality by allowing
added a default value for " db : hsqldb " in TestFilter . java to enable compatibility with HSQLDB in the application
updated the return statement in JavabinLoader . java to improve code readability and maintainability
added a check for empty stack trace stack traces in TruffleStackTrace . java to ensure that the stack trace is only materialized when there are
refactor service loading logic in GraalServices . java for improved readability to enhance code maintainability and ensure proper provider export functionality
added a new test for duplicate command resolution in AggregateAnnotationCommandHandlerTest . java to ensure that the ` updateCommandWithAnnotatedMethod ` method behaves
[ flink - 20865 ] [ table - planner - blink ] add fine - grained . shuffle - mode . all
fix fishhook . getblockblock ( ) not work on vanilla .
camel - 15836 - camel - ftp - java : fix typo in camel - core - java
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions across the codebase
renamed ` useShortNames ` and ` compressPackageNames ` to ` compressPackageNames ` in the GangliaReporter class to enhance flexibility in handling
added a check for empty items before proceeding to avoid unnecessary processing when no items are available
added a conditional check for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration to ensure that REPORTER _ BEAN _ NAME
refactor XMLLayout to use StringBuilder instead of StringBuffer for string concatenation to improve performance and maintainability of the code
added a new method ` remove ` to ` NamedList ` , ` JSONResponseWriter ` , and ` JSONResponseWriter ` to allow users to
updated property retrieval from ` _ id ` to ` getPropertyNumber ( ) ` in ` EscherProperty ` and added a new test class for
updated method call from ` getBuildRuleType ` to ` getBuildRuleType ` to ensure consistency in method naming conventions
refactor scene removal logic in FastHierarchy and SootClass to improve clarity and maintainability of the code
added null checks for disputesPerTradeId and disputesPerDepositTxIdItems in TradeDataValidation . java to ensure robustness by preventing potential NullPointer
added ` getObjectHash ( ) ` and ` toString ( ) ` methods in ` AbstractNamedObject ` , ` DatabaseSchemaCrawler ` , and `
wallet : change transaction confidence to not _ in _ chain
refactor HttpClientIntroductionAdvice to improve handling of body arguments and header names to enhance code readability and maintainability by encapsulating
fix a bug where we do n ' t have a _ factories / constants / constants
hbase - 13232 improve error log when close region . close ( ) fail
updated null checks in Credential . java for better readability to improve code clarity and maintainability by reducing redundancy
[ java ] fix checkstyle issue in clientconductor
replaced the ` destroy ` method with ` destroyForcibly ( ) ` and modified the ` destroyForcibly ( ) ` method to improve
added support for Oracle database checks in TestDefaults . java to enhance compatibility with Oracle databases
camel - 14284 : camel - mail : improve error handling in camel - mail
added handling for EOF and EOF tokens in the Parser class to ensure that only valid tokens are processed to avoid parsing errors
added support for the " ka " language in the Translate2LanguageEnum class to enhance language support for various languages
add getdurationmodel ( ) and getdurationmodel ( ) to make it easy to get duration model .
added emailDomain and emailDomain fields to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable dynamic configuration of email domain in the identity provider definition
added default REQUEST _ READ _ TIMEOUT and REQUEST _ CONNECT _ TIMEOUT _ DEFAULT in Configuration . java and updated related properties in ViewRegistry
added a check to ensure that deferred concepts are only processed when there are no links to saveLater
added RedisCategory annotation to RedisServiceRegistryTests to enhance test categorization by ignoring RedisCategory usage
updated the ` FindDeprecatedUses ` method to accept a ` String typePattern ` parameter and modified the ` FindDeprecatedUses ` method to
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` and updated ` mImageHeight ` to
removed unused imports for TrustedDevicesMultifactorCoreProperties and CoreWsSecuritySecuritySecuritySecuritySecuritySecuritySecuritySecuritySecuritySecuritySecurityTokenService
updated ` ContractEventTriggerCapsule ` and ` LogEventTriggerCapsule ` classes to use ` getEventSignatureFull ` instead of `
updated the condition in FileTestHelper to check if the sessionId contains " _ " instead of " _ " to ensure that the file name does not contain
updated the ` clearRect ` method to use ` getBackground ( ) ` instead of ` clearRect ( ) ` in ` MapView . java `
refactor code for better readability and maintainability in PackageBuilder . java to improve code readability and maintainability
refactor GraphEditor , EdgeEditPart , and ComplexNodeEditPart classes to improve code readability and maintainability
updated assertions in TestFieldCacheSort . java to check if scoreDocs [ 0 ] . score is non - null before comparing scoreDocs to ensure
changed the initialization of oldKeys from ` Set . copyOf ( ) ` to ` Set . copyOf ( ) ` in ` DeviceState . java `
added handling for zero - time string values in ColumnSnapshotGenerator and MySQLIntegrationTest to ensure proper handling of null values in database operations
[ java ] rename ` offererMultiSigPubKey ` to ` takerBtcPubKey ` instead of ` offererMultiSigPubKey ` to
changed generic type parameters from ` vsContext ` to ` ? < ? , ? > ` in multiple collector classes to enhance type safety and prevent
( chore ) camel - k8s - k8s - k8s - k8s - k8s - k8
updated the initialization of msClient from conf to this in AbstractRecordWriter . java to ensure proper initialization of msClient with the current configuration
added a conditional check for modalness in TaskView . java to prevent unnecessary processing when modalness is equal
added a new test method ` codecCapabilities ` to ` ShadowMediaCodecListTest ` and implemented it in ` ShadowMediaCodecListTest ` to
fix # 5460 ( # 5460 ) ( # 5460 )
added validation for width and height in SunVolatileImage and XRPMBlitLoops to ensure that width and height are non - negative to prevent
updated the separator string from " . " to " \ u00a0 " in FormatData _ uk . java to ensure proper formatting of the
replaced the ` _ loops ` array with ` AtomicInteger ` in ` AsyncStressTest ` and ` StressTest ` classes to improve thread
updated AchievementsFragment and LeaderboardFragment to improve user experience by providing clear feedback when no beta images are available
added access , name , and desc attributes to Search class to ensure proper access and description retrieval for improved functionality
added sleep for SQLException and InterruptedException in IoTDBInsertWithoutTimeIT . java to improve stability by handling potential interrupted exceptions
refactor duration setting logic in DLNAResource . java to improve code readability and maintainability
[ hotfix ] [ table - common ] remove dependency on ` ` batch - config ' '
[ hotfix ] [ table - common ] cleanup txns in tablereader . readtransactionslow ( )
hbase - 13232 use ssl . keymanager . algorithm instead of keystoretype .
updated ` PrimitiveWrapperClassConstructorToValueOf ` to use ` Applicability ` instead of ` JavaIsoVisitor ` in ` PrimitiveWrapperClass
added a condition to exit the block when the key is pressed in Blockmania . java to ensure proper handling of key events based on key state
updated access specifiers from PACKAGE _ PRIVATE to NONE in multiple classes to ensure consistency in access specifier usage across the codebase
refactor ` unHandled ` method to use ` erasure ` instead of ` diags . fragment ` to improve code readability and maintainability
updated stripe statistics retrieval logic in OrcInputFormat . java to improve clarity and maintainability of stripe statistics retrieval logic
added a null check for ` ex ` in ` JCache . java ` to prevent potential NullPointerExceptions during execution
updated the URL format in MyhentaicomicsRipper . java to use https instead of http to ensure the correct URL is used for
added functionality to display the current version in the application to enhance user experience by providing clearer information about the current version in the application
updated the method call from PApplet . split ( appletList , string ) to PApplet . splitTokens ( appletList , string )
added keyboard support for rotation and default values in ConsoleActivity and TerminalView classes to enhance user experience by allowing customizable rotation settings
replaced HitQueue with ScoreDoc in ParallelMultiSearcher . java to improve type safety and suppress unchecked warnings during score document insertion
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 14263 : camel - managed - camel - jolokia - add support for headersmapfactory class name in camel -
updated formatting in JavaCompiler . java and Diagnostic . java files to improve code readability and maintainability
refactor jmsoutofboundsmessageconsumer to implement InitializingBean and introduce a new method for setting jmsQueue in JmsOutboundGateway to enhance
updated the expected condition in ArrayFunctions . java to include i2 instead of i + 1 to improve the accuracy of the expected condition
added null checks and improved script engine initialization in AbstractScriptProcessor and InvokeScriptedProcessor to enhance robustness by preventing potential NullPointerExceptions
updated the ` PooledConnectionImpl ` to include ` org . postgresql . PGStatement ` and ` org . postgresql . PGStatement ` to
[ hotfix ] [ test ] change flushmemtables and flushmemtablesandrefreshsizeestimates in cassandraiotest
updated logging level from error to warn in AtomicRemainder . java to improve logging clarity and reduce unnecessary error logging
removed sorting of minTimestamp in CompactionController and added a test for aggressiveFullyExpired in TTLExpiryTest to streamline
fixed - race condition in redissonpollingdeque and redissonqueue # toseconds ( )
updated printMap calls in JobInspectCommand . java for consistency to improve code readability and maintainability
refactor Engine class to improve code readability to enhance maintainability and facilitate future updates
replaced ` Stream . of ` with ` Map . getKey ( ) ` in ` ChildHolder . java ` to improve code readability and maintainability
[ issue # 121 ] ignore the aclclient rpc hook ( # 12345 )
updated the condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to improve clarity
updated error handling in NotebookServer . java to improve logging clarity and ensure proper handling of null interpreter groups
updated the ExpressionNode constructor from funN to lt in ExpressionNodeEvaluator . java to include a new ExpressionNode instance to enhance the expression ' s
changed access modifier of ` verifyIdsAreStable ` from public to public in ` NodeIdAccessor . java ` to restrict access to the method
cloudstack - 10265 : add volume id to create snapshot policy and attach volume to a VM before create snapshot
changed access modifiers of write and flush methods from public to public in ItemWriter . java to enhance encapsulation by restricting access to the
fix roombahandlertest to use testcase instead of test
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutor
replaced FSDirectory with RAMDirectory in TestNorms . java to improve performance by using RAMDirectory instead of FSDirectory
added a static variable ` mLineHeight ` and modified the calculation of ` mDrawTextRectBuffer . height ( ) ` to ensure line height
refactor WalletAppKit class to improve code readability to enhance maintainability and facilitate future updates
updated the ` getInitStream ` method to use ` getInitStream ( ) ` instead of ` getInitStream ( ) ` to simplify the
refactor menu item removal logic in ChatTransportSelectorBox to use JCheckBoxMenuItem instead of JCheckBoxMenuItem to improve code readability and maintainability by using
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` Context ` classes to
add a null check for bsq block explorer in PreferencesPayload . java to improve null safety and prevent potential NullPointerExceptions
added methods to retrieve and remove attributes in StandardSession and Session classes to enhance session management capabilities by allowing dynamic attribute retrieval and removal of attributes
added assertions for the ` getPlainBean ( ) ` method in ` TestDbJson _ List ` to ensure that the ` getPlainBean (
updated averages initialization from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to ensure accurate calculation of average values based on
refactor BatchCommandLineLauncher class to improve code organization to enhance maintainability and readability of the code
added dataSource and transactionManager methods to BatchMetricsApplication for HSQLDB and JdbcTransactionManager in BatchMetricsApplication . java to enable support for H
rename GlowrootLogHttpService class from UnauthenticatedHttpService to HttpService to improve clarity and consistency in naming conventions
added stroke Java composite and non - stroke Java composites to the drawImage method in PageDrawer . java to ensure consistent behavior across graphics implementations
modified the ` close ` method in ` DocumentsWriter ` , ` DocumentsWriterPerThread ` , and ` IndexWriterPerThread ` classes to ensure
added methods to retrieve and set multiple choice options and constraints in UiBinding . java to enhance flexibility in managing multiple choice options and constraints
replaced calls to ` builder . name ( ) ` with ` builder . toString ( ) ` across multiple Java files to simplify code and improve readability
added a conditional check for full saving and updated error logging in Save . java to ensure that the save tree is only updated for a full save
replaced ` condition ` with ` seenPatterns ` in ` Affix . java ` and updated related methods in ` Dictionary . java ` to enhance flexibility
updated the initialization of KrakenFees and KrakenFeesList in KrakenAdaptersTest . java to improve code readability and maintain
removed unused import of CharTermAttribute from DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class to improve code readability to enhance maintainability and facilitate future updates
added a check for PLAIN encoding in VectorizedPrimitiveColumnReader . java to ensure proper handling of unsupported encodings
refactor HttpSolrCall to use MarkerFactory for better logging to improve readability and maintainability of the code
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service proxy instances
fix infinite recursion in defaultentityqueryrepository . getlvlfilter ( )
updated error message formatting in HubChangeExecListener . java to improve clarity of error messages when the database changelog is not registered
[ zxing ] add barcode decodehinttype to make it easy to read
replaced ` executeCompilation ` method with ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompileStep . java ` and added a test
replaced the variable ` numEvents ` with ` query . setRange ` in ` ObjectStore . java ` to simplify the code and improve readability
refactor validation check logic in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability
do n ' t reset temporaryblock entities in entityawareworldprovider . toremove ( )
[ hotfix ] [ runtime ] remove unnecessary check for non - exact type .
updated logging level setting in TestCoyoteAdapter . java to ensure consistent logging behavior across the application
replaced the WantedAnywhereAfterFollowingInteraction class with an assertContains method in Reporter . java and removed the WantedAnywhereAfterFollow
added null checks for owner and key accounts in AccountPermissionUpdateActuator , PermissionAddKeyActuator , and PermissionAddKeyActu
replaced ` CommandComparator ` with ` TreeMap ` for command sorting in ` ScriptLauncher . java ` to improve performance and maintainability by using a more
chore ( v2bet ) : add v2bet ( v2bet , v2bet , v2bet )
refactor metadata properties in BaseSingleTreeBuilder . java to improve code readability and maintainability by reducing redundancy
updated AsmLoader instantiation to use interfaceClass . getClassLoader ( ) instead of interfaceClass . getClassLoader ( ) to ensure compatibility with interface - specific class
pdfbox - 4071 : do n ' t add null check for rlineto , rlineto , rlineto , and r
updated print statements in Java2TypeScriptTranslator . java to include definition scope for namespace export to ensure proper formatting based on the definition scope
updated HttpClientTest to use AbstractHandler instead of EmptyServerHandler in HttpClientTest . java to ensure proper handling of request data in the HTTP client
removed the new String [ ] array from the addListener method in HelloInput . java to simplify the listener configuration for better readability
added a null check for SqmPath in AbstractSqmPath . java to improve robustness by avoiding potential NullPointerExceptions
updated package name from ` com . owncloud . android . oc _ framework _ test _ project . test ` to ` com . owncloud .
refactor image processing logic in AwtCanvas . java for better readability and maintainability to improve code clarity and ensure proper resource management for BufferedImage
added native image location qualifier to the compilerconfigurationfactory and hotspotgraalfeature
[ hotfix ] [ test ] fix typo in pardotest
updated response handling in MockPhishingProtectionServiceV1Beta1Impl . java to use poll ( ) instead of remove ( ) to
added serialVersionUID to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for various classes
refactor CallStack class to improve code readability to enhance maintainability and facilitate future updates
add a warning if the max size configuration do n ' t allow any data in the map .
corrected " Move whitespace to " Move whitespace to " outermost LST " in multiple files to improve clarity of error messages for better debugging
refactor scoreable calculations in ThreadedAcousticScorer . java to improve clarity and consistency to enhance code readability and maintainability
removed the throw statement from NetHooks . java to simplify the code by returning null instead of throwing an exception
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLeniumTest .
added a new method ` makeString ` to ` ParallelIterable ` , ` RichIterable ` , and ` RichIterable ` , and ` RichIterable
replaced Ordered . HIGHEST _ PRECEDENCE with a static constant DEFAULT _ ORDER in OidcServicesManagerRegisteredServiceLocator to improve
added a ` Predicate < ProposedWeakAssociation > weakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` class to enhance flexibility in
refactor Deflater class to improve compression handling to enhance performance and reduce processing time
added error handling for IOException in Font . java to ensure proper resource management and prevent potential memory leaks
added a null check for ` content ` in ` VersionTypeBinding . java ` to handle cases where no content is provided
changed the return type of the ` places ` variable from ` result ` to ` return ` in ` NearbyListFragment . java ` to
convert text content type to lowercase in MailConverters . java to ensure consistent handling of text content types
[ bouncycastle ] make opensh key format public
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a bind parameter and modified the ` updateItemLocationsInDatabaseBatch ` method to
updated import statements and added caching mechanism in InheritanceCacheTest . java to improve code readability and maintainability
updated import statements from ` DefaultOAuth2RequestFactory ` to ` TofuUserApprovalHandler ` and added a new method ` getUserApprovalRequest `
use delegate . tagkey ( ) instead of delegate . tagkey ( key ) and name ( # 645 )
refactor code to use dump ( string , double ) instead of print ( string ) .
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 2 : http : /
added a static method ` classMetadataUnsupported ` to ` Platform ` , ` Subject ` , and ` Platform ` classes to improve encapsulation
added functionality to manage the visibility of the clear all button in the OverviewActionsView and RecentsView to enhance user experience by allowing users to
refactor ` ClusterStackVersionResourceProvider ` to use ` desiredRepoVersion ` instead of ` desiredRepoVersion ` to improve code clarity and ensure
remove memoryLeakTest . java to remove memory leak test
updated the return statement in ServletTester to use InetAddress instead of InetAddress to ensure the correct port is used based on the localhost environment
added a conditional check for MvDWPlaceholderAPI in ServerListener . java and updated comment in Settings . java to ensure MvDW
[ hotfix ] [ test ] add unit test for cluster size event
added SingletonHolder and FFIProvider instances in FFIProvider . java to ensure proper initialization of FFI providers based on the JNA configuration
[ tika - 2424 ] [ tika - 2424 ] add test for hierarchical hfilelist in batchprocesstest
added null checks for ` objectToSave ` and ` persistentEntity ` in ` MongoTemplate ` and corresponding tests in ` MongoTemplateTests ` to
updated Position initialization in NodeClass . java to use NODE _ LIST instead of NODE _ LIST to ensure correct positioning based on direct input count
added a ` accTradeValue ` field to the ` BithumbTicker ` class and updated related tests in ` BithumbTradeServiceRaw ` to
added segmentName parameter to log messages in RealtimeSegmentDataManager . java and SegmentDataManager . java to improve clarity of log messages for better
replaced the default maxParallelThreads with a static final constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java
replaced ArrayList with CopyOnWriteArrayList in FixedByteMVMutableForwardIndex . java and FixedByteSVMutableForwardIndex . java to ensure thread safety
updated multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
added a null check for destBuffer in FlipTransition . java to avoid potential NullPointerExceptions when destBuffer is null
camel - 14284 : camel - jbang - use a sleep for some unknown reason in camel - msvtest
updated condition in DelegationService . java to correct the condition in the condition to ensure proper validation of the current cycle before proceeding
updated RandomValueStringGenerator from 6 to 10 in JdbcExpiringCodeStore , JdbcExpiringCodeStore , and AutologinTests to
added a check for UniqueConstraint in StandardObjectChangeFilter . java to ensure proper handling of UniqueConstraint instances
refactor description handling in MediaDetailFragment . java to use HashSet for improved performance to enhance code readability and maintainability by encapsulating
added exception handling for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve robustness by logging recoverable exceptions in case of
added ` withReferenceFilter ` method to ` ListImagesCmd ` , ` ListImagesCmdImpl ` , and ` ListImagesCmdImpl ` to
camel - 14284 : camel - jms - add support for bridgeerrorhandler in camel - jms
added checks to check for " # ifndef " and " # endif " and " # ifndef " and " # endif
added a return statement to the DatabaseCommand class to ensure that the method returns false instead of false to avoid potential null pointer exceptions
updated Politician instances from " blair " to " Prime Minster of Umpa Lumpa Lumpa Lumpa
replace null and empty check with StringUtils . isNotBlank in BeanShellInterpreter . java to improve code readability and maintainability
updated port handling in RestletComponent . java to use the current port instead of a hardcoded value to ensure the correct port is used for
updated import statements in SchematicFormat . java for consistency and clarity to improve code readability and maintainability
added a configuration property for the Hive query max length in QTestUtil and updated overridden configurations in SessionState to ensure that the Hive query configuration
replaced ` userName ` with ` baseHttpConfig ` in ` WebServer ` and ` WebServer ` classes to improve encapsulation and ensure
updated processor names from " writeHdfs " to " kafkaSink " across multiple files to ensure consistency in naming conventions for better clarity and
added a condition to check if the spark app name is not equal to " spark . app . name " in HiveConf . java and modified the
refactor code to use ` includedName ` instead of ` whiteName ` for clarity to improve readability and maintainability of the code
add maximisewindow to the driver servlet so that the window can be maximize
updated the ` getEmbeddedCellsBuckOutBaseDir ` method to include ` getMainCellRoot ` and ` getMainCellBuckOut
added a check for " entity expansions " in TestXMLEntityExpansion . java to ensure that the error message contains " entity expansions "
updated the calculation of the table offset and length in TrueTypeFont . java to ensure correct positioning of the table ' s offset and length
removed the ` customize ( ) ` method from the ` DirectMethodHandle ` class to ensure that the ` form . customized ` is set to null
updated bounds checks in LineChartRenderer . java for better readability to improve code readability and maintainability by using more descriptive variable names
refactor flavor handling in AndroidBinaryDescription to use a loop for loops to improve code readability and maintainability by reducing duplication
updated buffer assignment from offset to i in LwjglGL11 . java to ensure the correct buffer is used for processing
added new classes Property . java and TestClassResolutionFail . java and TestClassResolutionFail . java to implement PropertySuper and TestClassResolutionFail . java to
[ hotfix ] [ runtime ] remove shutdown hook when shutdown be enabled
updated the type of ` url ` from ` String ` to ` FilterChjainProxy ` in ` FilterChainProxy ` and ` UrlUtils
replaced Collections with Arrays for sorting values in PercentileAggregationFunction . java to improve performance and readability of the code
added checks for loaded schemas in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure proper loading of tables when schema is loaded
updated the initialization of ` baseType ` in ` DatabaseInfoRetriever . java ` and added default values in ` MutableColumnDataType . java ` to
updated link tags in multiple Java files to use a more descriptive link to improve code readability and maintainability
refactor EvaluatorFactory to be final in EvaluatorFactory . java to improve code readability and ensure immutability of the instance variable
updated platform - specific configurations in BuildCommandIntegrationTest and ConfigSettingIntegrationTest to use ` nbuck / / : osx _ x86 _
added functionality to play and play sound effects in AllAppsView to enhance user experience by allowing playback of sound effects
updated the main method from Exception to IOException in RemoveFirstPage . java to improve error handling by using IOException instead of Exception
added Granularity feature in BarChartActivitySinus . java to enable granularity in chart rendering
refactor version comparison logic in GdxSetup . java to use a dedicated method to improve code readability and maintainability by encapsulating
added OS _ ALIAS _ SUPPORTED check and modified file existence checks in ContextHandlerGetResourceTest . java to ensure compatibility with different operating systems
added ` close ` method to ` Connection ` , ` JsonAsyncHttpPinotClientTransport ` , and ` JsonAsyncHttpPinotClientTransport
fix socketremotetest . awaitappender . awaitappender . awaitappender . awaitappender . awaitappender . awaitappender
[ beam - 4142 ] add check for directory in HadoopResourceId . java and remove @ Ignore annotation in HadoopResourceIdTest .
removed unused static imports from IsometricStaggeredTiledMapRenderer . java to clean up the code and improve readability
remove unneeded unbind handle in itemserviceimpl . unbindhandle ( )
refactor Config and Attribute classes for improved clarity to enhance code readability and maintainability
removed unnecessary conditional checks in OtherActivityTouchConsumer . java to simplify the code for better readability and maintainability
refactor navigation button color handling in NavbarButtonsViewController . java to improve code readability and maintainability
refactor error handling in PolyBenchLauncher . java to throw an exception instead of an error message to improve error handling by throwing an exception instead of
refactor ClassWriter to use byte types instead of bootstrapMethodIndex to improve code readability and maintainability
added BlockFormattingContext support to findBox and findElementBox methods in BasicPanel . java to enhance rendering flexibility by allowing different block formatting contexts
added a ` getStdErrorOutput ( ) ` method to ` WorkerProcess ` and modified ` WorkerShellStep ` to use ` ProcessExecutor `
added null checks and exception handling in CheckedListReplaceAll and CheckedListReplaceAll classes to improve robustness by preventing NullPointerExceptions
added a boolean flag ` _ testFill ` and ` _ writeCallback ` to ` SslConnectionTest . java ` and implemented a new test
updated DeviceFlag , DeviceFlag , FeatureFlags , and FeatureFlags classes to ensure listener registration is only registered when the device configuration changes
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable the test due to the latest changes in the GatewayRSocket
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve readability
added a script execution to the InstructorFeedbackEditPage . java file to enhance user experience by allowing direct access to the browser ' s focus
refactor synchronization logic in KrakenStreamingTradeService to improve code readability and maintainability
replaced System . err . err with System . out . println in ChangeableUrls . java to improve code readability and maintainability
added a ` randomAccessRows ` parameter to the ` SparseRowMatrix ` constructor and updated related constructors to include a ` boolean ` parameter to
cloudstack - 10286 : do n ' t persist usage event if there be no poolid
updated InputStream initialization and FileSystem initialization in Utilities . java to improve flexibility in handling different job configurations
updated the import statement from com . google . common . collect . ImmutableMap to org . apache . beam . vendor . Guava . v26 _
fix memorycallgraphbuilder . registermemorycctprovider ( ) and profilerclient . registermemorycctprovider ( ) in memorycallgraph
add a null check for the multi - user chat operation set in the conferencechatmanager .
added validation for file writing in Save . java to ensure that files cannot be written to avoid illegal action exceptions
added folder sync functionality to the DrawerActivity in DrawerActivity and created FolderSyncActivity to manage folder sync functionality to enhance user experience by providing
[ hotfix ] [ test ] fix race condition in sequentialchannelstatereaderimpltest
refactor SpanishTreeNormalizer to use StringUtils for numeric characters to improve readability and maintainability of the code
replaced ` reader . pointValue ( ) ` with ` getPackedValueSlice ( i ) ` in ` SimpleTextBKDWriter . java
added a new ` LocaleRandomizer ` class and a corresponding test for locale randomization in ` InternalRandomizerRegistry ` to facilitate random randomization of locale
added a new test method ` assertTypeByData ` to ` TestMimeTypes . java ` for testing font printer metric types to ensure correct type
updated Installer . java and AutoUpgrade . java to include additional version numbers to ensure compatibility with the latest features and fixes in the Installer
replaced direct calls to ` run0 ( ) ` with ` run0 ( ) ` in ` TCPTransport . java ` to improve code readability
updated the read method to include a default value of 0 in Http2AsyncParser . java to ensure proper timeout handling for blocking operations
updated the default value for the WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to improve
corrected a typo in the error message in SelectStatement . java to improve clarity of the error message for better debugging
added imports for DateTime and DateTimeFormatter in ThirdEyeJiraClient . java to enable date - time formatting for custom fields
refactor priority generation methods in HeadersGenerator and PriorityGenerator classes to improve code readability and maintainability by encapsulating priority generation logic
added a MAX _ SCALAR _ REPLACE _ CODE _ SIZE constant and modified the boolean condition in ClassTransformer . java to ensure that scalar
added a new date _ taken parameter to the projectionTest and folderSortOrder in MediaProvider . java to ensure the correct order of data retrieval
corrected the calculation of image coordinates in TexturePacker2 . java to ensure correct positioning of images in the rendering process
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to use ServletContextHandler instead of FilterHolder in JettyWebSocketServerContainer and Jet
added shutdown methods to validateSignService and NodePersistTaskTimer in Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper resource
added RawJsonRequestBodyAnnotationProcessor to JaxrsSwaggerGeneratorContext and Echo classes to enable handling of raw JSON parameters in jaxrs
added a new method ` newTarget ` to set the type and extension in ` LoggerUtils . java ` to enable the creation of a new target
replaced ` ArrayList < > ` with ` ArrayList < > ` in ` ListBeanContainer ` and added a new test class ` BeanContainerTests `
updated metric metric from " blockCountHitPercent " to " blockCacheCountHitPercent " in TestMetricsRegionServer . java to reflect the correct
camel - 15836 : camel - caching - do n ' t close the cache file when exchange be complete .
[ tetonika ] set deviceid in position . setdeviceid ( ) so that it do n ' t have to be set .
updated the method for reading the first line from ` Files . asCharSource ( ) ` to ` Files . asCharSource ( )
added a ` visitAssignop ` method to the ` Attr ` class and implemented a new test class ` FailOver15 ` for handling assignment operations
added a boolean variable ` enableAccountHandling ` and modified the ` mixinRegistry . onCreate ` method in ` BaseActivity . java ` to enable account
use heuristicallyfindmainconnectedcomponent in isochroneresource # findmainconnectedcomponent
added a ` path ` parameter to the ` DrillViewTable ` class and updated related methods in ` WorkspaceSchemaFactory ` and ` WorkspaceSchema
updated constructor parameters in PooledByteBufAllocatorL . java to include additional parameters and configurations to enhance functionality by allowing dynamic cache usage based on
updated array cloning logic from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray class in ObjectInputStream . java
added LLAP _ IO _ THREADPOOL _ SIZE configuration to LLAP _ IO _ THREADPOOL _ SIZE and modified executor initialization
added support for SSL debug and SSLLogger in SecurityServicesFeature . java to ensure compatibility with Java versions below 8 and above
added validation for latitude and longitude range in LatLonGrid and updated test cases in TestLatLonGrid . java and TestLatLonGrid . java to ensure
[ java ] add ` ` invisibilityOfElementWithText ` method to ` ExpectedConditions ` and add ` ` invisibilityOfElementWithText
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified the ` replaceFiles ` method to include ` isInsert
added a new test method ` GetOuterClass ` in ` ReflectorTest . java ` to verify the behavior of the ` SomeInnerClass `
updated configuration settings in ConfigIgnoredByDaemon and IjProjectBuckConfig to include " auto _ generate _ facet _ sources " in Ij
updated message formatting in HubChangeExecListener . java for consistency to improve readability and maintainability of error messages
added properties field and getter / setter methods to Link and its getter and setter in QuickLinksConfigurationModule to enable dynamic property resolution for quick links
added a toString ( ) method to InitialConfig , YamlConfigFileDTO , and YamlConfigFileDTO classes to improve code clarity and maintainability by encap
change the type of the ` startCall ` method from ` ReqT ` to ` RespT ` in ` AwaitableServerCall
added caller - sensitive adapter support to class loading to enhance flexibility in class loading by allowing caller - specific adapters
updated API token handling in RequestItemRepositoryIT . java to use ` isEmptyString ( ) ` instead of ` isEmptyOrNullString ( ) `
replaced ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management by using ` ThreadPoolExecutorEx `
changed the visibility of the ` setSecurityContextAccessor ` method from package - private to public to allow external access to the ` securityContextAccessor `
replaced ` HumanTimeConverter ` with ` Options ` in ` TimeStepdefs ` and updated imports in ` TimeStepdefs ` to
change spark _ isolated from spark _ isolated , spark _ isolated , spark _ isolated , spark _ isolated , and spark _ isolated
replaced ` ExchangeSpecification ` with ` URI ` in ` BitstampProxyFactory ` and ` RestInvocationHandler ` classes to simplify proxy creation by using
removed unnecessary print statements from RecordGenerator . java to streamline output for better readability and performance
camel - 14284 - camel - kafka : use autocommitinterval instead of autocommitenabled
replaced ` lockService . releaseLock ( ) ` with ` outputStatement ( sql ) ` in ` Liquibase . java ` to streamline
added @ SuppressWarnings ( " rawtypes " ) annotations to AbstractAuthorizeTag , AuthorizeTagCustomGrantedAuthorityTests , and AuthorizeTagCustom
refactor method names from ` closeFiles ` to ` pageStore ` in ` Database . java ` to improve code readability and maintainability
camel - 14284 : camel - spring - boot - auto - configuration - add support for non - mutable property .
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to ensure the correct ticker
camel - 14263 : camel - message - helper : use dump instead of dump to make it easy to read
updated the testId field from UUID to System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to ensure compatibility with
refactor date parsing logic in DefaultJobParametersConverter to ensure thread - safe access to prevent potential NullPointerExceptions during parsing
refactor package - info . java files for improved clarity to enhance code readability and maintainability
updated the heightmap . setHeightScale from 256 to heightScale in FractalHeightMapGrid . java to ensure consistent height scaling across the
updated the equality check in SecurityConfig . java and added a assertNotSame method in SecurityConfigTests . java to ensure proper equality comparison for security objects
changed the default value of dumpPartitionId from " dump - partition - id " to " dump - partition - id " in StdoutSink . java
added unit tests for UTXOOutputs and TronTXOutputs in UTXOSetTest . java to improve test coverage and ensure
[ java ] fix ` ` unusedvarname ' ' error in ` ` unusedvarname ' ' rule
pdfbox - 4071 : do n ' t throw npe if the array be null
updated parameter handling in JsrJobOperator . java and added a new test for job parameter overrides in JsrJobOperatorTests .
added a ` disallowBatchOnCascade ` property and a getter method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform ` class
refactor principal handling in JaasAuthenticationHandler to simplify principal creation logic to improve code readability and maintainability by reducing redundancy
replaced ` core . close ( ) ` with ` coreCloseExecutor ` in ` SolrCores . java ` to improve resource management and ensure proper
added a null check for mActionsView before setting visibility in RecentsView to prevent potential NullPointerExceptions when mActionsView is not initialized
modified the creation of JobParameters in RunIdIncrementer to handle null parameters more gracefully to improve robustness by avoiding potential NullPointerExceptions
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added tests for device matching and showing devices in SchemaRegionBasicTest . java to ensure correct functionality of device matching and matching operations in the SchemaRegion
add a tryinvoke method to the MetricsEventBus class to improve error handling and provide more informative logging during event execution
added a new ` EigenvectorCentralityBuilder ` class and created a new ` EigenvectorCentralityBuilder
refactor registry creation to use a specified port instead of a hardcoded value to improve code readability and maintainability by standardizing registry port
updated geometry data handling to use UnsignedBytes for ifcProductOid and ifcProduct in GeometryGenerator . java to ensure proper handling of if
fix blockentitybet . setamplifier ( 0 ) to 0 ( 0 )
refactor TubeCalc class to improve code readability to enhance maintainability and facilitate future updates
disable health check by default
updated the DefaultValidator to accept a List < Class < ? > > instead of a List < Class > to ensure that only non - null and
updated the @ key headful annotation from @ key headful to @ run main and added a timeout value of 500 bug8057791 to
allow speedment applications to exit via main method completion Fix # 322 to allow speedment applications to exit gracefully
updated the build string from " GRADLE " to " GRADLE " in ItemLexicon . java to ensure correct parsing of version
added a call to ` ReflectionCheckLinker . checkReflectionAccess ( type ) ` in ` JavaAdapterFactory . java ` to ensure proper access
[ hotfix ] [ test ] rename test to ` xtestjmsroutewithobjectmessage `
added a new ` recordReader ` parameter to ` CombineHiveRecordReader ` , ` RCFileRecordReader ` , and ` RC
removed the ClassLoaderHolder and LoaderManager classes to streamline the codebase by consolidating ClassLoaderHolder and LoaderManager to streamline the codebase
added configurationChanged method to FileStore and modified file handling in JavaLanguageServer and ScanClassPath classes to improve file management and ensure proper resource management
added error handling for session callback registration in PackageInstallerCompatVL . java to improve robustness by catching potential exceptions during callback registration
updated test files to use " index . cfs " and " 23 . nocfs " instead of " org / apache / lucene / index
added a new method ` createAndStart ` to ` AkkaRpcServiceUtils ` and modified the ` createAndStart ` method in ` AkkaRpc
added retry configuration for mapreduce map max attempts in TestExportSnapshot . java to improve performance by reducing the number of attempts during export operations
pdfbox - 4071 : remove null check for afmstandard14 and aftype1fontembedder
added a new test class ` SslConnectionTest ` to validate the behavior of ` SslConnection ` to ensure proper handling of SSL connection closure
added validation for IPv4 and IPv6 addresses in InetAddress and NetworkInterface classes to ensure valid address types and improve error handling for invalid address types
added a new test method ` testDateSerializationInCollection ` to ` DefaultTypeAdaptersTest . java ` to ensure proper handling of date serialization
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
added debug logging for SQL generation in PutDatabaseRecord . java to improve traceability of SQL generation process
corrected the calculation of the loop condition in TableOutput . java to improve performance by reducing the number of iterations in the loop
pdfbox - 4071 : fix npe in filter . getobject ( ) , a suggest by valerybokov
updated the priority of format string handling in FormatStringChecker . java to include a priority of HIGH _ PRIORITY in BugInstance . java to
[ java ] ignore non - final loop variables in a for - each statement in a for - each statement .
added PDF version and full compression settings in PDFExporter and updated test properties in test cases to ensure compatibility with the latest PDF version and disable background color
add unit tests for ` LdapUserDetailsMapper ` and ` LdapUserDetailsMapper ` to ensure correct mapping of role and non - retrieved role attributes
added ldap . read . timeout configuration to LdapConfiguration and updated environment variables in LdapContextFactory to enhance configurability for LDAP connection timeouts
refactor TestDescription and TestDescription classes to improve code organization and maintainability
refactor Pixmap , ManifoldPoint , and ManifoldPoint classes to improve code organization and maintainability
updated variable names from ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the state handler is INVALID in the gesture state check to ensure that the gesture state is only processed when the handler is
updated the WORKSPACE _ ROTATION constant and modified the initialization of mMaxDistanceForFolderCreation and mOldRotationYs to improve
updated OciConfigConfigSource to use ConfigProviderResolver instead of ConfigProvider in OciConfigConfigConfigSource . java to improve configuration handling and
refactor Testjsig class to improve code readability to enhance maintainability and facilitate future feature additions
refactor mana tablet and mana ring methods to use ` getCount ( ) ` instead of ` getMaxMana ( ) ` to improve
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
removed the serialVersionUID variable from P11TlsPrfGenerator . java to eliminate unnecessary serialization warnings
refactor tsFile validation logic in DataRegion . java to improve clarity and maintainability to enhance code readability and ensure accurate ts file
added new classes ` Switch21 ` , ` Switch19 ` , and ` Switch21 ` , and ` Switch19 ` , and ` Switch19
updated error message formatting from " reason " to " MyTest . MyTest . ComparableType " in ComparableSubjectTest . java to improve clarity and
updated StreamHelper to use ` @ Internal ` and added a new test class ` TestStreamHelper . java ` and created a new test class for
updated size checks in Int2ObjectCache . java and added equals method in Int2ObjectCache . java to improve data integrity checks and provide clear
replaced ` AnnotationAwareOrderComparator . INSTANCE ` with ` AnnotationAwareOrderComparator . INSTANCE ` in ` WebSecurityConfiguration . java ` and added a
removed TimeInForce . GTC from OrderType . MARKET in BinanceTradeService . java to simplify order type handling
replaced ` LongRangeRandomizer ` with ` AbstractRangeRandomizer ` and updated the ` FloatRangeRandomizer ` class to extend ` FloatRangeRandomizer ` to
updated the KEY _ SEP constant from ' 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure proper formatting
camel - 15836 : camel - core - add support for jms component in camel - core
added error handling for bound bound in SourceUtils and created a new TestGetBound class in SourceUtilsTest to improve robustness by catching potential
refactor FilterPredicateFactory to utilize a new method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability
modified artifact name extraction logic in BatchPropertyBeanPostProcessor , JobContextFactoryBeanTests , and StepContextFactoryBeanTests classes to ensure proper resource
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 148
updated the logic for retrieving libdefaults in Config . java and added a new DnsFallback . java file in DnsFallback . java to improve robustness
update defaulttheme to use LocatableFactory for exception message
updated the ` success ` and ` url ` parameter from ` success ` to ` url ` in ` DepositAddress . java ` to improve clarity and
replaced the return statement with a try - finally block in WindowsSecurity . java to ensure proper resource management and avoid potential memory leaks
updated scope parameters from " phone " to " email " in CommonOAuth2Provider . java and modified test assertions in CommonOAuth2ProviderTests .
added a new ` Start ` class and a ` await ` method in ` ManagedSelector . java ` to improve the handling of the selector ' s
added a new constant BIG _ DECIMAL _ 182 _ 04 for hue65535 and saturation65535 in WLed
replaced ` isValidCaller ` method with ` VALID _ CALLERS ` in ` VectorizationProvider . java ` to improve code clarity and
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to provide a way to handle JSRInst instances
updated SubscriptionActivatingSubscriber to include a transaction manager parameter in the SubscriptionActivatingSubscriber and SubscriptionActivatingSubscriber to enhance transaction handling
refactor SQL query handling in DBMSProcessor . java to improve readability and maintainability to enhance code readability and ensure proper handling of SQL
removed the elevation variable from ContactItemInflater . java to streamline the code by eliminating unnecessary elevation calculations
rename ` typeInformation ` to ` identifier ` in ` J . java ` to improve clarity and consistency in naming conventions
replace ` Files . readAllBytes ` with ` AccessController . doPrivileged ` in ` SandboxFileManager . java ` to enhance security by
refactor GroovyParserVisitor and GroovyPrinter classes to improve handling of binary types to enhance code readability and maintainability by using more descriptive
updated warning message to include the class name of the invalidation meta data to improve clarity of the warning message for better debugging
updated byte handling in RecordInputStream , UnicodeString , and added a new test for UmlatReadWrite method in UnicodeString to ensure correct handling of
added a new test method ` downloadsFileWithNorwayCharactersInName ` to ` FileDownloadViaProxyTest . java ` to ensure
added cancellation exception handling in AsyncResource , FingerprintScannerSample , and FingerprintScannerSample classes to improve error reporting and provide clearer feedback on
added a null check for statistics before processing the cache count to avoid potential NullPointerException when statistics is null
added a new test method ` removesObjectFromExplicitCollection ` to ` MongoTemplateTests ` and added a new test for removing objects from explicit collections
updated copyright year from 2015 to 2022 in multiple Java files to ensure compliance with copyright standards
updated string formatting in Coder . java to improve readability and maintain consistency in formatting
added a boolean flag ` mIsClearAllButtonFullyRevealed ` and modified scrolling logic in ` PagedView ` and ` Paged
updated HiveIcebergMetaHook and HiveIcebergSerDe to use a constant for COMMON _ HMS _ PROPERTIES
updated address handling in multiple Java files to utilize io . jooby . Server . isAddressInUse method to improve code clarity and maintainability
added a new argument for the " test . class . path " option in TestNestmateAttr . java to enhance the functionality by allowing the
updated logging level from VERBOSE to verbose schema in Grep . java to improve clarity and maintainability of the code
[ java ] fix checkstyle violation in java . util
no effective change - add ` isnestedusesavepoint ( ) ` method to scopetrans
replaced ` fetchSize ` with ` fetchSize ` in ` QueryProcessExecutor ` , ` MemIntQpExecutor ` , and ` MemInt
removed redundant BackoffIdleStrategy instantiation in EmbeddedPong . java to simplify the code and improve readability
refactor ` HttpClientIntroductionAdvice ` to use ` handleBlockingCall ` instead of ` exchange ` to improve code readability and maintainability
added configuration for HDP version in SliderAppsViewControllerImpl . java to enable dynamic configuration of the HDP version in the application
refactor JavacProcessingEnvironment to use a new class ` loaderClass ` , ` loaderClass ` , and ` loaderClass ` and ` loader
added DeepCloner for cloning parameters in ParameterizedRobolectricTestRunner and created a new DeepCloner class in RobolectricTestRunner to
added a bind method for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to ensure compatibility with JETTY _
added a check for ` JSType . OBJECT ` in ` NativeObject . java ` to ensure proper handling of ` JSType . OBJECT `
replaced instances of ` OopField ` with ` OopField ` in ` SystemDictionary . java ` to improve code readability and maintainability
updated JwkKeyListView and JsonWebKeyEndpoint to use PublicKey instead of RSAPublicKey in JwkKeyListView and JsonWebKeyEndpoint to improve
added a conditional check for SpawnIsolates and UseOnlyWritableBootImageHeap in NativeBootImage and NativeImageHeap classes to ensure that
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean functionality
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and improve readability
added ` getOwnerAddress ( ) ` method to ` Validator ( ) ` and updated related methods in ` CreateAccountActuator ` , ` Transfer
added a new file ` Main . java ` to create a new file ` Main . java ` to demonstrate the usage of the BrokerService class
updated byte array handling to include ` byteArrayMin ` and ` byteArrayMax ` values in ` BinaryClient . java ` and ` ZRANGEBYS
refactor ProtobufAnnotationSerializer to use a builder for node and source indexing to improve code readability and maintainability by encapsulating index
[ hotfix ] [ runtime ] remove duplicate correlationid from asynccommandidset
added saveConflict method in FileDataStorageManager , FileDownloader , and FileUploader classes in FileDataStorageManager , FileDownloader , and File
replaced ` Map ` with ` Map < Object , Object > ` in multiple classes to enhance type safety and prevent potential ClassCastExceptions
replaced StrUtils with NGramFilterFactory in multiple classes to improve code readability and maintain consistency in naming conventions
added support for " oracle " and " mysql " driver in DatabaseFactory . java to support additional database driver configurations for Oracle and MySQL
replaced the constructor of ` mockedMethods ` with ` mockedMethods ` in ` SignedSupportingClassProxyFactory ` and added a serialVersionUID
replaced ` Date ( ) . getTime ( ) ` with ` Date ( ) . getTime ( ) ` in ` FileChangedExclusiveReadLockStrategy . java
replaced ` EnvironmentInstance ` with ` wrapClassLoader ` in ` ExecutionContext ` and ` LocalExecutor ` classes to improve code readability and maintainability
added a Runnable to handle buffer changes in TerminalView and TerminalTextViewOverlay to ensure that buffer changes occur on the UI thread to improve user experience by
updated method signatures in ConfigDispatcher . java for clarity and consistency to improve code readability and maintainability
refactor freeze operation handling in OperationActions . java and OperationRegistry . java to improve code readability and maintainability
added support for SSL insecure configuration in TlsConfig . java and updatedTrustManagerFactory instantiation in TlsUtils . java to enhance security by allowing
refactor JavadocTool to simplify package search logic and add a new class T7091528 to improve code readability and maintainability by
refactor ExporterGDF to use EdgeColumnsGDF instead of nodeColumns and edgeIdColumn to improve code readability and maintainability by
updated the @ OneToOne annotation to use CascadeType . ALL in DefaultUserInfo . java to enhance the persistence capabilities of the DefaultUserInfo class
refactor ` hashCode ( ) ` method to use ` Arrays . equals ( ) ` instead of ` equals ( ) ` to improve code readability
fix asyncprovidersbasictest to work with java 8859 - 1
removed the ` isKeySerializerTypeVariableSized ( ) ` method from the ` RocksDBSerializedCompositeKeyBuilder ` class to streamline
added a method ` getStaticPermissionsField ` to ` ProtectionDomain ` and modified ` SubjectDomainCombiner ` to use ` SharedSecrets ` to
added null checks for recipes in multiple classes to prevent potential NullPointerExceptions and improve code robustness
refactor parse index reading logic in Parser . java to improve readability and maintainability of the code
added a new method ` showConnectionErrorPopup ( ) ` to ` UploadMediaDetailFragment ` and modified the ` UploadMediaDetailsContract ` to
added a new file ` Issue596 . java ` with a test class ` Issue596 . java ` for handling unsupported media types to ensure
updated bitwise operations in NodeBitMap . java to optimize bitwise operations for better performance
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the code
replaced UnexpectedLiquibaseException with a constant for TERM _ PROGRAM and MINTTY in ConsoleUIService . java to improve
refactor ` ShadowAccountManagerTest ` to use ` TestAccountManagerCallback ` instead of ` AccountManagerCallback ` to improve test readability and
replaced the use of ` enclosingType ` with ` wrapped . getEnclosingType ( ) ` in ` AnalysisType . java ` to simplify the code
rename method names from ` getProperty0 ` to ` concatSuffix ` across multiple classes to improve clarity and consistency in naming conventions
updated the value parameter from 0 to 0 in PutAllCallable . java to simplify the code and improve readability
[ issue # 116 ] fix nullpointerexception in consumerrunninginfo when consumer be empty or not
[ java ] add source identity generation to driverconductor .
added a new file ` TopTabAction . java ` that implements the ` TopTabAction ` class to provide a layout for displaying the lal
camel - 14284 : camel - dynamic - router : add support for reactive reactive message .
updated import statements and added @ Test annotations in AggregateItemReaderTests . java to improve code readability and maintainability
changed the type of the ` valueTypeCap ` parameter from ` Procedure ` to ` Procedure < T > ` in ` AbstractObjectValue
refactor WikidataEditsActivity and NetworkingModule to utilize a new method for managing wiki data edits to improve code organization and
added a validation check for the length of Short . MAX _ VALUE in OfflineSorter . java to ensure that the input length does not exceed the
added a variable ` absoluteValueAccumulator ` and modified conditional checks in ` DumbMethods . java ` and ` DumbMethods . java ` to
refactor multiple dataset classes for consistency to improve code maintainability and readability
updated exception message formatting in ProvisionClusterRequest and ProvisionClusterRequestTest to improve clarity of error messages for invalid credential types
updated random number generation in TestVectorUtil . java to ensure consistent random number generation for vectors
changed the return type of the compareBy method from int to long in DateUtil . java to simplify the comparison logic for better readability and performance
added a new method ` getSSL ( ) ` to ` TestUtil ` and modified SSL property retrieval in ` PGPropertyTest ` to improve SSL
added a safebrowsing feature to ChromeDriverFactory and corresponding test cases in FileDownloadToFolderTest to enable safebrowsing functionality for
added null checks before setting light configurations in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to disable transcoding in DLNAResource . java to ensure transcoding behavior is disabled when transcoding is disabled
updated data retrieval logic in DataTable and TableDiffer classes to handle empty rows more effectively to improve robustness by preventing potential null pointer exceptions
added a new constant ` CustomIgnoreTag ` to handle ` CustomIgnoreTag ` in ` RobustJavaMethodParser . java ` to ensure proper
camel - 14284 : camel - jdbc : improve handling of lockingexception in jdbcaggregationrepository
fix ( model ) : add parent configuration property to configinjectprocessor
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity for improved layout handling to enhance user interface responsiveness and ensure proper
deleted the ClusterNodeInfo . java file to the class is no longer needed for the project
updated return statement in ShieldedTransferActuator . java to ensure consistency in return value formatting
added debug statements for Standard and Legacy ciphersuite selection in ServerHandshaker . java to improve traceability of ciphersuite selection in the handshake process
updated ChooseRichDocumentsTemplateDialogFragment , ChooseTemplateDialogFragment , ChooseTemplateDialogFragment , ChooseTemplateDialogFragment , ChooseTemplateDialogFragment ,
added a variable ` nodeLabelMap ` and updated related logging in ` ImportContainerImpl ` and ` ImportContainerParameters ` classes to handle duplicate node
added a new file ` R2303044ListSelection . java ` that implements a ListSelection class to test the selection of a list item
[ java ] do n ' t check if the correlationid be already in use .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests . java ` to ensure correct behavior of compound
updated the calculation of the new row count in StatsRulesProcFactory to use a list of row counts to improve code readability and maintainability by
refactor path handling in SpringBootDocBuildTemplate to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy
refactored logger initialization in GuiActivator , NotificationServiceImpl , and SystrayActivator , and SystrayActivator , and SystrayActivator to improve
refactor DistBuildSlaveExecutor to use LocalCachingBuildEngineDelegate instead of DistBuildEngineDelegate to improve clarity and maintainability of the
updated exception message to include " \ r " and " \ t " characters to improve error handling by providing clearer context for JSON parsing failures
added a conditional check for debug logging in WidgetsModel . java to ensure logging only occurs when debugging is enabled
refactor Console and Scanner classes for improved readability to enhance maintainability and facilitate future updates
updated the calculation of numTerms from ` getBoost ( ) ` to ` getBoost ( ) ` in ` SimilarityBase . java ` to
added security checks for the " send " method in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to enhance test reliability by ensuring
added a new property ` exit ` and modified the ` quit ` method in ` Global . java ` and ` ScriptingFunctions . java ` to improve
updated the initialization of ` LoanBrokerGateway ` and ` LoanBrokerGateway ` in ` LoanBrokerSharkDetectorDemo ` and ` LoanBrokerGateway
refactor method names from ` getFirstUnverified ` to ` findLastUnverified ` across multiple files to improve clarity and consistency in naming conventions
vmware : use cookiejar instead of cookiestring for vwware web service request context
updated assertion statements in ResinAcegiAuthenticatorTests . java for consistency to improve readability and maintainability of the code
updated ByteUtil . bigIntegerToBytes method calls in ECKey . java to ensure proper handling of integer values during byte conversion
updated the property name from " fml . disabledMods " to " fml . modStates " in Loader . java to improve clarity and consistency in
refactored the account selection handling in ReceiveExternalFilesActivity to use a new method ` showAccountChooserDialog ` to improve code readability and
updated error message in CollectSink . java to include hostIp . toString ( ) to improve clarity of error reporting for connection failures
added error handling for unexpected empty results in ValidatorContractController to improve robustness by providing clearer feedback when unexpected results are encountered
replaced JsonReader with JsonValue for root in TexturePackerFileProcessor . java to improve code clarity and prevent potential NullPointerExceptions
added a null check for DataSource JNDI in PooledConnection . java to prevent potential NullPointerExceptions when accessing DataSource properties
updated TARGET _ MB and TARGET _ MB values in TestRefprocSanity . java and modified TARGET _ MB
added null checks for currentConsole before writing to avoid potential NullPointerExceptions when currentConsole is not initialized
added credentials refresh delay in KinesisConfigUtil to improve responsiveness by allowing more time for the kpc connection
replaced ` AlertDialog . Builder ` with ` showInfoAlert ` in ` SingleUploadFragment . java ` to improve code readability and maintainability by
updated loop conditions in T4501661 . java to include the pack parameter in the test method to enhance functionality by allowing package - specific functionality
updated version checks in ModulesTest . java and updated import statements in TestBadUseCases . java to ensure compatibility with the latest Jetty
remove unused import and add a check for dependency dependencies to simplify import statements and improve code clarity
updated ZipFile . java to use HashSet for stream management to ensure proper resource management and prevent potential memory leaks
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " across multiple files to improve code readability and
added methods to run active and idle events in SequenceGeneratorSource . java to ensure proper handling of thread interruptions during execution
rename ` getCurrentyActiveConnections ( ) ` to ` getCurrentActiveConnections ( ) ` in ` BlobServer ` and ` BlobServerGetTest `
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate ` , ` SyntheticAnnotated ` , and ` Synthetic
added support for " ppc64le " architecture in Bits . java and ByteArrayAccess . java to ensure compatibility with additional architectures
updated the exception message in RoboMonitoringInstrumentation . java to provide clearer context for the error message to improve user understanding of activity resolution issues
replaced COMMIT _ TIMEOUT _ MINUTES with Long . MAX _ VALUE in waitWithDeadline method calls to improve flexibility and maintainability of
replaced ` new Date ( ) ` with ` Instant ` in ` DateUtilTest . java ` and ` OffsetDateTime . of ( ) ` to
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a Toast message to inform users that YouTube Player does not work on Lollipop yet to improve user feedback when YouTube Player does not work
added validation for unterminated dollar quote and string literals in the parser to improve error handling for invalid dollar quotes in SQL statements
added a null check for mVibrationDuration and mVibrator in AnySoftKeyboard . java to ensure that mVibrator is
updated border and arrow handling in DotRenderer . java to improve the visual appearance of columns based on foreign key column types to enhance the visual appearance of
added a new method ` ENCODED _ CONF ` to the ` HiveConf ` class and modified output formatting in ` SetProcessor ` to
pdfbox - 4071 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class implementation to improve code readability and maintainability
fix # 3903 ( # 3903 ) ( # 3903 )
replaced BitmapLruCache with BLUR and CIRCLE and added loadImage method in NetworkedCacheableImageView and MainActivity to
removed ` View ` parameter from ` CellLayout ` , ` LauncherAnimUtils . ofFloat ` , and ` LauncherAnimUtils . of
updated GdxControllersVersion handling in BuildScriptHelper and DependencyBank classes to use a static String for controllers version to improve code maintainability and
refactored the LaunchedURLClassLoader class to improve code readability to enhance maintainability and facilitate future updates
refactor DataSourceHealthIndicator to use DataAccessUtils for querying rows to improve code readability and maintainability by centralizing result mapping logic
added no - cache header to adminonlyfilter and layouttag
updated error message formatting in ZkController . java to use Locale . ENGLISH to ensure consistent message formatting across different locales
updated the constructor of SolrQueryParser to accept a Analyzer parameter to enhance flexibility in query analysis by allowing different analyzers
update copyright year in Settings , AutoLevelerTopComponent , and FileBrowserToolbar classes to ensure compliance with licensing requirements for Universal Gcode Sender
removed unnecessary semicolons in MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code readability to enhance maintainability and facilitate future updates
added handling for VoidColumnVector in VectorizedBatchUtil . java to ensure proper handling of VoidColumnVector instances
updated method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct request name is
removed the isTypeMatch method from the compositeConfiguration . addConfiguration method to simplify the code and improve readability
added a new method ` offer ` to the ` SessionDecorator ` class and modified the ` offer ` method in ` SessionDecorator . java ` to
updated method names from ` trustAll ` to ` trustAll ` in ` XForwardedRemoteAddressResolver ` and ` XForwardedRemoteAddress
added a new annotation interface ` NoBootstrap ` and modified ` BootstrapInserter ` to check for non - bootstrap annotations to ensure that only bootstrap annotations
hbase - 16297 tabledescriptorchecker should use long . parseLong ( ) instead of hardcoded max file size
updated the calculation of ` requestedCommits ` in ` BranchGraphServlet . java ` to use ` Math . min ` instead of ` maxCommit
added InvocationTargetException support to main method calls in bug6794831 . java to ensure proper invocation of the main method in the application
added a new constant ` BUILD _ ID ` and updated related metadata handling in ` CachingBuildEngine ` and ` CachingBuildEngine `
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed the call to ` markAsDone ( future , channel ) ` in ` HttpProtocol . java ` to streamline the code by eliminating unnecessary
added TezConfiguration import and copyInto method in TezConfigurationFactory . java to enable dynamic configuration of Tez configurations
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerExceptions when keyPurposes is null
removed conditional check for mIsVisible in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added null check for recentSounds in OpenALAudio . java and implemented forget method in OpenALSound . java to prevent potential NullPointerExceptions
added a check for newlyRenderedFirstFrame in SimpleBasePlayer and implemented a new listener call in SimpleBasePlayerTest to ensure proper state management and
added new number tick units in NumberAxis . java to enhance the formatting of number tick units for better readability
refactor ` TargetGraphAndBuildTargets ` to ` TargetGraphAndBuildTargets ` in multiple classes to improve code readability and maintainability by
replaced IndexFileNameFilter . INSTANCE with IndexFileNameFilter . SEGMENTS _ GEN in IndexFileDeleter and IndexWriter . java to simplify
add full bounding box and texture stitcher to prevent collision .
added a compression level parameter to ApkBuilderStep and updated constructor parameters in SignedJarBuilder and SignedJarBuilder classes to enhance flexibility in handling compression
added a new test method ` shouldIncludeStaticFields ` to verify the inclusion of static fields in ` MirrorTest . java ` to ensure that static
added support for the ` UNDEFINED _ METRIC _ SIZE ` field in multiple classes to allow access to ` UNDEFINED _ FIELD _ SIZE `
refactor ` AssertJMultipleFailuresError ` and ` SoftAssertionsError ` classes to use ` EOL ` instead of ` startsWith `
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( ) ` in ` Trade . java ` and ` KucoinDeal
updated SpringDataJPAJoinFetchPaginationTest and SpringDataJPAJoinFetchPaginationConfiguration to utilize a CacheManager to improve cache management and
make pronunciation . pronunciation . featuredefinition and pronunciation . targetfeaturelister . pronunciation .
added a check for empty post body in FormBody . Builder in SimpleHttp . java and updated test cases in TestHttpPlugin . java to ensure
added a dispatcher for the OkHttpClient in ClientSideSlb . java and a test in ClientSideSlbTest . java to ensure proper shutdown
added conditional logic to set the v2 based on the flipy state of the texture to ensure proper rendering behavior based on the flipy state
do n ' t throw invalidconfigurationexception if no property be find
add null check for contextPath in MetricsPublisher . java to avoid potential NullPointerException when contextPath is null
[ drools - 4071 ] fix npe in classloader . reinittype ( )
added a check for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap and deserialized it in SerializationHeader to ensure proper handling of
added a method to check if ` precompiled _ header ` is available in ` AppleDescriptions ` and ` AbstractCxxSourceRuleFactory `
replaced WeakReference with AccWeakReference for image updates in ImageWatched . java to improve security by ensuring proper access control for image updates
added a private method ` findNextIndex ( ) ` to ` ObjectMap ` , ` OrderedSet ` , and modified the ` findNext
changed the default state of the isDirect variable from false to false in VertexBufferObject . java to ensure proper initialization of the isDirect variable
use audioeffecthelptextsmap instead of audioeffecthelptextsmap . get ( effectname )
added return statement to localToAscendantCoordinates and localToDescendantCoordinates methods in Actor . java and Group . java to provide access to
pdfbox - 5764 : fix a bug in RandomAccessReadBuffer . java and add a new test for RandomAccessReadBufferTest . java
added a null check before removing the context before removing it to avoid potential NullPointerExceptions when the context is not initialized
updated border spacing and border spacing logic in CellLayout and DeviceProfile classes to improve layout consistency and ensure correct border spacing based on container type
refactor ValueConfig to use a new ValueNumeric class for handling numeric values to improve code readability and maintainability by encapsulating the
added a check for deferred authentication in FormAuthenticator . java to ensure that only non - deferred authentications are processed in the login or error page
updated parameter names from " -- module - startd - ini " to " -- add - to - start " in StartArgs . java to
added a new variable HIVE _ DEFAULT _ PARTITION _ VALUE to DynamicPartitionFileRecordWriterContainer to handle null partition values to improve flexibility in
[ hotfix ] [ stream ] fix nullpointerexception in streamgraph and streamnode
updated string concatenation for classifier and group IDs in DefaultArtifact . java to improve code readability and maintainability
camel - 15836 : fix kafka consumer to use offsetstaterepository . getstate ( ) instead of topicname
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve user feedback when no class definitions are available
updated the plugin name from " GMAIL _ NOTIFICATIONS _ ENABLED " to " ENABLE _ GMAIL _ NOTIFICATIONS " to
refactor CryptoKey , CryptoKeyOrBuilder , and CryptoKeyOrBuilder classes to improve code organization and maintainability
updated the expected message count calculation in LumberjackMultiThreadTest . java to improve test reliability by adjusting the message count based on available processors
added checks for dead players in GlowPlayer and PlayerUpdateHandler to ensure players are only moved when the player is still alive
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
updated API _ KEY parameter from API _ KEY to API _ KEY and SECRET _ KEY in UpdateUserCmd . java to improve clarity and consistency
added conditional checks for GOOGLE _ AUTHENTICATOR and GOOGLE _ AUTHENTICATOR in MfaProvider and 
refactor AbstractMetaDataExportMojo class to improve code readability to enhance maintainability and facilitate future updates
added SQLIntegrityConstraintViolationException handling in Hive . java to improve error reporting for table deletion failures
updated the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to improve code readability and maintainability
added a new file ` RoboExecutorService . java ` that includes a new class ` RoboExecutorService ` to indicate that the class is outdated and
updated condition in GroupTreeView to check if the group is root before adding items to the menu to ensure that only root groups are added to the menu
updated method names from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` in ` BraveClientExecutionInterceptor . java ` to
updated test assertions in TestDynamicNumberOfGCThreads . java to include additional arguments for GC thread configuration to ensure correct execution of GC threads during testing
updated ` getHostFlavorMap ` and ` getAllPossibleHostFlavors ` methods to use ` Flavor ` instead of ` ImmutableFlavor ` to improve
updated SQL syntax in CreateTable and CreateTableDeParser to use ` PlainSelect . getStringList ( ) ` instead of ` Unlogged ` to
replaced ColorDrawable with ColorDrawable in ChatViewerFragment . java to improve code readability and maintain consistent color settings
updated import statements in CtIteratorTest . java to use JUnit 5 ' s JUnit 5 API to align with the latest testing framework
added a call to ` token . clear ( ) ` in ` CharTokenizer ` , ` KeywordTokenizer ` , and ` TokenStream ` classes to
add a new test class ` ASTInitializerTest ` to test the behavior of the ` ASTInitializer ` method in ` PMD ` to ensure that
updated StateMachineConfiguration and StateMachineFactoryConfiguration classes to use StateMachineConfigurerAdapter instead of Enum to improve type safety and provide clearer error messages
[ java ] remove check for ` ` link = ' ' in ` ` link = ' ' in ` ` link = ' '
updated number formatting logic in StringConverter and added a new test for Float conversion in StringConverterTest to improve precision of decimal values and ensure correct formatting
refactored aggregatelifecycle to use getcurrentscope ( ) instead of getcurrentscope ( ) .
updated touchable insets in TaskbarDragLayerController to use TOUCHABLE _ INSETS _ REGION instead of TOUCHABLE
removed redundant code block parsing logic in FencedCodeBlockParser . java to improve code readability and maintainability
added socket timeout configuration and improved socket timeout handling in ConnectionFactoryImpl and ConnectionFactoryImpl classes to enhance socket management capabilities by allowing customizable timeout values
added a sleep mechanism to handle interrupted exceptions in ElementAttributeTest . java to ensure proper handling of InterruptedExceptions during testing
updated the try - with - resources method to include UTF - 8 character encoding to ensure proper handling of character encoding in the input stream
refactor List class to improve code readability to enhance maintainability and facilitate future updates
added constructors for AsyncFileImpl and created a new test class ` AsyncFileImplTest ` to improve code clarity and ensure proper error handling during
added API annotations to CucumberEngineExecutionContext and modified class visibility in CucumberTestEngine to ensure that the execution context is not modified
cloudstack - 4071 : fix npe in NuageVspManagerImpl when there be no nuage device
updated the ` retryUploads ` method to use ` retryFailedUploads ` instead of ` retryUploads ` to improve clarity and consistency in
removed the Java version from the ` getJavaVersion ( ) ` method in ` ConstantPoolTagTests . java ` to simplify the code by eliminating unnecessary
refactor compile method to include conditional checks for " - unsafe operations " and " - Xlint : " to improve code readability and maintainability
added a method ` removeAllHeaders ( ) ` to the ` AsyncHttpClient ` class to clear the client header map to ensure that the client headers are
replaced ` Vector ` with ` List < String > ` in ` Main . java ` to improve type safety and maintainability of the code
updated the DEFAULT _ GRID _ COLUMN from 4 . 0 f to 3f in AppPreferencesImpl . java to reflect the current state of
added a condition to check if the view creation is not enabled in CalcitePlanner . java to ensure that views are only created when necessary
refactor date pattern matching in TestHS2HttpServer . java to improve readability and maintainability of the code
fix npe in graphprinter . asobject ( )
updated driver initialization from IE to FIREFOX in SingleTestSuite . java to improve compatibility with FIREFOX and enhance test coverage
updated byteOffset calculation to use Math . addExact for byteOffset in ByteBlockPool . java and added a new test for TooManyAllocs
replaced static variables with Locale . ENGLISH in InteractionValueEncoder . java to ensure consistent formatting across different locales
added exception handling for stopped latch in TcpTransport . java to improve error handling and provide clearer feedback on unexpected exceptions
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress warnings related to serialization
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` and ` OcamlDebugLauncher
improve user experience by show a warning when a database be save
updated OAuth20DeviceCodeResponseTypeRequestValidator and NexmoSmsSender to use RegisteredServiceAccessStrategyUtils for response type validation to ensure
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure the correct index is used for processing
added inputFormatClass parameter to the ` initTableMapperJob ` method in ` TableMapReduceUtil ` to enhance flexibility in handling different input formats
removed redundant calls to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to streamline code and improve readability
fix ( llvm ) : enforce access to internal language in eval .
added a deprecated version check for RESERVE in ReplicationHandler . java and updated log messages in ReplicationHandler . java to indicate that the RESERVE is
rename variable names from cacheVariableName to cacheForeignKey in DIHCacheSupport and AbstractDataImportHandlerTestCase to improve clarity and consistency in variable naming
change the type of the generateECKeyPair method from long [ ] to byte [ ] in ECKeyPairGenerator . java to improve type safety and prevent potential
[ hotfix ] [ runtime ] add suspend method to statewithexecutiongraph . suspend ( )
replaced instances of ` INSTANCE ` with ` new ` RotationTouchHelper ` in ` RecentsAnimationDeviceState ` and ` RotationTouchHelper
refactor ` UniFiControllerCache ` to use ` flatMap ` instead of ` filter ` to improve code readability and reduce boilerplate
replace int lwp _ id with unique _ thread _ id in BsdDebugger and BsdThread classes to improve clarity and consistency in
refactor offer removal logic in OfferBook . java to improve clarity and consistency to enhance code readability and maintainability by using a more descript
replace tls . istsv13 and tls . istsv13 ( ) with Constants . SSL _ PROTO _ TLSv1 _
updated MockitoMethodInvocationControl and SystemClassUserTests to use ` doReturn ` for handling ` System . class ` instead of ` PowerMockito .
replaced instances of ` NotLoadedException ( ) ` with ` PartialDatabaseObject ( this ) ` across multiple classes to improve exception handling by using
replaced ` DisplayUtils ` with ` OCFile ` in ` FileDisplayActivity . java ` to improve code clarity and ensure proper handling of file
added exception handling for compaction files in StoreDirect and StoreWAL classes to ensure proper resource management and prevent potential memory leaks
added screenshot task handling in AbsSwipeUpHandler and SystemUiProxy classes to improve task management and ensure proper execution of screenshot tasks
added a ` hidden ` flag to ` LiquibaseCommandLine ` and ` CommandArgumentDefinition ` classes to track the visibility of the command argument
[ hotfix ] [ test ] [ kafka ] change local address to 8092
[ geos - 6492 ] use stylegroup . getsld ( ) instead of catalog . getsld ( ) instead of catalog
added permission checks for malicious intents in InstallShortcutReceiver , Launcher , and Launcher classes to prevent malicious intent creation to enhance security by preventing
added ` getId ( ) ` method to ` TideMapLoader ` , ` TiledMapTile ` , and ` TiledMapTile `
refactor Manager class to improve code organization to enhance maintainability and readability of the code
updated JDBCExample . java and SessionExample . java to include version = V _ 0 _ 13 in connection configuration to ensure compatibility with the latest version
added schemas and includeSchemas properties to the LiquibaseGenerateChangeLogMojo class and updated the diffOutputControl initialization to include schemas
replaced the putIfAbsent method with a putIfAbsent method in JmxRegistry . java to improve code readability and maintainability
[ hotfix ] [ benchmark ] add log for single benchmark runner exception
removed the final modifier from the doPutRecord method in AbstractCacheRecordStore . java to simplify the method signature and improve code readability
updated path formatting in Tools . java and FileSelectorFragment . java to ensure consistent path formatting across different operating systems
added tests for HTTP response content in FastCGIProxyServletTest to enhance test coverage for response content handling in the FastCGI proxy servlet
added a new service start for ReadInteractionsService in MarkReadService . java to enhance the functionality of the ReadInteractionsService
added a conditional check for lintClassfile in ClassReader and T6214965 to improve code readability and maintainability
added configuration for the " mail . server . port " property in Email . java to ensure the correct port is used for the email server
refactor sslfactory reload logic to use RetryPolicies for improved error handling to enhance reliability and maintainability of SSL factory operations
updated date format from yyyy - MM - dd ' T ' to yyyy - mm : ss ' s ss ' s ss '
corrected a typo in the assertion message in SpyingOnRealObjectsTest . java to improve clarity of error messages for better debugging
added a boolean flag ` isEndsOnNL ` in ` InlineBoxing ` , ` LineBox ` , and ` LineBox ` to
added null check for filePath ' s parent in UnpackContent . java to avoid potential NullPointerExceptions when the parent path is null
removed unused import of DocCollection from TopicStream . java to clean up the code and improve readability
refactor NinjaServletContextTest to use createHttpServletRequestInputStream for reading form data to improve code readability and maintainability while ensuring proper handling
added properties for the " management . endpoints . web . exposure . include = * " property in AbstractCasEndpointTests . java to enhance configuration flexibility
added a check to ensure the current graph is a dynamic graph before proceeding to prevent IllegalArgumentException when the current graph is not a dynamic graph
fix : add @ scopeone . getdefaultbeantype ( ) and @ scopeone . getdefaultbean ( ) . getdefaultbean ( )
added support for suppressing exceptions in JsonPath expressions and JsonPathEngine classes to enhance error handling by allowing specific exceptions to be suppressed
replaced ControllerLeaderLocator . create with ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter . java to streamline
updated command - line arguments from ` CLHSDB ` to ` HSDB ` in multiple Java files to enhance usability by allowing users to
refactor ` configureChunkProvider ` method to use ` FaultTolerantChunkProvider ` instead of ` FaultTolerantChunkProvider
[ beam - 10225 ] remove deprecated code that be no longer need .
replaced ` getAccessibilityManager ( ) ` with ` getAccessibilityManager ( ) ` and ` getAccessibilityManagerInstance ( ) ` in ` ShadowAccessibility
[ hotfix ] [ log4j2 - 1789 ] add a group display id to analytics .
replaced ` AbstractBuildRuleWithResolver ` with ` SourcePathResolver ` across multiple files to simplify the class structure and improve code clarity
replaced ` enumDataTypeHelper ` with a new ` PostgreSQLEnumDataTypeHelper ` class and added a new class ` PostgreSQL
updated the comparison from " logpath / spring . log " to " File . separatorChar " in LogFileTests . java to ensure compatibility with
renamed ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple classes to standardize naming conventions for
added exception handling for index tables in HiveMetaStoreClient to ensure proper handling of unsupported operations in the Hive metastore client
added visibility check for VISIBLE in RecentsView . java to ensure proper handling of disabled actions when the view is not visible
added a conditional highlighter for non - Windows environments in Repl . java to ensure proper highlighting behavior for non - Windows environments
added a ` addOptionalLocalVariable ` method to ` BugInstance ` and modified ` CrossSiteScripting ` to include ` ServletParameterTainted
updated the method to use ` toString ( ) ` instead of ` getRawPath ( ) . toUri ( ) . toUri ( ) ` to
updated the method call from ` removeCaptureListener ` to ` removeCaptureListener ` in ` SelectBox . java ` to ensure the correct listener is
changed the ` _ metaDataComplete ` variable from true to false in ` MetaData . java ` to disable metadata completion for improved performance
replaced the ` removeTaskTarget ` method with a ` THREAD _ POOL _ EXECUTOR ` method in ` RecentsAnimationController
updated JsBundleGenrule to use " PLATFORM " instead of " JS _ BUNDLE _ NAME " in JsBundleGenrule to
updated type casting logic in Lower . java and added a new class T6500701 . java with a new class T650070
added ` crlfNewLinesInComments ` and ` crlfNewLinesInJavadoc ` methods to ` AddImportTest ` and ` AddImport
added hubMode configuration to AbstractLiquibaseChangeLogMojo and modified AbstractLiquibaseMojo to set the hubMode variable to enhance flexibility in
refactor skipPolicy assignment in JsrFaultTolerantStepBuilder and JsrChunkProcessor to improve code readability and maintainability
added a check for the existence of the linkDb in IndexerMapReduce . java to ensure that the indexing process does not fail gracefully
replaced the use of ` setIndexerThreadPoolMethod ` with ` setIndexerThreadPoolMethod ` in ` LuceneTestCase . java ` to simplify the code by
updated the format of the address string in GameCanvasImplementation . java to improve the accuracy of the address format
replaced ` newTransactionalMap ` with ` copy ` for job executions in ` MapJobExecutionDao ` and added a new ` copy ` method
added a new file ` DownloadTest . java ` to implement a new test class ` DownloadTest . java ` to demonstrate the functionality of downloading
updated language handling in multiple classes to ensure consistent language normalization to improve code readability and maintainability by standardizing language normalization
updated arguments handling in GenericUDFRound . java to include a new argument type in exception messages to improve error reporting by providing more informative exception
added null check for selectedVersion before processing version tags in ManageDependencies . java to avoid potential NullPointerException when selectedVersion is null
added multiple matchers for various AntPathRequestMatchers in SecurityConfig . java to enhance security by allowing specific path matchers
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
refactor BeanDefinitionInjectProcessor to check for qualified class names before processing to improve code robustness by avoiding potential ClassCastExceptions
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable tests that are not ready for execution
[ openwebnet ] fix openwebnetenergyhandler and openwebnetthermoregulationhandler # scheduleschedulewithfixeddelay ( #
refactor socket event processing logic in AprEndpoint . java to improve code readability and maintainability
deleted the SunToolkitSubclass . java file to the class is no longer needed for the current implementation
updated the ` DefaultRenderableSorter ` to use ` Matrix4 ` instead of ` MathUtils ` for rotation and scaling in ` Matrix4 ` to
added a new test method ` registerWrapperHandlerBeforePrimitive ` to ` TypeHandlerRegistryTest ` and modified import statements in ` TypeHandlerRegistryTest
added a method to convert a raster to a RGB image based on the alternate color space to enhance color handling capabilities in the PDSeparation
updated API URLs from ` CommonsApplication . API _ URL ` to ` BuildConfig . WIKIMEDIA _ API _ HOST ` to
added health check to make it easy to configure health check .
added a null check for the block position before accessing it to avoid potential NullPointerExceptions when accessing block state
added a new test method ` testAlterTableWithViewsIT ` to verify the behavior of the ` AlterTableWithViewsIT ` class to
updated offset assignment in FileFloatSource . java and added assertions in TestFunctionQuery . java and TestFunctionQuery . java to improve code clarity and
removed DrillMongoConstants . ID from MongoRecordReader . java to clean up unused fields to improve resource management and prevent potential memory leaks
added disconnect method to YeelightHandlerBase and DeviceBase classes and updated connection state management in DeviceBase and WifiConnection classes to ensure proper
added a check for " AUTO _ INCREMENT " type in the Parser and created a corresponding test in TestCompatibility . java to ensure proper
added a list of existing shared indexInformers in SharedInformerFactory and updated related tests in SharedInformerFactoryTest to enhance the management of shared index
cloudstack - 10297 : fix npe in templatemanagerimpl . savedetails ( ) when uservm be null
replaced ` imageSizeFromStream ` with ` RobolectricBufferedImage ` and ` bufferedImage ` in ` ShadowBitmapFactory . java `
removed deprecated methods from LauncherProvider and LauncherSettings classes to clean up the code and improve maintainability
( chore ) camel - jbang : fix file path for broker . dat file
updated legend right and bottom values from ` getFullHeight ` to ` getFullHeight ` and ` getFullHeight ` in ` PieChart .
added a check to return early if renderable . worldTransform . det ( ) is zero in BaseShader . java to ensure proper handling of
added a new file MaryScriptCreator . java that implements a script creator to create a database using a script to facilitate the creation of the MaryScript
added a new attribute ` getRemoteHost ( ) ` in ` ListenHTTPServlet . java ` to retrieve the remote source host to ensure the
[ hotfix ] [ table - common ] clean up the compaction logger in levelcompilationtsfilemanagement
refactor license and location handling in ComponentDescription . java to improve code readability and maintain consistency in naming conventions
camel - 14284 : camel - aws2 - s3 - s3 - stream - upload - timeout _ checker should be a constant
changed the access modifier of the isClusterShutdown method from package - private to public in ServerManager and AssignmentManager to allow access to the method
updated logging statements in Slf4jSpanLogger and DefaultTracer to handle null spans more effectively to improve robustness by avoiding potential NullPointerException
updated config . addActiveOption method to use trim ( ) instead of trim ( ) to ensure consistent behavior when adding active options
added depth preference handling in DepthController . java to enable depth effects based on user preferences
updated the assertion in OverseerTest to check the success count of the OverseerAction to ensure the test accurately reflects the state of the
removed the ` getKernelVersion ( ) ` method from ` LinuxFileStore . java ` to simplify the code and improve readability by eliminating unnecessary
refactor ExecConstants class to improve code readability to enhance maintainability and facilitate future updates
removed the import of ScreenRecordRule from ThemeIconsTest . java to streamline the code by eliminating unnecessary dependencies
added a new method ` setScanAttributeForPaging ` to ` TableSnapshotResultIterator ` and implemented a new method ` setScanAttributeForPaging
updated lowRange assignment logic in Request . java and RequestV2 . java to improve code readability and maintainability
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource , AsyncWriteCache , and WriteCache classes to
fix typo in hostjoinapiimpl . setzoneid ( )
updated content type from " application / json " to " APPLICATION _ JSON _ UTF8 _ VALUE " in BaseLivyInterpreter and LivyInterpreter
refactor filesystem removal logic in ZipFileSystemProvider . java to improve code readability and maintainability
replaced ` Object ` with ` JSON ` in ` HttpRequestBuilder . java ` to simplify object handling and improve code readability
updated hard commit wait duration from 2 to 5 seconds in SoftAutoCommitTest . java to improve test accuracy by allowing more time for hard commits
[ selenide ] fix exception in selenidelogger . beforeevent ( ) .
refactor multiple Dial classes to improve code organization to enhance maintainability and readability of the dial - related classes
updated error logging statements in SyncQueue . java to improve clarity of error messages for better debugging
updated the ryuk version from 0.4 . 0 to 0.4 . 1 in RyukContainer . java to ensure compatibility with the latest ry
updated bootstrap path retrieval from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java `
fix a bug where we do n ' t need to check for the mcp version
[ hotfix ] [ yarn ] use createyarnclusterdescriptor instead of createyarnclient ( )
fix localmapstatsprovider . addstatsofnodataincludedmaps ( ) to reduce memory usage
deleted the AllTests . java file to the test class is no longer needed for the project
added constant UNICODECHAR _ NONBREAKING _ HYPHEN and UNICODECHAR _ ZERO _ WIDTH _ SPACE
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` for testing large stack trace invocations to ensure that the
updated method call from ` createRowKeyForMappedProperties ( ) ` to ` createRowKeyForRowKey ( nestedResultMap ) ` to
added a variable ` eventHandled ` to the ` UIText ` class to enable event handling for improved user experience
deleted the Controller . java file and replaced the Weldby class with WeldModule . java to simplify the codebase by removing unnecessary annotations
added a boolean variable ` monitorCaptureGroupsInEmptyCheck ` and modified conditional checks in ` TRegexBacktrackingNFAExecutorNode ` to
added a protected variable ` liquibaseProLicenseKey ` and updated logging in ` AbstractLiquibaseMojo . java ` to improve encapsulation
refactor method name from ` setMeasuresHierarchy ` to ` setMeasuresHierarchyMemberReader ` in ` RolapCube . java ` to
added a default value update handler to the SubstrateOptions class to enhance debugging capabilities by allowing dynamic updates based on user - defined values
refactor MondrianProperties class to improve code readability to enhance maintainability and facilitate future updates
added getFriendPaths ( ) method to KotlinConfiguredCompilerFactory , KotlinLibraryDescription , and KotlincStep classes to enhance
added aliases for BATK , BATAK , BRAHMI , and MANDAIC in Character . java and CheckScript . java
updated comparison logic in ExecutionCommand and added a new method ` stringToExecutionCommand ` in ` StageUtils ` and ` StageUtils ` to enhance
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope object
updated CSS parsing logic in CSSParser . java and added validation for parameter numbers and PERCENTAGE to improve error handling and provide clearer feedback
added a new test method ` testLocalIndexIT . java ` to verify the correctness of the indexing logic in ` LocalIndexIT .
updated test cases in BaseAndroidTestCase and BackupHelperTest to use ApplicationProvider instead of InstrumentationRegistry to ensure compatibility with the latest Android testing framework
updated message formatting in ItemListActivity , LiveTvGuideActivity , and LiveTvGuideActivity to include additional information to improve user experience by
updated condition checks in RendererUtilities . java and added a new test for XYSeries . findLiveItemsUpperBound in RendererUtilitiesTests . java to
replaced Iterator < JsonNode > with ArrayNode in KrakenStreamingAdapters . java and added arrayNodeItemAsDecimal method in KrakenStreamingAdapter
added exception handling for adding a column twice in FileContentProvider . java to improve robustness by handling potential SQLiteExceptions during the upgrade process
removed the print statement from AsyncServletIOTest . java to clean up the code and improve readability
[ hotfix ] [ map ] add hashtableloadfactor to convertjoinmapjoin and convertjoinmapjoin
updated the ` buildView ` method to use ` Context ` instead of ` LayoutInflater ` to improve flexibility by allowing customizable background resources based on the
added a ` assertAuthentication ` parameter to the ` SecurityMockMvcResultMatchers ` class and corresponding test cases in ` SecurityMockMvcResultMatcher
cloudstack - 10265 : remove vpcid from setvpcid ( null )
[ flink - 10955 ] [ test ] disable flinksavepointtest . testsavepointtest
updated ` @ AspectRatioFrameLayout ` , ` @ CaptionType ` , ` @ Cue . TextSizeType ` , and ` Sub
updated loop iteration logic in Actor . java for better readability to improve code clarity and maintainability by using more descriptive variable names
replaced BaseExchange with BitmexExchange in BitmexStreamingExchange to ensure compatibility with the latest Bitmex API changes
add test for relationshipvirtualmetadata in relationshiprestrepositoryit
added null check for spatial and triangle count in LodControl . java to avoid potential NullPointerExceptions when spatial is not initialized
refactor ConditionalTokenFilter and FixedShingleFilter to use a boolean variable for token filtering to improve code readability and maintainability by standardizing
fix unsafestorenode . setstateafter ( ) in unsafestorenode . add ( )
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure
added a assertion to verify the loading of casEventRepository in CasAuthenticationEventListenerTests to ensure that the event repository is not empty before proceeding
removed unused attributeTemplateName and attributeCol parameters from AuthenticationAttrProcessor and AuthenticationAttrProcessor classes to streamline code by eliminating unnecessary parameters
added null key validation in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that a null key is
added a method to set the typeface in CodenameOneTextPaint to ensure that the typeface is not set in the runtime to prevent runtime
added ` open ` method implementations in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS
removed deprecated ` fail ` method in ` WebDriverRunner . java ` to clean up the code and improve readability
updated the condition for checking the size of the item in SolrRequestParsers . java to improve code readability and maintainability
refactor ` DefaultResultSetHandler ` to use ` this ` instead of ` ResultObject ` in ` DefaultResultSetHandler . java ` to improve code
updated SQL statements in CreateTableGeneratorTest . java for better readability to ensure consistency in SQL syntax for better readability and maintainability
added conditional checks for filter mode in VectorizationContext . java to ensure proper handling of filter expressions based on primitive categories
updated the type of moveSelectorConfig from ` MoveSelectorConfig ` to ` MoveSelectorConfig ` in ` ExhaustiveSearchPhaseConfig ` to
updated the method of modifyDataTypeStatement from ReorganizeTableStatement to modifyDataTypeStatement to simplify the code and improve readability
[ iotdb - 4071 ] fix cluster name in systemproperties and datanode . getclustername ( )
refactor connection handling in PeerGroup and update logging in ClientConnectionManager to improve code readability and maintainability by using a more descriptive
added handling for " blink " , " bold " , " underline " , and " underline " styles in Nano . java to ensure correct style
updated fixer . fixup and datafixer . fixup ( ) to use a binary tag instead of a magic number to ensure compatibility with
updated return statement from " Use ` String ` to " No # toString ( ) on String " to improve clarity of the error message
updated memory usage from " - Xmx64m " to " - Xmx32m " in TestThreadFailure . java to ensure compatibility with
updated the ` retryFailed ` method to use ` FailureContext ` instead of ` FailureContext ` and added a new ` DataProviderRetryAnalyzer `
updated the return type from ` 0 ` to ` bandwidth ` in ` BucketStateIEEE754 . java ` to use the correct bandwidth value
[ java ] add ` ` select ' ' and ` ` deselect ' ' method to ` ` select ' ' and ` ` deselect ' '
refactored ` doPrintEntry ` method to use ` KeyUtil ` instead of ` boolean ` to improve code readability and maintainability by
[ hotfix ] [ test ] fix typo in taskasynccalltest
added checks for undecorated dialogs in Dialog . java and Frame . java to ensure dialogs have a default shape and background color to prevent
changed the visibility of the state variable from private to private final in DefaultProjectFilesystem . java to enforce immutability of the state variable
added configuration for sentinel and standalone connections in RedisObjectFactory . java to ensure proper handling of redis passwords and standalone configurations
add a new property ` lastSeenDelayedMessage ` to ` ChatRoomJabberImpl ` to track if the message has been delayed
updated the ` notifyContent ` method to use ` Callback . NOOP ` instead of ` Adapter . Adapter ` in ` ResponseNotifier . java `
refactor share creation and operation handling in FileOperationsHelper and OperationsService classes to improve code readability and maintainability by encapsulating operation
refactor isValue logic in BeanDefinitionInjectProcessor and FieldPropertyInject . java to improve code readability and maintainability
updated loop conditions in ClassicPlotManager . java to use ` yStart ` instead of ` getMinBuildHeight ( ) ` for loops to ensure
added null check for NullPointerException in SmackIntegrationTestFramework . java to ensure proper handling of NullPointerExceptions
added a boolean parameter to the ` readDirectory ` method and modified the ` readDirectory ` method to include a boolean parameter to enhance flexibility in directory
added support for ENABLED _ LS in VersionedTargetGraphMode and updated executor initialization logic in VersionedTargetGraphCache to improve dependency management
added a check for video formats in DLNAResource . java to ensure proper handling of video formats
refactor AutoMlClient and AutoMlClient classes to improve code organization and maintainability
added a ` load ` method to ` LwjglNativesLoader ` and modified the ` load ` method in ` Lwjgl
added a new constant ` ESCAPE ` and modified the ` CSVStrategy ` initialization to include ` escape ` parameters to enhance flexibility in handling special characters
updated grant type handling in ClientRegistrations . java and updated test cases in ClientRegistrationsTests . java to improve clarity and consistency in grant type
updated exception messages in Throwable . java and added initCausePlumbing method in SuppressedExceptions . java and SuppressedExceptions
added SQL query and modified OrderedResultIterator initialization in DerivedTableIT . java and ClientAggregatePlan . java to improve test coverage and ensure
added RSquare mapping for RSquare in RegressionEvaluator and updated test cases in StreamExpressionTest to ensure correct handling of RSquare values in the
added handling for multiple request headers in ThreadContextMDCServletFilter . java to ensure proper context attributes are included in the request
added null checks for mapWork in SparkPlanGenerator . java to improve code readability and maintainability by reducing casting
refactor image retrieval methods in PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for retrieving folder and country images to
updated caching logic in JwtIssuerReactiveAuthenticationManagerResolver to use Duration . ofMillis instead of Duration . ofMillis to improve cache efficiency and
updated the condition in AbstractScriptDatabaseInitializer to check if resource is readable and added a new test case in AbstractScriptDatabaseInitializerTests to ensure proper
added a boolean parameter ` isMethod ` to ` LLVMInteropType ` and updated related methods to include a ` isMethod ` parameter
removed the sleep method from AbstractBasicMockingIntegrationTest . java to improve code readability and maintainability
added a new file ` KernCrash . java ` that implements a font rendering system to demonstrate Kern crash behavior in the application
added a failure call to the fail ( ) method in LinkedHashTreeMapTest . java to ensure that the test does not fail gracefully
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 511 : add support for
fix housekeeper cleanup after shutdown
changed the condition from ` getClientAddress ( ) ` to ` getNextOffset ( ) ` in ` GroupTransferService . java ` to simplify the condition
refactor Assert class to improve code readability to enhance maintainability and facilitate future updates
added a new test class ` Issue247Test ` to verify the behavior of the ` Map ` method in the ` DBMaker ` class to
changed the type of ` results ` from ` CategoryItem ` to ` ArrayList < String > ` in ` CategorizationFragment . java ` to
updated validation logic for todayLeapYear and birth year in ValidatorTest . java to ensure correct behavior of maxAge validation based on date and birth year
added GrblLookups for error codes in GrblController . java and updated message processing logic in GrblController . java to improve error handling
added a conditional check for nScreens before returning the scroll format in Workspace . java to ensure that the scroll format is only displayed when no screens
removed the ` count ` parameter from the ` getTrades ` method in ` BittrexMarketDataService ` and ` BittrexMarketDataService
refactor ConsoleReader and MemoryHistory to use stripAnsi instead of stripAnsi in ConsoleReader and MemoryHistory classes to improve code readability
updated the path for the JDK folder path in JavaBuild . java to improve code readability and maintain consistency in naming conventions
replaced ` getDescription ( ) . getBuildRule ( ) . getBuildRule ( ) . getBuildRule ( ) ` with ` getType ( )
added a logger parameter to the JFCModel constructor and updated related constructors to include a logger parameter to enhance logging capabilities and provide more informative
added a check for tolerance in MaximumInscribedCircle . java to ensure tolerance is positive to prevent illegal argument exceptions
added a new method ` createView ` and ` dropView ` to ` TestUtil ` and ` DatabaseMetaDataTest ` to handle view privileges
added support for StableFloats and StableDoubles in NaNTest . java to enhance test coverage for different operating systems
added a new file ` DesktopTaskbarUIController . java ` that implements a ` BaseQuickstepLauncher ` class for handling desktop taskbar icons
added task count listener functionality to the SearchModFragment and ModItemAdapter to enhance task count management and improve user experience
refactor file handling logic in Files . java to improve code readability and maintainability
refactor ` setApplicationContext ` method to use ` GrpcServerFactory ` instead of ` BeansException ` to improve code readability and
renamed ` DomainAwareServicesManager ` to ` DomainAwareServicesManager ` in ` DomainAwareServicesManager ` and ` ChainingServicesManager ` to
add debug logging to resourcepackloader . getmodinfo ( ) . getmodinfo ( )
updated GoogleCredentialsProvider to use JWTAccessWithScope ( true ) instead of JWTAccessWithScope ( true ) to enhance security by ensuring
added methods to grow cells and fillX , fillY , and fillX , and fillY in Cell . java to provide access to the grow
refactor DefaultInputHandler to use a Map < KeyStroke , ActionListener > instead of a Map < KeyStroke , ActionListener > to improve code readability and
add a try - catch block to improve error handling by catching exceptions during message processing
updated memory handling in MetricsMemoryTester . java and added a check for memory failure count in TestDockerMemoryMetrics . java to improve memory management and
deleted the JobParametersPrototype . java file to the functionality is no longer needed in the project
added a securityEnabled field to the MappingsTable class and updated related methods accordingly to enhance security configuration handling in the mapping process
rename APPLE _ SWIFT _ EXPORT _ OBJC _ Cxx _ HEADERS to EXPORTED _ OBJC _
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable DUMP _ TO _ FILE
rename codecNeedsEosPropagationaround to codecNeedsMediaCodecInfo for clarity to improve code readability and maintainability by using a more
[ java ] use logbufferdescriptor . isConnected ( ) instead of logbufferdescriptor . isConnected ( )
added a condition to check if dbInfo is not null in BaseFormatter . java to ensure that the output options are properly handled when no information is
[ ci ] fix ssl configuration in prestodriveruri and prestodriveruri
added DOMOutputOptions import and error output options in DOMConverter . java to enhance error handling by allowing customizable XML output options
refactor Assert class to improve code readability to enhance maintainability and facilitate future updates
added a new ` retained ` parameter to the ` Event ` class and updated related methods to include a ` retained ` parameter to enhance the publishing process
[ hotfix ] [ test ] remove unnecessary @ JsonIgnore annotation from eventserializationtest . java
added a ` getName ( ) ` method to ` SqlGroupedWindowFunction ` and updated related methods in ` SqlGroupedWindowFunction ` to
replaced ` Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java ` to simplify import statements for better readability
refactor SSL context timeout handling in AbstractSessionContext . java to use ReentrantReadWriteLock for improved thread safety to enhance thread safety and maintainability of SSL
refactor Watcher and Watcher classes to improve code readability and maintainability to enhance readability and maintainability of the code
updated CalciteSqlDialect from CalciteSqlDialect to AnsiSqlDialect in SqlNodeConvertContext . java to align with the new
updated logging level from debug to trace in FirmwareUpdateService . java to improve logging granularity for better debugging
added tests for handling null dates and timestamps in GetObjectTest . java to ensure correct handling of null values and timestamps in SQL queries
updated string handling in StringSubject . java and added a new test for named inclusions in Subject . java to improve clarity and consistency in string concatenation
added unit tests for the ` getRepositoryPermissionsMultipleTeams ` method in ` UserModelTest . java ` to ensure correct permission handling for multiple teams
added a new file ` Test7088020 . java ` that tests method invocations in MethodHandles . java to ensure proper handling of method
refactor Saml2ResponseValidator to use a HashSet for audience URI matching to improve code readability and maintainability by encapsulating audience
refactor ` afterAppAuthChanged ` and ` HttpLongPollingDataChangedListener ` and ` HttpLongPollingDataChangedListener ` to improve cache
replaced direct calls to ` _ stderr ` with ` _ err ` in ` StdErrLog . java ` to improve null safety and prevent potential NullPointer
added a new constant ` SEPARATION _ ORDER ` in ` BasicEventSimulationEngine ` and modified conditional logic in ` BasicEventSimulationEngine `
updated the method call from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to ensure the correct data type is used for query
updated SQL query execution to include a configuration variable for HBASE _ SITE _ NORMALIZER . enabled in PhoenixHBaseAccessor and 
refactor SavepointV2 and FileStateHandle classes to improve code readability and maintainability
added BluetoothClass functionality to ShadowBluetoothDevice and its implementation in ShadowBluetoothDevice to ensure proper functionality of Bluetooth class retrieval and retrieval
updated the method name from ` contains ` to ` containsProfile ` in multiple files to improve code readability and maintain consistency in naming conventions
added null and empty check for list in FEELFunction . java and updated error message in FEELFunctionsTest . java to improve error
updated method call from ` getGraph ( ) . readUnlockAll ( ) . readUnlockAll ( ) ` to ` graph . readUnlockAll
updated the initialization of coreNodeName in ZkStateReader . java to use getCoreName ( ) instead of getCoreName ( ) to
updated ChatActivity to use a UpdatableObject instead of a recent update request to improve user experience by allowing users to refresh their status bar
updated taggerParserPosTagCompatibilityITest . java for consistency to improve code clarity and maintainability
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress codecs in
updated conditional checks in Types . java and added a new class T7005671 . java with a new test class T7005671 . java
updated ` superTriangle [ 0 ] ` and ` superTriangle [ 3 ] ` values in ` DelaunayTriangulatorTest `
added ` @ Override ` annotation to multiple Java classes to ensure proper method overriding and improve code clarity
refactor AmbariJwtAuthenticationFilterTest to use a Builder instance for handling expiration dates to improve code readability and maintainability by centralizing
updated state handling in StackOverflowCheckImpl . java to use a new variable for yellowZone and yellowZoneProtected to improve state management and ensure proper
added ` ShadowDatabase ` and ` ShadowSQLiteDatabase ` methods to ` Robolectric ` , ` ShadowSQLiteDatabase ` , and
replaced calls to ` initiateGL ( ) ` with ` initiateGL ( ) ` in ` LwjglGraphics ` and added a new method
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` and replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator `
refactor language and category handling in Locale . java to improve code readability and ensure default locale is initialized before use
updated the return statement from ` mCurrentTextAlpha ` to ` mLastSetTextAlpha ` in ` PredictionRowView . java ` to
updated log message from " Confimap PropertySources does not match " to " ConfigMap PropertySources " in ConfigurationChangeDetector . java to clarify
replaced ` LoginMockMvcTests ` with ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` in ` DefaultConfigurationTestSuite . java
updated MIME type handling in GzipFilter , GzipFilterDefaultTest , and GzipFilterDefaultTest classes to ensure that MIME type and path
updated the variable name from ` OutputType . WRITER ` to ` OutputType . WRITER ` in ` Response . java ` to
updated the default value of the " nashorn . regexp . impl " property from JDK to JONI to ensure compatibility with the
replaced ` Handler ` with ` FutureTask ` and modified ` captureViewPropertiesBg ` methods in ` ViewCapture . java ` to improve thread safety
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 511 , add support for
added error handling for folder creation in GitBlit . java to ensure that folder creation fails gracefully by throwing a GitBlitException
updated the bind IP parameter from 0 . 0 . 0 to 127 . 0 . 1 in Args . java to ensure compatibility with the latest IP binding
camel - 15836 : camel - jbpm : fix typo in camel - jbpm
pdfbox - 4071 : remove unused static import , a suggest by valerybokov
updated the ` WorkModeToggleContainer ` class to use ` WorkFooterContainer ` instead of ` WorkModeToggleContainer ` to improve clarity of the
updated multiple Java classes for consistency and clarity to improve code readability and maintainability
refactor type parameter handling in DefaultJavaPrettyPrinter . java to improve clarity and correctness to enhance code readability and maintainability by reducing redundancy
[ hotfix ] [ runtime ] fix memory leak in operatorcontext
updated error message formatting in QueryByExamplePredicateBuilder and JpaPersistentPropertyImpl classes to improve clarity of error messages for better debugging
refactor evictionCounter to use AtomicLong instead of long in ConcurrentLRUCache and FastLRUCache classes to improve thread safety and maintainability of
updated the ` runInJavaFXThread ` method to ` runAndWaitInJavaFXThread ` and added a ` await ` method in ` Default
[ hotfix ] [ network ] remove unnecessary localhost assignment from networkaddressmanagerserviceimpl
added import for RuntimeEnvironment and set source root in MainFrame . java to ensure proper handling of database data and source in the application
added a ` MarkedClientEnabled ` constructor to the ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration ` classes to track the enabled
refactor TableEnvironment class to improve code readability to enhance maintainability and facilitate future updates
removed the ` setStatementTimeout ` method from ` MapperBuilderAssistant ` and ` MappedStatement ` classes to simplify the code and improve readability
removed the ` hangingTscTimeout ` parameter from ` JSweetTranspiler ` and ` TypeScript2JavaScriptWithTsTranspil
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of GeoLocationRequest and
updated assertions in ArtifactFilesystem and ArtifactFilesystemTest to use ` Location . BUILTIN ` instead of ` Paths . of ` to improve
[ tika - 116 ] fix tikaexception when parse jxl . xls
do n ' t trigger concurrent modification when the script do not trigger
[ java ] add a sleep to wait for the channel input stream to be write to the pipe .
added assertion for ` hasValue ` and ` hasValue ` methods in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest `
updated visibility logic in BackgroundAppState and ShelfScrimView , and updated color updates in ShelfScrimView to improve user experience by
added a null check for nav in MatDefEditorlElement . java to avoid potential NullPointerExceptions when nav is null
refactor image handling in DrawImage and Image classes to improve code readability and maintainability
updated error handling logic in ErrorOccuredInOnExceptionRoute . java to improve error handling clarity and maintainability
updated the scheduleAtFixedRate method from scheduleAtFixedRate to scheduleWithFixedDelay in AstroDiscoveryService . java to improve clarity and maintainability of the code
refactor irrUnit assignment in SinglePassAndImageBasedLightingLogic . java to improve code readability and maintainability
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that are not
refactor import statements in GuiceFactoryTest . java for improved clarity to enhance code readability and maintainability by using more descriptive import
added methods to retrieve and set system features in RobolectricPackageManager and RobolectricPackageManager to enhance functionality for managing system features in the
added a new constant ` PROP _ PATH _ POSTFIX ` and modified path handling in ` RCAFrameworkLoader . java ` to enhance path handling
removed log statement from Task . java to clean up the code and improve readability
added a null check for enumerationValues before setting it to avoid potential NullPointerExceptions when enumerationValues is empty
refactor inline handling logic in BoxBuilder , InlineBoxing , and InlineBoxing classes to improve clarity and maintainability of inline handling logic
add a new method ` collectAndSendTelemetryDataAsynch ` to ` Server . java ` and implement a method to retrieve the remote IP address
removed unnecessary database type handling in UpgradeCatalog260 . java to simplify the code and improve readability
updated error messages in BaseTableDataManager . java to improve clarity and accuracy of error messages for better user understanding
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future updates
added a new key appending to the selector ID in the Matcher class to enhance the functionality of selecting selector IDs
updated debug message formatting in GouraudShadingContext . java to improve readability and maintainability of the code
added ALPHA _ INDEX _ HIDDEN _ WHILE _ DREAMING and TASKBAR _ HIDDEN _
refactor KeyExchange . java to improve readability and maintainability to enhance code readability and maintainability
added a check for JdbcConnection before executing version queries in CockroachDatabase . java to ensure proper handling of SQLExceptions during database operations
updated indexing logic in ServerMainTest . java to use String for fileIndexThatRemains instead of int to ensure correct handling of file
added getMediaRecorderingMimeType ( ) methods to CodenameOneImplementation , MediaManager , and Display classes to provide access to the media recorder '
changed the access modifier of the ` useShaders ` method from private to public to allow access to the ` useShaders ` method from other
[ hotfix ] [ test ] fix the order of bindablefilter ( )
updated ZkStateReader initialization to use zkClientTimeout instead of zkClientTimeout to improve code readability and maintain consistency in naming conventions
refactor XMPMetaParser to improve code readability and maintainability to enhance maintainability and maintainability of the code
added a new interface ` ClientRegistrationIdentifierStrategy ` to implement a ` ClientRegistrationIdentifierStrategy ` interface to facilitate the management of client registration identifiers
updated the loop condition in UrlHelper . java for better readability to improve code readability and maintainability
updated variable name from ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and added a new test class for
refactor border property checks in BorderPropertyTemplate to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability
updated logging statements in WatchConnectionManager , WatchHTTPManager , WatchConnectionManager , WatchHTTPManager , WatchConnectionManager , WatchHTTPManager , Watch
updated import statements and method signatures in InternalDropAllCommandStep and HubUpdater classes to accept HubRegisterResponse instead of Connection to enhance functionality by allowing
replaced ` & & 0xff ` with ` Byte . toUnsignedInt ` in multiple classes to improve code readability and maintainability by using a
[ hotfix ] [ runtime ] fix checkstyle violation in opentracingtransactionproducer
updated DepFiles configuration from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure compatibility with the latest DepFiles
changed the default value of ` rangePannable ` from true to false in ` CategoryPlot . java ` to disable the range pannable
refactor AllAppsContainerView to use AdapterHolder . MAIN and AdapterHolder . WORK to improve code readability and maintainability by
changed access modifiers of glCaps to glCaps and GcodeRenderer in Visualizer2TopComponent . java to improve encapsulation
added CancellationException handling in FunctionTest . java to improve error handling for cancellation failures
changed method visibility from public to protected in JarFileResource and JarResource classes to allow subclasses to access these methods for better extensibility
refactor DefaultTrackSelector class to improve code readability to enhance maintainability and facilitate future updates
added a sleep for unseq merging in LevelCompactionTsFileManagement . java to ensure proper handling of unseq merging scenario
updated the comparison of fee currency from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the correct currency value is
added a table name to the Post class and updated related test cases in HibernateProjectionTest and JPADTOProjectionTest to improve data organization and
refactor Unicode class implementation to improve code readability and maintainability
added Service dependency and updated method signatures in ViewRegistry . java to enhance functionality for managing interactive mode and service components in the application
[ hotfix ] [ javadoc ] fix typo in sendheadersfirstpublisher
refactor SSECustomerKey deserialization to use JsonPOJOBuilder instead of JsonDeserializer to improve code readability and maintainability by encap
added handling for BIG _ DECIMAL value in RangePredicateEvaluatorFactory to improve error reporting for unsupported value types
rename ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper ` and ` javacRoundEnvironment ` to improve clarity
removed unused import statements in ParameterInfo . java to clean up the code and improve readability
updated user preference handling and playback state management in PlaybackController and VideoManager classes to improve user experience by providing additional insights into playback behavior
updated the return statement in LocalNode . java to use a HashMap instead of a HashMap to improve the handling of JSON responses for better data representation
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement , DelegatingStatement , DiskFileItem , and DiskFileItem to
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT . java ` to verify the functionality of selecting schema
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graph
updated gapX calculation from Math . round to Math . round in Letters . java and added a new test class TestIssue358 .
added client - pool name and name to the QueuedThreadPool in ClientConnector . java to enhance thread management by including client - pool names
refactor ViewResultsFullVisualizer to use Box for better layout management to improve code readability and maintainability by using a more descriptive variable
added phoneNumbersListDescription and phoneNumbersListDescription fields in ScimUserEndpointDocs . java to provide users with accurate information about phone numbers
added private constructors for DeleteFiles , IndexFiles , and SearchFiles classes to enhance encapsulation and restrict access to these classes
added null checks for ` responseMap ` and ` responseMap ` in ` JsonHttpPropertyRequest ` and ` URLStreamProvider ` to improve error
refactor SolrRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
added a check for DEFAULT _ PARALLEL in XmlSuite . java to ensure parallel processing only occurs when the parallel parameter is not specified
testvmwaremo , testvmwaremo , testvmwaremo , and testvmwareutil
added a check for SCARD _ E _ NO _ SMARTCARD in CardImpl . java to ensure that only valid cards are processed
added a SuppressSysoutChecks annotation to Test2BTerms . java to suppress sysout checks in Test2BTerms . java
camel - 14265 : camel - bindy - bindy - bindy : fix bindy - bindy - bindy - bindy
change the default value of ` useowner ` and ` useTimeStamp ` from ` TRUE ` to ` FALSE ` in ` JabRefPreferences .
renamed the ` runAndCheckException ` method to ` ThrowingRunnable ` and updated the ` runAndCheckException ` method to improve clarity and
added null checks for via and pathFromSeed in CrawlURI . java to avoid potential NullPointerExceptions when accessing hash values
camel - 14284 : camel - aws - sdb : use context . getcomponent ( ) instead of context . getcomponent ( )
updated version number from " 4 . 1 " to " 4 . 2 " and updated related logic in LiquibaseXMLTransformer and Liquibase
updated the certificate validity property from 7 to 90 in ProxyControl . java to ensure compatibility with the latest cert validity standards
added smoothDelta , smoothDelta , and lastDeltaUpdate in ThreadHandler . java to improve the responsiveness of the thread handler
added null checks for tableSpec and paginator in HttpBatchReader , HttpBatchCreator , and HttpScanBatchCreator , and HttpScanBatchCreator to
hive - 11717 : fix nullpointerexception in worker . findnextcompact ( ) ( sergey shelukhin , review by
updated fragment state handling in ShadowFragmentActivity and added a new onSaveInstanceState method in TestFragment to improve fragment state management and ensure proper functionality of
refactor job identifier handling in BatchResourceFactoryBean . java to improve code readability and maintainability
added a test method to parse simple Android color references in ColorResourceLoaderTest . java to ensure that the colorResourceLoader correctly parses color references in the
added error handling for NoResultException in AbstractJPAQuery and added a new test for null result retrieval in AbstractStandardTest to improve robustness
refactor community handling in Collection . java for better clarity to improve code readability and maintainability by using a more descriptive variable name
updated the depthPref retrieval from ` l ` to ` LawnchairApp ` in ` DepthController . java ` to ensure compatibility with Law
removed unused imports from LocalManagementTest . java to clean up the code and improve readability
refactor ` updateTotalEnergyAverageUsage ` method to use ` getHeadSlot ( ) ` instead of ` block . getTimeStamp ( ) `
added null checks for extensions and incoming and outgoing classes in ExtensionStack . java and added a new test for string concatenation in ExtensionStackTest . java
[ rxjava3 ] cancel the subscription if there be an error in the flowableflatmap
updated connection timeout settings in MultiGetRequest , ControllerStarter , ServerTableSizeReader , ServerTableSizeReader , and ServerTableSizeReader to
updated the variable name from ` AndroidPlatformTarget ` to ` AndroidPlatformTarget ` in ` AndroidPrebuiltAarDescription . java ` to ensure
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to utilize ModelTest instead of NewModelTest to improve
updated EdgeSyncCursor and BaseImageService to use TenantResourcesEdgeEventFetcher instead of SystemResourcesEdgeEventFetcher in EdgeSyncCursor and BaseImage
refactor caching logic in CachingBuildEngine and add a new test for output hash calculation in CachingBuildEngineTest to improve code clarity and
added a boolean parameter ` useByteBuf ` to the ` NettyConfiguration ` class and modified the return statement in ` NettyPayloadHelper `
updated the method call from ` getOldName ( ) ` to ` getQualifiedName ( ) ` in ` DDLTask . java ` to ensure
changed the exception message to indicate that the Vertx instance must be created with the preferNativeTransport option to ensure that the Vertx instance is created
updated package structure for EnumTypeHandlerSerializerTest and added a new test class ColorTypeHandlerTest to improve organization and clarity of the codebase
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future feature additions
updated query hint settings in SessionImpl . java to use specLockTimeout instead of specQueryTimeout to improve clarity and maintainability of the query hint
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder . java ` that implements ` LoggerFactoryBinder . java ` to facilitate
removed unnecessary clone methods in multiple classes to simplify code and improve maintainability by reducing redundancy
updated orientation checks in TaskbarManager . java to include orientation comparison to ensure proper handling of orientations based on the current window configuration
[ java ] unescape xml for occupant . getnick ( ) in chat room .
replaced ` longStackPut ` with ` compact ` in ` StoreDirect . java ` and added a new test class ` Issue265Test .
added @ SuppressWarnings ( " mutable " ) annotations to multiple classes to suppress warnings related to mutable and non - mutable types in the codebase
make executionflowcontroltest more robust by make it easy to test .
updated type checks in DLNAMediaInfo , FFMpegVideo , FFMpegVideo , and FFMp
added a boolean parameter ` unlimited ` to ` TestNonBlockingAPI ` and modified ` TestWriteListener ` constructor to include a ` boolean ` parameter
update totaldifficulty in blockchainimpl . updatetotaldiff ( ) and add a test for invalid block total diff
refactor logic for handling current window seekability in DefaultPlaybackController . java to improve code readability and maintainability by reducing redundancy
replaced ArrayList with CopyOnWriteArrayList for knownLibraries and knownLibraries in NativeLibrarySupport , SecurityServicesFeature , and SecurityServicesFeature classes to improve thread safety
added null checks for mUniformAlloc and updated position calculations in AllAppsView . java to ensure uniform allocation is correctly initialized and updated position calculations
updated the condition to check if the key contains a ' : ' in HttpURLConnection . java to ensure proper handling of special characters in connection keys
added PrincipalResolver annotation to CasSimpleMultifactorAuthenticationMetaDataPopulator in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration . java to enhance the
replaced ObjectMapper with JSONParser in DelegationTokenResponse . java to enhance JSON parsing capabilities and improve error handling
added a method ` removeTrailingSlashes ` to the ` StringBuilder ` class to ensure proper handling of trailing slashes in the builder
added ` matchesAny ` method to ` PatternsMatcher ` and ` matchesAny ` methods in ` PatternsMatcher ` to enhance functionality for matching
hbase - 16286 addendum addendum addendum addendum addendum addendum addendum fix
added potion handling in BlockFire . java to manage potion events to enhance the game ' s capabilities to manage potion events more effectively
updated the method signature from ` beginOrAdjustReorderPreviewAnimation ` to ` beginOrAdjustReorderPreviewAnimation ` in ` CellLayout . java `
refactor decrease factor calculation in ContractStateCapsule and ReceiptCapsule classes to improve code readability and maintainability
added state checks for unready and demand callback in AsyncContentProducer , BlockingContentProducer , and BlockingContentProducer , and BlockingContent
added a null check for the weightField in DocumentDictionaryFactory . java to ensure that a mandatory parameter is provided to prevent runtime errors
refactor AppleBundle and AppleTestIntegrationTest to utilize a new variable substitution method to improve code readability and maintainability by centralizing variable substitution
updated lancerLaser and Damage classes and added a new entity ` LaserTurretEntity ` and ` Damage `
updated method signatures in KucoinAdapters . java to use ` Object ` instead of ` Request ` to improve type safety and prevent potential ClassCastException
added a new file ` PreParseGrammarTest . java ` that implements XML grammar parsing functionality to facilitate testing of XML schema parsing functionality in the x
added ` @ SuppressWarnings ( " doclint : missing " ) ` annotations to multiple Java files to improve code clarity and provide clearer error messages
added font override functionality to ExtendedEditText . java to enhance text editing functionality by allowing custom font overrides
added a null check for currentUser in AuthorizeTag . java and a corresponding test in AuthorizeTagTests . java to ensure proper handling of
camel - 14284 : camel - cxf - add a warning if the uri contain unsafe character .
added a method ` setUpData ( ) ` to the ` JDBCGeometryTestSetup ` class to ensure proper initialization of data in the database
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] add a check for already cancelled task .
add support for create rmi registry ( server . rmi . create ) in remotejmeterengineimpl .
replaced String . join with StringUtils . join for anticompact ranges in CompactionManager . java to improve code readability and maintainability by using a
updated the usage of the ` getDisplayMetrics ( ) ` method in ` ParallelUniverse ` , ` RobolectricTest ` , and ` Res
[ java ] add memberid to serviceheartbeat . allocate ( ) and serviceheartbeat . allocate ( )
added a conditional check for totalThreadAllocatedBytes in TestThreadMXBean . java to ensure correct handling of totalThreadAllocatedBytes in version checks
updated double evaluation logic in CustomExpression . java to check for negative and non - NaN values to ensure correct handling of NaN values and improve hash code
updated debug log statements and error handling in AjaxListener . java to improve logging clarity and maintain consistency in log messages
added authentication route routes and corresponding tests in AuthenticityController , AuthenticityController , and AuthenticityController , and AuthenticityController
added assertions for nextNode in SnippetTemplate . java and updated SnippetTemplate . java in SnippetTemplate . java to improve error handling and
updated logger reference from ConnectionManager to HttpClientRequestImpl in HttpClientRequestImpl . java to improve clarity and consistency in logging
removed redundant comparison calls in DefaultTrackSelector . java to streamline code and improve readability
refactor RuntimeSerialization class implementation to improve code readability and maintainability
do n ' t crop image if the crop be not crop
refactor UnitOfWorkFactory class to improve code organization to enhance maintainability and readability of the code
added ` allAppsCellWidthPx ` and ` allAppsIconDrawablePaddingPx ` to ` DeviceProfile ` and ` Widget
[ tika - 132 ] fix the issue of the content - type file not be set when the content - type be null
updated URI construction in ThumbnailsCacheManager . java to use fileId instead of hardcoded values to improve code readability and maintainability by
added mark ( Integer . MAX _ VALUE ) method to the Source class to ensure that the input is properly marked for processing
[ java ] add @ suppresswarnings and @ suppresswarnings in asyncprocessor , asyncsubject , and related classes
added a configuration property ` SHOW _ ERROR _ STACKS ` to the ` Configuration ` class and modified ` AmbariHandlerList `
cloudstack - 10265 : cleanup domain id should be part of domain cleanup .
removed unnecessary null checks for ` fremCall ` in ` SPARCArithmeticLIRGenerator . java ` to simplify code and improve readability by
add ruletemplateconfiguration to decisiontableconfigurationadapter for legacy drools 5 . x API
refactor ` onRequestPurchaseResponse ` method to use ` waitingForResult ` instead of ` onRequestPurchaseResponse ` to improve code readability
increase default timeout from 100 to 1000 in UnboundedSourceSystemTest . java to allow more time for the test to complete
updated import statements in ShadowAssetManager . java for consistency and clarity to improve code readability and maintainability
deleted MrefStat . java and MrefStat1 . java files in MrefStat . java and MrefStat1 . java to stream
updated scope handling in DependencyInsight . java and DependencyInsight . java to improve code readability and maintainability by using a consistent utility method
added messages for no trades and bad status in BTCETradeServiceRaw . java to improve error handling and provide clearer feedback when no trade
updated assertions in EmitterTest , UnwrapProcessorTest , UnwrapProcessorTest , and UnwrapProcessorTest to use hamcrest assertions instead of junit
added a method ` getPaymentRequestUrls ` to ` BitcoinURI ` and a corresponding test in ` BitcoinURITest ` to enhance
[ planner - 383 ] add support for collection - wrapping and inverserelationshadowvariable ( # 383 )
removed redundant calls to mOrganizer . getInfo ( ) in FolderPagedView . java to streamline code by eliminating redundancy
updated JfrBufferNodeLinkedList , JfrChunkWriter , and Target _ jdk _ jfr _ internal _ jdk _ jfr _ internal
updated null check for null values in BasicAbstractTuple . java to improve code readability and maintainability
updated import statements and refactored input resource handling in LintUtility . java and LintUtility . java to improve code readability and ensure
replace ` updateBackgrounds ( ) ` with ` post ( Runnable ) ` in ` AppsContainerView . java ` to improve responsiveness
fix a bug that cause the player to crash when the player be not in the player .
added a new case for OCELOT _ BABY in PlayerEvents . java to handle the OCELOT _ BABY event
[ hotfix ] [ runtime ] add @ publicevolving annotation to statettlconfig . java
added null checks for ` x ` in ` PreparedStatement ` , ` Array ` , and ` PreparedStatement ` classes to ensure proper handling of null
[ hotfix ] [ table - common ] print out descriptor for valid recording in the catalog .
updated the append0 method from " \ n " to " \ n " in StringBuilder . java to ensure consistent formatting of output
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest . java ` and implemented a ` jsonSnapshot ` method in `
refactor the ` removeTheTxAndBlock ` method to use ` BlockCache ` instead of ` TrxCache ` to improve test structure and
added support for channel modes in AmcrestHandler , DahuaHandler , and DahuaHandler in AmcrestHandler , Dahu
removed ` NoSuchBuildTargetException ` from the ` getBuildTargetForFullyQualifiedTarget ` method in ` BuckConfig ` and ` BuildRuleFactoryParams `
refactor ChangeLogIterator to accept List < ChangeSetFilter > instead of List < ChangeSetFilter > to improve flexibility in handling different change sets
added exception handling for guest exceptions in PolyglotLauncher . java to ensure proper error handling for guest exceptions
updated environment variable handling from ` getenv ` to ` getEnvOrSystemProperty ` in ` Ec2Utils . java ` to ensure compatibility with environment variables
added serialVersionUID to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
removed unnecessary initializer checks in SpacesVisitor . java to streamline code for better readability and maintainability
added copy ( boolean nearCache ) method to ServerCacheOptions and modified the ` copy ( boolean ) ` method in ` DefaultCacheHolder ` to
added a new test method ` testHiddenBorder ` to verify that the border is not visible on a floated element with overflow hidden to ensure that
replaced ` ActionGraph ` with ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` ProjectCommand ` classes to improve clarity and consistency in
updated KucoinExchange . java to use PROD _ URI instead of LIVE _ URI to improve clarity and maintain consistency in naming conventions
updated resource loading logic in SpringResourceAccessor . java to improve code readability and maintainability
add unit test for microwatt per cubic cubic meter and square cubic meters in smarthomeunits
updated vertexMask assignment from getVertexAttributes ( ) to getMaskWithSizePacked ( ) in DefaultShader . java to ensure vertexMask reflects the
deleted the Tls12SocketFactory . java file to remove unused utility class to streamline the codebase
refactor texbibentriesresolver to use a stream to improve code readability and maintainability by reducing duplication
added a method to check if the RObolectric legacy mode is enabled in ResourcesTest . java to ensure compatibility with Robolectric
added a check for FirebirdDatabase in DoubleType . java to ensure correct data type is returned for Firebird databases
added null checks for dataSource and transactionManager in DefaultBatchConfigurer . java to avoid potential NullPointerExceptions when dataSource is null
added a new file ` @ API ` for the ` @ API ` package in ` org . terasology . unittest . stubs `
updated test timeouts from " www . google . com " to " ping - c 5 127 . 0 . 1 " in OutputStreamTest . java
[ java ] use try - with - resources instead of try - with - resources
updated ` TermScorer ` to include ` scoreMode . needsScores ( ) ` when ` postingsEnum . needsScores ( )
updated DataflowMetrics to use firstNonNull for metric updates in DataflowMetrics . java and updated test cases in DataflowMetricsTest . java to
cloudstack - 10225 : add nic api to accountdatacentervirtualsearch ( # 11717 )
refactor DynamicPartitionPruner to use a new method ` findTargetOi ` for better clarity and maintainability to improve code readability and
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` , ` ActionExecutionStep ` , and corresponding tests in ` ActionExecutionStep `
added logic to set the selection interval for the selected row in ThrustCurveMotorSelectionPanel to ensure that the selected row is only set when
use assertthrowsarraystoreexception instead of assertthrowsarraystoreexception
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future updates
added a new ` name ` parameter and a ` userAgent ` parameter in ` HttpClientBuilder ` and ` HttpClientConfiguration ` to allow customizable user agent
refactor session restoration logic to use a new method ` restore ` to improve code readability and maintainability by encapsulating session creation logic
updated assertions in IssueTest . java and Reporter . java to use IdentityHashMap instead of HashSet in IssueTest . java and Reporter . java to improve test
added a null check for the file ' s content type in ByteArrayDataSource to avoid potential NullPointerExceptions when the content type is null
[ terasology ] add activationrequestdenied ( ) to activationrequest . getactivationid ( ) .
refactor code to use @ SuppressWarnings ( " serial " ) instead of ` @ Override ` to improve code readability and maintainability
added ` updateTaskViewsSnapshotRadius ` method to ` RecentsView ` and modified the ` updateSnapshotRadius ` method in ` TaskView `
added logging for swagger generation in StaticMicroserviceVersions . java to improve debugging and traceability of swagger generation process
changed the return type of ` put ` from ` void ` to ` int ` in ` ArrayMap . java ` to provide access to the index
updated KafkaContainerCluster and KafkaContainerCluster to use Duration instead of Startables to improve performance and ensure proper initialization of Kafka container clusters
add retry flag to defaultmqpushconsumerimpl . getmessagebackasnormalmessage ( ) in case of failure
updated header handling logic in StaticServerHttpHeadersWriter and added a new test for handling case - sensitive headers to ensure proper handling of header written with
added package access check in EventListenerList . java to enhance security by ensuring proper package access checks during class loading
added custom adapter functionality to the ApplicationsFragment and created a new CustomAdapter class to enhance user experience by allowing custom adapters in the application list
added additional parameters to the applyIcon method in KeyboardQuickSwitchTaskView . java to ensure proper handling of null task views
replaced ` DownloadStateCursor ` with ` try - with - resources ` in ` DownloadTracker ` and ` DownloadManager ` classes to improve resource management
refactor insert statement handling in BaseSqmToSqlAstConverter . java to improve code readability and maintainability
added JUnit @ Test annotations to HibernateCursorItemReaderIntegrationTests and HibernateCursorItemReaderStatefulIntegrationTests to enhance test coverage and
added a new ` Poller ` class and modified ` DataInputStreamWithTimeout ` to use ` Future < Boolean > ` instead of ` byte ` to
added ENABLED _ TS option to VersionTargetGraphMode and modified VersionedTargetGraphCache to return ToposortBasedDepsAwareExecutor to
refactor UpgradeCatalog150 class to improve code organization to enhance maintainability and readability of the code
rename ` testNet3 ` to ` oldTestNet ` in multiple classes to improve clarity and consistency in naming conventions
do n ' t update if there be only one geo
updated OnboardingPrefs handling in AppsDividerView . java and added null check for onboarding preferences in ActivityContext . java to
refactor HdfsDirectory to use BufferedIndexOutput instead of IndexOutput to improve resource management and error handling in HdfsDirectory
added a condition to set the clipping rectangle based on whether the clipping path is done to ensure proper clipping behavior when the clipping path is not completed
refactor localAddress assignment logic in SocketChannelImpl . java to improve readability and maintainability of the code
updated the ` addToRow ` method in ` TemplateTransformer ` and added a new ` addToRow ` method in ` TestTemplateTransformer ` to improve
added a method ` isWindows ( ) ` to check if the operating system is Windows and updated file rename logic in ` Wallet . java `
updated ALPHABET and ASTERISK _ ENCODING from ALPHABET [ ] to CHECK _ CHARACTER _ CHARACTER _
added checks for executed types and casting in NodeGenFactory . java to improve type safety and ensure correct type casting for executed types
refactored error handling in IndexingChain . java to improve readability and maintainability to enhance code readability and maintainability
fix ( sql ) : fix timestamp in where clause
removed unnecessary conditional checks for postedRunnableStacktraces in LwjglCanvas . java to improve code readability and maintainability
updated the description for the default storage URL in AbstractGCSProcessor . java to clarify the purpose of the default storage URL in the documentation
replace assertions with waitUntilInitialized in ConnectionPoolTest . java to improve readability and maintainability of the code
updated directory retrieval parameters in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to include " single " to ensure compatibility with new directory configurations
replace size ( ) with filterCount ( ) in FaultTolerantChunkProcessor and FaultTolerantChunkProcessor to improve clarity and
updated method signatures and import statements in FileWithTabs . java and T4994049 . java to improve code readability and maintainability by
refactor conditional checks in ConsoleReaderTest . java to simplify conditional checks to improve code readability and maintainability
updated the condition in GetFeedbackSessionsAction . java for better readability to improve code readability and maintainability
updated selection logic in AllAppsView . java to correct the calculation for positioning to improve accuracy of positioning in the user interface
bugfix # 22448 - remove unnecessary call to ` ti . initialize ( true ) `
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog , DbConnectionDialog , and ExportPanel classes to enhance user experience
replaced the use of ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` across multiple classes to improve performance by reducing the number of
updated SegmentSize handling in DocumentsWriter and added a new test for no documents indexing in TestIndexWriter to improve indexing accuracy and ensure correct
added a check for the " dvert " field in ArmatureModifier . java to ensure correct data retrieval for the " dvert " field
refactor FileDisplayActivity class to improve code organization to enhance maintainability and readability of the code
added a ` fillInStackTrace ( ) ` method to the ` ApplySpecialization ` class to avoid filling in stack traces to improve error handling
updated the method to return the average line height in LabelPainter . java to improve accuracy in calculating line heights
replaced instances of ` INSTANCE ` with ` DisplayHolder ` in ` RecentsAnimationDeviceState ` and ` RotationTouchHelper ` to enhance flexibility
refactor quotes handling in AVA . java for better readability and maintainability to improve code clarity and ensure proper handling of quotes in strings
updated tracing logic in ServletHandlerInterceptor to use IdConversion . convertToLong instead of Long . valueOf for spanId to improve code readability and ensure
added a new test method ` testSmall ` and ` testBig ` to ` ServerDatagramConnectorTest ` and modified the ` ServerDatagram
updated assertion in TestSqlEntityProcessorDelta . java for consistency to improve readability and maintainability of the code
refactor Cache class to improve code readability to enhance maintainability and facilitate future updates
updated variable names from " email _ verified " to " ev " in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in naming conventions
replaced the ` doBefore ` method with ` doBefore ` in ` TestUnifiedHighlighterTermVec . java ` to simplify the method signature and
added a main method to the GcodeTable class and modified the GcodeTable class to implement a main method to enhance user interface by providing a
updated the WEBAPP _ CONNECT _ TIMEOUT constant from WEBAPP _ CONNECT _ TIMEOUT to cfg . getConnectTimeout ( )
updated error logging in multiple Java files to improve type safety and clarity to enhance code readability and maintainability
refactor TestMediaService class to improve code organization to enhance maintainability and readability of the code
removed the static string HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK from Messages . java to clean up the code
add a new file MarketsPrintTool . java to demonstrate trading functionality for BSQ , BTC , BTC , BTC , and B
added validation for hostname compliant components in EndpointAddressInterceptor to ensure that only valid component names do not contain alphanumeric characters in account IDs
added ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods to ` AccountProxy ` , ` HttpAccount ` , and ` Http
refactor ServerSpanThreadBinder class to improve code readability to enhance maintainability and facilitate future updates
update block bounds in BulletPhysics and BlockItemSystem to use userData instead of userPointer to improve accuracy and accuracy of block bounds
updated the builder to include " the _ geom " and " number " in Csv2Shape . java to improve clarity and consistency in naming conventions
replaced calls to callGasWord with gasCost in VM . java and Program . java to streamline code by eliminating unused imports
refactor Parameters class to improve code readability to enhance maintainability and facilitate future updates
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot . java to enable handling of null values in pie plots
refactor bundle loading logic in ResourceBundle . java to improve code readability and maintainability to enhance maintainability and reduce boilerplate code
updated the variable name from ' _ ' to ' - ' in TaggedPdfReaderTool . java to ensure consistency in naming conventions
[ hotfix ] [ action ] add a method to check if an action be allow on editing .
added userModified property to LoginSamlAuthenticationProvider . java to enable user modifications in the authentication provider
added a new file TestSealedObjectNull . java with a test class TestSealedObjectNull . java to verify the behavior of sealed objects with null
renamed the ` onOpen ` method to ` setResponse ` and ` setResponse ` in ` ConnectPromise ` and ` WebSocketClientConnection ` to
added a static final Set < Material > for SNOW in BlockEventListener . java and modified conditional checks in PlotSquared . platform to ensure compatibility with
added a ` id ` parameter to the ` CryptsyAdapters ` and ` CryptsyPublicTrade ` class to track trade
added error handling for closing HMS connections in HiveStreamingConnection . java to ensure proper resource management and prevent potential memory leaks
bugfix : use random seed instead of system . currentTimeMillis ( ) for seed seed .
added device profile for Nexus 5 and Nexus 5 in DynamicGrid . java to enhance the visual representation of the device in the grid
added null checks for connection objects in FlowableRefCount , ObservableRefCount , and ObservableRefCount tests in ObservableRefCount , and ObservableRef
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to utilize the
added WHITESPACE _ AROUND _ TEXTUAL _ OP support and updated formatting logic in the FormatVisitor and TokenFormatter classes to enhance formatting capabilities for
added length checks for files in SaveTask and updated related test cases in SaveTaskTest to ensure proper handling of empty and non - empty files and
added synchronized annotations to multiple methods in MLogWriter . java to ensure thread safety during concurrent operations
[ log4j2 - 1387 ] fix smtpmanager . add ( ) to use mutablelogevent . isincludelocation ( )
updated the PADDING constant from LengthLike to NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure compatibility with non - negative lengths
use createcontext ( ) instead of createuser ( headers ) instead of createuser ( headers )
refactor trap handling logic in WorldBuilder . java and SootWorldBuilder . java to improve code readability and maintainability by encaps
updated JUnitRunner and AndroidPlatformTarget to use System . getProperty ( " line . separator " ) instead of System . getProperty ( " line .
updated cache size from 16 to 8 in OmniNotes . java to optimize memory usage for better performance
updated condition checks in InvocationStageTrace and TestInvocationPublishModelFactory to include a condition for start and start in InvocationStageTrace . java to improve
added a try - catch block for NullPointerException in ProvKeyManagerFactorySpi . java to improve robustness by handling potential NullPointerExceptions
refactor UpstreamCheckUtilsTest to use a volatile port variable to improve code readability and maintainability by centralizing port management
updated variable names from ` panelDim ` to ` otherParent ` in ` DockManagerW . java ` and ` sph . put ` to
added support for OpenGL shader extensions in GLRenderer and GLRenderer to ensure compatibility with OpenGL 43 and OpenGL environments
refactor PopulatorContext class to improve code readability to enhance maintainability and facilitate future updates
do n ' t attempt to save all notification if the project do not exist
refactor ZQLJobManager to use IOUtils for encoding to improve code readability and maintainability by centralizing character encoding handling
updated the condition in IkStepDefinition to check for empty arguments before accessing it to ensure that the argument array is not empty before proceeding
added PREFIX for OSSO header handling in FakeOSSOHeaderDecoder . java to improve maintainability and readability of the code
added @ Deprecated annotations to GenerateJavaSources and JavaGeneratorMojo classes to indicate that the suffix strategy is outdated and should no longer be used
updated debug logging statements in DerbyDatabase . java to include sysinfo information to improve debugging by providing clearer information about the version check
added timeout annotations and modified assertions in CepEspTest and CepJavaTypeTest to improve test reliability and ensure proper timeout handling during execution
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to simplify code and improve readability
updated the handling of the " ROLLBACK " operation in HubUpdater . java to handle cases where the " ROLLBACK " operation
added new constants for IBM J9 VM and Eclipse OpenJ9 VM and Eclipse OpenJ9 VM in Constants . java and TestD
updated logging message in FontFamily . java and added a new DebugFonts . java file to improve clarity of debug font requests and introduce a new
updated import statements in ALPNNegotiationTest . java and added a check for HTTP version in NegotiatingServerConnectionFactory . java to ensure
added RateControl import in MaxConcurrentStreamsTest . java and set rate control in MaxConcurrentStreamsTest . java to ensure consistent rate control
added a new file ` Test6741426 . java ` that implements a JComboBox and JTextField with a paint method to implement a test class for
updated error message in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of error messages for better debugging
added null checks for dbMgdPath in HMSHandler . java to ensure robustness by preventing potential NullPointerExceptions
added package to s3CopyObjectRequest . java to organize S3CopyObjectRequest . java to improve organization and clarity of the codebase
replaced ` accentColor ` with ` viewThemeUtils . files . themeCategory ` in ` SettingsActivity . java ` to simplify method signatures and improve
updated error message from " folder path ' / temp1 ' to " fileAtRoot " in TemporaryFolderUsageTest . java to improve clarity
replaced ` MAP _ TYPE _ INFORMATION ` with ` COLLECTION _ TYPE _ INFORMATION ` in ` MappingMongoConverter . java ` to improve
added check for null address in clientnetworkconfig . getnetworkconfig ( )
added a new method " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate verification by including the
[ hotfix ] [ runtime ] change return type of compute ( ) to return int instead of void
added a condition to check if the popup is hidden before setting the mode based on the popup state to ensure the menu is only displayed when the popup
modified memory ttf data stream handling in MemoryTTFDataStream . java and added a new test class TestMemoryTTFDataStream . java
added a new file ` FinalizerInfoTest . java ` with a test class ` FinalizerInfoTest . java ` to verify the behavior of
updated ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to use ` doOnNext ` instead of ` map ` to improve
[ hotfix ] [ settlementman ] fix potential nullpointerexception in compensation proposal .
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
updated byte array size from 1000000 to 1000 in BatchValidateSignContractTest . java to accommodate larger data sizes
change method name from ` setmaxinboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
updated query replacement logic in RetweetActivity and Search classes to ensure correct query formatting for better user experience
removed the conditional check for rebalance in SimulatorDiscoverer . java to simplify the code and improve readability
added import methods to YubiKeyAccountRegistryEndpoint and updated corresponding test cases in YubiKeyAccountRegistryEndpoint to enhance account management functionality and improve
refactor shader program creation to use materialUrn instead of materialName to improve code readability and maintainability by reducing redundancy
added null checks for cnt before processing to avoid potential NullPointerExceptions when cnt is null
refactor AbiWriterProtocol class to improve code readability to enhance maintainability and facilitate future updates
added null check for subName in HierarchyBase . java to avoid potential NullPointerException when subName is null
updated the DATA _ FLAGS from IMMOBIBILE to GRAVITY in EntityItem . java to ensure the data flag reflects the
refactor conditional checks in CustomExpression . java to improve readability and maintainability to enhance code readability and ensure proper handling of custom expressions
removed the request from the requestBlindVoteListFromNetwork method in VoteResultService . java to simplify the request process and improve code clarity
added a new test method ` test4 ` to ` PostgresTest . java ` to verify the behavior of ` PostgresTest . java `
updated substring extraction logic in SubtitleUtils and RemoteUtil classes to ensure proper handling of special characters in subtitles
updated line separator handling in DefaultJavaPrettyPrinter and CommentTest classes to improve code readability and maintainability by centralizing line separators
truffle : use compilationfinal to avoid concurrentmodificationexception in singleimplementor .
added null checks for ` excludeSet ` in ` SimpleFacets . java ` and updated test cases in ` SimpleFacetsTest . java `
fix bug in thinghelper . getthings ( ) . addthing ( thing ) . addthing ( thing )
updated error message in Ktab . java to provide clearer error messages when a command must be provided to improve user feedback by providing clearer error
added a check for the existence of the outFile in ANGLELoader . java to ensure that the file exists before proceeding to avoid potential errors
added date parsing logic in DateConverter and updated test cases in DateConverterTest to improve date parsing functionality and ensure correct parsing of date strings
added tests for post retrieval and querying in SpringDataJPALockTest , PostRepository , and PostRepository classes to ensure that the Post repository
changed the variable ` canAccessDbaRecycleBin ` from ` boolean canAccessDbaRecycleBin ` to ` Boolean canAccessDb
added a static instance of SimpleClientHttpRequestFactory in ClientRegistrations . java to enable the use of SimpleClientHttpRequestFactory for client requests
updated SourceTest and Source . java files to include non - cannonical file names to ensure correct file handling and provide clearer error messages for file
remove graalvm version property from defaulthomefinder . java
added validation logic for access token validity and refresh token validity in ClientAdminBootstrap . java to ensure proper validation of token validity and refresh token validity
updated return statement in Scene . java to use Options . v ( ) instead of Options . v ( ) to ensure compatibility with newer Android API
refactor method calls in PropertyPlaceholderHelper . java for consistency and clarity to improve code readability and maintainability
updated the certificate fingerprint format in the error message in Resources . java to ensure compatibility with the latest security standards
added synchronization and synchronization for collections in ZkSolrClientTest . java to improve reliability of collection processing in concurrent scenarios
removed the import of BigInteger from MongoMappingContext . java to streamline the code by eliminating unnecessary dependencies
added a condition to check if the button text matches the view in HomeFragment to ensure that the button is only shown when the button is the same
added a conditional check for MEncoderNoOutOfSync in MEncoderVideo . java to ensure proper handling of MEncoder configurations based on configuration settings
updated default event loop threads from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to ensure that event loop threads do not exceed
changed access modifiers of ` CountMin4 ` , ` Frequency ` , and ` PeriodicResetCountMin4 ` classes to protected to allow
replaced UnsupportedOperationException with FileFloatSource in ExternalFileField . java and added a new ` ExternalFileFieldSortTest ` method in ` ExternalFile
updated exception message from " Invalid URL " to " Connection error " in DoiFetcher . java to improve clarity of error reporting for connection issues
updated event handling in OpenRocketSaver , DocumentConfig , and FlightDataBranchHandler to include source ID in event processing to improve event processing
changed the visibility of the check method from private to protected to allow subclass access to the check method for better encapsulation
added synchronization handling for SynchronizeFileOperation in FileActivity . java to improve user experience by providing feedback during file synchronization operations
updated URI construction in ThumbnailsCacheManager . java to use URLEncoder for URL encoding to ensure proper URL encoding and prevent potential encoding issues
added a null check for the " cn1 $ infinite " property in InfiniteContainer . java to prevent potential null pointer exceptions during initialization
updated the calculation of the total value from 0 to 1 in IntHashSet . java to optimize memory usage and improve performance
added a lock timeout check in FeedRefreshUpdater . java to handle locked entries to improve error handling and provide clearer feedback during entry updates
refactor handling of ACE flags in SolarisAclFileAttributeView and Misc classes to improve code readability and maintainability
refactor edge handling in LatLonTree . java to improve code readability and maintainability by reducing duplication
added IOUtils import and finally block in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
updated comment string formatting in BibtexParser . java to ensure proper handling of special characters in comment output
added strict parameter handling in ` Main . java ` and corresponding tests in ` Main . java ` and ` MainTest . java ` to ensure proper
fix ( validation ) : add default constraint to default value ( )
camel - 15836 - camel - http : use http4 instead of camel - http4
added a call to waitForThingsToLevelOut ( 30000 ) in TestCloudPivotFacet . java to improve test reliability by allowing more time for
removed unnecessary check for integer and long lengths in UBJsonWriter . java to simplify code and improve readability
refactor ApplicationTest class to improve code readability to enhance maintainability and facilitate future development
replaced String with StringBuffer for string concatenation in ConnectionFactoryImpl . java to improve performance and readability of the code
rename ` Type ` to ` RoboType ` across multiple classes to improve clarity and consistency in naming conventions across the codebase
[ java ] return action . ABORT when dispatch be complete .
added cache key and lookup functionality in EntityProcessorBase . java and updated test cases in TestCachedSqlEntityProcessor . java and TestCachedSqlEntity
added a new file PutfieldError . java that throws IncompatibleClassChangeError to demonstrate the usage of IncompatibleClassChangeError to verify that
updated the ` triggerConnect ` method to use ` translate ` for address translation in ` AwsAddressTranslator ` to improve code readability and maintain
hbase - 16297 memtable . getflushaftermins ( ) do n ' t log flush after flush after flush
updated Space constructors to include SINGLE _ SPACE in multiple classes to ensure compatibility with the new space structure in the codebase
removed the ` encodedLength ( ) ` method from the ` Flyweight . java ` method to simplify the method signature and improve readability
refactor TestMethodResultMapBuilder class implementation to improve code readability and maintainability
added handling for " java / lang . Integer " methods in FindNullDeref . java to improve error handling and prevent potential runtime exceptions
[ hotfix ] [ state ] fix npe in tasklocalstatestoreimpl
updated return values for hours and hours in Utils . java to improve clarity and accuracy of time representation in the application
updated conditional checks for ` FromDeepShortcutView ` and ` FloatingIconView ` in ` Utilities ` and ` FloatingIconView ` to
replaced ` JwtClaimValidator ` with ` JwtClaimValidator ` in ` JwtClaimValidator ` and added a new test for issuer URL
updated method names from ` buyQuickRate ` and ` getSellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
added a new file ` CoverageConfig . java ` and modified class name retrieval in ` CoverageController . java ` to improve code organization and
added a check to ensure the event bus is registered before registering theSticky method to avoid potential NullPointerExceptions when the event bus is not registered
refactor string normalization logic in NormalizerBase . java for improved readability to enhance code maintainability and ensure consistent normalization behavior
[ hotfix ] [ runtime ] fix typo in jobcoordinationservice . ismigrationallowed ( )
updated SpillableGroupByIT and NoOpStatsCollectorIT to handle SQLException and added a new test case in NoOpStatsCollectorIT to
camel - 14263 : camel - Cometd - delivertd - producer - consumer : add @ after annotation to camel - core
updated HR and CELLPADDING attributes in HtmlTag and OtherTagsTest classes to ensure compatibility with newer API standards
added a line to write the HTML content in HtmlCoreReport . java to enhance the readability of the HTML report output
updated ramBytesUsed calculation to handle null scores to improve robustness by preventing potential NullPointerExceptions when scores are null
added a new ` StringHolder ` class and updated ` CustomTypeAdaptersTest ` to use ` StringHolder ` and ` StringHolderTypeAdapter
added extraData setting to MergeCoordinator and a corresponding test in MergeCoordinatorTest to ensure proper handling of extra data from mining parameters
added a static final map for parsing and output files in DependencyParser . java to improve memory efficiency and maintainability of the code
refactor PathParamServerEndpointConfig to improve clarity and maintainability to enhance code readability and facilitate future updates
[ hotfix ] [ table - common ] change defaultmigrationaddresscompilationdelay from 60000 to 60000
rename ` attach ` method to ` partOrList ` in ` RestClientRequest ` , ` RestClientRequestImpl ` , and ` RestClient
updated resource paths in TwitterBootstrapUtils . java for consistency and clarity to improve code readability and maintainability by standardizing resource naming conventions
removed the basicCategory method from SpanishTreebankLanguagePack . java to simplify the code and improve readability
added ` load ` method to ` AbstractEntityLoader ` , ` EntityLoader ` , and ` UniqueEntityLoader ` classes , and updated related methods
hbase - 20297 regionserverflushtableproceduremanager : fix npe in regionserverflushtableproceduremanager and regionserversnapshot
added a check for width and height in PGraphicsJava2D . java to ensure proper resize behavior when width and height are zero
[ hotfix ] fix checkstyle violation in hikaripool . fillpool ( )
updated the ` assureMatchVersion ( ) ` method to use ` Version . LATEST ` instead of ` assureMatchVersion ( ) ` to ensure
fix : add defaultmethodclient interface to make it easy to get the default method .
add a check for the LA character in the DRLParser . java file to ensure correct parsing behavior for different lexer types
refactor GuavaOptionalSubject , IterableOfProtosSubject , and ProtoSubject classes to improve code organization and maintainability
added a check for invalid payload length in WsFrameBase . java to ensure proper error handling for invalid payload lengths
refactored package structure for PublishSubscribeChannel and PublishSubscribeChannel to reflect the new package structure to improve organization and clarity of the codebase
updated executionId from String to Long in multiple classes to ensure compatibility with the latest Hadoop configurations
added width and height values to the digest update methods in ImageProcessor . java to ensure proper handling of byte values during image processing
removed log statement from SolrConfig . java and added imports in SolrConfigHandler . java and SolrConfigHandler . java to streamline logging and
updated the delayUntil variable from 24 seconds to 3 seconds in FileSyncAdapter . java to optimize synchronization timing for better performance
updated the method call from ` getLastModifiedTime ` to ` getLastModifiedTime ` in ` SegmentV1V2ToV3FormatConverterTest
refactor ` addPathToMTree ` method to use ` Path ` instead of ` String ` to improve code readability and maintainability by
updated URL handling in DefaultPackageScanClassResolver and added URI handling in DefaultPackageScanClassResolverTest to improve URL handling and provide clearer error
[ hotfix ] [ table - common ] [ table - planner - blink ] [ table - planner - blink ] add timestamp
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource . java ` to provide a mechanism to retrieve the principal and
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions
replaced Dialogs . autoSuggestDialog with a cached list of custom filenames in GenericViewFragment . java to improve code readability and maintainability
added a new test method ` testNewput ` to ` TxInputUtilTest ` and updated assertions in ` StoreAPITest ` to ensure that
updated the method name from ` collectionName ` to ` collectionName ` in ` Stream ` and ` ReadDbObjectCallback ` to ensure consistency in
updated zoom calculation logic in MapOverviewImageMouseHandler . java for improved clarity to enhance code readability and maintainability by using more descriptive
added Similarity parameter to KNearestNeighborClassifier and updated related tests in ClassificationTestBase and ClassificationTestBase to enhance classification accuracy by allowing different similarity
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing and improve code clarity
updated variable name from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to ensure proper retrieval of
refactor package - info . java files for improved clarity to enhance code readability and maintainability
updated MTU request handling in ShadowBluetoothGattTest and ShadowBluetoothGatt classes to ensure correct handling of MTU requests
refactor TestPayloadNameRequestWrapper to use createServletOutputStream ( ) instead of createServletInputStream ( ) to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService . java to improve error handling and logging for unsatisfied links
replace HashMap with ConcurrentHashMap for mProcessingChains in ChannelProcessingManager . java to improve thread safety and performance in concurrent environments
updated user input messages from " grouped " to " grouped " in the resources _ ja . java file to improve user understanding of grouped
updated the condition for ` size > 1 ` in ` JDBCTypeMapping ` and updated corresponding test cases in ` JDBCTypeMappingTest ` to ensure
added synchronized block to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal operations
replaced ` isScreenReaderActive ` with ` AccessibilityStateTester ` and refactored the ` isScreenReaderActive ` method to improve code
updated command behavior checks to includeSIDE _ NAVIGATION in MenuBar . java and SideMenuBar . java to improve code readability and maintain
replaced Disposable with Disposable for connection handling in PoloniexManualExample . java and added error handling in WampStreamingService . java to improve
added validation for energy limit in UpdateSettingForEnergyLimitContractActuator and updated error messages in UpdateSettingForEnergyLimitContractActuator
refactor URL handling in PostmanJsonBuilder and UrlBean classes to improve clarity and maintainability of the code
camel - 15836 - camel - soap - xml - xml - xml : add namespaceprefixref getter and setter to soapjaxbdataformat
updated assertions in TestRange . java to use a static final long instead of a hardcoded value to improve code readability and maintainability by
added security checks for the JettySolrRunner in BasicAuthIntegrationTest and ZkStateReader to ensure proper security status verification when no server is found
added PriceFeed parameter to TradesChartsViewModel and updated TradesChartsViewModel to include a priceFeed parameter to enhance the functionality by allowing
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve clarity and maintainability of configuration management
updated the handling of the ` from ` and ` end ` variable in ` NativeString . java ` to improve code readability and maintainability by
added file downloading functionality in FileDownloader . java to enable file downloading functionality for improved user experience
updated the try - with - resources method in MappedRawLog . java to ensure proper resource management and avoid potential memory leaks
added a new method ` checkIfRegistryRunning ` to check if the registry is running and added a retry method in ` FileUtils . java ` to
replaced import statements with componentPresetDao . startLoading ( ) in EditTest . java and Quick3dMain . java and TextureTest . java
added @ SuppressWarnings ( " rawtypes " ) annotations to multiple Java files to suppress unchecked warnings and improve code clarity
added a null check for instances in TraceFeignContext . java to avoid potential NullPointerExceptions when instances are null
added support for setting isolation level to TRANSACTION _ READ _ COMMITTED or TRANSACTION _ COMMITTED in SQLExceptionCode and PhoenixDatabaseMetaData to
added a ` DefaultTransactionAttribute ` method to ` AbstractStepFactoryBean ` , ` ItemOrientedStep ` , and ` ItemOrient
replaced ` CasClient ` with ` DirectCasClient ` and updated ` CasManagementSecurityInterceptor ` to extend ` DirectCasClient ` to
updated menu item visibility handling in ListFragment and NavigationDrawerFragment to improve user experience by providing clearer menu items
updated method names from ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation ` , ` FileDisplayActivity ` , and ` observe
pdfbox - 4071 : do n ' t need to be cast to ` ` p ' ' to ` ` a ' ' a suggest by
updated the ` onFontSizeChanged ` method to use ` COMPLEX _ UNIT _ PX ` instead of ` size ` in ` TerminalView
added a check for valid fact before modifying the fact in ConstantAnalysis . java to ensure that the fact is only modified if the fact is valid
refactor DistBuildTargetGraphCodec , ConvertingPipeline , and VisibilityPatternParser classes to improve code organization and maintainability
updated the return statement in ArrayListSpanAccumulator to return a new ArrayList instance instead of a new ArrayList instance to improve performance by avoiding unnecessary object creation
refactor database change log validation logic in Liquibase . java to improve code readability and maintainability
added a ` setRevision ` method to ` MicroserviceVersions ` and updated its usage in ` InstanceCacheChecker ` and ` TestInstanceCacheChecker
refactor foreign key and index retrieval logic in AbstractRetriever and TableRetriever classes to improve readability and maintainability of the code
camel - 15836 - camel - aws2 - s3 : add unit test for aws2 - s3 component configuration
updated method signatures in BitstampAccountService and added a new method ` getBitstampUserTransactions ` in ` BitstampAccountServiceRaw `
added error handling for NoSuchComponentException in BlueprintContainerRegistry . java to improve robustness by handling potential NoSuchComponentException during component retrieval
use pushtoken instead of void to allow push ( ) to be enable by default
refactor LegacyAddressTest to use BufferedReader for reading input files to improve readability and maintainability of the test code
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from other packages
added a new method ` setupPushWarning ( ) ` to ` DrawerActivity ` and modified Snackbar initialization in ` NotificationsActivity `
added logging for channel closure and improved exception handling in NettyAsyncHttpProvider . java to ensure proper resource management and prevent potential resource leaks
updated null checks and string checks in LdapPasswordPolicyEnforcer . java to improve code readability and maintainability
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added a @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to issue PHOENIX - 2840
nifi - 11486 : add timezone adapter to the AboutDTO class to allow customization of the NiFi instance
updated assertions in Splitter . java and StorageService . java to improve code clarity and maintainability by using a more descriptive variable name
removed unnecessary try - catch blocks in BeanContextSupport . java to simplify code and improve readability
removed redundant synchronized block from activeCircuits list in CircuitManagerImpl . java and ConnectionCacheImpl . java to improve performance by reducing unnecessary synchronization
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using IllegalStateException instead of GdxRuntimeException
flume - 158 : add sink sink to sinkrunner and sinkrunner
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve logging granularity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class to improve code organization to enhance maintainability and readability of the code
[ geogebra ] make pointlength ( ) int int instead of double
updated the parameter name from ` source ` to ` source ` in ` CasRiskBasedAuthenticationEvaluationStartedEvent ` to improve code readability and
refactor connection handling in SchemaCrawlerMain and Executable classes to ensure proper resource management and prevent potential memory leaks
use tlsv1 . 2 instead of tlsv1 . 2
updated exception messages from " labels " to " metadata buffer " in CountersManager . java to clarify the purpose of the exception message
refactor audio stop logic in MediaManager . java to improve code readability and maintainability
updated debug logging statements in HttpConnection . java to simplify code and improve readability
added a ` isTransient ( ) ` method to ` JpaPersistentPropertyImpl ` and modified ` JpaPersistentPropertyImplUnitTests ` to
updated assertions in UpgradeResourceProviderTest . java to include HDP - 2 . 0 and HDP - 2 . 0 stack IDs to
fix trufflevm . eval ( ) to return an object instead of a symbol .
changed the visibility of the isBinaryType method from private to public in SampleResult and Proxy classes to allow access to the ` isBinaryType `
updated TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from " parition . max
remove unused findproblem ( ) method in javaeditor and javaproblem . java
[ hotfix ] [ databuffer ] remove default _ offheap from dictionaryindexconfig
updated line separators in TableWriterTest to use LINE _ SEPARATOR instead of LINE _ SEPARATOR to ensure consistent formatting across different operating
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added fields ` ownsTexture ` and ` ownsTexture ` and ` ownsTexture ` to ` ParticleEffect ` and ` ParticleEffect ` to
updated authentication parameters in HiveConf . java to include additional LDAP parameters to enhance authentication capabilities for LDAP queries
[ hotfix ] [ datacatalog ] fix checkstyle violation in datacatalogsearch
refactor InputMethodManager initialization to use Context for better context handling to improve code readability and maintainability by using a more descriptive context
added a new test method ` MAP _ OF _ STRING _ TO _ MAP _ OF _ STRING _ TO _ MAP _ OF _ STRING _ TO
updated file size calculation from 500 to 50 in TestFileSystem . java to optimize memory usage and improve test reliability
updated error message for Rule M2 . 4 exception in ContentTypeManager . java to improve clarity of error messages for better debugging
refactored ` dropSequences ` methods to implement ` MigrationFailedException ` and ` MigrationFailedException ` across multiple database - related classes to improve code
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
updated the variable name from ` v ` to ` f ` in ` binaryField . createField ` in ` DocumentBuilder . java ` to ensure the
[ freeplane ] fix hierarchicalicons . getchildren ( ) to work with logicalstylemodel .
added a new test method ` findOneAfterUpsertForNonExistingObject ` to ` MongoTemplateTests ` for upserting non - existing objects to ensure
hbase - 13232 fix the bug in hfileblockindex and hfileblockindex
added a new method ` recordLaunch ` to ` AppsCustomizePagedView ` , ` Launcher ` , and ` Launcher `
added createGraphics ( ) method in JavaSEPort . java to ensure proper resource management and prevent memory leaks
fix instructorfeedbackresultspagedata . createteamandparticipant ( ) to use bundle . getteammembersfromroster
added a check for zero or zero inventory IDs in Inventory . java and added a new test for ID generation in InventoryTest . java to ensure
added a conditional check for the found variable in ConfigDescriptionRegistry . java to avoid potential null pointer exceptions
updated method parameters in ReloadableJavaParserVisitor and ReloadableJava8ParserVisitor for consistency to improve code readability and maintainability by
added a null check for blended tiles in TileMapRenderer and TiledLoader to ensure blended tiles are properly initialized to avoid potential NullPointerException
removed the ` @ Classes ` annotation from the ` Probe . java ` annotation in ` Probe . java ` to streamline the code
updated the ` getArea ` method in ` IfcTools2D . java ` to use ` Math . abs ` instead of ` null `
replaced ` lockOnSync ` with ` lockOnSync ` and ` throttleRate ` in ` Throttler . java ` to improve clarity and
fix eventbus . addactions ( ) and eventbus . addactions ( ) . addactions ( )
updated ZkController initialization from 1000 to TIMEOUT in ZkControllerTest . java to allow more time for the ZkController initialization
added a new test method ` passcode _ with _ client _ parameters ` in ` TokenMvcMockTests . java ` to verify the behavior of
added length filtering and length filtering in TestRandomChains . java to ensure correct behavior of constructors in tests
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to clean up the code and improve readability
update llvm8686 _ 64bitvastart to use integer . tounsignedlong ( ) instead of integer . tounsignedlong ( )
replaced ` btCollisionObjectArray ` with ` btCollisionObject ` and ` btRigidBody ` in multiple classes to improve
added a new property ` BUILD _ COPYRIGHT ` and updated related URLs in ` AboutDialog . java ` and ` AboutDialog .
[ hz - 24187 ] [ client ] add getlocalizedobjectinfo ( ) method to JetClientInstanceImpl and add test
added print statements for components , finCount , and inertia , and expMOI _ tr in FinSet . java and MassCalculatorTest
updated memory pool size from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to improve memory management by using
updated exception handling in StandaloneSchemaFetcher , CreateAlignedTimeSeriesPlan , and CreateAlignedTimeSeriesPlan classes to improve error handling clarity and ensure
[ btc ] fix validation of btc output
updated JSON input handling in JsonLoaderTest . java to improve JSON parsing accuracy and ensure proper exception handling in tests
updated capacity validation in ObjectSet . java to accommodate larger table sizes to ensure proper handling of large table sizes
updated import statements and added null checks for dataScale in ColumnSnapshotGenerator . java to improve code clarity and ensure proper handling of data scale values
renamed ` @ AddToRuleKey ` and ` @ AddToRuleKey ` to ` @ AddToRuleKey ` and ` @ AddTo
refactor ` FileHelper ` and ` TextHelper ` to use ` SecurityException ` instead of ` String ` in ` FileHelper ` and `
added a new constant StyleWithMultipleAttributes in ShadowThemeTest and updated related tests in ShadowThemeTest to ensure proper handling of multiple attributes in the
fix bug where sheet name do n ' t exist in hssf workbook
updated the tint assignment in ManageAccountsActivity to use elementColor instead of primaryColor to improve code readability and maintainability by using
added null check for replyHandler in DefaultEventBus and updated path resolution logic in DefaultPlatformManager to improve robustness by preventing potential NullPointerExceptions
added ` ` utf8 _ bin ' ' to the ` MariaDbDbmsType ` and ` MySqlDbmsType ` classes to enhance the
added a ` whenType ` method to the ` Tree ` class to enhance type safety and prevent potential ClassCastExceptions
refactor navigation repository to use a new method ` getUserViewDestination ` to improve code readability and maintainability by centralizing destination retrieval logic
updated Response . ok ( MediaType . APPLICATION _ JSON ) to use temporaryRedirect for redirection to ensure proper redirection based on application settings
[ hotfix ] [ kinesis ] [ kinesis ] add validation for non - serializable deserializer
camel - 15836 - camel - jbang - java : fix javadoc warning in camel - java
replaced Thread . sleep ( 2000 ) with a try - finally block in LeaderElectionTest . java to ensure proper resource management and prevent potential memory
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` and ` setIconsAndDimTransitionProgress
added a read method to the ProxyHandler class to improve code readability and maintainability by encapsulating the read method
replace ` BufferUtil . allocate ( 32 ) ` with ` ByteBuffer . allocate ( 32 ) ` in ` ABCASE1 _ 2 . java `
refactor prepareStreamsToUpload method to return a boolean instead of a void to improve code readability and maintainability
updated order comparison logic in AbstractConfigLoader and TestMicroserviceConfigLoader to use Integer . compare instead of Integer . MAX _ VALUE to ensure consistent
added a new file ` PicOfDayAppWidget . java ` that implements the ` pic _ of _ day _ app _ widget ` class to
change default value of ` _ internalLbOfferingId ` from ` Long ` to ` 0L ` in ` InternalLoadBalancerVMManagerImpl `
refactor join condition handling in HiveParserCalcitePlanner to use HiveRelOptUtil for better readability to enhance code maintainability and ensure proper
added @ Deprecated annotations to multiple Java files to indicate that these classes are outdated and should no longer be used
added credentials for the remote jmx user and password in NodeToolCmd . java to enhance security by allowing users to access remote jmx credentials
removed redundant initialization of BytesRef in Stemmer . java to streamline code by eliminating unnecessary initialization
updated layout parameters in AppsCustomizePagedView . java and added a calculation for the number of pages to improve layout responsiveness and
do n ' t show icon for 3d view in ggbapiw .
updated the calculation of rotation coordinates in GcodeRenderer . java to ensure rotation coordinates do not exceed 180 to improve rendering accuracy and prevent potential errors
added WORKSPACE option to the DAEMON command line options and updated workspace directory configuration in TerminalClient . java to enhance user experience by providing
updated the file path from " test - classes / options . apt " to " test - classes / options . html " in CLIManagerTest
updated ScimUtilsTest to include PollutionPreventionExtension and ExtendWith annotations in ScimUtilsTest . java to enhance test reliability
refactor ` confimAccess ` method to use ` Map < String , Object > ` instead of ` ModelAttribute ` to improve type safety and
updated session handling logic in HibernateIT . java to improve test clarity and ensure proper session state management
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of the event bus functionality
refactor MultiPaintEventTest . java for improved test coverage to enhance test coverage for multi - paint events
removed the final modifier from mNewScale assignment in WorkspaceStateTransitionAnimation . java to simplify the code and improve readability
refactor SyncFactory class to improve code readability to enhance maintainability and facilitate future updates
added uniqueKey field information to the ` finfo ` field in ` LukeRequestHandler . java ` to enable tracking of unique keys in the schema
added color handling for stroke and background color in BorderEditor , EditableResources , and EditableResources , and EditableResources classes to enhance color
[ gr - 26186 ] fix checkstyle violation in test
[ hotfix ] [ runtime ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchscheduledtest
added logging statements for pending and resume requests in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes to improve traceability and
added a menu item click listener for recent chats in RecentChatFragment to enhance user experience by providing a visual feedback during the construction process
changed ` InfoDropTarget ` to ` UninstallDropTarget ` and ` UninstallSource ` in ` InfoDropTarget ` and ` Uninstall
replaced ` getTail ( ) ` with ` peek ( ) ` in multiple classes to improve code readability and maintain consistency in naming conventions
updated API URLs and EVENTLOG _ WIKI from " test . wikipedia . org / wiki " to " commonswiki " to ensure
refactor Stmt . java to use a new method ` setIndex ` to improve code readability and maintainability by reducing duplication
replaced ` Collections . Collections . sort ( ) , ` Collections . sort ( ) ` with ` Collections . sort ( ) ` across multiple classes to
added DateTimePatterns and short date formats in FormatData _ hr _ HR . java to enhance date formatting capabilities for better date representation
added a call to clearFocus ( ) in DetailFragment . java to ensure the clicked view reflects the correct focus state
updated selection logic in DescriptionsAdapter , SpinnerLanguagesAdapter , and SpinnerLanguagesAdapter to improve user experience by allowing dynamic selection of language values
updated timezone names from " West Samoa Summer Time " to " WSDT " in multiple languages to ensure accurate representation of time zones in the application
added native methods to register global , weak , and access fields in FastGetField . java to enhance functionality by allowing dynamic access to global and weak
added null - checking for null values in ReflectData and TestReflect classes to ensure proper handling of null values in field schemas
updated the queue size format in SedaBlockWhenFullTest . java to include a timeout value of 1000 to allow more time for the blocking bar
added a null check before remapping RClass in ResourceMerger . java to avoid potential NullPointerException when resourceClass is null
added constructors for HapiFhirDerbyDialect and HapiFhirMariaDBDialect and HapiFhirMariaDB
camel - 15836 - camel - http : fix the issue of camel - http : / / issues . apache . org / activemq /
updated the timeout value from 60000 to 120000 in BasicDistributedZkTest . java to improve test reliability by reducing timeouts
added a test to verify the expected behavior of the count ( * ) method in BaseReservationFlowTest . java to ensure that the query correctly handles
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class to improve code readability to enhance maintainability and facilitate future updates
use document . getFirstelementchild ( ) instead of thymeleaf . dom . NestableNode to avoid classcastexception
[ hotfix ] [ core ] fix lookupstrategyidornone ( ) to return immutablelookupstrategy when enum be not enum
updated metaPortStart and dataPortStart from 40001 to 11001 and added waitingToShutDown method in ClusterEnvBase and ClusterNode
updated log level from warn to info in ELContextCleaner . java to improve logging clarity by providing a more descriptive log message when no property
added a new content type " application / octet - stream " to the WebdavEntry class to ensure proper handling of octet - stream content
added a ` getQueueSize ( ) ` method to ` LazyTraceThreadPoolTaskExecutor ` and created a new test class ` LazyTraceThreadPoolTask
[ geot - 4680 ] skip distance operation if distance be less than min distance .
changed the variable name from ` required ` to ` requiredLabel ` in ` AbstractUITag ` to improve clarity and consistency in naming conventions
removed the next ( ) method from PurgingPartitionIterator . java to simplify the code and improve readability
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated related logic in ` VectorUtil `
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to ` BaseMonochromeBitmapSource ` and ` getWidth ( ) ` to
added validation for polygons that contain at least 3 points in Polygon . java to ensure that polygons do not contain at least 3 points to prevent
replaced ` ObjectMapper ( ) . newObject ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to ensure compatibility with
added null check for coeff before evaluating doubles in GeoImplicitCurve . java to avoid potential NullPointerExceptions when coeff is null
updated encoding logic in ExternalNameRecord and added a new test for the bug 47384 in TestExternalNameRecord to ensure correct handling of unicode names
corrected a typo in the description for JMS destination type in AbstractJMSProcessor . java to improve clarity and consistency in the description
added support for excluded prompts in LoginInfoEndpoint and corresponding tests in LoginInfoEndpointTests to enhance user experience by allowing prompts to be excluded
updated listener removal logic in AbstractController . java to ensure listeners are only removed when the listener is equal
added a switch statement to handle the spin action in PieChartActivity to enhance the user experience by allowing dynamic spin behavior in the chart
cloudstack - 10220 : fix bug in citrixresourcebase . copy _ vhd _ to _ secondarystorage .
hbase - 16286 addendum addendum addendum addendum addendum addendum addendum fix
updated import statements and added resize method to AndroidInput . java to improve code readability and maintainability by encapsulating the resize logic
updated the ` JavaBeanDescriptor ` initialization and added a new method ` propertyValuesOf ` to the ` PropertySupport ` class to improve code read
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to temporarily disable the test that is always failing and blocking PRs
fix the position of the entity item in the bounding box for the tile .
added authentication dialog creation in SsoWebViewClient . java to enhance user experience by providing quick access to authentication details
added methods to delete documents in TestStressIndexing2 . java and modified test cases in TestStressIndexing2 . java to improve
[ flink - 22559 ] [ table ] ignore upsertkafkatableitcase test due to flink - 22559
replaced the retrieval of typeList with a computeIfAbsent method in ResTable . java to improve code readability and maintainability by using a
added a DeserializationFeature for ACCEPT _ SINGLE _ VALUE _ AS _ ARRAY in DefaultEntityMapper to enable ACCEPT _ SINGLE
updated localization log messages in VersionChangeLogs . java to include UK , UK , and SL to enhance user experience by providing additional localization information
updated the SHORTCUT _ CATEGORIES array to use a resourceutils . getString ( " CL . app . categories " )
refactor ` visitExpressionInstanceOf ` method to use ` visitRelExpressionInstanceOf ` and ` visitRelExpressionInstanceOf ` instead of ` visitExpressionInstanceOf
nifi - 10226 : add @ writesattributes to gethttp . gethttp ( ) and set the content - type header
[ flink - 13232 ] [ table - planner - blink ] use historyentry . toprovenance ( ) instead of
updated button label from " exit " to " done " in HelpActivity and SearchBookContentsActivity to clarify that the button is not searchable
refactor NatsConfiguration class to improve code readability to enhance maintainability and facilitate future updates
updated the ` invalidateStalePartition ` method to accept a ` List < PartitionNameWithVersion ` parameter and modified the ` PartitionNameWithVersion `
make view results full visualizer more efficient .
updated icons in UsersAndGroupsSearchProvider , ShareUserListAdapter , ShareUserListAdapter , ShareUserListAdapter , ShareUserListAdapter ,
replaced direct calls to ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver . java ` and ` BroadcastReceiverTest . java ` to ensure
updated mock creation methods in MocksCreationTest . java to improve clarity and consistency in naming conventions to enhance code readability and maintainability by
added a new constant ` DATA _ SOURCE _ NAME ` to ` CSVThirdEyeDataSource ` and modified ` YamlDetectionConfigTranslator ` to
updated the timeout duration from 10 seconds to 30 seconds in awaiter calls in Basic . java to improve responsiveness by allowing more time for asynchronous
removed the ` BuildSlaveFinishedEvent ` method from ` DistBuildRunCommand ` , ` DistBuildSlaveFinishedEvent ` , and `
[ vmware ] use UTF - 8 instead of UTF - 8 to prevent potential encoding issues during UUID generation
added a test for depositing a workspace item without a workflow item to ensure that the submission item is properly deposited without a workflow item
added distinct classpath files to the ` classLoaderSupport . classpath ( ) . stream ( ) ` method in ` ClassLoaderSupportImpl . java ` to ensure
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unnecessary method
updated argument handling in SpecificCompilerTool and added counter logic in TestSpecificCompilerTool to improve argument validation and ensure correct ordering of flags in the
added a null check for the table in HiveMetaStore and updated related tests in TestHiveMetaStore . java to ensure that directories are deleted
updated async execution threads from 50 to 100 in HiveConf and modified logging statements in SessionManager to improve responsiveness and provide clearer feedback on
added a try - catch block to dismiss the dialog in Launcher . java to handle potential exceptions when dismissing the dialog
added a constant for the EXECUTE _ TASK _ ROLE in UpgradeResourceProvider and updated related tests in AmbariManagement
added a call to ` currentConfInfoDocument ` in ` OperationSetTelephonyConferencingSipImpl . java ` to ensure
added clearentries ( ) method to logTree . clearentries ( ) in FlutterLogView . java and updated logModel . update ( )
updated return statements in ChannelEndPoint . java to include input and output shutdown checks to ensure proper handling of socket input shutdown scenarios
refactor SetNullableGenerator class to improve code clarity to enhance maintainability and readability of the code
camel - 14284 : fix camel - example - reportincident / webservice - example - reportincident / webservice - example -
refactor NettyRoutingFilter and FormIntegrationTests to improve code readability and maintainability to enhance maintainability and reduce boilerplate code
added ` hello ` and ` hello ` methods to ` AbstractBaseService ` , ` MyService ` , and ` MyService ` classes to enhance
updated Lwjgl3Application and Lwjgl3Window to handle multiple LifecycleListener methods to ensure proper resource management and prevent memory leak
updated the FG _ FK color from 90 to 200 in UIUtil . java to improve the visual appearance of the UI
updated AudioFormats . mp3 . required to false in SoundManager . java to ensure audio format is not required for audio formats
patch by jbellis ; review by jbellis for cassandra - 142
[ pmd ] add version to the about group and label in the pmd plugin .
[ hotfix ] [ test ] fix test failure in customserializationitcase
refactor MediaFormatUtil class to improve code readability to enhance maintainability and facilitate future updates
added a method ` isCellEditable ( int rowIndex , int colIndex , int colIndex ) ` to the ` GeneralTab ` class to provide
added a method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and updated message formatting in ` DefaultJavaLibraryRules `
added a temporary count in VocalTractModifier and updated vscales in VocalTractScalingProcessor and VocalTractScalingProcessor
updated import statements for BaseScalarUdfTest and TestGenericUdfTest in multiple files to streamline import statements for improved clarity and maintainability
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper comparison and comparison of user - defined instances
updated TestSkeletonControlRefresh . java to use AnimComposer instead of SkeletonControl . j3o and AnimControl . j3o
renamed ` NodeFilter ` and ` NodeCountFilter ` to ` NodeCountFilter ` across multiple classes to improve clarity and consistency in naming conventions
updated the condition in ` NodeImpl . java ` to check if the size of ` SYNC _ FETCH _ BATCH _ NUM ` to ensure
updated state and type handling in DebugExpressionParser . java and refactored type assignment in DebugExpressionParser . java to improve clarity and maintainability
updated dependency filtering logic in ExcludeDependency . java and Pom . java to improve dependency management by ensuring only relevant dependencies are processed
replaced ` tmp ( ) ` with ` dst2 ( T v ) ` and ` lerp ( v ) ` in ` Vector . java `
changed the initialization of ` args ` from ` String [ ] ` to ` String [ ] ` in ` GridHubConfiguration . java ` to ensure
updated the ` getLinkerArgs ` method to use ` ImmutableList < String > ` instead of ` List < String > ` to improve flexibility in
[ java ] fix test for travis and appveyor .
updated HiveConf and GenericUDTFGetSplits to include an external DAG name and updated logging output in TaskExecutorService and GenericUD
removed unused import of File in TileAtlas . java to clean up the code and improve readability
i18n : do n ' t throw an exception if an exception be throw on a closed stream
updated the ` validateQuery ` method to accept a ` Object . . arguments ` instead of ` String . format ` to enhance error handling by providing
updated index version from 1 to 2 and refactored getTree method implementations in LuceneExecutor . java to improve clarity and maintainability of the
[ hotfix ] [ kryo ] add test for default kryoregisteredclassesdid not change .
added null check for configuration type in BlueprintConfigurationProcessor and updated test cases in BlueprintConfigurationProcessorTest to ensure proper handling of null values and
refactor Boolean handling in MetaStoreDirectSql . java to use BooleanUtils for better readability to improve code maintainability and reduce boilerplate
added a call to hideCustomizationDrawer ( ) in Launcher . java to ensure the customization drawer is properly hidden for better user experience
refactor warnings handling in TermVectorComponent to use a constant for better readability to improve code maintainability and reduce redundancy in warning management
updated logging statements in Compiler . java to conditionally log optimistic types based on configuration to improve logging clarity and ensure proper logging behavior when optimistic types are
refactor Expect class implementation to improve code readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enable the use of UnixSocket access for Docker connections
added a new test method ` testEvenLowRateIP ( ) ` to ` CloseableDoSFilterTest ` and ` CloseableDoSFilter
camel - 14284 : camel - reactive : add exception for no active subscription
refactor vectorization logic to utilize TezTask instead of MrTask to improve code readability and maintainability by centralizing map work
added a boolean parameter to the constructor call in StringAppender and LogDivertAppender classes to ensure proper initialization of the appender functionality
fix npe in jmetertreemodel . getcurrentnode ( )
[ gr - 26186 ] fix bug where weak function can not be use in a call target .
refactor XShareAuto , LoadFromNoaccessArea , and ReadFromNoaccessArea classes to improve code organization and maintainability
no effective change - add unit test for defaulttransactionlocal . get ( )
added a check for invalid OperationHandle in HiveStatement . java to ensure that operations do not exist on server side to improve error handling and provide clear
updated ALTER _ TABLE _ ALTER _ COLUMN _ ALTER _ TABLE _ ALTER _ COLUMN _ ALTER _ TABLE _ ALTER _
camel - 15836 : camel - aws - secrets - manager - aws - secrets - manager - aws - secrets - manager : add unit test
refactor SimpleTree class to improve code readability to enhance maintainability and facilitate future updates
updated error message formatting in UserREST . java to improve readability and maintainability of error messages
added a ` subTree ` parameter to the ` fromContent ` method and modified the ` fromContent ` method to accept a ` boolean ` parameter
updated column width calculation in Sheet . java and added a new test for column width functionality in TestHSSFSheet . java to ensure correct column
added configPath parameter to the Commands . less method call in Builtins . java to include the configPath parameter in the output
replaced Set < Set < Table > with Collection < Table > in DotWriter . java and GraphExecutable . java to improve type safety and maintainability
updated the property name from " sshd . container . image " to " sshd . container . image " in TestcontainersConfiguration . java
remove assertion for hostId in agentmanagerimpl . java to simplify code and improve readability
refactor ` DefaultGroupKeyGenerator ` to use ` BlockSingleValIterator ` instead of ` _ reusableGroupByColumns ` to improve
refactor testSeekNegative and testSeekingExceptions methods in TestMultiMMap . java to improve error handling for EOFExceptions
refactor BCSiliconRecipes to use IngredientNBTBC instead of IngredientStack . of to improve code readability and maintainability by
updated method name from ` put ( String ) ` to ` putObject ( String ) ` in ` GraphHopperConfigMixIn . java `
updated visibility logic in CellLayout and moved onDragExit method to a private method in DragController and Workspace classes to improve code readability and maintainability
updated the ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` instead of ` o ` in ` ModifyRequestBodyGatewayFilterFactory ` to
added package - private checks to ConstructorFinder , FieldFinder , and MethodFinder classes to enhance security by ensuring only non - public fields are processed
updated logger warnings and trace messages in LoggingHandler . java to improve logging granularity and reduce log verbosity during debugging
updated prefix handling in WhiteBlackList . java and added a new Issue348 . java file with a new test class for wildcard handling in the
added menu item handling for home and gallery items in GalleryActivity . java to enhance user experience by providing easy access to menu items
added a null check for the MongoDBService instance in MongoDBServiceFactory to avoid potential NullPointerExceptions when service is null
added unit tests for handling boolean values in InlineConstantMutatorTest to ensure correct behavior of the InlineConstantMutator functionality
updated the ` decode ` method to include a ` blackhole ` parameter and modified the ` readDouble ` method to include ` blackHole ` to
chore ( deps ) : add com . google . api . Empty annotation to syncdeletecustomclass and syncdeletephraseset
updated methods to return a Map . Entry for group addresses in DPTUnits and DeviceThingHandler to improve handling of empty group addresses and enhance error
removed the call to dbManager . getWitnesses ( ) in ManagerTest . java to ensure the database manager is reset before proceeding
[ hotfix ] [ jdbc ] fix jdbcpagesink to log exception when abort
replaced the ` getStackString ` method with ` setStack ` and added a new ` setStack ` property in ` NativeError . java `
removed the conditional check for path names starting with " . " in DrillPathFilter . java to streamline the logic for better readability and
refactor ` OnboardPinotMetricsService ` and ` autoload ` methods in ` ThirdEyeAnomalyApplication ` and ` ThirdEye
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before proceeding with tests
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to reflect the new font size
changed the visibility of ` fThreadGroup ` to ` fThreadGroup ` and ` fTimeUnit ` across multiple classes to ensure thread safety and
rename ` value ` to ` value ` in ` ValueResultData . java ` to improve clarity and consistency in naming conventions
updated hash code calculation in FuzzyQuery . java to ensure proper object comparison to avoid potential null pointer exceptions
removed unnecessary print statements in PushedResourcesTest . java and PushedResourcesTest . java to clean up the code and improve readability
removed the ` @ Nullable ` annotation from the ` removeFile ` method in ` SharedOpenFilesCache . java ` to simplify the method signature and
updated version assertions in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to ensure compatibility with the latest database driver features
updated the parameter type of the ` retrievePersonAttributes ` method to use ` buildResolvedPrincipal ` instead of ` getPrincipalFactory ( ) ` to
updated log level from info to warn in OpenWebNetBridgeHandler . java to improve logging granularity for better troubleshooting
replaced the ` intHash ` method with ` hash ` across multiple classes to improve code readability and maintain consistency across the codebase
added a constructor to ThumbnailGenerationTask and updated bitmap handling in FileUploader . java to ensure that storageManager andImageViewReference are not null
updated loop condition in GroupSelectionQuery . java to check if the number of attempts is greater than 5 to ensure that the loop does not exceed the
added a new file ` Bug1933922 . java ` that implements a method to retrieve and retrieve a program to demonstrate the use of a
updated comparison logic in multipleSeriesProvider and Tokenizer classes to improve code readability and maintainability
updated the condition for validating control characters in FileResolver . java to ensure correct handling of invalid control characters in file resolution
added requestFocus ( ) method to Display . java to improve user experience by ensuring focus is set correctly
updated test data to use ` / / instructorhomepageuitest . json ` instead of ` / instructorhomepageuitest
rename JsonParserAsync to JsonStreamParser in multiple files to improve clarity and consistency in naming conventions
updated the cancelAllCroutons method in DetailFragment and MainActivity to improve user experience by providing clearer feedback when a message is
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder . start ( ) ` in ` SourceCompiler . java ` to
use InetAddress . getByName ( " 127.0 . 1 " ) instead of getLocalHost ( ) to avoid test failure
refactor case handling in Metrics . java to improve readability and maintainability to enhance code readability and maintainability by reducing duplication
added tests for Apple platforms in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on non - MACOS platforms
[ gr - 27186 ] fix test failure in jdk . graalcompilerversioncheckvendortest
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page performance
updated the ` readAllBytes ` method to use ` source . getSource ( ctx ) ` instead of ` source . getSource ( ctx ) ` to
added a new enum ` MultiPartFormDataCompliance ` and implemented a new enum ` Compliance ` in ` HttpConfiguration ` and created a new enum
added JDK - 17 version to GradleDistributionManager . java to ensure compatibility with the latest Gradle features and improvements
updated the ` addType ` method in ` DatabaseSnapshot ` and added a ` addType ` method in ` SnapshotControl ` and ` SnapshotControl
refactor Term class implementation to improve code readability and maintainability
added null and empty check for runWith in ChangeSet . java to ensure proper handling of empty runWith cases
add a test case for the ` issamerm ` method in ` ActiveMQXAConnectionFactoryTest . java ` to ensure that the
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
pdfbox - 4071 : make sure we do n ' t fail on linux .
replaced calls to ` mSnapshotView . setDimAlpha ` with ` mTintAmount ` in ` TaskView . java ` to ensure correct
added a new file ` SumZeroAggr . java ` that includes a DrillAggFunc class and implemented a new file ` SumZeroAgg
updated string concatenation in ` FirstValueFunctionIT . java ` and ` NthValueFunctionIT . java ` to improve code readability and maintain
hbase - 13257 bucketcache . getallocationfailwarningmessage ( ) do n ' t throw a bucket allocator exception
added a null check before adding properties to the role object to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotations to StatusBarTouchController , StatusBarTouchController , and RecentsView classes to enhance testing capabilities and improve code read
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 1 : http : / /
add a new file ` TestMVStoreCachePerformance . java ` for testing cache performance to facilitate testing of cache performance in a concurrent environment
updated the PrimitiveType class from " L " to " J " in PrimitiveType . java to ensure consistency in naming conventions
changed the access modifier of the delegatingApplicationListener constructor from public to static to allow subclasses to access the delegatingApplicationListener instance
camel - 14284 : camel - rest - binding : set body to null in camel - rest - binding
added new files ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` and ` TaskletJobFunctional
bugfix : update size keep drawables for plane companion
updated byte array handling in BitUtil and Int2IntCounterMap , Int2IntCounterMap , Int2IntCounterMap , and Int2
updated ` sendEventToTest ` methods to use ` StateOrdinal ` instead of ` String ` in multiple classes to improve clarity and consistency in state
added a check for the " Lavf / " userAgent in the RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail
refactor error handling in ErrorCheckerService to improve clarity and functionality to enhance user experience by providing clearer error messages during text selection
added conditional checks for menuButtonTopBool and menuButtonBottomBool in SideMenuBar . java to improve user interface responsiveness based on theme settings
updated the value of " linux - x86 " to " linux - x86 " in Skia . java and added a preload attribute
added a constant for ` ID _ UNITTESTNET ` in ` NetworkParameters . java ` to support testing of unit tests in the application
added error handling for invalid format arguments in QueryCommand and implemented unit tests in QueryCommandIntegrationTest to ensure that format arguments do not cause runtime errors
replaced capacity variable with length variable and modified positionCounter assignment in IntIterator . java to improve code readability and maintainability by reducing redundancy
added ` projectConfig ` parameter to ` walkRuleAndAdd ` and ` walkRuleAndAdd ` methods in ` Project . java ` to enhance
fix ` ` overridemodulepath ' ' in ` ` patchmodulefilemanager ' '
[ java ] remove semanticversion check for candidatetermid in election . java
added a conditional check for SAML authentication in OwnCloudClientManagerFactory to ensure proper handling of session management based on SAML authentication status
added validation for missing mapped table resources in ReadBatch and WriteBatch classes to ensure that a mapped table resource is not null before building ReadBatch
use utils . close ( ) instead of a try - with - resources . close ( ) method
refactor AnonymousAuthenticationFilter to use Supplier for deferred context handling to improve code readability and maintainability by encapsulating context creation logic
added a ` boolean ` parameter to the ` removeActor ` method in ` Actor ` , ` Group ` , and ` Stage ` classes to ensure
refactor configuration handling in SolrCLI . java to use valid configurations instead of cloudConfig to improve code readability and maintainability by reducing redundancy
added logging functionality to NettyHttpServer and RoutingInBoundHandler to improve logging capabilities and ensure proper handling of netty responses
refactor DatumAliases , Formattable , and Formattable classes to improve code organization and maintainability
replaced ` update ( ) ` method with ` SwingUtilities . invokeLater ( ) ` in ` CodeDependenciesPanel . java ` to improve UI responsiveness
camel - 14284 : camel - groovy : use cache instead of cache to make it easy to configure the script .
maven - plugin : use an empty list instead of a list
changed access modifiers of ` ARGS _ OPTION ` from package - private to public in ` ProgramOptions ` and ` ProgramOptionsUtils ` to
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added ` commit ( ) ` method in ` TestSharedPreferencesTest `
removed storageAlias assignment from certificate chain retrieval in HttpsMessenger . java to streamline certificate chain processing and improve code readability
[ java ] do n ' t throw a WebDriverException when convert a response to a text .
changed access modifiers of ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow subclasses to
fix block . dropresources ( ) and dropresources ( ) in serverlevel .
added native methods for SpatialLocationCalculatorConfig and frontSpatialLocationCalculatorConfig in DataOutputQueue , depthai , and depthai classes to enhance functionality and
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor TreeTrie to use a new method ` isEmpty ( Node < V > t ) ` for consistency to improve code readability and maintainability
updated foreground and background method calls in AttributedStringBuilder . java to improve accuracy of foreground and background rendering
updated fingerprint handling in PeerSync and added tests in PeerSyncTest to ensure fingerprint is only enabled when the system property is set to " true "
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
updated ` maybeEmitEvent ` and ` maybeEmitEvent ` calls to use ` BeforeConvertEvent ` instead of ` BeforeConvertEvent ` to improve
fix collectionitem . writedata ( ) and settransactiontest
[ tika - 2424 ] close the inputstream if the inputstream be close .
updated exception handling in TestCollectionAPIs . java to use an array instead of ApiBag . ExceptionWithErrObject to improve error handling by catch
updated the method call from ` cfgOverrideFile ` to ` cfgOverrideFile ` in ` OptionsParser . java ` to improve code readability and
remove longFsName and longFsName from teammatesLogMessage in InstructorFeedbackAddActionTest and InstructorFeedbackCopyAction
[ hotfix ] [ runtime ] fix checkstyle violation in externalworkerservice
updated step handling in DisplayTextVirtualDatapoint , HmDatapoint , and HomematicTypeGeneratorImpl classes to improve code clarity and maintainability
added logging statements for shared locks and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve traceability of
removed redundant scheduleJobs ( ) call in BaseSchedulerServiceImpl . java to simplify the code and improve readability
alexeibarantsev : testgettextcontent . testtextcontent . testtextcontent . testtextcontent . istextpresent ( )
refactor Logger class to use ThreadLocal for logger implementation to improve thread safety and maintainability of logger state management
updated FunctionInitializer and FunctionInitializerTest to use VisibleForTesting instead of JMockit in FunctionInitializer and FunctionInitializerTest to enhance testing capabilities and improve
added a new method ` boxedTypeOrType ` in ` Types . java ` and implemented a new class ` T6995200 ` to
added a null check for mFocusedTaskView and updated orientation state management in RecentsView and TaskView classes to ensure proper handling of task orientation
hbase - 13232 fix testflushfromclient # testflushfromclient # testflushfromclient # testflushfromclient # testflushfrom
added a condition to delete the original repository in TransactionExecutor . java to ensure the original repository is not destroyed when the contract details are present
replaced TOKEN _ ISSUE _ FEE with a constant for asset issue fee to improve code readability and maintainability by centralizing fee
updated RealisticRenderStrategy to use a boolean for clearing Textures and refactored texture clearing logic to improve cache management and ensure proper resource management
replaced ` srcRas ` with ` tmpSrcRas ` and ` dstDstRas ` in ` Blit . java ` and added
added a new boolean flag ` isUnselectedStyle ` and modified the ` stringWidth ` method in ` Component ` and ` Label ` classes to
updated the initialization of mappings and action lists in multiple classes to optimize memory usage and improve code readability
removed ` flags ` parameter from ` queryImplicitIntentServices ` and ` queryImplicitIntentContentProviders ` methods in ` ShadowApplicationPackageManager . java `
refactor PingRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
added a new constant MP4 _ ASSET _ WITH _ INCREASING _ TIMESTAMPS _ URI _ STRING to AndroidTestUtil
do n ' t check for old firmware version if there be no firmware .
refactor AjaxElementLocator class to improve code organization to enhance maintainability and readability of the code
updated BoxLayout and DefaultLayout to include " table - cell " display in DefaultLayout to ensure proper handling of table cells in layout rendering
updated JsonDecoder to handle JsonToken . START _ ARRAY and added a new test for reordering fields in TestJsonDecoder . java to ensure proper
[ hotfix ] [ blockcache ] use blockcachelocation instead of notification . value ( )
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added a @ Test annotation to the DroolsMvelParserTest class to ensure that the DroolsMvelParser behaves as expected
changed fields in ContextRegisterListener from private to final in ContextRegisterListener . java to ensure immutability of fields in subclasses
refactor ObjectHashSet and ObjectHashSetIntegerTest to use a cache iterator instead of creating a new ObjectHashSetIterator instance to improve flexibility and control over
added batch bytes handling in Spark and ReduceRecordSource classes and updated batch size checks in ReduceRecordHandler and ReduceRecordSource to improve
updated Context . MODE _ WORLD _ WRITEABLE and Context . MODE _ PRIVATE in AppSettings . java and UpdateUtils . java
updated log messages in JdbcProxyGenerator . java for clarity and improved exception handling in JdbcProxyGenerator . java to enhance debugging information and improve error reporting
updated animation transition logic in Workspace . java to improve accessibility handling to enhance user experience by ensuring proper accessibility behavior based on the current state
updated log level from warn to debug for malformed edits in ProtobufLogReader . java to improve logging granularity and reduce log verbosity
updated scope handling in UaaTokenServices and added a new test for the persist scope in UaaTokenServicesTests to ensure that the scope is
updated import statements and added a toString method in SchemaRetrievalOptionsBuilderTest and TestAvailablePlugins classes to improve code clarity and maintainability by standardizing
added a new interface ` ExecutableCommand ` for executing a context in the ` org . kie . api . command ` package to facilitate the execution
remove unused jdbctableservice . createtable ( ) method from jdbctableservice . java
added padding methods to CellLayout and Launcher classes and updated bitmap creation in Launcher to improve padding handling for better layout management
added a conditional check for ` sb ` before processing cands in ` LineReaderImpl . java ` to ensure that only valid candidates are processed
refactored SamlMetadataUIParserAction and SamlMetadataUIParserAction classes to improve code clarity and maintainability to enhance code readability
added a new method ` checkOpenPorts ` to check for LDAP ports in ` LdapMockMvcTests . java ` to ensure that LDAP processes are
[ log4j2 - 146 ] fix shutdown of thread in log4j2 - core
updated URL filtering logic in Fetcher . java and HTMLMetaProcessor . java to ensure proper handling of URLs and refresh URLs to improve URL
updated SolrQuery instantiation to use " name : samsang " instead of " * " in TestSpellCheckResponse . java to improve clarity
added support for new Karaf Console API in CommandProcessorHolder and ThreadIOHolder classes to ensure compatibility with older Karaf Console APIs
make getverticescolors ( meshstructure , blendercontext , blendercontext ) private
updated file filtering logic in HTMLReportGenerator and related test cases in HTMLReportGeneratorTest to improve code readability and maintainability by centralizing file
refactor datavalidatortest to use ParameterizedTest for improved readability and maintainability
pdfbox - 4071 : remove addmetadata ( ) method from pdfparser
added error handling for bind form errors in FieldUtils . java and FieldUtils . java to improve clarity of error messages when binding form errors
removed system . out . println from JoglInput . java to clean up the code and improve readability
added a boolean parameter ` allowExtractingPrivateFields ` to ` FieldSupport ` and modified ` FieldSupport _ fieldValues _ Test ` methods to
updated WebDataHandler to replace " { name } " with " { name } " in WebDataHandler . java to ensure the correct device name
added support for Java 8 type lookup in Platform . java to improve compatibility with Java 8 types and ensure proper instantiation of Lookup instances
added a deprecated method ` weightsByDouble ` and updated related methods in ` ZParams . java ` and ` SortedSetCommandsTest . java ` to
added a Database parameter to the writeCustomHTML method and updated related methods to include the database context to enhance functionality by allowing users to specify the database
updated BTreeMap . java to check for null values before deserializeing keys to improve robustness by preventing potential NullPointerExceptions
updated exception handling in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and UpdateDeferredTransactionContractActuator to
added a check for the " org . netbeans . lib . profiler . heap . zerofile " option in AbstractLongMap . java to
updated error logging and message messages in ChangeSet . java and Main . java to improve error handling and provide clearer feedback when a Liquibase
updated byte array size from 14 to 13 and removed generic records from HortonworksEncodedSchemaReferenceStrategy and HortonworksEncodedSchemaReferenceWriter to
added imports for ChunkListener and ItemReadListener in multiple Java files to ensure compatibility with the latest Spring Batch framework features
refactor ` getDesiredConfigMap ` method to use ` getPropertyId ` instead of ` getPropertyId ` to improve code readability and maintainability
removed the ` get ( ) ` method from ` SearchFiles ` , ` SortedSetDocValuesFacetCounts ` , and ` MessageFilesParser `
refactor Test7005594 . java for improved clarity to enhance code readability and maintainability
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code readability to enhance maintainability and facilitate future updates
cloudstack - 10284 : fix npe when nic ip address be null
added GUI scale support in Gamepad . java to enhance user interaction by allowing customizable GUI size changes
updated import statements and added ` iteratesOverSequence ` and ` iteratesOverSequence ` methods in ` IterableSubject ` and ` IterableTest `
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 2
added unit tests for the ` doInJPA ` method in ` ActivityHistorySQLServerStoredProcedureTest . java ` to ensure correct functionality of
updated BarChartActivityMultiDataset , BarLineChartBase , and BarLineChartBase to use LargeValueFormatter instead of mYLabels to improve
refactor the handling of ' z ' and ' z ' in comments in CommentsParser . java to improve code readability and maintainability by
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to clean up the code and improve readability
corrected a typo in the printLir statement in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency in
removed the TODO Auto - generated method stub from NullAssertionValidator . java to clean up the code and improve readability
added RuleKeyAppendable import and appendToRuleKey method in DefaultRuleKeyBuilderFactory . java to ensure proper handling of RuleKeyAppendable instances
[ flink - 24186 ] [ runtime ] fix network speed issue when run single instance .
[ hotfix ] [ test ] fix testcontainersdockercmdexecfactory . testcontainersdockerdockercmdexecfactory . testcontainers
replaced the ` inMessages . increment ( ) ` method with ` receiver . getMessagesIn ( ) ` in ` HttpChannelOverHTTP ` and
added attribute for " image / * " in ImageFileInputDialog . java to enhance user experience by allowing image files to be accepted
replaced ` NodeBuilder ` with ` TransportClient ` in ` ElasticIndexWriter . java ` and updated ` TestElasticIndexWriter . java `
added additional witnesses and class information in ForkController . java to improve traceability of witness information for better debugging
added a new file ` NullPointerAndEmptyArrayTest . java ` that tests the ` NullPointerAndEmptyArrayTest ` class to verify the behavior of
deleted the ` getConfiguredGeneratedSourcesPathsUsingDeps ` method in ` BaseIjModuleRule ` , ` IjProjectBuckConfig `
added a new method ` constructSimpleWildcardPatternWithAnyCharDelimiter ` to the ` UaaStringUtils ` and ` LdapLoginAuthenticationManagerTests
refactor alias handling in Vectorizer to use LinkedHashMap for better readability and maintainability to improve code readability and maintainability by reducing redundancy
updated import statements in WeatherQueryTest . java to use MockitoJUnitRunner instead of MockitoJUnitRunner to improve code readability and maintainability
added error handling for setting values in TinyGFirmwareSettings . java to improve robustness by logging errors when firmware settings are not
refactor ` getLangs ` method to use ` TreeSet < String > ` instead of ` ArrayList < String > ` to improve code readability
updated import statements and import statements in LazyTraceScheduledThreadPoolExecutorTests . java to ensure compatibility with the latest Spring Cloud Sleuth features and improve
hbase - 14246 disabletablesnapshothandler . prepare ( ) do n ' t throw exception if tableinfo be present
[ j2j ] add new method ` ` isNull ' ' to ` ` if ' ' , ` ` if ' ' , and `
added a new test method ` explorerShouldHaveModifiedHttpRpcEndpoint ` in ` DockerQuickstartTest . java ` to ensure that the explorer correctly
added a volatile boolean flag ` isSuspended ` and modified ` Test _ Thread . java ` to handle IllegalThreadStateException ` to ensure thread
updated JavadocVisitor and ReloadableJava8JavadocVisitor to use Javadoc . Hidden and SerialData instead of Javadoc . Since to
camel - 14284 : camel - spring - factory - add support for multiple camel context in camel - spring
removed ` @ Override ` annotations from multiple security configuration classes to improve code readability and maintainability
added module import handling and updated test cases in Java2TypeScriptAdapter and MyComplexEnumsAccess to improve module management and enhance test coverage for
updated the language from W3C _ XML _ SCHEMA _ NS _ URI to " http : / / www . w3 . org /
added a check for badged app label in BubbleTextView . java to ensure badged app labels are displayed correctly based on badge status
added MouseWheelListener to handle mouse wheel events in TestMouseWheelScroll . java to enhance user interaction by allowing mouse wheel interactions
pdfbox - 4071 : close docactual . close ( ) to prevent resource leak .
updated currency codes in KucoinAdapters and KucoinIntegrationTests to use XRB _ BTC instead of BTC _ ETH to improve
use string instead of object to avoid type cast exception
removed unnecessary currency assignment for DSH and QTM in BitfinexAdapters . java to simplify code and improve readability
replaced ` HashSet ` with ` TreeMap ` for field output in ` JsonFormat . java ` and refactored fields handling in ` JsonFormat .
removed unnecessary checks for array types in JacksonXmlFormatMapper . java to streamline code for better readability and maintainability
refactor code for better readability and maintainability in VirtualThread . java to improve code readability and maintainability by using more descriptive
updated ` ReaderManager ` and ` NameIntCacheLRU ` classes to use ` catTerm ` instead of ` NoOpCache ` to improve
refactor VetoableChangeSupport class implementation to improve code readability and maintainability
updated the calculation of the getY ( ) method in BrowserContentPane . java to correct the calculation of the height to ensure accurate positioning of the
pdfbox - 4071 : remove unnecessary ` ` invalidpasswordexception ' ' declaration
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest . java ` to ensure
refactor help button handling in InputBarHelpPanelW . java to improve code readability and maintainability
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
updated ThreadHelper to wait for controller states in BackendInitializerHelper and TerminalClient classes to ensure proper handling of controller states during execution
updated version checking logic in SwingStartup . java to use ReleaseStatus . OLDER instead of BuildProperties . getVersion ( ) to improve clarity and
added support for generated file comments in DbMigrationConfig and MigrationXmlWriter to enable customization of generated files in the migration process
updated arguments for player names and descriptions in multiple Java files to enhance user experience by allowing multiple players to be removed from plots
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused classes to streamline the codebase
updated variable names from " startsWith " to " optionName " in OptionProcessor . java to ensure consistency in variable naming conventions
added a check for PARALLEL _ CLASSES in TestNGContentHandler . java to ensure proper handling of parallel classes in TestNGContentHandler
updated broker data handling in RouteInfoManager . java to use StringUtils . isEmpty ( ) instead of null to improve code readability and maintainability by
fix ( ctmethodimpl ) : use modelelementcontainerdefaultcapacities instead of static
added serialVersionUID to multiple exception classes to ensure proper serialization compatibility during serialization and deserialization processes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code readability and maintainability
updated the shaBase64 method to include CONST _ SEPARATOR in DigestUtils . shaBase64 and added a new test for value generation to
updated parameter handling in Parameters . java and improved null check in TestAction . java to enhance code clarity and prevent potential NullPointerExceptions
added a new file ` Person . java ` with a name variable to provide a utility for creating a Person class for testing purposes
patch by jbellis ; review by jbellis for cassandra - 142
updated the condition in AbstractClient . java for better readability to improve code readability and maintainability
added assertions for timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest and SegmentMetadataImpl to ensure accurate representation of metadata for better
updated color settings in SimulationPlotPanel to use DARK _ RED and DARK _ RED in SimulationPlotPanel . java to
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper disconnection handling
refactor scope hierarchy retrieval to use Class < ? extends Annotation > instead of String to improve type safety and readability of the code
added a test to verify the behavior of clicking on an element hidden by double overflow to ensure that the scrolling behavior correctly handles elements with double overflow
added a try - catch block to dismiss the dialog in Launcher . java to handle potential exceptions when dismissing the dialog
added JNDI location retrieval and logging in JTATransactionManager . java to improve error handling and logging for missing JNDI locations
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from Library . java to streamline the code by eliminating unnecessary method
updated the initialization of enabledCiphers and enabledCipherSuites in JSSESocketFactory . java for clarity to improve code readability and maintainability by
[ flink - 24486 ] [ table - planner - blink ] fix timestamp type for timestamp ( # 10286 )
refactor null checks in Identifiers . java and DatabaseConnector . java to improve code readability and reduce unnecessary null checks
[ flink - 18186 ] [ graphql ] use inputmap instead of input . get ( ) . get ( )
updated the condition in FlightConfigurablePanel to check for both row and column dimensions to ensure that both row and column indices do not exceed the table
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user experience by ensuring the scroll is visible
added import for ASTMemberSelector in UnnecessaryLocalBeforeReturnRule . java to ensure proper handling of member selectors in the return statement
replace ScriptEngineManager with ScriptEngineManager . getEngineByName in AbstractScriptExecutor . java to streamline script engine retrieval process and improve error handling
updated correlation calculations and assertions in EuclideanDistanceSimilarity . java and EuclideanDistanceSimilarityTest . java to improve accuracy of correlation
patch by jbellis ; review by jbellis for cassandra - 142
updated the ` relativize ` method to include ` path1 ` and ` path2 ` parameters in ` MorePaths . java ` to
refactor column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to improve code readability and maintainability
[ hotfix ] [ test ] skip current writer head file 1 . log . tmp
replaced ` toHexString ` with ` toJsonHex ` in ` TronJsonRpcImpl . java ` to improve code readability and maintainability by
refactor ` ErrorHandlerController ` , ` Error404Controller ` , ` Error404Controller ` , and ` Error404Controller ` classes to improve
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in ` UnixTerminal . java `
refactor Tiny . java to use ExpressionTree and NewArrayTree instead of MethodInvocationTree to improve code readability and maintainability by using
refactor connection management logic in ConnectionPool . java to improve code readability and maintainability
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` and ` setLdapDateConverter ` across multiple classes to improve clarity and
pdfbox - 4071 : do n ' t check if there be no tree in merger
updated error message formatting in JavassistUtils . java to improve clarity of error messages for better debugging
added exception handling for reader and writer exceptions in LargeStreamletTest . java to improve test reliability by allowing more time for reader and writer exceptions
updated the logic for determining the current account ' s page type based on shared preferences to ensure proper handling of extra pages based on user preferences
added error handling for broken gaussian rendering in AndroidImplementation . java to improve robustness by handling potential exceptions during rendering
replaced direct calls to ` @ SuppressSubnodes ` with ` @ SuppressSubnodes ` in ` BaseParser ` and ` ImplicitActions
refactor FDFParser instantiation to use try - with - resources for improved resource management to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
added a command to execute a shell command in AbstractLauncherUiTest and updated the assertion in LauncherInstrumentation to ensure that the Phone is locked and
added JSON serialization and deserialization of filenameToUrl in FileDumper . java to enable dynamic URL generation for file paths
do n ' t reset resultnotified flag in profilerserver . resetresultsnotifiedflag ( )
refactor texturehelper to make it easy to load image from the blender file .
updated assertion statements in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to ensure consistency in naming conventions
updated random number values from " 9781797745008 " to " 9781797845005 " in RandomizersTest .
refactor notification sound handling in AlarmReceiver . java to use Uri for URI parsing to improve code readability and maintainability by using a more
added a method to report loop count in RootNode to enable tracking of loop count in the call target
added a conditional check for STANDARD repository type in FinalizeUpgradeAction . java and updated clusterEntity handling in ClusterImpl . java to ensure the
fix typo in listbyregionidandstatesearch . getregionid ( )
removed redundant calls to ` streamManager . open ` in ` ItemOrientedStep . java ` to improve code readability and maintainability by
added a new file CountedLoopProblem . java that implements a random number generation method to demonstrate the usage of the CountedLoopProblem class
refactor native method parameter type in compilertovm . executecompiledmethod ( ) .
[ gr - 24186 ] fix issue with jlong field in gradlehotspotvmconfig .
rename ` KafkaStreamsTracing ` to ` ValueTransformerWithKeySupplier ` in ` KafkaStreamsTracing ` to improve clarity and consistency in tracing
added a ` toStringArray ` method to ` FeedbackConstantSumQuestionDetails ` and updated related test cases in ` FeedbackSessionsLogicTest
added a call to DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java to ensure dynamic colors are applied when available
added a new method ` dumpAllStacks ` to handle multiple child threads in ` CloseRace . java ` to improve thread management and error
replaced ` val ` with ` val . intValue ( ) ` in ` IntPointField . java ` and added assertions in ` TestPointFields .
updated arc size calculations in MyButton . java and adjusted height calculations in MyButton . java to improve accuracy of arc size calculations for better user experience
updated value values from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java and ImageBorderC
renamed ` minifySqlEnabled ` and ` setMinifySqlEnabled ` methods to ` shrinkWhitespacesInSql ` and ` shrinkWhitespacesIn
refactor waitForStateTransitionToEnd method in AbstractLauncherUiTest and WorkProfileTest to improve code readability and maintainability by reducing redundancy
added CasCoreHttpConfiguration and CasCoreHttpConfiguration imports across multiple test files to ensure all configurations are included in the tests
updated byte array reading logic in Volume . java to use dataIO . readFully ( ) instead of long . reverseBytes ( ) to improve data handling
camel - 15836 - camel - http : fix camel - http - getoptionalendpoint in camel - http
refactor ClassPath creation in DeclarativeHintsParser to use a Builder instance to improve code readability and maintainability by encapsulating
add a new file ` MediaScriptScopeProvider . java ` that implements ScriptScopeProvider . java to enable the use of AudioManager and VoiceManager
added methods to retrieve and set the layer manager in AnimComposer , AnimEvent , and AnimEvent classes to improve flexibility in managing layer
added a check for empty queue size in DeferredHandler and removed the updateWallpaperOffset ( ) method in Workspace to ensure proper handling of empty
added null checks for mapOp and mapWork in MapRecordProcessor , TezProcessor , and TezProcessor classes to improve robustness by preventing
[ cylinder ] update cylinderregion . setcenter and setcenter ( ) to be a deprecate .
refactor exception handling in TestBadUseCases . java to use JUnit ' s ExpectedException class to improve code readability and maintainability
added null check for subparameters in QueryExecutorImpl . java and implemented a test for multi - executed queries in StatementTest . java to ensure proper
added a check for customized environment in Installer and SecurityModel classes to improve code readability and maintainability by using a more descriptive method
updated the GET method to include rctag = android% 20app% 20edit in ReviewInterface . java to ensure compatibility with the latest Android API
refactor Test class to improve code readability to enhance maintainability and facilitate future updates
replace blkSize * 8 with keyLength in PBES2Core . java to simplify the initialization of PBEKeySpec for better readability
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.16 . 0 (
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure proper handling of section definitions in the document
added a check for ` getCurrentLocationInfo ( ) ` in ` GpsLoggingService ` and updated accuracy checks in ` Maths . java `
updated cell background display messages in TableLayout and TableLayout2 classes to enhance user experience by providing clearer information about cell backgrounds
refactor DataLabelingServiceClient and package - info classes to improve code organization and maintainability
replaced ` boolean ` with ` Reference < Object > ` for rootNameFn , sourceFilterFn , and ` sourceFilterFn ` in ` 
removed redundant sorting logic in AllAppsList . java to simplify code and improve readability
replaced the ` ThemedPreferenceActivity ` class with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to streamline the code
changed the type of the valueClass from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
updated assertion from ` assertRootArcs ( ) ` to ` assertRootArcs ( ) ` in ` FST . java ` to ensure
added a assertion to validate security policy existence and file existence in JstatdTest . java to ensure that the security policy does not exist or
added a method ` getConfiguration ( ) ` to the ` Olingo2Component ` class to provide access to the ` getConfiguration ( )
increase sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for the recovery process to complete before proceeding
updated logging statement from ` e . getMessage ( ) ` to ` e . getMessage ( ) ` in ` MongoPersistentEntityIndexResolver . java `
added httpfileuploadmanager to XMPPClient and XMPPActions for uploading images by HTTP using XMPP to enhance image upload functionality for better
camel - 15836 - camel - netty : make the producer final so we can get the channel from pool
updated URL patterns in BalancedClickhouseDataSource and added a new test for invalid host names in BalancedClickhouseDataSourceTest to ensure
removed the disablejsr199 property from FragmentActivator . java to ensure compatibility with the latest Jasper compiler features
added null string handling in CSVRecordReader and corresponding tests in CSVRecordReaderConfig to ensure proper handling of null values in CSV output
added LiquibaseService annotations to multiple connection classes to skip operations in the connection process
updated variable name handling in VariableNameUtils to use JavaSourceFile instead of CompilationUnit to ensure compatibility with JavaSourceFile instead of CompilationUnit
updated event topic handling in ItemCommandTriggerHandler and ItemStateTriggerHandler to use " / " / command " instead of " / " / "
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to ensure proper exception handling
updated case statements to include " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java and TestSolrXml
refactor mana tablet to use super . getdurabilitybar ( ) instead of max _ mana .
added a method to set the identifier collection in P25P2DecoderState . java to ensure proper handling of identifiers in the call event
removed unused imports for DictionaryCompoundWordTokenFilter and HyphenationCompoundWordTokenFilter in TestRandomChains . java to streamline the
updated the thread pool name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " in ScryptUtil .
refactor GeneratedCode class to improve code readability to enhance maintainability and facilitate future updates
corrected the spelling of " definition to " definition " in TypeDefinitionRegistry . java to improve code readability and maintain consistency
added the visibility of the shareWithMeIcon in LocalFileListAdapter . java to improve user interface by providing a visual indication of sharing functionality
added " crossorigin " to the CSS link in multiple classes to ensure proper access to external stylesheets for improved security
updated import statements in RouterFilter , RouterServerListFilter , and RouterDistributor classes to ensure headers are not null and improve code clarity
updated assertions in TestIndexWriterMergePolicy . java to include index information to improve debugging by providing more context about the index ' s segment count
[ hotfix ] [ runtime ] deprecate multilayer and multilayerperceptron classes to indicate that these classes are outdated and should be
added a null check for context before processing in CrawlerSessionManagerValve and added a new test for multiple contexts in TestCrawlerSessionManager
added security check for JspApplicationContext in JspFactoryImpl . java to ensure proper context retrieval based on security settings
refactor RocketComponentConfig to use double . MAX _ VALUE for minL and maxL in RocketComponentConfig . java to improve code
updated NonceService and OpenIDAuthenticationProviderModule to use Scopes . SINGLETON in NonceService and OpenIDAuthenticationProviderModule to
[ java ] update child link in entrywriter .
updated the ` doExecute ` method to use ` HttpMethod ` instead of ` HttpMethod ` in ` SpringCloudPlugin ` to improve code readability and
[ java ] increase default value of ` ` foo ' ' and ` ` bar ' ' to 500
added a boolean flag ` mShiftCodesAlwaysAlwaysOverride ` and modified ` mShiftCodesAlwaysAlwaysAlways ` in ` AnyKeyboard . java `
[ flink - 18186 ] [ cluster ] fix heartbeat interval check for leader for cluster
updated the condition in NearbyActivity . java for better readability to improve code readability and maintainability
updated the condition in AbstractKerberosDescriptorContainer to check if the identity is a reference to ensure that the identity is only processed when it is a reference
added a ` noop ` parameter to the ` newInstance ` method in multiple classes to allow for more flexible caching behavior based on user - defined options
updated exception handling in TestListenTCPRecord . java to allow more time for IOException to complete before proceeding with further operations
modified the handling of method arguments in PatchExtensionMethod . java to ensure the original argument array is properly initialized
replace Map with Set for library management in RawNativeLibraries and Main classes to simplify library management and improve code readability
added support for ignore - send - failures in DefaultRouterParser , AbstractChannelNameResolvingMessageRouter , and AbstractChannelNameResolving
added ` getX509PublishUrl ` and ` x509ViewName ` methods to ` ClientKeyPublisherMapping ` and ` JwkViewResolver `
updated the assignment of readers and subReader to use SolrIndexReader instead of SolrIndexReader to improve readability and maintainability of the code
refactor ValueSourceParser to use Double2Parser for maximum and min functions to improve code readability and maintainability by encapsulating
removed the conditional check for focus and pointer events in the Container class to simplify the code and improve readability
removed unused imports in Highlighter , SpanGradientFormatter , and TokenSources classes to streamline code and improve readability
cloudstack - 10297 : fix typo in cloudstack - api
added conditional annotation to FlowBuilderServices in CasMultifactorAuthenticationWebflowConfiguration and updated CompositeProviderSelectionMultifactorWebflowConfigurer to use Object
updated the ` setupClass ` and ` listRemainingConnections ` methods in ` WriteJdbcPTest . java ` to use ` ResultSetMetaData ` instead
removed the null check for the " editor . laf " variable in DefaultPlatform . java to simplify the code and improve readability
updated method calls from ` getStateEntity ( ) ` to ` getStateEntity ( ) ` in ` ServiceComponentHostImpl . java ` to improve code
refactor margin handling in FloatingTaskView . java to improve code readability and maintainability
updated status line handling in RootFolder . java and updated setStatusLine method in NavigationShareTab . java to improve user experience by providing clearer feedback
removed the variable ` threadId ` from the ` instrFilter ` parameter in ` CPUCallGraphBuilder . java ` to simplify the code by
updated the Perspective initialization in Layout . java and GuiManagerD . java to include a defToolbar parameter to enhance the layout ' s functionality and
added network address listener to HomekitImpl and updated logging messages in HomekitImpl to enhance network address management and improve logging clarity
updated lease handling in TestHDFSEventSinkOnMiniCluster . java to use long lease renewal time instead of object to improve accuracy of lease
updated the initialization of ` prefixHeader ` and ` linkStyle ` in ` CxxLibraryDescription . java ` to use ` Optional . absent (
added null check for message in ExceptionHandlerRegistryFactory and added a new test for fatal IOException handling to ensure robustness by preventing potential NullPointerExceptions
updated the ` nextID ` variable to be volatile and modified the ` getSize ` method to ensure thread - safe access to the ` nextID `
[ amq - 4071 ] fix test that fail on slow ci server
added HasSourcePath interface to AbstractThinArchiveArg , FileListableLinkerInputArg , FileListableLinkerInputArg , and
replaced StringBuffer with a direct string concatenation method in Arrays . java to simplify code and improve readability
added default index field name to OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader and TestOrdinalMappingAtomicReader to ensure
updated the epoch time calculation logic in Instant . java and added a new test case in TestInstant . java and TestInstant . java to improve accuracy
replace ` boundShader ` with ` name ( ) ` in ` OGLESShaderRenderer ` and ` LwjglRenderer ` to ensure
added a check for block update scripts in CopyPaste . java to ensure proper handling of block update scripts in the application
added a new file ` TestCMoveLimitType . java ` implementing a new class ` TestCMoveLimitType . java ` that implements a
[ java ] reset temporal attributes in channelstate and add a method to check if a recorder type be present .
( chore ) camel - sql - parser : use super ( ) instead of super ( ) .
updated vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java and AudioSystem . java to reflect the
refactor color handling in ` Main ` , ` VersionCommand ` , and ` VersionCommand ` classes to improve code readability and maintainability by
replaced ` storedToken ` with ` hash ` in ` InputStreamBinder ` and ` NextcloudRequest ` classes to improve token validation to enhance security by
added EOFException handling for EOFException in Http11InputBuffer . java to improve error handling and provide clearer feedback on EOF issues
add unit tests for ` DeleteMember ` and ` DeleteNonExistent ` methods in ` DefaultGroupProviderTest ` and ` DefaultGroupProvider `
[ hotfix ] [ runtime ] remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to remove unused replication protocol classes to streamline the codebase
rename ` compileTimeClasspathDeps ` to ` compileTimeClasspathSourcePaths ` across multiple classes to improve clarity and consistency in naming conventions
added ConstructorArgsDemo , FinalDemo , and StrictDemo classes to provide constructor and secret information for testing purposes
do n ' t close the iterator in directtemplatefeaturecollectionfactory # close ( )
updated assertion for responseCount in WriteResponseHandler . java to ensure that responseCount does not exceed the specified replication factor
added null check for ` getIndexNumber ( ) ` in ` ItemRowAdapter . java ` to ensure that ` getIndexNumber ( ) ` is not
rename ` areAnchestorsShown ` and ` showAncestorsShown ` to ` showAncestorsShown ` across multiple classes to improve clarity
added a check for the width of the app in KBBase . java to avoid unnecessary processing when the app dimensions do not exceed 12
updated the comparison logic for changeLogParameter in ChangeLogParameters . java and added a new test for value retrieval in ChangeLogParametersTest . java
changed the visibility of the loggers map from static to final in LogFactory . java to enforce immutability of the loggers map
changed return statement from ` p ` to ` p . getBasePlot ( false ) ` in ` Plot . java ` to ensure that the correct plot
camel - 14284 - camel - rest - server : add initial creation flag to upload directory .
added a boolean parameter ` sendStatus200 ` to the ` ServerGenerator ` , ` ServerFCGIConnection ` , and ` ServerFCGIConnection
added a condition to check if the comment is empty before proceeding to ensure that the comment is not empty before proceeding with further processing
added imports for BuckFileType and modified file type matching logic in BuckModule . java to improve file type management and ensure proper association management for
replaced ` java . util . function ` with ` ComposedToLong ` and ` ToInt ` in ` ComposedUtil . java
added error handling for RTM locking on unsupported CPUs in RTMGenericCommandLineOptionTest and TestUseRTMLockingOptionTest
updated DUMMY _ ACCOUNT _ NAME from " Dummy account " to " Dummy account " in AccountsActivityTest . java to improve
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added an import statement for ChannelTypeUID in AbstractModbusOSGiTest . java to enable the use of Mockito package imports in the
fix findbugs warning in polyglotexceptionimpl . java
added a reset method to ` RuntimeEnvironment ` and ` ShadowFontsContract ` in ` AndroidTestEnvironment ` and ` ShadowFontsContract `
[ pinot ] fix timegranularity . toseconds ( ) to use joda . time . time instead of joda . time . max
added null checks for ` _ try . getFinally ( ) ` and ` _ try . getFinally ( ) ` in ` ControlFlow
updated assertions in Assert . java and added error handling in ArrayEqualityAssertTest . java to improve assertion accuracy and provide clearer error messages for array
updated the return type of ` slotItem ` in ` WindowClickLogic . java ` to return ` UNKNOWN ` instead of ` ItemStackItem ` to
updated indexing logic in MeshBuilder . java to improve code readability and maintainability
nifi - 10226 : remove dependency on controllerserviceprovider in standardprocessscheduler
added AP _ PROCESSORS _ ARG to KotlincToJarStepFactory and modified KotlinLibraryIntegrationTest to utilize Java plugin
updated the RESCROLL _ DELAY constant from 750 to 150 in multiple classes to improve responsiveness and maintainability of the code
added functionality to refresh shortcuts based on the presence of a host permission to ensure shortcuts are refreshed only when necessary to improve user experience by
added a new case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support back navigation functionality in the application
added null checks for core names in CoreAdminHandler and added error handling in CoreAdminHandlerTest to ensure robustness by preventing potential NullPointerExceptions
added a marker selection feature to the NearbyMapFragment to ensure that the bottom sheet is properly deselected when a marker is selected
added a catch block to catch Throwable in FileSyncAdapter . java to improve error handling by providing more informative stack traces
added exception handling for OperatingSystemMXBean . getTotalPhysicalMemorySize in TestMemoryAwareness . java to improve robustness by catching potential exceptions during
updated method calls in FeedQueues . java for improved readability to enhance code clarity and maintainability by using a more descriptive method
[ java ] allow setplayer ( ) to be call before setplayer ( ) .
updated the ` AndroidBinaryDescription ` and ` AndroidBinaryBuilder ` to use ` Locale . US ` instead of ` PackageType ` to ensure consistent
updated XML _ MIME from " text / xml " to " application / xml " in multiple test files to ensure consistency in file naming conventions across
replaced direct instantiation of ` confFile ` with ` INSTANCE . confFile ` in ` Args . java ` to improve code readability and maintainability
updated the wait condition in HostPortWaitStrategyTest . java to allow more time for the test to complete before proceeding with further operations
updated grouping ID values from int to long in HiveExpandDistinctAggregatesRule . java to ensure compatibility with larger group counts
added checks for headless Graphics environments in Toolkit . java to ensure proper exception handling for headless systems
updated the condition in ExoflameFurnaceHandler to check if the current recipe matches the world to ensure that the correct recipe matches the
added a ` moveThreadCountDescription ` parameter to the ` DefaultSolver ` class and updated related logging to include a ` moveThreadCount ` parameter
updated path splitting logic in SearchBuilder . java and added a new test for rev - include functionality in FhirResourceDaoR4SearchTest .
added a new test class ` Issue582Test . java ` to validate the functionality of the ` getFeatures ` method in the mapdb
[ native ] fix ` ` overflow ' ' error in ` ` decimal ' ' query
refactor LoadingCache class for improved performance to enhance performance and reduce memory usage
added a new rule for " AvoidNonConstructorMethodsWithClassName " in NamingRulesTest . java to ensure proper handling of non - constructor methods with
added exception handling for StaleElementReferenceException in ExpectedConditions . java to improve robustness by catching StaleElementReferenceException during element selection
added a ` hasView ` method to ` DatabaseSnapshotGenerator ` , ` DatabaseSnapshotGenerator ` , and ` JdbcDatabaseSnapshotGenerator ` classes to
refactor DOMUtil class to improve code organization to enhance maintainability and readability of the code
added logging functionality for matrix transformations in TaskViewUtils and Utilities to enhance debugging capabilities by providing insights into matrix transformations
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java to
added a walk method to the TempFSTTermsReader and modified the TempTermOutputs class to utilize a streamlined walk method to improve
added SolrQueryRequest parameter to multiple create methods in multiple factory classes to support Solr queries in the augmenter functionality
added SQL statement handling and updated SQL query execution in SingleTableMySQLTriggerTest . java to ensure proper handling of null content in SQL queries
refactor FieldValueHitQueue and TopFieldCollector to use a new method ` setComparator ` in ` FieldValueHitQueue ` and ` Top
updated SQL query prefix formatting in PhoenixQueryBuilderTest . java to ensure proper handling of regular expressions for database queries
added Spark . awaitInitialization ( ) method to RequesterTest . java to ensure proper initialization of the Spark instance
added constant TOTAL _ STORAGE _ POOL and TOTAL _ TOTAL _ STORAGE _ FEE and TOTAL _ TOTAL _
added NinjaProperties configuration and improved URL handling in AssetsController . java and AssetsControllerTest . java to enhance file handling flexibility and
updated the condition in MapMarksManager . java to use getMapMarkKey ( ) instead of getMapMarkKey ( ) to ensure accurate
added TokenRewriteStream parameter to multiple methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance token handling capabilities in the semantic analysis process
removed IOException suppression from method signatures in JavaCompiler and JavacProcessingEnvironment classes to simplify error handling and improve code clarity
updated file path handling in JxBrowserManager . java and added exception handling in FileUtils . java to improve code readability and handle potential exceptions during
added a check for AppVersion in the createImageFile method to ensure compatibility with newer Android versions and improve code clarity
updated logging statement in SomfyTahomaBridgeHandler . java for better clarity to improve code readability and maintainability
added JUnit DisabledIfSystemProperty annotation to AlbertoAggregatorTest . java to disable tests on Github CI
refactor OpenWireConnectionTimeoutTest to use static constants for KEYSTORE and TRUST _ KEYSTORE _ TYPE to improve code readability and
updated log messages in DynatraceExporterV2 . java and added NaNGaugeWarnThenDebugLogger . java to improve error handling and provide clear
added a call to remove the session ID from the session info to ensure that the session ID is properly removed from the session information
added host name assignment for alerts in HeartBeatHandler and AlertReceivedListener to ensure the alert name is set when the host name is null
refactor buffer handling logic in ChannelEndPoint . java to improve readability and maintainability of the code
( chore ) camel - kmodule - xsd - test - kie - api - kmodule . xsd in kmodule
added a new test method ` seekTo ` to ` ShadowMediaPlayer ` and implemented a ` seekTo ` method in ` ShadowMediaPlayerTest ` to
updated method names from ` createTask ` to ` createThrowingTask ` in multiple files to improve clarity and consistency in task naming conventions
added a conditional check for AQUA _ LAF in CloseButtonTabbedPane . java to ensure proper styling of the close button based on the
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 11919 : fix
( chore ) camel - jbpm - xstream : add default type permission to xstream .
updated the condition in Attr . java and added a new DiamondRaw class in Neg12 . java to improve error handling for non - generic types
[ hotfix ] [ table ] fix typo in RelOptUtil . java and RelOptUtilTest . java
updated argument requirements in Http2Settings . java to include a conditional check for both unsigned 16 - bit value and unsigned 32 - bit values to ensure
deleted the test file ` Issue664Test . java ` and removed the test file ` Issue664Test . java ` to remove unused test
added error handling for session management in SessionsPoolTest . java to ensure proper session management and error handling for disposed sessions
added start and end objects in GeoJsonWMSBuilder . java to ensure proper handling of JSON objects in the JSON output
replaced the method ` setIndex ( int mode ) ` with ` intValue ( ) ` in ` PopupMenuButton . java ` to simplify the code
added a method ` canCurrentlyManuallyUnstash ( ) ` to ` TaskbarStashController . java ` to ensure that the
camel - 14284 : remove unnecessary check for customid to avoid npe .
updated the ` getEventMismatchMessage ` method to use ` waitForExpectedCount ` instead of ` getEventMismatchMessage ` to improve flexibility in handling event mismatch
added a new file ` HeaderFixer . java ` to handle header file processing to facilitate the handling of license header files in the application
added a new constant ` FIRST _ LOAD _ COMPLETE ` and ` ACTION _ FIRST _ LOAD _ COMPLETE ` and `
deleted the SuperJumperAndroid . java file to remove unused classes to streamline the codebase
updated return statement in SystemTableScan . java and added a new query in TestStarQueries . java to ensure that broadcast join functionality behaves as
removed KeyValuesProviderAware and ObservationConventionAware interfaces from Observation . java to streamline the code by eliminating unused interfaces
added missingBlocks parameter to the processIdRematches method in PersistentRegistryManager and PersistentRegistryManager to enhance functionality by allowing the removal of missing items
replaced ` base + i * scale ` with ` i * ( long ) i * scale ` in ` AtomicIntegerArray ` , ` AtomicLongArray ` ,
added cache handling for format strings in HSSFCellStyle . java to improve performance by reducing redundant calculation of format strings
updated the query for retrieving user attributes in RemoteAuthenticationEndpointTests to ensure proper filtering of user credentials based on user credentials
changed the condition from ' needsInput ( ) ' to ' finished ( ) ' in DeflateCompressor . java to ensure proper handling of input and
updated log messages in Launcher . java to include container info and workspace container information to improve logging clarity and maintainability of the launcher activity
chore ( deps ) : upgrade gapic - generator - java to 2.1 . 0 and update gax - java to 2.16 . 0 (
remove deadlocktest . java that be no longer need .
added null checks and null checks in BugContentProvider , BugContentProvider , and BugGroup classes to improve error handling and provide clearer diagnostics
added a new JMenuItem for reopening the JavaScript server in JavaScriptEditor to enhance user experience by allowing users to open a URL when the browser is
added a warning for multiple times in ErrorMsg and SemanticAnalyzer classes to improve error handling by providing clearer feedback when multiple times are present
removed unnecessary runnable instantiation in BasicTest . java to streamline the code for better readability and maintainability
fix coordinatearrays . reverse ( ) and coordinatearrays . copydeep ( ) to avoid infinite loop .
updated the method call from ` setOpen ( ) ` to ` setOpen ( ) ` in ` ToolbarPanel . java ` to ensure proper
added a new variable ` first ` to ` TestPayloads . java ` to set the first value to false to ensure proper initialization of the payload
refactor overview mode handling in Launcher . java to improve code readability and maintainability
[ hotfix ] [ test ] fix networkroutetest . getdestination ( ) call
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure the correct value is returned
updated variable names in NestedArithmeticTest and AMD64FloatConvertNode classes to improve code readability and maintainability
replaced ` writerIndex ( ) ` with ` true ` in ` HttpClientRequestImpl . java ` and updated ` HttpTest . java ` to improve
updated verbose level from " analyzers - " to " analyzers - " in GetMavenDependenciesTask . java to improve clarity and correctness of
pdfbox - 4071 : use getCOSDictionary ( ) instead of getObject ( ) to avoid npe
removed unnecessary print statements from ReferenceUtil . java to simplify code and improve readability
[ flink - 18386 ] [ table - planner - blink ] make visiblefieldpredicate environment configurable
added a new parameter ` solidityJsonRpcHttpPort ` and updated its initialization in ` CommonParameter ` , ` Args ` , and ` Args
added a check for the type of ` mDragController . removeDropTarget ` in ` Launcher . java ` to avoid potential ClassCastException when
refactor ` createStubJar ` method to use ` createFrontendOnlyJavacTask ( ) ` to improve code readability and maintainability by
updated feature descriptions in GettingStartedTab , StartPageTopComponent , and StartPageTopComponent classes to enhance user understanding of feature setup and workflow
[ hotfix ] [ cassandra ] remove unnecessary call to schedulewithfixeddelay ( )
removed unnecessary type casting in OnlineTestCase . java to simplify code and improve readability
updated ReturnAttributes . NONE . value ( ) from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure consistency in attribute
refactor error handling logic in HttpChannelState and HttpChannelTest classes to improve clarity and maintainability of error handling logic
updated the CreateEndPoint class to extend Invocable . NonBlocking in ManagedSelector . java to ensure compatibility with non - blocking APIs
updated regex patterns for table header separators in TableBlockParser and added a new test for oneColumnOneHeadNoBody in TablesTest to
updated the return value from 32.0f to 31.5f in Camera . java to reflect the latest version of the camera
added a preference for " startonbootup " in GpsSettingsActivity and updated return values in Utilities to enhance user experience by providing clearer
updated the client secret value from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to ensure compatibility with larger URLs
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include the parameter name in the error message to improve clarity of error
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable tests due to race conditions
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods in ` SegmentGenerationAndPushTaskExecutor ` and ` getOutputPin
added locale handling and date formatting logic in TimeLineCursorAdapter , TimelineArrayAdapter , and TimelineArrayAdapter to ensure correct date formatting for
added MetalLookAndFeel import and set UIManagerLookAndFeel in bug8032878 . java to enhance the visual appearance of the UIManager
added a ` pingAtRegularIntervals ( ) ` method to ` Bot ` and modified ` pingAtRegularIntervals ( ) ` methods to
updated error message retrieval from ` getMessage ( ) ` to ` getReasonPhrase ( ) ` in ` ShenyuResultWrap . java ` to
refactor ` addReads ` method to ` addReads ` and ` addExports ` across multiple files to improve clarity and consistency in
added logging for CmdLineException in PinotAdministrator . java to improve error handling and logging for better debugging
updated equality and hashCode methods in Subject . java and Subject . java to indicate that equals / equals / equals / equals / equals / equals /
updated variable names and methods in CustomPlaybackOverlayFragment and ImageButton classes to improve code readability and maintain consistency in naming conventions
updated zoom level minimum values from 10 to 24 in BasicMapViewer . java to ensure proper handling of zoom levels for better performance
refactor process user and group management logic in DrillRoot . java to improve code readability and maintainability by centralizing process user and group
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in multiple files to simplify permission checks and improve code
added argumentExtractors to DelegatedClientAuthenticationAction and DelegatedClientAuthenticationWebflowConfiguration to enhance flexibility in managing argument extractors
changed the defaultGroup variable from private to final in NacosServerRegisterRepository . java to ensure immutability of the defaultGroup variable
refactor tilesizechanger to use createtilecaches ( ) instead of clear the cache
removed redundant calls to ` addInfoRow ( ) ` in ` CustomPlaybackOverlayFragment ` and ` InfoLayoutHelper ` to streamline the code
replaced ` cleanEntriesForFeedsWithSubscriptions ( ) ` method with ` cleanEntriesForFeedsWithSubscriptions ( List < Feed >
updated the parameter name from ` CoreAuthenticationTestUtils . getAuthentication ( ) ` to ` auth ` in ` ImmutableAssertionTests . java ` to
nifi - 11486 : fix test failure on window
refactor AlgoConicFivePoints . java to use e1 and e2 instead of mInv and e2 to improve accuracy in
refactor EOF condition checks in RandomAccessReader . java to improve readability to enhance code readability and maintainability
added @ SuppressWarnings ( " vararg " ) annotations to Fields , MockitoBeforeTestNGMethod , and MockitoBeforeTestNGMethod to suppress unchecked
refactor CImage class to utilize a new method ` nativeCreateNSImageFromArrays ` to improve code readability and maintainability by
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to simplify the code and improve readability
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in ` ClassParser ` and ` JavaClass ` classes to
replaced null checks with ` Objects . equals ` for version comparisons across multiple classes to improve code readability and reduce potential null pointer exceptions
add nullness check to classpathsymbolresolver . resolveclassfromcanonicalname ( ) and classpathsymbolresolver . resolveclassfromcanonicalname
added verification for NinjaProperties in NinjaDefaultTest . java to ensure proper handling of HTML errors in the Ninja default test
refactor ` updateAllAppsWidth ` method to ` updateAllAppsContainerWidth ` and ` updateAllAppsCellSize ` to
updated padding values from 25 to 27 in DetailFragment and ListFragment to improve layout consistency and enhance user interface responsiveness
updated exception handling in ZkStateReader . java to use thread interruption instead of Exception to improve thread interruption handling and provide clearer error
added null checks for fields in HttpFields and added a new test for empty headers in RequestTest to ensure robustness by preventing potential NullPointerExceptions
cloudstack - 10297 : do n ' t check if staticnat service be not available in specified network id
added resetHeadersScrollingState ( ) and setFabVisible ( false ) methods in OCFileListFragment . java to ensure proper state
removed the extra empty screen from the workspace to improve user experience by removing unnecessary screen items
added a fixedWidth flag to BitmapFont . java to ensure proper rendering of glyphs based on the font ' s fixed width settings
replaced the ` showTitle ` parameter with ` getMainLayout ( ) ` in ` ChangeLogFragment ` and modified the ` ChangeLogFragment `
refactor AbstractStateMachineFactory to utilize StateContext for pre and post transition methods to improve state machine handling and error handling in the state machine
refactor ConfigDescriptionProvider class to improve code readability to enhance maintainability and facilitate future updates
updated role handling in ` TestAuthorizationApiAuthorizer ` , ` StorageBasedMetastoreTestBase ` , and ` StorageBasedMetastoreTestBase ` classes to
updated sorting logic in FacetComponent . java and added a query for the count in TestDistributedSearch . java to improve performance by avoiding unnecessary loop
updated the ` PropertiesExpander ` to use ` getConfiguration ( ) . getModel ( ) . getDirectory ( ) ` instead of ` target `
refactor DeleteInactiveReplicaTest to handle active slices more gracefully to improve resource management and ensure proper cleanup of active slices in tests
added a ` FileName ` parameter to the ` FileActionsDialogFragment ` constructor and modified the ` FileActionsDialogFragment ` to include a ` filename ` parameter
added a constant for INVALID _ DIRECTION in CellLayout . java to improve code readability and maintainability by using a constant
updated variable names from " payAccountId " to " currency " and " account " in InnerTransferRequest . java and AccountAPI . java to reflect
[ hotfix ] [ runtime ] add a method for assertjobrunningeventually to the jobexecutionservice
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to provide
removed unused imports and added a new visitIdentifier method in FindTypes . java to streamline import statements and improve code readability
set the action text color from primary _ dark to primary _ dark to enhance the user interface by providing a visual indication of the action text
added a new ` ComparableField ` parameter to ` Manager ` , ` StreamSupplierComponent ` , and ` StreamSupplierComponent ` classes to enhance the
refactor method names from ` addTestStepsForBeforeHooks ` to ` createTestStepsForHooks ` in ` Runner . java ` to
refactor test methods in StaticHandlerMethodUtils and MethodInvokingMessageHandlerTests to improve clarity and consistency in naming conventions
updated the ` startDriver ` method to accept a ` cancelClient ` parameter and added a ` cancelClient ` method in ` RpcServer ` to
added ` getImplicitPreCoercionValue ( ) ` methods to ` SkylarkParamInfo ` , ` ParamInfo ` , and
changed the ` lastDisplayedUser ` field from ` Optional < User > ` to ` Optional . empty ( ) ` in ` FileDisplayActivity `
added an ` findAll ` method to ` QueryDslMongoRepository ` and updated its usage in ` AbstractPersonRepository ` and ` AbstractPersonRepository
added null check for SchemaRegionConsensusImpl in DataNode . java to avoid potential NullPointerExceptions when instance is null
[ hotfix ] [ benchmark ] exit warm - up loop in case of failure
added xread and xread methods to MultiKeyPipelineBase , MultiKeyBinaryRedisPipeline , MultiKeyBinaryRedisPipeline , MultiKeyBinaryRedis
replaced ` FIXME # MN ` with ` nextAdvance ` in the ` LinkedBufferInput ` and ` StreamInput ` classes to improve clarity and
added WebSecurityCustomizer annotation and updated the configureHttpSecurity method in CasWebSecurityConfiguration and CasWebSecurityConfigurerAdapter to enhance security configuration
added a new file ` TestJdbcWithDBTokenStore . java ` with a test class ` TestJdbcWithDBTokenStoreNoDoAs `
added a new method ` registerProviderInternal ` to ` ShadowContentResolver ` and updated its implementation in ` ContentProviderController ` and ` ContentProviderController
updated AttributeReader constructor to use ClassFile . Version instead of Version to ensure compatibility with the latest ClassFile class structure
added a call to ` newconfig . isKeepAlive ( ) ` in ` SingleConnectionManager . java ` to set the connection ' s keepalive
[ java ] refactored context and flow control supplier in driverconductor and mediadriver .
added null checks for getCurrentPoint in DrawLocus and GBasicStrokeD classes to improve robustness by preventing potential NullPointerExceptions
replaced ` StringBuilder ` with ` ConcurrentMap ` for buffer reading and improved exception handling in ` WebSocketConnectionD13 ` and ` WebSocketGeneratorD13 `
alexeibarantsev : do n ' t use screenshot in webclient . take screenshot
updated assertions in ShadowCornerPathEffectTest and ShadowIntentTest to use assertThat for better assertion handling to improve test readability and maintainability by using
trufflelanguage : remove deprecate contextreference . getcontextreference ( ) method
refactor Throwable handling in StubberImpl . java and add new tests for stubbingWithBadThrowablesTest . java to improve error handling and
refactored exception handling in Actor . java and Group . java to improve readability and maintainability of exception messages
added location permission dialogs and updated camera position handling in LocationPickerActivity . java to enhance user experience by allowing users to set location access permissions
add a new test class ` CounterMDB . java ` to demonstrate the usage of the ` CounterMDB ` in the application
added CookieSpecs import and set cookie specification in GetHTTP . java to enhance request configuration flexibility for HTTP requests
simplified the comparison logic in Intersector . java to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule and updated audio filtering logic in AirspyTuner
added monitoring URL parameter to the ScrollingPanel and modified the ` SystemInformationsButtonsPanel ` constructor to include a ` monitoringUrl ` parameter to
[ hotfix ] [ k8s ] remove unused config option for create timeout
added handling for " landmark " and " city " icons in NearbyListFragment and NearbyPlaces classes to improve visual representation of
added null check for the package before processing to avoid potential NullPointerExceptions when the package is null
added a new file PrintInlining . java with a main method to demonstrate the usage of the PrintInlining class to demonstrate the usage of the
fix ( javadoc ) : fix nested braces in Javadoc tag
[ java ] remove unnecessary ' publicationInitialTermId ' and ' publicationStartTermOffset ' variable from archivetest
updated EdgeDataTableModel from ` getEdgesAndMetaEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTableModel
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration classes to clean up the code and improve readability
updated Timber log messages for playback speed requests in VideoManager . java to improve clarity of log messages for better debugging
muc : do n ' t call cluster task if the cluster be not start .
updated AutoScalingHandlerTest . java to include cores instead of replicas to ensure consistency in naming conventions for better readability
added key flipy and generate mips in TextureHelper . java to enhance texture rendering capabilities
refactor ` PythonDslProjectBuildFileParser ` to use ` CloseRecordingProjectBuildFileParserDecorator ` instead of ` PythonDsl
[ j2cl ] add library normalization pass to the transpiler .
replaced the ` nextResponseBodyConverter ` parameter with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and added a new test for the
[ hotfix ] [ runtime ] add @ VisibleForTesting annotation for memorysegment . isfreed ( )
added Temporal imports and TemporalType annotations to ConsoleSessionVO . java to ensure proper handling of timestamp timestamps in data processing
added new files ` Hbs . java ` and ` HbsTest . java ` and ` HbsTest . java ` for handling view rendering
added null and empty checks for HintMessage and avatar messages in ChatMessageAdapter . java to improve user interface responsiveness and ensure proper visibility
change the method name from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to improve clarity and consistency in
add a test that waits until the alert dialog be present in the alert dialog
added a check to return null if distinct column indices are present in ReduceSinkDeDuplication . java to ensure that only distinct column indices
refactor MiscUtils to improve handling of added - to - added - to - added - to - added - to - added - to -
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
updated the version number from " websocket - server " to " websocket - client " in TestOSGiUtil . java to ensure compatibility with the
updated the return statement in SAMLAuthenticatedUser . java to use immutable collections to improve immutability and prevent potential null pointer exceptions
fix bug in editor . setmodified ( ) and repaintheader ( )
replaced ` new Double ( ) ` with ` return ` in multiple Java files to simplify code and improve readability by eliminating unnecessary object creation
updated the method call from ` getDate ` to ` getTimestamp ` in ` JdbcDataSource . java ` to ensure accurate retrieval of timestamps in the result
added a check for " javax . naming . Context " in the HtmlJndiTreeReport . java file to ensure that the class name is
added support for database options in StorageUtils and Manager classes to enhance database configuration flexibility and improve logging clarity
updated edge type comparison from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of edge types in the
removed the static final int FLAG _ SLIPPERY constant from StatusBarTouchController . java to improve code readability and maintainability by
truffleconstantfieldprovider : use arraydimensions instead of stabledimensions .
added Google Drive DRIVE _ FOLDER _ PATH preference to the PreferenceHelper and updated related classes to utilize it to improve user experience by
[ geogebra ] move shuffle suggestion to ee web so that it do n ' t crash .
added ` @ Nullable ` annotations to multiple methods in ` Truth . java ` to enhance null safety and prevent potential NullPointerExceptions
updated array size calculations in ArrayUtil . java for improved performance to enhance performance and correctness of array operations
added a new test file ` ApiExceptionTest . java ` for exception handling in ` ClassInstrumentor . java ` to ensure that the ` instrumentConstructor
added waiting for Anticompactions in StreamInManager and StreamInitiateVerbHandler classes to ensure proper handling of Anticompactions
added ` isKeyguardSecure ` and ` setIsKeyguardSecure ` methods to ` ShadowKeyguardManager ` and ` KeyguardManagerTest
added serialVersionUID to StringDialog . java to ensure proper serialization compatibility for the StringDialog class
added a conditional check for ` overrides ` in ` GrblUtils . java ` to ensure that ` overrides ` is only created when the
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForMany
modified the ` checkDrained ( ) ` method in ` AsyncFileImpl ` and added a new test for the ` drainNotCalled ` method
updated LIGHTS _ NUM and LIGHT _ INTESITY and LIGHT _ INTESITY in HybridLightTest . java to improve
replaced ` TestProjectFilesystems . createProjectFilesystem ( ) ` with ` getProjectFileSystem ( ) ` in multiple test files to simplify filesystem initialization and
changed the type of the ` loadRerunFile ` method from ` String ` to ` PathWithLines ` in ` RuntimeOptions ` and `
refactor Gson and JsonObject classes to improve code organization to enhance maintainability and readability of the codebase
updated the TEST _ DIRS array from @ NotNull to ` TEST _ DIRS ` in ` PubRoot . java ` to address
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor ) . close ( ) ` in ` ShadowParcelFileDescriptor `
added a method reference to reset the prefix index in BasisLibrary and updated BasisLibrary to use thread - local prefix index to improve thread safety
added logging level for HttpConnection in TestDistributedStatsComponentCardinality . java to facilitate debugging by logging HTTP connection logging
added an ` throwIfImmutable ( ) ` method to ` IntList ` to ensure that immutable values are not modified to prevent runtime errors
updated method signatures and import statements in GrpcServerRunner , GrpcClientBuilder , and UnitTestReadHelper , and GrpcClientBuilder to
rename Graal . java to graal . graal . graal . graal . graal . graal
[ gr - 26186 ] fix a race condition in Insightinstrument and InsightPerContext to ensure that functionsarray be invalidate
added platform - specific file handling and improved file writing logic in GenerateManifestStep . java to ensure compatibility with Windows environments and handle line endings
add a new class RFE3531161 for handling null values in FindNullDeref . java and introduce a new class RFE35
added @ Nullable annotation to ConfigDescriptionRegistry and ThingResource methods in ConfigDescriptionRegistry , ThingResource , and ThingResource classes to enhance
( chore ) camel - master - job : use exceptionutil . withtrycatch ( ) instead of throwable
added a check for the crop box in PageDrawer . java to ensure that the crop box is properly initialized when the page is not selected
refactor ManagerBase class to improve code readability to enhance maintainability and facilitate future updates
added a debug flag ` ENABLE _ ALL _ APPS _ IN _ TASKBAR ` to the ` FeatureFlags ` class to enable the
replaced ` FragmentActivity ` with ` ActivityController ` in ` FragmentTestUtil . java ` to simplify the activity initialization process and improve code maintainability
replaced ` getFileCoordinates ` method with ` processFileCoordinates ` in ` FileProcessor ` , ` ShareActivity ` , and ` ShareActivity ` to
rename ` ABCASE1 _ 1 ` to ` TestABCASE1 _ 2 ` across multiple files to improve clarity and consistency in naming conventions
updated method names from ` num ` to ` value ` in ` DynamicPropertiesStore . java ` and added null check in ` Manager . java `
updated the ` RocketChangedEventHandler ` initialization to use ` doSimsChanged ( ) ` instead of ` currentRocketHolder ` to
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to implement a recipe for changing dependency dependencies to enhance the functionality of the Maven
refactor IndexingJob and SegmentChecker to check if the input path is not a indexable to improve code readability and maintainability by reducing
updated condition in GCObjectHeapIteratorAddressOrderedList _ V1 . java and CheckObjectHeap . java in GCObjectHeapIteratorAddressOrderedList
refactor PreprocessorDelegate to use Suppliers for replacement paths and source paths to improve code readability and maintainability by reducing redundancy
changed the class name from JsonExamples to Examples in JsonExamples . java and package - info . java to clarify the purpose of the
added debug logging statements for entry and output stream processing in ViewExtractor . java to improve traceability and debugging of jar entry and output streams
refactor FindsByLinkText class to improve code readability to enhance maintainability and facilitate future updates
added a new file ` Main . java ` that prints the Java oop entry point hit to demonstrate the usage of Java oop entry point
fix a race condition in sipaccountregistrationimpl and sipaccountregistrationWizard . java to ensure thread safety
removed unnecessary continue statement in NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` test ` to ` configuration ` in ` RendererConfigurationTest . java ` to align with the new package
replaced ` ImmutableSet . builder ` with ` Supplier < ImmutableList < BuildRule > > ` in ` AndroidLibraryDescription . java ` to improve code read
updated the size of remoteContainsResults from stream ( ) to size ( ) in DistBuildArtifactCacheImpl . java to ensure accurate counting of
added charset handling in ExtractingDocumentLoader . java to ensure proper encoding is used for document metadata
updated SQL queries to use boolean values instead of string concatenation to enhance flexibility in query execution by allowing multiple parameters
added a check to return early if the slot is - 1 in PlayerInventory . java to prevent unnecessary processing when the slot is - 1
added ` ignoreTransitiveRepositories ( ) ` option to ` DefaultMavenExecutionRequest ` , ` DefaultMavenExecutionRequest ` , and ` DefaultMaven
removed the @ Inject annotation from ContactsPreferenceActivity . java to streamline dependency management by eliminating unnecessary dependencies
updated ColorsActivity to use AppCompatActivity instead of Activity to improve compatibility with newer Android features and enhance compatibility with newer Android features
added a null check before closing the selection in NIOTransport . java to avoid potential NullPointerExceptions when the selection is null
added a condition to check for the start and end of the matcher in NativeRegExp . java to ensure proper handling of string lengths during matching
updated the @ IntegrationTest annotation from " server . port = 0 " to " server . port = 0 " in MvcITest . java to
added a new ` UDFReverse ` class and implemented a ` UDF ` class in ` FunctionRegistry . java ` to enable the use of
replaced ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` for consistency to improve code readability and maintainability by standardizing
refactor Tracer class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to RocksDBStateBackendReaderKeyedStateITcase to temporarily disable tests that are not ready for execution
updated import statements in XMLChangeLogParserTest . java to simplify import statements to improve code readability and maintainability
updated thread safety in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety when clearing data in a concurrent environment
updated forecastMinutes and forecastDays from 6 to 8 in OpenWeatherMapOneCallHandler . java to improve accuracy of forecast time in the application
updated test execution timeouts in AbstractPageOperationTemplateTest . java to allow more time for fetch operations to complete before execution to improve test reliability and
added logging for splitTaskIds in RemoteTargetGluer and FloatingHeaderView to improve user experience by providing feedback when splitTaskIds change
updated the ` parseRerunFile ` method to use ` splitAndThenFlatMap ` and ` parseRerunFile ` instead of ` parse
added new item items to BotaniaCreativeTab and BotaniaCreativeTab to enhance the Botania creative tab ' s functionality for managing living and related
updated assertions in TestRadioButtons . java for consistency to improve code readability and maintainability
added file size handling in RCFileCat . java and updated RCFile . java to include file sizes in RCFile . java
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added validation for NDArrays in JnaUtils . java to ensure that NDArrays are valid before proceeding with operations
refactor BlobServer class to improve code readability to enhance maintainability and facilitate future updates
add a new test descriptor for unused private method in unused private method rule
refactor lexical scope handling in ` TryNode ` and ` Global ` classes to improve readability and maintainability of the code
added a test method ` testAutoStartup ` to ` InboundChannelAdapterParserTests ` to ensure that the ` sftp auto - startup `
added methods to retrieve the level and itemBoundables in Quadtree , AbstractNode , and STRtreeNode classes to provide access to the level
updated version parsing logic in Version . java to handle version numbers correctly to ensure correct parsing of version numbers and improve accuracy in version parsing
added a check for empty tags before adding tags in ItemRegistryImpl . java to avoid potential NullPointerExceptions when no tags are available
added ` parseDateTimeStringToEpochMillis ` method to ` DateTimePatternHandler ` and ` fromDateTime ` methods in ` DateTimePatternHandler ` to
updated the ` disassemble ` method to use ` disassembleForCache ` instead of ` Serializable ` and added a new ` RelationalValue `
refactor Log4j2ConfiguratorServlet to improve code readability to enhance maintainability and facilitate future updates
replaced HiveException instantiation with a return statement in StorageBasedAuthorizationProvider . java to simplify exception handling by directly returning a new exception instance
updated CGO command prefix handling in CGoCompileStep . java and added a new test for cgoLibraryWithWrappedCpp to ensure proper
fix : add @ buildable annotation to customresource
removed the @ Override annotation from the Only class to improve code clarity and maintainability
added TIMEOUT _ THREE _ HOURS constant and updated TIMEOUT _ THREE _ HOURS parameter handling in HttpClientFactory . java to improve
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
refactor SeleniumServer to use a new ConstraintMapping for better clarity to improve code readability and maintainability by standardizing naming conventions
removed the @ Singleton annotation from ApplicationController . java to streamline the code by eliminating unnecessary dependencies
refactor username retrieval logic in ShareActivity to use OwnCloudAccount instead of OwnCloudAccount to improve robustness by handling potential exceptions when
added a new test method ` testResumePausedInstance ` to ` SimpleJobLauncherTests ` and a corresponding test in ` SimpleJobLauncherTests `
added null check for cacheConfig before joining values in HttpSyncDataService and DataRefreshFactory to avoid potential NullPointerException when cacheConfig is null
make DockerSession public to allow external access to the class from other packages
[ java ] use the default package name instead of the package name in the compilation context .
pdfbox - 4071 : do n ' t use pdfparser for fdf docment
[ hotfix ] [ test ] use decomposerjob instead of java . io . file
refactor HttpServerTestBase to improve code readability to enhance maintainability and facilitate future updates
refactor PortletApplicationMapTest to use a mock method for assertions to improve readability and maintainability of the test code
added unit tests for ` dynamoDbIgnoreNulls ` in ` BeanTableSchemaTest ` and ` NestedBeanIgnoreNulls ` classes to
added a new interface ` RedissonAutoConfigurationCustomizer ` and implemented a new interface ` RedissonAutoConfigurationCustomizer ` to customize Redisson configurations
updated index calculation in Indicator . java and added a new test class ` IndicatorTest . java ` for ` Indicator . java ` to
added a new method ` ExecInContainerWithUser ` to ` ContainerState ` , ` Container . ExecInContainerWithUser ` , and `
removed conditional checks for interestedInByteMessages and interestedInTextMessages in WebSocketByteListener and WebSocketTextListener to simplify logic for better readability and
added tests for attribute conjunction and negated attributes in SemgrexTest . java to ensure correct behavior of attribute handling in the Semgr
added a broadcast intent for CLEAR _ PULL _ UNREAD in HomeFragment . java to ensure the CLEAR _ PULL _
removed the conditional check for PreGingerbread in TouchImageView . java to simplify the code for better readability and maintainability
add a ` ` destroy ' ' bean to the ` ` config ' ' bean in the ` ` config ' ' bean
camel - 14297 : camel - core - do n ' t throw runtimeexception when no veto be start
added FloatingActionButton to manage the display of FAB and image coordinates in ShareActivity to enhance user experience by providing direct access to the FA
added inline parsing functionality to ToDateTokenizer and created a new InlineParslet class in TestFunctions . java to enhance date parsing capabilities by allowing
refactor TestAnonymousClassUnloading . java for improved clarity to enhance code readability and maintainability
updated error messages from " Textdata " to " Textdata " in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java
added condition to check if the server is checked before binding to the operation service to ensure that the service is only binded when the server is
updated the return statement from ` getBeginColumn ( ) ` to ` getEndLine ( ) ` in ` Position . java ` to ensure accurate
added wait methods to process and error processes in CxxPreprocessAndCompileStep and ManagedThread to ensure proper resource management and prevent potential memory leak
added a boolean flag ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented a new ` PrincipalAttributeRepositoryFetcherTests ` class to
[ java ] make mapcontainer . getmaximumsize ( ) public to allow access to mapstore . getmaximumsize ( )
added support for enabled SSL protocols in NettyWebServer and ServerBasicConfig classes to enhance security by allowing configuration of SSL protocols
refactor SetOnce class to use AtomicReference for improved thread safety to enhance thread safety and maintainability of the SetOnce class
updated the return statement in QueryDslMongoRepository and added a new test for handling null values in SpringDataMongodbSerializerUnitTests to ensure
replaced ` RoundRectBorder . create ( ) . cornerRadius ( ) . cornerRadius ( ) . cornerRadius ( ) . cornerRadius ( )
added a check for empty configuration before creating a cluster and modified the BftAcceptanceTestParameterization to check if the configuration is empty before proceeding
( chore ) camel - selenide - test - java : remove unnecessary paralleltest . java
updated CountDownLatch initialization and log message formatting in PrecompiledContracts . java to ensure proper handling of sign lengths and provide clearer error messages
updated the condition in ProcessInformationsPanel to check if the window is not empty to ensure that the condition correctly handles cases where the window is not
replace maxN and maxN methods with greatest methods in MoreCollectors . java to improve code readability and maintainability by using more descript
added initialization of ` BitmexStreamingMarketDataService ` and ` BitmexStreamingService ` to ` BitmexStreamingExchange ` and `
added validation checks for latitude , lon , and lat , and lon in GeoPointField . java and TestGeoPointField . java to ensure proper
refactor workflow file handling to use a dedicated method to improve code readability and maintainability by centralizing file name retrieval logic
refactor ResponderId class implementation to improve code readability and maintainability
updated getTableDocument method to accept a boolean parameter for dependent tables to enhance flexibility in managing dependent tables based on user preference
added a conditional check for the number of consecutive uploads without coordinates in UploadActivity and UploadPresenter classes to improve user experience by providing feedback when multiple
added a method to retrieve and invalidate profile data in ProfileResources . java to improve performance by caching profile data based on user - defined parameters
refactor JpaMetamodelEntityInformation to use DirectFieldAccessFallbackBeanWrapper instead of BeanWrapperImpl to improve code readability and maintainability
added tests for last DDL timestamp creation and index retrieval in UpgradeIT and ConnectionQueryServicesImpl to ensure accurate testing of last DDL timestamp
added support for ` EarlyEofExceptionMapper ` in ` AbstractServerFactory ` , ` DropwizardResourceConfig ` , and ` DropwizardResource
added a new parameter to the ` storeFieldAction ` parameter in ` EntryEditor . java ` to control the visibility of the ` storeFieldAction
updated the ` nativeCreateNSWindow ` method to include ` ownerPtr ` parameter and modified the method signature to ensure proper handling of window owner
updated SQL command for file table name in FileContentProvider . java to improve clarity and maintain consistency in naming conventions
updated the ` CIRCULAR _ PROGRESS ` and ` fireTileEvent ` methods in ` Tile . java ` to include ` Stock
fixed - http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 12626
add a test case for complex type in generic container in typeframemodelingvisitor .
refactor back progress handling in LauncherBackAnimationController to utilize a new BackProgressAnimator class to improve code readability and maintainability by
modified the ` _ initialPageNo ` variable to be ` _ initialPageNo ` and added a new ` _ initialPageNo ` variable to
[ hotfix ] [ table - common ] fix checkstyle issue .
updated comment parsing logic in FormattedSqlChangeLogParser . java and added a test for comment parsing in FormattedSqlChangeLogParserTest .
changed the instance of ` JarArchiver ` from ` new ` to ` JarArchiver ` in ` MavenArchiver ` and added import for
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve exception handling for class usage file loading failures
updated conditional checks in TSServiceImpl . java and added a multi - aggregation test in DaemonTest . java to improve code readability and
added support for UNSIGNED _ BYTE format in GwtGL20 . java and improved error handling in GwtGL20 . java to ensure compatibility with
refactor test methods in OutputMemoryTest , PrintR , and VarDump classes to improve clarity and consistency to enhance code readability and maintainability
refactor exception handling in InlineBytecodeGenerator to use a volatile Throwable instead of UnmodifiableClassException to improve exception management and provide clearer
updated trace handling in NativeImageBytecodeInstrumentationAgent and added a new method in ConfigurableClassInitialization and ConfigurableClassInitializationFeature to improve trace
fix typo in basebrokerrequesthandler . gettimespentms ( )
updated the ` TopicRouteService ` to use ` Caffeine ` for loading topic routes to improve performance and maintainability by utilizing a more
added a readOnly parameter to the createDataSource method in MBTilesDataStoreFactory and updated connection pool initialization in MBTilesDataStoreFactory to
updated regex patterns for invalid source release in FindBuildToolFailures . java and added a new error message in FailureLogAnalyzerTest . java to
updated URI building logic in DetailFragment . java and added a new Intent . ACTION _ VIEW intent in DetailFragment . java to ensure
added null check for parameterContextDto in StandardParameterContextDAO . java to avoid potential NullPointerException when accessing inherited parameter contexts
refactor ClassLoader class implementation to improve code readability and maintainability
added a new method ` setOriginResponseHeader ` to ` ProxyRequestHelper ` and a corresponding test in ` ProxyRequestHelperTests ` to ensure
removed the new ProfileSettingDrawerItem ( ) method from GpsMainActivity . java to simplify the code and improve readability
added XML validation attributes for JASPER XML validation in multiple classes to enhance XML validation capabilities in the application
updated error messages in FileHandler and added a new test for JavaScript string handling in ExecutingJavascriptTest to improve clarity of error messages and ensure correct
added a maxRows variable and updated exception handling in IoTDBStatement . java to ensure that maxRows is only set if it is greater than
refactored conditional checks in SqlStreamTerminator to use allActionsAreOptimizableFilters instead of isCountOptimizable to improve code read
added event dispatching for selected nodes and mouse events in StandardVizEventManager . java to ensure proper event dispatching of selected nodes and mouse
updated the ` zeroBuffer ` method to use a new ` zeroBuffer ` method to improve code readability and maintainability by encapsulating
replaced the ` xorGroup ` variable with ` memory . getXorGroup ( ) ` in ` TerminalNode . java ` to improve memory management and
added getter methods for image dimensions in LCDUIImageMonochromeBitmapSource . java to improve code readability and maintainability
refactor SourcePathResolver to use a dedicated method for retrieving relative paths to improve code readability and maintainability by encapsulating path retrieval
fix : xmlparser . encoderesourcetostring ( ) do n ' t encode the value in dstu2
changed the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and added encoded URL handling in ` WebsocketRoutingFilter
refactor ` LLVMPaths . java ` to ` EXTERNAL _ TEST _ SUITES _ EXECUTION _ CONFIG `
added a method to retrieve CxxPlatform based on BuildTarget arguments to improve flexibility in handling build target arguments
added imports for IndexReader , IndexReader , and Similarity classes in multiple Java files to ensure compatibility with the latest Lucene API standards
added null checks for current and popped stack in ConcurrentLinkedStack . java and updated related tests in ConcurrentLinkedStackTest . java to improve robustness
added methods ` isMatched ` and ` setMatched ` to ` BinaryHeapQueueTest ` , ` BaseQueueable ` , and ` BaseQueue
added a null check for mDirectories before accessing it to avoid potential NullPointerException when mDirectories is not initialized
added a condition to check if mOverviewStateEnabled and mFirstLayout is not enabled in RecentsView . java to ensure proper handling of gesture
added package - info . java files for various Lucene package - info . java files to organize package - info . java files for better organization and clarity
added a message to display the visibility of the autoleveler panel in AutoLevelerTopComponent . java to improve user experience by providing a clear
added optimization callbacks in DirectUpdateHandler , DirectUpdateHandler2 , and UpdateHandler classes to enhance the functionality of the update handler to optimize event listeners
updated decompressor initialization to use padded length instead of Inflater to ensure proper handling of compressed data in compression mode
removed the check for user data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to check for local metastore in RetryingMetaStoreClient . java to ensure that retriesMade does not exceed the specified limit
updated import statements and logging statements in HeliosSoloLogService . java to improve error handling and logging clarity
refactor Subject class to improve code readability to enhance maintainability and facilitate future updates
use concurrentreferencehashmap instead of concurrentHashMap to avoid concurrentreferencehashmap
updated color distance calculation in HSSFPalette . java and added a new test for findimilar color in TestHSSFPalette . java to
updated multiple request classes for consistency and clarity to improve code readability and maintainability
added a new test method ` testShouldBeAbleToFindASingleElementByNumericId ` and ` testShouldBeAbleTo
added a ` flags ` parameter to the ` registerReceiver ` method in ` ShadowApplication ` , ` ShadowInstrumentation ` , and ` ShadowInstrumentation `
refactor FFmpegTest to use InvocationOnMock for version verification to improve readability and maintainability of the test code
refactor OggInputStream and OpenALMusic classes to use a previous input stream to ensure proper resource management and prevent memory leaks
added a new constant ` RESPONSE _ WAS _ NULL ` in ` AssertionResult . java ` to improve code readability and maintainability by
added a condition to check for anomaly warning count in DetectionMigrationResource . java to ensure that the condition correctly handles cases where anoma
updated BaseActivity to extend SherlockActivity and DetailActivity to improve user experience by providing feedback when info is enabled
updated the request creation method in TracingFeignClient . java to include the requestTemplate ( ) method to enhance request handling by including request
updated LDAPCertStore to handle LDAP referral information and improved error handling to enhance robustness and provide clearer error messages for LDAP referrals
refactor the retain method in GatewayRSocket to use a dedicated method to improve code readability and maintainability by encapsulating the retain
updated AdapterViewTest to ListViewTest and added a new test method for performing item clicks to improve test coverage and ensure proper functionality of item click
[ hotfix ] [ test ] fix checkpointfailuremanageritcase test failure
deleted the GenericItemUIProvider . java file to remove unused classes to streamline the codebase
added a ` selectedObject ` field to the ` SIPCommSelectorBox ` class to enhance the functionality of the selector box by allowing the selection of
added Isolated annotation to MetaInfConfigurationTest . java to enable testing of FileSystemPool functionality
set the server connector host to HTTP _ INFO . bindAddress in HttpServer . java to ensure the server connects to the correct port
added support for " authorization _ code " and " client _ credentials " grant types in DynamicClientRegistrationEndpoint . java to enhance client validity checks for
added CloverInstrumentationFilter to the TestInterfaceAudienceAnnotations class and modified condition checks in SplitLogCounters to enhance the class ' s ability to
added ZHIMI _ HUMIDIFIER _ CB2 support for Smartmi Evaporative Humidifier in MiIo
fix a bug where a block do n ' t break a pipe . close # 244
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the setScrollRangeDelta method from other classes
added error logging for empty repositories in ClusterStackVersionResourceProvider , HostStackVersionResourceProvider , and HostStackVersionResourceProvider to improve debugging and
modified the condition to check for missing values in IntHashSet . java to improve clarity and maintainability of the condition checking for missing values
added Serializable parameter to RuleAdministrator class to enable serialization of RuleAdministrator instances
added set of allowedorigins and allowedTimingOrigins to the ` generateAllowedOrigins ` and ` allowedOrigins ` and ` allowedTiming
added " knight . g3d / cubes . g3d / cubes . g3d / knight . g3d
updated the logic in the numHashCache and added error handling in WitnessService . java to improve robustness by preventing invalid solidified positions
hbase - 13234 fix npe in execresult . getresult ( ) and testservercustomprotocol
added a new method ` hasAccess ` to check if a remote user is authorized to enhance security by preventing potential NullPointerExceptions
replaced ` jar . putNextEntry ` with ` ByteSource . getStubClassBytes ` in ` ClassMirror . java ` and added ` CreateStubAction
added a method to set the internal link text in FileDetailSharingFragment to enhance user experience by providing clearer information about the sharing of files
updated assertion in PredictionTest to use Locale . ENGLISH for accuracy formatting to ensure consistent accuracy formatting across different locales
updated the condition for checking for SATURDAY in ModelZooTest . java to ensure that the test accurately reflects the intended behavior of the
added hideInput ( ) method to AllAppsContainerView and updated LauncherAllAppsContainerView and LauncherAllAppsContainerView
added InMemoryEventStorageEngine to EventHandlingConfigurationTest and SagaConfigurationTest to enable the use of InMemoryEventStorageEngine in the event store
refactor file handling in BsdFileStore , BsdNativeDispatcher , and UnixNativeDispatcher classes to improve code readability and maintain
add unit test for issue # 1599 ( # 1599 )
added arguments for spawning commands in SpawnCommand . java to enhance command functionality by allowing dynamic positioning based on arguments
refactor content area calculations in Folder . java to use a constant for minimum content area size to improve code readability and maintainability by centralizing
[ gr - 27386 ] fix test failure on graal compiler
updated directory initialization from ` newDirectory ( ) ` to ` newMockDirectory ( ) ` in TestIndexWriter . java to ensure compatibility with Windows
added ` pluginChecks . m _ failedChecks . add ` to ` UpgradeCheckRegistry ` and ` UpgradeCatalog280 `
refactor Environment class to improve code organization to enhance maintainability and readability of the code
added a BadApple annotation to the RecoveryAfterSoftCommitTest class to address issue SOLR - 7421 related to SOLR - 7421
updated file path handling in CodenameOneImplementation . java and HashtableContent . java to ensure correct path formatting and improve error handling for child types
updated FLAG _ IGNORE _ HDMV _ DTS _ STREAM and FLAG _ ENABLE _ HDMV _ DTS _ AU
replaced ResourceAccessor with FileSystemResourceAccessor in LiquibaseEntityResolver and XMLChangeLogSAXParser to simplify resource access and improve code maintainability
added security settings for JDK tls algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by disabling SSL algorithms
updated the Immutable annotation in AbstractCxxDeps and modified CxxLibraryDescription to use builder and singleton to improve code readability and maintainability by
rename ` expectedDirectory ` to ` actualStubDirectory ` in ` StubJarTest . java ` to improve clarity and consistency in naming conventions
updated the ` resizeThreshold ` annotation from ` @ DoNotSub ` to ` @ DoNotSub ` in ` Int2ObjectHashMap . java
updated folder name hint logic to check for empty title and title before setting hint to improve code readability and maintainability by reducing redundancy
added " uaa " to the loadClientByClientId method in UaaResetPasswordServiceTests . java to include the " uaa "
changed access modifiers of isEmptyOrWhitespace and isSpecialCaseOrUnknown methods from public to private in ShadowSQLiteDatabase . java to restrict access to
updated value formatting in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition , and UnsafeBufferPosition classes to ensure accurate representation of isClosed state
refactor MimetypeIconUtil class implementation to improve code readability and maintainability
rename method names from ` supportsViewFor ` to ` supportsViewsFor ` across multiple classes to improve clarity and consistency in naming conventions
added a new test method ` negatedInstanceOf ` to ` UnnecessaryParenthesesTest ` to address issue # 3904
added a ` built ` boolean and ` teleport ` method to the ` Location ` class to enable proper handling of ` org . bukkit . World
replaced the use of ` crypto . codec . Base64 ` with ` Base64Utils . encodeToUrlSafeString ` in multiple classes to improve
updated import statements in TranslatorManagerHelper . java and added a new Statistics . report method in TranslatorManagerHelper . java to improve code organization
changed the interface ` ContainerAnnotation ` from ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the interface in the interface
added null check for ` getId ( ) ` in ` ObjectIdentityImpl . java ` to ensure that ` getId ( ) ` returns a non -
refactor ` setUpRevampedTweet ` method to accept ` muffledUsers ` instead of ` holder ` in ` TimeLineCursorAdapter
added a conditional check for the addon theme in UserProfileActivity to ensure verified text is only displayed based on user settings
refactor AbucoinsDigest and HMAC _ SHA _ 256 initialization in AbucoinsDigest . java to improve code readability and maintainability
camel - 14284 : camel - mongodb : add autowiredname ( ) method to enable autowiredname ( ) .
added sourceIndex parameter to AttributeMapping and related classes to enhance attribute mapping functionality by allowing dynamic source indexing
added error handling for corrupted partition statistics in SemiTransactionalHiveTransactionalHiveMetastore . java to improve error handling and provide
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to ensure that security is only enabled when necessary
refactor ConnectivityReceiver , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
geoserver : fix email escape for contact email in the home page
refactor terasologyengine to use terasologyengine . enrichreflectionswithmodules instead of terasologyengine .
added validation for the number of features in the JoinModeller class to ensure that the mmf stream correctly reflects the expected number of features in the
fix a bug in the command that cause the command to fail to start with < math >
[ hotfix ] [ kafka ] reduce log verbosity in singlenodekafkaresumestrategy
replaced ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _ PLAYBACK _ SP
updated the ` MotorInstance ` and ` IgnitionEvent ` classes to use ` getDefaultMotorInstance ( ) ` instead of ` content `
tika - 132 : add support for ascii _ chunk _ length in msownerfileparser . java and add unit test .
added a @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as non - deterministic on JDK
updated the ` createLockFile ( ) ` method to use ` createLockFile ( ) ` instead of ` createLockFile ( ) ` to
added new boolean values for " version _ 5 _ 3 " and " timeline _ sync _ interval " in ` UpdateUtils . java ` to support
added a check to return null if the username is FEDERATION _ USER to prevent potential null pointer exceptions during authentication
use truffleobject instead of truffleobject in executemethodnode
replaced ` Collectors . toList ( ) ` with ` Collectors . toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest `
logback valve : do n ' t throw an error if the access event do n ' t exist
refactor Collection , Map , and Map classes to improve code organization and maintainability
removed unused import of Version from CreateIndexTask . java to clean up the code and improve readability
added support for backing indexes and schemas in MissingPrimaryKeyChangeGenerator . java to ensure compatibility with Oracle databases and improve index handling in comparisons
added exception handling for MetastoreException in execute and repair methods in Msck to improve error handling and provide clearer error messages for invalid partition names
[ hotfix ] [ kafka ] add retryabletransaction ( ) method to kafkacommitter . committransaction ( )
[ issue # 116 ] fix message receipt handle in forwardmessagetodlqactivity ( # 11717 )
added a ` withServices ` method to the ` DockerComposeContainer ` class and created a new test class ` DockerComposeServiceTest ` for testing
refactor code to use a static copySet method in Export . java and StructContextDecorator . java to improve code readability and maintainability by
added exception handling for XML processing in FeedParser . java to improve error handling and streamline XML processing
updated conditional checks in Launcher . java and Workspace . java to improve code readability and maintainability
[ hotfix ] [ metric ] use double instead of int in meterrealtimebodydatadatadata dto
added a new file ` bug4150029 . java ` that implements a JApplet class for testing temporary directories to ensure that the BackSpace
added ` isSparkConfigUpdated ` and ` setSparkConfigUpdated ` methods to ` HiveConf ` and ` SparkClient ` classes to
added a new method ` getLongPressIndicator ` to ` AppIcon ` , ` AppIcon ` , and ` Launchable ` classes and updated related
added a check for empty polys in WKBWriter and updated test cases in WKBWriterTest to ensure proper handling of empty polygons and
refactor UnflavoredBuildTarget and AbstractUnflavoredBuildTarget to use an instance of UnflavoredBuildTarget to improve
added a new file ` MultiplyByMaxInt . java ` with a test method to verify the behavior of the MultiplyByMaxInt class
added a null check for the current file in OCFileListFragment to enable the drawer indicator based on the current file state
removed unnecessary import statements from TestRAMDirectory . java to streamline code organization and improve readability
replaced FixedBitSet with BitSet in Automaton . java and Operations . java to improve memory efficiency and maintainability of the code
[ drools - 351 ] add a message for no expression on a node in the compiler , and add a new message to the message
replace @ ContainedBy ( AC . class ) with @ Repeatable ( DC . class ) in multiple test files to improve clarity and consistency in
updated message formatting in AbstractController . java to improve readability and maintainability of the code
added package access check in OpenMBeanAttributeInfoSupport . java to ensure proper package access checks before loading class names
patch by jbellis ; review by jbellis for cassandra - 1454
added a call to roundTo16 ( s ) in StoreDirect . java to correct the calculation of the free size for better memory management
refactor ` areTouchesDisabled ` method to use ` motionEvent ` instead of ` areTouchesDisabled ` to improve code readability and maintainability
updated SslContextFactory and RESTServer to use SslContextFactory . Server instead of SslContextFactory . SslContextFactory .
removed the PrivilegedSocket class from the PG _ Stream class to simplify the connection creation process and improve code readability
refactor InputTest class for improved clarity to enhance code readability and maintainability
updated DepthController , AbsSwipeUpHandler , and AbsSwipeUpHandler to use QuickstepLauncher instead of QuickstepLauncher to improve user experience
added null check for current location marker before adding it to the map to avoid potential NullPointerExceptions when adding the current location marker
updated the method to retrieve client details from client to clientDetailsService in ClientAdminEndpoints . java and added new test cases in ClientAdminEndpointsTests
updated SQL query parsing and configuration initialization in SqlSourceBuilderTest . java to improve readability and maintainability of the code
[ amq - 4071 ] use thread . currentThread ( ) instead of thread . currentThread ( )
added unit tests for handling unknown key exceptions in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys in the SlidingG
added null checks for condition data list in ShenyuTrieRuleListener and ZookeeperSyncDataService to improve code robustness and prevent potential NullPointer
[ jme3 ] make lightcontrol . controldir , light , and light .
added @ SuppressWarnings ( " UnusedAssignment " ) annotations and modified stack handling logic in StdErrLog . java to improve code readability and
added null context checks in HttpSessionEventPublisher to ensure that the application context is not null to prevent potential NullPointerExceptions during event publishing
added a check to ensure the syntax of CREATE CQ statement has changed from v0 . 14 to v0 . 14 to improve error handling for
[ hotfix ] [ table - common ] fix typo in flinkiotdbsink . java
added a counter for custom simplification in CanonicalizerPhase . java to improve code readability and maintainability by encapsulating
updated the method ` fileIcon ` to include the context parameter in ` ActivityListAdapter . java ` to ensure the correct context is used for the
updated identifier retrieval from ` readIdentifierWithSchema ( ) ` to ` readIdentifierWithSchema ( schema . getName ( ) ) ` in ` Parser
added time format support for TIMESTAMP fields in BigQueryTableRowIterator and corresponding unit tests in BigQueryUtilTest to ensure accurate representation of timestamp
added ` findViewWithTag ` method to ` ShadowView ` , ` ShadowViewGroup ` , and ` ShadowViewGroup ` classes to enhance
refactor code to use generics for loops in multiple classes to improve type safety and reduce unchecked cast warnings
updated import statements in IndexToolForDeleteBeforeRebuildIT and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and JavaClassUtil classes to improve clarity and functionality of annotation handling in the
fix resourcefeature . isjar ( classpathfile . topath ( ) ) .
updated CUDA _ C _ 32F and CUDA _ C _ 8I in cublas . java and cuda . java
refactor ResourceLoader class to use FileFilter for resource loading to improve code organization and maintainability by encapsulating resource loading logic
refactor BlockRedstoneTorch to use SimpleAttachableMaterialData instead of RedstoneTorch to improve compatibility with SimpleAttachableMaterial
added a case for VARBINARY in RelToStageConverter . java to handle VARBINARY data types in RelToStageConverter . java
removed unused import of DateHelper in NoteAdapter . java to clean up the code and improve readability
added error handling for backup load failures in Backup . java and updated feedback in Captions . java to improve user feedback by providing clearer feedback
updated the position from ABSOLUTE to RELATIVE in EuclidianSimplePanelW . java to correct the positioning of
simplified file deletion logic in ShadowParcelFileDescriptor . java to improve code readability and maintainability
refactor SecurityContext handling in StackBasedSecurityContextHolderStrategy and SecurityContextPropagatingChannelInterceptorTests to improve code readability and maintainability
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to improve clarity and consistency in rule naming
added unit tests for XorNeutralSnippet and XorNeutralReference in IntegerEqualsCanonicalizerTest and IntegerEqualsNode
removed the static final Type . STRING _ ARRAY constant from TypeFactory . java to improve code readability and maintainability
updated the hideIme method in AllAppsContainerView , LiveSearchManager , and LauncherAllAppsContainerView classes to improve code
add a new file ` setBits ` to ` BlockStateContainer ` to fix network issues and resize below if necessary to ensure proper handling of bit
updated assertion messages in TimelineMetricCacheSizingTest and TimelineMetricCacheTest to improve clarity and consistency in test assertions to enhance readability
added a new method ` getGLMaximumTextureSize ` to retrieve the maximum texture size in ` Minecraft . java . patch ` to optimize texture size
[ hotfix ] [ runtime ] fix typo in trystoplogrecording ( ) call
added a condition to reset startPosn when inTransform is enabled to ensure startPosn is set to zero when in transform mode
added a ` _ skipStarTree ` method to ` AggregationGroupByOrderByPlanNode ` , ` AggregationPlanNode ` , and `
refactor NearbyActivity to use a boolean variable for lockNearbyView to improve code readability and maintainability by encapsulating
added a new method ` of ` and ` biMap ` to the ` MapTransformer ` class to enhance the functionality of the ` MapTransformer `
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for retrieving widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer classes to enhance functionality by allowing retrieval of widget span information
replaced ` ChangeEvent ` with ` EventObject ` in ` StageSelector ` and ` StageAction ` classes to enhance event handling capabilities and improve code
added methods to retrieve and reset calls in Robolectric , ShadowBinder , and ShadowBinder classes to enhance functionality and ensure proper handling of calling
updated the ` ExpectationFailure ` class to use ` Objects . equals ` and ` Throwable ` instead of ` AutoValue . AutoValue `
removed the warning log statement in BitcoinSerializer . java to clean up the code and reduce unnecessary log clutter
fix imagereplacedelement . setwidth / h / w / h / w / h / w / h / w / h / w /
updated Markdown rendering logic in CoreMarkdownNodeRenderer , MarkdownWriter , and MarkdownWriter classes to ensure proper handling of special characters in Markdown characters
refactor password sharing logic in SharePasswordDialogFragment to improve code readability and maintainability by encapsulating password management logic
refactor ` getFileChannelMethod ` to use ` MappingMethods ` instead of ` UNMAP _ ADDRESS ` to improve encapsulation and
renamed methods from public to alphanumeric in ` AbstractAssert _ describedAs _ printed _ to _ console _ Test ` and ` AbstractAssert _
added OPTION _ ARGS , OPTION _ SLIDER _ KEYTAB , and OPTION _ SLIDER _ KEYTAB
updated the ` tearOutGraphViewContainer ` method to use ` JFrame ` instead of ` JFrame ` and modified the ` tearOutGraphViewContainer
added support for loading workspaces in LauncherModel . java to ensure proper loading and loading of shortcuts when the workspace is loaded
changed ` data ` to ` data ` and ` nodePaths ` across multiple operators to improve immutability and ensure immutability of the `
added a new method ` JsonValidationReport ` to ` IssueInterface ` , ` ValidationReport ` , and ` ValidationReport ` classes to enhance the
added a method to retrieve the cipher provider name in RSAClientKeyExchange . java to improve error handling and provide clearer debugging information for SSL provider
rename ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to improve clarity and consistency in naming conventions across the codebase
updated log level from WARNING to OFF in CCJSqlParserUtil . java to improve logging behavior for better user experience
removed unnecessary indent formatting in AggregateLifeCycle . java to improve code readability and maintainability
changed the visibility of BITMAP _ HEIGHT and WIDTH from private to public to allow external access to the BITMAP _ HEIGHT
removed the @ Ignore annotation from CovariantOverrideTest . java to clean up the test code and improve readability
renamed ` curly ` method to ` Qtype ` for clarity and consistency to improve code readability and maintainability by using a more descript
camel - 14284 : camel - model - reload - strategy - fix camel - model - spring - model - spring - model - reload -
added space minimum and maximum dimensions to the X - axis in ScatterChart . java to enhance the visual representation of the chart ' s dimensions
updated string concatenation in ExpressionStringBuilder . java to improve readability and maintainability of the code
added a method ` shouldPreserveDataStateOnReapply ( ) ` to ` SplitScreenSelectState ` , ` RecentsView ` , and
added a check for " UTF8 " key in CheckEncodingPropertiesFile . java to ensure that a valid UTF - 8 key is provided to prevent
updated TestReproduceMessage and LuceneTestCase to use a randomized runner for test execution to improve test clarity and maintainability by using a more
added a user long - pressed event for the AllApps item in StatsLogManager and updated the Log statement in ItemLongClickListener to enhance user
added null check for log in StoreWAL . java and created a new test class Issue112Test . java with a new test class for double
added a check for the presence of the showSectorLandInfo in the SectorPreset class to ensure that the showSectorLandInfo is
updated type casting in multiple Java files to use generics instead of generics to improve type safety and eliminate unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
updated the buildNearbyRandom method to accept a boolean parameter and added validation for distribution parameters to enhance flexibility in building NearbyRandom based on
refactor temporarycache . removelastupdatetime ( ) and cache . removelastupdatetime ( )
removed the visibility of the layersContainer variable from the createSQLViewContainer and createWMSLayerImportContainer in NewLayerPage . java to simplify
changed the default value of Availability _ availability from ` Availability _ availability ` to ` Availability . UNAVAILABLE ` in ` ContextHandler .
updated sync logic in FetchInvDataMsgHandler and PbftDataSyncHandler to include peer ' s sync finish status to ensure proper handling of
updated RetrySettings to use ` no _ retry _ codes ` instead of ` idempotent ` and ` no _ retry _ 1 _ codes
updated the ` _ freeSpaceReclaimDisabled ` and ` _ freeSpaceReclaimQ ` fields in ` DBMaker . java ` to allow
changed access modifiers of ` KDC _ OPT _ REXIABLE ` and ` KDC _ FORWARDABLE _ OK ` constants to
refactor JsonWriter initialization and writer initialization in Json . java to improve code clarity and ensure writer is properly initialized
updated variable names from ` mentions ` to ` mentionsQuery ` and ` mentionsQuery ` in ` ProfilePager . java ` to improve
changed the method name from ` paintBackground ( Graphics ) ` to ` paintComponentBackground ( Graphics ) ` in ` Slider . java ` to
added a new method ` valueFromClassConstant ` to handle object value constant values in ` Configuration . java ` to ensure proper handling of class values
added error handling for initialization of KafkaService to improve robustness by logging exceptions during service initialization
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to include " usr / share / zoneinfo / tzdata " and " us
camel - 14284 : camel - jms - auto - create the default channel for the message bus .
added keywords handling in HTMLDocument . java and created a test for index keywords in TestDemo . java to enhance document indexing functionality and ensure correctness
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added a conditional check for the presence of addresses in MemcachedSessionDataMapFactory . java to improve code readability and maintainability
updated the instantiation of the constructor in CorrespondenceSubclassToFactoryCallTest . java to improve code readability and maintain consistency in naming conventions
refactor Builder class to improve code organization to enhance maintainability and readability of the code
refactor ISBNtoBibTeXFetcher to use ebook . ebook . de / isbn2bibtex instead of
refactor polyglotimpl to improve exception handling for better error management to enhance reliability and maintainability of the code
added null check for the text before fireDataChangedListener to avoid potential NullPointerExceptions when the text is null
add a simplified model to make sure we do n ' t use the rnn library .
added a trim ( ) method to the SuffixURLFilter class to ensure the line is clean before processing
added a check for inGodmode in HandlerCombatInvocationsNotify . java to prevent unnecessary processing when the player is inGodmode
refactor popup registration logic in CheckboxCreationDialogW . java and TextInputDialogW . java to improve code readability and maintainability
changed the parameter type of the ` maximumSize ` parameter from ` boolean ` to ` boolean ` in ` LinkedHashMapCache ` and ` TCache `
updated the close method from ` _ channel . close ( ) ` to ` _ channel . close ( ) ` in ` ChannelEndPoint . java `
added null checks for keyIndex in FixAcidKeyIndex and modified KeyIndexBuilder initialization in OrcRecordUpdater and TestFixAc
updated exception handling in DirectUpdateHandler2 . java to use Locale . ROOT for better error reporting to ensure consistent exception handling across different locales
added storecheckguard option to ` Tool ` , ` DefaultJavaLoweringProvider ` , and ` CanonicalizerPhase ` , and ` Default
[ gr - 27186 ] fix bci block to be compatible with jsrentryblock
added a method ` getClassificationDisagreement ( BugInstance b ) ` to ` AbstractCloud ` , ` Cloud ` , and ` View
replaced ` BuildTarget . copyOf ( buildTarget ) . copyOf ( buildTarget ) ` with ` BuildTarget . copyOf ( buildTarget ) ` to
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
updated date _ taken and subFolders parameters in InstantUploadBroadcastReceiver and FileStorageUtils to use long values instead of Long . parseLong to improve
refactor ` DefaultSdkProvider ` to use ` Set < Sdk > ` instead of ` TreeMap < Integer , Sdk > ` to improve
updated the spinner variable name from ProgressIndicator to ConfidenceProgressIndicator in CreateOfferView . java to improve clarity by using a more descriptive
updated check for " Cling / " header in RequestHandler . java and updated upnpServiceImpl initialization in RequestHandlerV2 . java to
refactor blueprint and blockindex to use ` forceIterate ` instead of ` iterateBpt ` to enhance functionality to control the behavior of the
added a new constant ` VIEW _ TYPE _ MESSAGE _ NOFLEX ` and modified ` VIEW _ TYPE _ MESSAGE _ NOF
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL . java
added support for the ` ` target ' ' attribute in ` EnglishGrammaticalRelations . java ` to enhance the functionality of the ` `
updated the ` insert ` method in ` TexturePacker . java ` to use ` node . writePackEntry ( ) ` instead of ` canvas
updated the ` getVisitors ( ) ` method in ` RefactorModule ` to use ` reduce ( ) ` instead of ` SourceVisitor `
added methods to retrieve child elements by name in Xml . java to enhance functionality for retrieving child elements based on their names
updated Content - Charset header handling in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of character encoding in HTTP requests
replaced ` UI _ STATE _ ALLAPPS ` with ` SystemUiControllerFlags ` and updated ` UI _ STATE _ ALLAPPS ` to
removed the clientService field from the IntrospectingTokenService class to improve encapsulation and encapsulation
updated error message in HiveRecordSet to include offset and length in exception messages to improve clarity of error reporting for better debugging and debugging
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unused variables
corrected the spelling of " backup " in the ` BackupSnapshotAferTakingSnapshot ` method in ` Config . java ` to
updated the ` merge ` method to use ` score ` instead of ` score ` to ensure that the score does not exceed the score value
removed the private Digester field from Md4PasswordEncoder . java to clean up the code and improve encapsulation
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure that maximumUnimprovedStep
added a check for empty editors in EditGcodeFile . java to avoid unnecessary processing when no editors are available
refactor ` verify ` method to use ` Mockito . verify ( mock ) ` instead of ` Mockito . verify ( mock ) ` to improve code
updated the classloader assignment from ` Thread . currentThread ( ) . getContextClassLoader ( ) ` to ` PathScanner . class . getClassLoader ( ) ` to
added a check for ` CodeFirstPojoClientIntf ` and updated the ` sayHi2 ` method in ` CodeFirstPojoClientIntf
[ hotfix ] [ test ] fix test for splitbrainprotectiontest
added null check for logoutConfigurer in DefaultLoginPageConfigurer and modified filter addition logic in ServerHttpSecurity and ServerHttpSecurity classes to improve robustness
updated string concatenation in CASgiac . java for clarity to improve readability and maintainability of the code
added logging functionality to the DockerComposeContainer class and created a new ` withLogConsumer ` method in ` DockerComposeContainer . java ` to enhance
updated the type of the ` testMapping ` method from ` expected ` to ` actual ` in ` StandardJavaTypeMappingTest . java ` to improve
updated import statements in AmbariMetaInfoTest . java for improved clarity to enhance code readability and maintainability
added a static method ` fromSupplier ` to return a ` Supplier < T , T > ` instead of a ` Supplier < T , T >
replaced a break statement with a return statement in ConsoleActivity . java to improve code readability and maintainability
camel - 14284 : add support for text - content - post in platform http
added support for platform - specific path handling in MorePaths and AarWithLibsIntegrationTest to ensure consistent path formatting across different operating systems
added a null check for authorizationContext in AuditEvent . java to avoid potential NullPointerException when authorizationContext is not initialized
added a throwExceptionIfFail method to the ` loadLibraryOnlyIfPresent ` method in ` NativeLibraries . java ` to improve error handling by
updated SDK version from " 4611349 " to " 4514284 " in SdkConfig and added isStopped method in ShadowText
add a new transactionlogkey class and add a new ` TransactionLogKey ` class for better transaction logging functionality
added a boolean property ` enableSqlWithoutProfile ` to ` JdbcEnvironmentProperties ` , ` JdbcEnvironmentRepository ` , and ` JdbcEnvironmentRepository `
added try - finally block in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
fix Eclipse compiler warning in ModLoadingStage . java to improve type safety and eliminate unchecked cast warnings
updated date formatting from ` date ` to ` calendar ` in ` DateUtils . java ` and modified test assertions in ` FontParsersTest .
updated ` loadValue ` method to include ` STACK _ TRACE _ DEPTH ` in ` CachedThreadStatesGaugeSet ` and ` ThreadStates
added a ` prevTlogOnPrecommit ` variable and modified test assertions in ` LeaderTragicEventTest ` and ` LeaderTrag
updated ` FastAsyncWorldEdit - P2 - V6 ` to ` FastAsyncWorldEdit - 1 . 17 / " in ` BukkitPlatform
added null check for outputDirectory in SegmentGeneratorConfig . java to ensure proper directory creation and prevent potential NullPointerExceptions
added a method ` calculateNormalNewell ` to ` ObjUtils ` and updated the normalization logic in ` TriangulationHelper ` to improve
updated SQL query parameters to use IdentityZoneHolder instead of the principal _ id to ensure compatibility with the current identity zone ID for event retrieval
refactor SpanCollector class to improve code organization to enhance maintainability and readability of the code
added a null check for the session info before accessing it to prevent potential NullPointerExceptions when accessing the current session
refactor TransactionIsolationLevel class implementation to improve code readability and maintainability
updated method names from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java ` to ensure consistency in method
added a variable ` currentThreadName ` to the ` TestSession ` class to provide users with direct access to the current thread ' s remote URL
refactor CookieManager class to improve code readability to enhance maintainability and facilitate future updates
refactor the return statement in LauncherExtension . java to simplify the code and improve readability
added a new OverviewToAllAppsTouchController instance in RecentsUiFactory . java to enhance the user experience by providing a new overview
changed the ` scaleHotseatWithWorkspace ` method to ` getHotseatScaleAndTranslation ` and ` getHotseatScaleAndTranslation ` to
updated the logic to check for JUnitRule in DefaultStackTraceCleaner . java and added a new test case in StackTraceFilterTest . java to
replaced calls to ` hasArray ( ) ` with ` isDirect ( ) ` in ` MappedResizeableBuffer . java ` to improve code
added a private BalanceListener instance to the walletService to ensure the balance listener is properly managed and removed from walletService
added a null check for t and tex in the convertColor method to ensure proper color assignment based on edge modes
added null check for httpClientResponse in multiple Java files to avoid potential NullPointerExceptions during logging
fix ( net ) : use regexutil . checkpattern ( ) instead of regexutil . checkpattern
added time checks for last playback events in FullDetailsActivity . java to ensure accurate tracking of playback events based on the last playback time
refactor SpanishXMLTreeReader to use a new method ` isEllipticNode ` to improve code readability and maintainability by encap
added a conditional check for the " language " attribute in the InstallItem class to ensure proper handling of language and language in the application
updated ` ReactiveLoadBalancerClientFilter ` to use ` retrievedInstance ` instead of ` retrievedInstance ` in ` ReactiveLoadBalancerClientFilter ` to ensure proper
updated the variable name from ` task . duplicate ( ) ` to ` task . byteBuffer ` in ` DefaultMessageStore . java ` to improve code
removed the final modifier from the fullFilePathFromClassName method in DebugInfoBase and NativeImageDebugInfoProvider to improve code readability and maintainability
refactor ` ShadowBackupManagerTest . java ` to use ` Correspondence . from ` to improve code readability and maintainability
refactored language support checks in JRELocaleProviderAdapter and LocaleDataMetaInfo classes to improve code readability and maintainability by standardizing
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify code and improve readability
add a new file ` MinecraftForgeClient . java ` for rendering terrains in ` MinecraftForgeClient . java ` to facilitate the rendering
added a return statement to the TxCacheDB class to ensure the method exits early to avoid potential null pointer exceptions
updated import statements from com . sun . xml . org to jdk . internal . asm . * in BoundMethodHandle . java and Invoker
refactor FastDictionary class to improve code readability to enhance maintainability and facilitate future updates
add session status to the nioconnection . close ( ) method to make it easy to check if the session be close .
updated FlightEvent instances from 1200 , 1200 , 1200 , 1200 , 1200 , 1200 , 1200 , 1200 ,
( chore ) camel - grpc : replace com . google . protobuf . ByteString with com . google . protobuf . ByteString
updated namespace declaration handling in SaajStaxWriter . java to ensure the correct namespace declaration is added to the new element
make feedback link displayable for instructor
added a short rule to the DefaultPasswordValidator to allow short passwords based on password length to ensure that short passwords do not exceed the maximum
add a new command class ` Command . java ` to the ` SeleniumDriverResourceHandler ` and modified the return value in ` RemoteControlConfiguration `
removed the import of ` org . junit . Test ` from ` ProxyClassSerializationTest . java ` to clean up the code and improve readability
updated ` scale ` and ` pad ` parameters in ` DLNAMediaInfo . java ` to use ` bgr24 ` instead of `
[ gr - 16386 ] remove unused import of graalcompilertest . java ( # 16265 )
added a condition to check if AUTHENTICATION _ MANAGER is not aliased in the authentication manager configuration to ensure that the authentication manager
updated forwarded request handling in ForwardedRequestCustomizer . java and added test cases in ForwardedRequestCustomizerTest . java to ensure proper handling of
added a call to setLength ( 0 ) in ConsoleReader . java to ensure that the output buffer is reset before processing
changed access modifiers of allowedRoles from private to protected in RolesInterceptor . java to allow subclasses to access these variables for better extensibility
update OpenIDE - Module - Specification version from 1.10 to 1.10 . 0 to ensure compatibility with the latest features and improvements in the
hbase - 26286 add support for wrap size in tls . server . netty . tls . wrapsize
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to use JUnit assertions instead of JUnit framework to improve test coverage and ensure correct behavior of tokenization tests
updated the protocol binding handling in OpenSamlAuthenticationRequestFactory and added a new test class for SAML authentication to enhance flexibility in handling SAML authentication requests
refactor DepthController to use AttachedSurfaceControl for transaction handling to improve code readability and ensure proper transaction handling in the drawing process
updated version comparison in AsciidoctorConventions . java to use " 2.0 . x " instead of " main " to ensure compatibility with the
updated method names from WRITE to CREATE in AccessController . java to improve clarity and consistency in method naming conventions
replaced ` size ( ) ` with ` size ( ) ` for unSeqMergeList . subList ( 0 , maxOpenFileNumInEachUn
camel - 14284 : convert file to InputStream in genericfileconverter and add unit test
added a ` login ( boolean login ) ` method to ` DefaultShardManagerBuilder ` , ` DefaultShardManagerBuilder ` , and ` ShardManager
updated the method call from DeleteGlobalRef to DeleteGlobalRef in Callback . java to ensure consistency in method naming conventions
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " in AbstractRegisteredService . java
added a condition to check if the completion is marked before processing the response to ensure that the response is only processed when the completion is marked
added a check for user student status in FeedbackResponseCommentsLogic . java to ensure correct handling of user student status
added link check for linked profiles in BMPImageReader . java to ensure proper handling of linked profiles based on system properties
updated coordinate calculations in ClassicPlotManager . java for consistency and clarity to improve code readability and maintainability by using consistent naming conventions
added a wait message for PMD files in the PMD open tool to ensure that PMD checks the files before proceeding to improve user experience
refactor grid size setting logic in StdGridFragment to improve clarity and maintainability to enhance code readability and maintainability by encapsulating
updated return statements in ContributionsListFragment . java for better readability to improve code clarity and maintainability
added a new test for sorting by prefix 1 in DistinctPrefixFilterIT and modified the filtering logic in BaseResultIterators . java to improve
pdfbox - 4071 : add unit test for acrobat checkbox property
added a method ` getFileLastModified ` to retrieve the last modified file in ` BlackBerryImplementation . java ` to provide a way to retrieve the file '
added a check for a metaTable in the file format validation in HiveIcebergStorageHandler to ensure only valid metadata tables are processed
refactor currency combobox to use a new ComboBox for currency selection to enhance user experience by allowing users to choose default currencies
replaced IOException with Throwable for exception handling in WriteFlusher . java to improve error handling by capturing a broader range of exceptions
added a boolean variable ` mStartedEnterAnimation ` and updated notification logic in ` IconRecentsView . java ` to ensure proper handling of animation
added a new property ` activeKeyId ` to the ` UaaConfiguration ` class to allow external access to the ` activeKeyId ` variable
updated method names from " Sends a mail " to " SendMailWithAttachments " in ` SendMailActions ` and ` SendMailActions
changed the visibility of the isActive variable from volatile to volatile in SocketServer . java to ensure visibility of the isActive variable
removed the ` isDesc ( ) ` method from ` OrderByExpressionContext ` , ` SelectionPartiallyOrderedByDescOperation ` , and ` 
replace ` buildImplicitEquation ` with ` toStringLHS ` in multiple files to ensure type safety and prevent potential ClassCastExceptions during string concatenation
added a new constant for the OWNCLOUD _ APP _ NAME in DisplayUtils . java to ensure that the application name is only checked
added security check for rootdir permissions in MasterFileSystem . java and updated permission handling in MasterFileSystem . java to ensure correct permissions are set based on
updated locale retrieval from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in ` JakartaServletWebExchange . java
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
updated state format handling in CollectionsHandler and updated default state format handling in CollectionsHandler and AbstractFullDistribZkTestBase to improve code clarity and
updated service ticket type handling in CentralAuthenticationServiceImpl and related classes to improve code readability and maintainability
pdfbox - 4071 : add support for IllegalArgumentException in pdiccbased . java
corrected a typo in the condition for checking file names in AbstractFileResourceSet . java to improve code readability and maintainability
maven - plugin : add pathtranslator parameter to pluginparameterexpressionexpressionevaluator ( # 11717 )
refactor coderregistry and add ProtobufCoderRegistrar for protobuf coder classes to improve organization and clarity of coder registration
updated JpaQueryParsingToken instantiation in HqlQueryRenderer and added a new test for signed numeric literals in HqlQueryRendererTests to
updated LaunchLugHandler and RailGuideHandler to include parent length parameters and updated related methods accordingly to enhance flexibility and maintainability of the code by
removed the ` getNonceFactory ( ) ` method from ` BitmexStreamingExchange ` to streamline the code by eliminating unnecessary overrides
updated log messages in MailBinding . java to include additional context to improve debugging clarity and traceability
[ java ] fix driverconductortest to use default value
changed the initialization state of the initialized classes from true to false in FastClasspathScanner . java to disable the initialization of loaded classes by default
added a call to grabFocus ( ) in FullTextSearchPanel . java to improve user experience by allowing quick access to the search field
refactor NioParams initialization to use NioParams instead of NioParams to improve code readability and maintainability
updated the assertion in StatementTest . java to use a random value instead of a hardcoded value to improve clarity and maintainability of the test
updated assertions in TestSolrConfigHandler to use a more descriptive string format to improve readability and maintainability of the test code
updated CsrfWebFilterTests to use ServerHttpRequest instead of HttpMethod to improve compatibility with Spring ' s HTTP request handling
added density density handling in FilterResourcesStep . java to improve density matching accuracy in drawable matching
added a new constant ` elementPrefix ` and updated UIID formatting in ` ComponentGroup . java ` to improve code readability and maintainability by
removed the import of DisplayMetrics for densityDpi and densityDpi in RecentsAnimationDeviceState . java to simplify the condition for determining display
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java and TestArrayCopyWithLarge
added a AwaitsFix annotation to ReplicationFactorTest . java to address issue SOLR - 6157 in ReplicationFactorTest . java to address
fix nullpointerexception in redissonexecutorservice . schedule ( )
refactor credentials check logic in FileDownloader and FileUploader classes to improve code readability and maintainability
refactor scanner handling in Compactor . java to handle null scanner cases more gracefully to improve resource management and prevent potential NullPointerExceptions
[ hotfix ] [ network ] fix checkstyle issue in netmetrics
added a nonce parameter to the TokenMvcMockTests to verify that the nonce is correctly retrieved in the token claims to ensure the correctness of the
refactor multiple chart editor classes to improve code organization to enhance maintainability and readability of the codebase
added width and height settings for formLayeredPane in Form . java to ensure proper layout behavior for the form layering
updated import statements and added a method to calculate the maximum Y coordinate based on the owner ' s height to improve code readability and maintainability by
refactored database connection handling in SharedDatabaseLoginDialogView and SharedDatabaseLoginDialogViewModel to return a boolean indicating whether the database is connected to
updated Docker command execution from " ps " to " Platform . JDK " in DockerTestUtils and Platform . java to ensure compatibility with the
[ isartor ] fix npe in testisartorvalidationfromclasspath ( )
updated drawLeaveBehind method to include a color parameter for folder leaves to enhance visual consistency by allowing customizable background color
added a method to report a error message if the Flutter plugin does not work with Canary versions of Android Studio to ensure compatibility checks are correctly
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = > identityproxy . id
removed the ` modulePersistEnable ` and ` modulePersistDisable ` and ` setModulePersistenceChanging ` methods from ` StartArgs ` to streamline
updated argument validation in GeminiMarketDataService . java to improve code readability and maintainability
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure uniqueness of questions in the request context
added a new test class ` TesterResponse ` , ` TestRealmBase ` , and ` TestRealmBase ` , and ` TestRealmBase
added support for " setup - admin - settings . jsp " and " setup - datasource - settings . jsp " in AuthCheckFilter . java to
added a boolean flag ` isExecutingRunnable ` and modified ` runOrQueueRunnable ` methods in ` Scheduler ` and ` SchedulerTest ` to improve
updated the ` runCommand ` method parameters from ` Array [ ] ` to ` String . . . args ` across multiple files to ensure consistency in
refactor character reading logic in XMLParser . java for improved readability to enhance code robustness and prevent potential null pointer exceptions
added a new test method ` testHorizPageOverflowHidden ` to verify that the text appears on overflow pages in contravention of overflow
updated the alignment of the arrow in DeepShortcutsContainer to improve the visual appearance of the arrow in the user interface
[ hotfix ] [ runtime ] remove unnecessary stack trace from fileupdatemonitor
updated the ` updateThumbnail ` method to accept a ` refreshView ` parameter and modified the ` updateThumbnail ` method to enhance user experience by allowing
pdfbox - 4071 : use class name instead of org . apache . pdfbox . ExtractTTFFonts . class . getName (
updated InternetAddress instantiation and added error handling in HostnameFormatSpecifier . java and HostnameFormatSpecifier . java to ensure that only valid hostnames
replaced ` AuthenticatorActivity . this ` with ` this ` across multiple classes to improve code readability and maintain consistency in naming conventions
refactor SizeBasedDocIdSetBlock and FilterBlockDocIdSet classes to use _ maxDocId instead of counter to improve code clarity and
added methods for promptToOpenFile and promptToOpenFile in FileDialoger , FilePanelEntry , and FilePanelEntry classes to enhance file selection
updated mMaxWidgetSpan , mMinWidgetSpan , mMinWidgetSpan , mMinWidgetSpan , mMinWidgetSpan , and mNum
refactor FlightConfiguration to improve handling of active and transformed components in the FlightConfiguration class to enhance code readability and maintainability by encaps
use direct : foo instead of seda : foo in micrometer message history test
updated DateTimeFormatter to use Locale . ROOT instead of Locale . ROOT to ensure consistent date formatting across different locales
[ dspace ] add getpermissionfilteredmetadata ( context ) method to dspaceobjectconverter . getpermission ( )
added a new test method ` testMissingRequired ` in ` TestStarTreeConfig . java ` to verify that missing required dimensions and metric names are
camel - 15836 - camel - aws - route - builder : allow recipient list to be use by default
refactor inline layout handling and repaint logic in InlineLayoutBox and HoverListener classes to improve code readability and maintainability while ensuring proper repaint
refactor AuthenticatorActivity to use OperationsService instead of DetectAuthenticationMethodOperation and improve service handling to enhance code clarity and maintainability by centralizing
