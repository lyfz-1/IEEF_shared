http : / / issues . apache . org / jira / browse / amq - 4253 - fix socketappender to use remotehost
refactor header handling in BasicAuthPlugin to use a dedicated method to improve code readability and maintainability by centralizing header management
updated the method call from ` RecordDescriptor . msgLengthOffset ` to ` msgLength ` in ` ManyToOneRingBuffer . java ` to
[ hotfix ] [ vm / vm / vm / vm / vm / vm / vm / vm / vmdetails / vmdetails / vmdetails
added constructor and getter methods for flags in ShadowPaint and updated test cases in PaintTest to ensure proper handling of anti - alias flags in the shadow
updated the title of the MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content "
test : do n ' t try to compile the eclipse project if there be no bug
http : / / issues . apache . org / jira / browse / amq - 4078 - fix digestauth header to be empty
added a new interface ` RemoteInputListener ` and modified the connection handling logic in ` RemoteInput . java ` to utilize it to improve input
removed unnecessary whitespace in OrcEncodedDataReader . java to improve code readability and maintainability
added a condition to check if the thing is enabled before filtering to ensure that the thing is only processed when it is enabled
added null check for ` bs ` before calling ` AuthorizeManager . removeAllPolicies ` to avoid potential NullPointerExceptions when ` bs `
replace ` isEqualTo ` with ` matches ` for JSON parsing in ` DefaultTypeAdaptersTest . java ` and ` ObjectTest . java ` to
added JSON parsing for the Hive context and description in TezTask . java to improve the handling of DAG information in the Tez task
updated the calculation of the heap time in ComputedSummary . java and added a method to retrieve the heap time in HprofHeap . java to
replaced ` RxJava2Tasks . java ` with ` CommonsApplication . getInstance ( ) ` in ` ContributionsActivity . java ` and
remove unnecessary lock mode check in mvtable . ismvstore ( )
update commitlog to use maxmessagesize instead of maxmessagesize for maxmessagesize
updated folder handling in Launcher . java to check if the associated folder is open before proceeding to improve user experience by providing clearer feedback when
added a new test method ` testSortOrder ` to verify sorting of PGProperty names to ensure that the order of PGProperty names are sorted correctly
added a new constant for the HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in Common . java to provide
updated method parameter types from ` Object ` to ` ItemInfo ` in ` supportsDrop ` and ` getUninstallTarget ` to improve type safety and
updated assertions in RequestBuilderTest to use getMessage ( ) and isIn ( ) instead of hasMessage ( ) to improve clarity and consistency in error
replaced ` RetainedFragment ` with ` NearbyListFragment ` in ` NearbyActivity . java ` and updated related references to
renamed the parameter from ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity and consistency in naming convention
added a new boolean field ` sendZeroAnomalyEmail ` and its getter and setter methods to the ` EmailConfiguration ` class to control the
[ hotfix ] [ kafka ] fix flaky test in kafkaconsumerbase
added methods to retrieve user and geofences in DataManager to enhance functionality by allowing users and geofences in the database
added a constructor to BlockingResponseListener that accepts a maximum size parameter to enhance flexibility in response handling
[ java ] use byte [ ] instead of thread . currentThread ( ) . name ( )
[ java ] close reader in multileaderserverimpl . sendsnapshotfragment ( )
updated assertions in LoginSAMLAuthenticationFailureHandlerTest to remove unnecessary slashes to improve code readability and maintainability
updated ConfigMetadataProviderTest . java file to improve test coverage and maintainability
updated import statements and modified the updateNoteReminder method to use noteToUpdate instead of note to improve code clarity and maintainability by using a more
added a new ` AcceptAllFilter ` class and refactored directory stream handling in ` Files . java ` and ` WindowsDirectoryStream .
refactor JdbcTestDataSet class implementation to improve code readability and maintainability
[ gr - 16464 ] add miss exception to finduniqueconcretemethodtest
added DockerImageName class and its corresponding tests to validate the presence of images in the Docker image name to ensure that the Docker image name does not
updated error messages in LoginActivity from " failed _ username " and " failed _ password " to " failed _ failed _ wrong _ credentials " to
added ` setAutofocus ( " autofocus " ) ` method to multiple form classes to ensure consistent behavior across the application
added a new test method ` test _ zone _ saml _ properties ` to ` SamlIDPRefreshMockMvcTests ` to validate SAML
added checks for non - empty lists in ComparableVersion . java and created a corresponding test in ComparableVersionTest . java to ensure proper handling of empty
updated mode settings from topLeftMode and topTopMode to bottomRightMode and adjusted return values in UIManager to ensure consistency and correctness in layout
updated package imports from ` org . robolectric . android . ParallelUniverse ` to ` org . robolectric . android . internal ` across multiple files to
replaced occurrences of ` constructor . type ( ) . changeReturnType ( BoundedLocalCache . class ) ` with ` FACTORY _ CALL `
updated the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to
added self loop drawing functionality to the ProcessingPreview class to enhance rendering capabilities for self - loops
updated TVM solidity constants from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in naming conventions
added translation to the drag handle indicator in AllAppsTransitionController to ensure proper navigation of the drag handle indicator
removed logging statements for collection , community , and item views in multiple viewer classes to improve logging clarity and maintainability
updated error messages for query optimization options in HiveConf . java to improve clarity of query optimization behavior during query optimization
added an assumption to the ScanningAppProviderRuntimeUpdatesTest class to ensure tests are only executed on non - OSX environments
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser to enable testing of Jetty ALPN
refactored updateprocessinstancelocktime to use executeasyncjob . execute ( commandexecutor ) instead of executeasyncrunnable .
refactor Transaction class to improve code readability to enhance maintainability and readability of the code
replaced CustomFieldBehavior annotation with @ ExcludeFromRuleKey annotation in GenruleBuildable . java to exclude the Genrule execution from the artifact
added a method ` whichExec ` to ` AsyncExecute ` and modified constructors in ` FirefoxCustomProfileLauncher ` and ` FirefoxCustom
phoenix - 132 do n ' t replace putIfAbsent with containsKey ( ) in ptableimpl
[ hotfix ] [ table - planner - planner - planner - planner - planner - planner - planner - java
added a condition to check if the client version is < MIN _ SPLITTABLE _ SYSTEM _ CATALOG and view type is not M
update the user ' s googleid if it ' s not already set .
move testcellreference from org . apache . poi . xssf . util . testcellreference to org . apache . poi . s
added a condition to check if the damage block is greater than zero in the LensPiston . java file to ensure that the Mob
added a new file LongPointerPressTest3049 . java to test the functionality of LongPointerPress to verify the functionality of the LongPointerPress
truffle : remove trufflefunctioninlining from truffle inlining
simplified conditional statements in BaseBuilder , ResultSetType , and XMLConfigBuilder classes to improve code readability and maintainability
removed unnecessary indentation check in ListBlockParser and added a new test for deeplyIndentedList in SpecialInputTest to improve code readability and ensure
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it to improve code organization and maintainability by
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests due to issue # 1070
remove jsinterop . tojsstring ( ) from testlogger . savemessage ( )
updated the closing brace formatting in RouteStartupOrderLastTest . java to improve code readability and maintainability
added a condition to check if the format is video before processing web subtitles to ensure that video subtitles are only processed when available
added import for Security and set the " jdk . tls . disabledAlgorithms " property in ComHostnameVerifier and JavaxHostnameVerifier to disable SSL
do n ' t create a vm if the neighbor do n ' t have a hypervisor .
updated log messages to include the cacheEntry variable and modified return statement formatting in QueryResultsCache . java to improve readability and maintainability of log
added a ` maybeUpdateModel ( ) ` option to ` AddManagedDependency ` , ` AddManagedDependency ` , and ` ManageDependenciesVisitor
added a test for sending intents with request code in ShadowActivityTest and implemented the send method in ShadowPendingIntent to ensure correct handling of intent
refactor Graphics2D creation and rendering logic in RocketFigure3d . java to use a new method for creating and disabling F
added synchronization to controllerListeners in HydrawiseAccountHandler and added dispose method in HydrawiseControllerHandler to ensure thread safety and prevent potential memory
added a setup method to the TestCoreAdminApis class to ensure that EasyMock does not work with Java 9 to ensure compatibility with Java 9
updated the year retrieval method in TimestampUtils and added a new LOCAL _ TIME _ FORMATTER for date formatting in SetObject310Test to improve
http : / / issues . apache . org / jira / browse / amq - 4253 - fix npe in jabber
corrected a syntax error in the TxnHandler class to improve code readability and maintainability
replaced ` ByteChunk ` with ` ByteBuffer ` and updated related methods in ` BufferedInputFilter ` to improve performance by using ` ByteBuffer ` instead of
added a ` toSync ` method to ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to ensure proper synchronization of asynchronous
added ActionGraphBuilder to multipleCompilerFactory and related classes to enhance the handling of ActionGraphBuilder in the compiler factory classes
add a new test method ` testUploadingWithHiddenFileInput ` in ` UploadTest . java ` to verify the visibility of a file input
removed redundant try - catch block in SQLManager . java to streamline code and improve readability
added a check to return the local maven directory if it does not exist to ensure that the local maven directory exists before proceeding
do n ' t show the hidden label if it do n ' t match the hidden prefix
[ hotfix ] fix nullpointerexception in ctelementimpl . getmetadata ( )
replaced ` setFlags ` with ` addFlag ` in ` DefaultTrackOutput . java ` to ensure proper handling of buffer flags in the output
added a condition to check if the cache is sorted by ID in the reordering condition to ensure that the reordering only occurs when the cache is
updated error message from " Method call not specified " to " Missing method call " to improve clarity of error messages for better clarity
added null check for backupFolder before logging it in ContactsBackupJob . java to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the ` Array . newInstance ` method to demonstrate the functionality of ` Array .
added @ AddToRuleKey annotation to ToolType fields in ClangCompiler and GccCompiler classes to enhance code readability and maintainability by
replaced hardcoded timeout value with a constant PINCODE _ TIMEOUT to improve readability and maintainability of the code
add issampled ( ) method to PrometheusMeterRegistryTest , PrometheusExemplarsSample , and PrometheusEx
removed the ` @ Ignore ( " requires mongodb server " ) ` annotation from multiple test classes to improve code clarity and maintainability
[ hotfix ] [ test ] fix checkstyle violation in test
updated table name check from ` getName ( ) ` to ` isArtifical ( ) ` in ` MetaDataSource . java ` to ensure proper
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty checks for session attributes in MongoSessionManager . java to ensure proper handling of null and empty attributes
use sizefromlayout ( ) instead of setfixedsize ( 320 , 240 )
refactor the handling of the ` _ stopping ` variable to use ` CountDownLatch ` instead of ` _ stopping ` to improve code readability and maintain
removed unnecessary whitespace in the WebSocketClientHandshaker parameter to improve code readability and maintainability
camel - 14497 : fix message history to use current time instead of current time
[ hotfix ] [ test ] remove doerror ( ) call from monopublishertest
replace assertTrue with a fail assertion for WebSocketHandshakeException in WebsocketTest . java to improve error handling for WebSocketHandshakeException instances
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener instead of an anonymous inner class to improve code readability and maintainability by
corrected the variable name from ' theHandler ' to ' handler ' in PolicyBasedAuthenticationManager . java to improve code readability and maintain consistency
add ` ` default - output - channel ' ' property to xpath router parser
updated cacheSeconds from ` int ` to ` String ` and added ` @ DurationCapable ` annotation in ` MessageBundleProperties ` and ` Bean
updated the version string in ParameterDeSerializationTest . java from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' to ensure compatibility
added a call to append ( buffer , true ) in ByteBufferPool . java to ensure proper handling of buffer operations
added a check for the presence of the " alt - rt . jar " system property and a method to check if the " alt - rt .
updated JdbcScimUserProvisioningTests to use upper names instead of hardcoded values to improve clarity and consistency in naming conventions
updated the ` FlightRecorderProfiler ` class to use ` ArrayList ` and ` List < String > ` instead of ` Arrays . asList ` to enhance
added isStreamEmpty ( ) method to WebCamInputPanel and modified imageDropHappened ( ) method in WebcamInputDialog to check
added a condition to check if the content view has content before processing in HttpParser . java and created a corresponding test in ProxyServletTest . java
[ hotfix ] fix typo in atmos endpoint documentation
added additional conditional checks for " printf " and " print " in Java2TypeScriptAdapter . java to enhance the functionality of the Java2Type
added a new file ` TestCapacityUntilGCWrapAround . java ` and a native method ` incMetaspaceCapacityUntilGC ` in `
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
removed conditional check for stamped at start in SamplingStatCalculator to streamline time calculation by eliminating unnecessary stamping
added unit test base on user forum issue
do n ' t throw iioexception on invalid icc profile
[ terraform ] fix crash when terraform be not load .
updated JoobyModule , SpringModule , and JoobyExtension to include a check for the ignoreEntry method to ensure that entries are only
use container . getparentclassloader ( ) instead of thread . getcurrentclassloader ( ) . getcontextclassloader ( )
add additional namemap entry to nameupdater . properties file
added initialization of the ` started ` variable in ` EllipsoidRegionSelector . java ` to ensure proper initialization of the ellipsoid
updated URLs from " http " to " https " in JavaSEPort . java and added a default value for the code name oneComProtocol
[ geos - 16464 ] validate sortby attribute in getfeature . getfeature ( )
replaced ` . equals ( ) ` with ` . equals ( null ) ` for ` grantTuple [ 0 ] ` in ` AbstractJdbc2DatabaseMetaData
added imports for GraphicsDevice , GraphicsConfiguration , and createCompatibleImage in DiagramGenerationTest . java to enhance image rendering capabilities and ensure correct
add a good error message if the sideddelegate be null .
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
[ hotfix ] [ test ] use asserteventually in locktest
added methods to process tokenization and join tokens in StringUtil . java to enhance the functionality of string concatenation for better readability and maintainability
use response . senderror ( ) instead of response . getstatus ( 404 )
refactor ` SystemHighlighter ` to use ` commandIndex ` instead of ` commandIndex ` for consistency to improve code readability and maintainability by
update version and version date from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and update version date to " PENDING "
updated position calculation in StarTreeRecordStoreCircularBufferImpl to use dimensionSize instead of idx to ensure correct positioning of the buffer
added drag - and - drop functionality to SystemUiProxy and SystemUiProxy classes to enhance drag - and - drop functionality by allowing customizable drag
[ java ] ignore tcp socket traffic class in securesocketappendersocketoptionstest
added support for " PSK - AES256 - GCM - SHA384 + TLSv1 . 2 " in TestCipher . java to
updated description retrieval method from ` getDescription ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java ` to ensure
added JsonProperty annotation to ScimGroupMember . java to enable JSON serialization of the ScimGroupMember class
added reserved word handling in HqlQueryRenderer and a corresponding test in HqlQueryRendererTests to ensure correct parsing of reserved words and validate schema
updated null check in SubscriptionHelper from " d " to " s " to ensure proper validation of null values
updated method signatures in mmm Parser . java and ppp Parser . java to improve code readability and maintainability
updated the ` offsetStreamIndex ` method to include an ` indexStartsAtOne ` parameter and adjusted related logic accordingly to enhance functionality by allowing
corrected a typo in the byte order in MagicDetector . java and updated MIME type assertions in TestMimeTypes . java to ensure consistency in
[ hotfix ] [ table - planner ] remove unnecessary method from flinksqloperatortable
added equals ( ) , hashCode ( ) , and toStringBuilder ( ) methods in OneTimeTokenAccount and OneTimeToken classes to enhance equality and
added a condition to check if the assistant is not launched before proceeding to ensure that fling is only applied when mLaunchedAssistant is
added a new file SolarisShortDSA . java to demonstrate the use of KeyPair and SHA1 with DSA verification to ensure that the
added toggleSearchLabel ( false ) method call to ListFragment . java to disable search functionality for better user experience
do n ' t lock a volume when create a snapshot on primary and secondary
added a new ` DetailsServiceConnection ` class and modified the connection handling in ` FileDetailActivity ` to improve connection management and prevent potential NullPointerException
http : / / issues . apache . org / jira / browse / amq - 4253 - fix httpclienttlstest . java
removed the equals ( Object o1 , Object o2 ) method from ConjunctionScorer . java to streamline equality checks by eliminating unnecessary
added a null check for the item in the bindItems method to prevent potential NullPointerException when removing colliding items
add timeout for getraftgroupid in cpmemberaddremovetest
refactor cache size calculation and logging in DefaultCache . java to improve readability and maintainability of cache size calculations
updated API endpoint from v2 to v3 in CryptoFacilities . java and CryptoFacilitiesAdapters . java to align
added an empty method ` empty ( ) ` to the ` freenect2 ` class to provide a way to check if the size is empty
added null checks and a new test method for empty dict pages in TestDrillParquetReader and TestEmptyParquet to ensure proper handling of
[ serum ] add support for market data type in serumstreamingservice . buildchannelname
add a config option to disable the charge animation when an item be charging on top of a mana pool
[ java ] use egress . isConnected ( ) instead of egress . ischallenged in cluster restart test .
added error logging for InterruptedException in WaitForHelper . java to improve error handling by logging exceptions during execution
update defaultservlettest to use assumetrue instead of fs . ensuredirexists ( )
updated the order of method calls in ResourcesInjectorFull . java to improve code readability and maintainability
updated the type of ` changeLogFile ` and ` outputFile ` from ` String ` to ` FileResource ` in ` BaseLiquibaseTask `
fix a bug in the blockworldvector . equals ( ) method of blockworldvector
updated return statements to be final in LongConcurrentLRUMap . java to improve code readability and maintainability by using ' final ' keyword
added regex handling for resource configuration in ReflectionProcessor . java to improve code readability and maintainability by using a consistent regex pattern
http : / / issues . apache . org / jira / browse / amq - 4078 - make the krb5ccname environment
updated the database path in ValidateMultiSignContractTest from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract
[ te ] make ibft protocolmanager . hassufficientpeers ( ) configurable .
[ hotfix ] fix checkstyle violation in webdriverservlet
added a condition to return false if the operation is EQUAL _ BOOLEAN or GeoSegment in ExpressionNode . java to ensure proper handling of segment
added a condition to clear pendingRenderingOperations if it exceeds 20000 and clears pending operations to ensure that pendingRenderingOperations are cleared only when available
added a check for the passed deadline in the loop in HazelcastTestSupport . java to ensure that the loop is only executed when the deadline is
fix ` ` continuously update ' ' writebehind write - behind queue .
added a icon to the JLabel in GroupTreeCellRenderer . java to prevent potential memory leaks in the UI
updated test methods in TestBlacklistAwareRedirectResolver to replace strict and non - strict with strict and non - strict to improve test clarity and maintainability
added imports and refactored test methods in ShutdownMonitorTest and ShutdownMonitorTest classes to improve resource management and ensure proper resource management
refactored the calculation of moveSize and added fillRateToCompare in RandomAccessStore . java to improve readability and maintainability of the
added a new method ` readFields ` in ` Json . java ` to read fields from a ` ObjectMap < String , Object > ` to
[ hotfix ] [ runtime ] move componentclosingutils to coordination package
cloudstack - 13636 : cleanup storage volume after vm transition to error state
do n ' t create ip6 range if vlan be empty
rename ` userDetailsBeanNames ` to ` beanNames ` in multiple configuration classes to improve clarity and consistency in naming conventions
increased the timeout duration for getLeaderRetry from 15000 to 30000 in CollectionsAPIDistributedZkTest . java to allow more time for leader
removed the ' input ' parameter from multiple errorMessage methods across multiple classes to simplify error message formatting and improve code readability
updated drawImage calls to use - x and - y in URLImage . java to ensure correct positioning of images in the image
updated the comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure correct handling of
refactor code to use a dedicated method for checking high cardinality in the SetFunDef class to improve code readability and maintainability
added the exception parameter to the StreamTaskException constructor in StreamConfig . java to enhance error handling by including the original exception
refactor character handling logic in Preprocess . java to improve readability and maintainability of the code
removed unnecessary whitespace from the read method in MessagePack . java to improve code readability and maintainability
added a new annotation ` Mapper ` in the ` org . apache . ibatis . annotations ` package to define a Mapper interface with a default value of
do n ' t encode empty extension list in jsonparser . encoderesource ( )
updated regex patterns in Artifact . java and LibraryManager . java for clarity and consistency to enhance code readability and maintainability by using more descript
added alias for the " node _ popup _ scripting " node in the entryNavigator to enhance functionality by allowing the " node _ popup _ script
updated HIDDEN _ FOCUSED _ SCROLL , HIDDEN _ SPLIT _ SCREEN , and added DEFAULT _ ACTION
camel - 14499 : camel - jms - use camel - jms instead of camel - jms to avoid type cast exception
removed IOException from method signatures in multiple classes to simplify code and improve readability
deleted deprecated files AbstractDelegatedVerb . java and FailureContext . java to remove deprecated classes to streamline the codebase by eliminating unnecessary dependencies
http : / / github . com / p / mybatis / issues / detail ? id = 304 : add test for if - None
use backpressureutils . getandaddrequest ( ) for repeat ( ) and repeat ( )
added logging functionality and improved error messages in SpeedmentImpl . java to enhance logging clarity and maintainability of the code
add a new file ` LoadDSpaceOAIConfig . java ` to load configuration from the servlet context
refactor StoreScanner and TestWideScanner to handle null and matching rows more gracefully to improve robustness by avoiding unnecessary row resets
camel - 14497 : camel - test - add jmx support to camel - test - jmx to enable / disable jmx by default
added a new constant for the CAICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation . java and modified sourcePath construction in SourceCodeDisplay
added YARNBIN functionality to HiveConf and modified RemoteSparkJobMonitor to print application - kill commands based on the spark master to enhance the
added support for " maria " database in the database check to ensure compatibility with different database types
[ hotfix ] [ log ] fix checkstyle violation in splitlogmanager
added a new test class ` ExecuteAndReturnStringTest ` to validate network error handling to ensure correct behavior of network error messages
added a new file ` InvokespecialInterface . java ` that implements an interface and invokes a dynamic interface to provide a way to invoke dynamic methods
refactor EvictingBoundedList class for improved performance to enhance performance and readability of the code
do n ' t turncosts = true by default if turncosts be true
added a null check for ` style . backgroundDisabled ` in the ` SelectBox ` class to prevent potential NullPointerExceptions when ` selection ` is
added a null check for the method name in RpcServer . java to prevent potential NullPointerException when the method name is null
updated the calculation of hotseatCellSize and hotseatIconCenter in TaskbarViewController . java to include border spacing to improve visual consistency and maintain
refactor string concatenation in ExpressionTree . java to use values . get ( ) instead of partitionName to improve code readability and maintainability by
[ hotfix ] [ runtime ] add versioned to taskdefinition and namedtaskdecorator
updated directory retrieval method from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure correct
changed the ` equal ` variable from false to true and modified the comparison logic in ` DisplayModeTest . java ` to improve the accuracy of the
added support for high codepoint Unicode characters in UnicodeToLatexFormatter and updated related test cases to ensure correct formatting of high codepoint Unicode characters
fix a bug in oaidccrosswalk that cause a nullpointerexception if the value be null
webdriverbackedselenium : do n ' t select window handle if it ' s an empty window handle .
added a clear button to the BookmarksPanel and updated related logic in BookmarksPanel and DataBrowser classes to enhance user experience by allowing
refactor port handling in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for full request URLs to improve code readability and maintainability by
updated assertions in SoftAssertionsTest to use ` parseDatetime ` instead of ` new Date ` to improve accuracy of date parsing and provide clearer
modified the ` adaptOrders ` method to include a ` reverse ` parameter and updated its usage in the ` BitmexAdapters ` class
updated PrettyPrinter . java to handle null and pos cases and added a new Java11Var . java file with a new Java11Var . java
( chore ) camel - selenium : remove unused import
changed the initialization of Configuration from default to false and removed conditional logging for Hive default value to streamline configuration management and improve debugging capabilities
removed the call to ` super . drawChildren ` in the ` WidgetGroup ` class to simplify the call to ` super . draw `
added a new test class ` FileSplitStreamingWithChoiceTest ` to validate the functionality of ` FileSplitStreamingWithChoice ` to ensure that the
use getcatalinabase ( ) instead of system . getproperty ( globals . catana _ base _ prop )
added unit tests for ` getBestDateTimePattern ` methods in ` ShadowICUTest ` and modified the ` getBestDateTimePattern ` method to
updated the color handling in the PlotSquared class to include additional color codes to enhance the visual representation of color codes in the PlotSquared class
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enable configuration of zuul properties in the
fix fontparserstest failure on window
[ buildinfomojo ] add build time parameter to buildinfomojo
updated the calculation of xDist in PagedView . java to ensure xDist reflects the correct position of the scroller ' s position
deleted the GUIRWTester . java file to remove unused code to streamline the codebase
removed nullability annotations from constructor parameters in LazyMessage , StandardSubjectBuilder , and CustomFailureMessage classes to simplify method signatures and improve code clarity
updated error message format in TestStream . java to include a space character to improve clarity of error messages for better readability
[ thymeleaf ] move xmltemplateparser and xmltemplateparser to markup package
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated ` XPathTest . java ` in ` XPathTest
added nullable annotation to FutureUtils . java to ensure proper handling of null values in future operations
add a warning message if invokedynamic be not resolve during call graph construction
updated email from " myfakeemail @ gmail . com " to " myfakeemail @ example . com " in ContextTest .
updated the HTTP response format in HttpConnectionTest . java and modified the URIUtil . decodePath method in URIUtil . java to improve clarity and
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide access to
[ hotfix ] [ v2 ] remove unused method in v2testdydbbaseclient
refactor HSSFPictureData class to improve data handling to enhance performance and maintainability of the code
changed the data type of ` startTime ` and ` stopTime ` from ` long ` to ` Instant ` in ` Statistics . java ` to improve
updated LibMediaInfoParser to use version - specific options and added version handling to enhance compatibility and ensure compatibility with the latest MediaInfoLib version
added reflection - based proxy creation for Idea dependencies in ProjectReader . java to enhance the clarity and functionality of the IDEA dependency management
added a new ` SerialHeap ` class and updated ` CollectedHeapName ` to use it to enhance memory management by allowing the ` SerialHeap
added multiple @ SuppressWarnings ( " serial " ) annotations to the Gson Types class to suppress warnings about the serial value
add mouse position to mouse wheel event ( fixes # 119 )
updated MongoQueryCreator to handle null values and added a new test for findByFirstname in AbstractPersonRepositoryIntegrationTests to ensure proper handling of null
[ hotfix ] [ table - planner - java ] add multiset type information to maptypeinfo
added a new method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` and a corresponding test in ` XOAuthProviderConfiguratorTests ` to
added delimiter handling in CMapParser and implemented a corresponding test in TestCMapParser to ensure proper handling of whitespace characters in CMapParser
refactor ContactsBackupJob to utilize OperationsServiceConnection for managing operations to improve service connection management and ensure proper service connection handling
updated method signatures and added new classes T6938454a and T6938454a and T6938454a to enhance type validation and
add isconfighidden ( ) method to accountlist and add is _ config _ hiding property
added a check to ensure supported bounds are not equal to the size of supported bounds in DisplayController . java to improve error handling and provide clearer
replaced ` SchemaUtil . getSchemaKey ( ) ` with ` schema . getSchemaKey ( ) ` in ` PMetaDataImpl ` and added a test
do n ' t fire passive login event when loginpassive = true
added a new ` Box2DTest ` class and modified ` GDXTester ` and ` JoglApplication ` classes to include it to
[ hotfix ] [ table - planner - planner - java ] add more logging to the table .
change default buffer request timeout from milliseconds to minutes in HybridShuffleConfiguration . java to allow more time for buffer request processing
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 5 and update gax - java to 2.16 . 5 (
added a help button for OpenOfficeIntegration in OpenOfficePanel . java to provide user feedback on the OpenOfficeIntegration application
[ java ] add child option for netty so _ reuseaddr , so _ reuseaddr , and so _ reuseaddr
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceFundingHistoryParams classes to use wildcard types to enhance type
scanresultobject : use class < t > instead of class . getname ( )
refactor connection handling in DecodeServlet to use a try - with - resources statement to improve code readability and maintainability
added a new method ` toQueryDslNullHandling ` in ` Querydsl ` and created a corresponding test class ` QuerydslIntegrationTest
added null check for actor in ParallelAction and modified action action handling in SequenceAction to improve robustness and prevent potential NullPointerExceptions
[ java ] fix checkstyle violation in cttypetest
added synchronization to the sfWritersLock in HDFSEventSink . java to ensure thread safety during closing operations
added a new file ` Issue888 _ JavaI . java ` implementing ` Issue888 _ KotlinI ` and ` Issue888 _ Ko
added a new constant for revokeing an existing SSL certificate in CertificateManager . java and updated script arguments in CertGenerationTest . java to improve
added a test for writing body after no body responses in AbstractHttpTest . java and created a corresponding test in HttpServerTestBase . java to ensure that
added error handling for script execution in ScriptTransformer . java to improve robustness by providing clearer error messages when script execution fails
added configuration options for DBCP and NONE in HiveConf . java and updated related imports in TxnHandler . java to enhance connection pooling
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to ensure consistent
added lock and unlock functionality to the FileMenuFilter and OCFileListFragment classes to enhance user experience by allowing locking and unlocking of
updated versioning logic in mmm Version . java and ppp Version . java to improve clarity and maintainability of the code
[ hotfix ] [ table - planner - planner - java ] clear endpoint cache when create new keyspace .
refactor thread state handling by introducing a new ` waitForState ` method to improve code readability and maintainability by using a more descriptive
updated ` getCoercedAttrValues ` method to ` getCoercedAttrValues ` and ` getCoercedAttr
[ java ] refactoring sessionstorage interface to extend storage
fix nullpointerexception in createviewstatement with unnecessary or replace option
updated exception handling in SegmentGenerationJobRunner to catch a more general Throwable instead of a general Exception to improve error reporting and provide clearer context for
updated query string retrieval in SpellCheckComponent to use rb . getQueryString ( ) instead of a hardcoded value to ensure that the query string
added validation for header values in mmm Headers . java and ppp Headers . java to ensure proper handling of illegal characters and whitespaces
replaced instances of instance size with arrayBaseOffset in HybridLayout . java and added afterFieldsOffset in HostedInstanceClass . java to improve
[ java ] remove @ experimental from apexcommentcontainernode . setcontainscomment
hhh - 15225 add log for association with lazy fetch mode . join and lazy = true
refactor ` NoGetOperationsFilter ` , ` NoUserOperationsFilter ` , and ` RemoveInternalParamsFilter ` classes to extend ` AbstractSpec
added assertions to validate database and table names in TestCompactionTxnHandler and updated TxnHandler to set database and table names in TxnHandler to
camel - 15497 : timer consumer should not throw exception when shutdown
added a condition to check if a block is processed before adding it to the worklist to ensure that only processed blocks are added to the worklist
added null check for providers in ProviderManager to ensure proper handling of null elements and prevent potential NullPointerExceptions
removed unnecessary database version check in InsertOrUpdateGeneratorPostgres . java to streamline code by eliminating unnecessary exception handling
added LOCAL _ INDEX _ LIMIT attribute and updated filter logic in LocalIndexIT , BaseScannerRegionObserver , and ExplainTable to utilize
added validation for adding collections with the same name and type in AlterTableStatement . java to ensure the addition of a collection with the same name and
updated cursor handling logic in VDUBuffer and vt320 classes to use window base instead of width and height to improve accuracy of cursor position
removed the static final string USE _ RETRIES from HttpShardHandlerFactory . java to streamline the code by eliminating unnecessary constant
updated the VERSION _ NUMBER string format in JavaVersion . java and added a test for JavaVersion in TestJavaVersion . java to ensure compatibility with
added a check to return early if all input gates are empty to ensure that all input gates are not empty before proceeding
added a new test method ` test ` to the ` TestReceivingMessageSourceParserTests ` class to ensure that the ` test ` method
added a null check for properties before retrieving the key to avoid potential NullPointerException when properties are null
http : / / issues . apache . org / jira / browse / amq - 4294 - fix filesystemblobstrategy . openfile
corrected the spelling of " rolling upgrade " to " stack upgrade " in multiple Java files to improve code readability and maintainability
remove txconfidencelistener from txidtextfield and add it to txidtextfield .
added a constant for " G1 Perm Gen " in JmxSupport . java to track the existence of the " G1 Perm Gen
removed unused imports and simplified return statement in NearbyController . java to streamline code and improve readability
pdfbox - 2465 : make clonefornewdocument public
updated activity type checks in BaseSwipeUpHandlerV2 . java to include ACTIVITY _ TYPE _ HOME to ensure correct handling of home activity
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related constants to improve clarity and consistency in naming conventions
updated test methods in ShadowTelephonyManagerTest to use ` shouldGiveNetworkCountryIsoInLowercase ` and ` shouldGetS
updated unfreezeAmount assignment in UnfreezeBalanceV2Actuator . java to ensure proper handling of unfreeze balances
[ java ] correct the spelling of " per match " to " per match " in the ConferenceSchedulingXlsxFileIO class
use commons . io . fileutils instead of google . common . io . fileutils in firefoxprofile
refactor assertion classes for consistency and clarity to improve maintainability and readability of the codebase
refactor Observable class methods for improved performance to enhance performance and readability of the code
replaced BasicDBObject with addMultiFieldOperation in Update . java and added multiple test cases in MongoTemplateTests . java to enhance functionality by allowing
added null check for randomUUID before setting it in MockHubService to avoid potential NullPointerException when randomUUID is null
added onHoverEvent method to InputConsumer and implemented hover event handling in OverviewInputConsumer and InputConsumerProxy classes to enhance touch event handling and
added a check for the presence of the " bootstrap _ conf " flag in the server ' s server configuration to ensure that the bootstrap configuration is only
camel - 8192 : fix camel - netty and camel - netty to use consumer instead of default value .
updated the client RETRIES _ NUMBER configuration from 5 to 35 in HBaseTestingClusterAutoStarter and HBaseTestingClusterAutoStarter
use file . separator instead of file . resolve ( ) in sourcesnippethelper
[ flink - 18286 ] [ runtime ] fix test failure in encodedgraphcachetest
updated the query command from " customer _ count " to " all _ tables " and added a new test method for querying over tables to improve
added logic to retrieve and adapt Kraken assets from Kraken assets in KrakenAdapters . java to improve the handling of Kraken assets by
added a ` toString ` method to the ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test ` to provide
updated variable names from ` entry . getKey ( ) ` to ` dimensions ` for clarity and consistency to improve code readability and maintainability by using
[ influxdb ] add check for non - blank measurement in influxdb
renamed ` doTransform ` methods to ` downcast ` in multiple converter classes to improve clarity and consistency in method naming conventions
updated IP address filtering conditions in NetUtils . java to include additional IP addresses to enhance IP address validation for better compatibility with different IP addresses
add a method to quote column names in the DataTextFormatter class to improve code readability and maintainability by encapsulating column names
added methods to set system properties and set properties in WrapSystem , StrUtils , and CompileMethodEntity classes to enhance system property management and enhance method
added a constructor to UpdateRequest that accepts a URL to enhance flexibility in handling POST requests
renamed EnumSerialization enum to EnumSerialization in ProtoTypeAdapter . java to improve clarity and consistency in naming conventions
removed the ` addExperimentalFormatWarning ` method from ` RequestHandlerUtils ` and updated its usage in ` RequestHandlerUtils ` to streamline
[ hotfix ] [ jpms ] fix log message in jpmsutil
make the default label font a little easy to use .
[ hotfix ] fix checkstyle violation in defaultbrokerheartbeatmanager
added mean partition size and split count variables to CqlInputFormat to improve clarity and functionality of the input processing process
removed unnecessary condition checking for image name in JUnitTestsShouldIncludeAssertRule . java to simplify the condition for better readability and maintainability
[ flink - 11818 ] [ table - planner ] add equal and hashcode method to ruleterminalnodelefttuple
added a new import for StageIDsRearranger and resolved StageIDs in TezCompiler . java to ensure that StageIDsRearranger is
[ hotfix ] [ runtime ] rename messagingservice - pool to messagingservice
added a check for the total memory before processing in LotsOfOutput . java to improve memory management by providing clearer information about memory consumption
added imports for Document , NumericRangeQuery , and NumericRangeQuery , and updated imports across multiple classes to improve code clarity and maintainability
updated LdapAutoConfiguration and LdapProperties to handle anonymous read - only configurations and refactored related methods to improve code clarity and maintainability by
refactor DatabaseMetaData class implementation to improve code readability and maintainability
[ hotfix ] [ test ] fix checkstyle issue in exampleechopipelinetest
added a ` finishMocking ` method to ` MockitoSession ` and modified ` DefaultMockitoSession ` to return a ` Throwable ` instead of
removed the extraDeps parameter from GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to streamline the code and ensure
updated variable names from ` buffer ` and ` handler ` to ` readBuffer ` , ` writeBuffer ` , and ` writePending ` in `
changed block retrieval from ` getStaticBlock ` to ` getFlowingBlock ` in ` BlockLiquidWrapper . java ` to ensure proper handling of
updated background class URL handling in AndroidLocationPlayServiceManager and modified location handling in BackgroundLocationHandler to improve URL handling and ensure proper handling of background
[ hotfix ] [ javadoc ] fix typo in javadoc
[ hotfix ] [ cli ] fix type cast exception in optimizerplan
update craftingmanager . computeifabsent ( ) to use computeifabsent ( ) .
flume - 13232 : make sure we do n ' t throw an ioexception .
removed unnecessary ` \ r ` checks from conditional statements in ` TabsAndIndentsVisitor . java ` to simplify the code and improve readability
added a Pattern . compile ( " . * pg _ temp _ . * " ) to NeuteredLinesFilter . java to enhance the functionality
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
added conditional checks for data type " INTERVAL " and " NCLOB " in DataTypeFactory and updated related conditions in UnknownType to ensure
[ wavefront ] add ispublishinghistogram ( ) method to wavefrontdistributionsummary
added warmup configuration for springCloudSelectorHandle in ShenyuClientRegisterSpringCloudServiceImpl . java and updated DivideUpstreamUtils . java
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enhance listener registration functionality
added imports for SocketException and SocketException in SelectChannelServerSslTest . java to ensure proper handling of HTTP methods and URIs in SSL
camel - ignite : fix the ignite component to close the ignite if it ' s not null
added null check for ` cnt ` in ` AbstractClient . java ` and modified the reach logic in ` resultSet . next ( ) ` to ensure
pdfbox - 2452 : do n ' t catch exception in pdf debugger .
added unit tests for setDisplayHdrCapabilities in ShadowDisplayTest . java to ensure proper functionality and error handling for display capabilities
set classLoader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leaks
updated error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve clarity of error messages for better debugging and debugging
added a default constructor to the Message class to provide a default constructor for the Message class
do n ' t report missing class for java . awt . component in idiom
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and adjusted BigDecimal initialization to ensure proper handling of decimal types and improve precision scale validation
changed the type of ` gzipstream ` from ` GZIPOutputStream ` to ` OutputStream ` in ` CompressionResponseStream ` and added a conditional check for
corrected the spelling of " WWWAuthenticate " to " authenticateHeader " in the Authenticator class to improve code readability and maintain
added a condition to check if the directory path starts with " _ " and " org \ \ omg \ " in DCD . java to ensure
added a method to retrieve the thread group name in ThreadLeakTest . java to improve thread management by providing a more descriptive name for
added logging functionality to the afterPropertiesSet method in MethodInvocationPrivilegeEvaluator to improve logging clarity and ensure proper handling of unauthorized properties
updated package name from org . apache . nutch . crawl to org . apache . nutch . tools in DmozParser . java to
updated import statements in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy to improve code clarity and maintainability
vm : add iso path to the storage pool if the vm be in the same iso .
removed redundant handling of signal handlers in SigInt . java and simplified error verification in SigIntTest . java to simplify signal handling and improve
[ hotfix ] fix checkstyle violation in nodetool
updated imports and annotations in AxonAutoConfigurationWithSpringCloudTest . java and added a new discovery client bean in AxonAuto
added multiple @ Override annotations in ColorRGBA . java to improve code readability and maintainability
remove deprecate resetinitializedplanningentities from planningvariabledescriptor
added build time and build time settings to TwoLevelArtifactCacheDecorator and CachingBuildRuleKeyManager classes to enhance the handling of artifact build time
updated methods in GroupByOperator to use getDeclaredFields and getDeclaredFields instead of getFields to improve clarity and maintainability of the code
added null check for the block before calling addBlockAppearance in Wallet . java to avoid potential NullPointerExceptions when the block is null
added CNC _ BTC to the CurrencyPair and updated related classes to include CNC _ BTC to support CNC and CNC currency
updated skewAllowance from 5 to 15 in SamlIdPResponseProperties , SamlRegisteredService , and SamlProfileSamlAuthNStatement
updated sorting criteria in SongListActivity and Utils to use ItemSortBy for consistency to improve code readability and maintainability by using a consistent sort
removed unused imports and modified the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to improve code clarity and maintainability by eliminating
add legacybaseblockwrapper , deprecate block .
updated IcebergBranchExec to check for tags before retrieving snapshot ID to improve error handling and provide clearer error messages when tags do not exist
replaced ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to simplify the code and improve readability by
remove bounce count from photonmappingdemo and use program resource index
added validation for ` requirePasswwordChangeRequired ` in ` IdentityProviderEndpoints . java ` and improved error handling in ` IdentityProviderEndpoints .
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that all constructors are not initialized in the constructor
added a check for the closed connection before executing SQL execution in JdbcExecutor . java to ensure proper URL retrieval based on the connection state
added a new method ` testRequiredBody ` in ` SpringmvcClient . java ` to validate the presence of required objects in the RestTemplate
updated regex patterns in CredentialInjector and CredentialInjectorTest from " . mysql " to " . user " and " password . mysql " to
added a new menu item " Item4 " to the menuItems array and implemented a keyboard shortcut for the ENTER key in ActionListenerCalledTw
updated assertions in TestCoreParser to include class name and added a conditional check for produced results to ensure that results are only produced when there are no
updated equality checks in SimpleNode . java for consistency to improve code readability and maintainability
removed the ` public ` modifier from the ` PopulatorContextStackItem ` class to allow access to the ` PopulatorContextStackItem ` class
updated the number of documents from an integer to a long in MoreLikeThis . java and added a test for small sample in TestMoreLikeThis
reformatted code for consistency in QuestManager . java to improve readability and maintainability of the code
[ hotfix ] [ test ] make networkbufferpooltest static
added a line to append the " $ lt " object to the query in MongoSessionDataStore . java to ensure that the query appends the correct
added a native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to provide a way to retrieve a long value for
updated time zone data from " ARAST " to " EET " across multiple Java files to ensure compatibility with the latest operating system
updated the id from 90000010 to 90000011 in DeprecationLogger . java to reflect the correct ID for better debugging
hhh - 13232 - do n ' t throw jdbcexception in sessionimpl . getsession ( ) when rollbackonly be true
[ java ] do n ' t print debug message when download external file .
set apple . laf . usescreenmenubar to false for macosx
test : add piecewiseintegrationtest . piecewiseintegrationtest . testpiecewiseintegrationtest .
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected in `
added modWhiteListPattern assignment in HiveConf and implemented a test for modifying configuration in TestJdbcWithSQLAuthorization to ensure proper handling of configuration
removed duplicate entryName and value from invalidClasses map to improve code clarity and maintainability
use player . team ( ) instead of team . sharded
updated the domain name in Cookie . Builder from " comp1 " to " domainHelper . getHostName ( ) " to ensure compatibility with the correct domain
added ` shouldValidateNullable ` method to ` MissingColumnChangeGenerator ` , ` MissingTableChangeGenerator ` , and ` MissingTableChangeGenerator `
refactor multiple security token - related classes to improve code organization to enhance maintainability and readability of security - related classes
added deleteByQuery and deleteByQuery methods in CustomCollectionTest and refactored CompositeIdRouter to use static final constants to improve code read
added snapshot handling for Postgres database in ExecutablePreparedStatementBase and updated dependenciesChangeLog in PostgreSQLIntegrationTest and PostgreSQLIntegrationTest
updated conditional checks and formatting in DefaultServlet . java to improve code readability and maintainability
[ jabref ] fix drag - and - drop bug in jabref
updated the description creation method to use ` Description . createTestDescription ` instead of ` createDescription ` in ` ExecutionUnitRunner ` and ` Execution
replaced ` ! myVersion ` with ` StringUtils . isNotEmpty ( myVersion ) ` and ` buildTimeString ` to improve code readability and maintain
removed the ` public ` access modifier from several methods in ` TimeUtils ` and updated imports in ` GitBlitSuite ` and ` Time
refactored security frame and injected invoker checks in RefectionMHTests to improve clarity and consistency to enhance code readability and maintainability by
updated file name check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure correct file name validation for better
updated method handling in NativeImageDebugInfoProvider to check for HostedMethod instances to improve type safety and correctness of method names
added ` getIcon ( ) ` method to ` Data ` and ` Datalaboratory / impl / manipulators / datalaboratory / impl
added a check to ensure the last character is not null before returning the request name to avoid potential NullPointerExceptions when retrieving the request name
updated regex replacement logic in FindAndReplace . java and added a new test for dollarsignsTolerated in FindAndReplaceTest . java to
do n ' t cast xmppconnection to xmppconnection in jabber debugger
refactor SchemaExtractionProcessor class to improve code organization to enhance maintainability and readability of the code
added a new method ` copyDir ` in ` IO ` to copy files from a specified directory to enhance file copying capabilities for better resource management
added a runtime exception for unknown datum class in JacksonUtils . java to improve error handling for unknown datum types
replaced calls to ` buildAbiFromClasses ( ) ` and ` buildAbiFromSource ( ) ` with ` getLibraryAbiJar
removed unnecessary calculations for item height in SelectBox . java to simplify the calculation of item height based on background padding
added normalization of database and table names in ObjectStore . java to ensure proper identifier handling for database and table names
added schema validation for " postgres " and " oracle " databases in DbSqlSession . java to ensure that the database schema is set when
removed the logout method from the HomeFragment to streamline the activity finish process by eliminating unnecessary logout logic
updated ` MockStreamingRuntimeContext ` constructor parameters to include a new task number of subtasks in multiple test files to ensure compatibility with the latest features
fix npe in fastimportaction when there be no candidate
updated condition checks in ContainerLifeCycle to use isManaged ( ) instead of Managed . MANAGED to ensure proper handling of managed bean state
rename iexecutionattributesdialect to iexecutionattributedialect
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure the metadata is cleared before proceeding
do n ' t create new string in gettime ( ) if there be null location .
[ iotdb - 116 ] fix npe in tableinsertiondatacontainer if measurement be null .
deleted the Session2Token . java file to remove unused classes to streamline the codebase
[ java ] remove the volume from the db when create a new volume .
added a new ` Install ` class and integrated it into the ` SystemShortcut ` and ` SystemShortcut ` classes to enable instant app installation based on
added a constructor to LdapAuthenticationProvider and a NullAuthoritiesPopulator class to enhance security by allowing null authority populates
added a check for the existence of the " retrolambdaJarPath " system property in Executor . java and updated CN1BuildMojo .
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to improve code readability and maintainability
refactor the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` and update its usage to improve clarity and
added a call to handleNullResult in JMESPathExtractor . java to ensure that null results are handled correctly
updated import statements and added a null check for authorities in AuthorizeTag . java to improve code clarity and prevent potential NullPointerExceptions
updated assertions in multiple test classes to include an additional parameter for consistency to improve code readability and maintainability
[ hotfix ] fix typo in vm snapshot error message
updated annotation retrieval from ` classConfig ` to ` methodClassConfig ` in ` RobolectricTestRunner ` and added new test cases in `
updated imports from SelectChannelConnector to SocketConnector in JettySolrRunner . java to improve clarity and functionality of the Jetty Solr connector
refactor HiveAlterHandler to improve part key comparison logic to enhance code readability and maintainability by encapsulating partial equality checks
added a new debug flag ` ENABLE _ ICON _ IN _ TEXT _ HEADER ` to the ` FeatureFlags ` class to enable the icon
reformatted the conditional statement in SimulationStatus . java to improve readability to enhance code readability and maintainability
replaced SharedBlockingCallback with Callback . Completable in multiple files to improve code readability and maintainability by using a more generic Callback class
added workspace listener functionality to PreviewControllerImpl and updated PreviewUIController to handle workspace updates to improve workspace management and ensure proper handling of workspace
updated conditional checks in ReflectionFactory and modified class name checks in ReflectUtil to ensure proper handling of VM anonymous classes and improve code clarity
refactor TransportHelper class to improve code organization to enhance maintainability and readability of the TransportHelper class
updated file path formatting in CatalinaAcegiUserRealm . java to improve code readability and maintainability
added logging statements for server and manager initialization in AmbariServer . java to improve logging clarity and maintainability of server and manager start operations
added null checks and assertions for the ` forNode ` and ` forModify ` nodes in ` JSONWriter . java ` to ensure proper handling of
refactored the ` run ` method to accept a ` FileSystem ` parameter instead of using a hardcoded path to improve code readability and
added a condition to check if backgroundManager is attached before attaching it to ensure that backgroundManager is only attached when it is not attached
added functionality to set the current tab in AllAppsTabbed , Launcher , and updated child width calculations in PagedView to ensure proper
added a null check for the URL in BaseDataSource and created a test for typo Postgres URL in SimpleDataSourceTest to ensure that the URL
added JUnit imports and modified PebbleTemplateEngine initialization in PebbleModuleTest . java to enhance test coverage and ensure compatibility with
added a ` EditNameDialog ` to the ` FileDisplayActivity ` class to handle directory creation and deletion to enhance user experience by allowing users to
added actionToggleBarBorders and invalidated bar border widths in multiple activity classes to ensure consistent border management across different datasets
updated SSL URIs in OkCoinExchange . java to use " okex . com " instead of " okcoin . com " to ensure consistent
[ drools - 2475 ] fix acceptedforagertest to use naturalscorecomparator
replaced FileChannel with SeekableByteChannel for better resource management to improve code readability and maintainability by using a more descriptive method
refactor getFlattenFieldTransferPair method to accept FieldReference instead of FieldId to improve code clarity and maintainability by using a more descript
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] fix checkstyle violation in serializationconfigurationparser
added imports for ActivityManager and set watch heap limit to 250MB in QuickstepProcessInitializer . java to ensure proper memory management and memory management
refactor lambda expressions in Collectors . java for improved readability to enhance code readability and maintainability
[ log4j2 - 264 ] fix test failure on window .
removed redundant try - catch block in PrecompactedRow . java to improve code readability and maintainability
updated return values in ICC _ Profile , ColorConvertOp , and ColorConvertOp classes and added a new InvalidRenderIntentTest class to ensure correct
add meter registry lifecycle to auto - configuration
change log level from warn to info for config center error
http : / / issues . apache . org / jira / browse / amq - 4253 - add miss byte [ 0x00 ]
camel - 14486 : simpletokenizer should not parse a string with ambiguous operator .
refactored the ` onTabUnselected ` method in ` EditorActivity ` and added focus handling in ` IDEEditor ` to improve focus
updated error logging to include the user ' s name to improve error reporting by providing a clearer context of the user ' s name
updated matrix scaling and added null check for submeshnames in SkeletonModelGpuSkinningTest . java and SkeletonModelViewer . java
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should no longer be used
added declaration declaration functionality to the JSweet command - line launcher to enable dynamic processing of d . ts files in the JavaScript output directory
[ hotfix ] [ stream ] increase fetch timeout in streamconfig
[ hotfix ] [ runtime ] add html file to stream dataflow worker
increased the maximum number of threads in METASTORESERVERMAXTHREADS from 100 , 000 , 000 to 1000 to increase the maximum number of
changed the return type of the ` onTaskSnapshotChanged ` method from ` void ` to ` boolean ` in ` RecentsModel . java `
update shadow radius from mMaxShadowRadius to shadowRadius in SwipeUpAnimationLogic . java to ensure proper handling of shadow radius values
added a new test method ` chainNestingAndAggregation ` in ` ChainParserTests ` to verify the behavior of ` chainNesting
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure proper handling of
use isinteractive ( ) instead of isinternal ( ) for source . isinternal ( )
updated the condition in CreateKeytabFilesServerAction . java to check if previousCachedFilePath is null before comparing to previousCachedFilePath to ensure correct
added DisplayController import and modified WindowManagerProxy initialization in LauncherPreviewRenderer . java to include it to enhance functionality by utilizing DisplayController for
removed redundant checks for root directory in MetalFileChooserUI and SynthFileChooserUIImpl to streamline code and improve readability
updated the method of obtaining the screen size from ` getToolkit ( ) ` to ` Toolkit . getDefaultToolkit ( ) ` to ensure compatibility with the
removed the wildcard type from the recognise method in TensorflowRESTCaptioner , TensorflowRESTRecogniser , and Tensorflow
add test to verify that fetchresults ( ) and group do n ' t work with factory expression
updated drag index handling in FreeformFinSetConfig . java to set the drag index based on the point ' s position to ensure proper drag
updated the moe version from " 1.1 . 2 " to " 1.1 . 0 " to ensure compatibility with the latest features and features
[ java ] use program . spendallgas ( ) instead of constant . canot ( ) .
updated error messages to include " nerror " instead of " error " in multiple files to improve clarity and consistency in error reporting
added a @ Deprecated annotation to the Weights class to mark the class as deprecated to indicate that the class should no longer be used
refactor Unsafe registration logic into a separate method ` registerUnsafePlugins ` in ` AMD64GraphBuilderPlugins ` and ` StandardGraphBuilderPlugins
added Hint annotations to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and created Sample and Sample classes for blacklisted modules to
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to ensure that the center page is vertically
[ hotfix ] [ runtime ] remove redundant call to doneprocessing ( ) in migrationrequestoperation
[ kraken ] rename moduleipaddress to baseurl for consistency .
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy `
added database handling functionality to the TestJdbcWithMiniLlap and LlapBaseInputFormat classes to ensure proper database creation and query execution based on
added a new test method ` testCaseInsideBrackets ` in ` CaseExpressionTest . java ` to validate SQL parsing and deparsing to ensure
added touch event handling and refactored the copy mode logic in ConsoleActivity . java to improve code readability and maintainability by encaps
updated imports and refactored the ` writeXmlOutput ` method to use ` DocumentBuilder ` and ` DocumentBuilderFactory ` instead of ` String `
fixed npe in aggregation strategy when exchange be null
camel - 14136 : camel - exchange - exception message should include cause cause to the exception message
rename basicconfigurator to basicconfigurator in logback - classic
added a condition to check if the target VN flag is a valid flag before comparing to the targetVN to ensure that the target VN
added import statement for SharedStringSource in TestXSSFRichTextString . java to improve code clarity and maintainability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to provide a way to invoke a method in the ` ObjectInvoke
refactor multiple dataset classes for consistency and clarity to improve maintainability and readability of the codebase
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed the ` NormUpdate ` class to ` static ` and updated comparisons to use ` equals ` instead of ` = = ` to improve
changed the visibility of the singleton variable from public to private in IndexFileNameFilter . java to enhance encapsulation and improve encapsulation
[ java ] fix ifstatementtest to be able to test ifstatement .
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
refactor GsonBuilder methods to use nullSafe for better null handling to improve code readability and maintainability
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the expected size of the bundled distribution
added a new file EXIFReader . java to handle EXIF metadata processing to facilitate the processing of EXIF metadata in the application
[ hotfix ] [ cloudwatch ] fix npe in cloudwatchmeterregistry # tostandardunit ( )
[ pmml ] fix applypmmlmodelcommand . newInstance ( ) to use parameterinfo . getvalue ( ) .
[ hotfix ] [ table - common ] improve error message in fluentprotocol
added a check to return early if the bar is not visible to ensure that the bar is only displayed when it is not visible
aarch64 : handle branchtargetoutofboundsexception in substrateaarch64backend
added a try - finally block around the initialization of the JDKLogManager in JDKXRLogger . java and created a test
added a ` find ` method to ` TicketCatalog ` and modified logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry `
updated whitespace and formatting in TestSSL . java for consistency to improve code readability and maintainability
[ hotfix ] [ runtime ] fix concurrency issue in sortmergeresultpartition
updated the constructors of Read and Write methods in JmsIO . java to include additional parameters to enhance flexibility and maintainability of the code
updated PluginHandleController , PluginHandleDTO , and PluginHandleDO to include type and sort parameters to enhance functionality by allowing dynamic sorting of plugin handles
replaced ` start ( ) ` method with ` start ( ) ` method in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig `
added new color and stencil formats to IOSApplicationConfiguration and updated IOSGraphics constructor to use this new configuration to enhance drawable color and
replaced direct calls to ` webDriver . findElement ( By . name ( " username " ) ` with a new method ` attemptLogin ( )
added unsupported operation exceptions for real ( ) and complex ( ) in PtNDArray constructors to improve error handling for unsupported operations
removed unnecessary condition checking for interrupted threads in SynchronizationStatistics . java to simplify thread safety and prevent potential null pointer exceptions
refactor methods in Implements and ShadowPicker classes to improve code organization and maintainability
refactor HttpClientOptions initialization to use a private method for better encapsulation to improve code readability and maintainability by encapsulating
added support for dynamic array types in DynamicStruct and improved string construction in SolidityFunctionWrapper to enhance type safety and provide clearer error messaging
added a new boolean parameter to getFloatProperty calls in InlineLayout and FontUtil classes to enable dynamic alignment of text and font size properties
added constructors to CopyStep and its corresponding test case to ensure proper handling of file paths in the CopyStep class
fixed - rsemaphore . acquire ( ) and rsemaphore . acquire ( ) be call after addpermits ( )
[ java ] fix test failure in camel - dsl
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` and ` BuildTargetParser ` to utilize it for parsing flavor
change the data type from List < String > to List < ByteString > in WitnessScheduleStore . java to enhance data integrity by using ByteString instead
added a check to ensure resultsMeta is not empty before logging to avoid potential NullPointerExceptions when there are no results
refactor ConcurrentLinkedQueue logic to improve node removal logic and add a new RemoveLeak class for testing to enhance code readability and maintainability by
added a new parameter ` addSpecialTokens ` to the ` encode ` methods in ` HuggingFaceTokenizer ` to enhance the encoding functionality by allowing
[ hotfix ] [ runtime ] use collections . ncopy instead of arraylist in taskmanagerservices
added data size setting for chunk data in LoadSingleTsFileNode . java to ensure consistent data handling during chunk data addition
added session storage context to BrowserSessionStorage and updated DuoSecurityMultifactorWebflowConfigurer to include session storage context to enhance session management by allowing
add a new test method ` testSchemaValidation ` in ` TestJspDocumentParser ` to validate XML schema validation to ensure proper handling of XML
added a default constructor to TypeAdapter and updated @ Ignore annotations in Java17RecordTest and ReflectionAccessTest to ensure compatibility with Java 17 and improve
refactor event handling in SuspendedEvent and add a kill flag in SuspendedEvent to improve error handling and provide clearer error reporting
refactor AntPathRequestMatcher class for improved readability to enhance maintainability and readability of the code
remove unnecessary null parameter from createresourcepolicy method
added null check for _ deflaterEntry before releasing it to avoid potential NullPointerExceptions when _ deflaterEntry is null
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to mark tests as completed after tests
added Normalizer import and modified the return statement in CheckSum . java to remove unknown characters to ensure proper handling of unknown characters in checksums
refactor command handling in Example . java to improve code readability and prevent potential NullPointerExceptions
make keylistener final and add @ override annotation to baseappstate
changed the type casting of objectToSave from T to DBObject in MongoTemplate . java and added a new test for saving JSON strings in
added a method to check if an IP address contains multiple remote addresses in RequestUtils . java and a corresponding test in RequestUtilsTest . java to
changed return type of getJobArgs and getJobArgs methods from String to ObjectBuilder in JsLibrary . java to enhance type safety and improve code clarity
http : / / issues . apache . org / jira / browse / amq - 4647 - fix test failure on window
added whitespace handling in GlyphLayout . java and modified test cases in BitmapFontTest . java to improve run performance and ensure proper resource management
added ` pauseOrResumeSplits ` method to ` PulsarSourceReaderBase ` and ` PulsarPartitionSplitReaderBase
added configuration for HIVESCRIPT _ OPERATOR _ ID in HiveConf and updated ScriptOperator to use it in HiveConf and ScriptOperator to enhance
refactor ` getListedTermCounts ` method to use ` Stream < SimpleImmutableEntry < String > > ` instead of for loops to
added a new action class ` UseSeparateStepSizeAction ` to handle separate step size actions in the LocalizingService
added final fields to fields and modified locking logic in FileMenuFilter . java to enhance thread safety and ensure proper locking behavior
hbase - 16264 fix splittableinputformat . getallregions ( ) to use stringutils . isblank ( )
updated request header headers from " false " to " 1 " in HttpClientRequestAdapter and its test to ensure correct headers are included in the request
pdfbox - 2452 : use ioutils . closeforclose ( ) to close subdoc
added native methods for setting and exiting fullscreen modes in GwtGraphics and GwtGraphics classes to enhance rendering capabilities and ensure proper fullscreen behavior
updated ` WebfingerIssuerService ` to use ` URI ` instead of ` String ` and modified resource normalization method to use ` URI ` instead
added a new test class ` SoulApacheDubboClientConfigurationTest ` for testing Dubbo configuration to ensure correct configuration of Dub
replaced ` Gdx . files . internal ( fileName ) ` with ` resolve ( fileName ) ` in ` SkinLoader . java ` to ensure
updated log level from warn to info in ` ChainingAttributeReleasePolicy ` and ` OidcDefaultJsonWebKeystoreCacheLoader ` to
[ java ] use lockinterruptibly ( ) instead of lock ( ) .
refactor package declaration in mmm Compiler . java and ppp Compiler . java to improve readability and maintainability of the code
fix nullderefandredundantcomparisonfinder to not report exception
use defaulthttpdatasource instead of defaulthttpdatasource in dashrendererbuilder
add a configuration property to set the maximum number of prepared statements per connection to enhance flexibility in managing prepared statements per connection
renamed ` WritableConfig ` method to ` Configuration ` in multiple configuration classes to improve clarity and consistency in naming conventions
removed the checkErr method from AutoScalingHandler . java to streamline error handling for command operations
refactor CombinedDataset class implementation to improve code readability and maintainability
updated byte array usage from ` buf ` to ` b ` in ` InflateIn _ DeflateOut . java ` to ensure correct reading of
added methods to remove cryptography restrictions in the Utilities class to enhance security by removing unnecessary cryptography restrictions
added a cancellation check before processing the chunk in Entity . java to ensure that the chunk is only generated when the event is cancelled
added a new test method ` testPageMarginsLongTextTransform ` in ` TextVisualRegressionTest . java ` to validate page margins long text
removed redundant assignment of vContext in Vectorizer . java to streamline code by eliminating redundant code
[ wialon ] fix wialon speed calculation
hbase - 16464 disable conf for cluster metric ( sergey shelukhin , review by jbellis )
added ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` isEmpty ( ) `
updated boolean flags for user presence , visible , and attached in Launcher . java to ensure proper handling of receivers when they are attached
refactor HttpClientRequest , HttpClientResponse , HttpServerRequest , HttpServerResponse , NetSocket , and ReadStream classes to improve code organization and maintainability
[ hotfix ] [ runtime ] add parameter to zadd ( ) method in pipelinebase
[ hotfix ] [ runtime ] fix checkstyle violation in test
[ hotfix ] [ test ] rename testasyncmessages to testasyncmessagesperformance
refactor VersionedTargetGraphBuilder and VersionPropagatorBuilder to improve node retrieval logic and add tests handling in VersionPropagatorBuilder to
updated epoch thresholds in TimeZoneProvider . java for better accuracy to improve accuracy of epoch validity checks for better accuracy
updated the return value in ` EscherBlipRecord . java ` and added a new test class ` TestOLE2Embeding . java
removed redundant initialization of row and column variables in JSONParser . java to streamline code and improve readability
replaced ` JavaType . ShallowClass . build ( fullyQualifiedTypeName ) ` with ` Pattern . compile ( Pattern ) ` for type matching to
updated DETAIL _ PLAY _ TRAILER and DETAIL _ THUMB _ HEIGHT from 200 to 300 and added trailer handling to
added a method to remove glyph information from the cache in CStrike . java and introduced a native method in CStrikeDisposer . java
refactor terminateallbehaviour and terminateallbehaviour to use scopeexecutionentity in terminateallbehavior
camel - 14497 : camel - xml - fix the issue that camel - xml - type - name - strategy do n ' t work
updated the endpoint from " http : / / www . apereo . org / scottb . html " to " https : / /
add option to reset all preferences to default value
changed access modifiers of several fields and methods from private to protected in ThriftMetrics and ThriftServer classes to enhance encapsulation and enhance encap
added CHANNEL _ MANUAL _ FAN _ SPEED and removed deprecated channels in DanfossAirUnitHandler to enhance channel management
[ hotfix ] [ test ] use hamcrest assertion instead of junit in favor of junit 4
removed redundant calls to ` expansionHelper . stop ( ) ` in ` TweetActivity . java ` to streamline code and improve readability by
added equals and hashCode methods to PartitionPanel and PartitionFactory classes to enhance equality and hashing capabilities for PartImpl instances
add disk size parameter to user vm list if it ' s not already present
updated visibility logic in PredictionRowView to use PreferenceManager2 for improved user experience to enhance user experience by enabling suggested apps in the drawer
[ geos - 2472 ] add support for geos84 bbox in geosensibility .
added validation methods for value , position , and ivk parameters in LibrustzcashParam . java to ensure valid values and position parameters are valid
added a @ Deprecated annotation to IThrowableEntity . java to mark the IThrowableEntity as deprecated to deprecate the existing IThrowableEntity class
added variable assignments for x and y in NodeDataImpl . java to ensure correct positioning of nodes in the data structure
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should _ fail _
refactored the initialization of declaredDepsBuildResult and firstOrderStderr to use try - with - resources for resource management to improve resource management
updated the version number from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release of the application
added a check for the ITEM _ TYPE _ DEEP _ SHORTCUT item type in LoaderCursor . java to ensure proper handling of
[ hotfix ] [ runtime ] add hashcode ( ) to timegranularityspec
changed access modifiers of classes in BooleanQuery and DisjunctionMaxQuery from private to protected in BooleanQuery and DisjunctionMaxQuery classes to
added a boolean flag ` useProxyResponseCode ` to control proxy response code handling in ` HttpURLConnection ` to ensure proper handling of proxy response code
fix aarch64move to use scratchregister instead of aarch64 . sp
[ hotfix ] [ vms ] fix listupbyhostid ( ) and listupbyhostid ( ) in managementserverimpl
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter ` and updated the query method in ` TestDistributedSearch
updated the audio recoder from 22050 to 44100 in AudioRecorderTest . java to correct the audio recoder from 22050 to
updated the calculation of newOriginX in RocketFigure . java to account for the bounds of the subject to ensure correct positioning based on the
added null and empty check for Druid data source in DruidQueryBasedInputFormat . java to ensure proper handling of null and empty data sources
added ` ORIGINAL _ TYPE ` and ` ORIGINAL _ TYPE ` to the ` CustomProperty ` class and updated regex patterns in `
added a static method ` create ` to create a ` Index ` using a ` Map < String , Object > ` to provide a way to create
removed the conditional check for ` isBetweenGivenPeriod ` in ` Dates . java ` to simplify the logic for determining if the period is between
updated SchemaCompatibility to include location in the mergedWith method and added tests for union writer incompatibility to enhance compatibility handling and ensure correct handling of
refactor QueryUtils to use a dedicated method for checking entity paths to improve code readability and maintainability by centralizing entity path handling
added synchronization to the ` spans ` list and modified return statements in ` TestSpanHandler ` to ensure thread - safe access to ` spans
updated method signatures to use List < ? > instead of List < Object > across multiple classes to improve type safety and reduce unnecessary type parameters
updated exception handling in ViewContextImpl to catch InvocationTargetException and added logging for default realm and default realm to improve error handling and provide more informative
refactor OAuth2AccessTokenEntity class implementation to improve code readability and maintainability
updated error messages from " System is starting and in progress " to " Service cannot process the request due to the STATUSDOWN " to improve clarity of
added new project files for the " ios - data " and " ios - moe " resources in GdxSetup . java to enhance
updated imports in TestSearcherManager . java to use ConcurrentMergeScheduler for MockAnalyzer to improve performance by using a concurrent merge scheduler
added null and empty checks for SessionState in QTestUtil and refactored list retrieval in GenericUDTFInline to improve code robustness
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
added multiple calls to ` e . preventDefault ( ) ` in ` SpreadsheetKeyListenerW . java ` to ensure proper handling of key events
hhh - 16445 fix osgi osgi service stop ( # 11616 )
[ java ] use connectiontimeout instead of elapsedtimems for timeout calculation .
refactor voicecompiler . createcomponentfile ( ) to use non - packaged - resources
updated file name handling in Compat . java and modified file existence check in FileOpener . java to improve file handling accuracy and ensure correct file
changed the return type of the row ( ) method from Cell < T > to void to allow dynamic access to the row method
add a check for multiple ports in the BesuCommand class to ensure that multiple ports are specified in the configuration
added null mask generation functionality to WebSocketClient and updated WebSocketServlet to use it to enhance security by allowing null masks for WebSocket connections
refactor ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of creating a new instance
added a new ` NodeSelectionStats ` parameter to the ` NodeScheduler ` , ` NodeSelectionStats ` , and ` TopologyAwareNodeSelector
added a new file ` Person . java ` with a name field and its getter / setter methods to provide a way to retrieve the name of a
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to ensure correct handling of owner pointer
added clock handling functionality to the PlaybackOverlayFragment class to improve user experience by allowing animations to start and stop the activity
remove unused world . getblock ( ) call from updatecomparatoroutputlevel ( )
removed the ` final ` modifier from the ` IMPL ` variable and added exception handling for ` SecurityException ` and ` ClassNotFoundException ` to improve
refactor cell handling in Sudoku . java to use SwingUtilities for event firing to improve thread safety and ensure proper event dispatching
refactor ` DefaultInetAddressAdapter ` and ` Gson ` classes to use ` Class < T > ` instead of ` TypeToken ` to
added new methods for handling single and non - null values in Series class and corresponding tests in DataFrameTest to ensure proper handling of null values and prevent
updated the option from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java to
updated condition checks in GeoRelationUtils to use ` Math . max ( min _ lon _ incl ) ` instead of ` min _ lon _
fix diskoffering retrieve from serviceofferings api ( # 11824 )
added a cleanup method to the HazelcastTest class to ensure proper cleanup of the Hazelcast instance
added exception handling for NoSuchAlgorithmException and NoSuchProviderException in BlockCipherTest . java to ensure correct behavior of encryption algorithms in tests
added filters to print operations logs in QFileClient . java to enhance logging capabilities for printing operations
add support for inject type argument in aop proxy
added null check for currentConnectionAddress in ProtocolProviderServiceSipImpl . java to ensure proper initialization of the current connection address
replaced the use of ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to simplify the code
refactor image output stream handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential NullPointerExceptions
replaced calls to ` TvApp . showSearch ` with ` SearchActivity ` in multiple classes to streamline search functionality and improve code clarity
removed the ' this ' keyword from the constructor of SchemaCrawlerOptions and adjusted formatting in GrepOptions to improve code readability and maintain consistency in
added osgi configuration to the webconsole
added a @ Autowired annotation to the RepositoryIndexCreationIntegrationTests class to enable the use of a PersonRepository instance
changed the type of the stop method from Exception to InterruptedException in UIServer . java and updated logging in TestVertxUIManual . java to
refactor case statements in BlockCactus . java for improved readability to enhance maintainability and maintainability of the code
refactor mouse event handling in ThemeSelector . java to utilize MouseMotionAdapter for better user interaction to enhance user experience by allowing mouse interactions
refactor AbstractMulticastFlowControl to extend AbstractMinMulticastFlowControlRhsPadding and add an abstract class AbstractMinMulticastFlowControlRh
added alignment and vertical alignment parameters to the editStringAt method signatures in IOSImplementation . java and IOSNative . java to enhance functionality by
added null check for modelFile in StatTokSentAnnotator constructor to improve error handling and provide clearer error messages
added a condition to check if the query context is distinct before processing group by expressions in ClusterIntegrationTestUtils and updated query generation logic in QueryGenerator to
make stringsimilarity public and add getters to jnireflectiondictionary .
[ hotfix ] fix typo in jsyntaxtextarea
added null check for children before iterating in PartitionPruner . java to prevent potential NullPointerException when children are null
added tokenPosition and currentPosition variables to MessagePackParser and updated exception handling in MessagePackParserTest to improve code clarity and ensure proper handling of
added locale setting to AbstractSolrMorphlineTestBase to ensure proper locale management during test execution
removed unnecessary conditional checks for ` isLauncher ( ) ` in ` LauncherFragment . java ` to simplify size calculation logic for better readability and
added unit tests for the MetricsReporter class to ensure correct functionality and functionality of metrics reporting functionality
remove unused typecachemap from service registry
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class to ensure proper comparison and hashing of ` Rectangle ` instances
[ hotfix ] [ test ] fix test failure in streamkafkaptest
updated condition checks for strength in DSAParameterGenerator . java to use BigInteger . ONE instead of BigInteger . ONE to improve code readability and maintain
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and updated related classes to utilize it to enhance LL
[ hotfix ] [ test ] fix clientoutofmemoryhandlertest failure
added getCmoObjectId method to AbstractShape , ComboboxShape , ComboboxShape , LineShape , and TextboxShape classes to
added a new test method ` testWithDistinctScalarQuery ` in ` DistinctTest . java ` to validate query functionality with distinct scalar queries
updated multiple Java files related to search functionality to improve functionality and maintainability of the codebase
[ fabric8 ] remove unused method from managedkubesclient
refactor rating handling in DetailsDescriptionPresenter and add utility methods in Utils for media stream management to improve code readability and maintainability by centralizing
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot , TestRSAProviderTokenManager , and Test
added error handling for IOException and TransformerException in the generateSummary method in BugCollectionBugReporter . java to improve robustness by catching IOException and
replaced multiple calls to ` intPool . reset ( false , false ) ` and ` bytePool . reset ( false , false ) ` with a
added multiple @ Override annotations in FilterInputStream . java to improve code readability and maintainability
updated API level check in ShadowWindowManagerGlobal to use TIRAMISU instead of S _ V2 to improve compatibility with newer Android
updated UrlHelper to handle both HTTP and HTTP / HTTP / HTTP and HTTP / HTTP / HTTP / HTTP and HTTP / HTTPS schemes to ensure
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQLDatabase for foreign key constraint generation
hbase - 12279 fix some typo in hstore . replacestorefiles ( )
[ neptune ] remove system . out . println from emzuli .
[ selenide ] add a logging option to make it easy to configure the html identifier .
[ hotfix ] [ hive ] fix hivelookuptablesource . getproducedtableschema ( ) and hivelookuptablesource . getfield
add a lock to verify the current thread in the listenerset , deprecate it .
updated the schema name construction in SequenceSnapshotGenerator to use CatalogAndSchema to improve clarity and consistency in schema name handling
updated color calculations in SpriteBatch , SpriteCache , and AlphaTest classes to use AlphaTest instead of ProgressiveJPEGTest to
fixed - rconnection . join ( ) method should return batchpromise instead of join ( ) .
added logic to check for the existence of the base core in the statistic year core list to ensure that the statistic year cores are only added when
replaced ` TaskHolder ` with ` Task ` in ` TaskActionController ` and updated related methods to use ` Task ` instead of ` TaskHolder
refactor MorfologikFilter to use a new method for loading dictionary resources to improve code readability and maintainability by centralizing dictionary resource
updated sorting options in GridFragment from " stars " and " 5 " to " communityRating " and " criticRating " to ensure consistency in sorting
added imports for ViewKt and ListRow , and updated visibility logic for ListRow in CustomListRowPresenter to ensure proper visibility of the
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code organization to enhance maintainability and readability of the code
replaced instances of ` accordingTo . isCaseSensitive ( ) ` with ` accordingTo . instanceof ( DB2Database ) ` in multiple files to
[ jsr310 ] fix jsr310 serialization of javatimemodule
updated MDC import from log4j to slf4j in LogUtils . java to ensure compatibility with SLF4J conventions
replace TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve type safety
reformatted code for consistency and clarity in CoinbaseTransaction . java to improve code readability and maintainability
added methods to force build targets in BuckConfig and updated ProjectCommand to utilize it in ProjectCommand to enhance target management by allowing forced builds
updated the initialization of IdleStrategy to use System . gc ( ) instead of System . gc ( ) to ensure that the idle strategy is properly
updated OCFile and related classes to use ContentResolver instead of ContentProvider to improve compatibility with the latest Android versions
removed redundant conditional checks in ReportPanel . java to streamline code for better readability and maintainability
added null check for slotOwner in TestingLogicalSlot . java to ensure slotOwner is not null before assignment
added a new class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime . gc (
removed the ` super ( ) ` method from multiple exception classes to streamline the code and improve maintainability
added an overridden ` setUIID ` method to the ` ScaleImageLabel ` class to ensure the correct UI ID is set based on the icon
updated variable names from ' foundEntry ' to ' update ' in FeedUpdateService . java to improve clarity and consistency in variable naming
added support for " - cp " arguments in the Main class to enhance argument handling by allowing both " - classpath " and " - cp " to
updated the link to include the compiler option in the Avutil class to ensure the correct compiler is used for compilation
updated the initialization variable in StorageService . java to ensure proper initialization of the storage service
refactor Test7196045 . java for improved test coverage to enhance code readability and maintainability
updated light density and decay values in ShaderParametersLightShaft . java to reflect new lighting features and improve light decay handling
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` and updated related methods in ` OidcRedirectAction
updated the ` alterTableAddUniqueConstraint ` and ` alterTableAddUniqueConstraint ` methods to include ` nullable ` and ` nullable ` flags to
added a check for federated shares in the UsersAndGroupsSearchProvider and EditShareFragment classes to ensure consistent handling of federated shares in the
added an overridden method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to ensure proper handling of document values in the
refactor BufferAlignmentAgent and related classes to improve error handling and add a new package - info . java file to enhance code readability and maintain
added a method ` intForEach ` to ` Int2ObjectHashMap ` and updated specialisation generator for specialisation in ` Int2ObjectHashMap
do n ' t share scoreboards early if we do n ' t use the global map storage
changed return type of count methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository to allow
updated logging conditions for MTree snapshot creation in MManager . java to improve logging clarity and maintainability of the MTree snapshot creation process
updated the score calculation logic in VectorUtil and added new test cases in TestVectorUtil to improve accuracy of score calculations and ensure correct accuracy of score
added a new constant IRREVERSIBLE _ THRESHOLD and methods to update the last confirmed block number in the DynamicPropertiesStore class to improve
replaced the ` setLocale ( ) ` method with a call to ` Systems . setLocale ( ) ` in ` GpsMainActivity `
added a condition to check if the database was created in LauncherClings . java and implemented related methods in LauncherProvider . java to
updated error message formatting and refactored collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintain
added a null check for the datamodel variable before setting is64Bit to improve code readability and maintainability
added a thread variable and a check for the current thread in TestIndexWriterDelete . java to ensure that the test only runs if the current thread
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access the closeDatabase method from other classes
updated imports and imports in FullDetailsActivity , ItemRowAdapter , and BaseRowItem classes to use ModelCompat ' s asSdk for
added a loop to set attributes for SVG elements in BatikSVGDrawer to ensure proper attribute handling for SVG elements
removed the inputrcUrl parameter from the exception handling in ConsoleKeys . java to simplify error logging and improve readability
added a check for " WaitForResult " in AndroidImplementation . java and modified waitingForResult logic in CodenameOneActivity . java to ensure that
refactor constructors in HitQueue , SpanPositionQueue , and HitQueue classes to use a Supplier < T > instead of a boolean parameter to
refactor widget description handling and visibility logic in WidgetCell . java to improve code clarity and maintainability by centralizing widget description management
added a check for the maximum registered attribute count in Attribute . java to prevent errors when the attribute count exceeds the maximum registered attribute count
[ hotfix ] move predicatestest to impl . predicates package
camel - 13232 : add caseinsensitive option to defaultheaderfilterstrategy to support case - insensitive header name
updated inline layout parameters and variable names in InlineLayout and Breaker classes to improve code clarity and maintainability by using a more descriptive variable
added null checks and modified view initialization in ShareUserListAdapter . java to improve code robustness and prevent potential NullPointerExceptions
refactored the ` shouldInstrument ` method to include a check for Android SDK annotations to improve code readability and maintainability by simplifying the
added a null check for association before source in BrowserContentPane . java to ensure proper handling of insert destinations in the source table
[ hotfix ] [ test ] make cgroup . memory . limit _ in _ bytes configurable .
replaced instances of ` CxxDeps . of ( ) ` with ` EMPTY _ INSTANCE ` in ` AbstractCxxDeps . java ` and added
added a null check for the specified source under test in JavaTestRule . java to ensure that the specified source under test is not among its dependencies
update botania proxy to use a proxy map instead of a hardcoded one .
removed unnecessary conditional check for atIndex to ensure atIndex is non - negative to improve code readability and maintainability
increased the timeout duration from 100 milliseconds to 500 milliseconds in the BuckBlockJUnit4ClassRunner to allow for more time for test execution
added AssistContentRequester to TaskOverlayFactoryGo and TaskOverlayGo constructors to enhance content request handling by allowing customization of assist content
updated the method of obtaining the readable witness address to use encode58Check instead of createReadableString to improve code readability and maintainability by using
updated test cases in DefaultMethodRegressionTests . java to improve test coverage and maintainability
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to improve error handling by using a more
added a call to close the loader in the DesktopGeneratorController to ensure proper resource management and prevent potential memory leaks
added a ` clear ( ) ` method to ` ExceptionThrowingTaskletStub ` and corresponding test cases in ` FaultTolerantException
[ hotfix ] [ config ] improve error message when config be not find
updated applyTunerConfigs method signatures to include an extraProperties parameter across multiple classes to enhance functionality by allowing additional properties to be passed
added a set to track progress instances in PinotRealtimeSegmentsManager to ensure that the list of segments are only added when the partition is in
added a check to return null if touchable is disabled to ensure proper handling of disabled touchables
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to verify the behavior
fix npe in abstractcacheallpartitionsrequest when cache config have not be create yet
refactor module installation logic in JSweetTranspiler and add a method to check if the node package is installed to improve code clarity and
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enable monitoring of MBeans and Destroyable components in the application
changed the conditional check from ` if ( inAppBrowser ) ` to ` if ( false ) ` in ` LongClickableSpan . java ` to
use string . equals ( ) . equals ( ) instead of string . equals ( ) .
updated the condition in ` Types . java ` and added new classes ` T6558559a ` and ` T6558559b
updated player position and position messages in WorldEditListener . java for consistency to improve readability and maintainability of player information
[ flink - 24486 ] [ kafka ] shutdown kafka consumer when the executor be shutdown
added a default implementation of the examples ( ) method in Schema . java to enhance the functionality of the Schema class
modified thread interruption logic and added a return statement in AgentRunner . java to ensure proper handling of thread interruption and improve error reporting
[ hotfix ] [ datasource ] remove dataset time column in defaultaggregationloader
removed unnecessary ' & ' operator from shards condition in FacetComponent . java to improve code readability and maintainability
replaced ` LinkerProvider ` with ` CxxPlatforms . getParseTimeDeps ` in ` RustBinaryDescription ` and ` Rust
added ' name ' property to JdbcAuthenticationProperties , JdbcAuthenticationProperties , AbstractLdapProperties , NtlmProperties , and NtlmProperties classes
added debug print statements and modified exception handling in CFGPrinterObserver and IdealGraphPrinterDumpHandler to improve error reporting and ensure proper handling of printer
refactor scan range handling in BaseQueryPlan and add a small scan threshold option in QueryServices to improve code clarity and maintainability by centralizing
updated the format of the return statement in RetryGatewayFilterFactory . java to include routeId and routeId to improve clarity and maintainability of the
replaced calls to redisplay ( ) with callWidget ( REDISPLAY ) in LineReaderImpl . java to improve code readability and maintainability by
replaced ` onOverviewShown ` method with ` showForOverviewIfNeeded ` in ` ActivityControlHelper ` and updated gesture logging in ` WindowTransformSwipe
refactor conditional statements in CheckIndex . java and add a new test for deleting all point documents in TestPointValues . java to improve code read
updated the publish method to use ` updateLastState ` instead of ` true ` in ` ZkController . java ` to ensure that the state
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure consistency in string concatenation for better readability
removed a call to exp . add ( 0 , null ) in SpliteratorCollisions . java to streamline the code by eliminating unnecessary operations
[ java ] add ` ` textcasesensitive ' ' and ` ` exact ' ' for condition . text ( )
replaced ` do ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code readability and maintainability
add query engine . forwardonlyfetchsize ( ) method to queryengine .
http : / / issues . apache . org / jira / browse / amq - 4078 - ignore closedchannelexception
pdfbox - 2576 : initialize pdobjects list with size of beads . size ( )
updated window radius calculation in QuickstepAppTransitionManagerImpl . java to support rounded corners on windows to enhance user experience by allowing rounded corners on windows
replaced ` ShapeDrawable ` with ` View ` and updated background handling in ` DesktopTaskView . java ` to improve visual consistency and maintainability of
updated the instantiation of UpstreamCheckService to include selectorMapper and shenyuRegisterCenterConfig to enhance the functionality of the UpstreamCheckService
[ hotfix ] [ runtime ] remove warn log from abstractsession and abstractsessionmanager
updated ZooKeeperHiveLockManager to return the locks object instead of throwing a LockException to improve error handling by directly returning the locks
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a boolean flag ` containsCustomData ` and modified the MIPmap generation logic in ` FileTextureArrayData . java ` to ensure that
updated string literals in ` DefaultMaskingFormatterTest . java ` and ` DefaultMaskingFormatterTest . java ` to use single quotes to
added selectable property and methods to manage the selection state in the List class to enhance functionality to control the selection behavior when no items are selected
added a check to return false if the value count is zero in LlapArrowBatchRecordReader to ensure proper handling of empty field vectors in the
added file separator expansion functionality to PolicyContext and created a test for file separator expansion in TestPolicyContext to improve code readability and maintainability by
changed the type of ` flatQueries ` and ` expandQueries ` from ` Set ` to ` List ` in ` FieldQuery . java ` to
refactor TLSRestrictions class for improved readability to enhance maintainability and readability of the code
http : / / issues . apache . org / jira / browse / amq - 2179 - fix the issue of kafkamanager . close
updated the ` assertNodeStateProvider ` method to include an ` ignorableNodeValues ` parameter and modified its usage in the ` assertNodeStateProvider
added a lock file to the RocksdbMavenPomCache class to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ test ] fix flaky testhquorumpeer . testhquorumpeer
added a new method ` getResponse ` in ` RestClient ` to retrieve and log the connection to the web service URL to improve error handling and logging
[ hotfix ] [ segment ] use stringarray instead of string [ ] to avoid array copying
updated loginStudent calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to
added null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions when mCurrentItem is not
increased the number of strings from 500 to 100 in TestSpecialOperations . java to increase the number of strings from 500 to 100
remove unused method in wkbattributeio . bytearrayinstream
corrected a typo in the method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve code readability and
added a method to check if a transition is a direct substate in AbstractStateMachine to ensure proper handling of substates during transition transitions
added checks for ` ListMultimap ` and ` SetMultimap ` types in ` MultimapSubject ` and implemented corresponding tests in ` MultimapTest `
added JoinOperation interface to PostJoinOperation class to enhance the functionality of the PostJoinOperation class
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest ` to verify the behavior of the Postg
add a try - catch around the destroydurablesubscribe call in amq5035test
refactor AvaticaDatabaseMetaData class to improve code readability to enhance maintainability and readability of the code
updated MongoDbConnectionProperties and MongoDbConnectionFactory to use DurationCapable annotations for lifeTime , idleTime , and maxWaitTime to improve
removed unnecessary cast to MediaFormatFactory in SdpUtils . java to simplify the code and improve readability
updated ` handleFilters ( ) ` and ` handleDomainChanges ( ) ` methods to return ` appliedFilters ( ) ` instead of ` handleFilters
added a timeout handling feature to the ShuffleHandler class to enable or disable timeouts based on the enabled state
updated the initialization of ` mQuickStepStartingRotation ` to use a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED `
updated logging statements in XPathBuilder . java and added debug logging in XQueryBuilder . java to improve logging clarity and maintainability of the code
updated file path from " . . / data / " to " .. / dataResource . class " in NNDataSet . java to improve
add a new test class EdgeCasesTokenizerTest to validate tokenizer functionality to ensure proper handling of escaped back slash characters in tokens
added validation for the ' atlas ' property in AtlasTmxMapLoader . java to ensure that the map is missing the ' atlas '
remove property placeholdershelper , which be no longer need .
added a call to close the database in BlockchainTest . java and removed unnecessary ReceiveSource instantiation in KafkaTest . java to streamline the code
refactor ` CoreMarkdownNodeRenderer ` to use ` List < String > ` instead of ` String [ ] ` for splitting strings to improve code
fix checkstyle violation in WebServiceInboundGatewayParserTests . java
replaced ImmutableList with List and updated related methods in ProjectableSQLQuery , SQLBindings , and AbstractSQLClause to improve code clarity and maintainability by
added support for OpenJDK VMs in the VirtualMachine class to enhance compatibility with OpenJDK environments
added a keepAlive flag to the baseUrl configuration in ReactorClient . java to ensure proper configuration of the reactor client
replaced hardcoded string " a _ texCoords " with ShaderProgram . POSITION _ ATTRIBUTE in MD5Renderer and ObjLoader to
camel - 13232 : camel - spring - boot - add support for property component in camel context
updated null check for accountCapsule in UnfreezeBalanceActuator . java to improve robustness by preventing potential NullPointerExceptions
updated version number from 0 to 1 in XMPPServer . java to reflect the latest release status
replaced instances of ` t ` with ` t . unannotatedType ( ) ` for consistency to improve code readability and maintainability by
refactor assertions in StorageGroupProcessorTest to improve readability and maintainability of the code to enhance code clarity and maintainability by reducing duplication
updated import statements and added a method to retrieve environments in various configuration classes to improve code clarity and maintainability by using a more descriptive
added a waitbeforestart parameter to FFMpegVideo . java to set the video timeout to 2500
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related classes to simplify the instantiation of the ` Orc
[ hotfix ] [ test ] add test for accessors . listindex ( )
add a method to compile a method that return a framemap instead of a structuredgraph .
updated JUnit imports and annotations in DynamoDbTicketRegistryTests , BaseAuthenticationRequestRiskCalculatorTests , and BaseAuthenticationRequestRiskCalculatorTests
fix a bug where the water block be n ' t show up in the top of the water block .
updated return statements in Directory . java and RAMDirectory . java , and added a new getLockID method in RAMDirectory . java to
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the conditional check for experimental options
add ` ` then ' ' and ` ` then ' ' method to bddassertions
updated variable names from ' hp ' to ' hostField ' in ForwardedRequestCustomizer . java and ForwardedRequestCustomizerTest . java to
updated log level from debug to warn for missing Kubernetes config files to improve logging clarity and provide clearer warnings for missing Kubernet
added handling for canceling files in UploadListActivity and updated upload status handling in UploadListActivity to improve file upload management and enhance user experience by
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to use ` ProviderLoaderListener ` instead of ` ProviderInstaller `
replaced ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor . java ` and ` StreamEnvironmentPostProcessorTests . java `
updated the creation of SelectFromDatabaseChangeLogStatement to use a ColumnConfig with a computed column name to improve clarity and maintainability of the database
hhh - 13232 - fix the issue of pgdialect . getschema ( ) return the current _ schema ( )
[ hotfix ] [ runtime ] fix checkstyle violation in internalpartitionserviceimpl
add isschedulerstarted ( ) method to executionscheduler and add isschedulerstarted ( )
removed the ` toString ( ) ` method from the ` InlineBox ` constructor and added a null check for ` blockParent ` to simplify the code
updated assertion messages in StatisticMap . java for consistency to improve readability and maintainability of the code
updated the default slide end duration from 383 to 500 in TabletSplitToConfirmTimings . java to adjust the slide end duration for better
updated button names in WaveInfoDialog and PlacementFragment to use Core . get ( " waves . random " ) instead of hardcoded strings
updated conditional check to include plotArea in BukkitMain . java to ensure proper handling of owned plots based on plot area
added a test for ` setTouchExplorationEnabled ` in ` ShadowAccessibilityManagerTest ` and refactored listener handling in ` ShadowAccessibility
[ fontbox - 5328 ] fix cmapsubtable . getcharactercodetocharactercodelookup ( ) to use max glyph id .
use getname ( ) instead of getpropertyasstring ( ) . getpropertyasstring ( )
replace instantiation of NPOIFSFileSystem with a call to POIFSFileSystem . create ( big ) to improve code readability and maintainability
added imports for PlotArea and updated return logic in Move . java to ensure proper handling of plot areas based on arguments
updated regex pattern in TestWebHCatE2e . java for version matching in TestWebHCatE2e . java to ensure correct
updated the condition to check if the count is less than 1 in the pickleEvents list to ensure that the count is less than zero to allow for
[ micronaut - 244 ] fix kafka consumer processor to use the client id for the consumer thread
added error handling for execution failure in JavacCompiler to improve robustness by throwing an exception when the execution fails
do n ' t call closeoptions in drawlist . setvisible ( ) if the selected index do n ' t change
camel - 14497 : camel - spring - batch - fix a typo in the header value
added a method ` isAnimationFinished ` to check if the animation is finished to ensure that the animation finishes within a specified frame duration
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` to the ` LoginMockMvcTests ` class to ensure
added null check for otherUrl in TimeLineCursorAdapter and updated the refreshing text in HomeFragment to ensure proper handling of null values and improve
add space space to the list of buttons in the list of buttons .
refactor ObjectHashSet class for improved performance to enhance performance and readability of the code
refactor null checks in DataUtilities . java to use Arrays . equals for better readability and maintainability to improve code readability and maintainability
bugfix : do n ' t compare enchanted book with enchanted book ( MC - 12770 )
add a new test class ` AsyncResourceTest ` to validate the functionality of ` asyncGet ` , ` asyncPut ` , and ` asyncPut
rename ` TARGET _ FLAT _ HEADER _ SUFFIX ` to ` TARGET _ USER _ HEADER _ SUFFIX ` and update related references
added debug logging and error handling for sending messages in MailService . java to improve debugging capabilities and provide clearer feedback when sending messages
replaced calls to ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` TaskItem
added unit tests for the ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker . java ` to ensure
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
replaced ArrayList with List in OCFile . java and OCFileListAdapter . java to improve type safety by using a more generic list type
updated the layout index from 1 to 2 in BubbleBarView . java to correct the layout positioning of the view
removed unnecessary import of " org . eclipse . jetty . websocket . util . server . internal . " from JavaxWebSocketConfiguration and JettyWebSocket
change the default value of the S3Request constructor from true to false to ensure that the request is only set when necessary
fix npe in jfxradiobuttonskin . initializecomponents ( ) when timeline be null
[ java ] throw an illegalargumentexception if deweynumber . fromstring ( ) throw an illegalargumentexception
added a static variable ` categorySetString ` and modified the return statement in ` MwVolleyApi . java ` to replace " Category :
updated assertion messages in WebSocketClientTest from " Invalid control status code 1111 " to " Invalid close code 1111 " to ensure consistency in test
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure proper handling
[ hotfix ] [ runtime ] remove duplicate code in PersistentAttributeTransformer . java
pdfbox - 2576 : avoid npe if page labels be not a number
added a new file ` TestPorterStemFilter . java ` to test the ` PorterStemFilter ` functionality to ensure that the ` voc
updated method names from ` postBatchMutate ` to ` postBatchMutateIndispensably ` and modified related calls to include a success flag to
moved test classes from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch .
fix a synchronization issue in chatwindowmanager . chatpanelmanager
removed the ` Sys . touch ( ) ` method from multiple Java files to streamline the code by eliminating unnecessary calls to ` Sys . touch (
updated HgCmdLineInterface and NoOpCmdLineInterface to use " - mardu " instead of " - 0 " and modified untrack
camel - 16335 : netty component should use timer in the endpoint instead of use hashedwheeltimer
added ' final ' keyword to several fields in DirectionalLight , PointLight , SpotLight , and SpotLight classes to enhance immut
replaced direct calls to ` target . getWidth ( ) ` and ` target . getHeight ( ) ` with ` target . getWidth ( ) ` and `
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and corresponding tests to ensure
added a new class ` AnnoFilterTreeSet ` and methods to find annotated and annotated classes in ` ClassFinder ` to enhance annotation handling by
modified the handling of ` newLength ` in ` BytesColumnVector . java ` to maximize the size of ` nextElemLength ` to ensure proper
refactor assertion in WriteBehindMapStoreWithEvictionsTest to use assertTrueEventually for better readability to improve code maintainability
changed the parameter type of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` X
[ ggb - 147 ] add isequal ( ) method to polyfunction and expandtopolyfunction
added a null check for the table before configureing its value to avoid potential NullPointerException when the table is not initialized
added a try - catch block to handle ClassCastException in CustomChangeWrapper . java to handle potential ClassCastException during instantiation
refactor DistBuildConfig and related classes to use DistBuildConfig instead of ConfigPathGetter to improve code readability and maintainability by
do n ' t show export warning for qif and qif export
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests that require a track down and fixes
changed the return type of the ` doJoin ` method from void to boolean and modified the ` doCopyLeft ` method to return a boolean to
removed the getAutodeps ( ) method from JavaLibraryDescription . java to streamline the code by eliminating unnecessary dependencies
updated intent flags in LauncherTimelineCursorAdapter . java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure proper handling of new task
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide a way to check paging order by
updated Maven artifact repository URLs from ` 0 ` to ` 2 ` in ` RepositoryConventionPluginTests . java ` to reflect the correct version of
add a new AffiliationTask class to manage an affiliation from a node to facilitate the creation of an affiliate node in the pubsub cluster
improve error message for invalid taglib uri in taglibraryinfoimpl
changed the access modifier of the buildUserProfileByClassCompleteName method from private to public to allow access to the buildUserProfileByClassCompleteName method
added array handling and refactored the ` doUpdate ` method in ` CacheKey . java ` and ` CacheKeyTest . java ` to
refactor GnomeFileTypeDetector to use FileSystemProvider for file type detection across multiple classes to improve compatibility with Java NIO ' s file
added a call to close the wsSession in TestWsWebSocketContainer . java to ensure proper resource management and prevent potential memory leaks
replaced ` ShadowVirtualDeviceManagerTest ` with ` ShadowVirtualDeviceManager ` and added ` VirtualSensorCallbackDelegate ` and ` VirtualSensorCallbackDelegate
added a check to ensure the context before execution is not removed from the session in HttpSessionSecurityContextRepository to ensure that the session is not removed from
replace ` lch ` with ` loopback ` in ` NetUtil . java ` to improve handling of loopback addresses and point - to -
corrected the spelling of " DEFAULT _ BUF _ SIZE " to " DEFAULT _ BUF _ SIZE " in the Zlib class to
added secure validation and refactored error handling in KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to improve
added a boolean flag ` iconChangeListenerInstalled ` and modified the icon listener management logic to ensure icon changes are only installed when the icon is initialized
added Russian language support to the Language class to support Russian translations in the application
hhh - 13232 - fix typo in basesqmtosqlastconverter
disable state verification for frame state in substrategraphkit
added system property management for Android SDK and resource mode in RobolectricTestRunnerTest . java and implemented system property management in TestUtil . java
added ` org . slf4j . " ` to ` ViewClassLoader ` and corresponding tests in ` ViewClassLoaderTest ` to ensure proper handling of
added a check for " jar " packaging in ChangePackaging . java and implemented a test for removal of the default packaging in Xml . java to
updated file downloading logic to include an extension for " txt " to ensure consistent file extension handling for file downloads
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer
replaced ` setDefaultUnits ` with ` preferredUnits ` in ` JogService ` and updated related methods to use ` setPreferredUnits ` instead of
updated date handling in DatePatternConverterTest to use UTC timezone and adjusted date formatting to improve accuracy of date formatting and ensure accurate date formatting
reformatted the return statement in Terminator . java to improve code readability and maintainability
updated error messages for file URIs and improved error handling in FileSystem and LocalFileSystem classes to enhance clarity of error messages and provide clearer context for
[ jabref ] use executorservice . submit ( ) instead of executorservice . schedule ( )
updated connection handling in FtpReconnectAttemptServerStoppedIT and added a method to count active sessions in FtpEmbeddedService to improve connection management and
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve performance and maintainability of the code
added a ` ignore ` method to multiple log classes to track if a throwable is ignored to enhance logging capabilities by providing a clearer warning message for
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when runningTaskView is null
removed unnecessary type casting for getDamage ( ) in BukkitWorld . java to simplify code and improve readability
removed the call to ` GraphicsUtil . cleanImage ( img ) ` in ` PanelManager . java ` to streamline image cleanup process by eliminating
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing MMapDirectory and its default max chunk size to enable the use of unmap
added null check for cleanUpColor in PdfCleanUpProcessor to avoid potential NullPointerExceptions when creating BaseColor instances
updated the parameter in the assertQueryEquals method from " field1 _ maxDocFreq = 1000 " to " field1 _ s maxDocFreq
updated the implementation of ExtendedOperatingSystemMXBeanImpl to improve performance and performance of operating system management
added a new method ` installLeftCommands ( ) ` to install left commands in the ` SideMenuBar ` class to enable installation of left commands in
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity ` to condition
added support for SybaseDatabase in the DropPrimaryKeyGenerator class to ensure compatibility with Sybase databases
refactor Client class to improve code readability to enhance maintainability and readability of the code
[ java ] reset lastrecordingposition in sequenceragent when there be no leader .
replaced invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and added shouldDelayChildPressedOrFocusedIcon
added a return statement to the NearCachedClientMapProxy class to improve code readability and maintainability
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
added error handling to the shutdownHttpServer method in ListenHTTP . java to improve robustness by handling potential exceptions during server startup
camel - 13224 : fix the issue of camel - s3 - stream - upload - s3 - s3 - stream - upload -
[ hotfix ] [ runtime ] use parameter _ tmid instead of parameter _ tmid in webruntimemonitor
drop key that do n ' t exist in 2.1 . 7 version of the db
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to append a password to ensure that the password
added a maxEnergyLimit variable and updated its assignment logic in VMActuator . java to use it to improve efficiency by allowing dynamic energy limits
added maxInMemorySize property and related getter and setter methods in HttpClientProperties and updated the webClientPlugin constructor to use it in HttpClientPluginConfiguration
refactor Cache class methods for improved performance to enhance performance and readability of the code
added new CucumberTest , StepDefinitions , and StepDefinitions classes for testing Cucumber tests to enable testing of Cucumber and Step
added error handling for double parsing in TypeJsonUtils . java and updated test cases in TestArrayOperators . java to improve error handling and ensure
removed redundant initialization of byte arrays in Utf8StringBuilderTest . java to streamline code and improve readability
added a check for parameter sets before appending to the string in Params . java to ensure that parameters are only processed when necessary
camel - 13232 : fixed the issue that the circuitbreaker can not be configure on the classpath if there be more than one output
updated assertions in TestIndexWriterExceptions to use a maximum buffered document configuration to ensure accurate accuracy of document frequency validation
replaced instances of ` String ` with ` Sha1HashCode ` in multiple files to improve code clarity and maintainability by using a more descriptive
removed unused enumValue and longValue methods from AsmRuntime . java to streamline code by eliminating unused methods
added new biome tags for MANGROVE _ SWAMP , DEEP _ DARK , and DEEP _ DARK to For
[ java ] use a separate thread pool for image loading in papplet .
refactor BaseTableUpsertMetadataManager to use protected fields instead of private fields to improve encapsulation and maintainability of the preloadSegments method
updated Japanese translations from " \ u0648 \ u0631 " to " \ u0623 \ u0631 " in multiple files to
replace ` getImage ( ) . equals ( vid ) . equals ( vn ) ` with ` hasImageEqualTo ( vid ) ` to
camel - 14497 : camel - jbang - add -- repos option to run command
added handling for NaN scores in CrawlDbReader to improve accuracy of score retrieval based on the value ' s score
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure the file is deleted after tests are completed
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and modified focus handling in ` Find
[ hotfix ] [ checkpoint ] make checkpointscleaner thread - safe
added a new file ` XPathWhiteSpaceTest . java ` to test XML schema schema creation to ensure that XPathWhiteSpaceTest correctly handles XML schema creation and
fix rollback not override trie log layer in world state
refactor FilledNewArrayInstruction class for improved readability to enhance maintainability and readability of the code
[ hotfix ] [ test ] increase timeout for simplenetworktest
updated the method to check if the parentPath ends with a slash instead of a substring to ensure proper handling of the parentPath string
added a print statement to indicate that the skin file loading fails to improve error handling and provide clearer feedback on the failure of the skin file
added markDirty ( ) and isValid ( ) methods to LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to enhance the
added a new static final Result UNDEFINED constant and updated the return statement in TestStep to use it to improve code readability and maintainability by
testtransactioncallback : use nullpointerexception instead of persistenceexception in testtransactioncallback
[ hotfix ] fix uploadjobmultipartoperation to not use asyncjoboperation
[ hotfix ] fix jobschedulerstoreimpl . recover ( ) to throw ioexception instead of ioexception .
add option to ignore summary level in verticalnodeviewlayoutstrategy .
replaced the volatile variable ` pos ` with ` sizeMask ` and added a new method ` nextPowTwo ` in ` DataOutput2 ` to
added @ Ignore annotation to ChaosMonkeySafeLeaderTest , RecoveryZkTest , and ChaosMonkeySafeLeaderTest to temporarily disable
updated variable names from ' targets ' to ' endpoints ' for clarity and consistency to improve code readability and maintainability by using a more descript
[ hotfix ] [ file ] fix typo in filemanager
updated TransformFunctionType and TransformFunctionFactory to include new transformation function types to enhance clarity and maintainability of transformation functions
add javadoc for variableelement . getname ( ) and variableelement . getnextelement ( )
updated RFC3280 format from " RFC3280 " to " RFC5280 " in multiple Java files to ensure consistency in formatting across the code
updated the version number from " 2.117 . 3 " to " 2.117 . 4 " in Recaf . java and changed type casting in
replaced the use of LruCache with a for - each loop in ListActivity . java and updated selectedItems in NoteAdapter . java to improve
removed unnecessary else blocks in DirectUpdateHandler2 . java to improve code readability and maintainability
updated ConfigFileApplicationListener to use ResourceUtils for URL path handling and added a new test for absolute resource defaults to improve resource management and ensure correct
updated PreviewPositionHelper to accept a Context parameter and modified related calculations in TaskViewSimulator and TaskThumbnailView to enhance flexibility in handling multi -
[ java ] remove redundant code in election . newleadershipterm ( )
pdfbox - 4841 : add test for pmd coverage test
refactor byte array handling in ByteArrayInputStream and add a new Skip class for testing to improve readability and maintainability of the code
simplified the condition for showing the changelog in UpdaterTask . java to improve code readability and maintainability
changed the access modifier of MAX _ HEADERS from final static to public in HeadersMessage . java and added a conditional check in Peer . java to
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to include the " rt . jar "
[ java ] remove duplicate deframer from abstracthandshakehandler
[ hotfix ] make sure heterogeneous config property be set to true .
added a conditional check for committed status before sending an error in HttpChannel . java to ensure that the response is only sent when the response is committed
updated conditions in HttpSession . java to use bounds checking for hold and lastPoll to improve code readability and maintainability
changed the fade - out effect from true to false in HomeGestureTutorialController and added new feature flags in SwipeUpGestureTutor
add name to prefab format and serializer to avoid crash .
replaced the creation of ScimGroupBootstrap with a direct addition of " internal . superuser " in LdapMockMvcTests . java to streamline
added a validation check for a non - existent account transfer amount in TransferActuator to ensure that the minimum amount is non - existent
updated the index calculation in FileResolverTestBase . java to use File . separator instead of a hardcoded ' / ' to ensure consistent handling of
do n ' t show the help panel if there ' s no error message
updated description handling in GpsMainActivity and modified service intent in AnnotationViewFragment to use EventBus instead of ContextCompat to improve user experience by
updated assertions in JsoupNonVisualRegressionTest to check for more than 3 pages before verifying the number of pages to ensure that the document
use androidnativebufferallocator instead of androidbufferallocator to avoid memory leak
added checks for flag names starting with " ! " in Main . java and improved flag handling in PrimaryItem . java to ensure proper handling of flag
added NOPMD comment to fileRS assignment in JDBCHistoryCache . java to indicate that the result set is no longer needed
use equal instead of equals ( ) for reward item . use _ grant _ select _ reward .
refactor QueuePriorityTest to use a list of elements and add a toString method in PriorityElement to improve code readability and maintainability by using
[ hotfix ] remove componentcontext . initcomponentslifecycle ( ) from affinityapitest
added a null check for the command in Main . java and modified the argument handling logic to include OPTIONS . HELP to improve command handling and
[ hotfix ] [ runtime ] make lightoutputstream size configurable .
changed the visibility modifier of the Scanned class from static to public to allow access to the Scanned class from other packages
modified ClassWriter . java to include a showBlank flag and added a new class T8032819 . java for testing class fields to enhance
added a check for the length of the sn parameter in the Person class to ensure proper validation of the sn parameter in the Person class
added null check for file extension in VirtualFile . java to prevent potential NullPointerExceptions when checking extension validity
change return statement from return to continue in ContactRightButtonMenu . java to ensure proper processing of the right button menu
[ java ] fix slotsharinggroupassignment . getslotsforjid ( ) to return a slot if it be cancel .
simplified the calculation of the ' si ' variable in InstallShortcutReceiver . java to improve code readability and maintainability
refactor PlainSocketImpl to use a delegate object and ensure proper resource management to ensure proper resource management and prevent potential memory leaks
added functionality to clear removed items from the media details in BookmarkListRootFragment and MediaDetailPagerFragment to enhance user experience by allowing users to
updated log message from " center of element " to " in - view center point " to clarify the purpose of the action commands from the element '
added a new file ` bug4865918 . java ` that implements a scroll bar with a scroll bar to demonstrate the behavior of the scrollbar
replace VelocityEngine with Velocity in ADKerberosOperationHandler . java to ensure proper initialization of the VelocityEngine
added group triggers functionality to the quest command to enhance user experience by providing clearer feedback when the quest group does not exist
fix bug where you can not select gnucash account file .
added Lombok ' s @ ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enhance debugging capabilities by using Lombok ' s
updated the configuration URI in CloudService to use a constant for configuration URI to improve code readability and maintainability by using a more descriptive
removed unused view components and JScrollPane from BrowserPanel . java to streamline the view management and improve user experience
updated key codes in LwjglInput , ParticleEditor , Layout , and TWL classes to use a new constant for forward events
added a conditional check for indexMimeTypeParts in MoreIndexingFilter to ensure proper handling of MIME type parts in the indexing process
added a author pattern for comment processing in JSDoc . java to improve code readability and maintainability by reducing duplication
updated metric constants in MetricsConstant . java to include CREATE _ TOTAL _ TABLES , CREATE _ TOTAL _ PARTITIONS , and DELETE
updated HiveDatabaseSchema and HiveSchemaFactory to use DrillHiveMetaStoreClient and SchemaConfig instead of a List for table list to improve
added a queryParams parameter to the oauth2LoginLinks method and modified the oauth2LoginLinks method to include an error check to enhance error handling by
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al - Qura Calendar " to
added support for Firefox browser in WebAudioWrapper to ensure compatibility with Firefox browsers
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` and removed the default constructor in ` InterceptorConstants ` to streamline interceptor
added a default column to the table creation in TestCompatibility . java and updated the database version in TestCompatibility . java to ensure compatibility with the default
refactor methods in WriterRecordBatch and StreamingAggTemplate for clarity and consistency to improve code readability and maintainability
[ hotfix ] [ runtime ] use timeout instead of allocationtimeout in executiongraph
added a boolean flag ` hasFrom ` to control the behavior of SQL statements in ` Delete ` , ` DeleteDeParser ` , and ` Delete
replace ` isSuccess ` with ` isMultiStatus ` in ` SynchronizeFolderOperation . java ` to improve handling of multi - status requests and
refactor applicable test handling to use a new utility method ` applicableListTests ` to improve code readability and maintainability by encapsulating
updated regex pattern in LogAnalyser . java to include additional characters in the log line to ensure correct formatting of the log line
camel - 14497 : camel - jupiter - add google cloud integration test for camel - jupiter
fixed - redissonsearch . value ( ) method should use maxexclusive instead of minexclusive
[ cc ] add option for change and no license to the list
added a null check for ` ifcRoot . getGlobalId ( ) ` before adding it to the guidIndex to avoid potential NullPointerExceptions
updated comparison strategy comparison from ` equals ` to ` areEqual ` in ` OptionalAssert . java ` to ensure accurate comparison of values based on comparison
do n ' t replace inline inline with inline style in paragraph
added a new file TestArrayCopyToFromObject . java to test array copying to an object to ensure that the array is copied to an object
updated string inserts in ` BuckPythonProgram . java ` to use ` Escaper . escapeAsPythonString ` instead of ` \ " "
[ java ] fix checkstyle violation in ajp / nio / ajp / ajp
add a new method ` findFiles ` to the ` CraftingHelper ` class and deprecate it in favor of ` visitAllFiles `
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable test cases related to HIVE - 22621
added null check for exception before invoking doRequest ( ) in TestInternalInputBuffer . java to avoid potential NullPointerException during request processing
refactor autoloadCall method to include a locking mechanism for class loading to improve thread safety and maintainability of the code
updated the method ` getServerVersionEqualOrGreater ` in ` CustomPlaybackOverlayFragment . java ` and ` PlaybackController . java ` to
replaced instances of " localhost " with " localhost " in multiple files to improve clarity and maintainability of the code
added a boolean flag ` jsr250AttributeFound ` and modified return logic in ` Jsr250Voter . java ` to
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability
hive - 11818 : hiveserver2 : add support for hive . server2 . proxy . user and hive . server2 . proxy .
camel - 16225 : add snappy compression codec to hdfsproducer
added a sleep delay of 1000 milliseconds in HttpClientTest . java to improve test reliability by allowing more time for testing
fix xssfcell . setcelltype ( Cell . CELL _ TYPE _ BLANK ) and xssfsheet .
updated font size calculation and added width and height formatting in GlyphLayout . java and BitmapFontTest . java to improve font rendering accuracy and ensure correct
[ istio ] fix istio integration test
replaced ` ReportPlaybackStartAsync ` with ` reportPlaybackManager ( ) . reportPlaybackStart ` in ` PlaybackController . java ` and `
[ hotfix ] [ runtime ] close inputstream in simpleauthority . load ( )
[ hotfix ] fix maploader eviction on initial load
removed unnecessary bitwise operations from LENGTH _ BIT return statements to simplify code and improve readability
[ dspace ] add read policy to fix default policy
refactor CompositeFont initialization to use ConcurrentHashMap for improved performance to enhance memory management and prevent potential memory leaks
updated the initialization of prefHeight in Tree . java to initialize prefHeight to zero instead of using getHeight ( ) to improve code readability and maintain
[ dmn ] fix validation error message for dmn model
removed unused imports and updated the isVacant method signature in multiple classes to streamline code and improve readability
changed access modifier of finishRunningRecentsAnimation method from private to public and updated execution method calls to use MAIN _ EXECUTOR to
added null checks for Node ID in ElementFactoryImpl and improved edge type handling in ImportContainerImpl to enhance robustness by preventing NullPointerExceptions and
[ flink - 18286 ] [ runtime ] fix potential npe in fbfnclientcache and fnapicontrolclient
updated the session creation method in BinFiles . java and added a new test case in TestMergeContent . java to ensure proper handling of flowfiles
refactor tile retrieval logic in Teams . java to use a loop for loops to improve code readability and maintainability by centralizing the
added a check to skip copying content - length in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateCopyHeaderFilter to ensure proper
updated the handling of literal values in Java2TypeScriptTranslator and modified the transpile method in SyntaxTests to improve type safety and ensure correct
updated the number of channels in the FilterFactory and related components from 2 to 1 and adjusted sample sizes in ChannelizerViewer and PolyphaseChannel
add - allregions command to Canary . getallregions ( )
[ hotfix ] [ cassandra ] remove node . environment from cassandra connector
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure the order index is properly resetting the cursor position
added minimum size constraints to CallDialog and adjusted frame dimensions in OneToOneCallPanel to ensure proper handling of frame sizes
fix loss of state information during world gen
refactor testhttpmirrorserver to use junit . framework . testsetup instead of junit setup
added null checks for KerberosPrincipalEntity and removed unnecessary imports from KerberosPrincipalEntity to improve robustness by preventing potential NullPointerExceptions
removed the boolean parameter from the getTableSnapshot method call in StatsOptimizer . java to simplify the method call by removing unnecessary parameter
[ java ] catch throwable instead of integer overflow in apr . poll . error
updated the licenseKey error message from " Service & Apis " to " Monetization setup " in AndroidGradleBuilder . java to clarify
updated the method for creating ` FileTranscodeVirtualFolder ` from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNA
[ drools - 132 ] add support for ` ` boot - inf . classes . ' ' package name
added an assumption to the CheckIndexTest class based on the Runtime version to ensure that the test is only executed when the version is 19
removed the ` findTask ` parameter from the ` assignTargetsForSplitScreen ` method and updated its usage in ` RemoteTargetGluer ` to
refactor LeaderLatch class to improve code organization to enhance maintainability and readability of the code
added methods to initialize ZKK parameters in SolidityNodeHttpApiService to ensure proper initialization of ZKK parameters in the application
refactored confidence handling in ` TransactionConfidence ` and ` TransactionConfidence ` classes to use ` ListenableFuture < Transaction > ` instead of ` 
updated variable names from longtitude to longitude in CodenameOneImplementation and Location classes to improve clarity and consistency in naming conventions
initialize platformName to " ios " in JavaSEPort . java to ensure platformName is initialized with " ios "
fix typo in pageeditclient javadoc
fix checkstyle issue in graphics2d . java
refactor CreateVisibleSignature class implementation to improve code readability and maintainability
added a try - catch block around the ` nextOutgoing ` method call in ` AbstractExtension . java ` to handle potential exceptions during write operations
replaced the try - catch block with a privileged action in ContextHandler . java to improve security by avoiding unnecessary try - catch blocks
added logic to retrieve and set parent of feed categories in CategoryREST . java to ensure the parent of all feed categories are set to null
updated the title in ContributionManagerDialog to use a more descriptive title string to improve user experience by providing a more descriptive title
added a new ` vwap ` field and its getter method to the ` Ticker ` class to enhance the functionality of the ` Ticker
added a ` noWidgetsView ` parameter to the ` SearchAndRecommendationsScrollController ` class and modified the ` WidgetsFullSheet `
add a render graph api to the gsoc module
added a color setting for the primary theme in NCFirebaseMessagingService to ensure that the application reflects the current theme ' s primary theme
updated ShadowUsbManagerTest . java file to improve test coverage for ShadowUsbManager functionality
updated variable names from ` trainingPercentage ` to ` evaluationPercentage ` in ` AbstractDifferenceRecommenderEvaluator ` , ` AverageAbsoluteDifferenceRecommenderEvaluator
added a call to ` this . selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is properly updated
updated bounds calculation in AndroidGraphics . java to use Math . max for maximum stroke width to ensure accurate rendering of stroke dimensions
replaced HashMap with LinkedHashMap in multiple Java files to improve performance and maintainability of the code
replaced ` nativeClosureManager ` with ` closurePool ` in ` NativeClosureFactory ` to streamline closure management and improve code clarity
migrate routetest to junit 5 ( # 154 )
added new files ` WebsocketIngressIntegratedBootstrap . java ` and ` WebsocketPluginTest . java ` to implement and test the WebSocket
[ dsm ] remove unused code in abstractimportmetadatasourceservice . getservicebyname ( )
refactor authentication comparison logic into a separate method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by centralizing
added a check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to ensure
refactor code to use a local variable ` callNodeType ` instead of ` callNode . getType ( ) ` to improve code readability and maintain
added @ Insecure annotation to MessageBuffer and updated MessageBuffer to use it to enhance security by allowing access to the MessageBuffer class
added new configuration variables for Hive configuration in HiveConf . java to enhance configuration options for various Hive configurations
initialize scopes and policies in ResourceSet and add null check in DefaultResourceSetService to ensure proper handling of null policies in the service
updated MultiReader to include an additional parameter for decrefOnClose and readerFinishedListeners to enhance flexibility in handling reader - finished events
refactored multiple socket channel classes to improve code organization to enhance maintainability and readability of the codebase
unignoring a test that fail in 2 . 49 http : / / bit . ly / 1jkt4ae
updated method signatures in Gson classes to use ' final ' instead of ' $ Gson $ Types ' to improve code readability and maintainability by using
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Values in Int2IntHashMap . java
added a duration parameter to the FlipTransition constructor and updated motion creation logic to use it to improve flexibility in handling different background color values
removed trace logging for subsAreValidForStreaming in DLNAResource . java to streamline the logic for setting subs validity
updated major and minor version numbers in ForgeVersion . java to ensure compatibility with newer versioning features
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages based on Java version to improve logging clarity for
added java 16 and java 16 pre - processor to parser configuration
updated padding settings for replies in ExpansionViewHelper to handle cases where replies size is more than one replies to ensure correct padding behavior based on the
[ hotfix ] [ nodeengine - v3 - 9 ] fix failure in partitionprimaryreplicaalalientropytask
added metadata handling in SeedUrl , SeedResource , and SeedResource classes to provide a way to retrieve and write metadata to the seed
added a null check for the declaration before creating a Pattern instance to avoid potential NullPointerException when the declaration is null
refactor TestCoprocessorWhitelistMasterObserver class to improve test coverage to enhance code readability and maintainability
fix annotationvalidatormanager to use package name instead of proxy . getname ( ) .
updated assertions in IterableTest to use ` ( Object ) null ` instead of ` null ` for ` Iterable < Object > ` to improve type safety
added stream methods to MapIterable , PrimitiveObjectMap , and PrimitiveObjectMap classes , and created a corresponding test case in MapIterableTestCase to enhance
clone the notifInfo object in DiagnosticCommandImpl . java to ensure proper cloning of the notifInfo object
refactor command key comparison logic in AppW . java to use a loop for better readability to improve code readability and maintainability by reducing
refactor AEADBlockCipher class to improve code organization to enhance maintainability and readability of the code
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap ` classes
updated the default resource mode from best to legacy in PackageResourceTable and changed the default resource mode from best to legacy in RobolectricTestRunner
added a conditional check for ` ulSize ` and ` ulPos ` in ` TrueTypeFont . java ` to ensure ` ulSize ` and
updated SignPlugin constructor to accept readers as a parameter and modified related method signatures to include a ServerCodecConfigurer parameter to enhance functionality by allowing readers to
refactor Int2ObjectCache class implementation to improve performance and readability of the code
added validation check for MavenDeployer in StandardMavenAuthenticationProvider to ensure proper handling of Maven deployments in the authentication process
refactor AudioNode class to improve code readability to enhance maintainability and readability of the code
added SSL context initialization and improved exception handling in LinkyHandlerFactory and EnedisHttpApi to enhance SSL context management and improve error logging for
updated HiveFunctionRegistry to include OracleSqlOperatorTable and OracleSqlOperatorTable for improved SQL operator management to enhance code clarity and maintainability by using
[ java ] add ` ` xid ' ' and ` ` jmsconnectors ' ' to object name string
updated the method signature of ` getBuildTargetForAlias ` to use ` possiblyFlavoredAlias ` instead of ` alias ` to ensure correct alias
[ olingo2 ] handle empty odata feed in olingo2consumer
added equivalent version retrieval for Hive versions in MetaStoreSchemaInfo . java to ensure compatibility with the latest Hive versions in the database
vm : do n ' t expunge expunge if vm do n ' t have expunge
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
updated method calls to use getNoteTitle for improved clarity and consistency to enhance code readability and maintainability by using a more descriptive method
updated GoogleAuthUserConfigTable to use " nvarchar / int4 / int4 / int4 / int4 / int4 / int4 /
replaced ` editor . commit ( ) ` with ` editor . apply ( ) ` for consistency across multiple classes to improve code readability and maintainability
added a TestIdleListener to the StandardSession constructor and implemented it in AsyncTimeoutTest . java to enable testing of idle state during test execution
updated the formatting of the testBigQueryTable string to include the TEST _ ID to improve readability and maintainability of the testBigQueryTable
added background resources to the icon in HotseatPredictionController and reset the icon in BubbleTextView to ensure the icon reflects the predicted icon ' s
[ hotfix ] fix typo in mondrianproperties . getflushafterquery
[ native ] add test for native system query execution
updated the method to retrieve active features in LIMEExplanation and added a test for active features in LIMEColumnarTest to ensure accurate retrieval of
added a ` args ` parameter to the ` AppleSimulatorController ` and ` InstallCommand ` classes , and updated related test cases to enhance command execution
replaced direct calls to ` getArea ( ) . getAbsolutePosition ( ) ` with a local variable ` getArea ( ) ` to improve code
added a condition to check if the pipeline state is available in ContainerBase and StandardContext classes to ensure that the pipeline is available before proceeding
added a method to set the clip to outline in QsbWidgetHostView to enhance the visual appearance of the QSB background
added flag conversion progress logging in SQLManager and modified split logic in BlockTypeListFlag and BlockTypeListFlag classes to improve flag conversion accuracy and
use gl _ depthfunc in floattextrenderer if not occluded
rename libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ lib
[ hotfix ] [ jdbc ] make jdbcaggregationrepository # getpropagationbehavior configurable .
danielwagnerhall : add support for l1 / l2 regularization in layervalidation
added exception handling to the readWrite ( ) method and modified the readWrite ( ) method to throw exceptions to improve robustness by catching exceptions
changed the visibility of the colorStack variable from static to instance variable to improve code readability and maintainability
changed return values from false to true in getMappedStatement and hasStatement methods to ensure proper handling of mapped statements in the configuration
updated the method to convert the currency identifier to lowercase to ensure consistent handling of currency names in the depth retrieval process
[ hotfix ] [ test ] fix unit test for channelstate . getmqpublishvalue
remove unused ` versionedhash ` parameter from enginepayloadparameter
set trigger price to an empty string in MutableOfferView to ensure proper handling of trigger prices in the model
do n ' t try to edit student feedback submission if it ' s not already register
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 16464 hstore do n ' t log debug message if there be no result
fix issue with entitybeanstate . getchangedproperties ( ) and entitybeanstate . getchangedproperties ( )
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods to the ` FormAuthenticator ` class to control the behavior of the
added new methods for setting layer types , layer types , and paint in ShadowRenderNode . java to enhance functionality for setting layer types and paints
replaced specific imports with wildcard imports and added a method to hide the JPopupMenu in LWChoicePeer . java to improve code readability and
removed redundant assignment of ` insert ` in ` StressProfile . java ` to streamline code and improve readability
replaced instances of ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` across multiple files to
fix npe in mockservereventlog when requestmatcher be null
added warning log for properties file loading failure in DefaultEnvironment . java to provide clearer warning messages when unable to load properties
use try - with - resources to prevent resource leak
added a condition to check if the nic supportsMulticast ( ) and isUp ( ) in the loopback condition to ensure that the nic
updated the constructor of sqlCommand to include a length parameter to ensure proper handling of command lengths
removed redundant calls to setLatestConsumeTime and setLatestConsumeFreeTime for energy in UnDelegateResourceActuator and BandwidthProcessor to stream
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and updated its usage in the ` SessionManagementConfigurer ` class
updated the error message in FailedSerializationError to include the empty index and known labels to improve clarity of error messages for better clarity
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` containsKeys ` in the ` maps ` api
added a new interface ` JDBC4TemporaryPreparedStatementMethods ` and updated method calls in ` JdbcProxyGenerator . java ` to utilize it to
added a static method ` ensure ` to ` ServerWebSocketContainer ` and updated ` DirectUpgradeTest ` to use ` Handler ` instead of ` Context
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to improve performance by using ` ImmutableListMultimap ` instead of
do n ' t create a new point2d . float if no initial point be available
replaced instances of ` MethodHook [ ] ` with ` MethodHook . EMPTY ` in ` Method . java ` and updated ` hooks ` initialization to
added a grantAccess flag to the MockAuthenticationManager constructor and updated authentication return logic to ensure that the authentication is granted to prevent unauthorized access to the
updated methods in JobListener , SimpleJob , CompositeJobListener , and JobListenerSupport to accept JobExecution as a parameter to enhance functionality by allowing
added a check for ` file . canExecute ( ) ` in ` SharedLibraryLoader . java ` to ensure that only writable files are written to
[ hotfix ] [ runtime ] add hastimeseriesquerylanguage ( ) method to timeseriesquery
[ hotfix ] fix typo in resultcollector and saveservice
added new constants for BATTERY _ LEVEL , TIME _ WITH _ LEVEL , TIME _ WITH _ OFFSET , and PROFILE _ NAME
use map instead of hashtable in searchexpression . applyrule ( )
rename ` ` movedobject ' ' to ` ` absolutescreenlocateable ' '
updated the ` JoglGraphics ` and ` ProjectiveTextureTest ` classes to use ` Format . RGB565 ` and ` TextureFilter .
refactor setResourceToDelegate method to return a File object instead of void to ensure the output resource is writable before proceeding
camel - 14497 : camel - jbang - fix camel - jbang by resolve property pattern for intercept .
updated the condition to check if the last attempt time is greater than or equal to the last attempt time in ActionScheduler . java to ensure that the
updated the ` dbg _ zip ` path to include a temporary directory and added a null check for the ` debug _ log ` variable to ensure
remove worldrendererimpl from renderingdebugconfig and add notification overlay .
replace gate assignment with resetGate ( ) method in BlockGenericPipe and add a resetGate ( ) method in Pipe to improve code readability and
updated TestSupplementary . java to use Locale . getDefault ( ) for setting the default locale to ensure proper locale management and prevent potential memory leaks
updated team color value from 0.08 f to 0.08 f in Team . java to ensure the team has a correct color value of 0.08 f
refactor ` activeMatchedStates ` from ` HashSet ` to ` Collection ` and use ` ArrayList ` instead of ` HashSet ` and ` HashSet `
updated the condition to check for null and empty annotations in SoftAsserts . java to improve code readability and maintainability
updated error handling in StorageResources and added exception handling in StoragePluginRegistryImpl to improve error reporting and provide clearer feedback for invalid JSON errors
replace calls to ` ReportUtils . report ` with ` toCsvFile ` in ` CallTreePrinter . java ` to improve code readability and
added null checks for ` note ` and ` mActivity ` before accessing its properties to prevent potential NullPointerExceptions when ` note ` is null
added peakTasks variable and modified loaded calculation logic in AssetManager . java to ensure correct loading behavior based on peak tasks
[ java ] enable native event for firefox driver on window
added new constant names for score and fetch interval in Injector . java and updated the CrawlDatum instantiation to use it to improve clarity and functionality
updated imports from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in ScimExternalGroups
added a method ` isShareSchema ( ) ` to the ` CoreContainer ` class and a corresponding test in ` TestCoreContainer ` to enhance
updated ` sizeInBytes ( ) ` method calls to include ` true ` parameter across multiple classes to ensure accurate size calculation and improve readability of
replaced assertEquals statements with assertNull for version1 _ 2 in VersioningTest . java to simplify assertion logic and improve readability
updated SQL queries in Field . java and AbstractJdbc2DatabaseMetaData . java , and added test cases in DatabaseMetaDataTest . java to ensure correct handling
[ java ] do n ' t set result to false if there be no leader .
removed the ` buildMediaType ` method from ` WebClientPlugin ` to streamline the code by eliminating unused imports
replaced occurrences of ` fillUsingLengthPrefix ` with ` fillSlice ` in multiple classes to improve clarity and consistency in method naming conventions
added a check for compacted base in AcidUtils and implemented a test for compaction in TestCleaner to ensure correct handling of compacted base
ptable : fix nullpointerexception when use non - encoded column encoding
added new classes ` PojoProducersCustomized ` and ` RestProducersCutomized ` and ` RestProducersCutomized `
updated cache configuration keys from " cache " to " CACHE _ SECTION _ NAME " in ArtifactCacheBuckConfig . java to ensure consistency in
removed redundant registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to streamline serialization process by
add a new wooden slab to the OreDictionary ' s slab in the replacements map to ensure the correct wooden slab is used in the
refactor multiple session factory classes for improved consistency to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` and removed ` SourcePathResolver
bump version to 3.2 . 2 and update version to 3.2 . 0
hhh - 13232 - fix test failure in denormalizedtablephysicalincludedtableconstrainttest
corrected the calculation of ' centerX ' and ' centerY ' in the spriteBatch draw method call to ensure correct positioning of the texture
updated the x - coordinate calculation in PlayerFunctions . java and added a toString method in PlotId . java and WorldGuardListener . java to improve
added a deprecated version constant LUCENE _ 8 _ 5 _ 0 to the Version class to indicate that the version is outdated and should not
updated print statement formatting in SSLSocketImpl . java to improve readability and maintainability of the code
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing of signed
refactor dependency type handling in CoNLLUOutputter and introduce a new DependenciesType enum in SemanticGraphCoreAnnotations to improve code clarity and
refactor ` NoSuchBuildTargetException ` and ` ParseContext ` classes to improve code readability and maintainability to enhance maintainability and maintainability by
updated test method from ` testFromMain ( ) ` to ` test ( ) ` in ` MyChild . java ` to ensure correct usage of
updated the initialization of ` configBlocks ` from ` Block . blocksList . length ` to ` 256 ` and modified the loop iteration to use a
updated logging statements to use ` Bukkit . getVersion ( ) ` instead of ` OfflineUUIDWrapper ` for compatibility checks to improve code readability and
updated SQL statement escaping logic in AbstractSQLChange and added a test for escaping PostgresQuestionmarkOperators in AbstractSQLChangeTest to ensure correct
added new methods ` ofAll ` and ` withAll ` in ` MutableBagFactory ` and ` MutableBagFactoryImpl ` classes to enhance functionality
refactor buildnavandpdfbody and buildnavandpdfbody to support html escape code
fix the issue that nhc mqttconnection2 . connect ( ) do n ' t throw an exception if there be an error
replaced direct retrieval of ChangeSet with a null check for the root change log to improve robustness by preventing potential NullPointerExceptions
do n ' t create new methodresult in staticmethodinterceptor . output ( ) so that it do n ' t use new methodresult
added HiveMetaStoreClient to drop databases in TestHiveMetaStorePartitionSpecs . java and logging in TestObjectStore . java to
added a new parameter " order _ currency " to the ` BithumbAuthenticated ` and ` BithumbAccountServiceRaw ` classes to support order currency
remove thymeleaf webconfig , which be no longer need
updated method return type checks to use ` getReturns ( ) . isVoid ( ) ` instead of ` getReturnType ( ) . getFullyQualifiedName
added a new method ` listYamls ` to retrieve YAML configurations by ID to enhance functionality by allowing users to list YAMLs based on the
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enhance encapsulation
[ java ] use a lambda expression instead of an anonymous inner class .
added unit tests for ` addingToList ` and ` PersonWithAList ` methods in ` MongoTemplateTests ` and created a new class `
update sync applet panel size to use width / height instead of width / height
replaced direct toolbar visibility setting with a Handler to improve responsiveness to the user interface
[ java ] do n ' t unpack first page reader when there be no overlap .
do n ' t try to save a password if it ' s not run on the router
added new fields ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` , and ` isCharacterEncodingSet ` to
added a warning check for assignment side effects in GroupDialog to ensure proper handling of assignments in the resulting group
refactor JSON and JSONObjectConvertor classes to improve code organization to enhance maintainability and readability of the code
corrected the spelling of " maxWidthWithMargin " to " maxWidthWithMargin " in the conditional statement to improve code readability and maintainability
[ bouncycastle ] fix npe in jwttokenciphersigningpublickeyendpoint . fetchpublickey ( )
added mimetype checking functionality in Basic . java to ensure compatibility with Windows and non - Windows environments
use jzlib decoder and encoder instead of system . out . println
added a method ` doesClassLoaderDescendFrom ` to the ` Util ` class to determine if a ClassLoader is descendant from the requested loader
removed unused imports and updated method signatures in ChannelProvider and ProxyChannelProvider to improve code clarity and maintainability
added a new test method ` testEmptyFinalColumn ` in ` TestCsvHeader . java ` and created a corresponding test in ` TestCsvHeader
added compass gravity and margins to the NearbyMapFragment to enhance user experience by allowing margins to be displayed
added a new test method ` testInterpolation ` in ` GeoPathTest ` to verify the functionality of the ` toRadians ` method in ` GeoPath
added exception handling for HiveException in LeafFilterFactory and ParquetFilterPredicateConverter to improve robustness by throwing a HiveException instead of returning null
added language setting for currentAudioTrack in LibMediaInfoParser to ensure proper language assignment for audio tracks
added a warning log for compatibility issues in MicroserviceRegisterTask . java to indicate that schemas in old version are less than the old version
replaced the use of ` System . arraycopy ` with ` addAll ` in multiple array - related classes to simplify the code and improve performance by eliminating unnecessary
[ hotfix ] [ table - planner ] fix checkstyle violation in datasourceproxy
refactor ` InMemoryClientRegistrationRepository ` and ` InMemoryReactiveClientRegistrationRepository ` to accept a ` Map < String , ClientRegistration > `
added a method to reset the UI state in SchemaUpgradeHelper . java to ensure that the UI state is correctly reset during the upgrade process
added a ` failedStep ` flag to the ` JUnitReporter ` class and updated the condition for handling pending exceptions in ` JUnitReporter `
add playerselector . java patch to allow . in entity selectors
added Closeable interface to the Selector class to ensure that the Selector class implements the Closeable interface
updated the MaxConcurrentStreamsTest to use a MultiplexConnectionPool for connection pool creation to improve connection management by using a more efficient connection pool
added multiple calls to stringType ( ) in CoreOptions . java to improve code readability and maintainability
updated HqlQueryRenderer to handle character and parameter in HqlQueryRenderer and adjusted context configurations in tests to improve query handling and ensure correct
updated status checks in HttpGenerator , HttpChannel , HttpConnection , StatisticsHandler , and StatisticsHandler to use HttpStatus . NOT _ SET _ 000
[ hotfix ] [ runtime ] fix typo in catalogvalidationprocess
updated jdbc URLs from " jdbc : h2 : mem : " to " jdbcClassName " in HikariCPCollectorTest . java to
refactor ParquetFormatPlugin and ParquetGroupScan to utilize a new method for managing file selections to improve code readability and maintain
updated the ` isSuccess ` boolean to true and modified the handling of Java compilation in ` Jsr199Javac . java ` to
added a BaseTableModelListener to manage table change events in DefaultSortedTableModel to enhance user experience by providing a listener for table change events
updated the condition to check if the number is less than 65535 instead of 49152 to ensure that the number is less than 65535 instead of 49
added support for document provider authority in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to enhance user experience by notifying changes to the
added a call to ` Log _ OC . startLogging ( getAppContext ( ) ) ` in ` MainApp . java ` to ensure
added throwable analyzer to handle request rejected exceptions in FilterChainProxy to improve error handling and provide clearer feedback when handling request rejected exceptions
updated arraycopy method calls to use ' this . length ' instead of ' length ' to improve clarity and consistency in arraycopy operations
fix npe in filter . decode ( null , null , null )
add a new file TbStopWatch . java that implements a StopWatch class to manage stop time and task time in the application
[ hotfix ] fix typo in pliststore
added @ Deprecated annotations and marked several classes as deprecated to indicate that these classes are outdated and should no longer be used
set the context class loader for the current thread in RemoteInterpreterServer to ensure the correct class loader is set for the current thread
use source . source instead of entity . getentity ( )
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with
corrected a typo in the parameter name from ` indexInTickArray ` to ` tickArrayIndex ` in the ` onExpiry ` method
add a method to get the name of the bean descriptor , so that it can be use in the query plan .
rename wro / all . js and wro / all . css to wro static
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` to verify the functionality of showing the latest
rename ` appContextLocation ` to ` contextConfigLocation ` in multiple test files to improve clarity and consistency in naming conventions
modified exception handling in OCSPChecker to check for an instance of CertPathValidatorException before throwing it to improve robustness by ensuring the exception is
added writeOutputSolutionEnabled property and related getter and setter methods to ProblemBenchmarksConfig and ProblemBenchmark classes to enable configuration of the writeOutputSolution
chore : update gapic - generator - java version to 2.1 . 0 and set maxinboundmessagesize to max int
added a new test class ` Issue _ 815 ` to validate the ` sliceSize ` method of ` SortedTableMap ` to ensure that the
added a shapeless recipe to the GameRegistry in BuildCraftTransport . java to enhance the functionality of the crafting process by allowing a slime
fix sequentialaccesssensevector . iterators ( ) and sequentialaccesssensevector . advanceindex ( ) to correctly handle iterators
added metadata handling for the " ownerplot " entity in BukkitMain . java and updated EntitySpawnListener . java to utilize it to improve entity
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
log warn if destination name length be less than ' maxfilenamelength ' system property
added a check for seen tags in UpToTagChangeSetFilter and implemented a warning log message to indicate that no tags are found in the Liqui
updated type parameters from ` LinkedList ` to ` ArrayList ` and replaced ` LinkedList ` with ` ArrayList ` across multiple files to improve type safety and clarity
refactor BrokerRoutingManager class to improve code readability to enhance maintainability and readability of the broker routing process
updated color values for volume and up paint in CandlestickRenderer . java to improve visual consistency and readability of the paint color
replaced ` FrameLayout . LayoutParams ` with ` LayoutParams ` in ` InsettableFrameLayout . java ` and added layout parameters for Insettable
added ` duration ( ) ` and ` duration ( ) ` parameters to ` BuildTargetDurationListener ` and ` BuildTargetDurationListenerTest ` to
replaced ` @ Profile ( " springframework . context . annotation . Profile " ) ` with ` System . getProperties ( " spring . profiles . active
added null check for the user before processing claims to avoid potential NullPointerExceptions when user is null
added advice with endpoint to the test base on user forum issue .
[ cliffc ] use nonblockingset instead of concurrentset in cassandraconnection
api : listpublicipaddresses api : add sourcenetworkid parameter to listpublicipaddresses api
added a test for ignoring battery optimizations in ShadowPowerManagerTest and implemented corresponding methods in ShadowPowerManager to ensure proper functionality of battery optimizations
updated the version retrieval method to use __ buildProperties to ensure compatibility with the latest Jetty version
added unit tests for verifying number of invocations in NumberOfInvocationsInOrderVerifier to ensure correct behavior of verification methods
refactor conditional logic in TRegexExecNode to handle different result types to improve code readability and maintainability by reducing duplication
added a " - foreground " parameter to the startProfile method call in NewProfileExtensionConnection . java to ensure that the process starts with a foreground
replaced ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve thread management and ensure
changed the data type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` in ` MetadataIndexer
updated log message to use getName ( ) instead of getFile ( ) in CodeEditorView . java and added null checks in EditorTextActionWindow .
updated error message formatting in ClassFileReader and changed warning message format in JdepsTask to improve clarity of error messages and provide clearer context for
updated Fetcher and FetcherTask to use LuceneStorage instead of LogStorage for document storage to improve code maintainability and maintainability by centralizing
updated the ` populateBubble ` method to include an ` existingBubble ` parameter and added a null check for the ` existingBubble ` parameter to enhance
[ hotfix ] [ runtime ] remove unnecessary check in scheduledroutepolicy . execute ( )
updated method names from ` buildRpcExt ` to ` buildRpcExtJson ` in multiple classes to improve clarity and consistency in naming conventions
[ java ] add support for multicast delay generator in media conductor .
replaced GsonBuilder with Gson and added JSON serialization for client information to improve JSON handling and ensure proper serialization of client information
added a conditional check for the amount of openOrder before setting average price in HuobiAdapters . java to ensure that average price is only
removed the ` rawExecutionReports ( ) ` method from the ` BinanceUserDataStreamingService ` class to simplify the code and improve readability
added a ` fail ` method to ` LdapTimeoutTest ` and modified error handling in ` fail ` method to improve error handling and provide clearer
add a log message if the user dictionary do n ' t exist
updated password handling in AmbariServerConfigurationHandler to fetch and store passwords or credential store alias to ensure correct handling of passwords and credential
added parsing check for parsed segments in ParseSegment . java and implemented a method to check if a segment is already parsed to ensure proper handling of parsed
[ hotfix ] [ yarn ] make yarn . application - attempt - failures - interval configurable
log a warning if the h2 driver can not be unload
hbase - 12279 addendum add config for scanner . readtype . stream for snapshot - based inputformat
added fixed height and width parameters for instance login options in LoginInstanceRequest . java to enable dynamic configuration of instance login options for better user experience
added cornerRadius parameter to several methods in ActivityControlHelper , WindowTransformSwipeHandler , LauncherLayoutListener , and LauncherLayoutListener classes to
updated the COMMANDS _ TO _ REMOVE command to include additional sorting and added a warning filter for cross product data to enhance user experience by
added retry logic in TxnHandler to enable retrying on a connection pool to improve error handling by preventing potential BONECP bugs
[ hotfix ] [ queue ] add backup reserve option to queuecontainer
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class and initialized it in ` FirstOfStringsMatcher ` to provide a
updated DELETE ROWS command from " DELETE ROWS " to " DELETE ROWS CLIENT SELECT " in CostBasedDecisionIT . java
added retry logic for SocketException in BaseServiceException . java and corresponding tests in BaseServiceExceptionTest . java to ensure proper handling of socket exceptions
added support for rapid installation types in AdbHelper , AndroidDevicesHelperFactory , and BuckConfig classes to enhance functionality by allowing the ability to install
updated the seed pattern in SortTest . java to correctly handle the character ' - ? ' to ensure compatibility with the latest version of the seed
refactor MultimapSubject to use a new factory method for handling iterable entries to improve code clarity and maintainability by using a more descriptive
removed conditional check for the hotseat orientation in the getRealDisplaySize method to simplify the return statement for better readability
added a ` transmux ` boolean parameter to the ` Transformer ` and ` TransformerInternal ` classes to control the transcoding behavior based on media item
added localization logic for string values in Picker . java to improve user experience by allowing localization of strings
camel - 234 - camel - cxf : camel - cxf - add test for cxf rs consumer
hhh - 5550 - add support for sqlstate conversion in postgresql81dialect
updated query ID handling in TestJdbcDriver2 . java and modified imports in HiveStatement . java to utilize LimitedPrivate annotation to improve query
add useunboundedpcollections category to pardotest
updated HTML formatting in GpsSimpleViewFragment . java to improve code readability and maintainability
[ java ] remove the ` ` leadershiptermid ' ' parameter from the joinlogasfollower method
updated the initialization of the HttpExchange variable and its usage in HttpSender . java to improve code clarity and maintainability by using a more descript
[ hotfix ] [ test ] migrate checkpointingstrategycheckpointcoordinatortest to junit5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and updated corresponding tests to
added null check for the tree before processing marker IDs to avoid potential NullPointerExceptions when tree is null
use bigdecimal instead of float for font size in xwpfrun
change the type of the variable ` email ` from ` String ` to ` String [ ] ` in ` AddressBookDoCoMoResultParser .
refactor dependency handling in RawMavenResolver to use a set for exclusions to improve code readability and maintainability by centralizing exclusion handling logic
added error handling for unsupported DSX currency pairs in DSXAdapters and DSXPairInfo classes to improve robustness by preventing potential NullPointerException
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the codebase
[ drools - 90 ] fix kiemodule incremental build fail if kiemodule pOM be invalid
updated the initialization of ` copy ` to use ` finale - k ` instead of ` 0 ` and added a conditional check for ` sobj
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code readability and maintainability
use compilerasserts . neverpartofcompilation ( ) instead of call MethodHandles . findstaticgetter ( ) and MethodHandles . find
added a new method parameter annotation for CompletableFuture in DefaultNullnessAnnotations . java to enable the use of CompletableFuture in the database
updated the limit for mFreezeCheckPoint from 9000 to 10000 in PlaybackController . java to adjust the freeze check point based on the duration
added Whitebox imports and updated internal state setting in AbstractCommonPowerMockRunner and PowerMockRunner to streamline state management and improve code clarity
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshalIn ` to ensure correct type
refactor conditional logic in TabsAndIndentsVisitor to handle method invocations more effectively to improve readability and maintainability of the code
replaced ` LuceneTestCase ` with ` TestCase ` in the ` TestSingleTokenTokenFilter ` class to simplify the class hierarchy by using ` TestCase `
replace newColumn with wrappedText in HtmlProcessInformationsReport . java to improve data handling by providing a more descriptive HTML table name
added null check for latest in JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository classes to ensure proper handling of execution contexts
added a condition to check if a new media folder is hidden before adding it to the root folder to ensure that only new media folders are added when
replaced UnsupportedOperationException with IllegalArgumentException for setting widget values in SplitPane . java to improve error handling and prevent potential NullPointerExceptions
added handling for Parameterized types in RemoveUnusedImports . java to ensure correct handling of parameterized types in the package
updated debug logging to use ' this . getModInfos ( ) ' instead of ' getModFileInfo ( ) ' to improve logging clarity and ensure
changed the visibility of the logger from instance to static in TicketGrantingTicketImpl . java to ensure the logger is accessed from the current class
updated the SQL string for timeseries creation in PhysicalPlanTest . java to include a new version of the timeseries to ensure compatibility with the latest
added a method ` isValue ( String value ) ` to ` AttrData ` and modified exception handling in ` Converter ` and ` Converter ` to
added locale checks and modifier key checks in CPlatformResponder . java and LWCToolkit . java to ensure proper handling of character modifier keys in
[ java ] add mediadrivertestwatcher to spysimulatedconnectiontest
added a condition to check if the request URI starts with " / css " , " / images " , and " / favicon " to ensure
added JUnit assertion to verify the installation of the wellbeing test apk to ensure that the device is rooted before proceeding
( chore ) camel - ebean - oracle : remove oracle ansi sql rows limiter
updated test assertions to use a fixed value of 3 instead of 1 in TestSimpleBodyHandler . java and TestVertxTLSBuilder . java to
updated Java library path formatting in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest Java library versions
added a boolean flag ` mIsDismissHapticRunning ` to track the state of the DismissHaptic running state to ensure that
[ projectile ] fix exploder cause to be a projectile source .
removed unused import and overridden getItemId method in SymbolInputAdapter . java to streamline code and improve maintainability
updated query parameters in Bitfinex . java and BitfinexPollingMarketDataService . java from 10 to 50 in Bitfinex . java and
added a check to replace single quotes with double quotes in the result string to ensure proper handling of single quotes in StaxConverterTest
[ kubernetesleaderelectiondriver ] add tostring ( ) method to zookeeperleaderelectiondriver . tostring ( )
refactor SqlSessionFactoryBean class to improve code organization to enhance maintainability and readability of the code
fix npe in tripleinvoker when methoddescriptor be null
replaced error logging with a GdxRuntimeException for error handling to improve error handling by throwing an exception instead of throwing an exception
added a method ` isStarted ( ) ` to check if a thread local Deadline is started in ` RawStoreProxy ` to ensure that the
[ java ] add error message for closed channel in nettyrequestexecutor
added null check for genres before setting it to avoid potential NullPointerExceptions when setting text to avoid potential NullPointerExceptions
[ hotfix ] [ checkpoint ] remove redundant log from checkpointcoordinator . reset ( )
[ teras ] fix mapping of mapped container in prefab
delete old unpinned mem table if there be no active mem table
added a new test method ` testRetrySameHostOnCallbackFailure ` in ` HttpTest . java ` and created a corresponding test in ` Http
fix typo in package - info . java file
added a new test class ` SQLServerEscapeQuestionCharacterTest ` for SQL server escape functionality to ensure proper handling of escape characters in SQL queries
add null check to camelmodule to avoid npe
replaced synchronized block with Util . wait for bc [ 0 ] in JavaFXSEPort . java to simplify code and improve readability
updated package imports from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider
do n ' t throw an illegalargumentexception if the imageobject be not an instance of bitmap .
removed the appName parameter from the configure methods in InputRC to simplify the code by removing unnecessary appName parameter
[ gr - 13232 ] add test for ignore dependencies in cataloginstall and uninstalltest
replaced calls to ` setHeadless ( true ) ` with ` addArguments ( " -- headless = chrome " ) ` in multiple test files to
added intern ( ) method to the value assignment in VersionedValue . java to ensure proper serialization of the value
added support for " MOVE " status in the connection check to ensure proper handling of move status requests
updated ISO8601 _ MONTH _ DAY _ YEAR _ DAY _ YEAR2 _ TIME and ISO8601 _ PERIOD _ MICROS
replaced ` org . apache . curator . shaded . com . google . common . collect . Lists ` with ` com . google . common
[ hotfix ] [ runtime ] do n ' t throw exception if spill buffer be already released .
updated permission checks in Visit . java to include untrusted permission checks to ensure proper handling of untrusted visitors in the plot
do n ' t register jabber service if jabber be not register
updated the URL normalization logic in BasicURLNormalizer and added a new test case in TestBasicURLNormalizer to ensure correct handling of curly braces
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation and improve encapsulation of method visibility
added a condition to compare the clock rate in the EncodingConfiguration class to ensure accurate comparison of encoding rates based on the current clock rate
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and modified ` generateProjects ` method to return ` ImmutableSet < Path > `
refactor calendar ID retrieval logic in HostLocaleProviderAdapterImpl . java to improve clarity and correctness to enhance code readability and maintainability by
added a new file MSwingUtilities . java to demonstrate the functionality of MSwing to improve user experience by providing a clearer error message dialog for
camel - 14497 : camel - mail - add async callback to send to the mail producer .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable refreshing of authentication configurations
added unit test for onexception . handleandthrownewexception .
added two new Java files , Main . java and ScriptRenderer . java , to implement script rendering functionality to facilitate the execution of script scripts in the
added inputState check in MimeTypes . FORM _ ENCODED and implemented a new test for query parameters in RequestTest . java to ensure
added checks for non - descendant actors in BitmapFont , Group , and FlickScrollPane classes , and modified touch focus handling in FlickScroll
updated the ` reportFailure ` method to ` runCloseHooks ` in ` DeploymentManager ` and added a new test for ` DeploymentTest ` to
add a forceignore option to lexiconrecipemappings . tostring ( )
[ hotfix ] [ test ] increase timeout for constanttimebackofftest
updated import statements and added a wildcard import in LoincHandler . java to improve code readability and maintainability by using wildcard imports
do n ' t use classpathurl in jollydaydays . getclasspath ( )
added a new file FieldUtils . java that utilizes reflection and field retrieval methods to provide utility methods for field access and field retrieval functionality
removed speculative type check from the assertion in DeferredAttr . java and added a new class DoubleStaticImport . java with static imports to simplify the
updated layout inflater from ` layout _ custom _ content ` to ` layout _ screen ` and added default padding for widget content to improve layout responsive
added updatesettingswithsavelastaccount ( ) method to xabberaccountmanager . updatesettingswithsavelastaccount
added a new method ` setvar ` to ` Commands ` for setting variable values to enhance functionality by providing help information for variable setting functionality
do n ' t fire onAnimaltame event when the entity be passive .
[ hotfix ] [ table - planner ] add support for unsigned range in windowframe
fix testcreatesignature . testcreatesignature # testcreatesignature ( ) to check the number of fonts
added a method to set the application mode in PageListController to ensure the application has the correct mode for better user experience
added build arguments and build arguments in ImageFromDockerfile . java and created a new DockerfileBuildTest . java file for testing to enhance the
added a null check for threadInfos [ threadId ] in ThreadInfos . java to prevent potential NullPointerException when threadId is null
updated the conditional check in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of hardcoded value to improve accuracy in rendering rendering
[ hotfix ] [ runtime ] add more logging to channelstatepersister and channelstatepersister
added multiple database tables to the Schema class to ensure proper handling of various table types in the schema
added a minimumSimilarity parameter to the FuzzyQuery and FuzzyTermEnum constructors and updated related methods to include it to enhance flexibility in query
updated method names from ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java ` to improve
[ log4j2 - 138 ] add error message for layoutinsteadofencoder . immediateflush ( )
added support for AMQP and Kafka auto - configurations in ZipkinAutoConfiguration to support additional auto - configurations in the Zipkin application
added null check for the component in JLayer . java and created a new test class bug6875716 . java to ensure proper handling of
replaced ` avro . shaded . com . google . common . base . Function ` with ` com . google . common . base . Function `
refactor block mapping to use a new return and unwind block instead of a new one to improve code clarity and maintainability
added a legacyRenderer property and its getter / setter methods to the Label class to enhance the functionality of the icon rendering logic
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJ
added null check for mObserver before accessing its properties to avoid potential NullPointerException when mObserver is not initialized
updated Comparator class to use generics instead of Comparable < ? super U > and added a new Department class in TypeTest to enhance type safety and
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
updated the end time timezone setting in UserRuleAnomalyFunction to use currentKeyMillis instead of null to ensure correct handling of the current key
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure proper error handling when parsing integer values
updated the classloader setting for mock signers in MockFactory . java to ensure proper class loading and class loading for mocks
added a new ` OriginalFormat ` class to handle object formatting in the ` ConverterWithEnumFormat ` class to enhance formatting capabilities for object types
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils . java
refactor JAWTRenderer class for improved performance to enhance performance and readability of the code
camel - 11824 : camel - aws2 - lambda - remove autowire test from camel - aws2 - lambda
cloudstack - 13636 : ensure mac address be generate for a non - existent network .
added a condition to check if the header name is " Authorization " to ensure proper handling of authorization headers in HTTP requests
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to improve code readability and maintainability
added getDetails ( ) methods to Authentication , AbstractAuthenticationToken , UsernamePasswordAuthenticationToken , and UsernamePasswordAuthenticationToken classes to provide access to the
updated the initialization of randUsePoints in SolrTestCaseJ4 . java to use a random integer instead of a nextBoolean to improve randomness by
replace ` appendDot ( ) ` with ` endSentence ( ) ` in multiple classes to improve clarity and consistency in method naming
updated ` formatForConsole ` method to include ` Locale . US ` in multiple files to ensure consistency in locale - specific formatting across different locales
updated import statements and added a condition for handling unparsed arguments in GroovyParserVisitor . java to improve code readability and maintainability by using wildcard
added bounds checking for bottom and right inset Px values in the Border class to ensure correct positioning based on the bottom and right inset
refactor GestureState initialization and add DEFAULT _ STATE constant in TouchInteractionService . java to improve code readability and maintainability by centralizing
replaced ` DateTime ` imports with ` Instant ` and ` DateTimeFormatter ` in ` LlapServiceDriver . java ` to utilize ` Instant
refactor openblas classes to improve code organization to enhance maintainability and readability of the codebase
replace IOUtils with IOException in TorrentsStorage . java to ensure proper resource management and prevent resource leaks
added synchronized keyword to the initTxnMgr method in SessionState . java to ensure thread safety during initialization
increased the timeout duration from 120 seconds to 480 milliseconds in ` AbstractDistribZkTestBase ` and ` AbstractFullDistribZkTestBase
added a new file ` SearchResults . java ` to handle search results in a specified Hits class to provide a way to retrieve results as objects
[ hotfix ] [ runtime ] remove redundant code in threadcpusamplersupport
fix nullpointerexception when call frameutil . getobjectsafe ( frame ) .
added new version versions " 8.9 . 0 - cfs " and " 8.9 . 0 - sorted " to TestBackwardsCompatibility . java
updated the feature flag from DISABLED to TEAMFOOD in FeatureFlags . java and modified the return statement in AppIcon . java to
added a new endpoint to retrieve tenant pools for current instance in InstanceResource . java to provide access to the instance pool for the current instance
[ hotfix ] fix topfieldcollector early terminate on docid and prefix
updated the ` InlineBytecodeGenerator ` to use ` isToString ( ) ` instead of ` isNative ( ) ` in the ` InlineByte
added debug and warning log statements to CxxCompileStep , CxxPreprocessStep , and CxxCompileStep classes to improve error handling and
fix stringutil . removecharacter ( string string , char ) to use stringutil . removecharacter ( string , char )
add metadata service protocol to the application config ( # 11824 )
add a datatransformer interface so that it can be use by the kie - api
changed the data type of values from Collection < ? > to Number [ ] [ ] in DistributionGraph . java to ensure correct handling of distribution values
removed unnecessary boolean variable in FormatStringChecker . java to streamline code and improve readability
updated initialization of SolrCore in ElectionContext . java to ensure proper initialization of SolrCore
refactor ITestDbTxnManager to improve transaction management to enhance performance and readability of the code
refactor connection handling in DatabasePlatformFactory to use try - with - resources for better resource management to ensure proper resource management and prevent potential resource leak
added a new method ` remoteCodeFirstPojo _ testMapModel ` in ` CodeFirstPojoClient ` and implemented it in ` CodeFirstPojo
pdfbox - 2671 : remove unnecessary null check in resourcesvalidationprocess
refactor selection listener handling in ScaleDialog . java to improve readability and maintainability of the code
rename method ` updatePlayerStepStatus ` to ` tickBelt ` in ` ItemTravelBelt ` and update its usage in `
do n ' t throw an ioexception if there be no appearance stream
replace TreeSet with LinkedHashSet in ExecuteSqlCommandStep . java to ensure consistent ordering of the keys list
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer . java and
updated preload values in dc1394 . java from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure
added a conditional check for agentSupport before setting constructors to public in MainMockTransformer . java and created new test classes for mocking static methods
pdfbox - 4072 : do n ' t add object to securityhandler if it ' s an object of type string or dictionary .
add a method to set the window title for the xToolkit application in MainFrame . java to ensure that the window title is set based on the
modified the depth assignment logic in XRSurfaceData . java to conditionally set transparency based on pixel size to ensure correct handling of transparency based on
added error handling for reading response body in OkHttpDataSource to improve error handling and provide clearer error reporting
added a static method ` exit ` in ` TopLogging ` and removed unnecessary print stack trace printing in ` TopThreadGroup ` to improve error handling
modified the initialization of the ` start ` variable in ` NativeRegExp . java ` to ensure that ` regexp . isGlobal ( ) ` is only
[ flink - 468 ] [ test ] ignore optaplanner - 468 test
corrected a typo in the variable name from ' lowAllocation ' to ' highAllocation ' to improve code readability and maintainability
added a method ` deleteEntriesWithoutFeeds ( ) ` to ` DatabaseCleaner ` and ` FeedEntryDAO ` to delete entries without feeds
changed the return type of the appendToLabel method from void to AtomicCounter to allow for returning the current instance of the AtomicCounter instance
[ java ] move BusySpinIdleStrategy from BusySpinIdleStrategy to NoOpIdleStrategy and update LowLatencyMediaDriver to
added HTTP status handling for NOT _ MODIFIED responses in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure proper handling of modified headers
rename constantvalueinertsplicenode and constantvalueinertsplicednode to constantvalueinerttoolevalnodefactory
removed the overridden ` paintTabArea ` method in ` SynthTabbedPaneUI . java ` to improve code clarity and maintainability by eliminating unnecessary
refactor ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an ` Object ` for argument handling to
[ hotfix ] add fileendpoint . isabsent ( ) and normalizepath ( ) to file endpoint
added a new ` build ` method to the ` JavaProvenance ` class and modified ` MavenProjectParser ` to use it to enhance the
added logging for GenericUDFs and UDFs in HiveFunctionRegistry and updated deterministic checks in TestInbuiltHiveUDFs to
increased loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test accuracy by reducing the number of iterations
[ hotfix ] [ table - common ] do n ' t send hint for deleted columnfamily
added a check for writable output files in NativeErrors . java to improve error handling for non - writable output files
added package info handling in LauncherModel . java to check if the application is enabled to improve robustness by preventing potential NameNotFoundException
cloudstack - 410to420 : do n ' t throw exception if upgrade fails
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test for non - skippable exceptions to
updated string comparisons in LineReaderImpl to use regionMatches with Option . CASE _ INSENSITIVE to ensure proper handling of case -
added imports for SourcesFileResults and SourcesFileErrors , and updated return statements in Recipe . java to enhance error handling and ensure
added Overview import and functionality to dismiss all tasks in TaplTestsTaskbar to ensure that all tasks are dismissed when the workspace has tasks
add dbupgradesystemvmtemplate interface to update system vm template
changed the ` conn ` variable from ` null ` to ` final ` and simplified conditional checks in ` LdapClient . java ` to improve code read
refactor index handling in SequenceAction to use a variable for clarity to improve readability and maintainability of the code
[ hotfix ] [ table - planner - planner - planner - java ] use threadlocal in cassandraserver . set _ keyspace
added a check to skip processing if the field is a synthetic field to ensure that only synthetic fields are processed
added a new LoggerProvider class and integrated it into the application ' s logger to enhance logging capabilities for Ninja application
changed the type of ImmutableMap . Builder from String to Object in ServerStatusCommand . java and updated the port type in ServerStatusCommandTest . java
added deprecation warnings for the spring context in SpringFactory . java and updated test cases in SpringFactoryTest . java to ensure that the spring context
added a deepStart method to Startables class to enhance the functionality of the deepStart method in the Startables class
removed the deprecated ` reservePrimitiveExtensionArray ( ) ` method from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the code
fix the laser table not be able to use it .
refactor conditional logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
set expire messages period to 0 in MemoryLimitTest . java to ensure that the test does not consume 2 * pageSize mem which will throw the test
removed null checks for handlerName in RequestHandlers . java to simplify code and improve readability
updated log logger name handling to replace ' - ' with ' . ' to ensure proper logging format for better debugging
updated import statements and modified the way the PYTHONPATH environment is stored in ProjectBuildFileParser . java to improve code readability and maintainability
refactor frame size handling in DirectAudioDevice and Toolkit classes to use a more descriptive variable name for clarity to improve code readability and
added null check for enums in ElasticSearchStringLookupService to avoid potential NullPointerExceptions when enums is null
updated error message format in CommitLogReader . java to include additional context to improve clarity of error messages for better debugging
added a line to retrieve the WebSocket session policy from the container scope to ensure proper handling of WebSocket requests
simplified the logic for determining static fields in the Java2TypeScriptTranslator class to simplify the logic and improve readability of the code
added a webroot argument to the server context creation in UserService . java to ensure proper configuration of the server context
( chore ) camel - core : migrate test from junit4 to junit5
do n ' t use reflection for monitorvmutil . isattachable ( )
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple classes to improve clarity and consistency in method naming
replaced specific trade - related imports with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and improve code readability
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is reset correctly during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground is null
updated condition checks in FloatingDecimal . java and added a new ToString . java file with a main method to improve code readability and maintainability
updated the property type check in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper handling of property
removed the maxVersion variable and its usage from recentUpdates . getVersions method to simplify the code by removing unnecessary parameters
http : / / code . google . com / p / mybatis / issues / detail ? id = 422 . fix http : /
updated animations in RecentsView and TaskView to use alpha for previousTask , nextTask , and nextTask to improve UI responsiveness and
updated the ` extractSingleValue ` method calls to include a ` field ` parameter for consistency to enhance readability and maintainability of the code
update DemoUtil sample to include a new sample for TearsOfSteel . m3u8 and bipbop . m3u
removed unused imports and updated class references in PersistenceProvider . java to streamline code and improve readability
updated logging paths in ExecRPCInvoker and WritableRpcEngine to use the correct package to ensure compatibility with the new package structure
added diagnostic listener to the TestSpecificCompiler class and updated the JavaFileObjects method to include warning information to enhance debugging capabilities by providing clearer diagnostic
updated WebSocketEndpoint to return early and added a new test for session closure in WebSocketIT to ensure proper handling of session closure and ensure proper session management
[ hotfix ] [ network ] increase the number of delay in the state network service .
updated OpenSymphony Group mappings from " OpenSymphony Group " to " Apache Struts " in XmlConfigurationProvider . java to
added conditional logic to stop audio streams in WebCamInputPanel to ensure proper handling of stream stop behavior when stopping
changed ` chartData ` from ` List ` to ` ArrayList ` in ` BittrexChartDataResponse ` and added a new enum ` Bit
move gml example to data - collection and remove unused import
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` TargetType58 ` class to improve clarity and consistency in
hhh - 10956 - add identifier generator support to compositeidfkgeneratedvalueidentitytest
rename ` ` findfulltext ' ' to ` ` downloadfulltext ' '
added null checks for host and port in URIRegisterExecutorSubscriber and refactored selector registration logic in ShenyuClientRegisterDefaultServiceImpl to
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code readability and maintainability
added a null check for the OSDB hash before retrieving information from the API result to avoid potential NullPointerExceptions when the hash is blank
added token transfer functionality to the RuntimeImpl class and implemented a new TransferAssetActuator method in MUtil to improve token management and ensure correct
http : / / issues . apache . org / jira / browse / amq - 4697 - make sure we do n ' t need
updated the default configuration parameter from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to ensure
added null and empty check for joinResult in MapJoinOperator . java and updated BloomFilter usage in HybridHashTableContainer . java to ensure
updated the ` HTTPSPDYAsyncEndPoint ` constructor to include a ` AsyncEndPoint ` parameter and added methods for local and remote address and port
added an additional data entry for the " id " field in intents across multiple adapter classes to enhance the user experience by allowing users to specify the
http : / / issues . apache . org / jira / browse / amq - 4253 - fix issue with proxy - authorization
replaced ` int ` with ` AtomicInteger ` in ` TraceContext ` and updated the number of child per request in ` TraceContextTest ` to improve
updated JWT parameters in multiple classes to ensure consistency in naming conventions to improve code readability and maintainability
disable the test for NullPointerExceptions in ValueTypeTests . java to ensure that the test is only enabled when the expected exception is not null
migrate resourcefactoryserviceimpl from kie - api to kieresources
replace instances of ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` across multiple predicate classes to improve clarity and consistency in predicate
replaced ` AccountNotFoundException ` with ` Exception ` in ` FileActivity ` , ` Preferences ` , and ` ReceiveExternalFilesActivity ` to improve
added null check for witnessService before validation to prevent potential NullPointerException when witnessService is null
updated the method of obtaining the tagged column to use getExprString ( ) instead of getExprString ( ) to improve clarity and functionality of the
added a conditional check to ensure the item ' s Javadoc field is not present before setting it to avoid potential NullPointerExceptions when the Javadoc
updated variable names from ` holderMethod ` and ` holderKlass ` to ` holderMetadata ` in ` CompiledICHolder . java ` and added
replaced calls to revalidate ( ) with revalidateWithAnimationSafety ( ) in Tabs . java to improve code readability and maintainability by using
[ hotfix ] [ kafka ] use unregisteredmetricsgroup instead of unsupportedoperationexception
updated the calculation of ` y ` in ` Polygon . java ` to use a new variable ` oldX ` instead of ` x ` to improve
updated cacheManager . createCache method to cast null to Configuration < Object , Object > to improve type safety and avoid potential ClassCastExceptions
added a length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a
refactor ShadowCookieManager class implementation to improve code readability and maintainability
added authorization for dropping external tables in Hive and updated related tests to ensure proper handling of external table drops and improve test reliability
added a condition to check for ApplicationType . WebGL in Stage . java and adjusted the draw method call in ProgressBar . java to ensure proper
add getplatformbyteorder ( ) method to make it easy to use byte order .
updated PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " to ensure compatibility
updated the ` initWebViewLogin ` method to accept a base URL parameter and modified the login login logic accordingly to enhance user experience by allowing customizable
corrected a typo in the ExecutorException message from " Paramter " to " Parameter " to clarify the purpose of the ExecutorException message
fix http : / / code . google . com / p / mybatis / issues / detail ? id = 421 , add test for
rename ExponentialTimer and ExponentialTimerBeanInfo classes to PreciseThroughputTimer and PreciseThroughputTimer to improve clarity and
added functionality to remove and delete soft bodies in the SoftBodyTest class to ensure proper cleanup and cleanup of soft bodies in the test
updated interface visibility from package - private to public for several function provider interfaces to enhance encapsulation and enhance encapsulation of the interface
zeppelinhubclient , zeppelinwebsocket , zeppelinhubwebsocket , zeppelinhubwebsocket , zeppelin
add a test case to verify that no redundant namespace do n ' t exist .
fix crash when redplasma be not load
added HTTP 2 header handling in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionListener to enhance HTTP /
reformatted conditional statements in Remove . java for consistency to improve readability and maintainability of the code
updated the number of delimiters in SimpleReport . java from 10 to 102 and adjusted formatting in the output format to improve clarity and consistency in
removed the ` - XDignore . symbol . file ` option from ` JavapTask ` and added a new ` T6863746
renamed ` TickerDemo ` class to ` StreamingTickerDemo ` and deleted the ` TickerDemo . java ` file to improve clarity and
refactor exception handling in Runtime . java for improved clarity and error handling to enhance code readability and maintainability by eliminating unnecessary exception handling
do n ' t create the input3d if the feature be intel _ rEALSENSE
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests related to kinesis functionality
removed the ` ParserException ` from the ` parsePayload ` method in ` ScriptTagPayloadReader . java ` to simplify the ` parsePayload `
updated the method signature of ` getRepositoryFactoryClassName ` to use ` getRepositoryFactoryBeanClassName ` instead of ` getRepositoryFactoryClassName ` to improve clarity and
changed return types of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to enhance type safety and
replaced ` this . this ` with ` IOSGLES20 . x ` and ` IOSGLES20 . y ` in ` IO
removed the UploadPathActivity class and its associated references from the codebase to streamline the codebase and improve maintainability
updated return statements in SimpleTextFieldsReader . java to conditionally return totalTermFreq and sumTotalTermFreq based on indexOptions to ensure accurate
fix : add implicit constructor to ctclass . addconstructor ( ) and addchild ( )
added a Database parameter to populateValidateNullableIfNeeded and populateValidateForeignKeyIfNeeded methods to ensure proper handling of Oracle database types
refactor Database class to improve code readability to enhance maintainability and readability of the code
refactor SpringApplicationBuilder class to improve code organization to enhance maintainability and readability of the application builder
removed the indexOptions variable from the iterator assignment in DefaultIndexingChain and PointInSetQuery classes to improve code readability and maintainability by
removed unnecessary substring operation in SchematicHandler . java to streamline code by eliminating unnecessary whitespace
added case handling for various collections in AbstractCollectionAssert . java and updated return statements in CollectionAssert _ isUnmodifiable _ Test . java to
removed the static modifier from the Option enum in ProcessExecutor . java to improve code readability and maintainability
updated Compose and ComposeActivity to handle char remaining characters more effectively to improve user experience by providing clearer feedback when the char remaining character is
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFileOperationsHelper ( ) ` in ` FileDetailFragment .
replaced ` DatatypeConverter . parseBase64Binary ` with ` java . util . Base64 . getMimeDecoder ` in ` ImageUtil `
added new files ` ControllerCounter . java ` and ` DBCallback . java ` to implement a DB callback interface for database operations in the analytics
added ' final ' keyword to the ` deleteTicket ` method in ` EhCacheTicketRegistry ` to ensure that the ` deleteTicket ` method
added a new file FlywayMigrationRunner . java that includes ClassPathXmlApplicationContext for testing the Flyway migration functionality to provide a
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in ` HashMap ` and added a new class ` OverrideIsEmpty `
updated the version number from " 0.9 . 0 " to " 0.9 . 0 " in TsFileDBConstant . java to reflect the latest release
added @ Nullable annotation to the modify methods in CompressionCodec , ZlibCodec , and ZlibCodec classes to enhance null safety and prevent potential NullPointer
added null check for ` mainValue ` in ` LauncherHelper ` and refactored jar creation logic in ` Arrrghs ` to
corrected the spelling of " BasicErrorController " to " BasicErrorController " in multiple test classes to ensure consistency in naming conventions
[ gr - 16464 ] add support for compile ir type in hotprofilinginfo .
xssf sheet : remove clone ( ) method from xssfsheet
added a static method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and updated its usage in ` FloatingIconView
update form field value to use raw value character sequence instead of value
updated dimension assignment logic in IconRecentsView . java to conditionally invalidate item decorations based on configuration to ensure proper item decoration based on
deleted the AddAdapter . java file to remove unused adapter classes to streamline the codebase
fix npe in nonstatic lifter when there be no constructor
added a new parameter ` processSortCols ` to the ` processSortCols ` method in ` OpTraitsRulesProcFactory . java ` to
refactor log watcher handling to use a looper method to improve code readability and maintainability by centralizing the looper logic
added a print statement for " < any > " in Java2TypeScriptTranslator . java to provide clearer output for type scripts
updated SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with newer
removed conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor to ensure proper handling of S
removed the singletonLock variable and its usage in TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary dependency on the singleton flag
[ java ] add test for response class and forward class callback in example example
added a ` appendToFile ` method to the ` writeFile ` method and modified the ` writeFile ` method to include a ` appendToFile ` parameter to
updated MavenExecutionContextView and MavenRepositoryMirror to use getMirrors ( ) instead of getMessage ( ) in MavenExecutionContextView and modified MavenRepositoryMirror
added a ` name ` parameter to ` BuildRuleSourcePath ` and ` PathSourcePath ` classes and updated constructors accordingly to include it to
updated the condition for matching the service redirect URI in OAuth20CallbackAuthorizeEndpointController . java and added a test for operation clients with same redirect URI
replaced the usage of ` EMPTY _ ANNOTATIONS _ ARRAY ` with ` AnnotationParser . toArray ` across multiple classes to simplify the code by
updated method calls to use ` getBadgedIconForUser ` and ` getBadgedLabelForUser ` instead of ` getBadgedDrawable
updated the default value for the line separator in GlobalConfiguration . java to provide more context about the default line separator for output
[ cmu ] use isderivationclass instead of isimplementinginterface in configurationmanager
[ thymeleaf ] sanitize input in model to avoid potential null pointer exception
chore ( deps ) : update java and python dependency
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added a test case to verify the functionality of
refactor CountersReader class to improve code readability to enhance maintainability and readability of the code
updated containerType handling in AllAppsRecyclerView and modified related methods in UserEventDispatcher and DeepShortcutsContainer to improve code clarity and maintainability
hbase - 14279 deprecate buffer size configuration and add a warning log .
[ native ] add support for ` ` left _ table ' ' and ` ` userid ' ' in test native window
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameters and adjusted parameter type retrieval logic to improve parameter handling and ensure correct parameter
updated TestFSTs . java file to improve test coverage and maintainability
use labeltop instead of labeltextheight for label , so that it do n ' t take a string .
hbase - 14224 addendum add initial size to reduce the size of the region split policy
added a method to reset the loaded state and start the loader in LauncherClings . java to streamline the loading process by eliminating unnecessary
replaced the initialization of ` keys ` and ` updatesAt ` with a direct assignment of ` keys ` and ` updatesAt ` to streamline the
added a Set < String > excludedDatasources property and its getter / setter method to SpringDataSourceBeanPostProcessor to enable tracking of excluded Spring
added a call to storeUndoInfo ( ) in TableValuesView . java and removed null check for cb in TableValuesPanel . java to ensure
[ flink - 24486 ] [ kinesis ] make awsutils . createkinesisclient ( properties ) protected
[ velbus ] fix channel mask trigger for velbus channel .
disabled fast path test due to unfavorable benchmarks in LocalCacheSelectorCode . java and updated test cases in BoundedLocalCacheTest
added a test for illegal database names in IoTDBSessionSimpleIT and modified PartialPath to throw IllegalPathException to ensure proper handling of
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure proper handling of new files in the garbage collector
replaced ` desiredWorkspaceLeftRightRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx ` in ` DeviceProfile . java ` to improve
reformatted code for consistency and readability in CharTokenizer . java to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 and update gax - java to 2.16 . 0
corrected the spelling of " xenservernetworklabel " to " xennetworklabel " in the ApiConstants . java file to ensure
updated libgdx version from " 1.4 . 5 " to " 1.4 . 6 " and libgdxNightlyVersion from " 1.4 .
removed unused metricNames field and its getter method from SolrCore . java to streamline the code and improve maintainability
refactor path handling in MavenManifestFactory to use Fs . fromUrl instead of URI . create to improve code readability and maintainability by
replaced direct system property check for Mac OS with a static final boolean variable to improve code readability and maintainability by reducing redundancy
refactor JdbcAggregationRepository class to improve code organization to enhance maintainability and readability of the code
added clear ( ) and addAll ( ) methods to slotList in Frame . java to ensure proper handling of slot list operations
added a new variable m _ predCount to the PredicatedNodeTest class to reset the predCount variable to - 1
added mergeProperties method to ConfigurationSpringInitializer to manage configuration properties to improve configuration management and ensure proper configuration management
[ hotfix ] [ log4j2 - 13636 ] make rootlogger a default logger , not a default logger
replaced HashMap with LinkedHashMap for aliasToWork in multiple files to improve performance by aligning with the new structure structure structure structure
added a check for the superclass of the jdbcHandlerMap in TypeHandlerRegistry . java to ensure proper handling of class hierarchy to avoid potential NullPointerException
added debug logging statements in HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JdbcBatchItemWriter classes to enhance logging
updated the way the ` wellformed ` string is processed in ` LocaleUtils . java ` to ensure proper handling of the ' ; ' character
updated the handler context handling in VertxHttp2Handler and added a context assertion in Http2Test to ensure proper context management and ensure proper context
xssf : improve performance of xssfevaluationworkbook # gettable ( )
updated schema text detail type from VERBOSE to BASIC and simplified conditional checks in BaseSchemaTextFormatter . java to improve clarity and maintainability of
replaced instances of ` MongoFactoryBean ` and ` MongoClient ` with ` MongoClient ` in ` MongoNamespaceReplicaSetTests . java ` to
replace HashSet with LinkedHashSet for roots , leaves , and roots in SparkWork . java to ensure consistent ordering of elements in the set
added a cloned list of TableScanOperators for joins in SkewJoinOptimizer . java to ensure the operator tree is cloned before proceeding
added a null check for the client ID before retrieving the registered client in DynamicRegistrationClientConfigurationService and JsonFileRegisteredClientService to avoid potential NullPointer
clear achievementlist field field _ 187981 _ e in statlist . clear ( )
initialize userName , productVersion , and connectionUrl variables to an empty string in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure proper initialization of
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottomSheet
added long buffer management functionality to ByteBuffersDataInput . java to improve performance by ensuring proper handling of long buffer operations
replaced ` FileTime . from ( ) ` with ` st _ atime _ sec ` and ` st _ nsec ` in ` UnixFile
added a new file TestNoEagerReclaimOfHumongousRegions . java that implements a large reference holder to demonstrate the behavior of
added functionality to hide the search bar in the AllAppsContainerView to enhance user experience by allowing users to hide the search bar based on user
updated the method call from ` env . router ( ) ` to ` env . routes ( ) . get ( " / " ) ` to ensure
added a null check for cur and next in LineChartRenderer to prevent potential NullPointerExceptions when cur and next are null
added a new action ` ReloadPageAction ` to the ` Eeze ` class to manage the reloading of the page to enhance user
change log level from info to warn in SQLManager . java to improve logging clarity and maintainability of log messages
updated the minimum Spring version from " 3.2 . 7 . RELEASE " to " 3.2 . 8 . RELEASE " to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to prevent potential NullPointerException when configuration type does not have a selected
do n ' t use spiproviders to load extension from ServiceLoader .
added a finalize method to HiveHBaseTableInputFormat to ensure proper resource management and prevent potential memory leaks
added methods to stop statement executors in JdbcConnector and HiveViewImpl to ensure thread safety during statement execution
documentfactory : do n ' t set disallow - doctype - decl and disallow - external - dtd by default
updated JdbStopThreadidTest to use OutputAnalyzer for command execution and added a new OutputAnalyzer to ensure proper handling of application exit status
added a new method ` getType ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to ensure correct handling of content providers in
updated the type of the ` runnable ` variable from ` runnable ` to ` future ` in the ` ExpressionThreadPoolManager ` class to improve type safety
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the correct HTTP port is used
replaced ` addCaptureListener ` with ` addListener ` in the ` buttonTable ` class to improve listener management for better user experience
updated the default batch size from 10 to 3 in NewSessionQueueOptions . java to adjust the batch size based on available processors
added a try - catch block around the establishResourceManagerConnection method call to handle potential exceptions when establishing the Resource Manager connection
updated LambdaRewriter and AbstractMemberFunctionInvokation classes to initialize classFile to null and added a new LambdaExpressionFallback instance to improve error
updated error message to include min . min and max parameters to improve clarity of error messages for better clarity
updated method signatures to include the owner parameter in DefaultStateMachine , StateMachine , and BobState classes to enhance message handling capabilities and improve logging clarity
added new classes ` Cursor ` , ` Database ` , and ` Row ` to the ` com . codename1 . db ` package to provide
refactor AbstractIterableAssert , AbstractPathAssert , AtomicReferenceArrayAssert , and InstanceOfAssertFactories classes to improve code organization and maintainability
[ avaje ] add setbeanid ( bean , object id ) method to ebeanserver
updated the xslt path in the transform method call to use getAddToSiteDescriptorXsl ( ) instead of a hardcoded string to
added a private List < RequestMatcher > matchers to manage request matchers in HttpSecurity . java to improve code readability and maintainability by
added hashcode ( ) and equals ( ) method to ContactResource class to enhance hashing capabilities and ensure proper resource comparison
[ coyote ] remove unused code in abstractprocessor
updated log messages in FileManager . java for clarity and consistency to improve readability and maintainability of log messages
added tearDown ( ) method to TestJdbcDataSource and a tearDown ( ) method in TestIndexSearcher to ensure proper cleanup of the data source
added import for LambdasWithInterfaces and adjusted formatting in SyntaxTests . java to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes to improve code readability and maintainability
refactor parserdecorator to use parserfactory instead of emptyparser
do n ' t try to load cpw . mods . fml if there be more than 3 class context
updated variable declarations in AccountUtils , IndexedForest , and CustomPopup classes to remove unnecessary parameters to improve code readability and maintainability
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApiMapping
[ jsx ] fix dumpingvisitor and dumpingvisitor for jsx comment
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality in the test
added error handling for missing BUCK configuration in BuildEndToEndTest and modified error messages in CxxEndToEndTest to improve error
added OperatingSystemMXBean imports and a memory limit check in TestStringBufferAndBuilderGrowth . java to improve memory management and ensure proper resource
[ hotfix ] [ runtime ] deprecate conversionservice in maptolocaldateconverter
added success flag to HiveMetaStoreClient . java to ensure proper handling of successful operations
updated conditional check from ` = = ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java ` and changed the
updated conditions in TimeLineCursorAdapter and TweetActivity to include " amp . twimg . com " and modified links handling in TweetActivity
added a @ Deprecated annotation to AreaReference . java to mark the class as deprecated to indicate that the class should no longer be used
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the code
added assertions and modified reference kind handling in MemberName . java to improve clarity and correctness of reference handling logic
changed the default value of the SUBMIT _ KEY _ UPDATES property from " false " to " true " and added synchronization around the submitKey
fix a bug in the editnodetextfield when the mouse event be not a mouse event .
camel - 14497 : camel - bean - add support for static method in static method .
[ hotfix ] [ runtime ] fix typo in javadoc
add @ suppresswarnings ( ` ` unchecked ' ' ) annotation to agentrunnertest
added ` getDescription ( ) ` methods to various classes for adding , adding , adding , and removing Maven project properties to provide clearer context about Maven
refactored the way active groups are added to the faces list in ObjLoader . java to improve code readability and maintainability by central
refactor ProcessEngine class to improve code organization to enhance maintainability and readability of the code
corrected the spelling of " reentrantLock " in multiple files to improve code readability and maintain consistency in naming conventions
updated the ` PrintMavenAsCycloneDxBom ` and ` PrintMavenAsCycloneDxBom ` classes to
updated back ( evt . getComponent ( ) ) method call from back ( evt . getComponent ( ) ) to back ( evt . getComponent ( ) )
[ java ] do n ' t call tlsauth ( ) if no certificate be verify .
updated type parameters from ` @ Nullable ` to ` @ Nullable ` in ` ObjectArraySubject ` , ` StandardSubjectBuilder ` , and ` Truth
replaced calls to ` NutchConf . get ( ) ` with ` getConf ( ) ` in multiple files to improve code readability and maintain
do n ' t remove the board pane when select a sheet
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to retrieve the session ID
added null checks before setting time interval in ImportContainerImpl . java and updated test cases in ImporterGEXF2Test . java to ensure
updated command parameter from " - logLevel INFO - serverPort " to " - serverPort " in MockServerContainer . java to ensure consistency in command
updated error logging to include the exception message in the error message to improve clarity of error messages for better debugging
use crawlmetadata instead of robotshonoringpolicy
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests related to test execution
use file separator instead of absolute path for camel - scan . xml
added alternativePath method to ExpectNewDemo to return a byte array input stream to enhance functionality by allowing alternative path handling
updated the initialization method in LogEntryParseTester to use getFirstFilter ( ) instead of getFirstFilter ( ) to ensure proper initialization of the input object
added protectionDomain parameter to BufferAlignmentAgent . java to enhance flexibility in the buffer alignment agent
added dispose ( ) method to WaterRipples class to ensure proper resource management and prevent potential memory leaks
added a configuration option to disable semi - join optimizations and operations on external tables to enhance flexibility in managing semi - join optimizations on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify the purpose of the authorization requesting public keys
updated wallpaper offset calculation from - 30 to 0 in Workspace . java to adjust the wallpaper offset based on the scroll range
updated SybaseASADatabase to return true and modified SequenceSnapshotGenerator to check for SybaseASADatabase to ensure proper handling of Sybase
updated the autocommit mode description and modified commit logic in PutSQL . java and added a new test case in TestPutSQL . java to ensure
added directory creation checks and error handling in SnapPuller . java and corresponding test cases in TestReplicationHandler . java to ensure proper error handling
updated the builder ID for AppTarget in AppEventProducer . java to improve clarity and consistency in naming conventions
[ java ] use framer . frame ( ) instead of framer . frame ( ) .
removed redundant parameters from constructors in OAuth2AuthenticationFilter and OAuth2AuthorizationRequestRedirectFilter to simplify constructor parameters and improve code clarity
added extended message for split text into key - value pairs and delimiters in GenericUDFStringToMap . java to improve clarity of parsing text
removed the INSTANT _ STAMPLE constant and adjusted formatting logic in PlainFormatter . java to streamline the formatting process and improve readability
[ java ] make agentrunner . close ( ) timeout configurable .
hhh - 14136 - remove use of reflection . getmethod ( ) and use reflection . getmethod ( ) instead
refactor Mockito class implementation to improve code readability and maintainability
updated debug log message from " Closing " to " New " in HiveProtoLoggingHook . java to reflect the new proto event file configuration
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable the test that produces at least one sample result
updated error message from " then zero " to " rows and columns must be greater than zero " to improve clarity and correctness of error messages
refactor code to use a try - catch block to improve readability and maintainability of the code
added sorting functionality for bound sheet records in XLS2CSVmra and implemented sorting functionality in BoundSheetRecord to improve data analysis by allowing sorting
replaced ` avgImpulse ` and ` endImpulse ` calculations with ` startThrust ` and ` endThrust ` to improve
fix NiftyJmeDisplay initialization to use inputmanager instead of inputsystem .
added a conditional check for the needIdentityHashCodeField before setting the hashCode field offset in UniverseBuilder . java to ensure that the hashCode field is
remove the deprecated getmesh ( ) method from block . java
rename ` keytabPath ` to ` localKeytabPath ` and update related logging statements to improve clarity and consistency in naming conventions
added a new option for EMPTY _ WORD _ OPTIONS in the LineReader class and modified matcher logic in LineReaderImpl to handle empty words
updated the condition in pushViewReplicaUpdates to include writeCommitLog to ensure proper handling of writeCommitLog during view replica updates
refactor display contents handling in CaptureActivity and add a new default button ID in PreferencesActivity to improve user experience by providing a clearer button ID
added a batching test method to the JoinedTableTest class to verify the behavior of batching operations in the JoinedTable
added exception handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate entries
removed the deprecated -- format option and updated its usage in RuntimeOptions and RunCukesByCompositionTest to remove the deprecated -- format option to simplify
removed the save ( ) method from PMS . java to streamline the code and improve readability
refactored the back key handling logic in ExtendedEditText . java to improve readability and maintainability of the code
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new class ` Capacity . java ` for testing string
updated method call from ` goHome ( ) ` to ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to
add endnotes relation to xwpfdocument and add it in xwpfwordextractor
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager . java and updated test method call in CasEventsReportEndpointTests
added a new test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify the version information of the GDAL
added a new ` Lifecycle ` class to handle network error events in the system to facilitate the creation of network errors in the application
updated the ` addURLToDownload ` method to use ` getDACookie ( ) ` instead of ` new HashMap < String , String > `
removed unused imports from BodyTubeShapes and RocketFigure classes to streamline code and improve readability
add support for nativewindow . setsurfacescale ( ) in jogl .
add a method to set the initial value of the create params component to enable the creation of a new settings component in FlutterCreateParams
removed unnecessary imports and streamlined the writing process in DiskDocValuesConsumer . java to streamline the code and improve readability by eliminating unnecessary
[ hotfix ] [ http ] change defaultroutebuilder . defaultstatusroutebuilder . defaultstatusroutebuilder . defaultstatusroute
removed unnecessary imports and streamlined data handling in GoAwayTest . java to streamline code and improve readability by eliminating unnecessary code
added support for FluentSetterBean in ReflectionUtils and created a corresponding test in EasyRandomTest to ensure proper handling of FluentSetterBean instances and ensure
replaced ` ListenableFuture < ? > ` with ` ListenableFuture < HttpResponse > ` in ` BlockingHttpEndpoint ` , ` HttpEndpoint ` ,
updated test cases to use " folder " instead of " noop = true " in FileSortByExpressionTest and FileSortByIgnoreCaseExpressionTest to
updated log message to include task ID instead of mLastAppearedTaskTarget to improve clarity and consistency in logging information
document : add support for write image scaling information in rtf document
added aggregate function name handling in TSServiceImpl . java to improve clarity and functionality of the column name generation process
updated test classes to extend WithNestedTests instead of LuceneTestCase to improve compatibility with the latest JUnit framework framework
added functionality to select and display the X - Cap server URI in the X - Cap enable box to ensure that the X - Cap server URI is
add ` ` struts . handle . exception ' ' constant to dispatcher
added a ` stopEditing ` method to ` CodenameOneImplementation ` , ` TextArea ` , and ` AndroidImplementation ` classes to handle text editing
[ java ] fix npe in controlrate when group attribute be null .
updated method signatures and logic in ComponentConfigDialog and RocketComponentConfig to improve clarity and functionality of preset selection based on user preferences
[ juli ] add log for chat error to send message to client
added a check for Windows OS type in HTMLDataFlavorTest . java to ensure that the test is only run on Windows to ensure that the test
added SQL _ SERVER _ SNAPSHOT support to the SERIALIZABLE connection to enhance transaction isolation level handling
fix race condition in asyncwriteengine . write ( )
replace jrecompat . getinstance ( ) . jarfilenewinstance ( ) with java . util . zip . filefile . feature ( )
added null checks for commandClass before creating a new instance to prevent potential NullPointerExceptions when creating a new command
[ hotfix ] [ disk _ failure _ policy ] change disk _ failure _ policy from best _ effort to ignore
removed public access modifiers from several methods in RipperInterface . java and RipStatusHandler . java to simplify method visibility and improve code readability
[ java ] do n ' t check if abc be inet address in peer discovery agent
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner ` to streamline the code by eliminating unnecessary methods
updated imports in PinotSegmentRebalancer . java to use ClusterDataCache instead of AutoRebalanceStrategy to improve code clarity and maintain
( chore ) camel - aws2 - container : remove the deletecontainer method from camel - docker
refactor ` DefaultSeleneseCommand ` to utilize constants for argument arguments and indexing to improve code readability and maintainability by reducing
[ hotfix ] [ test ] add multipleattemptsrule to creategraaltests
[ hotfix ] use components . components _ schemas _ ref in modelresolver
replaced the ` deleted ` field with a ` source ` field in the ` EntityDeletedEvent ` class to simplify the code and improve readability by
added support for matching the " gop " variable in FormatConfiguration and updated media information handling in DLNAMediaInfoParser to ensure proper support
added a new file TestProfileReturnTypePrinting . java containing a class for testing method return types to demonstrate the functionality of the TestProfileReturnTypePrint
refactor ` ParseConfigUtils ` to use ` ReentrantLock ` for thread - safe locking to improve resource management and prevent potential memory leaks
refactor operator handling in MinMaxValueBasedSelectionOrderByCombineOperator to use AcquireReleaseColumnsSegmentOperator instead of IntermediateResultsBlock to improve
[ hotfix ] [ test ] remove @ ignore from firefoxprofiletest
updated the return type of getSystemBars method from Map < String , String > to Map < String , Map < String , Map < String ,
do n ' t add a bug to projectstats if it ' s dead
updated color handling for disabled icons in ImportPanel . java to improve user experience by providing a clearer color for disabled icons
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check to return a valid date in the ScheduledAction class and a corresponding test in ScheduledActionTest to ensure correct handling of weekly actions without
replaced the upload button click listener with a menu item to enable single uploads to enhance user experience by allowing users to click on single uploads
refactor MessageExpression - related classes to improve code organization to enhance maintainability and readability of the codebase
added loadMetaData method implementations in MeXBTExchange and RippleExchange classes to ensure proper handling of exchange metadata loading
added JSON serialization support for Writable objects in CrawlDbReader to enable proper serialization of Writable objects in the CrawlDbReader
remove testerrequest from testjaspicbasicauthenticator . testjaspicbasicauthenticator
added a new service parameter to the MDNSDiscoveryService component to enable the discovery service configuration for the DiscoveryService
added null check for messageItem before calling scrollToPositionWithOffset to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization to include ForkJoinWorkerThread in TestBPIndexReorderer to improve thread management by using a custom thread pool
removed redundant assertions for Role . DATANODE and Role . NAMENODE in RoleCommandOrderTest . java to streamline the test by eliminating unnecessary dependencies
added a method to restore local information from the table info in PartInfo . java to ensure proper handling of null tableInfo and prevent potential NullPointerException
corrected spacing in conditional statements in JvmUtils , LikeCondition , and AbstractOperationGenerator classes to improve code readability and maintain consistency
added matrix transformation and scaling to BitmapFontTest . java to improve rendering performance and ensure proper scaling behavior
added a check for built - in aggregates in StreamPhysicalPythonGroupWindowAggregateRule . java to ensure that only built - in aggregates are
[ java ] remove unused state . haspendingecho from endpointstate
add getunreachabletokenowners ( ) method to gossiper . getunreachabletokenowners ( )
[ geot - 3975 ] fix multiplication in coordmultiplication ( # 3979 )
updated contentType handling in FormAuthenticator and added getter and setter methods in SavedRequest to improve content type management and prevent potential NullPointerExceptions
updated variable declarations and added null checks for localEnv and localEnv in XToolkit . java to ensure proper initialization and prevent potential NullPointerExceptions
refactored RecommenderJob , RecommenderJob , and AbstractJob classes to improve code organization and maintainability
replaced ` Object ` with ` ReentrantReadWriteLock ` in ` EnvironmentImpl . java ` to improve thread safety by using ` ReentrantReadWriteLock ` instead of `
added a test method to verify the behavior of identity provider creation based on zone IDs to ensure correct handling of identity providers in different zones
updated job schedule method to use a new ExpireJob instance and added null check for timestamp in PointInTimeTrigger to ensure proper handling of timestamp
removed the import of the Service class from SendTicketGrantingTicketActionTests . java to streamline the code by eliminating unnecessary dependencies
send heartbeat to all broker with lock if rebalance change .
add ` ` cairo . detached . mkdir . mode ' ' configuration option to config file .
[ java ] add a pause test to ensure that the follower be stop when there be a live follower .
updated default label pattern from " authors3 " to " auth " in JabRefPreferences . java to ensure compatibility with the latest version of the
updated dependency retrieval from ` getLd ( ) ` to ` getCxxPlatform ( ) ` in ` DBinaryDescription ` and ` DLibrary
removed initialization of the ` oAuthService ` variable and added a ` dispose ` method to the ` GoogleTTSService ` class to improve code
http : / / issues . apache . org / jira / browse / amq - 2578 - fix fileconsumedonefilefile issue
added a new boolean field ` reopenReaders ` in ` SolrConfig ` and modified the condition in ` SolrCore ` to include it to enable
[ hotfix ] [ runtime ] add dialect attribute to mapwriter
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality for
added a dup method in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest . java ` to
refactored ` Condition ` to an interface and modified the ` WidgetSearchCondition ` and ` ItemSearchCondition ` classes to use a lambda expression
replaced TermQuery with ConstantScoreQuery and updated index search method to use MatchAllDocsQuery instead of TermQuery to improve performance by using a constant
removed unused java . lang . invoke classes from ConcurrentClassLoadingTest . java to clean up the code and improve readability
updated the providesUploadController method to use direct nearby upload preferences instead of context to enhance functionality by providing direct nearby upload preferences
added support for SYSDUMMY1 in the database mode and corresponding test cases to ensure compatibility with different database modes and ensure correct handling of
updated logging statements in TraceGatewayEnvironmentPostProcessor . java and added ConditionalOnProperty annotation in SamplerAutoConfiguration . java to enhance logging clarity and
add lastpid to workbookproperties . getproperties ( ) and add test for it .
[ geotiff ] fix float32 _ neg _ infinity _ nodata in geotiffreader
updated imports and refactored process logic in CliDriver . java and SessionState . java to improve code clarity and maintainability by using a
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated related method calls to use ` Scheduler ` instead of ` Executor `
added a default implementation of the ` selectByRuleIdSet ` method in ` RuleConditionMapper ` to provide a default implementation of the ` select
added a new method ` addExitDescription ` to ` ExitStatus ` and modified exit description handling in ` AbstractJob ` , ` AbstractStep `
fixed multiblock render only if entityplayer be the player .
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity and consistency in naming conventions
removed unnecessary import of Collections and replaced it with a direct call to getRangeLength ( ) to improve code readability and maintainability
updated DefaultIOSInput to use UIAlertController instead of UIAlertViewDelegate to improve alert handling by allowing customization of text fields
replaced ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java `
rename parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in naming conventions
added an assertion to verify the message of an item in the AdvServiceTest class to ensure that the message is not null before proceeding
refactor key handling in MappingMongoConverter to use potentiallyEscapeMapKey instead of potentiallyConvertMapKey to improve code readability and maintainability by
updated the formatting of Timber log statements in NearbyMapFragment . java to improve code readability and maintainability
camel - 14497 : camel - jbang - fix typo in defaultcamelcontext
updated FuzzyLikeThisQuery to handle non - existing terms and added a test for non - existing fields in FuzzyLikeThisQueryTest to
updated the ` writeApplicationsLinks ` method to include a ` tabularList ` parameter and modified the ` writeApplicationsLinks ` method to
( chore ) camel - dspace : use identifierservicefactory instead of dspace . getservicemanager ( )
replaced the use of ` bytes . length ` with ` bw . getLength ( ) ` in the ` assignBytes ` method calls to ensure the correct
removed the abstract modifier from the getDisplayScript method in LocaleNameProvider . java to simplify the implementation of the getDisplayScript method
[ java ] use sequence instead of keytopress in remotewebdriver .
pdfbox - 2576 : fix a bug in cosarraylist . getcosobjects ( list ) that cause the list to be empty .
added synchronization to wait for active interfaces in NetworkConfigurationWatcher . java to ensure thread safety when accessing active interfaces
added a new method ` getAllEmbeddedObjects ` to handle nested and nested objects in the ` HSSFWorkbook ` class to improve code clarity and
remove unused import of jogamp . common . os . elf . shdr from shadernodeloaderdelegate
changed the declaration of ` roleParams ` from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java `
pdfbox - 2576 : fix bug with symbol font in pdfbox
replace GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure proper handling of
updated LiveTvGuideActivity and ProgramListAdapter to use mCurrentGuideStart for guide start and end date to ensure accurate guide start and end
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new test classes ` CommonParentTest . java
added new library paths for " libfreetype . so " , " libfontmanager . so " , and " libfontmanager . so "
refactor functionparser to use a dummy argument for multi - variable function
[ gr - 16464 ] add guard to loop safepoint elimination phase .
added handling for ` isInstance ` and ` isInstance ` methods in ` TypeFrameModelingVisitor . java ` to improve type handling and ensure correct type
added a new ` LocalizedString ` class and modified ` Resolve ` , ` Resolve ` , and ` Resolve ` classes to utilize it to
added a boolean field ` disableClasspathSearch ` and its getter / setter methods in ` ServerConfig ` , and modified the condition in ` DefaultContainer
replaced multiple instances of ` formats ` with ` Arrays . copyOf ` for consistency to improve code readability and maintainability by using ` Arrays . copyOf
updated ` retries ( ) default 0 ` to ` retries ( ) default 2 ` in ` Reference . java ` and ` AnnotationPropertyValuesAdapterTest
added settings handling in TexturePacker . java and modified process method to include settings as a parameter to enhance functionality by allowing users to specify the settings
updated view bindings and added null checks for imagesUsedByWikiTextview in AchievementsFragment . java to improve code clarity and prevent potential NullPointer
[ hotfix ] [ runtime ] fix test failure in translatingjavacphasetracertest
added a new ` CategoryInfo ` class and its getter methods in ` MwQueryPage . java ` , and introduced ` CategoryInfo ` class
corrected the spelling of " username " and " password " to " username " and " password " in AuthzAuthenticationRequest . java to
added AccessibilityManager to manage taskbar auto - hiding timeouts in TaskbarStashController to enhance user experience by allowing customizable timeout settings
added handling for ' ^ ' characters in signature processing in GenericSignatureParser . java to ensure proper handling of NoSuchElementException during signature processing
updated access flag handling in ClassVisitorDriverFromElement and added new test cases in StubJarTest to ensure proper handling of generic interface and abstract enum
added null checks and null check for ' in ' in in ' in ' in ' in ' in ' in ' in ' in ' in '
added unit tests for the ` EntrySetIteratorLastHashNext ` and ` EntrySetIteratorLastNext ` methods in ` MapInterfaceTest . java
added a serialVersionUID field to the TreeMap class to ensure proper serialization of the TreeMap class
updated the timestamp from microsecond to microsecond in ImageData . java to ensure accurate creation time for image creation
[ grobcov ] add support for ` ` f2m ' ' and ` ` f2m ' '
added imports for EncryptionUtils and PUBLIC _ KEY in AccountRemovalJob . java to enable the deletion of private and public keys in the account
[ hotfix ] [ http ] use asynchttpclientutils . keepaliveheader instead of hardcoded value .
fix npe in postjoinmapoperation when map have no interceptor and lite member join
[ hotfix ] remove duplicate processor in standarddialect . java
remove unused spillenabled parameter from hashtable
refactor environment variable handling in EnvironmentVariableHelper . java to utilize a new method for retrieving environment variables to improve code readability and maintainability
refactored import statements in DefaultActionMapper . java for consistency and clarity to improve code readability and maintainability
added SerializableMode import and updated import statements in Mockito . java and PluginSwitch . java to improve code clarity and maintainability
do n ' t throw nullpointerexception if fieldvalue be null .
refactor isolation level handling in SQL statements and add a new method to parse isolation level clause to improve code readability and maintainability by centralizing
updated HiveConnection . java to use constants for transport mode and HTTP path to improve code readability and maintainability by using a more descriptive
added an override for the ` isCacheable ` method in ` GlobalOrdinalsWithScoreQuery ` to determine if the query is cacheable to
added a new file TestStrangeControl . java for testing strange control functionality to demonstrate the use of StrangeControl for testing
updated file paths from " % s . json " to " % s . jsfile " in JsFile . java and JsLibrary .
added selectionStart and selectionEnd fields with corresponding getters in ShadowEditText . java to enhance functionality by allowing dynamic selection settings
refactor gRPCServer method to use Closeable instead of void to improve resource management and ensure proper shutdown of the GRPC server
updated the ` use ` method in ` Jooby ` and added null checks for ` path ` in ` Router ` and ` Jooby
added a null check for fst in FreeTextSuggester . java to prevent potential NullPointerExceptions during lookup
updated string formatting and error handling in T6729471 . java and T6729471 . java to improve code readability and ensure
added a method to load abi writer class from a classloader in JavacInMemoryStep . java to enhance functionality by loading abi writer class
[ java ] suppress warning for booleanmethodisalwaysinverted
[ java ] do n ' t swallow interruptedexception in pullmessageservice . shutdown ( )
[ hotfix ] fix checkstyle violation in energyendpointer
refactored the handling of displayed columns in ComponentPresetChooserDialog to use a list of displayed columns instead of an array to improve code readability
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to streamline code and improve readability
fix switch / cases indentation in googlesheetsendpoint
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated method calls in ` CxxLibrary
deleted files Constants . java and DistanceUtils . java to remove unused files to clean up the codebase
refactor key extraction logic in RandomPartitioner to use substring instead of split to improve readability and maintainability of the code
[ gr - 13232 ] fix the build - time initialization of fallback linker .
fix rolebindingoperationsimpl . create ( ) to return inline rolebinding when create a rolebinding
added debug logging statements to UaaSessionCookieConfig . java for session cookie configuration to enhance debugging capabilities for session configuration
updated the calculation of ` fName ` to use ` cal . get ( Calendar . DAY _ OF _ YEAR ) % 10 ` instead of
updated the condition in ObservableBlockingSubscribe from ' o ' to ' v ' to ensure proper handling of the variable ' v '
added error handling for invalid Java option in JavapTask . java and created a new class T8033711 . java to provide clearer
replaced ` Collectors . toList ( ) ` with ` Collectors . toList ( ) ` in multiple Java files to improve code readability and maintain
updated logging level from error to warn and modified return logic for acquiredTask to improve error handling and prevent potential memory leaks
[ hotfix ] [ network ] add tiered storage configuration to inputgatespecutils
use isnotsuccessstatus ( ) instead of ! = success _ code
updated Cubocy application initialization from false to true in CubocDesktop . java to enableGL20 configuration for the Cubocy application
do n ' t call method . getreturntype ( ) if method . getreturntype ( ) return null
refactor OutputMacroExpander to use Arg instead of DefaultSourcePathResolver for source path handling to improve code readability and maintainability by reducing
[ hotfix ] [ test ] rename assertnojobslefteventually to assertnolightjobslefteventually
[ flink - 14486 ] [ runtime ] fix bug in mergewordslisttask ( # 1485 )
update instructorfeedbackresponsecomments . getresponsecomments ( ) and instructorfeedbackresponsecomment . getresponsecomments ( ) to use map instead of map
removed unnecessary whitespace in the conditional statement to improve code readability and maintainability
added a new file TestEscapeThroughInvoke . java containing a class TestEscapeThroughInvoke with a method to test escaping behavior to ensure proper handling of
replaced direct stream . skip ( ) with IOUtils . skip ( ) in FilePreviewService . java to improve code readability and maintainability by using
added error handling and logging for interceptor creation in ConnectionPool and JdbcInterceptor classes to improve error reporting and provide clearer error reporting for interceptors
changed the catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching a more general Throwable
[ java ] add miss check for eviction in lrublockcache . cacheblock ( )
removed the null check for taskCount in RecentsView . java to simplify the code and improve readability
added configuration change listener for the helix broker routing table in HelixBrokerStarter and updated sleep duration in HelixServerStarter to improve
added ` CoinmateStatic ` and ` CoinmateStatic ` interfaces and updated ` CoinmateExchange ` and ` CoinmateBaseService ` classes to
[ hotfix ] [ model ] improve error message for unresolvable project directory
pdfbox - 4841 : fix a bug in the coswriter . getobjectkey ( ) method
add ptransform . setdisplaydata ( list < itemspec < ? > > ) to set displaydata
replaced instances of ` new DefaultSubject ` with ` assertThat ( Object ) null ` in ` SubjectTest . java ` to improve type safety and prevent
remove jdk . certpath . disabledalgorithms property from clientjsseserverjsse
added checks for subcommand group creation and group creation in OptionData . java to ensure correct validation of subcommand groups and groups
refactor module - info . java files for consistency to improve maintainability and readability of the code
added error handling and error handling in the ensureConnection method to improve error handling and provide clearer error reporting
updated the initialization of sCheckingEvents in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to ensure proper cleanup of
refactor exception handling in FileSinkOperator to improve error logging and add close methods for writer and record writers to enhance error management and ensure proper resource
updated the return statement to include diagnostics in SchemaGenerator . java to improve debugging by providing clearer error messages when processing diagnostics
replace SemanticException with OptiqSemanticException in SemanticAnalyzer . java to improve error handling by using OptiqSemanticException instead of RuntimeException
refactor DataSourceMonitorTests class to improve test coverage to enhance code readability and maintainability
added a set of loaded resourcePaths and modified the loop to include it to ensure proper handling of resource paths in the scanning process
added null check for testInstance and improved error logging for service initialization failures to enhance robustness by preventing potential NullPointerExceptions during service initialization
added null check for response and modified response handling logic in RoutingInBoundHandler . java to improve robustness by preventing potential NullPointerExceptions
added natIp field to EkeyConfiguration and updated logger warning messages in EkeyUdpPacketReceiver to include it to enhance debugging capabilities by providing
updated imports and replaced ` io . netty . buffer . BaseAllocator ` with ` io . netty . handler . codec . http . HttpObject
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added null checks for header buffer and body buffer in HttpConnection and created a new test for Expect : 2 with body in RFC2616BaseTest to
refactor subscription handling in MultiTimeout to use AtomicReference and AtomicLong instead of Flow . Subscription to improve code clarity and maintainability by using AtomicReference and AtomicLong
[ hotfix ] [ table - planner - planner - java ] improve performance of leveledmanifest . getsstables
added a test annotation to TestOrcTimezone1 . java to mark the test as a test case
refactor code to use a new method ` findMatch ` for better readability and maintainability to enhance maintainability and maintainability of the code
added error handling for JSON serialization in PinotSegmentRestletResource and refactored return statements in TraceContext to improve code clarity and maintainability
updated JTable . java to handle null column class and added a new test class Test6888156 . java to ensure proper handling of null values
added a check for the existence of the SHELL environment before adding it to the args to ensure that the SHELL environment is only added
updated the deleteWithoutSubscriptions method from 10 to 1 in DatabaseCleaningService . java to ensure the correct subscription is deleted based on the current
replaced LinkedList with LinkedHashSet for testInstances in MockitoExtension . java and added a new test case in JunitJupiterTest . java to improve
refactor FieldMonitor class to improve code organization to enhance maintainability and readability of the code
removed the deleteFilesAfterClose ( ) method from BTreeMapTest . java to simplify the code and improve readability
modified the iterator initialization logic in SortedIntList . java and added a new test class SortedIntListTest . java for testing to ensure
added unregistering of the object name in DefaultRemoteProxy and removed the stack trace in JMXHelper to improve error handling by removing unnecessary stack trace
[ hotfix ] [ rocksdb ] change default writebuffer size from 4mb to 64mb
removed the ' true ' parameter from the constructor of ' Style . java ' to simplify the constructor by removing unnecessary parameters
updated the method call from ` addArgument ` to ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure that the message is
[ hotfix ] [ samza ] remove dead code in samzarunner
use mouseinput . left instead of vector3f . zero in helloaudio . java
fix typo find by codespell on fossies . org
added TypeInformation parameter to convertToMongoType methods across multiple classes to enhance type conversion functionality by allowing customizable type information
[ ggb - 232 ] fix inputbox rendering of imaginary unit .
( chore ) camel - selenium : fix typo in sendkeytoactiveelement
added methods to get and reduce BufferedImage instances in AddAndScaleMultiImage . java to enhance image rendering capabilities by allowing negative target sizes
removed the ` extendArgumentCheck ` and ` extendWrapStore ` methods from ` DBMaker . java ` to streamline the code by eliminating unnecessary
add a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to ensure the shift state is updated for better user experience
removed the DETECTED _ ACTIVITY constant and updated its usage in CSVFileLogger and CustomUrlManagerTest to streamline the detection process
updated imports from ` extensions . ExtensionConfig ` to ` protocol . ExtensionConfig ` across multiple files to align the package structure with the new package
removed the import of Buildable from AaptPackageResources . java to streamline the code by eliminating unnecessary dependencies
[ java ] add comment about unused start _ pc , start _ pc , end _ pc , and unused descriptor _ index
updated the error message for invalid upgrade protocol in WebSocketUpgradeHandler . java to provide clearer context on the status of the upgrade protocol
removed unnecessary whitespace in blockMode assignment to improve code readability and maintainability
refactor Mockito class implementation to improve code readability and maintainability
refactor permission checks in Merge . java for clarity to improve readability and maintainability of the code
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpRequest , and Response classes to streamline the implementation of the getConversationID (
updated imports in DummyFreeTTSVoice . java and DummyFreeTTSVoice . java to use unitselection instead of freetts to
updated the ` stripQuotes ` method in ` BaseSemanticAnalyzer ` and ` PartitionSpec ` classes to use ` PlanUtils . stripQuotes
updated the ` updateRendering ` method in ` DLNAResource ` to accept a ` RendererConfiguration ` object instead of a ` Rendering `
added a list of remote artifact repositories to the DefaultPluginManager class to enhance the management of resolution and remote artifact repositories
camel - 14497 : camel - cxf - test - jaxrs should close the applicationcontext on test failure .
refactor PhysicsClient class implementation to improve code readability and maintainability
added JUnit ` @ Ignore ` annotation to ` SessionTest . java ` to temporarily disable tests due to frequent failure scenarios
added initialization of a new File instance in ZipFile . java to ensure the file is initialized with the specified name
added a deprecated method ` handleAll ( ) ` that returns ` finallyBlock ( ) ` in the ` TryType ` class to indicate that the
[ hotfix ] [ core ] make channel uid non - null by default .
added logging functionality to GenericDAOImpl and modified ForumServiceImpl and ForumServiceImpl to utilize StackTraceUtils for logging stack traces to improve
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the code and improve readability
refactor unparse logic in FunDefBase , ParenthesesFunDef , and BasicQueryTest classes to handle multiple arguments more effectively
refactor config selection logic in CheckDatabaseHelper to use Multimap for consistency and clarity to improve code readability and maintainability by utilizing a
rename ` supressWarnings ` to ` suppressWarnings ` in ` UnsafeAutomaticSubstitutionProcessor . java ` to improve clarity and consistency in naming convention
updated JsonTreeReader to handle unexpected JSON elements and added a new test for nextJsonElement in JsonElementReaderTest to improve error handling and ensure
added a new option ` withDashArguments ` to ` TestCommand ` and a test for extra arguments in ` ExternalTestRunnerIntegrationTest ` to enhance command
added ` dedup ` and ` indexSolr ` methods to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality by
[ hotfix ] [ table - planner ] add support for blink planner in streamsql example
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is cleared before proceeding
fix a bug in progress . setrenderpercentageontop ( ) and add a dispose ( ) method to dispose ( ) .
added a check for the existence of the parent file in the PathResource class to ensure that the parent file does not exist before proceeding
added multiple overloaded methods to write and close POIDocument objects to ensure proper resource management and prevent potential memory leaks
[ java ] print runoptions and exportclasspath in javabuild . java
replaced Box with BlockBox and added getter methods for root and dot per point in ITextRenderer . java to enhance the functionality of the IText
added custom user search query handling in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance user authentication
added support for default port configuration in the Netty HTTP server to enhance the application ' s ability to configure default ports in the router
updated status handling in SnmpTargetHandler and related tests to use verifyStatus ( ThingStatus . UNKNOWN ) instead of waitForAssert to ensure proper cleanup
add instructor permission check to edit session in instructor edit page
added @ Incubating annotation to AvailableSettings . java to mark the class as deprecated since version 6
refactor path resolution logic in FileResolverImpl . java and add a new WarFileResolverTest . java file to improve file resolution logic and ensure
updated the format of newFlushedSize in DocumentsWriterPerThread . java to include docstores to enhance readability and maintainability of the
updated DIRT block output to use getUnlocalizedName ( ) instead of func _ 149739 _ a ( ) to improve clarity of
do n ' t strip whitespace x / y if we do n ' t do anything
increased the number of threads in the FeedRefreshUpdater ' s lazyWeakLock initialization from a fixed number to a dynamic value of 1000 to improve thread
updated the ` deserializeFrom ` method to use ` exactSearch ` instead of ` false ` in ` TsFileSequenceReader . java ` to
removed unnecessary parameters from the makeResultFromDelimitedString method in CSVSaveService . java to simplify code by eliminating unnecessary parameters
added a dimension to the pane in NavigationShareTab . java to adjust the pane ' s size based on the FList ' s dimensions
updated BeiderMorseFilter and TestBeiderMorseFilter to use State instead of OffsetAttribute and added a test for KeywordAttribute
refactor UpnpHandler , UpnpRendererHandler , UpnpEntryQueue , and UpnpEntryQueue classes to improve code organization and maintainability
fix a bug in the lenswarp . setcollidedat method of lenswarp . setcollidedat
added a new method ` toJson ` toJson ` in ` JsonTest . java ` and modified imports in ` JsonTest . java `
refactor MutableContextDataSupplier class for improved performance to enhance performance and readability of the code
updated exception handling to catch a more general Throwable instead of a general Exception to improve error handling by providing more informative logging for server errors
added a https parameter to the KubernetesMockServer constructor in KubernetesServer . java to enhance the mock server ' s functionality
use unarymathoperation . computestamp instead of graph . graph ( ) in defaultjavaloweringprovider .
updated response status codes from METHOD _ NOT _ ALLOWED _ 405 to METHOD _ NOT _ ALLOWED _ 405 and modified test assertions to
tika - 132 : use locale . us for lat _ long _ format in tika - tika - tika - metadata
replaced throw statements with rsp . setException in ShowFileRequestHandler . java and added a new test case in ShowFileRequestHandlerTest . java to ensure
added try - catch functionality to ` ReflectorClassWriter ` for handling Throwable exceptions to enhance error handling by allowing the use of ` TryCatch `
added clamp method to Vector2 and implemented clamp method in Vector2 to enhance functionality by allowing clamping between min and max values
added OAuth2 authentication handling in ChainedTokenGranter . java to ensure correct access token creation based on client scope
refactor BC _ instanceof class to improve code readability to enhance maintainability and readability of the code
added a static final Logger instance and removed the setSaveFlags ( SAVE _ ALL ) method from EditorBottomSheetBehavior . java to streamline
updated JUnit imports and annotations in UaaUrlUtilsTest . java to use JUnit 5 instead of JUnit 4 to ensure compatibility with
hhh - 16464 - fix nativequery . addscalar and nativequery . addscalar ( ) to use basicdomaintype
added a WeakHashMap for managing Font2D attributes and updated return logic in SunLayoutEngine . java to improve thread safety and maintainability of the code
use intarraylist . instancesize instead of intbigarray
[ hotfix ] [ webdriver ] use sessionid instead of sessionid in webdriver
refactor BrokerRequestUtils to improve code readability to enhance maintainability and readability of the code
refactor InjectorBuilderImpl to use a map for injectablesSet and add reversed order to improve code readability and maintainability by central
replaced usage of ` getAbsolutePathToBuildFile ` with ` getBasePath ( ) ` in ` BuildTargetToRawTargetNodeTransformer . java ` to
modified the initialization of the result variable to handle null values more gracefully to improve robustness by avoiding potential NullPointerExceptions
do n ' t remove packet listener from parent provider if it do n ' t exist
corrected a typo in the DEFAULT _ LOAD _ FACTOR constant in IntHashSet . java to improve code readability and maintainability
added ` getAllDataTypePhysicalVariations ( ) ` method to ` VectorizationContext ` and updated related classes to utilize it across multiple classes to
move htmlAssetTranslator and stringsResourceTranslator from com . google . zxing to com . google . zxing . client . j
refactor conditional logic in OverviewState . java for improved readability to enhance maintainability and maintainability of the code
added the @ Entity annotation to BaseActivityEventEntity . java to indicate that the entity is an entity entity
added tracing functionality to NavBarSwipeInteractionHandler and TouchInteractionService , and changed SYSTEM _ TRACE to false in TraceHelper to improve traceability
added a new file ` InvalidOptions . java ` to test Java program options to ensure proper error handling and error reporting for invalid Java program options
added a check to ensure supported bounds are not equal to the size of supported bounds in DisplayController . java to improve error handling and provide clearer
refactor ` getClientIdAndClientSecret ` method to use ` OAuthUtils . getClientIdAndClientSecret ` instead of ` OAuth20Extractor `
changed the default value of ` _ unwrapServletException ` from false to true in ` ErrorPageErrorHandler ` , ` AsyncContextTest ` , and `
set status to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure proper handling of shortcut info updates
camel - 14497 : camel - seda - add test for default unbounded queue size in camel - seda component
added batchUpdateStart and batchUpdateEnd methods to Kernel . java and App . java to enable batch update functionality in the application
added HttpClient configuration to ThirdEyeApplication to enable customizable HTTP client configuration in the application
added Sort support to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enable sorting functionality for job instance fetch requests
updated the handling of the cancelCryptoFacilitiesOrder method in CryptoFacilitiesTradeService to use OpenOrders and CurrencyPair
do n ' t hide keyboard when click in algebra view
refactor memmove method to use NativeFunctionHandle instead of a hardcoded int to improve code readability and maintainability by centralizing mem
removed unnecessary whitespace in BindLdapAuthenticationHandler . java to improve code readability and maintain consistency in formatting
added a blockToolTip property and its getter / setter methods in ToolTipManagerW . java and updated ModeToggleMenu . java to use it to control the
updated DefaultDateTypeAdapter and GsonBuilder to include a timeStyle parameter and modified related constructors and methods accordingly to enhance date formatting capabilities for better
updated playerSet string formatting from " UID : " to " ( " ) " to improve readability and maintainability of playerSet
added a check for an empty list before returning it to avoid potential NullPointerException when the list is empty
[ hotfix ] [ runtime ] handle commandexception in Parametriccallable
updated the ` getLikeExpression ` method to include a ` isLike ` parameter and modified related logic for handling regexp expressions to enhance functionality by allowing
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementations in NativeStreamSupplierComponentImpl to enhance functionality for starting and
updated the runChild method in LuceneTestCase to set the default locale based on available locales to ensure consistent locale management during test execution
refactor multiple SSL - related classes to improve consistency and readability to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating context handler
added a new test method ` testRouteBuilderRef ` to ` OSGiBlueprintTestSupport ` to verify the functionality of the ` build `
replace ` assertEquals ` with ` assertTrue ` in ` TestExecuteStreamCommand . java ` to use ` contains ( ) ` instead of ` substring (
refactored the ` returnTypeSubstitutable ` and ` returnTypeSubstitutable ` methods in ` Types . java ` to
added throttlingType enum and modified processThrottled method to utilize it to improve flexibility in processing throttles based on the throttle type
removed unnecessary variable assignment in ColorBleedEffect . java and added conditional check in SpriteBatch . java to improve code readability and ensure
refactor Annotation and AnnotatedElement classes to improve code organization to enhance maintainability and readability of the code
added a new interface ` Model ` to the ` org . apache . poi . hssf . model ` and modified ` Sheet `
camel - 14447 : camel - http - filter should use camel _ filter _ pattern instead of camel _ filter _ pattern
added a ` clearEntityManager ` property and its getter / setter methods to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes
added null checks for ` info ` in ` InstallShortcutReceiver ` , ` Launcher ` , and ` Workspace ` classes to improve error handling and
[ hotfix ] [ table - planner - planner - planner - planner - planner - core ] set default value to true
updated exchange names from " btc - e . nz " to " wex . nz " in WexExchange . java to reflect
added null checks for columnReaders and reader in OrcEncodedDataConsumer and added null checks in EncodedTreeReaderFactory to prevent potential NullPointer
added null check for segments in SegmentInfos . java and implemented a test for opening a file in TestIndexReader . java to ensure proper error handling
[ flink - 14486 ] [ test ] fix test that fail on window .
refactor BigDecimal return statement to use a variable for percentage value to improve readability and maintainability of the code
updated limit checks from ` < 1 ` to ` < = 0 ` in ` RangeInputStream ` , ` RangeReader ` , and ` RangeReader
camel - 14497 : camel - route - configurer should print duration when load route
[ java ] fix bug in getnextchunk ( ) and getnextchunk ( )
refactor NumericRangeFilterBuilder , NumericRangeQueryBuilder , and NumericRangeQueryBuilder to extend LuceneTestCase instead of TestCase to improve code organization and maintainability
[ hotfix ] [ runtime ] set next input for streamoperatorstate in statefuloperator
removed null check for fill before setting bitmap shader shift in Area . java and Line . java to simplify code and improve readability
removed the dbExists method and updated related imports in Blockchain . java and BlockchainTest . java to streamline database existence checks and improve
trim whitespace from the group value in SQLPlusSupport . java to ensure proper handling of whitespace before processing
set async socket to false in Http11AprProtocol . java to ensure proper handling of asynchronous socket operations
[ flink - 24486 ] [ layout ] remove redundant code in docksplitpane
added HEALTHCHECK _ OK _ CALLS and HEALTHCHECK _ BAD _ CALLS metric to ControllerMeter and Pinot
set the visibility of shared avatars to GONE in LocalFileListAdapter to improve user interface responsiveness
move scss from clientbundle . scss to scss . scss
[ java ] fix checkstyle violation in java . nio . file
added logging level check for command execution in LogInterceptor . java to ensure proper execution of commands based on logging level
replaced CountDownLatch with assertWaitUntil for span finishes in EventBusTracingTestBase . java to improve code readability and maintainability by using assertWaitUntil
updated the ` QueryParser ` class to use ` Locale . getDefault ( ) ` instead of ` Analyzer ` to streamline the parsing process by
use linkedhashset instead of hashset in entrycustomizationdialog .
do n ' t try to add a rule to the ruleset if it ' s a betanodeconstraint .
added a new class ` OcspUnauthorized ` and modified ` OCSPResponse ` to include a new ` OcspUnauthorized ` class
added a volatile serverState variable and modified sleep duration in SSL . java to improve server state management and ensure proper failure handling
added a new constant ` COUNTER _ OPEN _ CONNECTION _ COUNT ` and updated related methods in ` SourceCounter ` , ` SourceCounter
add interfacetype . fields ( list < field > ) method to interfacetype
refactor ` createDefaultJavaPackageFinder ` method to return ` ImmutableSet < String > ` instead of ` ImmutableSet < String > ` to improve code
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve performance by using ` PrintWriter ` for output output output
[ hotfix ] [ test ] fix filesourcetextlinesitcase to use uuid
added support for DataTable in JRubyStepDefinition to enhance the handling of DataTable instances in the step definition
[ http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42377 ] fix
refactor ReadSentimentDataset class to improve code organization to enhance maintainability and readability of the code
updated error message formatting in FormulaParser . java to provide clearer context for error parsing to improve clarity of error messages for better debugging
added getter and setter methods for the socket bind address in WebSocketClient . java to improve code readability and maintainability by encapsulating socket
[ java ] fix checkstyle violation in studiomoduleharness . java
refactor width and height assignment logic in WidgetGroup . java to improve readability and maintainability of the code
make sessionfixation attribute return a boolean instead of a boolean .
updated the switch statement to use ` edgeOption ` instead of ` params [ 1 ] ` in ` LALogicLinesFragment . java ` to improve
updated backoff handling in ChromeBinary and added resetBackoff methods in ChromeDriver to improve backoff management and ensure consistent backoff behavior
added method and route attributes to ClientResponseWrapper and related classes to enhance the handling of HTTP requests in the application
updated the initialization of the ColumnFamily variable in PrecompactedRow . java to use a default value of Integer . MIN _ VALUE to ensure consistent
updated return values in ICC _ Profile , ColorConvertOp , and ColorConvertOp classes and added a new InvalidRenderIntentTest class to ensure correct
add ` ` isnotsureallowed ' ' option to contribute question
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] remove serializable from kafkarecord
added support for PGConnection in PooledConnectionImpl and created a test for it in BaseDataSourceTest to ensure proper connection handling and ensure proper resource management
refactor PropertyTable and CloseIgnoringInputStream classes to improve code organization to enhance maintainability and readability of the code
updated logging statements in TokenAuthenticationHandler . java to use a more descriptive log message for no token encryption secret to improve clarity of logging and
[ hotfix ] [ hazelcast ] remove deprecate method from hazelcast . java
updated the handling of UNLIMITED _ KEY _ JCE _ REQUIRED in AmbariManagementControllerImpl and added a method to send topology
added ITERATOR and END handling to NamedListCodec and updated related methods to improve handling of iterators and enhance code readability
added null check for state before assigning new partitions to avoid potential NullPointerExceptions when state is null
added a InclusionRule to the ApiExample options to enable schema inclusion in the API example
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to correct the expected value for the mean
updated coordinate sequence handling in SDO . java and added new test cases in SDOCreateTest . java and SDOCreateTest . java to
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to provide access to the base name and
add a method to set the debug evaluation output for next evaluation in FormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes to provide a
test : use junit 5 instead of junit 4
removed the ' false ' parameter from the ExoPlayerProfile initialization in LegacyMediaManager . java and added a condition in PlaybackController . java
added a return statement to the DynamicStyleBar class to improve code readability and maintainability
added SLF4J logging statements in Utils . java to track database property updates to improve logging clarity and maintainability of the code
refactor ReactiveAuthorizationManager class to improve code readability to enhance maintainability and readability of the code
added a check for boolean type in the MethodEmitter class to ensure compatibility with boolean type handling
fix nullpointerexception in llvmstackframenuller . nullify ( )
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add a new test class ` CaffeineCacheDefaultConfigurationTestSuite ` for verifying transaction - aware cache manager proxy to ensure that transaction - aware
added a method to calculate the bounding box in the Mesh class to provide a way to calculate the bounding box based on the number of vertices defined
added a new ` TargetHashFunction ` enum and updated ` Hasher ` usage in ` TargetsCommand . java ` to utilize it to
rename DefaultConfigurationProperties class to improve clarity to enhance code readability and maintainability
added arrow color and alpha settings to ListViewMultiChartActivity and adjusted highlight paint color settings in BarChart to improve visual consistency and ensure correct rendering of
added a call to pgSgPathPlanMap . put ( tmpPg , sgPathPlanMap ) in ClusterPlanRouter . java to
[ hotfix ] [ test ] fix flaky test infinispanremoteproducerit
added locking mechanism in MavenArtifactFetcher and refactored MavenDependencyResolver to use a more efficient locking mechanism to improve resource management and ensure
updated fragmentShader to include " # ifdef GL _ ES " in SpriteBatch . java to enhance rendering capabilities for GL _ ES rendering
changed the return type of the ` getServers ` method from ` SortedSet < Address > ` to ` Set < Address > ` in multiple classes to
added error handling for JspPage class loading in TagLibConfiguration . java to improve robustness by handling potential exceptions during tld processing
updated CustomAnalyzer and TestCustomAnalyzer to use DummyVersionAwareTokenFilterFactory for token filtering to enhance token filtering capabilities for better token handling
added a new test method to ` ShadowPackageManagerTest ` and modified ` ShadowPackageManager ` to check for the existence of ` ArchiveInfo ` to ensure
replaced direct calls to ` invoke ` with ` MethodUtil . invoke ` and added package access checks to enhance method invocations and ensure proper package access
added a new method ` progressUpdateTypes ( ) ` to the ` GradleBuildService ` class and modified the ` Main ` class to include
removed synchronized block from AndroidWebDriver . java to streamline synchronization process by eliminating unnecessary synchronization
[ hotfix ] [ runtime ] do n ' t set initializationfailfast by default .
http : / / issues . apache . org / jira / browse / amq - 4078 - add miss error method
changed the ` isNative ` field from transient to transient and modified its usage in the ` addEntry ` method to ensure that the ` isNative
corrected the formatting of the exception message in CEntryPointCallStubMethod . java to improve code readability and maintainability
rename ruleenablehandler to ruleenablementactionhandler instead of ruleenablehandler
[ java ] fix checkstyle violation in javadoc
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of debug messages for better debugging and clarity
updated method names from ` getBasicSourceOptions ( ) ` and ` getBasicSinkOptions ( ) ` to ` getBasicSinkOptions ( )
added null check for repository and improved error handling in UsersPanel . java to enhance robustness by preventing potential NullPointerExceptions during repository retrieval
added support for additional font names " . otf " and " . OTF " in the SunFontManager class to ensure compatibility with other font
refactor type matching logic in AnnotationMatcher . java for improved clarity and consistency to enhance code readability and maintainability by using a more descript
changed the default value of " OFF " from " OFF " to " SEVERE " in Grep . java to improve clarity and consistency in
added a conditional check before logging debug statements in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when logging is enabled
[ hotfix ] [ test ] use list . size ( ) instead of list . add ( )
added a check to prevent moving the default screen on the home intent if it is already open to ensure that the home folder is moved to the default
updated the maximum bitrate from " 110 " to " 30 " in the configuration to increase the maximum bitrate from 110 to 30
removed the ` getOptions ( ) ` method from the ` CommandLineParser ` class to simplify the code and improve readability
trim whitespace from the description in MutableDatabaseProperty . java to improve code readability and maintainability
updated the file path construction in XOMParserTest . java to ensure consistent file path formatting
removed the process . pid ( ) from the error log message in ProcessBesuNodeRunner . java to simplify the error logging by removing unnecessary pid
added ` getLoadedMusic ` and ` getLoadedSound ` methods to ` MusicLoader ` and ` SoundLoader ` classes to provide access to the
removed unnecessary imports and updated type casting in OnBeanCondition . java to streamline code and improve readability
added ScreenRecordRule import and annotation to RequestPinItemTest . java to enhance test coverage for screen recording functionality
do n ' t select lrpause button if it ' s null
replaced ` PreferenceMultiline ` with ` mAccountsPrefCategory ` and refactored preference handling in ` Preferences . java ` to streamline
corrected a typo in the ` sendPresence ` method call in ` XMPPConnection . java ` to improve code readability and maintain consistency
refactor StringBuilder initialization to use a maximum capacity based on utflen to ensure proper initialization of StringBuilder based on its value
disable statsd in webendpointsautoconfigurationintegrationtests by default
refactored InterruptedException class implementation to improve code readability and maintainability
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the code
refactor ConnectionCheckOperation to use a boolean variable for better readability and maintainability to improve code clarity and maintainability by reducing duplication
[ java ] use map . class instead of string . isstring in argumentarraymessagemapper . canconvert ( )
solr - 13232 : fix a bug in solrservicecomunitycollectionitemfilterplugin and add a test for it
added a FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to the intent in PasscodeManager . java to improve user experience by
remove deprecate annotation from patternparameterconfigurator
changed the return type of ` beginDraggingWidget ` method from ` void ` to ` boolean ` and added a null check for the drawable to
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root in DynamicStyle . java to prevent potential NullPointerExceptions when root is null
[ hotfix ] [ test ] add test for confusion matrix .
[ java ] remove unnecessary call to putnextresult from threadcontext . getvariables ( )
added unit tests for Bluetooth headset functionality in ShadowBluetoothHeadsetTest . java to ensure correct handling of connectivity and connection states in Bluetooth
[ hotfix ] rename propertybindingsupport . bindproperty to propertybindingsupport . bindproperty
added " clone " to the list of object methods and introduced a new constant FINALIZE _ METHOD in ResultObjectProxy . java to enhance the
added null checks for counters in IntegrationTestBigLinkedList . java to improve robustness by preventing null pointer exceptions
[ java ] add support for objectreference . referencing _ objects . id ( ) in jdwp
updated the SAMLIdPServicesManagerRegisteredServiceLocator to include serviceId in the filter condition to ensure that the service ID matches the service ID
added a null check for the activity before executing the Runnable in PhotoFragment . java to avoid potential NullPointerExceptions when the activity is not initialized
corrected the spelling of " LOGGER " in multiple files to improve code readability and maintain consistency in the codebase
added stringType property and its getter methods in DatabaseAdaptor and JDBCSessionDataStore classes to enhance flexibility in handling string types in database operations
updated assertions in UIMAUpdateRequestProcessorTest to use " suggested _ category " instead of " language : english " to improve clarity and consistency in
refactor thread name handling in multiple classes to use a unified updateThreadName method to improve code readability and maintainability by centralizing thread name
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the code
[ triso2200 ] [ dmn ] do n ' t evaluate all dmn if negative .
update splashprogress . defaultenabled to true on macos
added tooltip for the showCGCP checkbox in RocketPanel . java to enhance user experience by providing a more descriptive tooltip for the
refactor EnumFactory and InterfaceFactory to use addType instead of getTypes in EnumFactory and InterfaceFactory to improve code clarity and maintainability by
add text and description to the hotreload action
rename ` ` issheetlabelsimple ( ) ' ' to ` ` hassheetlabel ( ) ' '
change the value of BRIGHTNESS _ FACTOR from intValue ( ) to doubleValue ( ) in BindingConstants . java to ensure accurate calculation of
[ sscm ] do n ' t add to branch if there be no branch in the history .
added an ` isAdmin ` parameter to the ` createUser ` method in ` HomekitAuthInfoImpl ` and modified the user creation logic to
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in ` IndexedPropertyDescriptor ` , ` Introspector ` , and ` PropertyDescriptor `
updated debug logging format from ` % s ` to ` { } ` in ` DynatraceExporterV2 . java ` and ` Dyna
corrected the spelling of " runnable " to " task " in multiple files to improve code clarity and maintain consistency in naming conventions
change mixinitem . setcapabilitiesfromspongebuilder to deserialize capabilities from nbt
updated the assertion in LifecycleUtilsTest from " default " to " binding2 . getExecutionId ( ) " to ensure the correct execution ID is
added validation for creating second contracts in Wallet . java and improved contract creation in GetContractServlet . java to ensure that only one contract is created
added new package - info . java files to the com . ibm . dtfj . image , dtfj , and virtualization . management
removed synchronization from the ` add ` method in ` DocumentsWriterDeleteQueue ` to simplify the code and improve performance by avoiding unnecessary synchronization
added a HashSet to ignore duplicates in JavadocTool . java and modified test arguments in T7091528 . java to improve file handling and
change the default value of STRIP _ IPV6 from " true " to " false " in the HostPort class to ensure that the IP
added parameterNames to the LoginServerTokenEndpointFilter constructor and modified loginInfo handling to include a list of parameters to enhance the authentication process by allowing
added language check for C _ KEY in LanguageFactoryTest and updated language comparison logic in LanguageFactory to ensure correct language handling and improve accuracy in language
replaced the usage of ` ThreadPoolExecutor ` with a new ` MoreExecutors . newSingleThreadExecutor ` in multiple files to improve code organization and
added cache control header and updated response handling in LoginService and FormAuthenticator to ensure proper handling of cache - control and expiration dates
updated error logging to include the original exception message to improve debugging by providing more context on the error message
replace AllHSSFUtilTests with TestAreaReference , TestCellReference , and TestRKUtil in HSSFTests and TestEmptyDocument
refactor FetchHTTP2Test , FetchHTTPTestBase , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output file before retrieving the class directory to avoid potential NullPointerExceptions when output is null
added external resource control priority for before and after actions in Java2DRenderer to ensure proper access control for external resources
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure proper error reporting for JDK rendering issues
changed the ` mbean ` variable to be ` final static ` and modified the ` main ` method signature to include a new method ` testCPUTime
updated conditional checks in TabsAndIndentsVisitor to use getComments ( ) . isEmpty ( ) instead of getLastWhitespace ( ) . contains (
updated assertions in SimDistribStateManager and TestTriggerIntegration to use maximum values of 100 instead of a fixed value to improve clarity and accuracy of
updated equality checks from ` equals ` to ` equalsIgnoreCase ` across multiple classes to ensure consistent comparisons for changeSet IDs and IDs
removed the ` getString ` method from the ` ShadowBundle ` class to streamline the implementation of the ` getString ` method
added locale - specific date formatting to the TweetActivity to enhance user experience by allowing specific date formatting based on the current language
added a check to return an empty list if the connections list is empty to prevent potential NullPointerExceptions when no connections are available
refactor focus handling in DetailFragment to use a dedicated requestFocus method to improve code readability and maintainability by encapsulating focus management
set extra class path if it contain ` ` file : / / ' '
ggb - 132 solve ( matrix , matrixforsolve ) do n ' t copy the matrix if it be n ' t necessary
added import statement for Message class in GenericMessage . java to improve code clarity and maintainability
refactor SQL query construction to use a new ` join ` method in ` TaskAttempt ` to improve code readability and maintainability by centralizing
updated filter selection logic in AquaFileChooserUI . java to check if a filter is not already selected to improve user experience by ensuring the filter
[ java ] fix checkstyle violation in p2ptransportmanager . java
[ flink - 45380 ] [ runtime ] fix arrayptg . toformulastring ( ) to return true instead of false
updated import statements in PGtokenizerTest . java to improve code readability and maintainability
refactor variable handling in Java2TypeScriptTranslator to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy
added sequence creation and default nextval statement to SQL statements in AddAutoIncrementChange . java to ensure proper handling of auto - increment columns in Post
updated byte reading logic in DataInput . java to use negative values instead of 127 to ensure correct handling of negative values and improve readability
removed duplicate assertions for dimensions in ImageParserTest . java to streamline the test by eliminating unnecessary assertions
updated the method call from ` getParent ( ) ` to ` getParent ( ) ` in ` Component . java ` to ensure the correct parent is assigned
updated import statements in multiple Java files for consistency to improve code readability and maintainability
replaced ` ENGINE _ finish ` with ` ENGINE _ free ` in ` NativeCryptoTest . java ` to improve clarity and consistency in engine
added a start variable and refactored event firing methods in InterleaveControl , CounterConfig , UserParameters , and IterationListener classes to improve
removed unnecessary casting of message to HttpContent in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent potential
added a call to deleteLogs ( ) in TestRecovery . java to ensure that logs are deleted in the recovery process
added a check for " twitter : / / " before loading the URL in BrowserActivity . java to ensure that the URL is only added when "
[ hotfix ] [ test ] await host status in deploymentgrouptest
updated logResult method from false to true in VisibilityController . java to enable logging of the list labels allowed
updated logging level from 0 to 25 in RestTemplateRetryTests . java to increase maximum auto retries from 0 to 25
removed a print statement from StandardTypeMapperComponent . java and added overridden annotations in StandardTypeMapperComponent . java to streamline the code and improve
added support for a new ` FRACTION ` resource in the ` ResourceHelper ` class and integrated it into the ` Converter ` class to enhance
added a check for file write confirmation in BasicFrame . java to ensure proper handling of file writes in the application
added assertions for tag groupId and artifactId in findNewerDependencyVersion method to ensure correct handling of dependencies and dependencies
hbase - 15263 addendum add a test for quotaexceededtable quota in namespace auditor
refactor multiple attribute classes for consistency and clarity to improve maintainability and readability of the codebase
refactor TestFuzzPreLoop . java for improved readability to enhance maintainability and clarity of the code
added a check to set the value of f0 to 0 if it is less than 0 to ensure that the value is non - negative before proceed
added null checks for ` pkColumn ` and ` fkColumn ` before adding them to the database connection to improve robustness by preventing potential NullPointerException
[ hotfix ] remove unnecessary clearencoders ( ) method from inputbuffer .
added logic to check if empty pages are allowed in the Lawnchair preferences to enhance user experience by allowing users to specify an empty page
added a warning log for deprecated cucumber - needle in NeedleFactory . java to indicate that the use of deprecated cucumber - cdi2 or cucumber
refactor ShadowThemeTest and ShadowArscAssetManager to use Resources . Theme instead of TestActivity . TestActivityWithAnotherTheme to improve
updated error messages in VerifyFast . java to use ` Arrays . toString ( ) ` instead of ` String . toString ( ) ` to improve clarity
[ hotfix ] [ table - planner - v2 ] remove dbmigration from ehistory2
added new functions for ` getProto ` and ` SETPROTOCHECK ` in ` ScriptObject ` and updated references in ` ScriptObject ` to
added a random ( ) method to the shuffle method in TestFilterDirectoryReader . java to ensure that the readers are properly shuffled to a random
added conditional logic to retrieve the name of the remote clarification based on the user name to enhance user experience by providing a more descriptive
updated path formatting in CookieRetrievingCookieGenerator to use StringUtils . defaultIfBlank for better readability to ensure proper handling of blank paths
removed unnecessary closing braces in Jvm and AttachModel classes to improve code readability and maintainability
[ hotfix ] [ table - planner - core ] use total backup count instead of backup count .
updated comparison logic in ValidationResult . java to use ' ve . pageNumber ' instead of ' pageNumber ' to ensure correct comparison of pageNumber
added a null check for the focusedWidget in the UIDropdown condition to prevent potential NullPointerException when highlighting the focused widget
updated method signatures in SoundUtil . java for consistency to improve code readability and maintainability
refactor ApplePackageDescription and related classes to use a new method for retrieving AppleCxxPlatformDomain to improve code readability and maintainability by
[ hotfix ] [ table - planner - planner - planner - planner - planner - planner - java ] fix test
corrected the spelling of " onConnect " to " onAccept " in ServerSessionListener . java and AbstractHTTP2ServerConnectionFactory .
refactor EnglishPTBTreebankCorrector class for improved clarity to enhance maintainability and readability of the code
added a new file TestGetLoggerNPE . java to test the logger functionality to verify the functionality of the Logger class to ensure that the logger
added a new method ` getData ( ) ` to ` PathSharingContext ` and updated its usage in ` ScriptedProcessor ` , ` Scripted
[ gr - 16464 ] fix casting of static object to object [ ] .
added support for " NEXTVALVAL FOR " and " NEXTVALVAL FOR " in NextValExpression and ExpressionDeParser classes to enhance
add more info to vmerror . unsupportedfeature error message
updated the handling of write buffers in BoundedLocalCache and added a test for pending writes in BoundedLocalCacheTest to improve memory management and
added a new property ` order _ direction ` to ` QuoineNewMarginOrderRequest ` and its getter method in ` QuoineNew
added a boundInitialization method to the PropertyDescriptor class and created a new Test7192955 class to ensure proper handling of bound properties and validate
changed ` failsafeWidth ` and ` failsafeHeight ` from ` int ` to ` LwjglGraphics . SetDisplayModeCallback `
added a null check for the parent form before setting buttonsAwatingRelease to avoid potential NullPointerExceptions when the parent form is not initialized
refactor the wrapping logic in LineCell to use a new method for better readability and maintainability to improve code maintainability and maintainability by
corrected a typo in the error message in XSLTErrorResources _ it . java file to improve code readability and maintainability
replaced HashMap with LinkedHashMap for paramValues in CustomChangeWrapper and CustomPreconditionWrapper to improve performance and maintainability of the code
refactor string concatenation to use ` String . format ( ) ` for consistency across multiple text classes to improve code readability and maintainability by using
replaced ` xmlStreamReader . getNamespaceContext ( ) ` with ` getNamespace ( ) ` in ` StaxXmlPullParser . java ` to simplify namespace
added a new boolean field ` nestedJoins ` in ` TestAll ` , ` TestBase ` , ` TestLimit ` , and ` Test
do n ' t allow admin to be specify by root admin only
added caching for JavacFileManager in SourceFileManager and updated CompletionProvider to include a cursor parameter in CompletionTaskProcesor constructor to enhance
added configuration variables for METASTOREURIS , HIVE _ AUTHORIZATION _ MANAGER , and SQLStdHiveAuthorizerFactory to
updated import statements in KuduIOIT , XmlIOTest , and KuduIOTest classes to use assertThat instead of JUnit ' s assertThat
[ android ] use util . createhandler ( ) instead of create new handler .
updated the offset memory size from SIZE to BYTES in SymbolMapReaderImpl . java and added a new test for symbol file mapping in LineTcp
removed debug print statements for termFilter and otherTermFilter to clean up the code and improve readability
removed the Reflection class and updated its imports in Jooby . java and TypeConverters . java to streamline the code and improve maintain
[ hotfix ] [ runtime ] remove sharedexecutor from threadlessexecutor
refactor DateTimeFormatter to handle IndexOutOfBoundsException and add a new test for date formatting in TestDateTimeParsing to improve error handling and ensure correct formatting
rename ` CHUNK _ LENGTH ` to ` CHUNK _ CHUNK _ CHUNK _ LENGTH _ KB ` and update related method
added a new type ` WILDCARD ` in ` Types . java ` and created a new file ` T7034495 . java `
removed redundant while loops in LotsOfEvents . java to improve code readability and maintainability
refactor conditional statements in TransclusionDecideRule . java for consistency to improve readability and maintainability of the code
remove versionutils . getmicronautversion ( ) from micronaut . java
test : add test case for new _ sheet .
updated MindIconFactory to use a default description if the name starts with a slash to improve clarity and maintainability of the code
added a boolean parameter ` internalStateHandled ` to the ` onHomeIntent ` method in ` LauncherCallbacks ` to ensure proper handling of
replaced direct calls to ` getPreferDependencyTree ( ) . orElse ( false ) ` with a variable ` preferDependencyTree ` to improve code
added an ` activeTab ` parameter to the ` showDetails ` method across multiple activities to enhance functionality by allowing active tabs to be displayed
updated function names from ` $ apply ` to ` apply ` in multiple Java files to improve code readability and maintain consistency in naming conventions
added a method to randomize the maximum symbol size in MinimalEncoder and updated corresponding test assertions in HighLevelEncodeTestCase to improve encoding efficiency and
updated the formatting of header and parameters in SourceBuilder . java to include required and optional parameters to ensure proper handling of required and optional parameters in the
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure that the adapter is notified when data is changed
removed the setDefaultWALSyncMode method from ShadowSQLiteConnection . java to streamline the code and improve maintainability
updated type checking in RemoveJavaDependenciesAdapter and added assertions in Collections to improve type safety and ensure correct handling of generic types
remove unused getters in defaults3crtasyncclient
updated the expected length of the corrupted password test from 447 to 66 to improve test accuracy by providing clearer context for corrupted passwords
[ hotfix ] [ test ] improve error message in hazelcasttestsupport
do n ' t throw an exception when add a condition to a graphbuilderphase .
ggb - 132 : fix npe in getexternalimage ( ) and getexternalimage ( )
refactor SQLXML class implementation to improve code readability and maintainability
updated the ` getOrderBook ` method to include a ` limit ` parameter and modified related method signatures to include a ` limit ` parameter to enhance
[ hotfix ] remove metaspace . stresshierarchy . common . exceptions
added a new ` StreamReadConstraints ` instance to ` StandardDataFlow ` with a default value of ` Integer . MAX _ VALUE ` to enhance
updated the way engines are retrieved in PmsConfiguration . java to ensure proper handling of empty strings to avoid potential NullPointerExceptions
corrected the spelling of " Wheel " in TimerWheel . java and replaced FullIterator with WheelIterator in TimerWheelTest . java
do n ' t throw an exception when generate a customized bug pattern
updated the timeout duration from 3 seconds to 10 seconds in LocalChunkProviderTest . java to improve test accuracy by using a more descriptive timeout
changed visibility of uncomplete checklists menu item from true to false to ensure proper visibility of the uncomplete checklists menu
updated DefaultResultSetHandler to resolve discriminatedResultMap and added a new Contract class to enhance result map resolution and ensure proper handling of nested
added null check for defaultHome before unregistering the receiver to prevent potential NullPointerException when defaultHome is null
removed the VertxGen annotation from PumpImpl . java to streamline code generation and improve readability
removed unnecessary type casting in FileDetailFragment and OCFileListFragment to simplify code by removing unnecessary type casting
added trimming of whitespace in ConfigAttributeEditor and created a test for trailing space in ConfigAttributeEditorTests to ensure proper handling of whitespace in configuration attributes
updated ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , SelfClassWithAux , and SelfClassWithAux
make singlemodulereference public and add getunnamedmodule ( )
added conditional logic to determine the relKind based on the string ' pg _ ' in DatabaseMetaData . java to ensure correct relKind is assigned based
[ java ] update java and python dependency to v3.20 . 3
updated the case handling in ThriftHiveMetastore . java and HiveMetaStore . java from MetaException to TException in HiveMetaStore .
added a new module - info . java file for the ` com . speedment . runtime . core ` module to provide module exports and exports for
updated SslConnection . java to handle INTERESTED and WAIT _ FOR _ FLUSH states to ensure proper handling of flush and
fix log4j2 log4j2 log4j2 log4j2 log4j2 log4j2loggerdelegatefactory
refactor LIBJVM handling in ExecutionEnvironment . java and add server VM checks in Test7029048 . java to improve code clarity
refactor methods in ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to PGProperty . java to enable the use of the LibPQFactory
disable test interprocesssemaphoreedges . testinterprocesssemaphoreedges . testinterprocesssemaphoreedges
added sorting functionality for resourceNames in EditableResources . java to improve code readability and maintainability by reducing duplication
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to register and register ` OSV ` flavor to
added support for both " . gs " and " . gr " files in ClassType . java to enhance functionality by allowing both " . g
replaced HashMap with TreeMap for combinedVectors and combinedVectors in DrillTestWrapper . java to improve performance and readability of the test process
added a condition to check if the index is within the range of names and values to ensure that the loop only runs if the index is within the
refactor WebSocketPolicy class implementation to improve code readability and maintainability
rename ` setReadPhoneStatePermissionGranted ` to ` setReadPhoneStatePermission ` across multiple classes to improve clarity and consistency in naming conventions
add a new method ` resolveMessage ` that accepts ` performTemplateBasedResolution ` and ` performDefaultBasedResolution ` to the ` StandardMessageResolver
added generic type parameters to Class . forName calls in AsmUtil . java to enhance type safety and prevent potential ClassCastExceptions
added a new ` LoggingAuditService ` class for auditing user authentication failures to provide auditing capabilities for user authentication and authentication failures
fix airconditioningzonesettingsbuilder and airconditioningzonesettingsbuilder to check for null temperature
do n ' t throw an exception if the model class be not a abstract class
camel - 14297 : camel - http - add proxy host and port to camel - http
updated the MAX _ ENCODING _ VERSION from " 1.1 " to " 1.1 " in TemplateDTO . java to reflect the latest version of encoding
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to enable the use of ` jdk . internal . util .
camel - 14497 : improve log message to include the pool size .
removed the ` forceFinished ( true ) ` parameter from the ` forceFinishScroller ( ) ` method in multiple classes to simplify the scrolling behavior
updated the parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` in ` ensureRealtimeClusterIsSetUp `
add iserror ( ) , iserror ( ) and iserror ( ) method to the validationreport
updated inlineQsb assignment to use closestProfile and added new constants for inlineQsb in InvariantDeviceProfile . java to improve code
updated the ` createClassPath ` method to include ` throws Exception ` and modified URL encoding handling in ` SortedArrayStringMapTest . java
updated regex patterns in TransformSteps . java from ' 10 ' to ' . * ' to improve clarity and accuracy of regex patterns
added null checks for the ` retinaProp ` variable in ` Toolkit . java ` and modified fillRect method calls in ` PGraphicsJava2D
replace hardcoded timeout values with a variable timeoutMs to improve code readability and maintainability by centralizing timeout values
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
added a method to set the Docker image URL in Environments . java to ensure that the Docker image URL is correctly set for better user experience
[ hotfix ] [ test ] remove unnecessary call to system . gc ( ) in knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
added a new method ` copyFile ` to handle file copying in the ` SnapshotTaker ` class to enhance file copying capabilities by ensuring proper file
rename ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in naming conventions
add checkdevices ( ) and checkdevices ( ) method to functioninfo
added a type check for ` xml ` before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to ensure proper handling of
updated imports and annotations in NotesHelperTest , GeocodeHelperTest , and ReminderHelperTest to use AndroidJUnit4 instead of Instrumentation
added new rules for ProofOfWork , Difficulty , and ParentGasLimitRule in CommonConfig . java to enhance rule management by
changed the access modifier of the ` setupData ( ) ` method from public to private in ` BaseAssumptionsRunnerTest . java `
rename ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class to improve clarity and consistency in naming conventions
added null checks for endStream and listener in TripleServerStream . java to ensure proper resource management and prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] add site . baseurl for restart strategy in jobmanager and restartstrategy
added a new test method ` testIssue154 ` in ` SelectTest . java ` to validate SQL parsing and deparsing to ensure correct
updated import statements in mmm Common . java and ppp Common . java to improve code clarity and maintainability
refactor event handling in Launchable . java to use a try - with - resources statement for better resource management to improve code readability and maintain
[ hotfix ] [ javadoc ] fix typo in streamexecdeduplicate javadoc
added a warning log statement for kafka messages in KafkaSubscriber . java to improve error handling by logging warnings when sending kafka messages to topic
added PersistentPropertyAccessor support to SimpleElasticsearchPersistentEntity and implemented isImmutable method in SimpleElasticsearchPersistentProperty to ensure proper handling of persistent property accessors
implement setundefined ( ) and setundefined ( ) in geocoordsys1d and geocoordsys1d
added scroll distance calculation and logging to AskGestureEventsListener to improve user experience by providing clearer feedback on swipe events
refactor comparison logic in NGramEstimator to improve comparison logic to ensure accurate comparison of values and keys in the comparison process
updated import statements from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple Java files to ensure consistency in package naming
updated StatsLogCompatManager to retrieve folder icons from label state and cardinality to improve the handling of folder icons for better user experience
replaced ` getServerSlogan ( ) ` with ` getServerName ( ) ` in ` ThemeUtils . java ` to improve clarity and consistency in
added a new file TestSkeletonPredicates . java for testing skeleton predicates to demonstrate the behavior of skeleton functionalities in the compiler framework
refactor SelectionHighlighter to use a TransferHandler instead of getElementContainerBox to improve code readability and maintainability by centralizing equality checks
added a new ` StringResultConverter ` class and modified the ` AsmRuntime ` and ` AsmUtil ` classes to utilize it to
camel - 19751 : disable test that fail on apache ci
updated the condition in the WaitForSingleObject method from " ! = 0 " to " = = 0 " to ensure proper handling of non - zero
added null checks and adjusted buffer capacity setting logic in BufferUtils . java to ensure robust buffer management and prevent potential NullPointerExceptions
updated the expected data directory path from " data / " to " data " in TestSolrDiscoveryProperties . java to ensure correct handling of the data
updated OS version check from " linux " to " windows " and added support for MacOS preCatalina to ensure compatibility with MacOS
updated lock file handling from ` File ` to ` String ` in ` FSDirectory ` and ` Lock ` classes to improve clarity and consistency in lock
updated the variable name from " android . widget . TextView " to " apps _ view " in Overview . java to improve clarity and consistency in
updated references from Invocable . Invocable . Invocable to ClientDatagramEndPoint . this in ClientDatagramEndPoint . java to
updated the order of step executions from " oreder by STEP _ EXECUTION _ ID " to " order by STEP
updated button handling in LwjglInput . java from LEFT to - 1 and added a check for the unknown button to ensure the button is
added request validation for the " submit _ approve " , " submit _ reject " , and " test _ reject " in TaskRestRepositoriesIT .
refactored logger usage in OpenIdServiceResponseBuilder and GoogleAccountsServiceResponseBuilder to use a static final Logger instance to improve code readability and
removed the ` minus ` modifier from the ` isAfter ` method in ` SsoAccessTokenProvider ` and updated test cases in ` SsoAccessToken
disable test on macos - github - build on macos
added multiple methods to handle alarm suppression requests in GreetResourceMockedTest and OciMetricsCdiExtensionTest to enhance test coverage for
reformatted conditional statements for clarity in JFrame . java to improve readability and maintainability of the code
fix potential nullpointerexception in libraryscanner
replaced the implementation of the ` getSolrMetricsContext ` method with a call to ` super . initializeMetrics ` in the ` SuggestComponent `
refactor output string construction in OCFileListFragment . java to improve readability and maintainability of the code
[ hotfix ] [ test ] use iterable instead of array in loadkeys ( )
refactor SourceVersion class implementation to improve code readability and maintainability
added a new test class ` ThreadFactoryTest ` for testing the ` MyThreadFactory ` functionality to ensure that the ` MyThreadFactory ` class
refactor lock period retrieval logic into a separate method ` getLockPeriod ` to improve code readability and maintainability by encapsulating lock
added a new TicketModel instance to EditTicketPage . java to facilitate the creation of a new TicketModel instance
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss apps from predicted list
updated constructors in multiple assertion classes to include a selfType parameter to enhance flexibility by allowing subclasses to specify the selfType parameter
updated menu constants and added quote functionality in TweetActivity to enhance user experience by allowing quotes to be displayed in the quote menu
[ hotfix ] [ runtime ] remove redundant call to interruptlock . lock ( )
rename passthrough to decryptonlycodecformat in mediacodecaudiorenderer
added a conditional check before offering and closing the failure in ServerHTTP2StreamEndPoint . java to ensure the failure is only accepted when the result is
corrected the spelling of " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java and
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety during execution
replaced instances of ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapter ` , and ` MockRestAdapterTest
removed unnecessary else block in ComponentPresetManager . java to improve code readability and maintainability
added a new HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration and updated related assertions in TestJdbcDriver and Test
do n ' t reset the first time of the default voice if it ' s selected .
session . getlastaccessedtime ( ) throw illegalstateexception if session be not valid
guacamole - 242 : remove unused exceptionhelper . java ( it be no longer need )
updated the initialization of keyPairGenerator from 256 to 255 in JceX25519Domain . java to ensure correct randomness of key pair generation
set the codec to alwaysPostingsFormat in TestBlockPostingsFormat3 . java to ensure proper handling of postings formats in the
[ hotfix ] add log for empty header list in checkpointrangeheaders
[ java ] do n ' t try to create asymmetric wrapper algorithm when create asymmetric wrapper algorithm
updated platform annotations from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with the latest architecture
updated error handling in DebugSourcesResolver to include SecurityException to improve robustness by preventing potential NullPointerExceptions
removed unnecessary check for OS . IS _ UNIX in AbstractTest . java to improve code readability and maintainability
updated error handling in FileUploadUtils and modified file upload logic in UploadRefreshDeleteIntegrationTest to improve error reporting and ensure correct file upload behavior
replaced instances of ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory management to improve memory management and ensure proper resource management
changed the default value of USE _ PIPE _ DOWNLOADER from false to true in FastSyncChainDownloader . java to enable the downloader functionality
updated DST _ OFFSET assignment in SimpleDateFormat . java and added a new test class Bug7130335 . java for date formatting to
updated variable declarations and logic in AllAppsView . java for clarity and consistency to enhance code readability and maintainability by using ' final '
do n ' t add a router to the list of default hypervisors if it ' s not already present
refactor StringBuffer class for improved performance to enhance performance and readability of the code
added a line to set the rule UID in RuleResource . java to ensure proper assignment of the rule ' s uid
added null check for listener before unsubscribeing to avoid potential NullPointerException when listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class to apply pretty print formatting to the output
make access _ table public to allow access _ table .
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests from " Resource " to " No resources " to improve clarity and consistency in error reporting
[ java ] use ioexceptionsupport . create ( ) instead of log . error ( ) in xmpptransport
refactor multiple classes related to notification handling to improve code organization and maintainability
added a new parameter ` isUpgradeSuspended ` and ` isUpgradeSuspended ` to the ` AmbariManagementControllerImpl ` class to
removed the copyright year from FindsByCssSelector . java to clean up the code and improve readability
removed the declaration of ` wfields ` in ` Resolver . java ` to improve code readability and maintainability
added a default constructor to OAuthProperties and updated key sizes in EncryptionJwtCryptoProperties and OAuthProperties to ensure proper key size settings for OAuth
hbase - 16464 htabledescriptor . getcolumnfamilycount ( ) should use getcolumnfamilycount ( ) instead of getcolumnfamilycount
replace AllowedResourceAliasChecker with a lambda expression in SampleWebJspApplicationTests . java to simplify alias checking by using a lambda expression
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info classes to improve code organization and maintainability
[ java ] add cluster . reset ( ) and clusteredserviceagent . reset ( )
added a semicolon to the initialization of the writer in ChunkedWriter . java to ensure proper handling of the current chunk ID in the writer
added a new abstract class AbstractJobExecutor that implements JobExecutor for executing job executions to facilitate the execution of job execution in the application
refactor replay logic in RecoveryStrategy to use a future variable to improve code readability and maintainability
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in naming conventions
[ hotfix ] [ consul ] fix an npe in abstractconsulclient . getserviceids
replaced Math . random ( ) with SecureRandom . nextInt ( ) for hashSalt to improve security by using a more efficient random number generation mechanism
added a set of runtimeCompilationsFailedDuringParsing and refactored the parsing logic in RuntimeCompilationFeature . java to improve error handling and
removed duplicate assignment of currentStart and baselineStart in TimeOnTimeComparisonHandler . java to improve code readability and maintainability
updated imports and added abstract method answer handling in CallsRealMethods . java and CreatingMocksWithConstructorTest . java to enhance method
refactor ` checkPackageAccess ` methods to use ` Class ` instead of ` String ` for class access checks to improve code readability and maintain
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration handling to enhance test coverage and ensure proper error configuration
replaced instances of ` dtm ` with ` model ` for consistency and clarity to improve code readability and maintainability by using a more descriptive
added support for the ` has - touch - interaction - service ` request in the ` QuickstepTestInformationHandler ` and ` LauncherInstrumentation `
refactor connection handling in ConnectAction . java to use Mutex . EVENT . writeAccess for thread safety to improve code readability and maintainability
changed the data type of ` showRulesResult ` from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget , ShowOptions
added new classes ` ArrayHelper ` , ` Asserts ` , ` Comparables ` , ` Comparables ` , and ` NativeRegExp ` to
added handling for HOME and END cases in Less . java to improve handling of HOME and END operations
removed synchronized block for retrieving connected plots in PlotHandler . java to simplify the code and improve readability by eliminating unnecessary synchronization
refactor intent creation to use Intent . createChooser for sharing activities to improve code readability and maintainability by reducing redundancy
removed the ' public ' access modifier from the constructor of the Roster class to allow access to the constructor for better encapsulation
added basicConstraints extension to certGen to enable basic constraints for cert generation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to verify the behavior of the fixed nested transform
replaced the use of ` field . multiValued ( ) ` with ` precisionStep ` in ` TrieDateField ` and ` TrieField `
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to streamline the code by eliminating unused code
added a new file ` ArrayLength . java ` to test field and field retrieval methods to ensure proper handling of array types and errors related to field
hbase - 16286 addendum add wait to destroyforcibly ( ) in hbasestartit
use @ postconstruct instead of @ singleton in applicationsettingsservice . save ( )
updated assertions in Safepoint . java to check if value is greater than zero instead of greater than zero to ensure correct handling of negative values
updated the field name from " [ C " to " Ljava / lang / String ; " and changed the return type from charArrayToString to
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hnsw
pdfbox - 2576 : use a single stroke object in pgraphicsjava2d . setstroke ( ) , not just a single stroke
refactored the ` expandDynamicStar ` method to accept a ` SqlIdentifier ` parameter and added a new method ` expandDynamicStar ` to
added a method to find an interesting child in Comment2000 . java to enhance functionality for handling comment2000 elements
added import for Messages and set the status code in HTTPServer . java to ensure proper handling of HTTP status warnings in the application
refactor to use getmodifierex ( ) instead of getmodifiers ( )
use cycles _ 3 instead of cycles _ 6 in amd64 count leading zero node
camel - 1822 : fix npe in entityparser when disposition notification be not set
refactor Locale class implementation to improve code readability and maintainability
added a ` clearLog ( ) ` method to ` ErrorConsoleController ` , ` ErrorConsoleViewModel ` , and ` LogMessages ` classes to
updated the assignment of mRecentsAnimationController in RecentsView . java to ensure proper initialization of mRecentsAnimationController
updated imports and method signatures to use ` Set ` instead of ` HashMap ` and ` Map < TranslatableCaption , String > ` to
added connection pooling functionality to ConcurrentBatchIdentifierTest , SequenceOptimizerIdentifierTest , and AbstractTest classes , and updated execution count from 10 to 50
[ java ] add operadriver capability to the defaultdriversessions .
updated exception handling in ManageJournalsPanel . java to catch more general exceptions and added a dialog for download failures to improve error reporting and provide
added new product components for various Lifx components in LifxProduct . java to enhance the product ' s functionality and functionality
added asynchronous request handling in OverseerCollectionProcessor and updated related method calls in CollectionsHandler and CollectionsHandler to enhance the functionality of replica creation and
refactor PostgresDatabase and PostgresDatabaseTest to use a unified assert method for generating primary keys to improve code readability and maintainability by
updated LogPanel initialization to use getRepositoryModel ( ) . HEAD instead of null to ensure proper handling of empty object IDs
update skeleton inter bone wire to use XYZ instead of UNIT _ Y to ensure correct alignment of bone coordinates in the skeleton skeleton
added a ` browserDestroy ` method to ` AndroidImplementation . java ` and modified the ` destroy ` method in ` AndroidImplementation . java ` to
added a call to waitForActiveCollection in AutoScalingHandlerTest . java to ensure that the cluster has a valid active collection before proceeding
refactor loop structure in ScreenTerminal . java and update import statements in Tmux . java to improve readability and maintainability of the code
updated SoftResetAction . java to include ControllerState . ALL , ControllerState . ALARM , and ControllerState . ALARM states to enhance the
disable on - disc stream cache on texture pack reload
added handling for retrieving the parent folder in Request and RequestV2 classes to ensure proper resource retrieval for the parent folder
[ java ] rename variable ' ispersistent ' to ' persistent ' in networkofferingvo
refactor FileOutputStream initialization to use a custom close method to improve resource management and ensure proper resource management
http : / / issues . apache . org / jira / browse / amq - 403 - improve error handling
log4j2 - 129 add original method to messagefactory2adapter so that it can be use by messagefactory2adapter
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSize , Duration , and SizeTest classes to suppress warnings related to BanSerializable
updated the regex pattern from " 1 , 2 " to " 1 , 3 " in the Version . java file to ensure compatibility with the latest version
removed initial delay and dismiss delay settings in ExtractionModelFrame . java to improve user experience by reducing unnecessary delay settings
refactor method signatures and variable names from ` options ` to ` passedInTargetsSet ` in ` ProjectCommand . java ` to improve code clarity
added timezone configuration to the TimeTest class to ensure correct time representation of the time zone
refactor MediaSessionConnector class to improve code organization to enhance maintainability and readability of the code
remove use of jsefactory in http11ioprocessor . getsslimplementation ( )
updated distance display string formatting in GpsLoggingService . java to improve readability and maintainability of the code
added a method to check if futures are enabled before adapting futures and open positions in Binance exchange classes to enhance exchange functionality by allowing users to
update adminaccountmanagementhelper to use instructorcoursestable instead of instructoraccountslist
added a method to set the accept queue size in ThriftHttpCLIService to ensure that the connector does not exceed the maximum thread pool size
updated the property name from ` getClass ( ) . getName ( ) ` to ` PROPERTY _ DISABLE _ WATCHER ` in ` Path
added a check for the scheme " ssl " in the JmsFactory class to ensure proper handling of SSL protocols
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated exception handling in ` TestWindowFunctions . java
updated the calculation of duration from ` total previousTotal ` to ` total - previousTotal ` in ` GCInspector . java ` to ensure duration is
fix nodewithjavacomment # getJavadoconmethodwithlinecomment ( ) to return empty javadoc comment
replaced the use of ` Unsafe ` with a method ` readReservedMemory ` in ` ReserveMemory ` and updated its usage in ` WhiteBox
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of
hbase - 16278 addendum make procid protect to getprocid ( )
camel - 14497 : camel - cxf - add a constructor to make it easy to configure the service class
refactor YamlChangeLogSerializer to use a container map instead of a hardcoded string to improve code readability and maintainability by using a
replaced ` println ( ) ` with ` print ( ' \ n ' ) ` in ` SchemaPrinter . java ` to improve code readability and
updated the chunk regeneration logic in DebugRoadRegen . java and modified the schematic handling in SchematicHandler . java to streamline the
replaced ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragment . java ` to improve code readability and maintainability by using
hhh - 16464 - add ` ` native ' ' to @ generatedvalue ( strategy = ` ` native ' ' )
removed the ' country ' parameter from the getSystemTimeZoneID method and removed the ' country ' parameter to simplify the method signature and improve code clarity
updated BZip2Codec and TestBZip2Codec to include position and remaining data to improve data writing efficiency and ensure proper byte buffer management
[ geogebra ] do n ' t show console log when data param show log .
added a new constant VALUE _ TYPE _ EMPTY in Type . java and modified the creation logic in Value . java to improve type handling and ensure proper
replaced instances of ' = = ' with ' . equals ( group ) ' in GroupManager . java to improve code readability and maintainability by
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class for improved performance to enhance performance and readability of the code
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated its usage in ` VersionedTargetGraphBuilderTest ` to improve
rename getminrowcompactedsize ( ) to getminrowsize ( ) and getmeanrowsize ( ) to getminrowsize (
added a new ` ArtifactVersionAdapter ` class and registered it in ` MetadataCollection ` , and modified ` ModMetadata ` to be transient to enhance
added a boolean flag ` hasPrevious ` and modified the logic for setting and deleting objects in ` NativeArray . java ` to improve handling of previous
updated file handling in FileUploader to use remoteParentPath instead of localPath to improve clarity and maintainability of file management
added a new file ` UTF8ReaderBug . java ` that implements XML parsing with supplementary characters to facilitate testing of supplementary characters in XML
added unit test for the proxybuilder to verify the behavior of the proxybuilder
updated assertions in BinanceIntegration and BinanceUsIntegration from " ethcus @ depth " to " ethbtc @ depth20
added a resetAllocation method to the Wrapper class and initialized initial and max allocations in SimpleParallelizer to ensure that initial and max allocations are
removed the import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
replaced ` configProps ` and ` sysProps ` with ` sysProps ` and synchronized ` sysProps ` in ` Agent . java ` to ensure
refactor ModelUtils class to improve code organization to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert class implementation to improve code readability and maintainability
updated width and height calculations in Legend . java to ensure width and height differs from mLabels array to improve accuracy of width and height calculations
added multiple testDelay ( ) methods to CodeFirstSpringmvcIntf , TestResponse , and SpringMvcIT classes to enable testing of aborted
updated method calls from ` get ` to ` getValues ` and modified the conditional check in ` MoreLikeThis . java ` to improve clarity and
replaced the method of obtaining the source path from ` ruleResolver . requireRule ` to ` new BuildTargetSourcePath ` to simplify the code and
[ botania ] disable versioning by default
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a new variable ` numberOfFiles ` in ` MediaFolder
removed the " - b " argument from AidlStep . java and updated the format in GenAidlTest . java to streamline the
findbugs : add test case for bug # 79
added a todo comment to the FakeHttpLayer class to improve code readability and maintainability
updated error handling in EmbeddedLeaderService to revoke the candidate ' s leadership to ensure that the candidate is properly revoked for better user experience
refactor flowable stream handling in CompositeDiscoveryClient to use Java Streams instead of Java Streams to improve code readability and maintainability by
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` in multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ jobmanager ] add description to jobmanageroptions
refactor ` updateNoWidgetsView ` methods to ` updateRecyclerViewVisibility ` and update visibility logic based on search mode to improve user experience by
added class loading for WstxInputFactory and WstxOutputFactory in XmlUtil . java and updated tests in MultiVersionXmlParserTest
added a setup method to the AuditAliasCommandIntegrationTest class to ensure proper initialization of the project workspace
added logging statements for header view height in WidgetsFullSheet and recommended widgets in WidgetsRecommendationTableLayout to improve user experience by providing clearer
[ cxf ] disable cxf test that do n ' t support invocation without parameter
added error handling to the update ( ) method in CachedStore . java to improve robustness by catching exceptions during periodical refresh operations
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` Lombok ' s ` @ RequiredArgs
added a method to check default background fills in HSSFCellStyle . java and modified color handling in HSSFFont . java to
refactor ZonedDateTimeFormatterBenchmark class to improve performance to enhance performance and maintainability of the benchmarking process
added a ` shouldBufferUpdate ` method to ` DistributedUpdateProcessor ` and created a corresponding test class ` DistributedUpdateProcessorTest ` to
added a condition to check if the motor is null and the stage is null in SimulationListHandler . java to ensure proper handling of null values
fix / editscript and / / editscript / / editscript / replace / / editscript / / editscript / / editscript / replace
refactored ExtendedMasterSecretExtension class to improve code readability to enhance maintainability and readability of the code
changed the declaration of the InputProcessor variable from package - private to package - private to ensure immutability of the InputProcessor instance
added a listener to handle write failures in WritableKeyProcessor to ensure that the stream reaches the end of the stream
added " CUBE " to MySQLDatabase . java to enable the use of CUBE functionality in the database
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during replication operations
rename ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and update references accordingly to improve clarity and consistency in
replaced reflection - based retrieval of connection and read timeouts with direct calls to the HttpClient ' s hostname verifier to improve code readability and maintainability
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the os variable in RawMessageContentRedirectInterceptor . java to avoid potential NullPointerExceptions when os is null
make sure we do n ' t use the parent split pane if it ' s not the parent split pane
updated the ` jailerMain ` constructor to include a ` fromCli ` parameter and added a conditional check for the ` fromCli ` parameter to
refactor HttpRequest class methods for improved readability to enhance maintainability and readability of the code
added a new preference for unread pull notifications in TalonPullNotificationService to ensure that unread notifications are marked as unread
fix npe in isnullnode . isnullnode ( ) when object be null .
updated Box2DTest , OrthographicCamera , Pong , and OrthographicCamera classes to use more descriptive parameters to improve
refactor view recycler and recycler view manager initialization in ViewPostDetailFragment . java to improve code readability and maintainability by consolid
changed log level from trace to warn in CLIService . java to improve logging clarity by using a more descriptive log level
add debug output for abstract method in jimple body builder
ggb - 468 fix mouse click when click on ie10plus
updated the ` getNotificationUsers ` method to include an additional ` deviceId ` parameter and modified the filtering logic in ` CacheManager ` to enhance
updated the base URL for CGIAR provider from " droppr . org / srtm / v4 . 1 / 6 _ 5x
updated MotifFileChooserUI to remove propertyChangeListeners and approveButton , and added a new test class for bug6520101 to ensure
change implementation of handle ( ) to return a boolean instead of void .
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods to use ` Optional < BuildRule > ` instead of ` from
added visibility control for transportSpinner based on makingShortcut to improve user interface responsiveness when making shortcuts
added null check for attributes _ field in Attr . java and created new classes T7043371 . java and T7073477 .
refactor backPressed methods to return a boolean indicating success or failure to improve code readability and maintainability by avoiding unnecessary method calls
added support for long - view index enabled in QueryServices and QueryServicesOptions classes to enable and disable long - view indexing based on query options
updated string format from " V " to " v " in SDRTrunk . java to ensure consistent formatting of string representation
replaced ` with ` StringUtils . cleanPath ( ) ` with ` StringUtils . cleanPath ( ) ` in ` PrivateKeyParserTests . java ` to
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method and its usage in the ` diffDropColumn ` method to simplify the
updated IndexWriter configuration from LUCENE _ 40 to TEST _ VERSION _ CURRENT in TestAddIndexes . java to ensure compatibility with the
hbase - 12279 add option to disable unmatched column family check for importtsv
[ java ] rename logrecordingchannel to logsubscriptionid for consistency .
replaced direct calls to ` startActivity ` with ` startActivitySafely ` in ` Launcher . java ` and added voice button proxy visibility to enhance user
added a check to return early if the first element is " i " in the JSON node to ensure that processing only occurs when the first element is
refactor Procedure class implementation to improve code readability and maintainability
added Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) to the applyResourceBundle method calls in Toolkit . java and Window . java to enhance
add a new class ` NormalizeArrayCreationsKotlin ` and implement the ` NormalizeArrayCreationsKotlin ` functionality in the `
added checks for mincount and mincount in PerSegmentSingleValuedFaceting . java to ensure that the term enum is only incremented when
update modmetadata to use objects . firstnonnull ( ) instead of optional . fromnull ( ) . or ( ) .
added a static jdk . unsupported requirement in module - info . java and created OSGiTest . java for regression tests to ensure proper handling of
refactor controller service enabling logic into a separate method ` isDependentServiceEnableable ` to improve code readability and maintainability by encaps
hbase - 16464 htable . setautoflushto ( false ) do n ' t need to call setautoflushto ( false )
fix ( annotation ) : fix type cast exception in annotationtest
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and corresponding test cases in ` Property ` and ` SimpleFeatureImplTest `
removed HiveException from method signatures in DDLPlanUtils and ExplainTask classes to simplify method signatures and improve code clarity
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to streamline the logging process by eliminating unnecessary logging
added a new file ` InJavaSourceSet . java ` and modified ` UsesJavaVersion . java ` to use it to enhance the functionality
updated the resource path for the WFPC2u5780205r . fits file in TestGDALParser . java to ensure
added a static method ` createGetter ` to the ` ReflectionHelper ` class to provide a way to create a getter for a given attribute
removed the conditional check for external storage in DirectUpload . java to simplify the condition for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` and modified commit handling in ` IndexerMapReduce ` , ` IndexerOutputFormat
api : allow disk offering id to be pass to createvolume api
fix a bug in tohtml . gettext ( ) that cause a nullpointerexception .
added null checks for ` amountToAdd ` , ` plus ` , and ` minus ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime
added a new file ` Issue382 . java ` to handle specific error types in the ` ServerFeature ` class to ensure proper handling of specific
replaced the ` signum ` method with a static method ` signum ` in the ` PositionUtils ` class to simplify the code and improve readability by
added visibility setting for the text holder in AttachmentAdapter to ensure the text is displayed when a specific condition is met
fix : check for ctreference instead of ctnamedelement . getelements ( )
use lambda expression instead of method reference in xpidriverservice . getprofile ( )
make liquidblock extend bucketpickup so that it do n ' t need to be override .
[ hotfix ] [ test ] fix flaky test in amq2902test
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure the correct time zone is
refactor DistinctErrorLog to use a single distinctObservation variable instead of a single existingObservation variable to improve code readability and maintainability by
updated the ` TEST _ MONSTER ` and ` TEST _ BADAPPLES ` boolean values to include the ` TestGroup ` annotation to enhance
fix nullpointerexception in sqleditorsupport . createlogger ( )
add denyaccess ( ) to denyaccess ( ) method in gradlecontext
do n ' t use setrgb ( ) and setpixels ( ) in pgraphics2 . getpixels ( )
updated the method call to include the partition ' s SD in the verifyAndAddTransactionalProperties method to ensure proper handling of transactional properties
added a new variable ` mLastOverlaySroll ` and modified the overlay scroll logic in ` Workspace . java ` to ensure proper handling of overlay
hhh - 14211 - add unmodifiable batchbuilderimpl and unmodifiablebatchbuilderinitiator , to make it easy to use
[ hotfix ] [ runtime ] fix typo in analysiserror . shouldnotreachhere
added a new test method ` spyingOnAClassRetainsState ` to ` PartialMockingRetainsStateTest ` and created a
added a new test method ` testUnionWithBracketsAndOrderBy ` in ` SelectTest . java ` to validate SQL parsing and deparsing
added null check and error handling for action execution in SecurityUtil . java to improve robustness by preventing potential NullPointerExceptions during action execution
refactor error handling in OpenALMusic to use a variable for error code to improve readability and maintainability of error reporting
camel - 14279 : deprecate endpointhelper . resolveparameter in favor of endpointhelper . resolveparameter ( )
[ calcite - 2478 ] fix precision / scale in rexnodeconverter . makeexactliteral
replace direct retrieval of vendor and device properties with Optional . ofNullable for better null safety to improve code readability and prevent potential NullPointerExceptions
updated the assertion in WalletTestAccount003 . java to use the current timestamp instead of a hardcoded string to improve readability and
replaced AxialStage casting with RocketComponent in BasicFrame and DesignPanel classes to improve type safety and streamline selection handling
added a long running time parameter to the Args class to enable dynamic configuration of long running time based on configuration
[ java ] add a new class ` Ideas _ 2012 _ 05 _ 21 ` and add a new class ` Ideas _ 2012 _
replaced instances of ` Service . providers ` with ` java . util . ServiceLoader ` in ` HttpServerProvider ` and ` ScriptEngineManager ` to improve code
[ gml3 ] use decimal . toplainstring ( ) instead of decimal . tostring ( ) .
updated assertions in TestRestClientRequestImpl . java to include additional context for assertions to improve code readability and maintainability
updated the condition in MissingUniqueConstraintChangeGenerator to check if the reference database is equal to the reference database to ensure compatibility with the correct comparison database
removed the ` addAndroidConstants ` method and adjusted the handling of ` AndroidProperties ` in ` IjProjectTemplateDataPreparer . java `
replace usage of ` assertEquals ` with ` await ( ) . atMost ( 5 , TimeUnit . is ( 0 ) ` in multiple test files to
added user _ args and timestamp properties to the ImmutableMap builder in ChromeTraceBuildListener and its test to enhance traceability by allowing user arguments to be
[ gr - 14135 ] make getresourcebundle ( ) private and use getresourcebundle ( ) .
corrected a typo in the trace log message from " match limit " to " match order " to improve clarity and consistency in logging output
added a new file TheRockMetaDataDemo . java to demonstrate the functionality of the TheRockExchange class to demonstrate the functionality of the TheRockExchange
changed classes from ' public ' to ' strictfp ' in FloatingDecimal , FormattedFloatingDecimal , and FormattedFloatingDecimal classes
replaced unparseIdentifier with columnName in ColumnStatsSemanticAnalyzer . java to simplify columnName appending logic for better readability
added a new test method ` replaceField ` in ` JavaTemplateContextFreeTest ` and modified method signatures in ` BlockStatementTemplateGenerator ` to
added a check for synthetic static methods in InstantiateStaticClass and implemented a test3 method in Bug1282 to ensure that static methods are only used
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the code by
added handling for pending rescuers in IkStepDefinition to ensure proper handling of rescue errors during execution
updated ` equals ` and ` hashCode ` methods in multiple type classes to use ` = = ` and ` = = ` instead of ` final `
added a new method ` getSyncLevel ` to retrieve the ` SyncLevel ` enum and updated its usage in the ` UpdateLog ` class to
[ java ] use long instead of int for try - with - resources
added a condition to check if the state is not RECOVERY in the RecoveryStrategy class to ensure that only valid slice states are processed
removed unnecessary whitespace in create method call in opencv _ core . java to improve code readability and maintainability
added SDKPath to AppleBundle and SwiftStdlibStep classes and modified makeProcessExecutorParams method to accept a ExecutionContext parameter to enhance flexibility in
[ hotfix ] [ blob ] remove lock from transientblobcleanuptask
[ hotfix ] [ network ] use static nat instead of 1 - 1
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of row
refactor BetterBlockPos class to improve code readability to enhance maintainability and readability of the code
updated the proxy retrieval method in EmbeddedVelocityToolboxView . java to use the class loader instead of the class loader to ensure that the proxy is
updated version handling in MainWindow and related classes to use ` getVersionString ( ) ` instead of ` autoConnect ` to improve clarity and consistency in
added OracleDatabase support and modified statement processing logic in LoggingExecutor and JdbcExecutor to improve handling of trailing newlines in SQL statements
add findbugs . nullderef . assumensp feature for nullderef .
updated the port from 8080 to 12345 and modified the HTTP request to use a formatted port instead of a hardcoded value to improve clarity
updated blob sizes and slider lengths in DrawAudio . java for consistency and clarity to improve code readability and maintainability by using a more
added multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration . java to ensure proper handling of multifactor authentication providers
added a new parameter ` rotate ` to the ` findPositionForNewNodeBestAreaFit ` and ` findPositionForNewNodeContactPoint `
chore ( deps ) : fix checkstyle violation in test
added help page functionality to PMS and modified HelpTab to update contents in LooksFrame and LooksFrame to enhance user experience by providing a
added GeocodeProviderFactory and Constants interfaces for the Omni Notes Beta package to facilitate the application of the Omni Notes Beta library
updated import statements for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer to improve code clarity and maintainability
refactor exception handling in OptionTest and ResourceManagerImplTest to use try - catch blocks instead of ExpectedException to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4078 - add miss check to memory command
removed unnecessary index options check in SegmentsInfoRequestHandler . java and modified CollectionAdminRequest . createCollection call in CollectionsAPISolrJTest . java
updated the calculation of numPredictiveAppCols based on device type to ensure accurate calculation of app column based on device type
added a new method ` hasScalarSubqueryInput ` in ` JoinUtils ` and refactored conditional checks in ` DrillJoinRelBase
add a new class ` BlockBuildCraft ` to handle block removals to facilitate the removal of blocks from the inventory
updated layout parameters in DeviceProfile . java to use FrameLayout . LayoutParams for better layout management to improve layout consistency and maintainability of the code
replaced ` . run ( ) ` with ` . start ( ) ` in ` YahooSession . java ` to improve code readability and maintainability
added null initialization for ` ms ` in ` HiveMetaStore ` and modified exception handling in ` HiveMetaStoreClient ` to ensure proper handling
updated getDisplayScript method to use Category . DISPLAY instead of getDefault in Locale . java and added a new test method in LocaleCategory . java to
updated import statements in Replica . java to use ZkStateReader for consistency to improve code readability and maintainability
replaced ThreadLocalRandom with a new Random instance in StoreDirectTest . java to improve code readability and maintainability by using a more descriptive
added a check for launcher readiness before backuping favorites and widgets in LauncherBackupHelper . java to ensure that backups only occur when the
updated error messages in ` Cell . java ` to include the space identifier to improve clarity of error messages for better debugging
add a new test class ` ResiliencePooledRouteOkTest ` to validate the functionality of ` ResiliencePooledRouteFactory `
rename variable ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class implementation to improve code readability and maintainability
updated imports and assertions in FileMessageHistoryTest . java and FileMessageHistoryTest . java to use TemporaryFolder to improve code clarity and
added multiple logging levels for various loggers in Grasscutter . java to improve logging clarity and maintainability
changed access modifiers of ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` to
updated workspace state handling in Launcher and added a method to retrieve the workspace state in Workspace to improve workspace state management and ensure proper handling of workspace
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the assertion framework
do n ' t notify new template if cacheable = true
added coreScopeSession and modified variables handling in multiple classes to enhance session management and improve data import handling
updated the SQL query to include a primary key and added a test for retrieving primary keys in DatabaseMetaDataTest . java to ensure that primary keys are
rename ` ` -- permissions - config - path ' ' to ` ` -- permissions - config - file ' '
remove unnecessary null check from httpsessioncontextintegrationfilter . getsession ( )
added a new file TestIfWithDeadRegion . java that implements a Supplier < String > to test the behavior of a dead region to provide a
corrected the spelling of " EnglishUd . gz " to " EnglishUsd . gz " in the DependencyParser class
replaced ` testConcurrentAccess ( ) ` with ` HighResolutionTimer . enable ( ) ` and ` testConcurrentAccess ( ) ` in ` Snow
added a static UI preference and modified the hideToastBar method to conditionally hide the toast bar based on user preferences to enhance user experience by
replaced the implementation of the Privilege class with a lambda expression in WindowsSecurity . java to ensure proper resource management and avoid potential memory leaks
refactor parameter handling in SamlRedirectLogoutHandler and WhitelistLogoutHandler to use ` setParameterIfAbsent ` instead of ` setParameter ` to
updated JOptionPane messages in MEncoderVideo , NavigationShareTab , and PluginTab classes to use localized strings to improve user experience by providing clearer feedback
add mimetypes for x - tika - ooxml , x - tika - ooxml , vnd . openxmlformats - officedocument . spreadsheet
updated log messages and imports in multiple classes to use FixJava for consistency and clarity to improve logging clarity and maintainability of the code
camel - 14499 : camel - eip - document - enricher : fix xml output in eip documentation xsd
[ hotfix ] [ table - planner - dcassandra ] add migration coordinator . removeversioninfoforendpoint ( ) method
added debug logging and modified audio capture device handling in DeviceConfiguration . java to improve debugging capabilities and ensure proper handling of capture device names
added WebsocketConfig and maxFramePayloadSize property to ShenyuConfig and updated WebSocketPluginConfiguration to use it to allow dynamic configuration of WebSocket
make cachevalidationlistener thread - safe
added a check to ensure the contentLength is not empty before adding it to the document to ensure that the content length is only added if it is not
[ hotfix ] [ solver ] make defaultsolverjob # solvingterminated ( ) private
added error handling for PathAlreadyExistException in createTimeseries method to improve robustness by ignoring PathAlreadyExistException when creating time series
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check the result of the ` check
changed access modifiers of several methods from public to protected in ShadowActivityManager , ShadowMeasuredParagraph , ShadowSettings , and ShadowTypeface classes to
ipaddress . state . reserved command should be set to - 1 , not - 1 .
updated HttpParser to set the value string to an empty string instead of an empty string to ensure proper handling of null values and improve test coverage
added thread - complete initialization logic in J9VMInternals . java and modified Thread . java to use System . getSystemClassLoader and System .
added an ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created a new ` EnvironmentTest ` class for testing external storage state and
[ drools - 13838 ] add test case for mvel type coercion in knowledgebuilder
updated formatting and formatting in LoggingConfig . java to improve code readability and maintain consistency in formatting
added exception message to the logging statement in ActionNode . java to provide clearer error messages for better debugging
added a check to remove the " tel : " prefix from the string to ensure that the string starts with " tel : " in the
refactor visibility logic for shared files in FileListListAdapter . java to improve code readability and maintainability
removed deprecated HIVEOPTSORTDYNAMICPARTITION configuration from HiveConf . java and updated TestTxnCommands3 . java to streamline
updated constructors and method signatures in ExecuteStatementOperation and Operation classes to include a new key for confOverlay to improve clarity and maintainability of the
replaced Lists . newArrayList with new ArrayList < String > in BTCMarketsStreamingAdapters . java and BTCMarketsWebSocketSubscriptionMessage
updated assertions in OGRDataStoreTest to use getTypeName ( ) instead of getName ( ) to improve clarity and consistency in naming conventions
removed the ` onErrorInStep ` method from ` StepListenerSupport . java ` to streamline error handling by eliminating unnecessary code
refactor Wallet class to improve code organization to enhance maintainability and readability of the code
camel - 8859 : camel - netty - http should set charset to http : / / , not http : / / ,
replace system . out . println with log . info ( ) in testnonblockingapi
added a check for the size of the connection list in DbConnectionDialog to ensure that the row does not exceed the specified size of the connection list
pmd : add rule violation for method with same name in enclosing class
added ExtendedPlatformComponent class to manage platform mbeans and created a new ExtendedPlatformComponent class to enhance monitoring capabilities and ensure proper management of platform mbean
added replacement for single quotes in SQL statements in BasicQueryTest . java to ensure proper handling of single quotes in SQL queries
updated URLs in various test classes to include " org / knowm / xchange / bleutrade / dto / " prefix to ensure consistency in
refactor TextEscapeUtils to improve code readability to enhance maintainability and readability of the code
added a filter parameter and updated FilteredQuery instantiation in AbstractSpatialFieldType . java and added a test case in TestSolr4Spatial . java to
updated the main form visibility logic in GpsLoggingService . java and added a post call in AutoEmailHelper . java to improve user experience by
replaced ArrayList with HashSet in Inlinks and refactored related methods to improve performance and readability to enhance performance and maintainability of the code
[ trdfri ] fix memory leak in discovery service
modified the ` testFilterForPartition ` method to accept a ` filterAtServer ` parameter and modified the ` testFilterForPartition ` method to
added " Abandoned " to the list of status codes in the TicketModel and TicketBasePage classes to enhance user experience by
removed initialization of ` columnAliasPrefix ` from multiple platform classes to clean up the code and improve readability
replaced instances of ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat ` classes to improve
terasology : do n ' t run on a 32 - bit jvm on a 32 - bit jvm
pdfbox - 2852 : fix copy ( ) and copy ( ) method in pdfcopy .
added DAEMON option to the RESET _ ALARM command and implemented a daemon UI initialization in TerminalClient to enhance user experience by providing a
added a new file FlushIndexTask . java that extends PerfRunData to manage the flushing of the index writer to ensure that the index
make memtable . createflushwriter pass the estimated size to memtable . createflushwriter
added SEASONS to the conditional check in MediaLibraryFolder . java to include TEXTS _ NOSORT and TEXTS _ NOSORT to
added a new file LocalSocketAddress . java that implements a DatagramSocket instance and checks for IPv6 loopback addresses to demonstrate the availability of IPv6
updated grid size points in GridSizeMigrationTask . java for consistency to improve code readability and maintainability
updated method names from ` getName ( ) ` to ` getName ( ) ` in ` SerializerPojo . java ` to improve clarity and consistency in naming
added a ` READ _ ONLY ` constant and modified the ` commit ` and ` commit ` methods in the ` Context ` class to ensure proper
refactor LookAndFeelCommand class to improve code organization to enhance maintainability and readability of the code
updated the calculation of lastRunEnd in BlockBoxing . java to use ceiling instead of floor to ensure accurate calculation of runEnd values
added imports for EOFException and EofException and EofException in GracefulStopTest . java to ensure proper handling of EOFException and
[ java ] do n ' t use lock . lock ( ) in remove ( )
refactor NetworkParameters class to improve code organization to enhance maintainability and readability of the code
updated account asset optimization logic in DynamicPropertiesStore . java to ensure proper handling of asset asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC to the VM class to control GC GC policy behavior
added error handling for invalid protocol buffer protocols in TransactionCapsule . java to ensure proper error handling for invalid protocol buffers
remove rules . strictexception and remove unused code
updated resource path from ` helpPre + file ` to ` helpPre + " en / " and added logging for no localization available to English
added a new file ` ProcessorInfo . java ` for processing CPU CPUs and read CPU masks to provide functionality for processing CPUs based on
add - html option to generate html output ( - html )
[ micronaut - 3290 ] fix logbacklogbacksystem constructor to be non - null
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to use a new method for updating cluster data to improve code readability and maintainability by
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to include user configuration for tag propagation to enhance configuration
refactor dependency type assignment logic in RustCompileUtils . java to use a switch statement for clarity to improve code readability and maintainability by
added a queryParams parameter to the oauth2LoginLinks method and modified the oauth2LoginLinks method to include an error check to enhance error handling by
hbase - 16464 hfilereader . seekto ( ) do n ' t attempt to seek to the first KV in the file
danielwagnerhall : deprecate isalways ( ) in favor of isalways ( ) .
added a parameterized test method ` testLayerNormNan ` in ` TestLayerOpValidation . java ` to validate layer normalization functionality to ensure correct
refactor ` showShareFile ` method calls across multiple activities to use ` getFileOperationsHelper ( ) ` instead of ` FileDisplayActivity ` to
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the functionality of ` LiquibaseUpdate ` to ensure that the
updated the method to convert the proxyType to uppercase to ensure consistent conversion of the proxy type to uppercase
add mod _ forge . getdungeonlootTries ( ) and mod _ forge . getdungeonlootTries (
refactor JdbcDatabaseSnapshot to use byTableKey and allTablesKey instead of key to improve clarity and functionality of caching results based on case sensitivity
added a new Container instance and added a label to the CSS border in CSSBorderTest . java to enhance the visual appearance and functionality of the CSS
added conditional configuration for RetryAutoConfiguration and RetryInterceptorAutoConfiguration , and modified RetryLoadBalancerInterceptor to include RetryTemplate to enhance the RetryLoadBalancerInterceptor to
change LayoutParams from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to improve layout consistency and maintainability
updated the calculation of parentTaskName to use currentTimeMillis ( ) instead of nanoTime ( ) to ensure correct task name generation based on the current time
added error handling for invalid Add Service request in ServiceResourceProvider to improve robustness by providing clearer error reporting for invalid Add Service requests
indexdatabase . isindexedfilesonly ( ) should return false if unversioned file be not accept
fix ggbround ( x [ 0 ] , x < 0 , x < 0 , x < 0 , x < 0 ] )
refactor AnonCipherWithWantClientAuth class to improve code organization to enhance maintainability and readability of the code
added multiple @ Deprecated annotations to the ProducerTemplate class to indicate that these methods are outdated and should no longer be used
refactor JLayer class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ test ] fix flaky test in evictiontest
renamed the method ` encodeInternal ` to ` saltedPass ` and updated its usage in the ` Md5PasswordEncoder ` class to improve clarity
replaced ` viewTreeObserver ` with ` mTaskRecyclerView . getViewTreeObserver ( ) . getViewTreeObserver ( ) . getViewTreeObserver ( )
refactor Response class to improve code readability to enhance maintainability and readability of the code
[ flink - 13232 ] [ table - planner ] fix typo in sstablemetadata . getmaxtimestamp ( )
add a small size of the call participant panel to give the user more time for the call .
added null and empty checks for replies in TweetActivity , TimeLineCursorAdapter , and TweetView classes to avoid potential NullPointerExceptions when
updated ` HitbtcBalance ` and ` HitbtcBalance ` classes to use ` Objects . equals ` and ` Objects . hashCode
fix ( sql ) : do n ' t use copymetadata when order _ direction _ ascending = true
updated the return statement in RetriesExhaustedWithDetailsException to use addrs . toString ( ) instead of s to ensure proper string representation
refactored EditGcodeFile to use OpenCookie for opening open files to improve code readability and maintainability by using the OpenCookie class
updated imports in JsonToGrpcApplicationTests . java to use the new version of HttpClient from the hc - client5 package to align with the
refactor energy removal logic in PipePowerWood . java to simplify energy handling to improve code readability and maintainability by eliminating unnecessary conditional checks
added a check to delete the temporary output file if it exists to ensure that the temporary output file is deleted before proceeding
changed the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a new test for trade retrieval in
added time limit checks in ` ReplayProcessor ` , ` ReplaySubject ` , and corresponding tests in ` ReplayProcessor ` , ` 
[ hotfix ] [ test ] fix typo in test
added new column names and modified video format handling in MediaTableFiles . java to improve code readability and maintainability by eliminating unnecessary try - with
add a feature to show only definition for equation in EXAM , and add a feature to show only definition
add null check for the component in SIPCommTextFieldUI to prevent potential null pointer exceptions
added caching configuration for scans in MetaReader . java to improve performance by allowing caching of scans based on the configuration
updated the initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes to improve code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to enable transient taskbar functionality in the application
refactor AccessExecution , ArchivedExecutionVertex , and ArchivedExecutionVertex classes to improve code organization and maintainability
added a conditional check to set density to 3f in IOSGraphics . java to ensure density is only set when scale is 3
rename the ` optional ` variable to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
added an exception to the logging statement in RegionStateStore . java to provide a clearer error message for debugging purposes
refactor assertion in TestClusterUpgradeUtils to use a lambda expression instead of a custom implementation to improve readability and maintainability of the code
updated warning messages in AsyncHttpConnection and refactored connection handling in AsyncContextTest and AsyncContextTest classes to improve error handling and ensure proper
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to enhance the functionality of the ` SearchUiManager ` class by
added a check for MVStore in Database . java and modified the testSetMode method in TestRowLocks . java to ensure proper handling
skip linux / amd64 only test on linux / amd64
added input type checks for Integer and IntValue in Scalars . java to improve type safety and avoid potential ClassCastExceptions
updated error messages for missing and multiple PRIMARY KEY keys in CreateTableStatement . java to improve clarity of error messages for missing and multiple PRIMARY
added conditional drawable resources for button icons in CellLayout , Hotseat , and Launcher classes to enhance the visual appearance of button icons based on the
vmservicemanager : throw an exception if no flutter view to query for flutter view
added getter methods for contentTypeOptions , xssProtection , and frameOptions in HeadersConfigurer . java to improve code readability and maintainability by
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and readability of the code
( chore ) camel - selenium - grid : move devtools test to router package
[ hotfix ] [ test ] add type parameter to aggregateroot
added support for pre -built libraries in Python binary processing to ensure proper handling of pre -built libraries in the project
added client authentication handling in NetServerOptionsConverter and removed deprecated methods in HttpServerOptions and NetServerOptions to streamline client authentication handling and improve code
updated repl paths from " / user / hive / repl / " to " / user . name " in HiveConf . java and MetastoreConf
refactor task view retrieval logic in RecentsView . java to improve clarity and consistency to enhance code readability and maintainability by reducing duplication
[ hotfix ] [ test ] increase timeout for amqptransformertest
removed the call to clearAll ( ) in DataTableTopComponent . java to streamline the code by eliminating unnecessary method calls
rename variable ` ` controller ' ' to ` ` flowcontroller ' '
[ flink - 20286 ] [ runtime ] fix the issue of pipelinebuilder . dealwithconsumeallchildrenpipelinebreaker ( )
added import statement for ClassLoaderHandler in module - info . java to enhance code clarity and maintainability
refactor solve method to return the best solution instead of the working solution to improve clarity and maintainability of the code
added JsonIgnore annotation to ApplicationSettings . java to enable JSON serialization and deserialization of application settings
changed the condition from checking if throwable is null to checking if it is not null to ensure that the throwable is not null before proceeding
refactor query interrupt check to use a variable for queryInfo to improve code readability and maintainability
fix a crash when there be no craft result in the craft result
[ gl200 ] decode gl200 ' s hdop attribute only if it ' s already present .
rename ` timeColumnName ` and ` incomingTimeColumnName ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` in ` Avro
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token00
[ xwork2 ] add initializable interface so that it can be use in the container .
refactor TimerObservationHandler to use wildcard imports and introduce a new longTaskSample instance to improve code readability and maintainability by centralizing
changed the data type of ` SYNC _ DELTA _ RATE ` from float to double and adjusted the calculation of ` fetchTime `
[ thymeleaf ] deprecate unwrapped fragment expression in thymeleaf template
changed the type of the ` _ attributes ` variable from ` HashMap ` to ` ConcurrentHashMap ` in ` SessionData . java ` to ensure compatibility
updated ActiveMQMessage to copy the message from a message to a copy of the message to improve message handling and provide clearer debugging information
added new color constants and updated extractInto method to use applyFallback for better color handling to improve code readability and maintainability by centralizing color
fix a bug where a sketch do n ' t work for a non - accessible data folder
updated the ` appendContent ` method to accept a ` includeTitle ` parameter and modified related conditions to enhance functionality by allowing the ` includeTitle `
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify the initialization of the session registry
[ hotfix ] [ stream ] add log for reconnection failure
updated proxyFactory initialization to use JavassistProxyFactory instead of Javassist to ensure compatibility with Javassist ' s proxy
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve performance by using ` org . eclipse . jetty
refactor SocketExceptions and ExceptionText to use InetAddress for host and host information to improve readability and maintainability of the code
added a check to determine if a view directory is under the repository directory to ensure that the view is under the repository directory to improve error handling by
remove unused code in jabrefframe . java
added " - XX : + UseCompressedClassPointers " and " - XX : + UseCompressedClassPointers " to multiple test
do n ' t log error if log be not in active or replaying state
deleted the ConnectionHook . java file to remove unused code to streamline the codebase
removed redundant calls to ` waitForReplicasInSync ` in multiple test classes to streamline synchronization handling and improve code clarity
camel - 14499 : camel - rest - dsl - fix test for camel - rest - dsl
[ apex ] fix apexlanguagemodule . hasnamespaceguardedaccess ( ) to return false
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor AggregateEngine to use a thread pool for thread management to improve thread management by using a custom thread pool for better thread management
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool for buffer pool management to improve performance by using a more efficient
added scroll position adjustments for thumbnails in UploadActivity to ensure proper scrolling behavior for thumbnails
fix ( sql ) : add columnmetadata for timestamp overridden by other column alias to sqlcodegenerator
refactor animation handling in Launcher and LauncherStateTransitionAnimation classes for improved readability and maintainability to enhance code clarity and maintainability by
added conditional logic to disable default HTTP user agent based on configuration to ensure the default user agent is disabled based on user agent configuration
added functionality to check if the application is a pubsubhubbub in FeedRefreshUpdater and updated FeedRefreshUpdater to handle pubsubhubbub to
changed the access modifier of the finalize method from public to protected to allow subclasses to access the finalize method from other classes
updated method name from ` isAnonymousOrLocalClass ` to ` isAnonymousOrLocalOrSyntheticClass ` in ` StubJarClassEntry . java
[ dspace ] add dspacewebapp . java file to make it easy to configure the web application
added a method to retrieve the table alias containing column in CalcitePlanner and implemented a method to retrieve it in RowResolver to improve error handling
[ hotfix ] [ job ] fix trigger key name in jobgenerator
updated logging levels from debug to warn for transaction failures to improve clarity and consistency in logging messages
[ hotfix ] [ test ] fix test failure in basicmaptest
updated the property name from ` setRcfileWriterEnabled ` to ` setRcfileWriterValidate ` in ` HiveClientConfig . java `
added a new enum TlsClientCertPolicy and refactored related methods in GitBlitServer and GitBlitServer to utilize it
replaced a thread with a debug log statement in KrakenFuturesStreamingService . java to streamline the subscription process and improve logging clarity
added support for the SEC - WebSocket protocol in the ProxyWebSocketHandler to enhance WebSocket connection handling by allowing custom protocols for WebSocket requests
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve debug output for fetching results
[ hotfix ] [ log4j2 - 116 ] [ log4j2 - log4j2 - log4j2 -
updated method names and logic in FinalizePrivateFieldsTest . java and FinalizePrivateFields . java to improve clarity and functionality of inner class handling
refactor UnexpectedJobExecutionException class to improve error handling to enhance code readability and maintainability
deleted the AquaLookAndFeel . java file and removed the AquaUtils . shouldUseOpaqueButtons method from AquaLookAndFeel . java to simplify the
updated variable names from ` maxFreq ` to ` maxCost ` in ` DrillSidewaysQuery ` and ` DrillSideways
added a new GeoDegeneratePath class to the classRegsitry to enhance the functionality of the GeoDegeneratePath class
removed the ` preFill ` parameter from several constructors in ` Pool ` , ` Pool ` , and ` ReflectionPool ` classes to simplify constructor
added conditional logic to update the taskbar stash controller state in TaskbarLauncherStateController and updated FLAG _ STASHED _ IN _ APP _
added null check for style before comparing with default style in CascadeDeleteVisitor . java to avoid potential NullPointerExceptions during style removal
bugfix : add a new constructor to the guiutil class to make it easy to set the max width .
refactor icon retrieval logic in FileTreeViewHolder to use TreeFileExtension for better readability and maintainability to enhance code maintainability and maintainability by
replaced ` isEqualTo ( ) ` with ` contains ( ) ` for qualifier assertions in ` ParallelUniverseTest . java ` to improve clarity and consistency in
added synchronization around the iteration over suite results in XMLReporter . java to ensure thread safety when processing suite results
test : add test native probability function to test native probability function
added a call to ShutdownThread . deregister ( this ) in ClientContainer . java to ensure proper cleanup of the shutdown thread
add a method to drop temporary table after use in SybaseASE15Dialect to provide a way to drop temporary table after use
[ hotfix ] [ webelement ] remove unused code in htmlunitwebelement
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code organization to enhance maintainability and readability of the code
updated hex string formatting in VirtualAllocCommitUncommitRecommit . java to include reserved 1024KB for Test to improve readability and maintainability of
do n ' t create a new ad playback state if there be no group
refactor equality check in MultimapSubject to use a boolean variable to improve code readability and maintainability
updated wave button data from deg _ text to unit _ hz in WaveGeneratorActivity . java to ensure accurate tracking of wave frequency values
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
removed the putAll method from the TreeMap initialization in TestLabelOptions . java to simplify the code and improve readability
vertexerflat : use normal _ 4f instead of normal _ 4f for vertex format
refactor TracingClientInterceptor and ITTracingServerInterceptor to use Tracer . withSpanInScope for better resource management to improve resource management and
replaced ` ZoneId . of ( timeZoneStr ) ` with ` TimeZone . getTimeZone ( timeZoneStr ) ` in ` ScheduledTrigger . java ` to
added new classes AsyncBucket , Bucket , Bucket , InMemoryExtension , and Bucket4j , and modified related classes to implement the InMemoryExtension interface to
updated test class path handling in resexhausted003 . java to utilize a regex pattern for class path validation to ensure that the test
removed unnecessary whitespace in AbstractConnector . java and added exception handling for InterruptedException to improve code readability and ensure proper handling of InterruptedExceptions
refactor OngoingStubbing class for improved readability to enhance maintainability and readability of the code
added a ` Optional < WebServer > ` parameter and modified the ` getValidWebServerPort ` method to accept a ` webServerToReuse
corrected the spelling of " productConstructor " to " constructor " in HttpClientUtil . java and added a static block in SolrTestCaseJ4
added a check to ensure the thread allowlist is not empty before clearing it to prevent potential NullPointerExceptions when the thread allowlist is not cleared
corrected the method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure
[ hotfix ] [ dmndt ] do n ' t check for colLECT in dmndtanalyser
[ hotfix ] [ test ] add test for slidingwindowcombine ( )
added a conditional check for ` allAppsDirty ` before binding app icons in ` LauncherModel ` to ensure app icons are bound only when
added a check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest . java to ensure proper handling of the " Running " attribute in
reformatted code for improved readability to enhance maintainability and maintainability of the code
refactor AquaMenuBarUI to utilize LWCToolkit for managing the use of the screen menu based on the operating system ' s embedded
fix entity . setrawlocation ( ) to return false if fall = false .
refactor query handling in SimpleJpaRepository to utilize CriteriaQuery for improved query functionality to enhance query functionality and maintainability by using a more
added genesis block timestamp , parent hash , nonce , and number fields to the BlockUtil class to enhance transaction input handling for genesis blocks
remove loopsafepointinsertionphase . cansafepoints ( ) check
zkprocedurememberrpcs : fix npe in rsgroupinfomanagerimpl and zkprocedurememberrpcs
changed access modifiers of several methods from package - private to public in ArtifactResolver . java to enhance encapsulation and enhance encapsulation
added thread cleanup and error logging in ClientConnectionHandler , BulletPhysics , ChunkProcessingPipeline , and ChunkProcessingPipeline to ensure proper resource management and
added validation to ensure maxBufferedDocs is at least 1 in IndexWriter . java to ensure that maxBufferedDocs is at least 1 to prevent potential
added functionality to manage the state of the login state in the LoginActivity to improve user experience by ensuring the login is only performed when the current state
added null checks for ` next ` and ` val ` in ` Pump . java ` , and created a corresponding test in ` PumpTest
updated access modifiers from private to protected in HttpShardHandlerFactory and modified access modifiers in LBHttpSolrServer to enhance encapsulation and
updated order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy . java and
added Server and HandlerList imports to TestJNDI . java to enable server and handler management in the Jetty server
updated variable names and logic in SortedDynPartitionOptimizer . java for consistency and clarity to improve code readability and maintainability
updated the return statement to always return true for NioEventLoop in FileStreamChannel . java to ensure proper handling of NioEventLoop instances
updated the calculation of numNulls in StatsUtils . java to handle cases where newNumNulls is greater than newNumRows to ensure accurate
camel - 16497 : camel - kamelet export now support the kamelet option .
replaced OkHttpOAuthConsumer with OpenStreetMap and added authorization handling in OSMJob . java to improve user experience by ensuring successful uploads to
removed static print statements from multiple classes and added a main method in BasicPTXTest . java to streamline code and improve readability by eliminating
added a clientAuth boolean field and its getter and setter methods to IoTDBRestServiceConfig and updated related classes to support it to enable client
updated the initialization of ` mocksToBeInjected ` in ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSame
updated BloomFilter64bit to implement InitializingBean and added getter and setter methods for expected inserts and hashCount in BloomUriUniqFilter
changed the cursor adapter from false to true in HomeFragment . java and added a preference for refreshing me in TweetPager . java to ensure
updated the intermediate header height ratio from 1f to 75f in ProfilePager . java to adjust the header height ratio from 1f to 75f
replaced ` @ SuppressWarnings ( " null " ) ` with ` @ SuppressWarnings ( " null " ) ` in ` NativeArray . java `
added a new configuration key ` HOST _ SYS _ PREPPED ` in ` ExecutionCommand ` , ` Configuration ` , and ` 
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and modified related logic in ` DatabaseChangeLog ` to include
added a loop to remove the ' / ' character from the location string in DefaultServlet . java to ensure proper handling of the ' / ' character
added properties for entities and scores in the StaticPipeline class to enhance the pipeline functionality by allowing configuration of scores based on specified properties
refactor filename handling in Frame . java and add configuration handling in Utils . java to improve clarity and functionality of the Whoops module
do n ' t throw an exception if there be no datastore in the catalog
refactor assertions in Assert class to improve code readability to enhance maintainability and readability of the code
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added tests for multi - line text functionality to enhance test coverage and
[ java ] fix the test that fail on the same topic .
refactor code to remove unnecessary list creation in TsFileWriteAlignedWithTablet and TsFileWriteAlignedWithTablet classes
[ java ] fix test testpromotionfromsurvivortotalgc . testpromotionfromsurvivortotalgc
updated log file name from " slf4j - log4j - log4j - log4j - log4j - log4j
[ hotfix ] [ test ] fix test failure on window
updated package names from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple
added @ Ignore annotation to KieContainerSolverFactoryTest . java to temporarily disable tests when DROOLS - 1276 is fixed
added a constructor to PullRequestMergedEventsStream that initializes the Pinot schema from a file to enhance functionality by allowing reading Pinot schemas from
refactor AbstractExpressionPart class to improve code organization to enhance maintainability and readability of the code
refactor TaskSlot class implementation to improve code readability and maintainability
[ java ] change channelfuturelistener to close in nettywebsocket . close ( )
added error handling for lock release in MoveTask . java to improve robustness by ignoring LockException during lock release operations
refactor property loading to use ResourceBundle for better resource management to improve code readability and maintainability by using a more descriptive method
replaced the static final byte array ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY in the Transaction class to simplify the code
reformatted code for consistency in ClassGraphClassLoader . java to improve readability and maintainability of the code
[ hotfix ] [ test ] fix jobmanagerstartuptest failure
[ ile ] add support for cloud datastream : : datastr and cloud datastream : : v1alpha1
added a new Bundle instance and included extras in FileDisplayActivity to enhance user experience by allowing customizable extras
updated the condition from ` break ` to ` continue ` in ` ParticleEmitter . java ` to ensure that the particle is not null before proceed
update cluster count from 4 to 1 in AmbariManagementControllerImplTest . java to reflect the correct number of cluster updates and cluster updates
removed nullable attribute from the TransientSessionTicketImpl column and added exception handling for NoResultException in JpaTicketRegistry to improve code clarity and
refactor Bug4823811 . java for improved readability to enhance maintainability and readability of the code
added path relativizer to args in RmStep . java to utilize the path relativizer from the project filesystem to improve
do n ' t try to request full state if initial request be set
refactor ShibbolethCompatiblePersistentIdGenerator to use attribute instead of convertSaltToByteArray and update related methods to improve attribute handling and enhance
removed unnecessary whitespace from the @ Inject annotation in RequestValidationService . java to improve code readability and maintainability
refactor message handling in UiThreadHelper to use a Bundle for hiding keyboard messages to improve code readability and maintainability by consolidating message
[ tsfile ] fix memory leak in mtree test
refactor NavigableMap and NavigableSet classes to improve code readability and maintainability
add a new test method ` testSlurpFile ` in ` IOUtilsTest . java ` to verify the functionality of ` IOUtils . slurp
updated visibility of the ` client ` map and added ` @ FunctionalInterface ` annotation to several classes to enhance encapsulation and enable function
refactor span retrieval logic into a separate method ` spanWithName ` in ` TraceWebFluxTests . java ` to improve code read
added support for date conversion in Hive schema converters and updated related classes to support date conversion in Hive to enhance date handling capabilities and ensure compatibility with
updated the way styles are split in StyleConverter from a string literal to a space - separated string to improve code readability and maintainability by using
ggb - 132 add a new parse method to the stringparser , to make it easy to parse the input dialog
refactor column count handling in SemanticAnalyzer to improve clarity to enhance readability and maintainability of the code
updated assertions and logic in WANDScorer . java to improve accuracy and accuracy of score updates to ensure accurate accuracy of score updates based on the
refactor Correspondence class to improve code organization to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java for improved clarity to enhance code readability and maintainability
updated the initialization of ` curPixVal ` in ` XRSolidSrcPict . java ` and added a new ` WhiteTextColorTest
refactor methods in BiomeDictionary to use a supertypes collection instead of a list to improve code readability and maintainability by using a more
rename ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache . java ` to improve clarity and consistency in naming conventions
added new imports for TestStabilityRule and PLATFORM _ POSTSUBMIT in TaplTestsLauncher3 . java to ensure compatibility with the new
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
added a null and empty check for logFileSuffix in SnippetUtils . java to ensure that logFileSuffix is not null and is not empty
updated import statements in PythonBuckConfig . java to improve code clarity and maintainability
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryNames ` methods in ` ShadowPackageManager ` and updated ` Shadow
[ meiligao ] fix meiligao decoder
added a null check for the tile before returning it to avoid potential NullPointerException when the tile is null
added a ` TrimCache ` class and modified cache handling in ` PrefFragment . java ` to utilize it to improve cache size management and
fix checkstyle issue in org . google . api . client . list
updated exception handling in BasicAuthAccessControlFactory and ZkBasicAuthAccessControlFactory to throw an NotAuthorizedException instead of returning false to improve robustness by
updated the ` schedulePeriodically ` method signatures to include an ` @ SuppressWarnings ( " unused " ) ` parameter and added a new method `
replace refreshListOfFilesFragment ( false ) with onItemClicked ( getRemotePath ( ) ) in FileDisplayActivity to improve user experience by
added a conditional check for the size of files match and improved error handling in StreamUtil . java to enhance robustness by preventing potential NullPointerExceptions
updated method signatures in SessionHiveMetaStoreClient and HiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext to streamline table creation
[ hotfix ] [ runtime ] fix race condition in fixedratefragmentinsstatetracker
updated indentation logic in multiple block parser classes to include a maximum indent value to ensure accurate formatting and prevent potential overflow issues
add a new network wifi status receiver and a corresponding event to manage wifi status changes in the PostFragment to enable users to manage network status changes
removed unnecessary check for control frames in FrameGenerator . java to simplify the code and improve readability
added visibility to the collapse handle indicator in WidgetsBottomSheet to improve user experience by ensuring the collapse handle is visible
added new files ` Issue475 . java ` and ` XSS . java ` for handling HTML and JavaScript requests to ensure proper handling of HTML
added a check to return early if the units to scroll is zero to ensure proper handling of empty units to scroll
updated the condition to check if the contract list size is non - 1 instead of greater than or equal to 1 to ensure that the contract list is
added ` add ` and ` put ` methods to ` JsonArray ` , ` JsonObject ` , and corresponding tests in ` JsonArrayTest ` and ` JsonObject
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class with hashCode ( ) method to ensure consistent hash code
danielwagnerhall : use getversion ( ) instead of geti ( )
added a condition to check if the transaction ' s platform fee is greater than zero before verifying the connection status to ensure that the connection is only
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
remove try - finally block in mediacodecrenderer . queueinputbuffer ( )
removed the ` public ` access modifier from several ` AsynchronousAntn ` , ` BulkheadAntn ` , ` CircuitBreakerAntn
added Retrofit import to Part and PartMap classes to enhance functionality by utilizing the Retrofit interface
refactor JsonBuildHelper and ParamsBuildHelper to improve type handling and parameter handling to enhance code readability and maintainability by consolidating
added TYPE _ TASKBAR _ OVERLAY _ PROXY and TYPE _ TASKBAR _ OVERLAY _ PROXY to
chore ( deps ) : update gapic - generator - java with mock service generation fix
updated alpha calculation logic in ClipAnimationHelper and added hasRecents boolean field in RemoteAnimationTargetSet to ensure accurate alpha calculation based on activity
removed the ' , true ' parameter from the createRenderScript method call to simplify the rendering process by removing unnecessary parameters
pdfbox - 4072 : fix typo in javadoc
refactor ` PluginListCellRenderer ` and ` PluginManagerActivator ` to use a dedicated method ` isSystemBundle ` to improve code readability and
updated import statements and formatting in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
[ hotfix ] [ test ] use low _ false _ positive _ rate in keychaingrouptest
refactor configuration handling in Overview . java to improve clarity and functionality to enhance code readability and maintainability by using a more descriptive
[ hotfix ] fix checkstyle violation in agentmanagerimpl
added a null check for the value before adding it to the entrySet list to avoid potential NullPointerExceptions when value is null
cloudstack - 12626 : improve error message when add host to cloudstack
updated NO _ NAME and NO _ VALUE strings to use " NAME _ ATTRIBUTE " and " VALUE _ ATTRIBUTE " instead of " No "
updated constructor parameters in BaseStubbing and ConsecutiveStubbing classes to use Object instead of InvocationContainerImpl to improve clarity and consistency in
added a method to strip method parameters from method names in the LocationOpener class to improve code readability and maintainability by using a dedicated method
updated the version name and code for the GreatVoyage application to reflect the latest release and ensure compatibility with newer versions
use set instead of list in outputfilter . getallowedcommands ( )
[ geot - 3636 ] fix for graphic resize and graphic - resize option in symbolmblayer .
[ geogebra ] make sure popups be center and resize properly .
corrected the spelling of " - " in error messages from " Function : " to " Table - " in ValidationSuite . java to improve
refactor ` QuickstepTransitionManager ` to use a custom ` StartingWindowListener ` instance to improve code readability and maintainability by centralizing
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to clarify the purpose of the MBeanServerConnection class
updated exception messages in CheckPackageAccess . java to include " PackageAccess SecurityException " and " PackageDefinition SecurityException " to provide clearer context
updated the timeout duration in ThreadSafetyTest from 30 seconds to 90 seconds and added a assertion to check if the executorService is terminated to ensure that
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check for ` loggingEnabled ` to ensure that
added ` @ JsonIgnore ( true ) ` annotation to the ` Schema ` class to indicate that the ` @ JsonIgnore ( true ) ` method is not
increased the timeout duration from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for the test to complete
refactor train methods in SimpleNaiveBayesClassifier for improved clarity and consistency to enhance code readability and maintainability by using a more descript
rename CheckHelperModule to CheckHelperControllerModule and add CheckHelperAuditModule to enable audit logging functionality in the application
refactor Prototype class to improve code organization to enhance maintainability and readability of the code
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure proper handling of table transactional properties
[ java ] remove the writefragment method from recordingwriter . onblock ( )
update cea and cue decoder to use offset _ offset _ relative instead of 0
[ kiros ] add ` ` alias ' ' to datastoremetricqueryimpl . getalias ( )
updated currency pairs from " BTC _ CAD " , " LTC _ CAD " , " LTC _ CAD " , "
updated EntityManagerFactory usage in NoCdiAvailableTest . java and DeepCollectionElementTest . java to ensure proper resource management and prevent potential memory leak
updated import statements from ` kafka11 ` to ` kafkaSender ` in ` ZipkinKafkaSenderConfiguration ` and ` ZipkinAutoConfiguration
added new test files GwtBinaryIntegrationTest . java and A . java for testing GIF and compilation mappings to ensure that GIF and compilation mappings are
added a check to hide loading cause labels in BrowserContentPane and modified ResultSetRenderer initialization in SQLConsole to improve error handling and ensure proper handling of
reformatted the return statement in EnhancedRandomImpl . java and added new test cases in EnhancedRandomImplTest . java to improve
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to manage security properties more effectively
added a new file ` InlineDefaultMethod . java ` implementing ` InterfaceWithDefaultMethod1 ` , ` Decoy ` , and ` Subtype `
updated SQL query patterns from " LIKE " to " GLOB " in SqliteFieldPredicateView . java to ensure compatibility with SQL
changed access modifier of getDMNProfiles method from private to protected to allow subclasses to access the method from other classes
fixed - Redissonscript . writeall ( ) method should return a node source instead of a string codec .
[ hotfix ] remove static method from staticobject . setwordfieldvolatable ( )
updated logging statements to use ` size ( ) ` instead of ` debug ` for various projects to improve clarity and consistency in logging output
[ hotfix ] [ log4j2 - 13636 ] fix log4j2 - http : / / issues . apache . org
added a new constant for HTTP JETTY _ SERVER _ HANDLERS and updated its usage in WebServer to improve code readability and
refactor shortcut handling in LauncherModel . java to improve clarity and maintainability of shortcut management logic to enhance code readability and maintainability by
removed unnecessary type check for value in DefaultHttpClientBinderRegistry . java to simplify the code and improve readability
added case handling for navigateUp ( ) in DetailFragment . java to ensure proper navigation behavior for home devices
added a condition to check if ` hasAndroidMarket ( ) ` is true before adding it to the play services check to ensure that only audio services
updated cell handling logic in TableBlockParser . java and added a new test case in TablesTest . java to ensure proper handling of outside whitespace
added a ` bridgingHeader ` field and associated methods in ` NewNativeTargetProjectMutator ` , ` AbstractAppleNativeTargetBuilder `
refactor PotentiallyDeadCode to utilize a new method for listing methods to improve code readability and maintainability by encapsulating
added diamond redundant argument handling and new classes for DiamondRedundantArgs , DiamondRedundantArgs , and T6939780 to enhance
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) `
removed debug logging statement from SolrCacheHolder . java to streamline cache metrics registration process by eliminating unnecessary logging
added catch blocks for AuthenticationException in LdapCtxFactory . java to improve error handling for AuthenticationExceptions
fix test6796786 . test6796786 . test6796786 . test6796786 . test67967
added " logback . dev . xml " to the list of configuration files in JoobyMojo . java and Main . java to enhance configuration
added a new file JaasEventCheck . java to handle Jaas authentication failures and success events to facilitate testing of Jaas authentication failures and success
refactor view animation logic in QuickstepTransitionManager to use a list instead of a single instance to improve code readability and maintainability by reducing
updated string distance comparison logic in ConjunctionSolrSpellChecker . java and added a new test class ConjunctionSolrSpellCheckerTest . java
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to ensure compatibility with
removed duplicate entries for Single LeaderInformation Change and All LeaderInformation Change in DefaultLeaderElectionService . java to streamline the code by eliminating unnecessary
removed the ` public ` modifier from the ` setAuthentication ` method in ` AuthenticationException . java ` to allow access to the ` setAuthentication `
[ hotfix ] [ agent ] add agent . script . timeout property to control wait time .
updated JDBC parameters from " . " to " JDBC _ SCHEMA " in AbstractJDBCConnectorProvider . java to ensure proper handling of JDBC
corrected the spelling of " UPDATE " in SQL update statements across multiple files to improve code readability and maintain consistency in naming conventions
refactor schemaTypeCache to use a synchronized map and use computeIfAbsent to improve thread safety and reduce unnecessary synchronization
refactor header addition logic in StaticServerHttpHeadersWriter to use a loop for better readability and maintainability to improve code clarity and maintainability
added JUnit Ignore annotation to LatticeDemo . java to temporarily disable tests that rely on files available from CMU
added a call to mkdirs the storage directory in TestCollector . java to ensure the test directory does not exist before proceeding
set chunked streaming mode to 1024MB in StarTreeJobUtils . java to ensure proper handling of chunked streaming requests
add new syntax checkers for basic and single type in jsonschema
hbase - 12263 addendum addendum update to hbase - common module
added a test for stack overflow exceptions in BeanPopulatorTest and created a new Node class to validate the behavior of beans with recursive structure to ensure that
added IOException to the getRemoteName method signature in AccountingTransceiver . java to ensure proper handling of IOException during remote name retrieval
updated exception handling in UserAccountManagerImpl and added HttpClient implementation in ClientFactoryImpl and ConnectivityServiceImpl to improve error handling and ensure proper client
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for the AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to ensure proper handling of security interceptors based on the " aspectj "
updated imports and modified hostname verification logic in Connection . java to enhance security by allowing hostname verification to be disabled
removed the ` final ` modifier from the ` getDataItem ` method and added a new ` remove ` method in ` OHLCSeries ` to
replaced invocation . invoke ( ) with invokeUrgent ( ) in ClientSchemaService . java and updated assertions in CompactFormatIntegrationTest . java to
removed redundant joint removal logic in the World class to streamline joint management and improve code clarity
fix nullpointerexception in searchfilter . issearchingphonenumber ( )
[ hotfix ] [ test ] move sourcereadertestbase to sourcereadertestbase
removed multiple redundant checks for null values in DocumentsStorageProvider . java to improve code readability and maintainability
added new HookDefinition , JavaHookDefinition , and JavaHookTest classes for handling hooks in the Java runtime framework to provide a way to invoke hooks
remove system . err . println from queryexecutorimpl . flushifdeadlockrisk ( )
updated ` setExoOptions ` method to include a ` allowTs ` parameter and modified the ` setExoOptions ` method to allow
removed the user identifier from the getIdentifierCollection in DMRDecoderState . java to remove it from the user identifier collection
added a static Color constant INVISIBLE and updated the toString method in RailButtonShapes . java and RailButtonShapes . java to improve color
updated null handling logic in CountAggregationFunction and added a new test for total count with null handling in NullHandlingIntegrationTest to ensure correct handling of null
added a deep variable to the InternalTransaction class to ensure proper initialization of the transaction object
updated the method to escape XML names in StreamInitiation . java to ensure proper handling of XML names in the buffer
updated the initialization of ` workDir ` to use ` config . get ( " work . dir " ) ` instead of ` new File ( "
added support for deprecated rule attributes in RuleSetFactory to ensure compatibility with deprecated rules
use codebuffer . position ( ) instead of label . bind ( ) in directcallop
updated TimeRange to use static final constants for minStamp and maxStamp to improve code readability and maintainability by using static final variables
refactor BitDocIdSet class implementation to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 461 - fix http connection issue
refactor attachment handling in DetailFragment and GalleryActivity to improve readability and maintainability of the code
fix an issue where the tank can not be fill when the world be remote .
updated CsharpLibrary . java to handle both DotnetLibrary and PrebuiltDotnetBuildRuleView instances to ensure proper handling of DotnetLibrary
[ iq ] add support for pep packet type in iqpephandler
added a null check for the ` runtime ` variable in the ` intrinsicGraph ` condition to ensure that ` intrinsicGraph ` is not null before proceed
[ hotfix ] fix checkstyle violation in metrictrackingwindmillserver
[ COS ] add lastobjid and lastobjoffset to bfsearchcosobjectkeyoffsets if eof marker do n ' t
added constructors to LwjglAppletApplication and a canvas instance to enhance application management by allowing customization of notifications
updated the stringRepresentation method in EnvironmentAndSystemPropertyClientProviderStrategy to handle null DockerClientConfig to improve clarity and functionality of the Docker host string representation
refactored the ` doPostAuthentication ` method in ` LdapAuthenticationHandler ` to handle messages based on ` ldapPasswordPolicyConfiguration ` to improve
refactor Int2ObjectCache class implementation to improve performance and readability of the code
added a new property ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to set the resolveFromAttribute `
refactor Readable class to improve code readability to enhance maintainability and readability of the code
pdfbox - 551 - page - break - avoid - stuck : use testsupport . with _ font
updated menu item icon from ` share _ menu _ item ` to ` android . menu _ share ` in ` CaptureActivity . java ` to ensure
[ java ] add java . specification . version to get version of java . specification . version
updated the IS _ JDBC41 variable to check for both AbstractMethodError , NoSuchMethodError , and AbstractMethodError in PoolUtilities . java to ensure
refactor GenericContainer class implementation to improve code readability and maintainability
replaced HashSet with ArrayList for filteredList in Enclosed . java to improve code readability and maintainability by using a more descriptive list instead
added multiple @ Override annotations in CentralAuthenticationServiceImpl , AbstractCasProtocolValidationSpecification , and AbstractCasView classes to improve code clarity and maintainability
updated variable declarations in ChartProvider . java to improve code readability and maintainability
fix import menu item to use file . parent instead of file . path
modified the return statement in JavacParser and added a new ExtraSemiTest class for testing Java source files to improve code clarity and ensure correct
added handling for AFTER , BEFORE , and createdAt in JpaQueryCreator and User classes , and updated UserRepositoryTests to utilize
updated Test15FloatJNIArgs . java file to improve performance and readability of the code
updated import statements in plugin . java for improved clarity and consistency to enhance code readability and maintainability by reducing redundancy
updated substring index calculation in MockProcessContext and added a new test for encryption and decryption in TestMockProcessContext to ensure proper handling of encrypted
[ java ] do n ' t call ` ` reentrant ( ) ' ' on callbacks .
added null check for inp _ dep before merging to avoid potential NullPointerExceptions during dependency merging
added a timeout parameter to the @ Test annotation in SslBytesServerTest . java to allow more time for tests to complete
refactor Peer class to improve code readability to enhance maintainability and readability of the code
added a new method ` getRealtimeSegment ( ) ` and modified ` toImmutable ( ) ` to ` toHistoricalIndexSegment ( )
added null check for exportedData before calling writeTo to avoid potential NullPointerException when the output is null
refactor scroll positioning logic in RecyclerViewFastScroller to use a dedicated method to improve code readability and maintainability by encapsulating
do n ' t start the tool window if the project be not disposed .
added a conditional check for Windows platform before creating a JCheckBox in GeneralTab . java to ensure proper handling of the prevents sleep checkbox based on user
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java ` to ensure
added cropped size and adjusted width and height calculations in QuickstepAppTransitionManagerImpl . java to enhance layout handling for vertical bar layouts
added a new ` fullScreenExclusiveModeState ` property and its getter / setter methods in ` XWindow ` and ` XWindowPeer ` classes
fix string indexoutofboundsexception in umsutil . playeddurationstr ( )
added methods to add credentials for MapWork in DagUtils to enhance the handling of credentials in the Dag application
camel - 14499 : camel - xref - do n ' t use keyset . get ( ) instead of keyset . get (
modified the way the thread name is set in SessionState . java to trim whitespace before setting the current thread name to ensure that the thread name is
updated the error message from " Not yet " to " Not yet " in GpsMainActivity . java to clarify the purpose of the description
refactor Job class to improve code organization to enhance maintainability and readability of the code
added a new abstract class ` Unused ` and a method ` testUnusedType ( ) ` to check if the ` Unused ` type is
updated HBase master host names from " hbase _ master _ host " to " hbase _ master _ hosts " in multiple files to ensure consistency in
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused classes to streamline the codebase
changed the return type of performJoin methods from GenericRecord to List < GenericRecord > in GenericJoinUDF , JoinPhaseJob , and Map
updated the maximum delegate lock period handling in ProposalUtil and adjusted related parameter values in DynamicPropertiesStore to improve flexibility in handling delegate lock periods
[ java ] change default value of network rate from int to integer .
added a constructor to the CmcExchange class that initializes services to ensure proper initialization of the exchange specification
updated GossipLocalNode to use config . node . ip . list instead of configObject to improve configuration handling and ensure correct IP list is used
set default value of hazelcast . client . tpc . enabled to ` ` false ' '
updated the swagger - ui version from 2.1 . 10 - 1 to 3.2 . 2 in multiple files to ensure compatibility with the latest swagger - ui version
updated comparison logic in MutableBigInteger and added a new ModInvTime class for modular inverse calculations to improve accuracy in modular inverse calculations
refactor key handling in NamedObjectList to use a local variable for clarity to improve code readability and maintainability
rename cleanupEmptyDir to cleanupEmptyTableDir across multiple compactor classes to improve clarity and consistency in naming conventions
refactor AsyncCache and Cache classes for improved performance to enhance performance and readability of the code
added RCFileInputFormat import and registered it in SerializationUtilities . java to enable serialization of RCFileInputFormat in the serialization process
added methods to retrieve Java type and category types in TypeMapperComponent to enhance type handling and category handling in the code
added error handling for invalid host header in Request . java and created a corresponding test in RequestTest . java to improve robustness by providing clearer
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use Robolectric ' s ReflectionHelpers for timezone lookup to enhance compatibility with Robolec
removed the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods from the ` StandardOp ` class to streamline the handling of outgoing values
removed the ` segment ` and ` dir ` fields from the ` SegmentCoreReaders ` class and updated related references in ` SegmentReaders `
add ` ` main _ thread _ profile _ capped _ id ' ' and ` ` main _ thread _ profile _ capped _ id ' '
added validation for Annotation definitions in a Buck rule with required _ for _ source _ abi = True to ensure that Annotation definitions are allowed in a
corrected the spelling of " greekLowerCase " to " greekLowercase " in multiple filter factory classes to ensure consistent naming
refactor HSSFSheet and Sheet classes to improve code organization to enhance maintainability and readability of the code
[ hotfix ] use discoverysearchrequestprocessor instead of backward compatibility
added list removals for " America / Dawson " , " America / WhiteHorse " , and " Canada / Yukon " to
updated the constructor of SurfaceSyncGroup to include " TaskBarController " to ensure consistent naming conventions for the taskbar controller
removed unnecessary casting of ` value ` to ` getId ( ) ` in ` GridFsTemplate . java ` and added a new test for
renamed the method ` query _ shouldReturnColumnIndexes ` to ` query _ shouldReturnColumnIndices ` and added new test cases in ` ShadowDownloadManager `
refactor character handling in TextField . java to improve readability and maintainability to enhance code clarity and maintainability by using a more descriptive
added a check to return early if the target equals the target object to prevent unnecessary processing when the target is equal to the target
refactored the ` afterSetStatements ` method in ` Block ` , ` BlockLexicalContext ` , and ` BlockLexicalContext ` classes to
added hashCode methods to IntervalXYDelegate , XYSeriesCollection , and XYSeriesCollection classes to enhance hashing capabilities for series collection operations
[ hotfix ] [ test ] fix checkstyle violation in clientqueuedisruptiontest
updated method signatures in ` CloudWatchAppender . java ` and added a new test class ` CachingAttributeRepositoryTests . java ` to improve code
updated method calls from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in ` GsonBuilder . java
added multiple calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in
added checks for non - empty subtags and modified language tag handling in Locale . java and LanguageTag . java to ensure proper handling of language tags
[ java ] add config option to enable / disable the management server to ssh into the agent .
removed the ` public ` access modifier from the ` ScheduledAction ` and ` OnCompletedAction ` classes in ` SchedulerWhen . java ` to simplify
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to improve code clarity and maintainability
added a condition to check if the filter contains a dash in the filter to ensure that only valid query strings are processed
updated label names from " natural order " to " Natural column order " in BrowserContentPane . java and modified UISettings initialization in Desktop . java
removed the use of Arrays . copyOf ( in , 6 ) in Utils . java to simplify the code by eliminating unnecessary array copying
http : / / issues . apache . org / jira / browse / amq - 4253 - fix bug in htmlsessioninformationsreport
updated the item name check from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to ensure the correct item
removed unnecessary synchronization in FastHttpDateFormat . java to improve code readability and maintainability
added a new thread pool and modified the move logic in Hive . java to improve thread management and ensure proper management of file move operations
added a new ` trigger ` method to the ` WrapTimer ` class and modified the ` trigger ` method to include a period parameter to enhance the
added LOCAL _ DATE _ TIME and LOCAL _ DATE _ TIME to type information checks in TypeStringUtils . java and corresponding tests in TypeStringUtilsTest .
updated error logging in AbstractStatusReporter to use a verbose option to improve error handling by providing a more descriptive error message
added menu toggle functionality to the ClickStartHandler and ItemControls classes to ensure proper handling of menu visibility based on user context
do n ' t allow vpn connection to be esitablished between same account and customer gateway
updated error handling logic in CursorReadingTask and added a new test for error handling in CursorReadingTaskUnitTests to improve error handling accuracy and ensure
pdfbox : log an error if the pdf be encrypted
fix race condition inCuratorZookeeperClient . getchildren ( )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
updated the ` deleteItem ` method to include the ` id ` parameter and added a call to ` getContentResolver ( ) . delete ` to ensure
refactor Java6Assertions and Conditions classes to improve code organization and maintainability
changed the return type of ` replaceOrderBulk ` from ` Collection ` to ` List < BitmexCommand > ` in ` Bitmex
updated method names from ` enterDefault ` to ` enterIdentNode ` in ` FindScopeDepths . java ` and added ` enterFunctionNode
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to utilize it to improve code clarity and
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for testing concurrent modification exceptions to ensure proper handling of concurrent invocations
add ability to remove resource from roster if there be no resource .
replace calls to ` pd . getProperties ( ) ` with ` pd . getOverlayedProperties ( ) ` in ` MapOperator . java ` and
added a new function parameter to the loadHandle method call in FunctionObjectCreator . java to improve code readability and maintainability
added null check for extTypeCustomDesers in MessagePackFactory and updated the copy method in MessagePackFactoryTest to use JacksonAnnotationIntro
added a system property to set the log level to " WARN " in the Main . java file to ensure that the log level is correctly set
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code
replaced ` scoreMap ` with ` termScoreMap ` and added a new variable ` scoreMap ` and ` termScoreMap ` to enhance score
updated conditional checks in U64 . java to use non - negative values instead of non - negative values to improve code readability and maintainability by
added headline style for the main view in MainViewModel . java to enhance the visual appearance of the headline for better user experience
added a boolean flag ` didSupportDarkText ` to the notifyChange method in ` WallpaperColorInfo . java ` to ensure correct handling of
[ hotfix ] [ checkpoint ] remove redundant ontooearly ( ) method in checkpointrequestdecider
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MINUTES constants and added CORE _ POOL _ SIZE
replaced ` filter ` with ` anyMatch ` in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver ` to improve code readability and maintainability by
added test requirements for Windows ServerCore container in OpenCVImageFactoryTest . java to ensure compatibility with Windows server core versions
[ java ] update activemq managedconnectionfactory to set prefetch on connection request info .
[ py4j ] fix the issue that pythonproxy . getreturnvalue ( ) throw an exception .
added @ Repeatable annotation to Issue . java and implemented a new Issues interface to enable testing of Issue objects in the application
updated user properties from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and updated imports
added a check for the socksProxyHost property before attempting to connect to the socket to ensure that the socket connects correctly when the socksProxyHost
[ hotfix ] [ javadoc ] fix typo in slotstatus javadoc
removed the import of ClassUtils from ReflectionUtils . java to streamline the code by eliminating unnecessary dependencies
replaced HashSet with LinkedHashSet in SslContextFactory . java to ensure consistent ordering of protocols and cipher suites
added a static variable ` systemResource ` and updated its usage in ` Resources . java ` to improve resource management by avoiding potential null pointer exceptions
[ java ] add extra size to buffer allocation in streamingaddecryptionchannel and streamingadseekabledecryptionchannel
added a new test method ` circuitBreakerInvalidFallbackThrowsException ` to ` ServerMvcIntegrationTests ` to ensure that invalid fallback exceptions are
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 24448 - fix
replace resetBytesReadCounter ( ) with setSizeLimit ( 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFF
removed the ` preferAES ` field and its associated getter and setter methods from ` ProtectionPolicy ` and ` StandardProtectionPolicy ` classes to streamline
camel - 14499 : camel - tika - test - use logger instead of system . out . println
[ java ] remove elbintegrationtest . testloadbalancerinstanceoperations ( ) from elbintegrationtest
corrected the spelling of " setAlarm " to " setRingtone " in the AlarmReceiver class to ensure consistency in naming conventions
added error handling for file creation in DiacriticTest . java to improve robustness by preventing file creation errors
hhh - 14158 - skip test for oracle dialect that work on oracle 11
added file existence checks and improved exception handling in TextureUnpacker . java to enhance error handling and provide clearer feedback when atlas images are
refactor locking mechanism in AmbariManagementControllerImpl . java to use a concurrent lock for thread - safe operations to improve resource management and
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code readability and maintainability
added a test method ` testResultSetShouldNotCloseStatement ` to ` TestJdbcDriver2 ` and modified ` HiveQueryResultSet ` to ensure proper
http : / / issues . apache . org / jira / browse / amq - 461 - fix the issue of the chunking test
added logic to remove pre - deleted databases from the schema map in ClusterSchemaManager to ensure proper handling of database pre - deleted databases
h2c upgrade : remove chunkedwriter from h2c pipeline if it do n ' t exist
updated item deletion logic in EnhancedBrowseFragment and added a deleteItem method in FullDetailsFragment to enhance item deletion functionality and improve user interaction
refactor ` RuleBank ` to implement ` RuleBank ` and introduce a new interface ` RuleBank ` to improve code organization and maintainability by
added error handling for initialization of the cipher in JcaTlsCrypto . java to improve robustness by catching potential exceptions during initialization
added two new Java files , TestMonomorphicObjectCall . java and Object . java , for testing monomorphic object calls to implement native
updated the method ` removeMetaDataSource ` to ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop . java ` to
hbase - 12279 addendum : fix memstore . shouldseek ( scan , store )
[ hotfix ] [ runtime ] remove unused localrecoverystaterootdirectories from taskmanagerservicesconfiguration
updated AlterTimeSeriesStatement to initialize with a boolean parameter and modified the isAlterView field in the AlterTimeSeriesStatement class to enhance flexibility in handling
fix regex pattern in condition . matchtext ( ) and add unit test
add try - catch block to handle exception in brokerstarter . get ( )
http : / / github . com / codenameone / codenameone / codenameone / codenameone / codenameone / issues
[ hotfix ] [ test ] use char [ ] instead of string in test config
http : / / code . google . com / p / mybatis / issues / detail ? id = 42 : fix regression in apiserv
updated the ` toSortedListWithCounts ` and ` equals ` methods to use ` ! = ` instead of ` Math . abs ` to
updated the parameter name from ` status ` to ` original ` in the ` initialize ` method in ` BasicTumbleStepper ` to improve clarity
[ gr - 16464 ] remove system . currenttimemillis ( ) from syscallclockgettimenode
refactor variable declaration in PrettyPrinter . java for clarity to improve code readability and maintainability
added a null check for ` currSize ` before initializing ` indexToNode ` to prevent potential NullPointerExceptions when ` indexToNode ` is
http : / / issues . apache . org / jira / browse / amq - 2678 - add a check for the presence of a
updated JUnit imports and annotations from ` org . junit . Assert ` to ` org . junit . jupiter . api . Assertions `
added a new file ` NutchServerInfo . java ` containing fields for startDate , job , configuration , runningJobs , and runningJobs to provide
updated EdgeNGramTokenFilter to use AttributeSource instead of OffsetAttribute and PositionLengthAttribute to streamline attribute handling and improve code clarity
add timestamp option to setting column ( # 119 )
updated condition checks for strength in DSAParameterGenerator . java to use BigInteger . ONE instead of BigInteger . ONE to improve code readability and maintain
updated NumberUtils and Numbers classes to use ` doubleToLongBits ` instead of ` floatToIntBits ` for better handling of integer values to improve code clarity and
updated mask check in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and ensure correct masking behavior
added constraint violation checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper . java to ensure proper handling of SQL
[ java ] remove setzeroifnotfound ( false ) from remotebrokeroffsetstore
added a new method ` addTab ` and ` insertTab ` to the ` Tabs ` class and modified the ` createTab ` method to
replace array size ( ) with an empty array in multiple Java files to improve code readability and maintainability by using an empty array instead of a
[ hotfix ] [ runtime ] add taskmanagerruntimeinfo to mockenvironment
added a conditional check for the presence of ` reqGroup ` , ` reqGroup ` , and ` artifactId ` in ` MavenVisitor . java `
updated variable names from " MOCK _ APP _ SECRET2 " and " MOCK _ NAME2 " to " MOCK _ NAME _
added a new test file ` FormatCheckingTest . java ` for verifying class format errors to ensure proper handling of invalid class names in Java processes
updated line number setting in CodeGenerator . java to use lastLineNumber instead of statement . getLineNumber ( ) to improve code readability and maintainability by
added a try - catch block around the add method call in ConfigHelper . java to handle potential exceptions when adding configurations to the result
added new methods for creating RadioButton instances with specified parameters and command parameters to enhance functionality by allowing dynamic selection behavior based on user input
updated the initialization of the LinkedHashMap and CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 in LRUCache and MetadataQuer
changed the visibility of DEFAULT _ CAPACITY from private to public in SimpleChannel , ChannelParser , and MessageBusParser classes to allow access to the
fix nullpointerexception in managementnamestrategy . quotereplacement ( )
add support for usemode system property in modecontribution
[ hotfix ] [ yarnsessionfifoitcase ] [ test ] make yarnsessionfifoitcase wait for two container to
replaced ` projectRoot ` with ` androidManifestPath ` in multiple RobolectricTestRunner constructors to improve clarity and consistency in naming conventions
added null check for notPropagatedHeaders in AbstractMessageProducingHandler and updated selectiveHeaderPropagation logic in AbstractReplyProducingHandler to
refactor CompareMode class to improve code organization to enhance maintainability and readability of the code
added ` @ Hint ` annotation to ` Arg ` and ` Arg ` classes and implemented tests in ` RustBinaryDescription ` and ` Arg
updated placeholder resource from ic _ recent _ image _ placeholder _ 120dp to ic _ recent _ image _ placeholder in FileMessageVH . java
refactor OnExitTest class to improve code readability to enhance maintainability and readability of the code
added a new method ` onUserPreferenceChanged ` to ` TaskbarManager ` to handle user preference changes in the taskbar
do n ' t use reflection for heap dump on linux
http : / / issues . apache . org / jira / browse / amq - 4253 - fix the issue of mybatis producer
updated driver initialization from FIREFOX to IE and added wdSwitchToWindow and wdQuit methods in ExportedWebDriverFunctions
added a TriggerPattern annotation to the constraints and changed variable declarations to use diamond operator to enhance type safety and improve code readability
added a call to set the application ' s state to unAVAILABLE to ensure the application is properly initialized
refactor buffer handling in ByteBuffer , Direct , and StringCharBuffer classes to use position and limit variables to improve code readability and maintainability by
removed unnecessary method call to toUri ( ) in ConditionalResolverMergeFiles . java to simplify the code and improve readability
updated array deletion logic in NativeArray , ArrayFilter , DeletedRangeArrayFilter , DeletedRangeArrayFilter , and ObjectArrayData classes to
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to enhance encapsulation and enhance encapsulation of enum
updated document handling in TestMultiPhraseQuery . java to use a document6 variable to improve code readability and maintainability
do n ' t set ticket reservation status to offline for offline payment
added a new thread ` _ onTimeoutThread ` to handle timeout events in ` HttpChannelState . java ` to ensure proper handling of timeout events
replaced printStackTrace ( ) with logger . debug ( ) in multiple test files to improve logging clarity and maintainability of the code
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
updated the read method to conditionally use LOCAL _ QUORUM based on consistencyForPaxos to ensure consistencyForPaxos is
added a check for " Home " model in HeosDiscoveryParticipant . java and modified the handling of serial number in HeosPlayerHandler . java
added a new ` Wait ` class and its getter / setter methods in ` PlainSelect ` , ` SelectDeParser ` , and ` SelectDe
refactor attribute handling in Neo4j to use AttributeController for node and edge data retrieval to improve code clarity and maintainability by centralizing attribute
added a null check for serverName in the SessionManager class to prevent potential NullPointerExceptions when serverName is null
nifi - 154 : move rocksdbmetronome into nifi - core and nifi - core - rocksdb - core
updated the method to retrieve the IS _ GRANTABLE value from results to ensure correct retrieval of the IS _ GRANTABLE flag from the results
updated JavascriptContext to check if the URL starts with " javascript : " instead of " shouldNavigate " to improve the handling of " javascript :
fix cxfmtomconsumertest failure on macos
updated column modifying logic in LoadTestTool . java to conditionally use a new column based on the current cf state to ensure proper handling of
added ` Disposable ` interface to the ` Texture ` class to implement the ` Disposable ` interface for better performance
added null checks for tldBundleLocation in WebappRegistrationCustomizerImpl and updated imports in OSGiAppProvider and OSGiServer
do n ' t set goquorum compatibility mode if -- genesis - file be not specify
replace IOException with Throwable in HttpInput . java to improve error handling by using a more general Throwable instance instead of IOException
added a condition to skip Thailand based on the country ' JP ' in LocaleTest . java to ensure that Thailand appears only after " TH "
updated API operations in HostService , RootServiceService , and ViewPrivilegeService to use ViewPrivilegeResponseWrapper instead of Wrapper to improve clarity and consistency
updated equality checks and hash code calculation in FilteredQuery . java to enhance query comparison and hashing accuracy
removed unnecessary whitespace in the constructor of FileMenuFilter class to improve code readability and maintainability
ggb - 126 : fix texteditadvancedpanel and texteditadvancedpanel
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
fix an npe in the forgeeventfactory when there be no entity .
rename ` KeyMappingPreparedStatementSetter ` to ` ItemPreparedStatementSetter ` across multiple classes to improve clarity and consistency in naming conventions
[ hotfix ] [ test ] replace range with bounds in compactionstest
added error handling for invalid ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java
added a new ` SpELJudge ` operator and a new ` SpELJudge ` class to the ` OperatorJudgeFactory ` class
[ hotfix ] [ runtime ] use equal instead of = = for ordinalitysymbol .
replaced the use of ` javax . swing ` with ` EventQueue ` in the ` Profiler ` class to improve code readability and maintainability by
updated import statements in ConscryptTest . java and added an assertion in ConscryptTest . java to improve code clarity and maintainability by
updated the creation of ` Ref ` instances in ` AttributeResolution9 . java ` and ` ShadowArscAssetManager9 . java ` to ensure
updated the number of source source and target options from " 1.0 " to " 6 " to allow for additional source source and target options
[ calcite - 164 ] make pushprojectintablesourcescanrule # extractmetadatacolumns public .
replaced the method of obtaining localized names with a sorted list of localized names to improve code readability and maintainability by using a more descriptive
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a conditional check for live streaming in HomeFragment to ensure that shared preferences are only refreshed when live streaming is enabled
added an exception parameter to the MappingException message in AuditConfiguration . java to improve error handling by providing more context on the exception
[ hotfix ] [ test ] fix test failure in fileconsumerpollstrategystoponrollbackfailure
updated generic type parameters in SchemaLoader and related classes to use wildcards to enhance type safety and enhance type safety for type safety
added support for transport support in GitClientApplication and updated RepositoryUrlPanel to use it in RepositoryUrlPanel to enhance security by allowing users to support
added a new ` getDelegatorName ` method to multiple input consumer classes and implemented it in the ActiveGestureLog class to enhance logging clarity
updated version retrieval logic in ChangeParentPom . java to handle null mavenMetadata and improved version upgrade logic to enhance robustness by avoiding null pointer
added a check for large page Support in TestLargePageUseForHeap . java to ensure proper handling of large page support in the output
cloudstack - 218to22 : do n ' t migrate event migration if usage db do n ' t exist
added IOException handling to the getTestParameters method in BrokerXmlConfigStartTest . java to ensure correct configuration path handling for Windows environments
added a new test class ` TestObjectStreamClass ` for serialization and deserialization of ` ObjectStreamClass ` to ensure proper serialization and deserialization of ` ObjectStreamClass
removed unnecessary null checks for getDataCenterInfo ( ) in ZoneAwareDiscoveryFilter . java to simplify the code and improve readability
change log level from error to warn in opentracingtracer
added a ` toString ( ) ` method to the ` Generator ` class to provide a string representation of the number of registered generators
updated URI . java to initialize doquote with an empty string and added new test cases in Test . java to improve code readability and ensure correct
added a null and empty check for resource existence in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to ensure
fix nullpointerexception in accepttoapiutils . decoderesponse ( )
updated vertex buffer allocation logic in VertexBufferObject . java to ensure proper handling of vertex sizes based on device version
refactor SybaseASADatabase class implementation to improve code readability and maintainability
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated related methods to enhance the ` HashJoinInfo ` class to
added a method to retrieve the string distance from the SpellChecker class to provide access to the string distance from the SpellChecker class
added FLAG _ ONE _ SHOT , FLAG _ IMMUTABLE , and FLAG _ IMMUTABLE constants , and modified PendingIntent creation methods to
added methods to append and append read column IDs in HiveFileFormatUtils and updated HiveInputFormat to use this new method to improve code clarity and
replace instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java `
added a Toast message to display a toast message in SavedExperiments . java to enhance user experience by providing a clearer toast message
added version setting for service info in ServiceModule and a corresponding test in ServiceModuleTest to ensure correct handling of service versions in the ServiceModule
added a new test class ` RawSerializationTest ` for JSON serialization of ` Collection < Integer > ` and ` TypeToken < Bar < Foo >
( chore ) camel - selenium : rename seleniumserver to sslcertificategenerator
replaced for - each loop with an index - based loop in ExpansionViewHelper . java to improve readability and maintainability of the code
increased the timeout duration from 3 seconds to 60 seconds in ` ExpiringUrlCacheTests . java ` to allow for more time for resource access
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the behavior of ` PayloadAttribute
refactor AclImpl class to improve code readability to enhance maintainability and readability of the code
added unit tests for different array sizes in EasyRandomTest . java and removed redundant test cases in EasyRandom . java to improve test coverage and
[ citrix ] catch all exception when stop the vm
added a ThreadLocal to manage the value of tryWriteAgain in SslConnection to improve thread safety and prevent potential memory leaks
added a method to check if the actor ' s ancestors are visible in the Actor class to improve code readability and maintainability by encaps
added logging for deployment group name in RollingUpdateOpFactory . java to improve clarity of error handling during rolling update operations
[ hotfix ] [ table ] fix checkstyle violation in tablesource
added error handling for invalid usernames in DaoAuthenticationProvider and created a new ` AuthenticationFailureUsernameNotFoundEvent ` class to improve user authentication failure
refactor AtMostXVerificationTest class to improve test coverage to enhance code clarity and maintainability
updated default QTYPE from OldLuceneQParserPlugin . NAME to LuceneQParserPlugin . NAME in QueryComponent . java and added args
updated SimpleDateFormat instantiation to use Locale . US in WeekDateTest . java to ensure consistent formatting across different locales
added a new method ` isInitialized ( ) ` in ` ILanguageServer ` and ` JavaLanguageServer ` , and modified the ` isInitialized
updated the ` test _ fetch _ token _ from _ authorization _ code ` to ` test _ fetch _ token _ from _ authorization _ code `
added beginTransaction and endTransaction methods to DatabaseAdapter and updated GncXmlHandler to delete all records to improve transaction management and ensure proper cleanup of
replaced byte array with ByteArrayOutputStream for reading data to improve performance by using a more efficient byte array handling
refactor exception message formatting in MessagingTemplate . java to improve readability and maintainability of the code
added an ` isAcceptable ` method to the ` AutoFormatVisitor ` class to determine if a file is an instance of ` J . 
added methods to set maximum buffered documents and memory buffer sizes in TestIndexWriterMergePolicy to improve performance by reducing buffer size for better performance
added a method to clear the wits list in Manager and created a corresponding test in NodeDelegateImpl to improve memory management and ensure proper cleanup of
added error handling for NoSuchElementException in CopyOnWriteMap . java to ensure proper handling of NoSuchElementException during iteration
flume : remove unused import of log4j . level from flumenode
added a reindex collection and updated metric assertions in BasicAuthIntegrationTest . java and modified the DaemonStream . java to use a dedicated executor for
replaced HashMap with LinkedHashMap for nodes in DependencyUtil . java to improve performance and maintainability of the code
add an internal error mapper to the jerseysupport # builder to handle internal error
refactor header validation logic into a separate method ` validateHeader ` to improve code readability and maintainability by consolidating header validation logic
added switch - case handling for system properties in System . java to ensure compatibility with Java ' s IntegerCache and PageAlignDirectMemory functionality
updated method signatures from String to CharSequence in StringSubject . java and added new test cases in StringTest . java to ensure proper handling of character sequences
added new intrinsics for ` toBeInvestigated ` in ` CheckGraalIntrinsics . java ` to ensure compatibility with JVM
rename IntUtilsTest to PrimUtilsTest to improve clarity and consistency in naming conventions
updated the way the connection factory is created in PersistenceManagerProvider to ensure proper handling of compaction configurations
refactor DeploymentOptions class to improve code readability to enhance maintainability and readability of the code
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable . ConstantState ` instead of ` Drawable . ConstantState ` to improve code
replaced ` InputStreamReader ` with ` StringReader ` in ` XmlParser ` and ` YamlParser ` classes to improve code readability and maintainability by
added a new method ` rewriteCoalesceChildren ` in ` RexNodeConverter ` and registered the ` COALESCE ` function in
remove hl7 unmarshal failure test from hl7dataformattest
set the context classloader in the JavassistProxyFactoryFactory to ensure compatibility with the current thread ' s context class loader
make defaultdatetypeadapter thread - safe
reformatted code for better readability and consistency in DocumentUtil . java to improve code readability and maintainability
updated URI handling in HttpClientRequestBase and added assertions for index . html in HttpClientRequestBaseTest to ensure proper handling of URIs and improve test coverage
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to streamline entry filtering logic to improve code readability and maintainability by
changed log level from fatal to warn in FSHLog . java to improve logging clarity by using a more descriptive log level
refactor the ` getValues ` method in ` NodeMap ` to implement ` NodeMapIterable ` and add a ` remove ` method to improve
updated imports and refactored predicate handling in DiscoveryClientRouteDefinitionLocator . java to improve clarity and consistency in predicate handling
added a check for non - empty fields before adding them to the operations in MongoRecordReader and modified return logic in RexToMongoTranslator to
add admin to admin list if there be no admin list
replaced instances of ` MultiFields . getFields ( ) ` with ` SolrIndexSearcher ` in multiple plugin classes to simplify code and improve readability by
replace bean . tostring ( ) with objecthelper . getidentityhashcode ( bean ) .
updated the logic for retrieving the resolved type in GroovyParserVisitor . java to simplify the code and improve readability by eliminating unnecessary checks
[ gr - 13232 ] remove unused hashcode ( ) method from frameinfoquery
[ java ] increase test timeouts to prevent test from fail .
added a new file ` package - info . java ` for the ` org . apache . lucene . core . testresources ` package to provide a
updated the calculation of readLen in MessageUnpacker . java to ensure the correct read length is calculated based on the buffer size
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core . lang . Nullable `
added a user parameter to the IconDB COLUMN _ COMPONENT column in IconCache . java to ensure proper handling of user information in the icon database
fix typo in defaultmqproducerimpl . getasyncsendsize ( )
scanspecpathelementmodule : do n ' t whitelist resource if classfile - only be enable
added a method to fix baremetal foreign keys in the Upgrade410to420 . java file to ensure proper handling of foreign key
removed the IJava2DRenderer interface from Java2DRenderer . java to simplify the code and remove unnecessary interface
added an override for the onTearDown method in DefaultAudioSink to handle off - loading buffers to ensure proper handling of audio events during teardown
refactor UpstreamCacheManager to utilize a ScheduledThreadPoolExecutor for managing Upstream events to improve thread management and maintainability of the code
refactor StreamType class implementation to improve code readability and maintainability
updated assertion message in Recording . java to include an additional context to provide clearer context about the expected output
updated imports and modified authentication logic in FilestorePage . java and RootPage . java to use RequiresAdminRole annotation to improve code clarity and
ignore camel - elasticsearch rest test due to miss @ ignore annotation
[ hotfix ] [ runtime ] fix checkstyle violation in expressioncontrolbusfactorybean
updated button names from " leftButtonAltcoin " and " rightButtonFiat " to " sellWithFiat " in OfferBookChartView
camel - 14499 : restlet should not allow method to be allow by uri prefix .
[ java ] make block . createnextblock ( ) and block . createnextblockwithcoinbase ( ) nullable
updated BTreeMapJava to implement NotSerializableException and modified ConcurrentSkipListMapTest to utilize serialCloneNoCatch instead of serialClone to improve serialization
added null check for the cause before logging error messages in RuleEngineImpl . java to avoid potential NullPointerExceptions during execution
reformatted the conditional statement in Main . java for clarity to improve readability and maintainability of the code
updated the method call from ` mFilesAll ` to ` mFiles ` in ` LocalFileListAdapter . java ` to ensure consistency in method
deleted the PlainVerifier . java file to remove unused code to streamline the codebase
added a conditional check to close system windows if triggeredFromAltTab is triggered to ensure that system windows are properly closed when the action is triggered from
updated DialogFragmentIT and OCFileListBottomSheetDialog to use BottomSheetBehavior instead of BottomSheetBehavior to improve user experience by
updated the ` parseCharset ` method to include a character encoding " UTF - 8 " in ` MimeUtil . parseCharset ` to ensure consistent
added a call to ` super . deinitialize ( ) ` in ` TextField . java ` to ensure proper initialization of the TextField
replaced ` writeObject ` with ` TestUtilities . serialised ` in the ` testSerialization ` method to improve code readability and maintainability by using
update preRange calculation to use previousUntilLastClause instead of previousClause in LogicalGenerator and GroupByFillDataSet to improve accuracy of preRange and
added error handling for negative array size in JAXWSExceptionBase . java to improve robustness by throwing a NegativeArraySizeException when len
updated JUnit imports from JUnit 4 to JUnit 5 in CtUnresolvedImportTest . java to ensure compatibility with the latest JUnit
updated join time from 1000 * 10 to 60 seconds in T6567415 . java to improve performance by allowing more time for join operations
[ hotfix ] [ runtime ] change default value of slotsharinggroup from legacy to region
added a title field and its getter / setter methods in ShadowActivity , ShadowDialog , ShadowTextView , ShadowToast , and ShadowToast classes
use poilogger instead of warn in poifsfilesystem
refactor alarm handling in InstarHandler to use a new channel state to improve code readability and maintainability by using a more descriptive
[ hotfix ] [ map ] fix delete operation count in localmapstats
refactor status handling in Option and Response classes to use switch - case statements to improve code readability and maintainability by using a switch statement
updated the method for finding Javac files and added error handling in CheckResourceKeys . java to improve code clarity and ensure proper handling of Java files
[ hotfix ] [ runtime ] add project name to additional settings for stable channel
added a new test class deprecatedStubbingTest to verify the behavior of stubbing methods in Mockito to ensure correct behavior of stubbing methods in Mockito
replaced the import of ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType ` in ` ITB
add ` ` nml ' ' and ` ` nml ' ' to the list of supported relation
[ bouncy castle ] do n ' t allow rsa key exchange by default .
updated variable name from ` output _ reader ` to ` reader ` and added ` reader . close ( ) ` in ` PerforceHistoryParser `
add deleteoauthserviceandaccesstoken ( ) and deleteoauthserviceandaccesstoken ( ) to pubsubapi and sdmapi
updated animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to improve animation
[ iotdb - 232 ] add updateregionlocation support for confignode replication
added a new file ` FileDialogLeakTest . java ` that tests the ` finalize ` method of ` FileDialog ` to ensure that the ` finalize
hbase - 14469 move testopentableincoprocessor to coprocessor package
[ gr - 14486 ] fix the truffle feature for non - interruptible implementation .
[ hotfix ] [ protobuf ] remove unused parameter in pbcodegenrowdeserializer and pbcodegenrowserializer
added a null check for the disi variable in DrillSidewaysScorer . java to ensure that the disi variable is not null
refactor test methods to use a Handler for source info refreshing to improve thread safety and maintainability of the code
added JVM spec version handling in Constants . java and modified conditional check in Helper . java to ensure compatibility with Java 9 and above
updated the ` FileReporter ` constructor to cast ` null ` to ` String ` and ` File ` instead of ` null ` to improve type safety
change the condition from ` isFalse ( ) ` to ` isTrue ( ) ` for ` getEndToEndEncryptionKeysExist ( ) ` to ensure
added home button functionality to the action bar in DirectMessageConversation to enhance user experience by enabling the home button in the action bar
added support for the GET _ USER request and updated protocol version from 5 to 6 in the RpcServlet and RpcUtils classes to enhance user management and
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable system architecture for MSSQL tests
replaced the startClass variable with a originalStartClass variable to improve code readability and maintainability by using a more descriptive variable
[ java ] add local registration to jimple . newlocal ( ) and use unknowntype . v ( )
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsync
add a fix to fix the look and feel of look and feel
updated regex pattern for version string in AppPage . java to ensure correct handling of version strings in the application
refactor animation listener implementations in LauncherAppTransitionManagerImpl . java for improved readability and maintainability to enhance code clarity and maintainability
updated AddressFormatException message from " base58 " to " version " in DumpedPrivateKey . java to improve clarity of error messages for better clarity
updated the method call from ` offerPayload . getExtraDataMap ( ) ` to ` newOfferPayload . getExtraDataMap ( ) `
refactor milestone parameters initialization in TicketPage . java to check if the milestone is open before creating it to improve flexibility in handling milestone parameters based
changed the battery size from 640 to 80 in PipeItemsWood . java to adjust the battery size from 640 to 80
added a new method ` getClusterKey ` to retrieve cluster keys and blueprints in the ` StateMachineInvoker ` class to enhance functionality by allowing
set downgradeAllowed to true in UpgradePack . java and add a new test for downgrade behavior in UpgradePackTest . java to ensure correct
replace instances of ` NameType . ATTRIBUTE ` with ` NameType . ATTRIBUTENAME ` in multiple files to ensure consistency in naming conventions
add ability to load library from system class loader when load library .
replaced instances of ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` in ` AppsCustomizePaged
updated file handling in FatJarStarter to ensure proper resource management to ensure proper resource management and prevent potential resource leaks
updated the ` doTest ` method signature and modified the assertion message formatting in ` TestSecretKeyCredentialHandler . java ` to improve readability and
camel - 14497 : camel - route - finder should use spring - boot context instead of applicationcontextaware
[ hotfix ] [ runtime ] fix typo in metricoptions
[ java ] fix test fulllogreconstruction . testfulllogreconstruction fail on slow machine
http : / / issues . apache . org / jira / browse / amq - 3078 - configure socketoptions . reuseaddress to false
updated player kick message to use getShutdownMessage ( ) instead of a hardcoded string to improve code readability and maintainability by using a
[ java ] remove deprecate Locatable interface in favor of the old one
updated error messages in VersionInfo . java to use " searchable " and " retrievable " instead of " true " to improve clarity
replaced ` equalityPredicateColumns ` with ` predicateColumns ` in ` StarTreeIndexOperator . java ` to improve clarity and consistency in naming conventions
reformatted code in HandshakeHandler . java for consistency to improve readability and maintainability of the code
updated closing brace formatting in Navigator . java to improve code readability and maintainability
refactor RecordReaderFactory to use a new class for ParquetRecordReaderConfig and add a new test class for the ParquetRecordReaderConfig
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator and corresponding unit tests to
refactor grouping logic in CalciteSqlParser to utilize a new method for checking group by clauses to improve code readability and maintain
updated MappedByteBuffer and FileChannelLinesSpliterator to include a bufRefCount parameter and modified FileChannelLinesSpliterator to utilize it to improve memory management and ensure
replaced direct calls to ` l . getValidator ( ) ` with ` validator . getValidator ( ) ` in ` LdapUtils . java ` to
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and modified the testCircuitBreakerTest to utilize it to improve
removed unnecessary FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent
rename webui . submit . upload . ajax to webui . submit . upload . progressbar
added JUnit 5 @ Disabled annotation to TableExtRetrieverTest . java to disable the test by allowing for retrieval strategy for column privileges
fix race condition in entitygraph . getexportedcount ( )
updated import statement for IntRangeUtil1 from IntRangeUtil1 to IntRangeUtil . requireNonNegative to ensure consistent usage of IntRangeUtil
updated HttpParser to handle SPACE characters and improved string appending logic to enhance error handling and ensure correct encoding behavior in HttpParser
updated the layout resource from trends _ activity to configuration _ activity in ConfigurePagerActivity . java to improve clarity and consistency in layout naming
fix typo in sslwttextlisting
refactor ForceLeaderTest to utilize TimeOut for tlog replicas and add a new ForceLeaderWithTlogReplicasTest class to
refactor Thread class methods for improved performance to enhance performance and readability of the code
refactor RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES and RECOGNIZED _ TEMPLATE _ FILE _ 
camel - 14497 : camel - cxf - fix the issue that camel - cxf do n ' t support xml namespaces .
removed unnecessary whitespace in YamlRepresenter class to improve code readability and maintain consistency in formatting
updated date formatting in ToChar . java and added a new SQL statement in TestFunctions . java to improve readability and maintainability of date formatting
added validation for transaction and table write IDs in GenericUDTFGetSplits . java to ensure proper handling of transaction and write IDs
replaced ` new ArrayList < String > ( ) ` with ` Collections . emptyList ( ) ` for columnNames and columnTypes to improve code readability
[ audiveris . omr . sheet . ui . stubdependent . initial _ image ] fix npe when no book exist
refactor SSTDeserializer and add a new test for next sid in TestSSTTest to improve code readability and ensure correct handling of sid
updated the default grid column handling in AppPreferencesImpl . java to use a constant for the default grid column to improve code readability and maintainability
updated field descriptions in Platform . java and ComparisonFailureWithFieldsTest . java to include line - break characters to improve clarity and accuracy of
[ java ] set waitingforkeys to false in decoderinputbuffer .
updated API paths in OkexV3 . java from " / api / v3 / accounts / v3 / accounts / v3 / accounts
refactor conditional statements in LineUtilitiesTests . java for clarity to improve readability and maintainability of the code
added error handling for varargs and old array syntax in JavacParser and created new classes VarargsAndOldArraySyntax and T656963
make defaultdrmsession and defaultdrmsessionmanager thread - safe .
added METHOD method handling in VariableContext and corresponding tests in TestVariableContext to ensure correct handling of method calls in the variable context
added unit tests for invalid compilation unit and profile string parsing in ExperimentParser to ensure proper handling of invalid compilation unit and profile string formats
fix issue with piece . limit ( ) and piece . limit ( )
updated the ` GatewayAutoConfiguration ` and ` HttpClientProperties ` classes to include ` HttpClientProperties ` as a parameter and added a ` responseTimeout `
updated ` NativeLinkTargetGroup ` to use ` getTargetForPlatform ( ) ` instead of ` getNativeLinkTargetGroup ( ) ` to improve
added unit test for camel - rest - api - rest - add unit test for camel - rest
added support for rex field access in ASTConverter and rexNodeConverter to enhance the handling of field access expressions in RexNodeConverter
replaced direct calls to QueryLogEntry . values ( ) with a constant QUERY _ LOG _ ENTRY _ VALUES to improve code readability and maintain
[ java ] add proxy . noproxypredicate ( ) method to proxy .
updated PKCS12KeyStore and StoreSecretKeyTest to utilize a new certificate loading mechanism and added a new method in StoreSecretKeyTest
added reflection access checks in NativeObject , Bootstrap , and ReflectionCheckLinker classes , and refactored method names in ReflectionCheckLinker to
removed public access modifier from constructors in CollisionMap class to enhance encapsulation and improve code readability
fix nullpointerexception in getrawinputfromtransactioninput ( )
refactor log level handling in ConfigurationValueConverter and Main classes to use switch - case structure to improve code readability and maintainability by using a
cloudstack - 11824 : remove unnecessary region _ id from config server
added encryption support for Old Excel files in OldExcelExtractor and created a corresponding test in TestOldExcelExtractor to ensure compatibility with the new Excel file
[ gr - 13232 ] add extra image build argument to mx _ java _ benchmarks . py
removed unnecessary else block in TimeLineCursorAdapter . java to improve code readability and maintainability
increased the timeout duration from 10 milliseconds to 50 milliseconds in the scheduler method to allow more time for attempts to complete and avoid all attempts timing out
refactor directory creation and deletion logic in ShadowContext . java and add new test cases in ContextTest . java to improve code clarity and ensure correct
refactor ExceptionFactory initialization to use Class . forName for exception handling to improve code readability and maintainability by using a more descriptive class
updated WAIT _ TIME _ MS constant from 10000 to 60000 in LauncherInstrumentation . java to increase the timeout duration for better user experience
updated imports and added AUD parameter handling in ConnectOAuth2RequestFactory , ConnectRequestParameters , and ConnectTokenEnhancer to utilize the
[ hotfix ] [ kafka ] remove default value for breakonfirsterror
added a new constant ` selectableItemBackground ` with a value of 0x10a13 to enhance the functionality of the selectable item background
replaced specific trade DTO imports with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and improve code readability
removed redundant null check for eventType in TxnSetOperation . java to improve code readability and maintainability
http : / / code . google . com / p / mybatis / issues / detail ? id = 423 : add resumable
updated class name from AccessLogValve $ 3 to AbstractAccessLogValve $ 3 to improve clarity and consistency in naming conventions
added iterator and size setting for formats in HSSFDataFormat . java and updated test assertions in TestWorkbook . java to ensure correct handling of
[ hotfix ] [ runtime ] deprecate flinkkafkaproducer in favor of flinkkafkaproducer
updated the calculation of compressedChunkLength in CompressedInputStream . java to use maxCompressedLength instead of compressedChunkLength to ensure correct handling of compressed
add a redis string idempotent repository to support idempotent redis operation
fix containerrepair damage to not damage itemstack .
fix legacylocalrepositorymanager to work with local repository
added checks for task manager initialization and improved error handling in LocalInstanceManager , JobManager , and DefaultMemoryManager classes to improve robustness of task
add more detail to the exception message in abstractartifactresolutionexception
replace direct calls to ` getTemporalPath ` with ` getInternalTemporalPath ` in ` UploadFileOperation . java ` and
added a new method ` findByEntries ` to ` FeedEntryStatusDAO ` to retrieve feed entries from a list of feed entries to enhance the functionality
added logic to execute blocking tasks based on the DISABLE _ TIMINGS flag to ensure proper execution of the Vertx thread during execution
updated the ` instantiate ` and ` convert ` methods to include a ` String ` parameter and added a null check for ` ctorArg ` to improve
added conditional parsing of vCards based on SDK version to ensure compatibility with Android O and above
replaced calls to ` setRemoteAddress ` with ` this . remoteAddress ` in ` Credentials . java ` to improve code readability and maintainability by
added a null check for shadowClass in Robolectric . java to ensure that shadowClass is not annotated with @ Implements
added tlsMutualAuthenticationRequired ( ) to the conditional checks in NettySslContextFactory and ExampleNettySslContextFactory to ensure compatibility with
added a test for handling SSL exceptions in HTTP requests in BasicHttpTest . java to ensure proper handling of SSL exceptions during HTTP requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to the consumer and producer instances
reformatted code in PageChangeListener . java and added imports in FrameRenderer . java and FrameRenderer . java to improve code readability and maintain
[ hotfix ] fix typo in log message .
add draftqueryoptimise ( ) method to beandescriptor , beandescriptor , and beandrafthelp
added error handling for resource transfer failures in MultipartBody . java to improve robustness by handling potential IOException during transfer operations
corrected the syntax of the initialization of array declarations in ExecutableFactory . java and ZipFolder . java to improve code readability and maintainability
refactor package - info . java files for improved organization to enhance maintainability and readability of the codebase
fix attach file action to work directory
added LoadOptionsBuilder imports and modified SchemaCrawlerOptions initialization in AccessTest . java to ensure proper configuration of schema crawler options
updated package structure and added JUnit annotations in TestLoadLegacyLibrary . java to improve readability and maintainability of the test method
replace exception throwing with returning null in TestReader . java to improve error handling for unknown operation names
added methods to set name , enabled , expanded , and expanded properties in ProjectProperty . java to enhance property management by enabling , enabling , and expanded
replace direct instantiation of ConnectionInfo with a try - with - resources statement to ensure proper resource management and prevent potential resource leaks
refactor DataStreamJob class for improved performance to enhance performance and readability of the code
refactor error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and prevent resource leaks
cxf : fix class cast exception in getserviceclass ( )
added a check for the protocol " h2 - 14 " in HTTP2ServerConnectionFactory . java to ensure correct handling of HTTP2 protocols
refactor LambdaToMethod to utilize a ListBuffer for parameter symbols and improve parameter handling to enhance code readability and maintainability by centralizing
updated the regex pattern in CoordinationTransformer to use " what < WP > " instead of " 1 < WP " to improve accuracy of
increased the timeout duration for file copying in DL4JInceptionV3Net . java from 5000 to 60000 to allow for more time
added setSlop method to mpq in QueryParser . java to enhance query parsing capabilities
updated sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test accuracy by reducing sleep duration
updated the default value of COLLECTOR _ HOST _ PROPERTY from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimeline
update gamescheduler and screengraalber to use threadmonitor instead of threadmonitor .
updated visibility logic in EditShareFragment to include edit options availability to ensure proper visibility behavior when editing options are available
updated progress calculation in DepthController . java to ensure progress is within the minimum of 1 to improve accuracy of progress calculations
removed the ` packetReceived ` method from ` ClientSession ` , ` ComponentSession ` , and ` Session ` classes to streamline the packet handling
added debug logging and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction and DelegatedAuthenticationGenerateClientsAction to improve logging clarity
added null checks for ` service ` in ` SamlIdPEntityIdAuthenticationServiceSelectionStrategy ` and ` SamlIdPMetadataUIAction `
[ pantheon ] add ` ` hidden ' ' flag to enable account level permissions by default
added a call to ` doNotInstrumentClass ` for ` CoroutinesRoom $ Companion ` in ` AndroidConfigurer . java ` to
removed the use of ` Thread . currentThread ( ) . getContextClassLoader ( ) ` from the ` isSupported ` method in ` NegotiateAuthentication
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unnecessary method
camel - 14497 : camel - queue - reply should set concurrent consumer to 1 in order to avoid race condition .
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
pdfbox - 2852 : fix bug where tag be not be write to the canvas if the document be tag .
[ log4j2 - 281 ] add test for patternselector in patternlayout
make it easy to run the iehta test on window
add a new mwthankpostresponse class that extend mwresponse
added SocketBased interface to ChannelEndPoint and updated SslConnection to use it to implement SocketBased for socket management
refactored the creation of revokingStore and setMaxSize in AbstractRevokingStore to improve code readability and maintainability by consolidating
added test cases for implicit joins in HQL collection to ensure correct behavior of implicit joins and timestamps in SQL queries
updated assertions in NonVisualRegressionTest to replace line breaks with line breaks to improve code readability and maintainability by using standard line separators
refactor IndexWriter to use a private collection for files to commit to improve code readability and maintainability by centralizing commit handling
changed method visibility from ` final ` to ` @ Final ` in ` BaseError . java ` to improve code readability and maintainability by using
added validation for resource percentage in ConsumeUserResourcePercentActuator to ensure that the resource percentage is valid before proceeding
added a condition to check if old login is enabled in AuthenticatorActivity to enhance user experience by allowing customizable login status
[ hotfix ] [ test ] fix typo in streamnetworkthroughputbenchmarktest
updated the setResponsePage method call to use UsersPage instead of EditTeamPage to improve code readability and maintainability
updated debug log message from " error with cred file " to " initializing plugin credentials " to provide clearer context for error handling
http : / / issues . apache . org / jira / browse / amq - 4078 - close the server socket channel if it '
refactor Rocket class to improve code organization to enhance maintainability and readability of the code
refactor code to use a new method ` createDynPartSpec ` for better readability to improve maintainability and maintainability of the code
[ java ] use symbolic figure instead of hardcoded round _ up _ factor in stringtemplate
added visitDirectory method to JarDirectoryStep and DirectoryTraversal classes to handle directory entries to ensure proper handling of directory entries and improve directory traversal functionality
added a new file ` JWKSetEditor . java ` that extends ` PropertyEditorSupport ` to enable the use of ` JWKSet ` for
refactored ` finish ` method in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` to use ` firstPending
add a truffle boundary for traceThrowable method in invokeespressonode and invokeespressonode
changed the default value of byIP from true to false in Fetcher . java to disable the fetcher threads per IP by default
refactor condition for queryTimeout in StatementUtil . java to improve code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and modified genPath resolution logic in HaskellGhciRuleIntegrationTest to
refactor ReplicaPosition class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ network ] do n ' t run the stats update task if the initial delay be negative .
replaced ` ANIM _ OVERVIEW _ FADE ` with ` FINAL _ FRAME ` in ` QuickstepAtomicAnimationFactory `
updated the swipe length calculation in the navBar ' s visible bounds to improve the visual consistency of the nav bar ' s visible bounds
added a new module - info . java that exports the org . eclipse . http3 . server module and updated dependencies in QuicConnection . java
updated JSON variable names from " myJsonObj " to " MY _ JSON _ OBJ " in JsonType and JsonTest classes to improve
simplified the assignment of the InitialContext in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ runtime ] use default value of checkpointing option instead of default value .
updated the ` reportInnerClassReferences ` method to use ` Element ` instead of ` TypeElement ` and modified the handling of inner class references to improve
updated the command string in TimestampCheck . java to include a space before the " test . tool . vm . opts " property to ensure consistent formatting
replaced FluentIterable with Java Streams for collecting files to improve code readability and maintainability by using Java Streams for better performance
do n ' t allow register to be use in jvm if not in jvm
do n ' t close session if security otr mode be disabled
added outline size and transparency properties to PreviewProperty and NodeLabelRenderer classes to enhance rendering capabilities by allowing customizable outline properties
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the method call from ` false ` to ` true ` in ` Win32FontManager . java ` to ensure correct functionality of font management
added null check for v before visiting to avoid potential NullPointerException when v is null
added error handling policy for JDT batch compilation in JDTBatchCompiler . java to enhance error handling capabilities based on classpath configuration
added content alignment point and text anchor properties to LabelBlock and its associated methods to enhance text rendering capabilities by allowing customizable alignment of text blocks
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the code
refactor IndexReader class to improve code readability to enhance maintainability and readability of the code
[ java ] fix potential npe in networkinterface . isloopback ( )
updated the ` fromRfc1123DateString ` method to include a ` Locale ` parameter in ` DateUtils ` and ` Rfc1
updated the download method in FileDownloadViaProxyTest . java to include an extension for the pdf file to ensure correct download behavior for missing files
[ flink - 11824 ] [ json ] add a flowfile option for nohits in json query
[ hotfix ] [ runtime ] remove aggregationratio from quotamanagerimpl
fix switch / cases indentation error in election . java
remove unnecessary null check in streamfilesp . processfile ( )
refactor the logic for determining the skipWidget variable in PageChangeListener . java to improve readability and maintainability of the code
added a method ` isWriteProtected ( ) ` to ` Workbook ` , ` FileSharingRecord ` , ` RecordInputStream ` , and ` H
added a try - catch block around unregisterInvalidatedSessions ( ) in PluginMonitoringFilter . java to handle potential exceptions during session management
refactor CategorizationFragment class to improve code organization to enhance maintainability and readability of the code
updated the status message from " reachable = false " to " reachable " in HueLightHandler . java to clarify that the status is not reachable
fix # 74303 - add ` ` loading ' ' property to fmlclienthandler ( # 74303 )
updated string concatenation methods to use Core . bundle . getOrNull ( " unit . millions " ) instead of mil [ ] in UI . java
updated MessagePackParser to use a switch statement for type handling and added a new BinKeyPojo class to improve type safety and ensure proper handling of
added parameterized tests for querying reserved words as identifiers in HQL and JpqlQueryTransformerTests to ensure correct handling of reserved words as identifiers
added tests for serialization , deserialization , and deserialization of a map in MapTest . java to validate the functionality of JSON serialization and deserialization of a map
added bounds checking for x2 and y2 in GeometryUtils . java to ensure proper handling of offset values
updated sorting order dialog and added sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to enhance sorting functionality and improve user experience
do n ' t try to find the testplan if there be no plan
updated method names from " dbmsName " , " schemaName " , " tableName " , " schemaName " , " tableName " , "
added a conditional check for the type of ` argIdent ` before adding it to the parameters to ensure that ` argIdent ` is only set when
update default protocol from " SSL - HTTP / 1.0 " to " SSL - HTTP / 1.1 " in JettyHttpComponent9 . java to ensure
set default value of displayVolume to true in VolumeVO . java to ensure the displayVolume variable is set to true
modified the ` version ` method to accept a ` boolean ` parameter and updated its usage in ` JavahTask . java ` , and added a
updated condition checks and logic in ChangeLogParameters . java to handle global change logs to improve clarity and ensure proper handling of global change log parameters
changed log level from warn to debug in JtaTransactionManager . java to improve logging clarity by using a more descriptive log level
hhh - 13232 - ignore test that fail on oracle
removed duplicate calls to ` startHandshake ( ) ` and ` setSoTimeout ( ) ` in ` sslSocket ` to improve code readability and maintain
updated the calculation of the ` size ` variable to include ` MainActivity . isPopup ` in multiple fragments to ensure accurate size calculation based on the
[ hotfix ] [ table - planner - core ] make optionkey final .
[ hotfix ] [ runtime ] add log for thread context classloader in activemqresourceadapter
refactor JodaTimeLocalTimeRandomizersTest to simplify import statements and improve test coverage to enhance code readability and maintainability by eliminating unnecessary
updated WebDescriptor . java to include conditional entity redirects based on SERVLET _ MAJOR _ VERSION to ensure proper handling of xsd
[ fabric8 - kubernetes ] add isnodeready ( node ) and isnodeready ( node )
updated loops to use handler . endpoints instead of liveEndpoints to improve clarity and consistency in the loop structure
added null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions when no creationStatements are provided
update RPC _ VERSION from 1 to 2 in DataRpcConfig and UserRpcConfig classes to reflect the latest version of the RPC
added null checks for System . getSecurityManager ( ) in ObjectStreamClass . java and ObjectStreamField . java to avoid potential NullPointerExceptions when accessing
removed unused imports and modified method visibility in Utils . java and XLCDCommunicator . java to streamline code and improve readability by
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 640 .
[ hotfix ] [ test ] fix typo in test suite
updated the default level from OFF to ERROR in opt2 settings to improve the user experience by using a more descriptive level
changed member variables from non - final to final in IconNormalizer . java to ensure immutability of several fields and improve code readability
added a new boolean flag ` firstCallPrepareDo ` and modified prefixes initialization in ` PrepareInterceptor ` and corresponding tests in ` PrepareInterceptorTest `
refactor focus handling in Launcher . java for improved clarity and functionality to enhance code readability and maintainability by using a more descriptive
remove dependency on ` ` eager singleton ' '
add ` ` ignoreinvisibleassociations ' ' parameter to the ` ` incomingassociations ' ' method in graphicaldatamodelview
[ hotfix ] [ table - planner - planner - core ] remove private ip from _ capacity _ type _ private _ ip ( #
updated the relativeUrl construction in ProfileServlet . java to include a link to the profiler section to improve user experience by providing a more informative
added support for a new ` RequiredRefFieldModel ` in the ` ModelResolver ` class and created a new ` RequiredRefFieldModel ` class
corrected the spelling of " CasCore " in multiple files to improve code readability and maintain consistency in naming conventions
refactor FeatureFlags class to improve code organization to enhance maintainability and readability of the code
updated StringBuilder initialization and modified unique string construction in ConfigStore . java , and added a new test case in ItemUIDtoHueIDMappingTests
added image rendering logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper handling of image icons in the memory cache
updated warning messages for minor compaction on insert - only tables in HiveConf . java to clarify that compaction on insert - only tables are not
added a condition to check if the storage path is not null before checking if the waiting to send is down to ensure that the storage path is not
updated resize threshold checks in VectorMapJoinFastBytesHashMap , VectorMapJoinFastLongHashTable , and TestVectorMapJoinFastHashTable to
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connection management
[ hotfix ] [ table - planner - core ] deprecate aggregate definition .
removed redundant debug tracing logs in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to streamline the code and improve readability
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated assertions in TestMultiSearcher from hits . length ( ) to hits2 . length ( ) and hits3 . length ( ) to ensure accurate
added a new file ` LucenePackage . java ` containing a static method ` get ` to provide a way to retrieve the package from the Lucene package
updated the calculation of sizeInBytes in RAMDirectory . java to correct the calculation of sizeInBytes
[ hotfix ] [ table - planner - planner - planner - planner - planner ] add estimate ( ) method to filter
added a null check for the drawer toggle before starting the animation to avoid potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to convertToAuthentication method to suppress warnings when converting subject to authentication
added support for scaning the " jdk . internal . loader . ClassLoaders $ AppClassLoader " and " jdk . internal . loader . enableSystem
[ msbib ] do n ' t use ` ` author ' ' if they be not corporate
refactor recovery handling in CoreContainer to use a dedicated method to improve code readability and maintainability by centralizing recovery cancellation logic
replaced ` System . currentTimeMillis ( ) ` with ` System . nanoTime ( ) ` and added a new method ` currentTimeMillis ( ) ` to
removed debug print statements and modified condition checks in RepoEditView . java to streamline code and improve readability
[ hotfix ] [ javadoc ] fix typo in pgproperty documentation
added AuthenticationTrustResolver , RoleHierarchy , and DefaultRolePrefix to SecurityExpressionRoot and updated the SecurityExpressionRoot instantiation to use it to enhance security
added a check to set exponentSize to primeSize if it is zero to ensure exponentSize is correctly set when zero is set
replaced direct instantiation of ` File ` with a new method ` getUsableSpace ` in multiple files to simplify code and improve readability by
fix distinctsqlaggregation . combine ( object ) to use accumulate ( object ) instead of combine ( object )
added a test for successful authentication in UserServiceTest . java to verify the behavior of login activities on successful authentication in UserService
refactored extractor spanishstrippedverb to accept a path instead of a static field .
removed unnecessary type checks and simplified return statements in CharArraySet . java to simplify code and improve readability
updated error messages for track count and type checks in MuxerWrapper . java to improve clarity and consistency in error reporting
replaced instances of ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule ` and updated related tests accordingly to
added UTF - 8 character encoding to StringDictionary and refactored string indexing logic in StringDictionary to improve character encoding handling and ensure proper string
updated case name from " Logical Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to improve clarity and consistency in
refactor instance class handling in AbstractVector to use a static variable to improve code readability and maintainability by avoiding unnecessary instantiation
removed syncMetaLeader ( ) method from CMManager . java to streamline the synchronization process by eliminating unnecessary synchronization
[ flink - 20286 ] [ question ] fix typo in contribution question
added import for TestLoggingExtension and annotated DiagramRendererTest class to enhance logging capabilities for testing purposes
updated the ` findProperty ` method signatures to include a ` mapUnderscoreToCamelCaseMapping ` parameter across multiple classes to enhance the method ' s functionality
added VIOMI _ WATERHEATER _ E1 device to MiIoDevices . java to support the VIOMI Internet electric
replaced calls to ` getSslSessionData ( ) ` with ` sslSessionData ` in ` SecureRequestCustomizer . java ` to improve code read
added a new file CreateNewSpreadsheet . java to create a new spreadsheet using XSSFWorkbook to demonstrate the creation of spreadsheets in the user
changed the type of ` ttl ` and ` setKeyPrefix ` from ` Duration ` to ` long ` in ` CacheProperties ` and ` Redis
updated CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper , LauncherModel , and LauncherModel classes to
updated the wiremock version in the SwaggerResolveTest . java file to reflect the latest version of the test compilation process
updated synchronization from ` lucidaFontName ` to ` this ` in ` SunFontManager . java ` to ensure thread safety when accessing
added a condition to check if the character ' < ' is equal to 1 in the conditional statement to improve code readability and maintainability by ensuring
removed unnecessary String . format call in Workspace . java to improve code readability and maintainability
added import for liquibase . Scope and logged a message when no validation errors are found to enhance user experience by providing feedback when no validation errors are found
refactor ` IntegrationTestContextLoader ` to use ` DefaultResourceLoader ` and ` FileSystemResourceLoader ` instead of ` StringUtils ` to improve resource management and
updated scroll handling logic in Component . java and modified component retrieval logic in JavaSEPort . java to improve scrolling behavior and ensure proper handling of wheel
removed unnecessary whitespace in ` RamlType . java ` to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated related methods to use ` String ` instead of ` Long ` to enhance functionality by allowing users to
updated string replacement logic in CellContentConverter to use newlines instead of regex patterns to improve readability and maintainability of the code
updated regex patterns in SeleneseTestCase to include carriage return and newline characters to ensure correct handling of regular expressions in glob transformations
[ hotfix ] fix typo in mondrianproperties javadoc
added stack trace printing functionality in ProcessTools . java and updated CustomLauncherTest . java to handle regular and regular file permissions in CustomLauncherTest .
removed the embedded image test method from TumblrRipperTest . java to clean up the code and improve readability
added a conditional check to ensure the symbol has a slot for the store type before converting it to avoid potential NullPointerExceptions when converting a store type
[ java ] use basemediachunkoutput . subrange ( ) instead of dataspec . subrange ( ) in chunk .
updated imports and added UTF - 8 string handling in BaseLockFactoryTestCase . java to improve code clarity and maintainability by utilizing UTF -
tika - 132 : add support for dynamic service loader in tika - config
replaced java . util . regex . Pattern with javax . tools . JavaFileObject and added diagnostics for package - info in DocLint . java to improve
added an import command check for IMPORT _ CMD in DataImportHandler and introduced a new constant IMPORT _ CMD in DataImporter to
added a test to ensure that inner classes do not modify nested classes if ignore definition is true to ensure proper handling of class declarations in the change type
removed import of android . util . Log from JettyService . java to streamline code and improve maintainability
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated related logic to include it to enhance item placement checks
add ` ` / quitquitquit ' ' and ` ` / quitquitquit ' ' to jetty7appserver
[ hotfix ] [ table - planner - planner - core ] fix npe in realtime segment .
added a check for Windows operating systems in the Tests class to skip processing for Windows operating systems
do n ' t show a warning if add contact dialog can not be register
updated the registration of the USER _ DETAILS _ SERVICE _ FACTORY bean in AuthenticationConfigBuilder . java to ensure proper bean registration for the
updated the drawBitmap method parameters to use null instead of left and top to ensure accurate rendering of bitmaps
corrected the spelling of " yymmdd " in Meitrack , Totem , and Totem protocols to ensure consistency in
changed method visibility from public to protected in SunFontManager and X11FontManager to allow subclasses to access the method for better encapsulation
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
[ hotfix ] [ test ] fix test failure in clientmapstoretest
add config option to keep empty sentence in doc processor
updated the ` createArtifactSubdirectory ` method to return a boolean indicating success or failure to improve error handling and provide clearer error messages for artifact
replaced the use of ` JavaCompilerService . NO _ MODULE _ COMPILER ` with ` JavaCompilerService . NO _ MODULE _ COMPILE
added null check for the answer parameter in DirectAgentAttache . java to avoid potential NullPointerExceptions when resource returns null
simplified the ` sendEmail ` method to throw a ` MessagingException ` instead of throwing a ` MessagingException ` to simplify the email sending process by
add a new API annotation for tiles and handle null cases in PipeItemsObsidian . java to enhance functionality and prevent potential NullPointerExceptions
updated method parameters from " UTC " to " l " in DateFormatEvaluator and FileListEntityProcessor classes to improve clarity and consistency in naming conventions
added a boolean field ` includeDecals ` and its getter / setter methods in ` StorageOptions ` and updated ` StorageOptionChooser ` to
added a null parameter to the generateDocumentation method in Liquibase and modified the getImplementedDatabases method signature in LiquibaseTest to
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to use a queue for duration retrieval and modified assertions in TestHiveProtoLoggingHook
corrected a typo in the log message from " Begining with " Beginning " to " Beginning " in multiple files to improve clarity
[ hotfix ] [ runtime ] fix ignorerecordattribute ' s class file version check
added a new test class LdapPasswordAuthenticationTest for LDAP password authentication to ensure correct handling of user attributes in the user context
updated imports and condition checks in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to improve compatibility with the new
do n ' t try to save all save event in reload mode
refactor VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
[ fabric8 - kubernetes ] make sure we do n ' t throw an exception .
added support for dynamic number columns in EdgeDataTable , NodeDataTable , and EdgeDataTable to ensure proper handling of dynamic number columns in data
added null checks using ` Objects . requireNonNull ` for parameters in ` ResolvedGroupArtifactVersion ` and ` mapPlugins ` to improve code readability
add null check for apiInfo in V2HttpCall . java to prevent potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added debug and debug logging for texture loading and destroying shaders in PhotoPanel and FlameRenderer classes to enhance debugging capabilities and ensure proper resource management
fix a bug in the InsnListEditor and InsnProxyListEditor classes , and modify local variable handling in InsnListEditor to improve
updated conditional logic in CSSParser . java to include length checks to ensure proper handling of whitespace characters and improve readability
added a boolean property ` isDecorated ` to set the defaultLookAndFeelDecorated property based on application properties to ensure the appropriate look and feel based on the
removed the ' NOT EXISTS ' clause from the COMPLETED _ REQUESTS _ SQL query to simplify the code and improve readability by
updated test constants from " F5 _ UNKNOWN " and " F6 _ UNKNOWN " to " F6 _ TRANSPONDER _ TEST
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve code readability and maintainability by centralizing swipe handling logic
updated the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` in ` ColorsActivity . java ` to improve
refactor String class to improve code readability to enhance maintainability and readability of the code
removed unused imports and initialized logger in multiple Java files to improve code clarity and maintainability by eliminating unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to retrieve globals from the map to provide access to
added multiple assertions to validate the sendcoin method in MultiSign34 . java to ensure that the sendcoin method returns the correct result
updated JUnit imports from ` org . junit . Assert ` to ` org . junit . jupiter . api . Assertions ` to align
updated classpath appending to use a configurable path separator to improve code readability and maintainability by using a configurable path separator
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance variable to enhance encapsulation and improve code readability
added assertions to verify presence of fields in metamodel in InheritanceTest . java and updated field retrieval method in TestUtil . java to ensure proper
removed the ' conf ' parameter from Outlink constructors across multiple parser classes to simplify the Outlink instantiation by removing unnecessary configuration parameter
removed ` LexicalContext ` parameter from ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures and improve code clarity
added imports for RemoveUnusedImports and modified type expression handling in UseLambdaForFunctionalInterface . java and TypesInUse . java to enhance
removed appendClassSelector from m _ classFilesets in TestNGAntTask . java to simplify the code and improve readability
added a check for Aggregate input type in HiveCardinalityPreservingJoinOptimization . java to ensure that the root input is not supported before proceeding
[ hotfix ] [ registry ] add a pool parameter to the registryevent constructor , so that it can be use by the registrymanager . active
updated variable assignments for x3 and y3 in Intersector . java to improve code readability and maintainability
add default methods for sbeDecodedLength , sbeLimit , and sbeDecodedLength to MessageDecoderFlyweight . java to
refactor ElasticsearchContainer to use a constant ELASTICSEARCH _ VERSION and add a test for rest client cluster health to improve readability and maintain
[ java ] use bytebuffer . wrap ( ) instead of bytebuffer . copy ( ) to avoid memory leak .
added version ID constants and updated related methods in ClusterDefinition , GSInstallerClusterProvider , and related classes to ensure compatibility with the latest cluster version
[ hotfix ] remove unused setconfiguration method in ftpendpoint
zeppelin - 129 : set status and error reason to ready when download dependency .
modified the handling of local variables in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest .
added a check to return early if basic constraints are - 2 in ForwardBuilder and created a new file BuildEEBasicConstraints . java to ensure proper
added a new method ` initAfterFirstDbConnection ` to ` JdbcPostgresqlDAO ` that initializes ` dbMeta ` based on the database version
added a maximum message size limit in SimpleEchoClient and modified input buffer size handling in AbstractWebSocketConnection to ensure proper buffer size management and prevent potential
lucene - 129 : fix indexreader . undeleteall ( ) to not be call on indexreader . deleteall ( )
added null check for scopes in ClientRegistration . java and updated test cases in ClientRegistrationTests . java to ensure robustness by preventing potential NullPointerException
added null check for orderBy in CartesianProductStream . java to avoid potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
[ hotfix ] [ vms / vms / vms / vms / vms / vms / vms / vms /
added debug logging for the initHiveLog4j message to enhance debugging capabilities by providing a debug log statement
added a check for non - empty tasks before processing in AssetManager . java to avoid potential NullPointerExceptions when no tasks are available
[ java ] return boolean instead of void for deletenode ( ) and deletepublickeyslistnode ( )
fix a bug in the tskvlatestentity . getallbyid ( ) method of relationentity and tskvlatestentity
added checks for empty barcodes in Code128Reader , Code39Reader , and FalsePositivesBlackBoxTestCase to ensure proper error handling for empty
changed TreeSet to LinkedHashSet in SSLContextImpl . java and SystemPropCipherSuitesOrder . java to ensure consistent ordering of cipher suites
added a method to check if a character is a control character in the Escaper class to ensure proper handling of control characters in the output
add support for stringbuilder . getstring ( ) and stringbuilder . getstring ( ) in sqlprovider
added null checks for aliasChildren and children in InternalMNode . java to ensure robust handling of null values and prevent potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` to the ` PagedView ` class and updated the scrollDelta calculation in ` Workspace ` to
updated variable names and logic in JavaTemplate . java for clarity and consistency to improve code readability and maintainability by using a more descriptive
added setAccessible method to WidgetInterceptor . java to ensure proper accessibility of the method in the WidgetInterceptor class
added a condition to check if the database server ID is not " database . server . id " before setting literal initializers to ensure that the field
updated the AppleWebKit version from " Macintosh " to " Windows NT 10.0 " in AbstractRipper . java to support
added a web interface item to the popup in BasicSystemUtils . java to enable users to navigate to the server ' s server ' s host
refactor value handling in HandleGetter to use a constant for the actual value name and update related references to improve code readability and maintainability by
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by preventing potential ArrayIndexOutOfBoundsException
[ hotfix ] [ runtime ] add more logging to filecheckpointio
removed redundant calls to ` loadBattlePassManager ( ) ` in ` Player . java ` to streamline the code and improve readability by
corrected the spelling of " sshd " to " ssh - rsa " in the Docker image to improve code readability and maintainability
added a bigObject array and forced an initial full - gc call to force an initial full - gc to ensure proper cleanup of the system ' s
updated log level checks in StdErrLog . java and added new debug assertions in StdErrLogTest . java to enhance logging functionality and ensure correct
fixed - rremoteservice . getremoteserivce ( string name ) method in redissonclient and redissonclient
added ` isSelected ( ) ` and ` setSelected ( boolean b ) ` methods to ` MultiButton . java ` to enable selection of buttons based on
updated the activity type from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to ensure compatibility with the latest playback features
removed unnecessary whitespace in BrokerController . java to improve code readability and maintainability
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for better resource management to improve resource management and ensure proper resource management
replace styled attributes handling with theme color handling in ProgramGridCell . java and Utils . java to improve code clarity and maintainability by using a
renames occurrence of ` ` participanttransportaddresschanged ' ' to ` ` peertransportaddresschanged ' '
refactor type adapter registration in ToolingApiLauncher to use lambda expressions to improve code readability and maintainability
updated TestPayloadCheckQuery . java to include additional parameters to enhance test coverage for payload validation
modified the ` putChar ` method in ` ConsoleReader ` and added a new test for reading lines with a mask in ` ConsoleReaderTest `
http : / / issues . apache . org / jira / browse / amq - 461 - add user info to the command
move the test class to the api package instead of the compiler package
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
updated the condition for creating VersionSpecific instances in StreamExInternals . java and modified the hasDropWhile variable in StreamExTest . java to
updated texture and music files from " data / wheel . png " to " data / sys . png " and adjusted song duration from 22 to 18
removed redundant calls to registerReceiver and unregisterReceiver in Launcher . java to improve code readability and maintainability
updated import statements in HostsRemovedEvent . java for consistency to improve code readability and maintainability
added introspection functionality to ClientDetailsEntity and updated ChainedTokenGranter and IntrospectionEndpoint to improve token introspection handling to enhance client introspect
updated HTML encoding methods in HtmlSessionInformationsReport . java to use a dedicated method to improve code readability and maintainability by centralizing HTML
updated link references in Query . java to include PhrasePrefixQuery and SpanQuery to enhance query handling capabilities
replaced size ( ) = = 0 with isEmpty ( ) in CommentsInserter and CommentsParser classes to improve code readability and maintainability
remove isliteralstring and isthiselementanoperandinabinarystringconcatenation from novalueofonstringtype
updated method signatures in AbstractAssert , Assert , DateAssert , and Assert classes to use ` Object ` instead of ` A ` to improve type safety
updated the ` ThrowingFunction ` interface to use generics and changed the type of ` ThrowingFunction ` from ` Object ` to ` T
refactor ` getUploaderBehaviour ` method to use ` preferences ` instead of ` context ` in multiple classes to improve code clarity and maintainability
fix : do n ' t try to initialize final field for final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to improve compatibility with Android ' s Robolectric library
corrected the spelling of " isValidSEnding " to " isValidEnEnding " in DutchStemmer . java to improve code read
updated the drawable resource from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` in the ` PageMarkerResources `
added a volatile variable ` reinvocations ` and updated related log messages to include it to improve code readability and maintainability by centralizing backup
updated the calculation of topPadding to use getInnerHeight ( ) instead of getHeight ( ) to ensure correct positioning of the top padding based on
added a break statement to the Recognize class to improve code readability and maintainability
added support for locking home screen preferences in Workspace , FolderNameEditText , and PopupContainerWithArrow classes to enhance user experience by allowing user
added handling for cached formulas in ExcelBatchReader and created a test for text formula in TestExcelFormat to ensure correct handling of text formulas
pmd : fix ` ` anonymous inner class ' ' assignment in anonymous inner class
added a new ` userAgent ` field and modified the userAgent assignment in ` HttpGetter ` to use the application settings to ensure that the user agent is
added a required attribute to the AvroDataFormat annotation in PropertyDefinition and BarcodeDataFormat classes to ensure that the XmlAttribute annotation is required
change log level from info to debug for file not found logging to improve logging clarity for better debugging
rename QueueTest class to QueuedPipeTest to improve clarity and consistency in naming conventions
updated version check to use OfflinePlayer ' s getUniqueID method to ensure compatibility with the latest Bukkit version
added a check for " false " and modified the handling of routes builders in DefaultRoutesCollector . java to improve robustness by avoiding unnecessary detection
added vertexColor property and modified color handling logic in PShape3D . java to ensure proper rendering of shapes based on a boolean value
added a new parameter ` isPkColumnFiltered ` to the ` SchemaDotFormatter ` class and updated related logic accordingly to enhance the handling of filtered
replaced the use of Shadow . extract with direct call to matrix . getValues in ShadowMotionEvent . java to simplify the code and improve readability
updated package structure for MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser ` to
simplified the handling of class definitions in GroovyEngine . java to improve code readability and maintainability
move brandingservlet to branding . plugin , and add plugincontextlistener to brandingservlet
updated print statements in NativeCodeGenerator . java to remove unnecessary print statements to improve code readability and maintainability
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in ` FlightConfiguration
added JUnit test for expected exceptions in ThrowableAssert _ hasCause _ Test . java to ensure proper exception handling and provide clearer error messages for
removed redundant variable declarations in AutomaticDependencies . java to streamline code and improve readability
[ hotfix ] fix typo in clientdynamicregistrationendpoint
[ java ] add test for firefox profile and capability in firefox .
camel - 14263 : camel - route - add description property to camel - route and camel - route
refactor JavacTreeMaker class to improve code organization to enhance maintainability and readability of the code
added a line to set the weight of the edge in ImporterCSV . java to ensure the edge ' s weight is correctly set during CSV processing
( chore ) camel - quota : use current month to calculate tariff cost per hour
updated SQL queries in DatabaseMetaData . java and DatabaseMetaData . java to use adsrc for column default values to ensure correct handling of column default values
added a null check for binarized in SentimentAnnotator . java to ensure that binarized sentences are not built by parser
added a StringBuffer to display usernames and authorities in the User class to provide more context about the user ' s authority
updated MessageHelper to handle null message body and added null check for message body to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] remove reference to currentexecutionvertex in taskdeploymentdescriptorfactory
update roster access method to use owner instead of subjid .
added classpath reference for Maven test classpath in AbstractJRubyMojo and removed unused @ Override annotations in CucumberMojo to improve code clarity and maintain
refactor MethodHandleImpl to simplify type checking and add user method handling in MethodHandlesTest to improve code readability and maintainability by centralizing type
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
updated width and height checks from ' > ' to ' ! = ' in URLImage . java to ensure proper comparison of width and heights
added a condition to check if the name starts with " META - INF / " before processing to ensure that the name starts with " META -
added final modifiers to parameters in createImageToFileSystem and createImageToStorage methods in ImageDownloadService to enhance code readability and maintainability by
updated assertions and formatting in StackWalkerTest . java to improve code readability and maintainability
changed the access modifier of the addViewportJob method from protected to public to allow access to the addViewportJob method from other classes
removed the ` partitions ` parameter from the ` buildFlow ` method and related tests to simplify the method signature and improve code readability
removed server restart and system exit settings from TestDatabase . java to streamline server startup and check execution behavior
added null and empty checks for block in NodePathsConvertOperator and modified return logic in SchemaQueryMergeOperator to ensure proper handling of null and empty
[ java ] add get harvestingtime ( ) method to call info frame .
updated font drawing parameters in ParticleEditor . java for improved rendering accuracy to enhance rendering accuracy and maintainability of the code
added Hadoop environment configuration handling in UpgradeCatalog240 . java and updated related test cases in UpgradeCatalog240Test . java to
added a background color to the SvgViewerFactory class to improve visual consistency in the SvgViewerFactory
removed the ` minSdk = M ` annotation from ` ShadowKeyguardManagerTest ` and updated its usage in ` ShadowKeyguardManager ` to
updated the method signature of ` containsExactly ` in ` IterableSubject ` to use ` varargs ` instead of ` rest ` to improve clarity
updated Bucket4jFilterFunctions to use refillGreedy and added a check for non - empty key before building the bucket to improve
updated GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code clarity and maintainability
updated the instantiation of the Generator class to include a set of hooks in the transformations to ensure proper handling of built - in view hooks in the
added error handling for NoClassDefFoundError in REngine . java to ensure compatibility with NoClassDefFoundError
updated ` TraceWebFilter ` and ` TraceWebFluxTests ` to use ` SpanAndScope ` instead of ` Span ` to improve
updated exception handling in AbstractUpdateCommandStep to check for null cause before setting the exception message to improve robustness by preventing potential NullPointerExceptions
updated SolrServerException constructor to include base URL to enhance error handling by using the base URL instead of the original exception
updated landscape setting logic to check for non - ls in printSetupRecord to ensure proper handling of landscape values in the print setup record
updated return statement to handle null values in JavaVoidObjectInspector to improve robustness by avoiding potential NullPointerExceptions
added a check to throw an exception for invalid argument names in ArgDesc . java to ensure that the argument name does not contain a newline or
added support for a background location listener in AndroidLocationPlayServiceManager and updated location updates handling in AndroidLocationPlayServiceManager to ensure proper handling of
changed the condition from checking if primitiveType is not equal to checking if it ' s equal to checking if the primitiveType is equal to GL _
trufflestring : add lengthcmp parameter to the execute method in trufflestring
added a call to setCommandList ( isCommandList ( ) ) in ComboBox . java to ensure that the command list is only set when
nifi - 154 : escape alias filename with forward slash in tlsclientmanager
updated ZkCLI command execution to use localhost and localhost instead of hardcoded strings to improve clarity and maintainability of the zk cli
updated comparisons in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` getStatusDetail ( ) ` instead of `
added a conditional check for remoteGrpcStatus before posting a message in LocalFallbackStrategy . java to ensure that the build fails only if the remote status
refactor method signatures in XYItemRenderer and XYItemRenderer classes to improve code readability and maintainability
added entity id to the tick if it ' s not already set .
added a private static method ` getErrorString ` to convert an integer to a string representation of the error string to improve code readability and maintainability
add a method to get supported locales in the FeatureRegistry class to improve locale management and error handling for unsupported locales
updated server URI handling in RFC2616BaseTest to use " http : / / myhost : 1234 / " instead of " serverURI "
added a call to addToHelperList ( ce ) in Construction . java to ensure proper handling of helper lists in the construction process
added a condition to skip the first of " [ [ ] " in GlyphLayout . java to skip the first of " [ " escape sequence .
added security permissions for setting context class loaders in Transport . java and TCPTransport . java to enhance security by allowing access to the context class loader
added path generation and sync folder handling in ReceiveExternalFilesActivity to ensure consistent path generation and prevent potential NullPointerExceptions
updated the initialization of the ` loader ` variable to handle null ` m _ serviceLoaderClassLoader ` to ensure proper loading of ` ITestNGListener
removed debug logging statement from BarrowmanCalculator . java and adjusted deltap calculation in TubeCalc . java to improve logging clarity and ensure correct
added type checking for nodes and edges in TimelineControllerImpl . java to ensure proper handling of Node instances and improve code readability
added a new method ` registerExtraComponents ` to the ` BaseBrokerStarter ` class to register extra components for the broker application
added a new test method ` testBug4658 ` to the ` MultiCfQueryExecIT ` class to verify the behavior of the `
[ java ] use linkedlist instead of arraylist in peergroup . getcandidates ( )
fix a problem with the builder not be able to replace with the builder .
updated ConfigNodeConfig and related classes to use a Supplier for configNodeSimpleConsensusSnapshotTriggerThreshold to improve flexibility and flexibility in configuration
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a check to ensure ManagedService is not null before unregistering JMXHelper instances to avoid potential NullPointerExceptions when the ManagedService annotation is
[ tika - 147 ] fix hanlde non - unicode entry name detection in packageparser
added a new file TestSplitThruPhiDivMod . java with two methods for modulo operations to implement a Problematic division test for problem
refactor generic type lookup methods in TemplateRegistry for improved clarity and functionality to enhance code readability and maintainability by encapsulating generic type
updated the size of ByteArrayOutputStream from 512 to 1028 to adjust the output stream size for better performance
added TODOs for Chinese , Persian , and Farsi symbols in the languagesExcluded list to improve user experience by providing clearer warning messages
updated byte array initialization and handling in TransferCompletionHandler . java to improve readability and maintainability of the code
move window focus listener from addwindowfocuslistener to addWindowListener ( ) , not add focus to the parent window .
refactor error handling in SemanticAnalyzer to check for null source before throwing a SemanticException to improve robustness by preventing potential NullPointerException
added scaling functionality to the SkeletonRenderer using JomlUtil to enhance the rendering of skeletons based on the current mesh ' s scale
added the ` getSolrHome ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to retrieve the solr
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality
removed the getAccount ( ) method from UserListItem . java to streamline the code and improve maintainability
added unit tests for ` installPackage ` and modified ` processName ` assignment logic in ` ShadowPackageManager ` and ` ShadowApplicationPackageManager ` to ensure
refactor AvailableSettings class to improve code organization to enhance maintainability and readability of the code
added TransactionCapsule fields and methods to the TransactionTrace class to enhance transaction tracing capabilities
add option to shuffle member list in client to allow user to specify whether to shuffle member list
replaced Text with CrawlDatum in SegmentReader . java to improve data handling by using CrawlDatum instead of Text
refactor JsonDeserializer class implementation to improve code readability and maintainability
updated configuration name and default path in TsfileDBConfig and changed fetchSize initialization in QueryProcessExecutor to use ThreadLocal to improve thread safety and
corrected the spelling of " trunk ( ) " to " trunc ( ) " in the GenericUDFTrunc . java file to improve
removed the import of ExecutionContext from TaskletStep . java to streamline the code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure proper initialization of the title variable
http : / / issues . apache . org / jira / browse / amq - 4078 - add support for null body in asynchttp
add a new interface ` EmbeddedServerInstance ` to the ` io . micronaut . runtime . server ` package to indicate that the interface is
add registermacevents ( ) method to macadapter to allow register mac event
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity and consistency in
added a return statement to the toEnum method in HandlerLibrary . java to improve code readability and maintainability
changed the visibility of the ` hideUnprivilegedObjects ` variable from private to private final to ensure immutability of the ` hide
change log level from info to fine in threadedacousticscorer and add assert to audiodatasourcestest
added a check for Android Q and saved the video URL in IOUtils . java to ensure that the video URL is correctly saved based on the Android Q
[ activiti ] add deserializedObject for variable instance in service task variable
refactor multiple ticket registry and service classes for consistency to improve code maintainability and readability
refactor logger retrieval logic in MavenLoggerFactory to use computeIfAbsent to improve code readability and maintainability by using computeIfAbsent
hbase - 13306 remove outputstream class that do n ' t need to be use
updated the configuration for the " hive . stats . column . autogather " configuration in TestAcidOnTez . java to ensure
change log level from info to debug in MavenEnhancePlugin . java to improve logging clarity for enhanced class functionality
added a method to retrieve the default provider name and updated provider name handling in OpenSSLProvider and StandardNames classes to improve clarity and consistency in provider
added Captor annotation processing to MockitoBeforeTestNGMethod . java to enhance the handling of Captor instances in the testing framework
added checks for enabled classes , method names , and method names in TestSuiteBuilder . java to provide clearer error handling for unsupported test cases
added imports and modified whitespace handling in GroovyAutoComplete . java and GroovyLanguage . java to improve code clarity and ensure proper prefix validation
[ iotdb - 116 ] fix import of graphhopper on window .
http : / / issues . apache . org / jira / browse / amq - 4697 - fix the issue that the client be not
changed the ` mHideSysUiScrim ` variable from ` final ` to ` mHideSysUiScrim ` and added functionality to hide
modified the ` enqueue ` method in ` Call ` and ` OkHttpCall ` classes to include a ` canceled ` flag and modified exception handling in
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve code readability and maintainability by centralizing swipe handling logic
changed the ` RequestMatcher ` interface to extend the ` org . springframework . security . web . util . matcher . RequestMatcher ` interface to
added a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr . java ` to include the
[ google - j2kt ] fix test for boxed and devirtualized type
added unit tests for the ` applyQualifiers ` method in ` DeviceConfigTest . java ` and updated the ` setDimensions ` method in `
replaced IOException with RuntimeException in ExternalViewReaderTest and PinotDataTypeTest , and updated timestamp initialization in PinotDataTypeTest to improve error handling
updated the icon resource from ` logo ` to ` mipmap . ic _ launcher ` in ` RootCursor . java ` to align with the
added content text setting to errorBuilder in FileUploader . java to enhance error handling by providing a clearer error message
refactor ConcurrentHashMap class for improved performance to enhance performance and readability of the code
added methods to adapt user trades and trades in AbucoinsAdapters , AbucoinsTradeServiceRaw , and AbucoinsTrade
updated claim logic to return true instead of false in PlotSquared . java and added new case statements in Delete . java and SetBlockFast _ 1
alexeibarantsev : add proxy to htmlunitdriver to support firefox and internet explorer
added support for VARBINARY data type in BlobType . java to enhance data type handling for VARBINARY data types
updated variable names and conditional checks for version and domain in SetCookieSupport . java to improve code readability and maintainability
fix thread safety issue in libfficontext . getsimpletypemap ( )
updated InboundBuffer to use ContextInternal instead of Vertx for context handling to improve thread safety and provide clearer error messages for unsupported operations
updated the ` waited ` variable and modified timeout handling in ` LdapTimeoutTest . java ` and ` LdapTimeoutTest . java ` to improve timeout
updated usage message from UniocdeData . txt to UnicodeData . txt to improve clarity and consistency in usage usage
camel - 14497 : camel - cxf - add ' inoutheader ' header to cxf message header relay test
refactor multiple UI classes to improve code organization to enhance maintainability and readability of the codebase
added support for handling ` BoosterSet ` in ` ComponentAssemblySaver . java ` and changed return value in ` BoosterSet . java
http : / / issues . apache . org / jira / browse / amq - 4078 - add proxy authentication to jabref
corrected the spelling of " BLOCKCHAIN _ FORK _ COUNT " to " BLOCKCHAIN _ FORK _ COUNT "
replaced InternalError with a return statement in Class . java to ensure compatibility with JEP 359 support
testipcutil : use static final log instead of mortbay log
[ hotfix ] remove unnecessary chunked transfer from netty routing filter
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure attributes are cleared before processing
added a polling period parameter to the VerificationAfterDelayImpl constructor and updated related methods to include error handling to enhance the verification process by providing a
added a compaction flag and associated methods to the SemanticAnalyzer and SessionState classes to ensure proper handling of table masking and filtering behavior
( chore ) camel - docker - interpreter : do n ' t copy jar file if they do n ' t exist
hbase - 11824 fix the bug of hbaseadmin . gettableregions ( ) in hbaseadmin
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to potential issues related to partial escape analysis
updated ` calcXBounds ` method implementations in ` CombinedChartRenderer ` and ` BarLineScatterCandleBubbleDataProvider ` classes to improve
added a try - finally block to ensure proper resource management and prevent potential memory leaks
added a call to release the byte buffer pool and reset the headerBuffer to null to ensure proper resource management and prevent potential memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to use it to
added null and isClosed checks before closing ResultSet in JdbcExecutor . java to ensure proper resource management and prevent potential NullPointerExceptions
updated driver version numbers from - 1 to 6 in DerbyDatabase . java to ensure compatibility with the latest database versions
pmd : fix usestringbufferlength to check for non - empty literal
removed error logging statement from RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
refactor createDb method to return a Connection object instead of void to ensure proper resource management and prevent potential memory leaks
renamed classes CreateCustomMetric , ListResources , and its corresponding tests to improve clarity and consistency in naming conventions
hbase - 16286 add off - heap off - heap option to compaction policy
added handling for the " address " node in BitstampDepositAddress and created a new test class DepositAddressJSONTest to validate the functionality of the
replace IllegalStateException with an IllegalArgumentException in BufferingResponseListener . java to improve error handling for buffering capacity exceeded
updated the method to convert the link path to an absolute path for deleted directories to ensure proper handling of absolute paths for deleting directories
replaced ` Event ` with ` InvocationType ` in ` InvocationFinishedEvent ` and updated related methods to use ` InvocationType ` instead of ` Event
added multicast support check in the NetworkInterface enumeration to ensure proper handling of multicast interfaces
added a loop to iterate over valid check sums in ChangeSet . java to ensure correct validation of valid check sums
added a clone method to the BufferedChecksumIndexInput class to ensure that cloning of IndexInput does not throw an UnsupportedOperationException
replaced ` Math . sqrt ` with ` radius ` in the Circle class to improve code readability and maintainability by using a more descriptive
updated frequency band assignment logic in P25Channel . java and added overrides in P25ExplicitChannel . java to ensure correct handling of frequency band
rename variable ` tapSquareSize ` and ` tapRectangle ` to ` tapRectangleWidth ` and ` tapRectangle ` in ` GestureDetector `
[ java ] set default replicate _ on _ write to false by default .
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and implemented formatting methods in Util and CryptoFacilitiesTradeService
added ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and ` TraceRunnable ` classes to provide access to
refactor error handling in FileActivity and FileDisplayActivity for improved clarity and functionality to enhance code readability and maintainability by using a more de
added writable stream functionality to ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to ensure proper resource management and error
updated the method call in JavascriptContext . java to include a boolean parameter to enhance the functionality of the JavascriptContext class
removed the ` Align . left ` parameter from the ` TableCell ` constructor and added a new constructor ` TableCell ` to streamline the
added a new configuration file ` TracingAutoConfiguration . java ` to configure tracing capabilities to enhance the application ' s tracing capabilities for better tracing capabilities
updated the method of adding a Para object in Submissions . java to improve code clarity and maintainability by using a more descriptive variable
updated the ` getPrunedQueryableSegments ` method to accept an ` List < IndexSegment > ` parameter and modified related method calls to improve segment
refactor VertxBufferTest class for improved performance to enhance performance and readability of the test cases
refactor date extraction logic in MessageSubmissionChunk . java and add a new test class TestMessageSubmissionChunk . java to improve code clarity and ensure
change access modifier of mContext from private to protected in PredictionAppTracker . java to allow subclasses to access the context
removed unused imports from ShowTablesOperation and ShowViewsOperation to streamline code and improve readability
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to throw it to improve error handling by providing more specific
[ hotfix ] [ runtime ] fix npe in jobcoordinationservice . getjobcompletionfuture ( )
refactor ` bitsToHumanReadable ` and ` bytesToHumanReadable ` methods to use a new ` HashMap < String , String > ` for
removed unnecessary type check for MergePolicy in TestUpgradeIndexMergePolicy . java and added a new test method in TestMergeOnFlushMergePolicy .
added a check to return early if mOverviewStateEnabled is not enabled to prevent unnecessary processing when the overview state is not enabled
[ hotfix ] [ runtime ] improve error message for binaries run on avx
updated the ` loadSettingModels ` and ` contextInitialized ` methods to accept a ` referencePropertiesInputStream ` parameter to enhance flexibility in loading configuration models
added null checks for input in FilterLeafReader to ensure input is not null to prevent potential NullPointerExceptions
add key size provider to jcecrmfencryptorbuilder and add test
updated IOException handling in NetSocketReader and removed unused constructor parameters in SoftEndOfStreamException to streamline exception handling and improve code clarity
removed the ` @ Inject ` annotation from multiple Java files to streamline the dependency injection process and improve code clarity
updated the expected size in BundledDistributionTest from 9 to 10 and added assertions for database users in PostgreSQLTest to ensure accurate data
[ hotfix ] [ runtime ] add pipeline . name option for printing and logging
updated scaling calculations in OverviewState . java based on deviceProfile type to ensure accurate scaling based on device profile status
updated IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome and adjusted temperature and rainfall settings to enhance the functionality of the
removed timezone parameter from getMaxTime and getMinTime methods in DataUpdateManager and StorageUtils classes to simplify code and improve readability by using a more
[ j2kt ] add an isqualified flag to the thisreference so that it can be use by the compilation unit
updated regex pattern in XhamsterRipper . java to include additional characters to improve regex matching accuracy and maintain consistency in regex patterns
fix world . getentity ( ) to return a list of entity instead of a list .
oracledialect : do n ' t use the schema if it ' s not null .
[ hotfix ] [ console ] fix syntax error in console filter
added a new parameter ` numberOfAllFiles ` to the ` FileMenuFilter ` constructor and updated related methods to support selecting and deselecting files
[ java ] use termlengthmask instead of termwindowlength in networkpublication . termoffset
refactored GuildUpdateOwnerEvent class to improve code readability to enhance maintainability and readability of the code
set inportportableticks to 80 if creative be set to 80 .
[ grid ] add support for compressed chart data in cluster monitor
refactor multiple codec template classes for improved consistency to enhance maintainability and readability of the codebase
changed the type of ` lengthDataBits ` and ` numberQuartet ` from ` int ` to ` long ` for better type safety to
removed unnecessary null check for header in RendererConfiguration . java to simplify code and improve readability
do n ' t force scaling of disk offering when custom service offering change .
updated imports and replaced the Builder class with LimitOrder . Builder in HitbtcAdapters . java and HitbtcAdapters . java
[ hotfix ] [ segment ] fix typo in segment data manager .
updated the service name from " jruby " to " jrubyscripting " in JRubyScriptEngineFactory . java to clarify the purpose of
updated variable names from ' name ' to ' displayName ' in ConfigCategory . java to improve clarity and consistency in naming conventions
updated conditional logic in ParticipateAssetIssueActuator . java to include additional conditions to ensure correct handling of precise exchange amounts
removed the loop condition from FeedUtils . java to streamline the code by eliminating unnecessary loops
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to verify parsing and parsing of HDF4
added a new constant ` CALCITE _ 6092 _ FIXED ` and modified ` SqlOperatorTest ` to check for invalid TIME values to
added a null check for languageServer in IDEEditor . java to improve code readability and maintainability
added new methods ` quietCloseAll ` and ` quietCloseAll ` in ` CloseHelper . java ` to improve code readability and maintainability
replace posBtn with common yes in RemoveFileDialogFragment . java to improve user experience by using a more descriptive string resource
added a null check for srcWidth and dstHeight before calling drawImage in Pixmap . java to avoid potential NullPointerException when srcWidth and dst
replaced ` ReflectionHelpers ` with ` Unsafe . class . getMethod ` and updated method calls to use ` ProtectionDomain ` instead of ` ReflectionHelpers
updated regex pattern in GUIUtil . java and added validation assertions in GUIUtilTest . java to ensure proper regex matching for various example files
replace boolean conflict with long conflicts in CachedRowSetWriter . java to improve accuracy in handling row conflicts
update sdk configuration notification to use pubspec . yaml instead of version .
added a conditional check for the reference variable before assigning to the value to ensure that the reference variable is only assigned when it ' s equal
added seed file handling and improved error logging in Injector . java to enhance flexibility in injecting seed URLs and improve error handling
added a condition to check if the original view is hidden before hiding it to ensure that the original view is only visible when the original view is hidden
updated maxNodes calculation and modified condition in DefaultLoopPolicies . java to ensure maxNodes does not exceed maxTrips to ensure maximum node counts are
added a check for texture coordinate type support in CombinedTexture and introduced a warning log for unsupported texture coordinates in UVCoordinatesGenerator to improve error handling
added error handling for deletion of barcode files in EncodeActivity , SupplementalInfoRetriever , DecodedBitStreamParser , and MatrixUtil classes to
[ java ] implement tracingconsumer and tracingproducer . close ( ) in favor of delegate . seek ( offsetandmetadata )
updated the HQL query to use oldPrefixLength instead of locate to improve the accuracy of the query by using a more descriptive prefix length
removed the addition of a collection from the convertedValsList in JSONSerializer . java to simplify the initialization of convertedValsList
[ hotfix ] [ runtime ] deprecate abstracttimer constructor .
added a nightly build message if the Universal Gcode sender is a nightly build to improve user experience by providing feedback when the version of Universal
[ hotfix ] [ session ] fix bug in response sort by team name
updated the return statement in UnnecessaryThrows . java from " Remove unnecessary throws " to " Remove unnecessary declarations . " to improve clarity
renamed ` CacheApplication ` to ` cacheData ` in multiple files to improve clarity and consistency in naming conventions
replaced instances of ` realObject . getApplicationContext ( ) . startService ( ) ` with ` RuntimeEnvironment . application . startService ( ) `
refactor StatisticsServlet class implementation to improve code readability and maintainability
updated RuntimeEnvironment to use ResourcesManager for updating system resources based on SDK version to ensure compatibility with different Android versions
add stack _ repo _ update _ link _ exists and add a test for it
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to prevent potential NullPointerExceptions when oldIndexName is null
added " com . sun . org . apache . xml . internal . resolver . helpers . " and " com . sun . org . apache .
rename methods from ` persist ` to ` add ` in multiple repository classes to improve clarity and consistency in naming conventions
added handling for loop exit nodes in GraphUtil . java to ensure proper input processing for loop exit nodes
replaced ` RecyclerView ` with ` WidgetsRecyclerView ` in ` SearchAndRecommendationsScrollController . java ` and updated related methods to use ` Widget
added a check for terminal support in ConsoleReader . java to ensure proper handling of terminal support
updated data types from ` long ` to ` int ` in ` CloudExitableDirectoryReaderTest ` and ` LBHttpSolrClient ` to
added session validity check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure correct session management and ensure proper session management
added null check for columnNames in ChangedIndexChangeGenerator . java to avoid potential NullPointerExceptions when columnNames is null
replaced ` java . util . Vector ` with ` ArrayList < RadioButton > ` for adding and removing buttons to improve code readability and maintainability
updated UserManagerCompat and UserManagerCompatVN to extend UserManagerCompatVM and added a new UserManagerCompatVM class to enhance compatibility with
added ` getDatabaseMajorVersion ` and ` getDatabaseMinorVersion ` methods to ` MockDatabase ` , ` Database ` , and ` ReorganizeTable
updated the ` spawnThreadToCompareActionGraphs ` method to use ` ActionGraphAndResolver ` instead of ` Set ` to improve clarity and
added new classes LockDatabaseDesc , UnlockDatabaseDesc , and UnlockDatabaseDesc to provide descriptions for database locking and unlocking operations to enhance
refactor RankingUIModel and RankingToolbar to use group - based setting to improve code readability and maintainability by centralizing
added disconnect handling for DisconnectMessage in HandshakeHandler . java and modified logging in NodeImpl . java to improve message disconnection handling and ensure proper
added a new test method ` testSetDeleteSG ` to the ` IoTDBAuthorizationIT ` class to verify the behavior of setting and deleting
[ hotfix ] [ umentai \ v1beta2 \ 0 : : ` ` umentai \ v1beta2 \ v
added checks for missing or malformed variable types in Assertions . java and implemented a method to find missing types in FindMissingTypes . java to ensure correct
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to ensure proper handling of test
updated import statements and modified constructor parameters in CountersManager to use CachedEpochClock instead of UnsafeBuffer to improve code readability and maintainability
updated logging statements in MultiSteps and SendEmail classes to use ` getAddress ( ) ` instead of ` toString ( ) ` to improve readability and
added logic to clone the joinKeys array in JoinDesc . java to ensure the joinKeys array is not null and prevent potential NullPointerExceptions
added PrincipalResolver to the registerAuthenticationHandler method in WebAuthnConfiguration to enhance authentication handling by using a default principal resolver
updated the ` addSettingsFromFile ` method to include a ` searchPaths ` parameter and modified the parsing method to accept a ` ImmutableList < Path >
changed member variables from non - final to final in Oracle . java to ensure immutability and prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] do n ' t advertise unaligned checkpoint when rescaling of unaligned checkpoint
[ calcite - 147 ] allow unsupported operation in query parser to be use in order by clause .
add a log option to compiletheworld so that it do n ' t fail .
do n ' t throw an illegalargumentexception if there be a local variable .
added support for MySQL timestamp column type in CreateTableGenerator to ensure compatibility with MySQL databases
added context class loader management to EnvConfiguration . java to ensure proper class loader management and avoid potential memory leaks
added a condition to set ejection delay for stageNr in SimulationListHandler to ensure that the motor configuration is only set when the stage
updated method names from FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig in SpringApplicationTests . java to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class implementation to improve code readability and maintainability
updated the ` validateIssuerClaim ` method to accept a ` Optional < OAuthRegisteredService > ` parameter and modified related method signatures to accept a `
added null check for coll in ClusterState . java to avoid potential NullPointerException when coll is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in ` TextArea .
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance database and schema management capabilities
[ java ] remove call to state ( init , now ) in election . java .
replaced static import of Shadows . shadowOf with a private method shadow . extract in ShadowActivity and ShadowBluetoothDevice to improve code clarity
drill - 4192 : fix selection root for dfs / dfs / test / resources
deprecate iforgeitem . oninventorytick ( ) and iforgeitem . oninventorytick ( )
[ coley . recaf ] add ` ` war ' ' to ` ` zip ' ' file
added null check for getSherlockActivity ( ) before calling invalidateOptionsMenu ( ) to prevent potential NullPointerException when getSherlockActivity ( )
refactor widget options handling in AppsCustomizePagedView , Launcher , and PendingAddItemInfo classes to improve widget configuration handling
added new constant names for air pressure and accuracy in EcobeeSensorThingHandler . java to enhance code readability and maintainability by encap
refactored code for improved readability and consistency in OperationSetServerStoredContactInfoFacebookImpl . java to enhance maintainability and maintainability
added " AAPT " and " AAPT2 " environment variables in Genrule . java and updated corresponding test cases in GenruleTest . java
add a conditional check for ` TruffleCompilerOptions . getValue ( ) ` in ` GraalTruffleRuntime ` and update ` InstrumentBranches
added a null check before disposing the message to prevent potential NullPointerException when the message is not initialized
changed the visibility of the ` db ` field and added a ` @ Getter ` annotation in ` TronStoreWithRevoking ` and ` Transaction
[ log4j2 - 132 ] fix log warning in corecontainer
replaced printStackTrace ( ) calls with fail ( " Cloning failed . " ) in CategoryPlotTests . java to improve error handling and provide clearer
refactor IOSImplementation to replace ByteArrayOutputStream with SmallByteArrayOutputStream and add SmallByteArrayOutputStream class to improve performance and maintainability of the code
[ jme3 ] use vertexbuffer . type instead of hashmap . name ( )
updated the connection string from " territory = en _ US " to " shutdown " in AbstractDIHJdbcTestCase . java to ensure proper resource management
added null checks for firstExchangeTimestamp and lastExchangeCompletedTimestamp in RouteInfo . java to improve robustness by preventing potential NullPointerExceptions
updated TestHtmlTag to use a default language instead of a default language and added new output checks in TestUseOption and TestUseOption to improve
updated condition in CompletionProvider to check if the result is in an incomplete state to ensure that the result is only processed when there are more than 10
updated the usage command line argument from ` TimeFieldSpec ` to ` timeColumnName ` and modified the condition for checking the ` -- llc `
updated variable names from ' format ' to ' outputFormatValue ' in SiteSnapshotVariationsTest , OutputOptions , and SiteSnapshotVariationsTest
updated the condition in DeviceProfile . java to check if the hotseat bar bottom space is not set to true to ensure correct handling of hotseat
add equal ( ) and hashcode ( ) to animationlist and gltfmodelkey
added a ` _ date ` field and its setter methods in ` AbstractGenerator ` , ` Generator ` , ` HttpGenerator ` , and ` Http
replaced instances of ` Adler32 ` with ` CRC32 ` in ` Store . java ` to improve code readability and maintainability by using
[ java ] set default value of xen . heartbeat . interval to null
added a new ` ZERO _ AREA _ FIN ` warning constant and updated conditional checks in ` FinSetCalc . java ` to improve warning
refactored elasticsearchio serializer to use a custom serializer for documentmetadata .
hhh - 172 - add support for trunc function in dialect for h2 and oracle
update metricutils to handle memory pool not find error
added a ` useJavaScript ` boolean variable and modified return statements in ` UserContext ` , ` FileAccess ` , and ` FileTreeNode ` to
updated error messages to use ` Types . PROTOTYPE _ FACTORY _ TYPE ` and ` RuntimeType . PrototypedBy ` instead of
updated BACKFILL path from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java
updated Pair . of ( true , new DataWord ( ) . getData ( ) ) in PrecompiledContracts . java to include a new id
refactor AllAppsContainerView to utilize BubbleTextView for item updates to improve code readability and maintainability by using a more efficient
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated the start ( ) method calls in ResourceService and ResourceHandlerTest to reflect the correct behavior of ContextHandlerCollection and otherContext to ensure proper
removed a conditional check for WORKSPACE _ CUSTOM in Cling . java to streamline the code by eliminating unnecessary logic
[ truffle ] remove unneeded assertion in trufflejdkservices
added JUnit Ignore annotation to the ShadowInvocationWhenChildIsInstrmentedButUnshadowed method in ClassicSuperHandlingTest . java
updated import statements in ItBitDemoDemoUtils , ItBitOrderBookDemo , ItBitTradesDemo , and ItBitTradesDemo to
remove unnecessary null check in profilingactivationinterceptor . getparameters ( )
added ` private ` constructors to several classes in the ` Utils ` , ` ApplicationUtils ` , ` AsyncSocketFactory ` , and ` Whois
add try - with - resources to prevent resource leak
replaced instances of ` Object . forName ( ) . getClass ( ) . getName ( ) ` with ` java . util . Vector ` and ` Hashtable
added tableNameWithType parameter to the warning log message in RetentionManager . java to provide clearer information about invalid retention time
added trim ( ) method to fragmentList checks in QueryExecutorImpl . java to ensure proper handling of empty string representations
modfileresourcepack : use modfile . getfilepath ( ) instead of path . tofile ( ) . tofile ( )
refactor the handling of TransformerBuilders in PartitionToolbar . java to improve clarity and consistency in handling TransformerBuilder . Node and TransformerBuilder . Edge
refactor conditional checks in RecentsView . java for improved readability to enhance code clarity and prevent potential null pointer exceptions
updated the ` calculate ` method to return a ` BMIViewObject ` instead of a ` Map < String , String > ` to enhance functionality
removed the ` Comparator . comparing ` method call from the ` thenComparing ` method in ` QueryCommand . java ` to simplify the code
fix the damage calculation for hay bale in the entity ' s entity .
refactor environment variable handling to use a list instead of a list for improved readability to enhance code readability and maintainability by using a more
added support for custom plugin properties in ` OptionsParser ` and corresponding tests in ` OptionsParserTest ` to enhance the functionality of plugin configuration options
updated null and empty check for hashTable in HashJoinBatch . java to ensure proper handling of empty hashTable
updated timestamp validation logic in Timestamp . java and added new test cases in TimestampTest . java to ensure correct handling of timestamps and ensure correctness
[ java ] remove unused field from clusteredserviceagent
added a condition to check if the isCompiled before verifying the compile threshold in LambdaForm . java to ensure that the compile threshold is only checked
added test for image2 , h2 , h2 , h2 , h2 , h2 , h2 , oracle and oracle
refactor TogglableFlag to use a new constant for the NAMESPACE _ LAUNCHER and update related methods to improve code clarity and
updated log messages in DockerClientFactory . java to include additional context to improve clarity and consistency in logging messages
added a conditional check for the ANDROID platform in SnapshotScreenListener . java to ensure proper handling of screenshots based on the operating system
use hamcrest assertion instead of junit in examples / routes / routestest . java
added new functional interfaces for BytePredicate , ByteToLongFunction , FloatToLongFunction , ShortToLongFunction , and ShortToLongFunction
changed the return type of the ` getSubColor ` method from ` int ` to ` String ` and updated related methods to improve clarity and consistency in
added a conditional check before deregistering the invocation registry to ensure that the future is only deregistered when it is complete
replaced a direct call to ` flush ( ) ` with a call to ` output ( null , null ) ` in ` AbstractWebSocketConnection . java
added a conditional check for the presence of extras before starting the welcome intent in LoginActivity to ensure that the intent is only launched when no extras are
added a new ` ShadowCheckedTextView ` class and its implementation in ` com . xtremelabs . robolectric . shadows ` to enable
added Serializable interface to ParserState and changed access modifiers to transient in AccessorProperty , AccessorProperty , Property , and Property classes to enhance serialization
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to enable verification of identrustdstx3
removed redundant assignments of TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline the code by eliminating unnecessary
fix a bug in the occupant . getnick ( ) method of occupant .
[ hotfix ] [ runtime ] remove unnecessary volatile from session constructor .
updated merge policy handling in CreateIndexTask . java to use configuration from the writer ' s configuration to ensure consistent configuration usage and avoid potential ClassCastException
refactor code for consistency and clarity in ICU4JImpl . java and TextPosition . java to improve code readability and maintainability by
added imports for ComputedDateValue , ComputedNumericValue , and ComputedNumericValue in AddDefaultValueChange . java and AbstractDatabase .
refactor NbtScoreboardIoService to improve code organization to enhance maintainability and readability of the code
[ saml2 ] remove unnecessary writableresource check from saml2configuration
changed the visibility of the printer variable from private to protected and added a createPrinter method in GraphPrinterDumpHandler to allow subclasses to access the printer
added BigDecimal import and updated average price calculation in HuobiAdapters . java to ensure accurate calculation of average price in order fields
updated method calls to use ` getTarget ( ) ` instead of ` getName ( ) ` in ` ProjectionOperation ` and ` TypeBasedAggregationOperationContext `
added a check for the presence of a player in the viewers list before sending a packet to ensure that the player is only sent when the player is
added constant state management to FolderAdaptiveIcon , FolderAdaptiveIcon , ShiftedBitmapDrawable , and ShiftedBitmapDrawable classes to
refactor SPDYClient to use a controller variable for connection handling to improve code readability and maintainability by using a more descriptive
add null check to protostuffobjectoutput . writeobject ( null )
[ pdfbox - 4072 ] fix some typo and add some comment .
refactor BarrowmanCalculator class to improve code organization to enhance maintainability and readability of the code
added a condition to check if the show axis is not visible before proceeding with rendering to ensure that only valid axes are displayed when necessary
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` in ` Texture . java
corrected a syntax error in the returnToWorkspace method call to improve code readability and maintainability
updated the SSL connection handling in CustomUrlJob . java and added a new CustomUrlTrustEverything . java file for SSL and SSL context verification
refactor clock rate retrieval to use a new method ` getRealUsedClockRateString ( ) ` to improve code readability and maintainability by
refactor TextureAtlas class for improved texture handling to enhance performance and readability of the code
updated method calls from ` getProductNameForBuildTargetNode ` to ` getModuleName ` in ` AppleLibraryBuilder ` and added a new method
added lock and release functionality to the registry to ensure proper resource management and prevent potential memory leaks
# 119 - add support for ` ` id _ list ' ' type in sqltreebuilder . find ( )
replaced ` closeFrame ` with ` rbuf ` in ` WebSocketServletRFCTest . java ` to improve code readability and maintainability by
[ wasm ] reset referencemultivaluestack to null in wasmfunctioninstance # pushreference ( )
[ hotfix ] [ log ] add ttl option to log
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and added serializable field handling in CustomChangeWrapper and XMLChangeLogSerializer to
replaced ` QueuedThreadPool ` with ` HandlerCollection ` in ` DeploymentExceptionTest . java ` to streamline server initialization and context management
added error handling for Timber initialization in CommonsApplication and modified VectorDrawableCompat initialization in NearbyController to improve robustness by catching exceptions
added null and empty checks for objectName before trimming to avoid potential NullPointerExceptions when objectName is null or empty
updated error message from " could not find file " to " open file " in Command . java and TestPrint . java to improve clarity of error
[ hotfix ] [ table - planner ] make environmentsettings static final
updated variable names and added null checks for subject and subject names in KeyTool . java and Resources . java to improve clarity and consistency in subject name
added a deprecation annotation to the RuntimeOptions class to indicate that the method is deprecated since 23.0
replaced manual byte array conversion with a direct call to ` str . getBytes ( ) ` to simplify code and improve readability
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a mechanism to check for permission
[ hotfix ] [ line ] add support for ERASE _ LINE _ ON _ FINISH option in linereader
masterfilesystem : do n ' t check online server if there be no online server
updated exception types from CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ MERKLE _ ERROR in multiple classes to
http : / / issues . apache . org / jira / browse / amq - 4253 - fix build failure
do n ' t swallow exception in defaulthttpclient . onerror ( )
change the layout of the spinner container from centering to centerAbsolute to ensure the spinner is properly displayed
[ hotfix ] [ network ] fix memory segment leak in networkbufferpool
refactor MBeanServer initialization to use a static variable for newMbeanServer to improve code readability and maintainability
replaced ` AndroidJUnit4 ` with a ` RetryTestRule ` in ` AbstractIT . java ` to utilize ` RetryTestRule `
updated the ` isAutoCommit ` method to use ` transactionManager . getSession ( ) . getRequiredTransactionId ( ) ` instead of ` auto
[ hotfix ] add package - info . java file to package - info . java
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser check
[ hotfix ] [ test ] remove unused code in streamtasktimertest
updated HTTP request handling in Request . java and added a new test case in RequestTest . java to ensure correct handling of request URLs based on
updated KEY _ LAST _ SEEN _ VERSION _ CODE from " lastSeenVersionCode " to " lastSeenNewActivity " and introduced a
added sessionsAvailable and sessionUnavailable methods to SessionManager to enhance session management by allowing session availability and unavailable sessions
added a new package to the scan service in ServiceLocator . java to enhance the functionality of the liquibase package
replaced the ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` in the ` deleteSyncFolders ` method to simplify
added a new parameter ` args ` to the ` loadWithNewGlobal ` method and updated its usage in the ` Context ` class to enhance functionality
updated method calls to use ` startIdx ` instead of ` startIdx ` for consistency to improve code readability and maintainability by using a more
updated weigher method calls from ` length ( ) ` to ` toIntExact ( ) ` in ` HiveClientModule . java ` to ensure
updated variable names from ` isExceedRandomizationDepth ( ) ` to ` hasAlreadyRandomizedType ( ) ` across multiple files to
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor and created a corresponding test in TestWindowFrame
clear the headers of proxyRequest in AbstractProxyServlet to ensure the request headers are cleared before proceeding
added a check for the SA attach platform in CompressedClassSpaceSizeInJmapHeap . java to skip tests that are not expected to work
added null check for bgColor in GraphicsDevice and created TranslucentWindow class for testing window translucency support to enhance robustness by preventing
added null checks for userInfo and updated error message handling in UserInfoActivity . java to improve robustness by providing a clearer error message for
added custom serialization and deserialization for Boolean values in PrecompiledHeaderData . java to ensure precompiled headers can not be used on different machine
[ hotfix ] [ table - planner - planner - planner - flink ] [ table - planner - flink ] [
added a new integration test class ` MultipleOutputsIntegrationTest ` to verify the behavior of named output groups to ensure that named output groups are used in
updated regex patterns in FileSettings . java to include the key and value of the setting value in the content string to ensure proper formatting of the setting
[ hotfix ] [ runtime ] fix checkstyle violation in statelessflow
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to indicate that the taskbar mode switch is persistent
added new device status entries for leaving dock and energy save mode in DeviceStatus . java to enhance user experience by providing clearer status details
add itemloadingexception to log message when load item model
removed unused imports and added an @ Ignore annotation to the KrakenFuturesStreamingPublicDataTest class to temporarily ignore the test due to unused
do n ' t use window . getcurrentsurfacescale ( ) for 2x graphics .
refactor RussianLowerCaseFilter class for improved readability to enhance maintainability and readability of the code
refactor CsvBulkLoadToolIT and QueryUtil to utilize PropertiesUtil for managing server and client properties to improve code readability and maintainability
replace ` File . separatorChar ` and ` File . pathSeparatorChar ` with ` File . separatorChar ` and ` File . pathSeparatorChar
[ jme3 ] add miss resettableinputstream to wavloader and make it protect .
added a ` repeatFirstLineIndent ` boolean and modified indent calculations in ` ColumnText . java ` to enhance indent management by allowing customizable indent
changed the type casting of the ` oid ` field from ` Object ` to ` Object ` in the ` equals ` method to ensure proper type
refactor metrics tracker and health check registration logic in HikariPool . java to improve code readability and maintainability by eliminating redundant code
use controlflowanchored instead of controlflowanchornode in loopex
set focus paint to false in WindowsPlacesBar . java to improve user experience by preventing focus from being displayed
added additional type check for UniqueConstraint and ForeignKey in DatabaseSnapshot . java to ensure compatibility with UniqueConstraint and ForeignKey instances
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and updated the API endpoint in ` AccountAPI
[ dspace - 13838 ] add miss metadata for dc . title in communityadmingrouplinkrepository and communityrestrepository
added a check for non - empty words before returning the Hypothesis utterance in GapInsertionDetector . java to ensure that the utterance
add a new test class ` RubyScriptTextTest ` to validate the functionality of the ` jruby ` script engine to ensure that the script engine
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater ` and added getter and setter methods in `
updated FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to increase FASTSCROLL _ THRESHOLD
[ hotfix ] [ runtime ] use ljava / lang / system instead of metautil . tointernalname ( )
hhh - 13644 do n ' t throw nullpointerexception when execute procedure call with null pointer
http : / / issues . apache . org / jira / browse / amq - 4253 - fix npe in restservletsupport .
added BinaryFrameGenerator and TextFrameGenerator classes for handling binary and text frames to facilitate the generation of WebSocket frames
[ java ] make pageloadingtest more robust by wait for the presence of element location .
refactored random double calculations in RandomGeo3dShapeGenerator to use nextBoolean ( ) method to improve code readability and maintainability by
added a keepAlive method to the ResourceBundle class to improve resource management by allowing the loader to be reused
change return value from false to true in SQLiteDatabase . java to ensure correct behavior of the method
[ java ] add support for concurrent sig in java / util / concurrent /
added MkdirStep to multiple classes and updated the expected number of steps in FatBinaryTest to ensure consistent execution of MkdirStep across
updated coordinate retrieval and error handling in MeshLeveler . java to use a more descriptive variable name to improve code readability and maintainability
[ kie - pmml ] skip kie - pmml parsing and compilation when jpmml be available
corrected the spelling of " locationMode " to " thermalStatus " in ShadowPowerManager . java to improve code readability and maintainability
replace java . io . tmpdir with OS _ MAC _ TMP _ DIR in MountableFile . java to ensure proper directory creation based on the
added a conditional check for memory buffers in PrjFileReader and updated CatalogManager to include it to ensure that memory buffers are only processed on Windows
added a null check for the organization in the PluginManager class to ensure that Plugis is required to have an organization in the pom . xml
removed the u * contributor license agreements from SepPostingsWriterImpl . java to improve code readability and maintainability
deleted the TerminateWebSessionListener . java file to remove unused code to streamline the codebase
updated the return statement to use System . getProperty ( " java . class . path " ) instead of a hardcoded string to ensure compatibility with
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device . java
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` to verify the behavior of the ` rewriteRun `
change LAUNCHER3 _ PHYSICS from false to true to enable the LAUNCHER3 _ PHYSICS feature
added new HTML elements " noPrint " and " noPrint " to the HtmlThreadInformationsReport class to enhance user experience by providing clearer
updated LUCENE _ MAIN _ VERSION from " 3.0 " to " 4.0 " in Constants . java and updated TEST _ VERSION _ 
added macosx symbolicator and task variables to BsdDebuggerLocal . java and updated PlatformInfo . java to check for Mac OS X
fix potential nullpointerexception in networkdispatcher .
do n ' t log networkdispatcher exception if connection reset by peer
[ java ] initialize adminbuffers and mediaconductorcommandbuffers if not set .
added a break statement in TouchImageView . java to ensure proper handling of the break statement
chore ( regen ) : update proto file to match new proto file
remove ssl handshake listener from feeder . flush ( )
added checks for type equality in TypeUtils . java to ensure correct handling of JavaTypes in TypeUtils . java
replaced NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush to improve performance by using ConcurrentSkipListSet instead of NonBlockingHashSet
added null check for ` tree . errs ` before calling ` memberEnter ` in ` MemberEnter ` , modified error handling logic in ` JavaCompiler
updated browser to use SWT . NONE instead of SWT . NO _ BACKGROUND to ensure the browser is always displayed
updated the cancel button from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure the cancel
fix integerstamp . foldstamp ( int , long ) to avoid negative bounds .
added a new method ` readStream ` in ` ITextUserAgent ` to read input streams from an InputStream to improve code readability and maintainability
updated SwitchCompiler and ExprGenerator to use Expression ' s writeDefineVariables and writeUndefineVariables methods and added local variable handling in CaseStmtToken
added exception handling for SSL provider initialization in RSAClientKeyExchange . java to improve robustness by preventing initialization of the cipher provider
change psapi . lib to psapi . lib in wingammaplatformv10 . java
updated SQL comment and total line formatting in StringUtilsTest . java to ensure proper handling of newline characters in SQL statements
added encoding and output encoding settings in TemplateEngineFreemarker . java and updated maliciousJavascript string in ApplicationController . java to ensure proper encoding and output
replace ByteArrayInputStream with String for byte array handling in CRDGeneratorTest . java to improve readability and maintainability of the code
[ hotfix ] remove static modifier from samplesenderfactory
added a condition to check if the " testngEmailableReporter " system property is not null before adding it to the EmailableReporter to ensure that
added quotes handling for quoted characters in CommandLineBuilder and updated test cases in CommandLineBuilderTest to ensure correct handling of quoted characters in command lines
removed the ` public ` modifier from several interfaces in the ` Clock ` interface and ` DelegatingGauge ` class to simplify the interface visibility and improve
added a method to set the number of fetchers in the job to ensure that the number of fetchers are correctly configured for the job
[ graphql ] fix default value for object field in schemageneratorhelper
updated the file version from " 505365 " to " 532077 " in SaveService . java to reflect the correct file version for better
added GL _ ARB _ texture _ float extension check to FloatTextureData . java to ensure compatibility with GL 3 . 0 extensions
fix fileserver . write ( filename , value ) to be thread - safe
added a null check for ` outputDirectory ` before setting it to ` jarStream ` in ` ClassDump . java ` to avoid potential NullPointerException
updated ShadowSQLiteConnection to use PerfStatsCollector for performance tracking to improve performance measurement for sqlite connections
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeap
add a new enum ResourceErrorHandling to handle resource error handling in the configuration package
added error handling for EOFException in RAMInputStream and implemented a test for EOFException in TestRAMDirectory to ensure proper handling of EOFExceptions
updated error handling in DefaultServlet and JspServlet to include request URIs to improve error reporting by providing clearer context for missing resources
updated ForkJoinPool and ForkJoinWorkerThread constructors to include an innocuous parameter and added a new AccessControlContext class to enhance thread management and ensure proper
updated the CHECK _ EVERY _ N constant from 10000 to 0xFFFF and added logging for HardRef cache clearing to improve memory management and enhance
hbase - 16464 fix testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction
added null check for currentSelectionArea before processing to avoid potential NullPointerExceptions when currentSelectionArea is null
added a parameterized test method ` testJaasDemo ` in ` DemoModulesTests . java ` to verify the functionality of the ` Jetty
added a check for spanX and spanY in the folder creation logic to ensure that the folder is only created when it ' s already in the
refactor CacheOffHeap class implementation to improve performance and readability of the code
added support for unsupported table creation in CreateTable . java and a corresponding test in TestCases . java to ensure compatibility with different database types and prevent
updated TiledLoader to handle extra XML gid values and added logging for warnings when extra XML gid values are ignored to ensure proper handling of extra XML
added synchronized keyword to the setWorkingSet method in InMemoryTileCache . java to ensure thread safety when setting the working set
added a new file ` Solution . java ` that includes a solution to calculate the minimum number of steps to account for 0 starting stone to provide a
add an addresschecker interface to check for bad address
fix a bug in multilayermodel . gettranslucent movingblock ( )
add a method to remove comment tags from the tool tip to improve code readability and maintainability by using a dedicated method to remove tags from the
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` , ` Capability ` , and
added null check for recieptents before sending them to the desktop to avoid potential NullPointerException when recieptents is null
[ hotfix ] [ routing ] fix routinginboundhandler # issingle ( routematch < ? > bodyclass )
added a ` failFast ` parameter to ` DockerClientFactory ` and improved logging in ` RemoteDockerImage ` and ` DockerImage ` classes to
added ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated related methods to include it to enhance functionality by allowing the ` resourcesMode
replaced usage of ` DateUtils . truncate ` with ` Calendar . getInstance ( ) ` in ` HistoricProcessInstanceQueryImpl . java ` to improve code
updated the import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure compatibility with the latest
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for command failures
refactor TreeMap class to improve performance to enhance performance and readability of the code
add enableasyncstacktraces ( ) method to cn and display .
added a method to set the glow color in BubbleTextView and updated Folder to use it to provide a way to set the glow color for the
added style classes for " file - row - text " and " file - row - text " in LinkedFilesEditor . java to ensure consistent style
updated the return statement in ` AbstractJdbc2ResultSetMetaData ` and added a new test method ` TestUtil . createTable ` in ` ResultSetMetaData
removed the try - finally block from the write method in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify the code by eliminating unnecessary
added null check for _ info before accessing its status to avoid potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class that initializes the provider variable to ensure proper initialization of the provider variable
added a condition to check if deviceRam is less than 2048 in LauncherPreferenceJavaFragment . java to ensure maximum memory allocation based on
[ hotfix ] [ map ] add stats per map when map have data
[ hotfix ] [ fileprofileactivator ] add log to fileprofileactivator
updated the parameter name from " noname1234 " to " invalid _ " in the addToBody method to improve clarity by using a more descript
[ hotfix ] [ guild ] use set instead of list in guild api
updated the length check from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to ensure the
added unit tests for the delete operation in DashboardUserMapperTest to ensure correct behavior of the delete operation in the delete operation
renames recipientidentifier to primaryparticipantidentifier to primaryparticipantidentifier and secondaryparticipanttoresponsesmap
add support for auto dereferencing of address and pointer to native node .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size of the output stream
add ` ` -- headless ' ' option for terasology . start headless ( no graphics )
updated switch - case structure in DrawerActivity . java to improve readability and maintainability of the code
refactor CommandLineParserTest class to improve test coverage to enhance code readability and maintainability
updated animation interpolators in QuickstepAtomicAnimationFactory and changed visibility of ALL _ APPS _ CONTENT _ FADE and PortraitStatesTouchController
updated the return statement in DefaultJavaLanguageNamer to use javaNameFromExternal instead of Character to improve clarity and consistency in naming conventions
removed unused native methods from CWrapper . java to streamline the code by eliminating unused native methods
added error handling for null and non - constant elements in the Checker class and created a new ValueTest class for testing constant values to improve error
refactor MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code organization and maintainability
removed null check for constructors in PojoUtils . java to simplify code and improve readability
refactor JiraConfiguration class to improve code organization to enhance maintainability and readability of the code
updated error and coverage string formatting in UploadBuild . java to improve readability and maintainability of the code
updated bounds calculations in DeviceProfile . java to use search bar top offset instead of 0 to ensure correct positioning of the search bar
[ hotfix ] [ pulseaudio ] fix npe in pulseaudiosimpleprotocolstream and pulseaudiosimpleprotocolstream
refactor OverviewCommandHelper to run on the UI thread instead of using a lambda expression to improve readability and maintainability of the code
added a method to retrieve the source group from the AppleSource class to improve code readability and maintainability by centralizing the method
increased the timeout duration from 220000 / SPEED to 320000 / SPEED in TestSimTriggerIntegration . java to allow more time for
corrected the parameter name from ` outputPositionCount ` to ` positionCount ` in ` RunLengthEncodedBlock ` and ` Lease ` constructors
added a loop to check if bestSoFar is null and modified the return logic in AbstractNodeCostSearch . java to improve accuracy of distance comparison
added a condition to skip processing if the component type is " Form " and " Dialog " in ResourceEditorView . java to ensure proper handling of
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java ` to
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is set when it is null to prevent potential NullPointerExceptions when
added imei and meid management methods to ShadowTelephonyManager and ShadowTelephonyManager classes to enhance telephony management
removed debugRequestEntity method and its associated logic from SimpleHostRoutingFilter . java to streamline the code and improve readability
added destory methods to IndexSegment , IndexSegment , BitmapInvertedIndex , and IndexSegmentImpl classes to ensure proper resource management and resource
[ rocketmq - 2478 ] fix the test failure of normalmessagesendandrecvit
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer . java `
hbase - 16464 hbasebulkload should throw ioexception instead of multipleioexception . createioexception .
added a ` commission ` parameter to ` DefaultWithdrawFundsParams ` and updated ` RippleWithdrawFundsParams ` to
removed the import of StreamTerminator from AutoClosingReferenceStream . java to streamline the code by eliminating unnecessary dependencies
updated exception handling to include ` IOException ` in ` LoadSolrBuilder ` and ` SolrLocator ` to improve robustness by avoiding unnecessary instantiation of `
added a check for abstract overloaded methods and improved error handling in Java2TypeScriptTranslator . java to ensure that abstract overloaded methods are only
added StacklessLogging imports and a try - with - resources statement in TestFileSessions . java to improve logging capabilities and ensure proper resource
added Serializable interface to MutableColumnDataType and refactored entities initialization in Entities class to improve code readability and maintainability by encapsulating
updated test cases for SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage and maintainability
added null check for claimRequestString before parsing to avoid potential NullPointerExceptions when claimRequestString is null
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve compatibility with the latest Hive builder
updated the ` processTypeHintForNestedDocuments ` method to handle null source and added unit tests for null values in ` UpdateMapperUnitTests
replaced ` mcr ` with ` coreStatus ` in ` CollectionsAPIDistributedZkTest ` and added a new method ` getCoreStatus `
initialize transformers and locators list in ModDirTransformerDiscoverer . java to ensure consistent initialization of transformers and locators
[ hotfix ] fix typo in exception message
add getcallstack ( ) and getcallstack ( ) method to PEgraphdecoder . java
renamed methods from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` and ` RestTemplateBuilder . java `
camel - 14497 : camel - mail : use identityhashcode instead of dumpmessage ( ) in camel - mail
added null check for connection . setredeliverypolicy ( ) and message . getoriginaldestination ( ) in prefetchsubscription
added setIsPropertyName ( ) method to getIdentifierName ( ) in mmm Parser . java and ppp Parser . java to ensure proper handling of property names
add a wave generator activity to create a new WaveGeneratorActivity and update the InstrumentsFragment to launch it to improve user experience by providing a
added logging for null values and improved null checks in KeyedProperties and SheetOverlaysManager classes to enhance error handling and provide clearer warning
added test cases for log , exec , and exec events in PodIT . java to ensure proper logging and execution of the pods
added a new test method ` testNoWriter ` to the ` TestReplicationHandler ` class to ensure that the ` SolrCore . initIndex `
added a call to dispatchMethodKernelOkra in GraalKernelTester . java to ensure proper handling of method dispatching behavior
[ hotfix ] [ runtime ] sort the record in the defaultmxrecord , not the defaultmxrecord
refactor thread creation in XToolkit . java to use a privileged action for improved readability to enhance maintainability and maintainability of the code
added validation to SelectBox and selected the dropdown in UITest to ensure the dropdown is selected on Linux6
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by using the Collector ' s printStackTrace method
updated the ` createState ` method to include a ` parentSplit ` parameter and modified state handling in the ` SplitState ` class to enhance state
changed the ` connectionState ` variable from ` private int ` to ` volatile int ` and updated its usage in the ` SSLSocketImpl ` class
[ java ] increase default poll timeout from 10 second to 1000 second .
replace ` ByteBuffer ` with ` int ` and ` long ` methods in ` MemoryStack ` and ` MemoryUtil ` classes to improve code clarity and
added exception handling for IOException in HtmlDoclet and AbstractDoclet classes to improve error reporting and provide clearer error messages
[ java ] fix unused modifier rule for enums
replaced lambda expressions with method references in multiple configuration classes to improve code readability and maintainability by using method references
added parameter name " ssl = { 0 } " to the Parameterized . Parameters annotation in AbstractHttpClientServerTest . java to enhance test coverage for SSL
updated error handling and logging in TransformationHelper . java to improve clarity and consistency in logging messages
corrected the spelling of " activeConnectionPermissions " to " activeConnectionPermissions " in ActiveConnectionRESTService . java to improve code readability
refactor equality check in Point class to use EqualsBuilder for better readability to improve code maintainability and reduce redundancy in comparison logic
added null check for outputRoot before processing to avoid potential NullPointerException when outputRoot is null
[ pdfbox - 4854 ] add annotationfilter to pdpage . getannotation ( ) and createannotation ( )
refactor StackTraceCleaner class to improve code readability to enhance maintainability and readability of the code
updated content type handling for CSS and JS files in PluginServlet . java to ensure proper content type handling for CSS and JS files
hhh - 13232 - skip test for oracle and oracle in select expression
updated the parameter name from ' version ' to ' slotSize ' and modified the upgrade method to handle null and empty stats to improve clarity and ensure
added a new method ` getStats ( ) ` to ` Context ` , ` ContextImpl ` , and ` DocBuilder ` classes , and updated
updated ScheduledThreadPool initialization and added long polling functionality in KieClient . java to enhance the kie client configuration by allowing long - running timeouts
refactor gesture handling in PagedView , BaseOverview , and LauncherInstrumentation classes to utilize AccessibilityManagerCompat for scroll functionality to improve
removed redundant initialization of unlocks dialog in UI . java and added a button for unlocks in PausedDialog . java to improve code clarity and
added a line to clear drops in PlayerEventListener to ensure that drops are cleared before processing
added a DEFAULT _ PARAM constant to StreamResult . java to provide a default value for the input name parameter
removed MalformedURLException from the testNormalizeOrder method signature in AttributeNormalizerTest . java to simplify the method signature and improve readability
[ tsfile ] skip the planindex if we do n ' t have a planindex
added ` headersToExclude ` to the ` UmbrellaHeader ` class and updated assertions in ` ProjectGeneratorTest ` to ensure that the
[ hotfix ] fix checkstyle violation in grizzlyasynchttpprovider
added a call to encode ( ) in RequestPlugin . java to ensure proper encoding of the request plugin
[ rolap ] add support for db2 dialect in rolapnativesql
added null and empty password validation in LdapAuthenticationProviderImpl and created a new test class for LDAP authentication to ensure proper handling of null or blank password
pdfbox - 2576 : remove unnecessary call to long . tostring ( ) in cosobjectkey . java
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure complexWriters is cleared after processing operations
added @ SuppressWarnings ( " serial " ) annotations and removed System . runFinalization ( " serial " ) in multiple cache - related classes to
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and added a null check for ` classInfo ` to improve code clarity
added validation for schema errors in ErrorResponseException . java to ensure correct handling of empty location and improve error reporting
added a constructor to the EventSourcingRepository class that accepts an eventStore and snapshotTriggerDefinition to facilitate instantiation of the EventSourcing
refactor binary node handling in mmm Attr . java and ppp Attr . java for improved readability and maintainability to enhance code clarity and maintainability
refactor search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to improve readability and maintainability of the code
refactor NuvoConnector and NuvoHandler to use a boolean flag for standalone mode and update sendCommand method signatures to improve command handling flexibility and
updated the default planar configuration value from TIFFExtension . PLANAR to TIFFBaseline . PLANARCONFIG _ CHUNKY to
added a call to is . close ( ) in ItemListTag . java to ensure proper resource management and prevent memory leaks
add a new utility class ` AverageUtil ` and updated ` TileLaserTableBase ` and ` TileLaserTableBase ` to
added new classes ` SigInt ` and ` SigIntBarrier ` for handling INT and INT signal processes to provide a mechanism for signaling
refactor graph model handling in ExporterGEXF . java to use HierarchicalGraph instead of GraphModel to improve clarity and maintainability of
replaced ` nullBuf [ ] ` with ` Text ` and updated related methods to use ` Text ` instead of ` byte ` to improve performance and
add validation for rubric question index in response
updated the type check from DB2Database to CatalogAndSchema in CatalogComparator . java to ensure accurate comparison of catalog and catalog cases
[ hotfix ] [ test ] fix browsermobproxytest . testbrowsermobproxyserver
[ hotfix ] [ model ] use integer . tostring ( ) instead of string . tostring ( )
removed redundant calls to mTextWatcher . reset ( ) in InPlaceEditView . java to improve code readability and maintainability
[ hotfix ] [ javadoc ] fix typo in trufflestring javadoc
[ hotfix ] [ graph ] make outedgesfunction use vertex and tuple2 instead of tuple3
refactor ` Java6Assertions ` and ` Java6SoftAssertions ` classes to improve code organization and maintainability
deleted the file ` ClassA \ 314 \ 201 . java ` and added a new file ` DiacriticTest . java `
replace CountDownLatch with CyclicBarrier and add assertExecutionsDone method to improve code readability and maintainability by using a more flexible barrier
added workspace reader handling and improved condition checks in DefaultMaven . java and DefaultGraphBuilder . java to enhance error handling and ensure proper handling of workspace
updated SSL scheme check from ` startsWith ( " https " ) ` to ` equals ( uri . getScheme ( ) ` in ` ServiceRegistryConfig `
refactor Mockito class implementation to improve code readability and maintainability
modified the constructor signature of Jdbc3Connection to remove unnecessary whitespace to improve code readability and maintainability
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure thread safety during servlet initialization
added delta server time handling and logging for delta server time in BinanceExchange and BinanceBaseService to improve accuracy of delta server time calculation and
added a condition to check if the binding starts with " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) Servlets For
added null check for the form before deregistering animation to avoid potential NullPointerExceptions when the form is null
updated ` decodeResource ` and ` decodeResource ` methods to include ` BitmapFactory . Options ` as a parameter to enhance functionality by allowing customizable
[ java ] add default value for number of message in example .
added click and long - click functionality to the holder ' s tweet text in TimelineArrayAdapter . java to enhance user experience by allowing users to
added " text " to the list of supported data types in PostgresDatabase and updated number type checks in NumberType to enhance data type handling and
remove @ ignore from entryprocessorbouncingnodestest ( # 3683 )
updated state checks from isHardDeletableState ( ) to isRemovableState ( ) in AmbariManagementControllerImpl .
fix npe in createbridgeservlet when add a bridge
updated method names and logic in PreconditionEnforcer and CrawlServer classes for consistency and clarity to improve code readability and maintainability by centralizing the
replaced direct calls to getDisplayName ( ) with a variable ' dName ' in multiple files to improve code robustness by avoiding potential NullPointerExceptions
added a defaultShader parameter to the SpriteBatch constructor and modified related methods to accept a ShaderProgram parameter to enhance shader creation by allowing default shader
added properties to set the " synchronous _ commit = on " option to " - c synchronous _ commit = on " to ensure compatibility with
added element type coercion support in SortedSetTypeCoercer to enhance type coercion by allowing multiple elements to be coerce
refactor confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve readability and maintainability to enhance code clarity and maintainability by using a
added a condition to check if the character is less than 256 in URLPathEncoder . java to ensure correct handling of 256 characters in the safe array
updated the port parameter in the registerFragmentStorage method to use a dynamic port instead of a hardcoded value to improve code readability and maintain
added an assertion to verify the return value of clusters in HostResourceProviderTest to ensure proper handling of empty clusters in the test
[ hotfix ] [ runtime ] remove unused log parameter from yarnentrypointutils
add init ( ) and repaint ( ) method to the sipcommframe class
removed the ShadowHtml class and updated its usage in HtmlTest to streamline the code and improve readability
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements ` StarTreeRecordStoreFactory ` to facilitate the creation
updated JettyLogger references from " org . eclipse . jetty " to " org . eclipse . jetty . http3 " and " org . eclipse
removed the ' private ' modifier from the ' addListeners ' method in MockSettingsImpl . java and added a new test case in MockSettingsImpl
[ hotfix ] [ runtime ] fix typo in statehandlestore
updated import statements from ` org . eclipse . util . security . Constraint ` to ` org . eclipse . jetty . http . security . Constraint `
set default section to ' None ' , not ' None ' .
[ hotfix ] [ runtime ] use try - with - resources to avoid resource leak
camel - 11497 : camel - test - add test to verify that the port be not available
added BuildTarget to multiple classes and refactored related methods to use it to improve code clarity and maintainability by using a more descriptive
fix checkstyle issue in trustEverythingmgt . java
[ hotfix ] remove getpagesizeval ( ) from listcapacitycmd
added a case for CLOSED in IteratingCallback . java to handle the CLOSED state of the IteratingCallback class
added a private boolean field ` isAuthorized ` and updated the constructor parameters in ` AccessControlContext ` to ensure proper handling of access control contexts
updated event handling in OSGiDeployer to check if the app is an instance of AbstractOSGiApp before sending the deployment event to
added handling for " tiff " codecV and " tiff " type in DLNAMediaInfo . java to ensure correct MIME type handling
[ hotfix ] [ test ] make sure profiledargumenttypes be set to null .
added a new file ` CubocDesktop . java ` and modified several loops in ` Map . java ` and ` MapRenderer . java
updated file paths in PolicyMonitorTest from ` getTestResourceDir ( ) ` to ` getTargetDir ( ) ` in ` PolicyMonitor ` to
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure that all files are removed from the trashbin list
updated the import statement from ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` to ` com . sun . jdi
[ gr - 16464 ] add checkglobalnode to check global variable storage .
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and modified the ` dispatchUserEvent ` method to include a ` Intent
[ fix ] maximize burnman ' s max amount to avoid overflow .
replaced specific imports with a wildcard import and refactored the UniqueConstraintSnapshotGeneratorSnowflake class to streamline imports and improve
updated DMLTransformer to handle empty insert statements more gracefully to improve code readability and maintainability by using a more descriptive string representation
updated test method from ` testValidServiceTicketWithInsecurePgtUrl ` to ` testValidServiceTicketWithSecurePgtUrl ` to
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added a ` hideDefaultName ( ) ` method to enhance
refactor JarLauncher class implementation to improve code readability and maintainability
updated generic type parameters in various classes to use generics for better type safety to enhance type safety and provide generics for better type safety
fix issue with video telephony jabber not get quality control
added a new test method ` testUpdateWithPGobject ` in ` ResultSetTest . java ` to verify the behavior of the ` PGobject `
updated password reset endpoints to handle non - UAA origins and added a test for password reset functionality to ensure proper handling of non - UAA
replaced the method of obtaining the XML element from getChildNodes ( ) to getDocumentElement ( ) to improve code readability and maintainability by using a more
refactor Cache class methods for improved performance to enhance performance and readability of the code
updated variable names from ` timeInSec ` and ` prevTimeInSec ` to ` timeMillis ` in Isochrone and SPT
fix the light relay not bind properly when it ' s valid .
added a new ` Chainer ` class and updated the ` contains ` method to return a ` Chainer < T > ` instead of ` Collection
refactor Model class to improve code readability to enhance maintainability and readability of the code
updated recordedTime calculation in Locations . java to include a new value of 619315200000L to ensure accurate calculation of recorded time
added a check to resize the status if the terminal type is Windows to ensure the status is resized when the terminal type is Windows
updated formatting and state handling in UpdateDesiredStackAction and RepositoryVersionState classes to improve readability and maintainability of the code
[ java ] remove jre _ java _ src from test / java / src / j2cl
[ hotfix ] [ maven ] use linkedhashset instead of hashset for global location and user location
removed exception handling for Operation assignment in OperationServiceImpl . java to streamline code by eliminating unnecessary try - catch block
updated the order of method calls in KnativeEnvironment . java to improve code readability and maintainability
updated the thread pool name from " commitlog _ archiver " to " commitlogArchiver " to ensure consistency in thread naming conventions
added connect ( ) calls in CloudSolrClient and created a test for uploading configurations in TestCloudSolrClientConnections to ensure proper handling of
[ java ] synchronize allbindings in breakpoint and debuggersession
replaced direct calls to ` new File ( ) ` with static final constants ` CACHE _ DIR ` and ` FILES _ DIR ` to
added LinkedHashSet and TreeMap to the getStyles ( ) method in SecureXStream . java and updated its usage in XStreamPersisterTest . java to
kiehelper : use the new kiemodulemodel instead of the new kiemodel . toxml ( ) method
refactor soil dry flag handling in BlockEventListener to improve clarity and functionality to enhance code readability and maintainability by using a more descriptive
added a default method ` getLocalIp ( ) ` to the ` FinishedSpan ` class to provide a default implementation of ` getLocalIp ( )
updated JdbcStepExecutionDao to use SerializationUtils for serialization and added a new test for serializing integer values to ensure correct handling of integer values and
removed              
added " python37 " and " python37 " resources in python . java and updated resource paths in tensorflow . java to ensure compatibility with the
refactor PluginTab to use a private ArrayList for plugins and add a refresh button to improve code readability and maintainability by encapsulating
changed log level from info to warn in DefaultHistory . java to improve logging clarity by using a more descriptive log level
[ vmware ] fix npe in vmwarestorageprocessor . getvmvm ( ) when vm be null
http : / / issues . apache . org / jira / browse / amq - 4674 - make sure sshd stop ( true )
updated ExperimentalMockitoJUnitRunner . java file to improve test coverage and maintainability
updated serial prefix handling to use a new method ` GetBuildSerial ( ) ` instead of ` Build . SERIAL ` to ensure compatibility with new
refactor SwapGBuffers class for improved performance to enhance performance and readability of the code
added a null check for ` skeletonControl ` before removing it to prevent potential NullPointerExceptions when ` spatialControl ` is null
added a new method ` setSmartReplies ` to ` ShadowRankingTest ` and updated ` ShadowRanking ` to use ` Reflector
[ java ] do n ' t add - suffix to the archive file if it do n ' t exist .
updated the retrieval of the CARROT _ RESOURCES _ DIR variable in CarrotClusteringEngine . java to ensure the correct resource directory
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to ensure proper handling of null
updated the version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility with the latest ASM
updated exception handling in RecommenderMapper and CacheTest to throw TasteException instead of returning null to improve error handling and provide clearer
added clientInfo initialization and updated method calls in SurrogateAuthenticationEventListenerTests . java to utilize it to improve test reliability by utilizing the client
added a boolean variable ` isUserView ` to ` CardPresenter . java ` to control the visibility of the user view
updated method names from ` GraphvizJavaAvailable ` to ` GraphvizUtility ` across multiple files to improve clarity and consistency in method naming
refactored the creation of ` constructBatchHistogram ` and ` syncLogTimePerRequestHistogram ` in ` LogDispatcherThreadMetrics . java `
added a new module - info . java file for the sqlite module to implement module exports and dependencies for the sqlite connector
added a sleep delay of 500 milliseconds in StreamResetTest . java to improve test stability by avoiding unnecessary sleeps
removed conditional check for web type in PermissionsManager initialization to simplify permissions management logic
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method to get the depth value in SpringLoadedState to provide a way to calculate the depth of the state based on the context
replaced manual byte array copying with Arrays . copyOfRange for data handling to improve code readability and maintainability by using a constant for minimum sizes
[ hotfix ] [ javadoc ] fix typo in executiongraph
remove swipe layout from notificationactivity and remove unused swipelayout
updated exception handling to use " none . msg " instead of " msg " in DefaultExceptionConverter . java to improve error reporting and provide clearer
updated lock handling in GlowContainer to use a nullable lock string and modified getLock method to ensure that lock is not null to prevent potential NullPointer
replaced ` LOOKUP . findSetter ( ) ` with ` getDeclaredMethod ( " set " ) ` in ` ProxyMaker . java `
change bitand ( int ) to integer ( int ) in mathtest . java
updated return statements in BaseEmailContentFormatter to use string concatenation instead of string concatenation to improve readability and maintainability of the code
added a simple panel to the LayoutPanel class to manage the visibility and visibility of the simple panel to enhance user experience by providing a simple panel for
added a null check for the location parameter in the isDeadServer check to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for the key parameters before generating public keys in BasicChecker . java to prevent potential NullPointerException when the key parameters are missing
replaced ` ignoredMediaTypes . contains ` with ` shouldIgnore ` in ` MediaTypeRequestMatcher ` and added a new method ` shouldIgnore ` to
updated logging messages to include taskAttemptId and taskAttemptId in LlapBaseInputFormat to improve clarity and consistency in logging output
added a new property " spring . main . allow - bean - definition - overriding = true " to the SpringBootTest annotation to allow bean definition
added null check before closing the indexReader to prevent potential NullPointerException when closing the indexReader
changed package declarations for BTCMarketsStreaming classes from ' service ' to ' btcmarkets ' in multiple files to improve code readability
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest . java ` to verify rendering behavior to ensure that
added a new file ` CompatibilityTest . java ` to test property loading and validation of DTD properties to ensure proper handling of Compatibility .
added new classes ` PushUtils ` , ` PushUtils ` , and ` SecurityUtils ` for Push functionality to enhance the application ' s ability to
updated the calculation of numReplicas and numTargetReplicas in TableRebalancer . java and added corresponding tests in TableRebalancerTest
bump version to 2.10 . 0 and update release note
[ log4j2 - 164 ] fix test failure on window .
added handling for SocketTimeoutException in AjpAprProcessor to improve error handling by throwing a SocketTimeoutException when reading timeouts
initialize ` friction ` , ` restitution ` , ` density ` , and ` isSensor ` in ` FixtureDef . java ` to
[ te ] rename ` ` anomaly ' ' to ` ` anomalyfunctionspecmap ' '
added error handling for the " am wait - for - broadcast - idle " command in LauncherInstrumentation . java to ensure proper execution of the broadcast
added unit tests for font and link tags in ResourcesTest . java and updated the span construction in ResStringPool . java to ensure proper handling of
fix src _ work / src _ work / src _ base / common / net / minecraft / src _ work / base / common / src _
added permission handling for CALL _ PHONE in Launcher . java to enhance user experience by allowing users to access phone calls based on user permission
updated return values in ` SimulationPanel ` , ` PlotDialog ` , ` BasicEventSimulationEngine ` , and ` Startup ` classes to
refactor GeoPointInBBoxQuery , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and TestGeoEncodingUtils classes to
added a synchronized method ` isDockerAvailable ` to ` DockerClientFactory ` to check if a Docker connection is available to ensure that the client is
removed the static final string VPX from CodecTypes . java to streamline the code by eliminating unnecessary constant
added coordinatorAddress parameter to DistBuildFactory and updated DistBuildRunCommand to use it in AbstractDistBuildExecutorArgs to enhance command flexibility
added a new method ` match ` in ` FsUtils ` and refactored timer management in ` WrapTimer ` to improve path matching functionality
added a condition to check if the value is greater than zero before adding LabelAndValue to labelValues to ensure that labelValues is only added when
added null checks and improved result handling in the App . java file to enhance robustness by preventing potential NullPointerExceptions
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the code and improve readability
added a method to set the materialization time in ObjectStore and created a corresponding test in TestObjectStore to ensure proper functionality of the creation metadata
added error handling for missing native dependencies in VoskSTTService . java to improve error reporting for missing native dependencies
[ java ] remove jmssampler . is _ one _WAY property from jmssampler
updated conditional logic in GlyphView . java to use ` = = ` instead of ` > ` for break weight comparison to improve code readability and
refactor byte reading logic in RCFile . java to use a buffer for better performance to improve performance by avoiding unnecessary synchronization checks
added @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 due to a bug
refactor data handling in ToePool to use a LinkedList for unwound entries to improve code readability and maintainability by centralizing the
removed unnecessary parameter from setToSortedDataFlavorArray methods in ClipboardTransferable , DataTransferer , and DataTransferer classes to simplify the
added a new argument " - infoport " to the HBaseTestingUtility ' s random free port in TestThriftServerCmdLine . java to
added a check for ` atEOF ( ) ` in ` RegExpScanner . java ` to return false if ` atEOF ( ) ` is true
replace Boolean . getBoolean with Set < String > for metrics and timers in Debug . java to improve code readability and prevent potential NullPointerExceptions
added null check for getnickname ( ) in chatroomjobimpl . java
[ hotfix ] [ test ] fix typo in error message .
refactor ` createRefreshToken ` method to a separate method ` createRefreshToken ` to improve code readability and maintainability by encapsulating the
updated error message formatting in BuckConfig . java to improve clarity and consistency in error reporting
[ hotfix ] remove unnecessary lock in YarnFlinkApplicationMasterRunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` in ` ShadowNativeImageReaderSurfaceImage ` to return a ` HardwareBuffer `
added SSL URI to BTCChinaMarketDataService initialization in BTCChinaExchange . java to ensure proper SSL URI for the BTCChina exchange
pmd : do n ' t use file . separator in cpd task
added two new files , OauthController . java and Oauth2PluginTest . java , to implement and test the Oauth2 plugin to
refactor SemgrexPattern class to improve code organization to enhance maintainability and readability of the code
removed redundant flatMap and flatCollection methods in AbstractStreamEx , StreamEx , and EntryStream classes to streamline code and improve readability by eliminating
[ hotfix ] [ runtime ] improve error message for exceptiontoproducerresponseconverters
updated the condition in ` shouldComeFromThisClassLoader ` to include " org . specs2 " in addition to " org . specs2 "
modified the condition for checking audio encodings in MediaControl . java to ensure proper handling of audio encodings when checking for audio encodings
updated ` CreateTableGenerator ` to use ` DatabaseFunction ` instead of ` SequenceNextValueFunction ` to ensure correct handling of ` DatabaseFunction `
add more test for normalizedmultivaluemapstest . teststation3gml31 ( )
added a volatile boolean field ` wasInvoked ` and updated corresponding methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added a condition to check if the processor is configured before expanding regex mapping in ColumnarDataSource and refactored return statements in RowProcessor to improve
updated ` CustomSeekProvider ` to use ` SEEK _ LENGTH ` instead of ` splitIntoThirtyParts ` and refactored
added XLCDCommunicator and XLCDController classes and updated FirmwareUtils to handle Grbl and XLCD commands to improve command handling and
kiemoduletransformer : move xmlschemafactory to org . kie . internal . jaxp . validation . xmlschemafactory
updated retry logic in EventQuery and EventQuery002 classes to use ` isEmpty ( ) ` instead of ` true ` for message validation to ensure
[ hotfix ] [ test ] make workerprocesspooltest more robust
refactor ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and add a new test class ` DelegatingMethodTest ` to
updated FREEZE _ V2 and UNFREEZE _ V2 constants from 20000 to 10000 to improve code readability and maintain
added exception handling to the command method in DownloadPlugins . java to ensure proper handling of ConfigurationException during command execution
deleted ` SpringTransactionHooks . java ` and replaced it with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest . java ` to simplify
refactor AbstractClassAssert class to improve code organization to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue . java ` to test the behavior of uninitialized string values to ensure proper handling of uninitialized
added ` providedDeps ` and ` providedDepsTargetsBuilder ` to the ` AndroidLibraryDescription ` and ` GraphEnhancementQueryEnvironment ` classes to
added a new device flag ` ENABLE _ KEYBOARD _ TRANSITION _ SYNC ` to the ` FeatureFlags ` class to
refactor the handling of system anomaly message to use a static variable instead of a hardcoded value to improve code readability and maintain
added a constant for the Cinepack format in FormatConfiguration and updated LibMediaInfoParser to use it in LibMediaInfoParser to provide a
added camera bobbing animation support to the Player class to enhance user experience by allowing camera bobbing animations
replace ` b . data . describe ( ) ` with ` b . digest . tostring ( ) ` in ` GrpcCasBlobUploader
deleted the HSQLDBServerFilesFilter . java file and replaced it with a single FilenameFilter in TestUtility . java to streamline the codebase
added a null check for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure proper handling of null restoreFromSeed and
fix mediatableTVseries . getapidatavideoversion ( ) to use apidataseriesversion instead of apidatavideoversion
added a check for type existence in the visitMethodInvocation method in HasTypes . java to ensure correct handling of method invocations based on type requirements
updated array size from 6 * 3 to NUM _ VALUES in AmbientCubemap . java to improve code readability and maintainability by using a
added mode _ modeReset to MethodsFeature and ObjectsFeature classes to enhance user experience by providing clearer feedback when the profile mode is not
added checks for zero values in multiple UDF classes to ensure proper handling of zero values to avoid potential NullPointerExceptions
refactored test to use junit rule instead of junit . after
add itemstack . isitemstackintentable ( ) and gethassubtypes ( ) to make it easy to use .
add linestate . line _ width to fix mc - 167447
do n ' t set the browser . startup . page in firefoxprofile
updated HTTP response condition in Http1xClientConnection . java to include additional HTTP methods and headers to ensure proper handling of upgrade requests and improve response
updated task name from " compile " to " process - classes " in JoobyMojo . java to improve clarity and consistency in naming conventions
replace shutdown method with closeIdleConnections method in HTTPHC4Impl . java to ensure proper resource management and prevent potential memory leaks
added a check for the existence of aggregate function suffix before processing identifiers to ensure that the metric is only added when the name is not already present
added a method ` setFullscreenParams ` to ` TaskOverlayFactory ` and updated ` TaskThumbnailView ` to use ` mCurrentFullscreenParams `
added a new Java class ` Solution ` that prints the number of frequencies to display the number of frequencies in the system
[ java ] initialize ch1 to null in clusteredagentmanagerimpl
updated MutisignOperationerGodicTest . java file to improve test coverage for Mutisign operations
added exception handling to ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` methods in ` StaxEventItemReader
replaced specific imports with a wildcard import and added null check for qualifiedResourceName in ShadowTextView and TestAttributeSet to improve code readability and ensure
updated imports from ` com . nimbusds . jose . shaded . json ` to ` net . minidev . json
updated OS type check from " Linux " to " AIX " and added support for Linux - s390x - 64 in PKCS
use routercontrolip instead of router . getprivateipaddress ( )
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to provide a way to invoke a runnable without blocking
deleted the PresenceMessageComboTests . java file to remove unused test classes to streamline the codebase
replaced direct casting with ` Math . round ` for rectangle calculations in ` PortraitPagedViewHandler . java ` to improve code readability
updated formatting in TestClusterDumper . java for consistency to improve code readability and maintainability
updated the calculation of the ` KeyValue ` class to include an additional ` ARRAY ` array in the ` KeyValue ` class to ensure proper handling of
camel - 14497 : camel - core - add a service to the context so that it can be configure with a type converter .
added handling for ConditionalTask in SparkCrossProductCheck . java to ensure proper dispatching of tasks in Spark cross product checks
refactor action handling in Launcher , LauncherAppState , and LauncherModel classes to improve code readability and maintainability
updated the condition in ` LoginInfoEndpoint ` to include ` jsonResponse ` in the ` LoginInfoEndpoint ` class to ensure proper handling of JSON
[ hotfix ] [ table - planner ] add todescriptivestring ( ) method to assignmentmanager
updated variable names from ' message ' to ' msg ' and ' result ' in HuobiAccountInfo and HuobiAccountServiceRaw to
added support for " PERIOD " column in MariaDBDatabase and a corresponding test in AddColumnGeneratorTest to ensure correct handling of reserved words in
[ beam - 81636 ] [ beam - java ] add default environment option to portablepipelineoptions
added version change logs for Android 7 . 1 - you now have Launcher shortcuts and some bug fixes to improve user experience by providing clearer
updated the visibility of the NUM _ MILLIS _ IN _ DAY constant in IndexExpressionIT . java and added a public static import in TestUtil
removed a debug print statement from ImageResourceLoader . java to clean up the code and improve readability
[ java ] remove invocation of invokeaeronclient ( ) from sequenceragent
added validation for implicit lambda parameters in ` Attr . java ` and created a new class ` NoWarnOnImplicitParams . java ` to ensure correct
refactor menu item visibility and visibility logic in FileMenuFilter and FileDetailFragment classes to improve code readability and maintainability by centralizing menu
added BTC _ deposit , reserved3 , reserved6 , and reserved6 in BTCETransHistoryResult . java and updated the expected type in
replace List < ? extends Throwable > with Set < ? extends Throwable > in RetryFilterFunctions . java to improve performance by using a more efficient set
added a @ Deprecated annotation to PluginLoader . java to mark the class as deprecated to indicate that the class should no longer be used
added a condition to check if the end time is greater than the sequence time in ` LastQueryExecutor . java ` and created a new test for
updated the formatting of the request string in HttpResponse . java to improve code readability and maintainability
added a static block to set the log level to " ERROR " in BuildImageMojo . java to ensure that the log level is set to "
added a method to set the title bar ' s safe area to ensure the title bar is properly displayed
updated loop condition in OverflowSeriesImpl . java to iterate through the first index of the TimeSeriesChunkMetaDataList to improve performance by avoiding unnecessary
added SQL syntax for renaming and deparsing in AlterTest . java to ensure correct SQL parsing and deparsing behavior
[ hotfix ] make abstracthariconfig . copystate public
fixed - rexecutorservice . executecallable ( ) method throw npe
[ hotfix ] [ file ] add . split file extension to filelister
[ hotfix ] [ table - planner ] [ table - planner ] fix typo in javadoc
reformatted conditional statements for clarity in CompareFunctionsProcessor . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkavailablediskspace ( ) in compactiontask . reducescopeforlimitedspace
removed the ` toString ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to streamline
added checks for state handler INVALIDATED in AbsSwipeUpHandler and deregistered TaskStackListener in TaskAnimationManager to ensure proper handling of task stack
refactor ` getLockTimestamp ` and ` setLockTimestamp ` methods to use ` AppPreferences ` instead of ` Context ` to improve clarity and
refactor artist retrieval logic to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added null check for remoteMessage before accessing its data to avoid potential NullPointerExceptions when remoteMessage is null
added null checks and null checks for splitInfo and splitFlowFiles in SplitText . java , and introduced new test cases in TestSplitText .
updated key store type handling in HttpsConnectorFactory to support Windows - specific key store types to ensure compatibility with Windows - specific key store types
[ java ] increase default check timeout for resttemplate and webclient
added a conditional check to ignore files that are not found in FileSyncAdapter to ensure proper handling of file not found results
added animation interpolation functionality to the Slider class to enhance visual value and animation functionality
updated assertions in LineSeparatorProcessorTest to use lineSeparator instead of eol to improve clarity and consistency in assertions
updated maxWidth and maxHeight values from 512 and 512 to 1024 in TexturePacker . java to adjust texture pack sizes for better performance
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest ` and modified
camel - 16247 : camel - hazelcast - add null check for the body in camel - hazelcast to avoid npe
added a new test class ` TextFeedbackTest ` and modified ` TestRunner ` to implement a test for the ` TextFeedbackTest ` class to
replaced Math . round with Float . compare for score comparison in DefaultSolrHighlighter . java to improve accuracy in score comparison logic
updated display constants in AddAndScaleMultiImage . java and modified FileOutputStream initialization in ResourceEditorApp . java to use try - with - resources
[ hotfix ] fix arraycopysnippets . readklasspointer ( ) to use arrayclasselementoffset .
log4j2 - 132 : log4j2 - 164 : log4j2 - 164 : log4j2 -
added support for remote SCM support in various environment classes to allow retrivals for remote SCM systems to enhance flexibility in handling remote SCM
added additional state changes to the OnOffType to include additional state checks to ensure proper handling of state transitions in the application
replaced instances of StatsLogCompat with SysUiStatsLog in StatsLogCompatManager . java to improve clarity and consistency in logging functionality
corrected the spelling of " log " to " LOG " in the LocalZookeeper class to improve code readability and maintain consistency in the code
added unit tests for project generation events in EventSerializationTest . java to ensure proper serialization and deserialization of project generation events
ggb - 129 add prerelease feature for view point selection
updated import statements in JavaCompiler . java to improve code clarity and maintainability
added a check to ensure remainingTime is non - positive before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to
updated multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
added " -- gc - sections " and " nocopyreloc " flags to the ldflags in NdkCxxPlatform . java to
refactor URI construction in SpringCloudCircuitBreakerFilterFactory and add fallback URI handling in SpringCloudCircuitBreakerFilterFactory to improve URI expansion
[ hotfix ] [ test ] fix checkstyle violation in test
fix a bug in readsharedstringstable . getsharedstrings ( string ) where sst and t be n ' t a part of
added a new method ` getAccountNet ` to ` HttpMethed ` and a corresponding test case in ` HttpTestAccount001 ` to
added a check for non - negative text width in SwingUtilities2 . java and improved error handling in Test6635110 . java to ensure proper
refactor FlatteningIterator and FlatteningIterator to use a new ` nextBlank ` variable to improve code readability and maintainability by
updated the ` TweetLinkUtils . java ` to use ` replaceAll ` for title and body in ` TweetLinkUtils . java ` to
chore ( deps ) : generate sample code in the java microgenerator ( # 119 )
add test case for instructorfeedbackeditquestionsuitest . testdeleteanyexistingquestion ( )
hssfsheet . getlastrownum ( ) should return 0 instead of - 1 for first row
added permission checks for malicious intents in ` InstallShortcutReceiver ` , ` Launcher ` , and ` Launcher ` classes to ensure proper permission
[ java ] use sendevent instead of notifysessionopened in sequenceragent .
refactor hash code calculation in AbstractParquetMapInspector to improve readability and maintainability of the code
http : / / issues . apache . org / jira / browse / amq - 4078 - flush the session if it be close
changed the ` SplitReader ` interface to extend ` AutoCloseable ` and removed the ` close ( ) ` method from ` SplitReader ` to
removed the deepCopy method from GsonBuilder to streamline the copy process by eliminating unnecessary assignments
[ java ] add assertion for llscanner . not _ found in llsourcebuilder
[ hotfix ] [ runtime ] remove appendfileasync ( ) and appendfileasync ( ) from httpclientrequestimpl
updated dispatchStatusString method call in GrblController . java to ensure correct dispatching of the status string
replaced ` MockFactory ` with ` SearchingClassLoader ` and added a new class ` SearchingClassLoader ` for managing class loaders to enhance class
[ jme3 ] add jme3test . testrefreshflagbug ( ) for jme3 .
added a new condition to check for LEFT _ SEMI _ JOIN in the conditional statement to ensure proper handling of LEFT _ SEMI _ JOIN conditions
refactor response completion logic in HttpReceiver and HttpSender to use HttpStatus . CONTINUE _ 100 instead of boolean to improve code readability and
[ hotfix ] rename arraylengthoffset to arrayoopdesclengthoffset ( )
[ hotfix ] [ test ] add default policy to brokertestsupport
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added a check to ensure the app context is running before stopping it to prevent processing when the application is not running
changed the return type of the drawItem method from void to GlyphLayout to improve clarity and functionality of the drawItem method
refactor metrics handling in SpringmvcClient and improve error handling in CodeFirstSpringmvc to enhance code clarity and maintainability by using a
removed the ` SAFE _ ACCOUNT _ AGE _ DATE ` constant and simplified the return statement in ` AccountAgeWitnessService . java `
reformatted code for consistency and readability in StructureHeader . java and StructureReader . java to improve code readability and maintainability
added support for ` ResourceUrlProviderExposingInterceptor ` in the ` CasWebflowContextConfiguration ` and ` DefaultLogoutWebflowConfigurer
add a new dexreturninliner that transforms return stmts to the dexpler
refactored ruledto to use property instead of rule . getconfiguration ( )
updated method calls to include " / symlinkDir " in PathResource and AliasCheckerSymlinkTest to ensure proper handling of symlink directories in the path
[ hotfix ] [ table - planner - core ] remove sql dialect from executionentry
updated ` rDotJavaPackages ` to use ` Supplier < ImmutableSet < String > > ` instead of ` ImmutableSet < String > ` in multiple classes
add a test case for ASTPackageDeclaration to verify the package name of AST packages to ensure that the AST package declarations are correctly marked as deprecated
add min _ cross _ compaction _ unseq _ file _ level property to set the min _ cross _ compaction _ unseq _ file
[ hotfix ] [ runtime ] move activeresourcemanager to active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to improve clarity
replaced ` CLASSPATH _ SCHEME _ PREFIX ` with ` CLASSPATH _ SCHEME ` and added exception handling for ` URISyntaxException ` to
reformatted code for better readability and added thumbnail generation logic in ExpandableUploadListAdapter . java to enhance code readability and maintainability by
refactor annotation handling in RobolectricTestRunner and add a new test case in RobolectricTestRunnerTest to improve clarity and functionality of
updated ModelLoader to use Iterables for blocks and items instead of GameData to improve performance by filtering block and item registry names
removed the abstract keyword from several methods in AbstractDataChangedListener and updated WebsocketCollector to use WebsocketConnect instead of SyncDataService to improve
added enum color handling in JSONPojoConvertor and updated corresponding test cases to improve code clarity and ensure correct behavior of color management in JSONPojoConvert
added a warning for deprecated ` -- view ` option in ` IjProjectCommandHelper . java ` to indicate that the ` -- view ` option
refactor GWTRequestWrapper to use ByteArrayOutputStream for better resource management to improve performance and maintainability of the code
refactor GyroControl to utilize OrientationCorrectionListener for sensor and sensor event values to improve handling of sensor orientation changes
updated BIOME _ LIST _ SIZE from 256 to BiomeGenBase . getBiomeGenArray ( ) . length in BiomeDictionary .
updated function calls from ` println ` to ` print ` in ` GetInterfaceTest . java ` and changed interface visibility from package - private to public
removed redundant assignment of Environment in FileCompilerConfig . java to improve code readability and maintainability
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide a mechanism
added a preload parameter to MMapDirectoryFactory to enable configuration of the map directory preloading behavior
added metric configurations for various plot components in BukkitPlatform . java to ensure accurate visualization of metrics based on configuration settings
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added a default card image drawable to the CardPresenter to enhance the visual appearance of the default card image
[ dspace - 13232 ] do n ' t call auth . loginpageurl in loginredirect .
updated VectorHashKeyWrapper to use EMPTY _ ARRAY instead of EMPTY _ LONG _ ARRAY for clone operations to ensure proper handling of empty arrays
[ java ] add test for system . nanotime ( ) and system . nanotime ( ) in timechangetest . java
added line trimming logic in MultiPartFilter and improved error logging in MultipartFilterTest to ensure proper handling of null values and provide clearer error
add entityplayer . getexplicitexperiencedrop ( entityplayer , entityplayer , entityplayer ) and entityplayer . getexperie
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to provide clearer context for offline configuration errors to improve clarity of error messages and
[ calcite - 16464 ] remove unsupportedatorsvisitor from calcite planner
refactor GraphEnhancementQueryEnvironment to utilize RdepsFunction and add a test for Rdeps in GraphEnhancementQueryEnvironmentTest
refactor Character class to improve code readability to enhance maintainability and readability of the code
added a flag to scale the entire rocket based on the component type to ensure that the scale of the entire rocket is only enabled when the component is
replaced ` Arrays . toString ( ) ` with direct calls to ` assertEquals ( bytes , 4 ) ` in ` UpdateableResultTest . java `
added null checks for time boundary information in BaseBrokerRequestHandler and refactored related methods to improve code readability and maintainability by consolidating
[ java ] remove unnecessary check in ajp / apr / http11 / apr / apr / apr / apr /
updated EightmusesRipper to use " picture " instead of " Sex and Porn Comics " and modified album title handling to improve image
replaced calls to ` mDevice . wait ` with ` TestHelpers . wait ` across multiple test files to improve code readability and maintainability by
added a condition to check if the profile is phone and landscape in QuickstepLauncher . java to ensure proper handling of phone profile layouts based on
updated assertions in PartTreeJpaQueryIntegrationTests to use ` QueryImpl ` instead of ` getValue ( ) ` to improve clarity and consistency in
updated the method to read matching lines from ` Files . readAllLines ` to ` Files . readMatchingLines ` and added a method
removed the dynamic check logic from JpaQueryExecution . java to streamline the code by eliminating unnecessary method invocations
added a null check for the entity object in PhysicsProcess . java to ensure proper handling of null entity types
[ hotfix ] [ table - planner ] add test for entry processor with predicate clear value attribute .
add jitsi - conference - room header to notify join room .
updated color calculation in Utils . java and modified htmlMessage in UtilsTest . java to ensure consistent color handling and improve test coverage
do n ' t disable text input if no value be specify in menu
updated scratch path construction in Aapt2Link . java to include a new RmStep for building cell paths to ensure consistent path resolution for
replaced instances of ` new Capture < > ( ) ` with ` newInstance ( ) ` in ` ExternalJavacTest . java ` and ` Thrift
do n ' t clear selected geos if we do n ' t have one .
[ hotfix ] [ ysld ] improve error handling in ysldvalidator
added ` isCanceled ( ) ` method implementations in multiple call classes to ensure proper handling of call cancellation status
refactor ` isAnnotationPresent ` methods across multiple classes to use a default implementation to improve code clarity and maintainability by eliminating unnecessary null checks
added a default implementation of the ` removeAllWidgets ` method in ` UILayout ` to provide a clearer error message when the method is not
[ hotfix ] [ yarnsessionfifoitcase ] [ test ] make yarnsessionfifoitcase more robust
http : / / issues . apache . org / jira / browse / amq - 4253 - fix opensslcipher . java fail to
added handling for high - res content transcoding in PlaybackController to ensure proper transcoding of high - res content
[ beam - 14435 ] fix source source source source source source test to work with new datasources .
replaced specific imports with a wildcard import and modified listeners handling in GpsLoggingService . java to improve code readability and maintainability by reducing
updated ` putString ` method to use ` byte [ ] ` instead of ` boolean [ ] ` and modified width handling logic in ` Relay
added import for BaseItemDragListener and modified drag handling logic in FolderIcon . java to enhance drag - and - drop functionality for better user experience
added ` createEmptyArtifact ` method to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` Signavio
fix checkstyle issue in rabbitmqpublisherimpl . java
removed unnecessary calendar check for afterAug1 in VideoViewerActivity . java to simplify the conditional logic for video link loading
added a compactPath method to the SftpOperations class to ensure proper path handling for Sftp operations
[ hotfix ] [ test ] increase timeout for baseweatherconsumertest
rename ` groupSortStr ` to ` sortWithinGroupStr ` for consistency to improve clarity and consistency in naming conventions
[ fern ] fix a bug in doubleplant . getworldworld ( ) where fern be not set .
updated tree focus settings from focus to request focus in TranscodingTab . java to ensure proper focus management for the tree
[ hotfix ] [ runtime ] fix exception throw in vmmanagerimpl . getvirtualmachine ( )
refactor license handling in DB2TestSystem and update imports in DockerDatabaseWrapper and TableIsEmptyGenerator to improve code clarity and maintainability
[ fix ] optimize optimization seek value for selected parameter
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to facilitate the use of BTC and ZMW
added a check to set the number of samples in the TestPBRLighting class to ensure the correct number of samples is set based on the
removed redundant calls to assertTasklet in StepWithSimpleTaskJobParserTests . java to simplify code and improve readability
changed variable declaration from non - final to final in CentralAuthenticationServiceImplTests . java to ensure immutability of credentials and service service retrieval
[ hotfix ] [ runtime ] fix typo in expressionnode
added multiple calls to ` addServiceOutput ( ) ` and ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to
add toclassorinterfacetypetype ( ) and toclassorinterfacetypetype ( ) to compare bigdecimal and bigdecimal .
added " org . eclipse . jdt . " to the WebAppContext class to hide jdt used by the Jetty framework
removed the call to ` super . useAuthCache ( ) ` in the ` NegotiateAuthentication ` class to simplify the authentication logic by eliminating
updated namespace assignment to capitalize segments to ensure consistent naming conventions for better readability
camel - 14497 : camel - direct producer should not throw an exception if no consumer available
added null check for zooKeeper before setting it to avoid potential NullPointerExceptions when zooKeeper is not initialized
removed unnecessary whitespace in the progressBar step message to improve code readability and maintain consistency
replaced direct calls to ` mVibration . vibrate ` with ` runOnUiHelperThread ` in ` AllSetActivity . java
added a call to updateLastRemoteStreamId in HTTP2Session . java to ensure the last remote stream ID is updated correctly
added text antialiasing settings to EditorHeader , EditorToolbar , and Preferences classes to enhance text antialiasing capabilities for better user experience
[ java ] remove reference to termwindowsize and use sentposition instead of termwindowsize
fix findbugs warning in ctannotationimpl . java
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
modified the return statement in WRobotPeer to use a new Rectangle object instead of a native method to improve performance and maintainability of the code
added a new method ` newPrintStream ` to create a ` FileOutputStream ` and updated output stream creation to use the ` sun . stdout .
updated vibrate method from 1 to 25 in TouchableMovementMethod . java to increase the volume from 1 to 25
[ hotfix ] fix checkstyle violation in appenginesqlcloudsession
removed unnecessary parameters from the WebSocketClient constructor to simplify constructor parameters and improve code readability
( chore ) camel - selenium - server - i18n : move test _ i18n . html to test _ i18n .
updated exception handling methods to use ` handleLoadConstantException ` instead of ` handleIllegalArgumentException ` and ` IncompatibleClassChangeError ` to improve
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper handling of authentication state during integration tests
added a LowercaseComparator class to compare string values in CoNLLUFeatures . java to improve code readability and maintainability by utilizing a
refactor ` parse ` method to use a ` List < JavaFileObject > ` instead of an ` Iterable < JavaFileObject > ` to improve code clarity and
alexeibarantsev : fix flaky test in formhandlingtest
removed error handling for length of keys in HighestKvno . java to streamline code by eliminating unnecessary error handling
added error handling when retrieving attributes from HDF5BatchReader to improve robustness by logging warnings when only Huge objects BTrees are available
[ beam - 11824 ] remove dependency on pdone from bigquery sdk
updated XmlRootElement name from " copySnippetRequestEntity " to " createTemplateRequestEntity " in CreateTemplateRequestEntity . java and added implicit parameters in
added a new file TestMultiANewArray . java to test the handling of multi - A new array class to verify the behavior of class files
[ hotfix ] [ config ] remove secondary . storage . vm config option
refactor variable names and logic in SyncBlockChainMsgHandler . java for clarity to improve readability and maintainability of the code
added a method to set the theme in PreviewTabView to ensure the content is displayed in the preview view
added null check and closing logic for the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` to ` ConnectorTimeoutTest . java ` to verify the idle time of HTTP connections to ensure
add property for dcoref . dictlist , dcoref . dictpmi , and dcoref . signatures
updated method names from ` readIdentifier ( ) ` to ` readTagName ( ) ` and added a new ` readTagName ( ) ` method to
updated type parameters in JpaPagingItemReaderIntegrationTests and modified exception message in JobLaunchingGatewayParserTests to improve type safety and ensure correct
changed log level from warn to debug in DistributedQueue . java to improve log level for improper name detection
refactor ColorExtractionService to use a dedicated method for retrieving the hotseat palette to improve code readability and maintainability by centralizing palette update
updated imports in TypeRegistry . java and added DefaultDataTableEntryTransformer and TableCellByTypeTransformer methods in TypeRegistry . java to enhance data
removed assertion for newAvailableShared in AtomicRemainder . java to simplify the code by eliminating unnecessary assertions
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` , and updated its usage in ` WorkspaceAndProjectGenerator ` to
corrected a syntax error in the conditional statement to improve readability and maintainability of the code
added a new Contact class and integrated it into the ApplicationController and BodyParserEnginePost classes to enhance contact form functionality and enhance the application ' s
[ guacamole - 147 ] use objectpermissionset instead of permission in simpleuser . getpermissions ( )
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
changed the parameter type of setMode from KnowledgeBase to KieBase in the TraitFactory class to improve clarity and consistency in naming conventions
rename ` findWhereNameLikeAndActive ` and ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive `
replaced manual resource closing with IOUtils . closeSafely method in DocFieldProcessor . java to ensure proper resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in ExpansionViewHelper to enhance user experience by providing a click listener for the overflow button
updated fail messages from " is null " and " is not null " to " is a reference " in multiple classes to improve clarity and consistency in
add a help button and update the line height of the help button if it ' s not null
move protobufferutilitiestest to core . util package
use platform . runLater ( ) instead of thread . position ( ) in jabrefframe
fix aux sub generator to handle crossrefs correctly .
use metadatamap instead of map < string , object >
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity and consistency in naming conventions
add a new method ` metaContactAvatarUpdated ` to ` MclStorageManager ` , ` MetaContactChatSession ` , and ` ContactList
updated import statements for Command from org . apache . sshd . server . Command to org . apache . sshd . server . command . Command
added a new test method ` testCleanUpAuditLogTablePostParametersByPosition ` in ` AuditLogTest . java ` to verify the cleanup
added @ SuppressWarnings ( " unchecked " ) annotation to the inject method in ComponentContext . java to suppress unchecked warnings during injection
added regex pattern matching for empty and invalid comment lines in ACLFileParser . java and modified comment parsing logic in ACLFileParserTest . java to
updated imports and method signatures in MapRDBFormatMatcher and MapRDBSubScan classes to include FileSystemPlugin and DynamicDrillTable to
added ` ancestorDimensionValues ` to ` StarTreeImpl ` and updated related logic in ` StarTreeNodeImpl ` and ` TestStarTreeNodeImpl `
added user unlock check in TouchInteractionService and refactored closeOpenViews method calls in BaseQuickstepLauncher and Launcher to improve code clarity
updated variable name from ' widthStr ' to ' positionStr ' in Photo . java to improve clarity and consistency in variable naming
reformatted conditional statements in PKIXValidator . java for improved readability to enhance code readability and maintainability
[ hotfix ] [ test ] add archunit test for testcodearchitecturetest
updated package names from ` org . apache . integratedtest ` to ` org . apache . shenyu . integrated . test . alibaba . dubbo
[ java ] remove unnecessary call to skipprojectnetworks from networkserviceimpl
[ hotfix ] [ test ] fix test for shapetype . squadre
add a method to store UndoInfo for properties in the App class to enable proper handling of property changes in the application
added privileged action for accessing the " sun . java2d . xrgradcache " system property in XRCompositeManager . java to
[ java ] fix streamclosetest to use awaitility
removed the abstract method ` doAfterFlush ( ) ` from ` DocFieldProcessor ` and added null checks in ` TermVectorsConsumer ` to
added handling for non - deprecated enums in ConfigurationMetadataGenerator and modified property iteration logic in AbstractJpaProperties to ensure proper handling of non -
updated variable declarations in BiInt2ObjectMap , Int2ObjectHashMap , and Int2ObjectHashMap to use ' values ' instead of ' capacity
increased the number of threads from 25 to 15 in the HIVE _ MOVE _ FILES _ THREAD _ COUNT configuration to allow for
[ hotfix ] [ runtime ] fix typo in paralleliosender . sendmessage ( )
added a null check for the context before creating a new SchemeAndroidIDE instance to prevent potential NullPointerExceptions when context is null
do n ' t use custom compiler class loader for native image build server
changed the return type of ` modifyGrantedAuthorities ` from ` void ` to ` List ` in ` SwitchUserAuthorityChanger ` and ` Switch
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and added new classes ` RawJaxrsIntegrationTestBase ` and ` 
do n ' t use sqlfeaturesupportedexception in poolutilities . isjdbc41compliant
added tests for GeneralTestsData and SupplementaryCharacters in XslSubstringTest . java to enable testing of XML and supplementary characters in
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter ` and added
added support for MariaDB sequences in MariaDBDatabase and improved type checks in CreateSequenceGenerator to ensure proper handling of MariaDB database versions and improve
updated string concatenation formatting in multiple Java files to improve code readability and maintain consistency in formatting
replaced ` BrokerResponse ` with ` TableDataManagerProvider ` in multiple test files to utilize the new ` TableDataManagerProvider ` for
added support for " jsse . enableMFLNExtension " in the SSLExtension class to ensure compatibility with MFLN extension settings
changed the type of the iterator variable from ObjectHashSet to ObjectHashSetIterator and added new constructors in ObjectHashSetIntegerTest to improve type safety and
updated characterRemaining and charRemaining lengths from 22 to 23 in multiple Java files to ensure accurate string length calculation for shortened URLs
added a new constant ` DATAPOINT _ TTL ` and updated related methods in ` CassandraDatastore ` , ` WriteBuffer ` , and ` Write
updated the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and modified prompt handling logic to enhance user experience
added a method ` getTerrainAtCell ` to retrieve the terrain at a specified coordinate to enhance functionality for retrieving terrains at a specified cell coordinates
added default value handling in Pretty . java and created a new class T6665791 . java with a Java compiler test to enhance code clarity and
added error handling for FileNotFoundException in ResourceLoader . java to provide more informative feedback when quest encryption keys are not found
added a condition to check if the HTTP channel is not push before checking if the push is enabled to ensure that the HTTP channel is only enabled when
refactor PointValue class to improve code organization to enhance maintainability and readability of the code
added a call to sign the local witnesses in BlockUtil . java to ensure that the private witnesses are signed correctly
updated return statements in FileSystemView . java and added security checks in Win32ShellFolder2 . java to ensure proper handling of empty roots and ensure
updated row height calculation and refactored copyContent method in PdfPRow and PdfPRow classes to improve clarity and functionality of row copying and
added a SparseArray < Note > undoNotesList and refactored related code to improve code readability and maintainability by centralizing the
add feedback question id and comment id to upload backup data
added null check for data in getTransferData method to prevent potential NullPointerExceptions when data is non - null
( chore ) camel - ebean - server - jdbc : remove unused pstmtdelegate
replaced ` Padding ` class with ` AppWidgetHostView . getDefaultPaddingForWidget ` in ` AppWidgetResizeFrame . java ` and removed
refactor MethodHandle initialization in NashornBeansLinker to use a static block for creating MethodHandles instances to improve code readability and maintainability
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the code
rename ` latch ` to ` goAwayLatch ` and update assertions in ` IdleTimeoutTest . java ` to improve clarity and consistency in
updated failure message assertions in IterableSubjectTest . java to use hasMessageThat ( ) instead of getMessage ( ) to improve clarity and consistency in error
replaced the use of ` ThreadLocal ` with a direct assignment of ` currentBook ` in multiple files to improve code readability and maintainability by eliminating
update contactsecurityvoter . vote ( ) to support object type
removed unused imports from DataLoader . java to clean up the code and improve readability
added an ` rowsAffected ` parameter to the ` postUpdateLog ` method and updated related methods to accept an additional ` rowsAffected ` parameter to
ggb - 119 fix suggestion margin to be consistent with ggb
added default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration . java to ensure proper configuration of foregroundFPS and background
added ObjectReleaseTracker assertions to HdfsTransactionLog , TransactionLog , and HdfsTransactionLog classes to ensure proper handling of object release
removed the import of DefaultWebSocketFrame and added a listener for ChannelFutureListener to streamline the writeAndFlush method for better resource management
updated ` StateMachineErrorTests ` to use ` TestApplicationEventListener1 ` and ` TestEventListener2 ` instead of ` TestApplicationEventListener ` to
refactor settings activity to use a separate method for setting the list background to improve code readability and maintainability by centralizing background color handling
updated imports from Apache Commons Lang3 to Openhab ' s StringUtils and added null check for the line variable to ensure proper handling of null values
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count of a user - defined accumulator
updated closing braces in Put . java and ReplicationSink . java to improve code readability and maintainability
replaced ` VALID _ CACHE _ SET ` with ` REGEXP _ CACHE ` and updated method calls to use ` create ` instead of
added a static method ` reset ( ) ` to reset the ` gameThread ` instance to ensure proper initialization of the ` gameThread ` instance
added a login method to the DigestAuthenticator class to check the realm of credentials before proceeding with login to ensure that the login process does not fail
refactor parameter handling in SavedRequestAwareWrapper to use an iterator for better readability and efficiency to improve code maintainability and maintainability by
updated info messages from " hiddenSingleton " to " lc " in BasicConfigurator and added a toString method in LoggerContext to improve clarity and consistency in
replaced calls to ` countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog ` and ` HAService ` classes to simplify
added a check for Android O in PhotoViewerActivity and implemented a utility method in Utils to ensure compatibility with Android O and improve user autocomplete functionality
updated schema info level from minimum to basic in SchemaCrawlerTest . java to ensure compatibility with basic schema information
replaced ` zipOut ` with ` bufferedOutputStream ` in ` SaveTask . java ` and removed ` writeEndElement ( ) ` calls in `
replaced the use of ` pool . bytesToString ` with a new method ` _ TestUtil . randomFixedByteLengthUnicodeString ` to improve code
bugfix MC - 103516 : fix mc - 103516
added multiple instances of " Tomcat10ContainerAdapter " and " Tomcat101ContainerAdapter " in ProbeConfig . java to enhance the
[ drools - 241 ] fix the bug of accumulate ( ) in the kieoutputmarshaller
added case statements for LE , LT , and GE in NowSearchTerm and SearchTermBuilder classes to improve code readability and maintainability by
pdfbox - 2452 : remove public modifier from pdfcloneutility
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for endpoint URL resolution to enhance flexibility in handling HTTP methods and headers
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class and modified the initialization of the ` ResponseBuilder ` instance to improve
added a notification for the command start event in AsyncBackgroundTaskManagerTest to ensure the notification is notified when the command is started
refactor ` computePreviewDrawingParams ` method to be public and add null check for ` mReferenceDrawable ` to improve encapsulation and
refactor the handling of token and filters in LukeRequestHandler to use CharFilterFactory instead of TokenFilterFactory to improve code readability and maintainability
replaced instances of ` IllegalArgumentException ` with ` ParamChecks . nullNotPermitted ` in ` AbstractCategoryItemRenderer . java ` to improve code
added verbosity parameter to createSubContext and createSubContext methods in JavacStep . java and ExecutionContext . java to enhance error handling by allowing
added a null check for the database type in DbSqlSession . java to ensure that the database schema is correctly converted to uppercase
added LogManager . getContext ( false ) . getClass ( ) . getSimpleName ( ) to the context description in AsyncLoggerAllThreadContextImplementationsTest .
added a new file TestShrinkToOneRegion . java containing a main method to implement a system . gc ( ) method to ensure that the system
refactor split method to use Splitter for better readability to improve maintainability and maintainability of the code
replaced ` utf8ToString ( ) ` with ` context ` in ` AnalyzingInfixSuggester . java ` and added a new test
updated the handling of local attachments in PushsaferMessageBuilder . java to improve clarity and functionality of the message builder
updated the ` showLabelStats ` method in ` ModelExplorer ` , ` SequenceModelExplorer ` , and ` StripProvenance ` classes to
pdfbox - 2452 : remove null check for characterlistmapping in pdftextstripper
changed ` static ` modifier from ` private final static ` to ` private static ` in multiple test files to improve code readability and maintainability by
updated the ` evaluate ` method to accept a ` Double n ` parameter and modified its implementation to use ` BigDecimal ` instead of ` Long ` to
refactored injectionEnabled and useIncludedLibrary initialization in GraalJSScriptEngineFactory to use ConfigParser to improve code readability and maintainability
changed class access modifiers from package - private to public in Test1 . java and Test2 . java to enhance encapsulation of test classes
replace usage of ` permission . no _ permission _ event ` with ` deny . no _ enter ` in ` PlayerEventListener . java ` to improve
added session parameter to the getAdditional method in ConditionAndOr and ConditionInConstantSet to enhance functionality by allowing additional values to be added to the
updated imports and method names from ` doTestNormsVersusStoredFields ` to ` doTestNormsVersusDocValues
added loops for creating box , circle , and contact list in Box2DCharacterControllerTest . java to ensure correct behavior of body creation and
added new test cases for maximum size limits and memory size options in TestBadOptionValues . java to ensure proper handling of memory size options for better
removed unnecessary assertions in ObjectAlignment and Options classes to simplify the code and improve readability
added a method to extract the target package from manifest files and implemented a target package extraction method to enhance the Android instrumentation functionality to extract the target package
refactor DocHelper class to improve code organization to enhance maintainability and readability of the code
changed the type of ` acceptableThrowawayItems ` from ` Arrays . asList ( ) ` to ` ArrayList < > ( new ArrayList < > (
removed generic type parameters from invokeExact calls in Test6987555 . java to simplify type safety and reduce unnecessary type casting
removed unnecessary whitespace in MessageHandler . java to improve code readability and maintainability
fix typo find by codespell on fossies . org
added getter and setter methods for the locale in EvaluationContext to provide access to the locale for evaluation context
removed the import of ` Plugin ` from ` SummaryPrinter . java ` to streamline the code by eliminating unnecessary dependencies
added a break statement to the switch statement in DrawerActivity . java to improve code readability and maintainability
updated import statements and modified query object logging in MongoQueryCreator . java to improve code readability and maintainability by using a wildcard import
add system property xwork . loggerfactory to allow use of xwork . loggerfactory
rename adminaddpeerfailswhenp2 to adminaddpeerfailswhenp2 and addpeerhasnoeffectwhenp2pdisabled
[ hotfix ] [ auto - config ] add bean name for readiness state health indicator
added a concurrent map to manage PStore objects in LocalPStoreProvider to improve performance by using a concurrent map for concurrent operations
changed the access modifier of the ` deleteFiles ` method from package - private to package - private to improve encapsulation and maintainability of
renamed ` Provider ` to ` ServiceProvider ` in ` ServiceLoaderSpliterator ` and ` TypeUtil ` classes to improve clarity and consistency in naming conventions
do n ' t throw illegalargumentexception in javainteropreflect . findfield and javaobjectmessageresolution
added checks for toolchain creation and other toolchains in multiple classes to ensure proper handling of Android SDK changes when toolchains are present
fix a race condition in polyglotengineimpl . removecontext ( )
[ hotfix ] [ test ] use contains instead of indexof in abstractcheckdescriptor
updated the ` setLinkerFlags ` method to use ` exportedPlatformLinkerFlags ` instead of ` setLinkerFlags ` across multiple classes
replaced ` onConfigurationChangedInternal ` method with ` updateRecentsRotation ` method in ` AbsSwipeUpHandler ` and ` RecentsView `
updated listener type checks from ` ItemReadListener ` and ` ItemWriteListener ` to ` ItemReadListener ` and ` ItemWriteListener ` to
updated the method to retrieve the hash string from the newBlock header to ensure consistent hash representation of the newBlock header
[ hotfix ] [ runtime ] remove unnecessary call to getstorepathcommitlog ( )
[ hotfix ] [ runtime ] remove unnecessary try - with - resources
[ flink - 18286 ] [ store ] add get message count to store stats for compaction log .
deprecate abstractjpasubquery , abstractjpacommonquery , jpaquerybase , and jpaquerybase
added a method to check for system UI objects in AbstractLauncherUiTest . java to enhance functionality for managing system UI objects in the device
changed the visibility of logger and principals from static to non - static in SessionRegistryImpl . java to ensure that the logger and sessionIds are
added checks to return false for empty cookie jars in InMemoryCookieStore and NullUriCookieTest to ensure that removeAll returns false when the store is
[ flink - 14486 ] [ runtime ] fix npe in tar archive .
updated the return type of getText methods from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to
added @ NotYetImplemented annotation to AlertsTest . java to indicate that the test is not implemented for the MARIONETTE
http : / / issues . apache . org / jira / browse / amq - 4293 - fix socketconnector . java fail to
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` across multiple files to improve clarity and consistency in
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety and prevent potential deadlocks
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and added ` wrapWithTracingAndCancellation ` method to enhance
added a new method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to fix the drag - selecting text out of
added path configurations for temporary and staging directories in TestInformationSchemaWithPrivilege . java to enhance testing capabilities for temporary and staging files
refactor graphics configuration retrieval logic to handle null parent cases more gracefully to improve code readability and maintainability by reducing unnecessary loops
[ tika - 264 ] fix oom test in legacy mode
[ java ] remove the doprocess method that be no longer need .
updated argument handling in PrintTagList . java to use a parser file and improved error messaging to enhance flexibility in parsing model files and provide clearer
updated insert statement to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` in ` InsertDeParser . java ` and added
updated exception handling in JournalCorruptionEofIndexRecoveryTest to use EOFException instead ofLocalizedMessage to improve error reporting and provide clearer error messages
[ java ] remove unnecessary sleep in startfromtruncatedrecordinglogtest
updated the calculation of the ` arc ` variable in ` LineBorder . java ` and modified the ` outer ` initialization in ` LineBorder . java
added null and empty checks for galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to ensure proper handling of empty gallery images
updated the creation of the DEPLOYMENT _ ID column in StandardChangeLogHistoryService and modified the CreateDatabaseChangeLogTableGenerator to use a
pdfbox - 2465 : use form instead of fdf for printfields and setfield
removed the ` moreColumnOk ` parameter from the ` canUseIndex ` and related methods in ` AlterTableAddConstraint . java ` to simplify
[ hotfix ] fix quickfixjcomponent to start provisional engine if available
added ` displayZoomControls ` property and its getter / setter methods in ` RoboWebSettings . java ` to enhance functionality by allowing customizable
add corporea corporea and corporea corporea corporea spark to the corporea
refactor ConnectionFactory class to improve code readability to enhance maintainability and readability of the code
added a new method ` EnableDisableMenuItems ( ) ` to ` GpsMainActivity ` for enabling menu items based on user settings to enhance
updated the message for empty favorites from " headline server search " to " filter list " in ExtendedListFragment . java to improve user experience by
hhh - 14136 - remove serviceregistry . serviceregistry usage in test
added auto - resize mode and auto - create columns from the model in MotorMountConfigurationPanel and updated constructor parameters in MotorMountPanel to use sub
updated LINE _ SEPARATOR from system . lineSeparator ( ) to system . getProperty ( " line . separator " ) to ensure compatibility with the
added getter and setter methods for creator and subject properties in POIXMLProperties . java and created a corresponding test in TestPOIXMLProperties .
reformatted the call to ` super . doStop ( ) ` in ` HandlerWrapper . java ` to improve code readability and maintainability
alexeibarantsev : do n ' t throw an exception if there be no cnc file
replaced instances of ` Marker ` with ` Foo ` and ` FooCommand ` in the ` UnsatisfiedTypeBounds ` class to improve code clarity and
added support for jmod file handling in ClassFileSourceImpl . java to enhance class loading capabilities for JVM files
updated ` TreeBackedElement ` and ` TreeBackedPackageElement ` to use ` Preconditions . checkNotNull ` instead of ` canonicalizer ` to
replaced instances of ` Saml2TokenGranterTest ` and ` UserTokenGranterTest ` with ` PublicTokenRequest ` in multiple test
updated method call from arrayLength to valueRangeObject in AbstractFromPropertyValueRangeDescriptor . java to ensure correct retrieval of array elements from valueRangeObject
added a sync method to the ZooKeeperWatcher class and invoked it in ZKAssign and ZooKeeperWatcher to ensure proper synchronization of the ZooKeeper
add check for no current context in glutil . getcurrentcontext ( )
[ hotfix ] [ runtime ] do n ' t remove activation if flowgroup be active
added a return statement to HystrixDashboardConfiguration . java to improve code readability and maintainability
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to ensure proper error reporting
[ hotfix ] [ test ] fix checkstyle violation in clientqueuedisruptiontest
use standardprettyprinter instead of signatureprinter in ctreferenceimpl . tostring ( )
changed the access modifier of the validateInstance method from public to protected to allow subclasses to access the validateInstance method from other classes
updated import statements in GeoPointField , GeoPointInBBoxQuery , and GeoPointPrefixTermsEnum classes to improve code clarity and maintainability
added a new ` FakeBuildable ` class and modified ` OnDiskBuildInfoTest ` to use it to improve buildability and maintainability by
fix itemstack . isempty ( ) to use itemstack . isempty ( ) .
rename ` ` path ' ' to ` ` timeseries ' ' in sqlparser
added a check to return 0 if the velocity is less than EPSILON in TubeCalc . java to ensure that the correct velocity is returned
replace calls to ` getBucket ( gcsUri ) ` with ` BlobInfo . newBuilder ( gcUri . getBucketName ( ) ) `
removed redundant blockCloseVertxByName call in TestHighwayTransport . java to streamline code and improve readability
added methods to create and recreate history views in DbTriggerBasedHistoryDdl and PostgresHistoryDdl to enhance functionality for managing history views and
updated the clustering engine check from 2 to 3 in CarrotClusteringEngineTest . java to ensure compatibility with the latest clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable the test that needs to be rewritten
updated ` ParserCacheCommand ` to use ` ParserStateObjectInputStream ` instead of ` ObjectInputStream ` and added a new class ` ParserStateObject
added null checks for changeLog and updated objectQuotingStrategy assignment in ChangeSet and DatabaseChangeLog to ensure proper handling of the object Qu
updated the method from ` parse ` to ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to ensure compatibility with XML
deleted the CsrfControllerAdvice . java file to remove unused code to streamline the codebase
added a method to quote path lists in an AntCompiler to improve path handling by using a dedicated method to quote file paths
added scrim animation functionality to the Launcher class and updated alpha handling in AllAppsBackgroundDrawable to improve visual consistency and maintainability of the
[ iotdb - 2487 ] fix typeinferenceutils . getlongstringinfertype ( )
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
added validation for path prefix in WindowsPathParser and corresponding test cases in PathOps to ensure correct handling of path and directory paths
replaced InetSocketAddress instantiation with direct instantiation of MulticastSocket in Promiscuous . java to improve code readability and maintainability
removed redundant calls to writer . close ( ) in TestWildcard . java to improve code readability and maintainability
change return value from nBits to nBits . clone ( ) to ensure proper cloning of nBits to avoid potential memory leaks
changed the access modifier of ` deriveCollectorName ` method from private to protected in ` ProfilerCollector ` and added assertions in ` TestProfilerCollector
updated the handling of simple types in MappingMongoConverter to utilize a new method ` requiresTypeHint ` to improve code readability and maintainability
added performance measurement for proxy factory creation in ProxyMaker . java to improve performance tracking by using PerfStatsCollector for better performance tracking
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings in the code
added exception handling for ConnectException in TCPConnection . java to improve error reporting for connection exceptions
updated the ` reinflateWidgetsIfNecessary ` method to use ` getWorkspace ( ) . getWorkspace ( ) . getWorkspace ( ) `
added a new test class ` DeleteInsideFileDialogTest ` to validate file deletion functionality to ensure correct behavior of file dialog operations in the file dialog
do n ' t call setcursorvisible ( false ) if renderable . get ( ) return false .
add test for student profile in instructorstudentlistpageuitest
added methods and methods to track environment variables in TestIgnorance . java to ensure proper handling of environment variables based on system properties
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature and improve readability
added null check for pageable in QueryDslJpaRepository to avoid potential NullPointerException when pageable is null
[ hotfix ] [ runtime ] add computememorysize ( double fraction ) method to memorymanager
[ java ] increase test timeout for jmspublisherconsumertest and publishjmstest
refactor SnowballAnalyzer class to improve code organization to enhance maintainability and readability of the code
removed redundant code and streamlined the initialization of the previous batch to simplify the code and improve readability
[ java ] add a static method ` pluginerror ` to check if a plugin need to be null
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to provide a default
updated log messages and added a sleep mechanism in MediaMonitor . java to improve clarity of log messages and ensure proper handling of file moving failures
updated the ` newInstance ` method in ` InjectorProxy ` and ` StandardInjectorProxy ` to use ` InvocationTargetException ` instead of ` void `
[ hotfix ] [ stream ] remove out . close ( ) from streamingcreatefunction
added unit tests for creating tables and alterations in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest classes to ensure correct behavior of SQL
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of null
updated the string format in NamedSetTest . java from Deliberate error to Quality Distribution to enhance test coverage for quality distributions
updated websocket connection handling and logging in ` DeconzBridgeHandler . java ` and ` WebSocketConnection . java ` to improve clarity and maintainability of
do n ' t set session attribute to null in abstractprocessingfilter
hbase - 14424 testregionreplicareplicationendpoint : use retry method instead of admin . createtable
added PMS configuration to FormatRecognitionTest . java to ensure proper configuration for PMS instances
[ hotfix ] [ template ] do n ' t create ova data disk template if it ' s not available
updated JUnit4 imports and annotations from CasCoreServicesConfiguration to JUnit4 in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , NoOpLockingStrategy , and NoOpLocking
updated SQL statements in AppendOnlySchemaIT . java for consistency and clarity to enhance readability and maintainability of the code
added a mismatch check for deleted documents in SegmentReader . java to ensure correct error handling for document count mismatches
[ java ] add support for jabber jabber jabber jabber jabber jabber jabber jab
updated FilamentFactory . java to include a shorter length comment to clarify that shorter length is needed for staves w / no starting barline
set handlefileuploads to true by default
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilter ` to ensure
[ hotfix ] [ runtime ] remove static class in hotspotobjectconstantimpl . java
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions
updated the timestamp handling in FileIO . java to include a watermark setting to ensure proper metadata management and prevent potential memory leaks
[ hotfix ] [ table - planner - core ] fix compilation error in sqmctestatement
added import statement for java . sql . ResultSetMetaData in QueryCompilerTest . java to improve code clarity and maintainability
updated the string format in JsLibrary . java to include the project filesystem ' s root path to ensure compatibility with the project filesystem ' s root
updated slider size from 180 to Math . PI in RailButtonConfig . java to ensure compatibility with the latest API changes
fix issue with saveio . savetoslot ( x , y - 9 , y - 9 )
added expression language support to the KerberosProperties class to ensure proper handling of expression language configurations
removed conditional checks for setting the held item mount point scale in ThirdPersonRemoteClientSystem . java to simplify the code and improve readability by eliminating
updated the ` setupViews ` method to accept a ` ScrimView ` parameter and introduced a new ` ScrimView ` instance to enhance the
add config option to disable periodic materialization in state backend
added a ` value ` field and its getter and setter methods to ` ProtocolParameter ` and updated ` List ` and ` ParamTagHandler ` to
add a new test method ` testChunkingWithHead ` in ` TestHttpServlet ` to verify the behavior of the ` ChunkingServlet `
[ java ] fix checkrouteranswer . parsedetails ( ) to return a boolean instead of void .
added ` Content - Type ` header to ` SwitchToPostInterceptor ` and updated test cases in ` SearchRequestUnitTest ` to ensure proper handling of
refactor EmbeddedClientConnector class to improve code readability to enhance maintainability and readability of the code
replaced SQLFeatureNotSupportedException with logging warning in PhoenixResultSet . java to improve error handling by providing more informative warning messages
added initialization of AndroidNet in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
[ hotfix ] [ runtime ] fix checkstyle violation in llrealtimesegmentdatamanager
removed the ' false ' parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify the method calls
hbase - 14279 remove prefixtreecodec from mapmapreduceutil ( # 14280 )
added inflation failure handling in DesignerActivity and made root variable final in XMLLayoutInflater to improve user experience by preventing back navigation when inflation fails
refactor PushbackInputStream to improve code readability to enhance maintainability and readability of the code
make the loweringtoolbase abstract , so that it do n ' t use the controlflowgraph . getstartblock
updated the resource string from download _ folder _ failed _ content to sync _ folder _ failed _ content in ErrorMessageAdapter . java to ensure consistent
updated Makefiles . java to replace ` Parsers . among ( ) ` with ` Parsers . string ( ) ` and ` Parsers .
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` in ` ReadTask . java `
[ flink - 24486 ] [ runtime ] fix batch node refresh bug .
use isuninterruptible ( ) instead of isguaredsafepoint ( )
added a framebufferSizeCallback to manage window size changes in LwjglWindow . java to improve window size management and ensure proper resource management
updated calculations for ` centerTaskParallaxToRight ` and ` otherAdjacentTaskParallaxOffscreen ` in ` Launcher
changed the type of ` NodeLiteralNode ` from ` NodeLiteralNode ` to ` NullLiteralNode ` and updated related methods accordingly to improve type
added ` setLength ` method to ` CompoundFileWriter ` , ` FSDirectory ` , ` IndexOutput ` , and ` IndexOutput ` classes to enhance
updated manifest handling in AndroidNdkScriptGenerator and added new test cases in AntScriptGenerator and LwjglDebugStarter to
camel - aws2 - s3 : use sourcebucket instead of copysource in camel - aws2 - s3
added permission handling for " * " role in RuleBasedAuthorizationPlugin and refactored request creation in TestRuleBasedAuthorizationPlugin to improve code readability
updated ZookeeperClientServerRegisterRepository to handle null and empty data and improved URIRegisterDTO handling to enhance robustness by preventing potential NullPointerExceptions
refactor methods in ReturnsDeepStubs to use ` deepStub ` instead of ` makeDeepMock ` to improve code readability and maintainability
added a check to ensure the contract ' s call value is empty before returning it to avoid potential NullPointerExceptions when the contract is empty
[ hotfix ] [ bib ] fix log message in bibentry . java
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the return value in ` PBETest `
updated variable names and logic in TIFFReader for clarity and consistency to improve code readability and maintainability by using a more descriptive variable
added validation for job parameters in CommandLineJobRunner and created a corresponding test in CommandLineJobRunnerTests to ensure proper error handling for invalid parameters in the
remove \ r \ n from message content in smtp test
updated case statements in ExtendedConnectionDataSourceProxy . java to use lambda expressions to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for tracking the last sequence ID to improve thread safety and maintainability of the code
added a new file ` Test . java ` containing a class ` Test ` with a method ` sum ( ) ` to calculate the value of a
updated minSdk and maxSdk parameters in ShadowWifiManagerTest and changed access modifiers in WifiUsabilityStatsEntryBuilder from private to protected
added a new file ` Solution . java ` that implements a solution for query processing to provide a solution for evaluating queries based on user input
use concurrenthashmap instead of map in table . getcolumnfamilystores
refactor taskbar handling logic in TaskbarManager . java to improve clarity and maintainability of the code to enhance code readability and maintainability
refactor SyncFutureCache class for improved performance to enhance performance and readability of the code
updated the default DUBBO protocol version from " 2.1 . 1 " to " 2.1 . 2 " and updated the LOWEST _ VERSION _
fix ` ` uselessstringvalueof ' ' rule to work with string literal
added a new test method ` testEllipseNoseconeDrag ` in ` SymmetricComponentCalcTest . java ` to verify the behavior of the
add target max type shard size to the producer .
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in TestBackwardsCompatibility
refactor CompilationTask class to improve code organization to enhance maintainability and readability of the code
updated assertions in TestSemanticAnalysis and refactored parameter handling in DDLTask to improve clarity and maintainability of the code
added a command to execute ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase . java to ensure the clear database change log table is executed correctly
add version to the call path and use it in the call path
refactored exception messages and added synchronization to the close method in PhoenixDriver . java to improve error handling and ensure proper resource management
refactor : fix typo in code comment
added unit tests to ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivity ` to extend ` AbstractIT ` and set remote ID
do n ' t use fixreadsphase and fixreadsphaseswithconstantswithconstantswithconstantswithconstants ( )
added a check to return a string if the length is less than 2 in StringHelper . java and a corresponding test in StringHelperTest . java
updated JpaQueryCreator and ParameterMetadataProvider to handle NOT _ CONTAINING and NOT _ CONTAINING types to improve type handling
[ java ] do n ' t check for stored encrypted authentication when push branch id .
added a call to dispatch a new P25Message instance in P25MessageFramer . java to enhance message processing capabilities
added null checks for the handler before calling checkClosed ( ) in WebSocketImpl . java and created a test case in WebsocketTest . java to ensure
[ hotfix ] [ workflow ] fix test failure in indexeventconsumer
refactor padding calculations in AppWidgetResizeFrame and Launcher classes to use a unified method for retrieving the widget padding to improve code readability and
added hideAllApps ( ) method to LauncherTaskbarUIController and implemented closeOverlay ( ) method in BaseActivityInterface to ensure proper
removed the ` synchronized ` modifier from the ` launch ` method and replaced ` Thread . sleep ( 1500 ) ` with ` launcher . join (
update zoom level calculation in JavaSEPort . java to account for canvas coordinates to ensure correct positioning of the canvas coordinates
replaced ` notificationManager . notify ( ) ` with ` startForeground ( ) ` in ` UploadService . java ` to improve code readability and
pmd : add test case for static final and static final .
hbase - 14263 addendum set hbase . client . retries . number to 3
changed log level from info to debug in TransactionalMessageServiceImpl . java to improve logging clarity by using a more descriptive log level
updated logging level from debug to trace in ResourceUtils . java and changed log level from debug to trace in AbstractCipherExecutor . java to improve logging
added a new ` BittrexTickersResponse ` class and updated ` BittrexMarketDataServiceRaw ` and ` BittrexMarketDataService
fix a bug in entityentry . getenumconstants ( ) where enumtype . getenumconstants ( ) return an array .
[ flink - 18386 ] [ runtime ] fix the issue that wssession . unregistersession ( ) be throw an exception .
added new Unicode characters ' \ u0001 ' , ' \ u0002 ' , ' \ u0003 ' , ' \ u000
updated ResourceService and ResourceHandler to utilize ResourceHttpContent for managing CSS resources to improve resource management and ensure proper handling of CSS resources
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before proceeding
replaced ` ObjectParameterStrategy ` with ` PointerParameterStrategy ` in ` X86MethodGenerator . java ` to improve parameter handling by using a more
updated the database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockroach
removed the check for " java . lang . String " in the name comparison to simplify the code and improve readability
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and add a new SymbolNotFoundError class to provide a clearer error handling mechanism
updated BinaryResponseWriter to conditionally create a SolrDocument based on onlyPseudoFields to ensure that only pseudo - fields are handled correctly
added WebSocket ping and PONG case handling in WebSocketImplBase . java and a corresponding test in WebSocketTest . java to ensure proper handling of WebSocket
updated NON _ IDENT _ ESCAPES string to include ' - ' to ensure correct handling of escaped characters in regular expressions
http : / / issues . apache . org / jira / browse / authoritativedns / dns / dns / authoritativednsserver
added a conditional annotation for MessagingTracing class in TraceMessagingAutoConfiguration . java to ensure proper handling of messaging tracing functionality
[ hotfix ] [ table - planner - planner - planner - planner - planner - planner - planner - core
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionWindow , and IDEEditor classes to improve code clarity
added handling for ' / ' character in XMLLightweightParser to set the status to VERIFY _ CLOSE _ TAG to ensure proper parsing of XML
removed the setVisibility ( GONE ) method from TouchCharInput . java to simplify the code and improve readability
added a null check for the current user before comparing IDs to avoid potential NullPointerExceptions when the current user is null
refactor JSObjectLinker to handle different index cases for slot and member setting to improve code readability and maintainability by reducing redundancy
refactor ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to use ` setSuffix ` instead of ` prepare
added a @ Deprecated annotation to SecurityConfig . java to mark the class as deprecated to indicate that the class should no longer be used
added @ Deprecated ( forRemoval = true , since = " TODO " ) annotation to multiple Java files to indicate that these classes are outdated for removal
deleted the JoglDebugAdaptor . java file and replaced it with GuiceStartup . java to streamline the code and improve maintainability by eliminating
[ java ] add tostring ( ) method to extrafieldpropagation
added PendingIntent import and updated content intent in FileDownloader and FileUploader classes to ensure proper handling of content intents
modified the ` nextOrd ` method to use a ` set ( ) ` method instead of a ` nextOrd ( ) ` method to
refactor DateTimeFormatter class to improve code readability to enhance maintainability and readability of the code
removed try - catch block for loading the " Shell . shellFolderManager " and " Shell . shellFolderManager2 " properties in desktopProperties to
http : / / issues . apache . org / jira / browse / amq - 4078 - allow user to specify principal or keytab
added a MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and updated width calculation in BaseWidgetSheet . java
added begin and end render calls for sketch window color in PSurfaceJOGL . java to ensure proper rendering of the sketch window color
refactor Hashing class for improved performance to enhance performance and readability of the code
updated the ` accept ` method to use ` Files . getBaseName ` and ` Files . getBaseName ` instead of ` String ` to
updated the ` addToListIfNeeded ` method to include a ` contentDescriptionInt ` parameter and modified its usage in the ` addToListIfNeeded ` method
added a null check for the type variable in JavaType . java to ensure proper handling of the newType variable
updated ACTIVITY _ START _ DELAY from 500 to 800 in Launcher . java to increase activity start delay from 500 to 800 milliseconds
added a new constant for the WEBAPP _ HOME in SolrJettyTestBase and updated its usage in JettyWebappTest to
replaced diameter calculation with selectedMotorSet initialization and cleared selection in ThrustCurveMotorSelectionPanel . java to improve code readability and maintainability
added import for BufferUtil and invoked clearToFill method in ByteBufferPool . java to ensure proper resource management and prevent potential memory leaks
fix # 233 - add javadoc to notificationruleservice ( # 233 )
updated authorization constants from " authorization . ldap . groupObjectClass " and " groupNamingAttr " to " authentication . ldap . groupObjectClass "
added deleteExchange and queueDelete methods in DurableOnTransient . java to ensure proper handling of clustered channel operations
[ hotfix ] [ test ] use get ( ) instead of slotfutures . get ( ) in bulkslotproviderimpltest
refactor connection handling in PingService and ServerInfoService to use a addListener for better error handling to improve code readability and maintainability by
refactor CompositeHandlerAdapter to improve code readability to enhance maintainability and readability of the code
refactor Quartz2Adapter class implementation to improve code readability and maintainability
added a try - catch block around the execute method in SulongLibrary . java to handle IllegalStateException during execution
updated Spring Security version from 24 to 25 in multiple files to ensure compatibility with the latest Spring Security features and improve compatibility
updated the ` newNameResolver ` method to accept ` NameResolver . Args ` instead of ` Helper ` to improve argument handling and ensure proper synchronization
added a check for non - empty annotations before processing in JavacParser . java and introduced a new method for handling annotations in TestAnnotatedAnon
added " com . sun . naming . internal . " to CheckPackageAccess . java to ensure compatibility with the latest naming conventions
changed the strict variable from false to true in StaxEventItemReader . java to enable strict mode in the item reader
updated OfflineSorter to include an ` isExhausted ` parameter and modified the ` readPartition ` method to include a ` isExhaus
refactor ActionResetingPool class implementation to improve code readability and maintainability
fix null pointer exception when convert color mode to xy mode
refactor ` CellLayout ` to use a target cell array for folder creation and positioning to improve code readability and maintainability by centralizing
added import for FileDisplayActivity and removed the call to showLoadingDialog ( ) in FileOperationsHelper , FileDetailFragment , and OCFile
added a null check for uigestureFile before initializing recordsMap , recordsMap , and messagesMap to avoid potential NullPointerExceptions when the
updated ` doesNotMatch ` and ` toLowerCase ` methods to use ` Locale . getDefault ( ) ` instead of ` toUpperCase ( ) ` to ensure
added listeners to the result in XmlSuite . java to ensure proper handling of event listeners in the suite
added a new property ` loadWithNewGlobal ` to the ` Global ` class and modified related method calls to include it to enhance functionality by allowing
added JSON serialization methods to the StarTreeIndexSpec class and updated its usage in TableConfigTest to ensure proper serialization of StarTreeIndexSpec objects
updated import statements in HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2LogoutConfigurer , OAuth2LoginConfigurer , OAuth2LogoutConfigurer
replace double quotes with single quotes in multiple files to ensure consistent handling of double quotes in file paths
fix nullpointerexception in inoperator when null be null
added import for FieldCache and modified commit and purgeFieldCache method in TestDistributedSearch . java to ensure that the field cache does not exceed one
added unit test for boundary message event on subprocess in messageboundaryeventtest
add a new method ` resolveStaticCall ` to the ` ProgramManager ` , ` PointerAnalysisImpl ` , and ` JimpleProgramManager `
[ java ] add message group hash bucket count to policyentry and queue .
added new slot ID constants for NETSCAPE _ SLOT _ ID and NETSCAPE _ SLOT _ ID , and
added Alignment parameter to the add method in Layout . java and modified GdxRenderer . startRenderering method in GdxRenderer . java to
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added new imports and a condition to check for specific classes in JDK13Services . java to ensure proper handling of specific data lines and
added a check for the existence of a keyword in the keywordToReference map before adding it to the map to ensure that only relevant keywords are processed
fix the issue that multicastprocessor do n ' t return the size of a collection of processor exchange pair .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to streamline code and improve readability
[ iotdb - 644 ] fix flavorstatsdlinebuilder to escape telegraf
[ java ] add udp port to member .
renamed ` OperatorMulticast ` class to ` OperationMulticast ` and updated references accordingly to improve clarity and consistency in naming conventions
increased the send timeout from 1 second to 100 second in EventBusTracerTestBase . java to increase the send timeout for better test reliability
added a try - finally block around the error handling in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
fix race condition in sessionfactoryserviceregistryimpl . destroy ( )
( chore ) camel - core : use jwt _ token from local storage instead of home page
[ pytorch ] add test for map of tensor in ivalueutilstest
added a TaskStackChangeListener to clear the force invisible flag in RecentsView and removed it from BaseActivity to streamline task stack management and
[ java ] do n ' t optimize checkdatepattern in split character
camel - 14497 : camel - cxf should set property on factory bean if it ' s null .
refactor ` endPendingAnimation ` method into a separate method ` endPendingAnimation ` to improve code readability and maintainability by encaps
added logging for play time tracking in LauncherAnimationRunner to improve debugging capabilities by logging play time information
added a conditional check for BailoutOnException in C1XCompilation and introduced a flag for BailoutOnException in C1X
updated the initialization of signup and passwd to null in Links . java and changed assertions in IdentityZoneConfigurationBootstrapTests . java to ensure
[ hotfix ] rename previousexecutiongraphallocations to reservedallocations in slotprofile
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and introduced a new method ` getOnlyFormat ( ) `
geotiffreader : add ` ` nodata ' ' property to geotiffreader
[ llvm ] fix npe in error message if source section be null
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java ` and
replaced the blockUntilConnected ( ) method with a listener for handling connection state in TestPathChildrenCache to ensure proper handling of connection state changes
reformatted the constructor of ArrayTypeHandler to handle null values more gracefully to improve code readability and maintainability
replaced ` RegexpTunnel ` with ` REProgram ` for retrieving and retrieving the prefix from a reflection - based method to improve compatibility with the latest
updated the application selection to use Application . class instead of null to ensure that the application is picked from the application class directly
add a new test method to verify the behavior of global globals in the Misc2Test class to ensure correct behavior of global globals in
added validation checks for asset names and descriptions in AssetIssueActuator and TransactionUtil classes to ensure proper validation of asset names and descriptions
fix copypaste to add parent algorithm to the result of copypaste . copypaste
updated LGWebOS action descriptions and modified status messages in LGWebOSUpnpDiscoveryParticipant and LGWebOSUpnpDiscoveryParticipant to improve
replaced multiple calls to ` setSeedNodes ` and ` setActiveNodes ` with ` addAll ` in ` TronNetService . java ` to
updated assertions in BaseTokenStreamTestCase to include token length and added error handling for thread failures to improve clarity of assertion messages and ensure proper error handling
[ log4j2 - 132 ] fix timebasedtriggeringpolicy . getnexttime ( ) and getnexttime ( ) method to
added methods to find the first item containing text in ShadowAdapterView and removed it from ShadowListView to streamline item click handling and improve code clarity
pdfbox - 4841 : fix typo in pdappearancedictionary
add debug dump for graphdecoder . aftermethodscope ( ) in graphdecoder
updated HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) for attribute retrieval and added unit tests for security context management to improve clarity and
added a test for manually specifying the service name in Zipkin to ensure that the service name is correctly set in the manually provided bundle
added logging statements in JavaInMemoryFileManager and JavacToJarStepFactory and JavacToJarStepFactory to track excluded classes to improve
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming conventions
updated the timeout duration in the tryLock method from 4 seconds to 10 seconds to allow for more time for locking operations
added a DEFAULT _ CACHE _ CAPACITY parameter to the ` of ` method in ` ConfluentSchemaRegistryDeserializerProvider ` to enhance flexibility in
updated checkbox name from " remind " to " checkAtStartup " in UpdateInfoDialog . java to improve clarity and consistency in user experience
added method calls for strongKeys , weakValues , and softValues in NodeGenerator . java and refactored the NodeFactory class to use a
refactored the logic for checking if a proxy cannot be transient in CascadingActions . java to improve code readability and maintainability by
added methods for retrieving and setting protos and set proto checks in ScriptObject . java to enhance code clarity and maintainability by using constant names
updated the default read mode from " heap " to " mmap " in CommonConstants . java and added logging in ImmutableSegmentLoader . java to
added ByteArrayTemplate import and returned ByteArrayTemplate instance in ArrayTemplateBuilder . java to ensure proper handling of byte array data types
added Hipchat property to SamlServiceProviderProperties and created CasSamlSPHipchatConfiguration class to enhance SAML service provider configuration for SAML
refactor commandRegistryUrls to use a Set instead of a List to improve performance and maintainability of the command registry
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve logging clarity and enhance debugging capabilities
do n ' t call checkloggedin ( ) in sftprepositoryconnector . login ( username , password )
camel - 16464 - camel - activemq - allow to configure a session transacted session without a transaction manager .
[ hotfix ] [ vmware ] fix checkstyle violation in vmwareresource
refactor Timers class implementation to improve code readability and maintainability
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java `
removed deprecated constructors from UAX29URLEmailTokenizer . java to streamline code by eliminating unnecessary dependencies
removed the ` Map < Object , Object > ` interface from the ` ScriptObject ` class and updated assertions in ` ContextTest ` to simplify code
updated EventBusMetrics class implementation to improve event handling efficiency
( chore ) camel - i18n : add a method to get the default locale for the eperson
updated JaversTransactionalDecorator to implement InitializingBean and added afterPropertiesSet method in JaversTransactionalDecorator to ensure proper schema handling and
removed null check for pgTypeName before adding it to _ pgNameToSQLType to simplify the code by eliminating unnecessary null check
added multiple instances of setServer methods in ScopedHandlerTest . java to ensure proper initialization of server instances in the handler
[ hotfix ] [ runtime ] add miss constructor to calltimeoutexception
updated the condition in RestLoginProcessingFilter to check if the username and password is empty to ensure that the login request is not empty before proceeding
updated permission check from ` Objects . equals ( ) ` to ` Strings . equals ( " * " ) ` in CommandMap . java
renamed ` encoding ` to ` sourceCharset ` and updated related methods in ` AbstractCompiler ` , ` ICompiler ` , and ` ICompiler `
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and ` TerminalBridge `
refactor simulation handling in GeneralOptimizationDialog . java to use final variables for improved readability and maintainability to enhance code clarity and maintainability by
camel - 14497 : camel - core - add contextreloadstrategy to enable context reloading .
updated logger configurations in CommonTestUtils . java for consistency and clarity to improve code readability and maintainability by reducing redundancy
refactor PrologSizeSanityCheck class to improve code organization to enhance maintainability and readability of the code
refactor NearbyListFragment class to improve code organization to enhance maintainability and readability of the code
added a check for ` markSupported ` before invoking ` invokeSafely ` in ` RequestBody ` and created a corresponding test in ` RequestBody
added a check to ensure the embedded settings are enabled before processing to ensure that the embedded settings are only processed when the port is available
refactored movementdebugcommands to use asset . getcomponent ( ) instead of return string
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and modified its usage in the ` RandomLoadBalancer ` class to improve
refactor GsonParser and MetricsResourceTest to handle zero timestamps and improve error handling to enhance code readability and maintainability by using a more
http : / / code . google . com / p / mybatis / issues / detail ? id = 423 : add miss param
replace call to checktransactionsynchstatus ( ) with pulsetransactioncoordinator ( )
pipetaskcoordinator lock should be thread - safe
added a conditional check for the " robolectric . usePreinstrumentedJars " system property before creating the DependencyJar to ensure that preinstrumented
updated conditional check from ` ! isSilent ` to ` isSilent ` in ` ExecDriver . java ` to improve code readability and maintainability
added validation for default values and required fields in IndexSchema . java and created a test for unsupported attributes in BadIndexSchemaTest . java to ensure
[ hotfix ] [ table - common ] remove redundant check for randomlyreadrecovery
replaced ` ImmutableSortedSet ` with ` Iterables ` and updated ` addAllSystemIncludeRoots ` method to use ` Iterables . transform `
updated AdaptableX509CertSelector and ForwardBuilder to conditionally set subject key identifier and serial number based on SN sensitivity to enhance security by
[ log4j2 - 132 ] remove unnecessary try / catch in nosqlappender
added a @ Deprecated annotation to GuiScreenEvent . java to mark the class as deprecated to indicate that the class should no longer be used in the
removed methods from CategoryEditSearchRecyclerViewAdapter for adding and removing categories to improve code readability and maintainability
update ebean - cache to use servercachetype instead of servercachetype
added loops to initialize massOverriddenBy and CGOverriddenBy in RocketComponent . java to improve code readability and maintainability by
fix synchronization issue in javacompilationservice . post ( )
refactor ` MultiThreadedBuildRuleResolver ` to use ` Supplier < V > ` instead of ` abstract static ` for ` doCompute `
[ hotfix ] [ runtime ] make wanreplicationserviceimpl thread - safe
added null checks for ` tPartition . getSd ( ) ` and ` table . getTTable ( ) ` in ` Partition . java `
updated lambda expressions in LocalServiceRegistryClientImpl . java and refactored ScheduledThreadPoolExecutor initialization in RemoteServiceRegistry . java to use lambda expressions
added a new test class ` FilesTest ` and a static method ` delete ` in ` Files ` to validate file deletion behavior to ensure
removed exception handling for closing sockets in ServerSocketAdaptor and SocketAdaptor to simplify code by eliminating unnecessary try - catch blocks
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to ensure
replaced ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f . toString ( ) ` in ` Project . java ` to
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of null
changed the access modifier of the static String field from public to private in GeneratedEntityDecorator . java to enhance encapsulation and improve encap
removed unnecessary URLs in SimplePostTool . java to streamline the code and improve readability
[ geot - 5575 ] fix symbolic differ ( # 5575 )
refactor client container start handling in JavaxWebSocketClientContainerProvider and add a shutdown method in JavaxWebSocketClientContainer to improve error handling and
updated the condition to check for null type in Linux . java to improve code readability and maintainability
added teardown methods to various test classes to ensure proper resource management and cleanup of the web application context
added a method to retrieve the search string from a request URI and modified the DLNA resources retrieval process to enhance user experience by allowing users to
removed the visibility setting for the neutral button in SetupEncryptionDialogFragment to improve user experience by ensuring the neutral button is visible
hhh - 16464 - add countitems ( collection list , boolean includewithdrawn ) method to itemdao . countitems
updated string concatenation syntax for table and column descriptions in DDLTask . java to improve readability and maintainability of the code
added exception handling and logging for OAuth2 exceptions in CheckTokenEndpoint . java to improve error handling and provide more informative logging for OAuth2 exceptions
refactor multiple renderer classes for consistency and clarity to improve code readability and maintainability
updated test cases in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use parameterized methods to improve code clarity and maintainability by using parameterized
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame , DataBrowser , and SQLConsole classes to increase dismiss delay from 20000 to
updated the ` run _ single _ method ` and ` WarnPanel ` initializations to use ` JUnit5 ` instead of ` TXT
replace humanreadableexception with ioexception in workershellstep
[ hotfix ] [ runtime ] move @ experimental annotation to @ experimental
[ hotfix ] [ javadoc ] fix typo in streamcepstrumsource
added a check to ensure the index does not exceed the specified size to ensure that the index does not exceed the specified size
updated assertions from OrExpression to Parenthesis in CloneHelperTest . java to ensure correct handling of parenthesis types in test cases
added confirmation parameter to the DebugPaste class to enhance user experience by providing a confirmation option
[ flink - 24217 ] [ webmvc ] [ webmvc ] use orElseThrow instead of get ( ) in configuration
updated textarea focus logic in DrawEquationWeb . java and added a new creation mode in RadioButtonTreeItem . java to improve user experience by
updated GoBinaryDescription to use AbstractGoBinaryDescriptionArg instead of Arg to improve type consistency and maintainability of the code
updated the way application environment is retrieved in Jooby . java to improve flexibility in handling application environment configurations
refactor ` SimpleRetryExceptionHandler ` and ` SimpleRetryListenerSupport ` classes to implement ` RetryListener ` instead of ` RetryListenerSupport ` to
[ geot - 498 ] fix count report with decimal ( # 498 )
added final keyword to fields for email , author , and commits in Contribution . java to ensure immutability and prevent potential NullPointerExceptions
replaced for - loop with a do - while loop in JUnitFormatter . java to improve readability and maintainability of the code
updated the initialization of the ` elements ` list to handle cases where ` tmp ` is not an instance of ` LinkedList < E > ` to ensure
updated error messages in StaxEventItemReader to include the resource ' s URL to improve clarity of error messages and provide clearer context for input
[ jme3 ] fix testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirender
added null check for currentProfile before retrieving the client to avoid potential NullPointerException when currentProfile is null
updated the method call from ` target ` to ` newElement ` in ` SaajStaxWriter . java ` to ensure consistency in naming convention
added BigInteger and BigInteger initializations in KeyStoreManager . java to enhance security by ensuring valid algorithm parameters are used correctly
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` Mesh
added engine version setting to BpmnDeployer and its test to ensure the correct engine version is used for deployment
updated the property keys in the velocityEngine from " resource . resource . loader " to " resource . loaders " and " resource . loaders
updated thread verification logic in CEntryPointSnippets . java and VMThreads . java to include verifyThreadIsAttached and verifyThreadIsCurrentThread to improve
added null check for the map before adding values to the retArray in GenericUDFMapValues . java and created a new test class TestGeneric
[ hotfix ] [ test ] use handlerinterceptors instead of interceptors
add config option to enable / disable oil generation in the worldgen .
[ hotfix ] [ runtime ] add . clean - me clean - me to the jobqueue
updated the error message in the LifecycleException to use a string resource to improve clarity and consistency in error reporting
removed unused imports from CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
added import statement for static final constants in ZipConstants64 and ZipEntry classes to improve code readability and maintainability
refactor ` newFileSystem ` method to use ` ZipError ` instead of ` Map < String , ? > ` for improved error handling to enhance
replaced ` Box . createHorizontalStrut ( conditionLabel . getPreferredSize ( ) . width ` with ` Box . createHorizontalGlue ( ) `
added an overridden annotation to the createConnection method in FailoverUpdateURIsTest . java to improve code readability and maintainability
added JSON serialization annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to ensure proper serialization of
added deletebook ( ) method to the databaseadapter so that it can be delete .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
corrected the calculation of the response message position in AbstractAjpProcessor . java to ensure correct positioning of response messages
make adminconsoleplugin . start ( ) and adminconsoleplugin . shutdown ( ) protected
removed the unregisterHandlers ( ) method from WebSocketImplBase . java to streamline the code by eliminating unnecessary synchronization
added properties to set device ID transformation and ID table properties in IoTDBDescriptor . java to ensure proper configuration handling for ID table and ID table
updated the NUM _ DOCS _ PER _ TYPE from 2000 to 100 and modified related assertions in ExitableDirectoryReaderTest . java to improve
updated the condition to check for the existence of the " timestamp . comodoca . com / rfc3161 " in the mockTsp
[ flink - 18186 ] [ runtime ] fix scriptbuilder . createp2pkhoutputscript ( ) method to use witnessscript
updated the expression to include " / schema / types / fieldType " to include " / schema / types / fieldtype " and " / schema /
updated Completers to check if valueCompleter is non - null and added a new OptionCompleterTest class to ensure proper handling of null values and
fix typo in s3utils . getobjectsummary ( )
[ iotdb - 154 ] [ iotconsensus ] use int instead of string for source peer id .
refactor file upload logic into a separate method ` UploadFile ` in ` FtpHelper . java ` to improve code readability and maintainability
removed unused imports and added alpha settings for replyButton in TweetFragment . java to streamline code and improve readability
[ hotfix ] [ test ] fix flaky test in accesslogsupporttest
updated the cache file path in MaryCacheTest . java from " testfiles - deleteme " to " tmp / testfiles - deleteme "
removed null checks for subscribers in SettingImpl . java to simplify the code and improve readability by eliminating unnecessary null checks
added null check for marshaller in AbstractSamlObjectBuilder and AbstractSaml10ResponseView classes to improve robustness by preventing potential NullPointerExceptions
replaced printStackTrace ( ) calls with LogUtil . warn ( t ) in DataBrowser . java to improve logging clarity by using a more descriptive
added a check for file existence in Dev mode in AssetsController and updated corresponding tests in AssetsControllerTest to ensure proper handling of static directory
[ hotfix ] [ state ] add writeoptions to rocksdb keyedstatebackend . put ( )
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to ensure consistency in formatting
set douglas . minprecision to false and add req hint to douglas . minprecision
[ java ] change native flag to true to make it easy to run .
rename ` DuclsSandboxTest ` to ` SandboxTest ` and update references accordingly to improve clarity and consistency in naming conventions
camel - 14497 : camel - cxf should use exchange . setexception instead of log . log .
changed the access modifier of the forwardPropagateTree method from package - private to public to allow external access to the forwardPropagateTree method
[ hotfix ] [ table - planner - jbang ] fix jdbc example
add a warning message when interpolate file location during profile activation
refactor Style class to improve code readability to enhance maintainability and readability of the code
added zoom handling in ShareActivity to handle back key events to improve user experience by allowing zoom interactions
added a check for deprecated field annotations in Json . java to ensure proper handling of deprecated fields
added animations to display and hide the layout in LauncherFragment to ensure that the layout is visible based on user experience
updated the method signature of ` readTokenStorageFileMethod ` in ` Utils . java ` to improve code readability and maintainability
added Progressable parameter to multiple createSequenceWriter and createSequenceWriter methods across multiple files to enhance functionality by allowing progress - based output streams
updated error message formatting in SourceCoordinatorProvider . java to improve readability and maintainability of the code
removed the contribution from the panelByContribution list and updated its ordering and color updates to improve user experience by ensuring the panel is properly removed and updated
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and update references accordingly to improve clarity and consistency in naming convention
added a check to set the user directory if it is empty in RegularFileObject . java to ensure the user directory is set when it is
fix defaultaudiosink . getmaxsupportedchannelcountforpassthroughv29 ( ) to return 48000 instead of 48000
[ log4j2 - 118 ] add a filter method to check if a message have match .
updated test cases in VerificationInOrderWithCallsTest . java to improve test coverage and maintainability
updated the parameter from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method to ensure correct positioning of
updated the constant name for the COLLECTION _ DELIM constant from " colelction . delim " to " collection . delim " to improve
add a new test method ` testListenerConnectedAtStart ` to ` TestFrameworkBackground . java ` to ensure proper handling of connection state changes
added conditional checks for ` sb . length ( ) ` in ` DocRenderer . java ` and updated test cases in ` PHPCCDocumentationTest .
added a boolean field ` mIsOneHandedModeSupported ` and updated conditional checks in ` RecentsAnimationDeviceState . java ` to improve
added an override for ` onDetachedFromWindow ( ) ` in ` AppsCustomizePagedView . java ` and modified the method
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter classes and updated the MorfologikFilterFactory to
removed unnecessary count checks in ResultSetTest . java to streamline exception handling and improve code readability
updated the initialization of the project message from " debug " to an empty string to improve clarity and consistency in the build process
[ hotfix ] [ test ] use AtomicBoolean instead of AtomicReference in AbstractPhenomenaTest . java
refactor tooltip text handling in ComponentTreeRenderer to use a dedicated method to improve code readability and maintainability by encapsulating tooltip text
increased the timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server to complete
update deviantart ripper to use the default username and password when login fails
refactor Google Signed Packages to use key - based keys instead of an array to improve code readability and maintainability by encapsulating
[ hotfix ] [ test ] fix test failure in importdirsolveallturtletest
added a method ` notifyWindowStateChanged ` to handle window state changes in ` WWindowPeer . java ` to ensure proper handling of window state changes
add email description to entitygroupkeycontentformatter and testentitygroupkeyemailcontentformatter
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
updated the method for retrieving ISO3 language in Locale . java and added a validation check in LocaleTest . java to ensure that the correct language is
replaced instances of ` new UpdateVisitor ( ) ` with ` createUpdateVisitor ( ) ` and added a new method ` createUpdateVisitor ( )
added a check for screen pinning active status in OverviewCommandHelper . java to prevent processing when screen pinning is active
added ` mNoDataText ` and ` mNoDataTextDescription ` fields and updated text drawing logic in ` Chart . java ` to enhance
added synchronization around checkHeadWritten method calls in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety when checking response head
refactor chunk handling logic in NettyResponse . java to use a ssl handler to improve code readability and maintainability by encapsulating
updated test cases to use " http " scheme instead of " http " in Http2TestBase . java and TestHttp2Limits . java to
fixed - redissonlocalcachedmap . getkeys / values / keys / values / keys / values / keys / values / keys / values /
camel - 14497 : camel - jpa - fix the issue that camel - jpa should not use the entity manager when start the endpoint .
corrected the spelling of " jumpSpeed " in PhysicsCharacter . java to ensure consistency in naming conventions
added a null check for reparsedFunction in the parser condition to prevent potential NullPointerExceptions when reparsedFunction is null
updated logging statements and variable names in BitstampPusherService . java for consistency and clarity to improve code readability and maintainability by standardizing
added OLD _ SEGMENT _ PATH constant and updated getOldUploadSegmentHttpURI and getOldUploadSegmentHttpsURI methods in FileUpload
updated the method call from ` dbCol . findOne ( ) ` to ` dbCol . findOne ( filter ) ` in ` MongoDbTailTracking
added assertpredicate ( string expression ) method to the languagetestsupport class
added a call to ` Utilities . boundToRange ( alpha , 0 , 1 ) ` in ` RecentsView . java ` to ensure alpha
updated the regex pattern in the Import - Package attribute from " version " to " version " to ensure the correct version is used in the import package
refactor DataSyncConfiguration class to improve code organization to enhance maintainability and readability of the code
added import for JavaSnippetRepository and initialized JavaSnippetRepository in JavaLanguageServer . java to ensure proper initialization of the snippet repository
modified the loop condition in StarTreeRecordStoreCircularBufferImpl . java to iterate over numTimeBuckets before updating sums to ensure accurate sum
[ java ] fix link to chromedriver . storage . googleapis . com / index . html
camel - 14247 : camel - pg - event - add support for camel - postgresql and camel - postgresql
replaced imports from ` com . sun . synd ` with ` com . rometools . rometools . rometools . r
http : / / issues . apache . org / jira / browse / amq - 4694 - fix the issue of transfer completion
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
removed the constructor from the EnhancedRuntimeException class to streamline the constructor of the EnhancedRuntimeException class
[ hotfix ] [ test ] fix socketappendertest failure
camel - 14497 : camel - event - dsl - remove unused method from endpointbuilders .
added an exception catch block and updated method signatures in ByteArray . java to enhance error handling and improve code readability
added a method to disable input proxy in RecentsAnimationWrapper to improve touch event handling and logging during touch events
added JUnit Ignore annotation to RestletDomainServiceTest to temporarily disable the test due to CAMEL - 6770
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method from the ` resizeAndRehashIfNeeded ` method to simplify
[ hotfix ] [ test ] move test to test . modulepath
added a new method ` getSourceDirs ( ) ` to the ` JavaServer ` class and modified the ` getCompiler ( ) ` method to
updated menu item ID from ` menu _ open _ web ` to ` menu _ menu _ mute _ hashtags ` in ` TweetPager
updated method names from ` nodeIsAncestorOfItself ` to ` nodeIsNotAncestorOfItself ` for consistency to improve clarity and consistency in
fix worldeditplayer . getblocky ( ) to return 0 instead of 0 .
added PathNotExistException to the selfCheckDataTypes method and modified the conditional checks in InsertNode . java to improve error handling and provide clearer
updated closing brace formatting in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ stream ] remove mailboxexecutor from streamoperatorfactory and asyncwaitoperatorfactory
hbase - 16279 add miss test for settablestate ( ) and fixmeta ( )
updated map method to use method reference instead of lambda expression to improve code readability and maintainability
updated the constructor of BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) to ensure compatibility with the
[ kraken ] use lasttimedata instead of remoteitems
updated calculation for allAppsCellWidthPx in DeviceProfile . java to adjust cell width and padding to ensure accurate rendering of allApps
[ hotfix ] [ runtime ] add a constant for the first log pattern in coreoptions
updated method calls from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure consistent
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that the writer does not
updated the ` close ` method to return ` Closeable ` instead of ` Connection ` in the ` Session ` interface to ensure proper resource management and prevent
refactor GetLocations class to improve code organization to enhance maintainability and readability of the code
removed unnecessary print statements in SchemaValidatorTask . java to streamline error handling by eliminating unnecessary print statements
replaced ` UncheckedIOException ` with ` UncheckedIOException ` in ` Contents . java ` to improve error handling by using a more descript
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to improve compatibility with newer Android versions
[ ruby ] make sure we do n ' t use stringbuilder . appendstring ( ) .
updated log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
[ java ] remove usecaches from nio2endpoint
updated CasGeoLocationConfiguration to use Resource instead of MaxmindProperties and added null check for maxmindDatabase to improve code clarity and
[ # 219 ] instructorfeedbackresults / instructorfeedbackresultspageuitest : fix test for instructorfeedbackresults
added a Scan parameter to the useEncodedQualifierListOptimization method in BaseResultIterators . java to enhance flexibility in handling raw scans
[ hotfix ] [ runtime ] remove public from method in approvalscontrollerservice
added a boolean flag ` mStartedDownload ` and a delay to cancel the downloader notification if it is not started to improve user experience by preventing
updated method names from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in `
updated project version from " 1.0 . 11 " to " 1.0 . 13 " in JFreeChartResources . java to reflect the new project version and
replaced direct calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve code readability
refactor GsonBuilder class to improve code organization to enhance maintainability and readability of the code
added null check for centerGeo before adding circleCenters to avoid potential NullPointerExceptions when centerGeo is null
do n ' t use the espresso home for java on truffle ( espresso )
[ hotfix ] [ javadoc ] fix typo in javadoc
[ java ] make deletesessionaction final and make it final
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to improve code readability
updated the initialization of ` sz ` in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and ` TestJoin ` classes to ensure
added a new parameter to the triggerMediaScan method in FileDownloader . java to enhance functionality by allowing an additional parameter for media scan triggers
removed conditional printing of test results in TestRunning . java to simplify the code and improve readability by eliminating unnecessary conditional checks
added multiple custom G - code settings to the MainWindow class to enhance user experience by allowing custom G - code text alignment
[ hotfix ] [ test ] use utf - 8 outputstreamwriter instead of outputstreamwriter .
refactor JsonElement class to improve code readability to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and resetExceptionIgnores in TestBadConfig . java to ensure proper exception handling during test execution
added a new method ` removeFragmentsAndActionBar ( ) ` to ` GpsMainActivity ` to manage fragment removal and action bar state
removed " = = " from the list of spanishTokens and spanishTokens2 in TokenizerAnnotatorITest . java to ensure
updated ` RemoteMediaHandler ` , ` RemoteUtil ` , ` RemoteRawHandler ` , and ` RemoteUtil ` to use ` Range . Byte
updated G - Code - Sender / shapeoko . txt and modified bounds handling in VisualizerCanvas . java and GcodeViewParse . java
added new test cases for versions " 8.8 . 0 - cfs " and " 8.8 . 0 - nocfs " in TestBackward
updated the formatting of the method call in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain
added a condition to close the exchange client if the output stage is not completed to ensure proper resource management and prevent potential resource leaks
fix inconsistency check in integrity check
removed unused SolrClient import and added shardToClient field to ChaosMonkey class to streamline the code and improve maintainability
add null check for usedatabaseconfig in configurationactivator
reformatted the formatting of the ` add ` method in ` NestedRepositoryTreePanel ` to improve code readability and maintainability
make extensiontypeheader constructor public and add argument check for byte . min _ value
pdfbox - 4841 : remove try / catch block from pdfield and pdfieldtreenode
[ hotfix ] [ runtime ] add property ` ` pushonshutdown ' ' to prometheusproperties
refactor ReactiveStateMachineExecutor to include a triggerCallback parameter and improve error handling to enhance error handling and provide clearer context for triggering events
added a test for handling multiple Python executables on path first in BuckConfigTest . java to ensure that multiple Python executables are correctly set and
added a default button to the signin button in InitialAccountRegistrationFrame to enable the sign - in sign - in button for the initial account registration
added a new configuration option ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN `
update error message to include the exception in the error message
[ hotfix ] [ runtime ] move reflectionutils from util . reflection to util package
added a static method ` listableCollector ( ) ` in ` OidcIdTokenClaimCollector ` and created corresponding test cases in ` O
removed private Vector2 fields from Circle , Ellipse , Polygon , and Rectangle classes to streamline the code by eliminating unnecessary variables
updated conditional logic in RegisterAndProcessBundleOperation . java to simplify the condition to improve code readability and maintainability
updated the implementation of SslContextFactory to improve SSL context handling
[ hotfix ] [ test ] remove @ ignore from configurationpropertiestest
updated the return value from " access _ confirmation " to " access _ confirmation _ error " to reflect the correct error message for access confirmation
add a new ` ConsumerClassLoaderFilter ` class and a corresponding test method in ` ReferenceConfigTest ` to enable the use of the context class loader
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFSheet ` to
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` with ` setRolloverPressedIcon ` and ` setRolloverPressed
refactor grid translation handling in TaskViewUtils and TaskViewSimulator to use mGridTranslationY instead of mGridTranslationSecondary to improve clarity and
refactor assertions in Assertions class to improve code readability to enhance maintainability and readability of the code
added a null check for the currentDateTimeFunction in multiple database classes to ensure that the currentDateTimeFunction is not null before returning it
added an anonymousPath method to IOUtils and updated Log4jUtils to utilize it to improve path handling and ensure proper logging of anonymous paths
updated the ` call ` method to include a ` contentDescription ` parameter and added a new method ` getContentDescriptionForTask ` to enhance functionality by
[ hotfix ] [ runtime ] increase wait time for meta server connection .
refactor LineNumberTagAggregator and TestDominance classes to improve code organization and maintainability
use stateconverterutil . defaultconversion ( state , typeclass ) instead of null .
hhh - 14144 - add test for postsummary and postdetails and detailprojection in bidirectionalonenplusonetest
updated the initialization of startSearchPageIndex in LauncherModel . java to ensure proper handling of empty workspace screens in the search page index
updated initialization of ` baseDerivedRefs ` and ` derivedRefs ` in ` MarkBasePointersPhase . java ` and added null check in `
updated string formatting in GoogleLineChart and GooglePieChart classes to use double quotes instead of double quotes to improve code readability and maintainability
refactor wait logic in SendingAccountor to use addAndGet for batches instead of acquire to improve readability and maintainability of the wait process
added a ` position ` field and methods to set the position in the ` WALPrettyPrinter ` class to enhance the printing capabilities of the 
updated the port number in TestNettyTransceiverWhenFailsToConnect from 1 to 0 to correct the port of the Netty Transce
added sorting functionality for events in SimpleReport and created a corresponding test in SimpleReportTest to ensure that events are sorted before generating a report
added a new test method ` getCsvLine _ DescriptionContainsDoubleQuote ` in ` CSVFileLoggerTest . java ` to verify the functionality of
add chinese . doscore and chinese . ser . gz to the test file
[ iq ] do n ' t try to connect to a remote recipient if it ' s a remote
removed the @ JniImpl annotation from VM . java to streamline code and improve maintainability
updated configuration settings in Fetcher2 . java to use Protocol . CHECK _ BLOCKING and CHECK _ ROBOTS instead of hardcoded
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java to
updated package names from " other _ package " to " other _ package2 " in AstTests . java to improve clarity and consistency in package naming
fix worldborder # setworldbordersize and worldborder # resizeworldborder
hbase - 16279 addendum : do n ' t add replication status to master if master can not host user region
appwfull : do n ' t clear the view when the login event be auto - complete
[ hotfix ] [ test ] fix test failure in routingtabletest
changed the access modifier of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
add test to verify that read erroneous maven project contain reference
removed null checks for protoGetSwitches and protoHistory in PropertyMap . java to simplify the conditional logic for better readability
refactor ` getControllerId ` and ` getControllerId ` methods in ` DoorbirdInfo ` , ` ControllerConfiguration ` , and `
replaced sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management and prevent memory leaks
removed the check for refresh token in OidcConsentApprovalViewResolver to simplify the condition for generating refresh token prompts
removed a debug print statement from Http2SolrClient . java to clean up the code and improve readability
updated the extractor method to use NoopGetter instead of a lambda expression to improve code readability and maintainability by using a more descriptive
refactor ConditionalOnEnabledResourceChain class to improve code readability to enhance maintainability and readability of the code
added a condition to check if the child ' s getChildCount ( ) is greater than zero before processing the tree root to ensure that only one child is
updated the stream type from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter .
update FacebookImpl to use CN1 instead of System . out for logging statements to improve logging clarity and ensure proper handling of permissions in the application
changed return values from " h : mm a " to " skeleton " in ShadowICU . java and added tests in ShadowICUTest .
removed dependency on KeyguardManager in TouchInteractionService . java to simplify the condition for checking device lock status
cloudstack - 11919 : fix npe when create volume with default disk offering
replace FileChannel with AsynchronousFileChannel and update related methods in UtowBodyHandler . java to enhance file handling by using asynchronous file channel
reformatted code for consistency in SigInt . java and SigIntTest . java to improve readability and maintainability of the code
remove unnecessary ' this ' parameter from getmineditorwidth ( )
change return value from - 1 to 0 in Asset . java to ensure correct return value is returned for better performance
updated compute benchmarking logic to use a mapping function instead of a lambda expression to improve code readability and maintainability by using a more descript
added an setOnRefreshListener to UploadListFragment to notifyDataSetChanged events to ensure that the adapter is notified when the data is refreshed
updated BibDatabaseContext to use Optional < Path > instead of File to improve code clarity and maintainability by using Optional for file handling
replaced references to ` items [ i ] ` with ` get ( i ) ` in ` ParticleEffect . java ` and added a ` dispose
tomcat : do n ' t add host to the engine if there be no service .
updated error messages in BuildRuleFactoryParams , Console , and BuildRuleFactoryParamsTest to improve clarity and consistency in error reporting
added a check to return early if mPlaybackState is not PLAYING to ensure proper handling of playback state changes
removed dependency on ServiceComponentDesiredStateEntityPK in DeleteServiceTest . java to simplify the retrieval of ServiceComponentDesiredStateEntityPK from the database
added a new class ` InnerClassFieldClash ` and modified the logic in ` Java2TypeScriptTranslator ` and ` StructuralTests `
added logging filter and followRedirectFilter properties to DockerClientFactory and DockerClientProfile classes to enhance the Docker client profile configuration by allowing customizable logging
replaced direct displayChanged ( ) calls with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure proper resource management and ensure
hhh - 10183 - use sqlserver2008 dialect in nationalizedscalarquerytest
[ hotfix ] [ zip ] fix file leak in opcodehelper . verifyzipheader
changed the access modifier of the storeClassFile method from private to public to allow access to the storeClassFile method from other classes
added a new test class TestSortedSetDocValues and changed comparingIdentical to error in ecj . javadocs . prefs to improve test coverage
updated error messages for invalid command and port number in CGIHandler and added a start method in JavaVM to improve clarity of error messages and ensure
added additional characters " 033 [ m " and " 033 [ 0m " to the condition in LineReaderImpl . java to ensure proper
changed the data type of ` multiFetchSourceFiles ` and ` set ` from ` List ` to ` Set ` in multiple classes to ensure consistent
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to avoid unnecessary processing when the vertex count is
add test for verify error and error message
replaced ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root , menu
truffle : remove unused import from typesystem
refactor JsonObject class to improve code readability to enhance maintainability and readability of the code
added a condition to check if the max idle time is greater than or equal to the max idle time in SelectChannelEndPoint and HttpConnection to ensure
fix farmland cansustainplant return false if there be no plant
added tests for creating and disabling the SALTEDTABLE123 table in the database connection to ensure correct handling of primary keys in the database
updated SimpleDateFormat to use Locale . US and added a new file B6791927 . java to ensure proper handling of cookie expiration dates
removed multiple redundant calls to ` db . close ( ) ` in ` DbHelper . java ` to improve code readability and maintainability
updated poll timeout values from 1 second to 5 second in BatchMessageListenerContainerIntegrationTests . java to allow more time for processing processing
[ gr - 16464 ] fix EconomyAllocationStage to accept option for tracera .
do n ' t store keybindings when search highlight pattern be miss .
added a static block to initialize ObjectMapper with a line separator to ensure proper initialization of the ObjectMapper instance
updated path handling in NativeEnvironmentRepository to replace leading and trailing whitespace characters to ensure proper handling of environment variables in the application
replaced instances of ` AppTest ` with direct calls to ` AppT ` in multiple test classes to streamline the code and improve readability by
[ java ] remove validateexistinglog ( ) method from recordinglog
[ java ] use errorgroupname instead of groupname in itsystemtest
[ hotfix ] [ test ] remove unnecessary sleep in testfuzzyoptimizations
updated the initialization of the ` reverseImage ` variable in ` CameraManager . java ` to use a new boolean variable to improve code readability and
updated string comparisons to use ` . equals ( " META - INF / " ) ` instead of ` " META - INF / "
[ hotfix ] [ runtime ] add miss predicate to terserutil . replacefields ( )
updated JUnit imports and annotations from ` org . junit . Before ` to ` org . junit . jupiter . api . Test `
[ hotfix ] [ table - planner ] use indexOf instead of arraylist . arraylist .
refactor TypeUtil class to improve code organization to enhance maintainability and readability of the code
updated the ` triggerTime ` variable to use ` LocalDateTime . ofInstant ( ) ` and ` TimeZone . getDefault ( ) . toZoneId (
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for handling abstract method errors to improve error handling for abstract method
camel - 13232 : fix validation of simple expression with body . xxx
removed the check for empty toExplore in AbstractParser . java to simplify the code and improve readability
camel - 14497 : camel - cloud - jbang - fix the issue of camel - jbang - jclouds - payload
camel - 14497 : camel - core - remove @ ignore annotation from camelconsultest
updated conditional logic in Check . java and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java to ensure correct
[ java ] increase driver timeout for channel validation test
added a new file ` FileExtensions . java ` containing static final ImmutableSet for CLANG _ SOURCES , CLANG _ HEADERS , and C
replaced the ThreadLocalDateFormat class with a static final format _ PROTOTYPE constant and updated its initialization to improve code readability and maintainability by eliminating
[ hotfix ] [ runtime ] remove unused jvmdeprecatedoptions
added displayName property to Pac4jBaseClientProperties and modified DelegatedClientIdentityProviderConfiguration to use it to enhance client identity management by allowing custom display
replace RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling for early termination issues
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintainability
updated response handling in HttpBindServlet and HttpConnection classes to use a new ` consumeResponse ` method instead of ` getRequestId ( ) ` to
fix npe in forgeeventfactory when parent be null
wallettool : use key crypter exception instead of key crypter exception
added @ Deprecated annotation to SubmitOrderedCompletionService . java to mark the class as deprecated to indicate that the class should no longer be used
[ hotfix ] fix typo in HyphenationTree . java
added a sleep delay of 200 milliseconds in IQRegisterHandler . java to ensure proper timing of registration processes
[ java ] move resourcemanagementserviceutils to javax . swing package
corrected the spelling of " PARAMETER _ NEEDS _ TO _ BE _ NAMED " to " PARAMETER _ NEEDS
added a new boolean field ` providersChanged ` to ` ConfigurationManager . java ` to ensure proper handling of providers in the configuration
added a method to quote identifier tokens based on HIVE _ QUOTEDID _ SUPPORT in the SemanticAnalyzer class to ensure proper handling of
updated null check for PostScript name and added a warning for missing PostScript name in the font information list to ensure proper handling of missing PostScript
replaced ` AbstractAnalysisFactory ` with ` AnalysisSPILoader < ? extends T > ` in ` SolrResourceLoader . java ` to improve type safety and
added a condition to check if the hit Actor is within the specified bounds before returning the current Actor to ensure that the hit Actor is only processed when
added null check for appManifest before assignment to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to use MAPPER for configuration metadata handling to improve code readability and maintainability by central
added a userName field and its getter / setter methods to the Driver class and updated related classes to include it to enhance user experience by allowing users to
added setter methods for ` xslt ` , ` File ` , ` URL ` , ` InputStream ` , and ` XmlConverter ` in ` X
added HadoopShim dependency to ContainerRunnerImpl , TaskRunnerCallable , TaskExecutorTestHelpers , and TestFirstInFirstInFirstOutComparator classes
updated test cases in ShadowAssetManagerTest , ShadowContentObserverTest , ShadowDownloadManagerTest , and ShadowDownloadManagerTest to simplify code and improve
add null check for request . getmappingdata ( ) . context before log access .
[ hotfix ] [ log ] do n ' t use system . currenttimemillis ( )
updated VM version checks to use ` Platform . isDebugBuild ( ) ` instead of ` System . getProperty ( " java . vm . version "
[ hotfix ] [ metric ] fix usage of meterstatisticsmanager in defaultlogpublisher
updated logback configuration file handling in FrameworkLauncherExtended . java to ensure proper configuration file resolution for better debugging
added @ NotNull annotations to multiple methods in CipherExecutor , CookieRetrievingCookieGenerator , and CookieValueManager classes to ensure non - null
updated escaper constants from BASH _ ESCAPER to SHELL _ ESCAPER across multiple files to ensure compatibility with Windows environments
refactor ` waitUntilReadyAndSucceed ` method calls to use a try - with - resources statement to ensure proper resource management and
renamed TestLucene50FieldInfoFormat class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to
updated the closing brace formatting in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to enhance the handling of shield addresses in the response
changed return types of readConsoleInput methods from byte arrays to String in JansiWinSysTerminal , JnaWinSysTerminal , and AbstractWindows
updated the format of the sRunFlavor variable in TestStabilityRule . java to improve readability and maintainability of the code
added a conditional check for ` bestTextFragment . getScore ( ) ` in ` DefaultSolrHighlighter ` and updated test cases in ` Highlighter
added username and password parameters to the tryToLogin method in WebdavClient . java to enhance authentication by allowing credentials for credentials and passwords
updated imports and modified packet handling in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp . java to
[ java ] fix checkstyle violation in jmsproducer . java
removed wrapCollection ( parameter ) from the update method call in DefaultSqlSession . java to simplify the code and improve readability
added logging for unknown currency in BTCEAdapters . java to improve error handling and logging for unknown currencies
danielwagnerhall : use candidatesubscriptionname instead of localinfo . getclientid in durableconduitbridge
pdfbox - 4841 : fix typo in pdfparserconfig . java
updated the ` startController ` method to accept a ` useTenantIsolation ` parameter and modified related methods in multiple test classes to enhance tenant creation functionality
replaced ImmutableMap . Builder with a direct casting of response value to simplify the return statement and improve code clarity
added a check to ensure the size of attrs is greater than zero before verifying the size of the attrs list to avoid potential NullPointerExceptions when
added ` getProjectJdkName ` , ` getProjectJdkType ` , and ` getProjectLanguageLevel ` methods to ` AbstractIj
updated log message from " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify the purpose of the optimization process
added tests for the ` scott ` and ` scottWithUserDetails ` methods in ` GrantedAuthorityEffectiveAclsResolverTests ` to
use the resolved java lang object to solve method in javaparsertypedeclarationadapter . solvemethodintype ( )
added constants for buttons and MAX _ BUTTONS _ SUPPORT in XToolkit . java to manage the number of buttons available in the XToolkit
updated import statement from ` jdk . testlibrary . Asserts . assertEquals ` to ` com . oracle . java . testlibrary . Asserts .
added a new ` MessagePackFactory ` class and modified the ` newUnpacker ` method to accept a ` MessagePack . Config ` parameter
added new tags IS _ BLUE and IS _ CAVE to the Tags class and updated ForgeItemTagsProvider to include IS _ CAVE
rename ` present ` method to ` draw ` across multiple screen classes to improve clarity and consistency in naming conventions
added conditional logic to set BoxLayout based on horizontal status to ensure proper layout initialization based on the horizontal status of the group elements
[ hotfix ] [ dsi ] remove dependency on dsi _ url _ pattern .
updated return statements in AndroidInput . java and AndroidLocklessInput . java to use hasMultitouch instead of touchHandler in AndroidInput . java
[ java ] remove unnecessary volatile from clusteredserviceagent . commit ( )
add a usersite and recordid class to the example database
[ hotfix ] [ runtime ] improve error message when an invalid port be provide .
http : / / issues . apache . org / jira / browse / amq - 4257 - api / browse / amq - 42
replace openInput method with fileLength method in NRTCachingDirectory . java to improve code clarity and maintainability by using a more descriptive
refactor JavascriptCompiler to use a new method ` generateClass ` instead of ` beginCompile ` to improve code readability and maintainability by
added synchronization around the store method in UISettings to ensure thread safety and prevent potential memory leaks
modified the visibility of the fireDataChanged method from private to public to allow access to the fireDataChanged method for better encapsulation and
[ flink - 16767 ] [ runtime ] add more detail to spannerio error message
[ java ] use diamond operator to improve code readability
updated array type checks from double [ ] to short [ ] in ObjectInputStream and added a new CloneArray class for testing to improve type safety and
updated nonce retrieval from ` getClaim ` to ` getStringClaim ` in ` OIDCAuthenticationFilter . java ` to improve clarity and consistency in
added a condition to check if a field is a relationship field in DCInputSet to ensure proper handling of relationship fields in the input set
added a new column ` CAPABILITIES _ SERVER _ SLOGAN ` to ` FileDataStorageManager ` and updated related methods
updated the conditional check for menuItem equality in DrawerActivity . java to improve readability and maintainability of the code
updated test to use JUnit ' s Assume class and modified error handling in SolrRequestParserTest to improve test reliability and provide clearer error reporting
added a check for empty build IDs in MissingSymbolsHandler to prevent processing when there are no build IDs
added new data types " Data 3 - 4 " and " Data 5 - 4 " in StringHelperTest . java to enhance test coverage for data
added a warning log statement to indicate that the data provider returns an empty array or iterators to provide clearer feedback when the data provider is not
[ hotfix ] [ runtime ] use collections . empty _ list instead of collections . empty _ set
updated XML version from 1.1 . 0 to 1.1 . 8 and modified selection style handling in MapStyleModel to improve XML versioning and ensure compatibility with
updated the parameter name from ` mass ` to ` restitution ` in the ` setRestitution ` method to improve clarity and consistency in
added a new file AutoFtpActivity . java to implement FTP testing functionality to facilitate FTP server interactions and improve user experience
refactor token handling in BaseSemanticAnalyzer to use a variable for better readability to improve code clarity and maintainability by using a more descript
added getter and setter methods for component state in ImageViewer , OnOffSwitch , GenericSpinner , and UIBuilder classes to provide access to component state
added a new class ` RemoteExecutionEnabled ` and its corresponding tests in ` BuildableSerializerTest ` to ensure proper serialization and deserialization of remote execution
corrected the spelling of " Paremater " to " Parameter " in BookmarkValidationProcess . java and TrailerValidationProcess . java
replace FileReader with InputStreamReader in ImportCsv . java and update ProgressBar initialization to use UTF - 8 encoding to ensure proper resource management and avoid potential
added a method call to assertWorkingScoreFromScratch in AbstractScoreDirector . java to ensure that working scores are not stale to improve accuracy of working
updated the configuration key for semijoin conversion from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
added debug log for non - io . netty . buffer and non - java . io . Serializable instance
updated directory removal logic in ` SynchronizeFolderOperation . java ` and modified file handling in ` FileDisplayActivity . java ` to improve directory management
added assertions to verify the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly retrieved in the test
added a @ Deprecated annotation and updated test method names in SchemaRegionBasicTest . java to clarify the purpose of the test method and ensure compatibility with
added a null check for ` newFormat . sampleMimeType ` in ` MediaCodecRenderer ` to prevent potential ` NullPointerException ` when ` newFormat
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource `
updated @ AllArgsConstructor annotations to include JsonCreator mode to ensure proper serialization mode for properties and properties
added a check to throw a SQLFeatureNotSupportedException if creating an index on a view to ensure that creating an index on a view is not supported
added a new class ` Website ` and updated ` PopulatorImplTest ` to use it to improve the functionality of the ` PopulatorImpl
added a setup method to the BSFormatterTest class to set the default locale to " en " and set the default locale to " us "
do n ' t download . jar . zip file if they do n ' t exist
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve clarity and consistency in assertion logic
added checks for single and single parameters in SimpleExprGenerator to ensure correct handling of variable expressions in the analyzer
added a volatile boolean field ` createdVertx ` and modified the conditional check to include it to ensure that the ` createdVertx ` variable is
updated writeAttributes method calls to use the node model instead of null to improve type safety and avoid potential ClassCastExceptions
updated log messages to use " Synchronized " instead of " Synchroned " in SynchronizeFolderOperation . java and added null checks
added a new property ` ignoredReadStatus ` to the ` Entries ` class and set it in ` CategoryREST ` and ` FeedREST `
replaced ` MavenTestingUtils . getTargetDir ( ) . toURI ( ) ` with ` MavenPaths . targetDir ( ) ` across multiple
added validation logic for URI and MetaDataRegisterDTO in RegisterServerConsumerExecutor and refactored null checks in URIRegisterExecutorSubscriber to improve data validation
updated the logic for determining the playback state in GwtMusic . java to ensure that the playback state is not paused before proceeding
added a new permission check for the " plots . admin . area . sudo " permission in the MainCommand and Captions classes to enhance
added a trace option to the query options in ServerRequestPlanVisitor and updated related test cases to utilize it to enhance query execution options based on
refactor equality checks in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8Parser
refactor assertions in ResourcesTest . java to use variable names for consistency to improve readability and maintainability of the code
added new native methods for NMTOverflowHashBucket , NMTMallocWithPseudoStack , and NMTMallocWithPseudoStack to enhance
[ hotfix ] [ runtime ] deprecate eitherserializersnapshot in favor of javaeitherserializersnapshot
updated AddressResolverOptions to use AddressResolver . DEFAULT _ NDOTS _ RESOLV _ OPTION instead of a hardcoded value to
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRocker
pdfbox - 2576 : fix npe in pdnonterminalfield . tostring ( )
updated XML namespace paths from " liquibase / parser / core / xml " to " www . liquibase . org / ns / dbchangelog / "
move commonmimetypelocator from source to test source
replaced instances of ` INIT ` with ` NOT _ REQUIRED ` in ` RepositoryVersionState ` from ` INIT ` to ` NOT _
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to ensure consistent comparison behavior for different schema types
updated import statements in TestBackwardAnoamlyFunctionUtils . java to use TestNG annotations instead of JUnit to ensure compatibility with TestNG
added a new file ` ProgressiveJPEGTest . java ` that extends ` GdxTest ` to implement a progressive JPEG test
updated MaterialLoader to set alpha threshold and set ambient , ambient , emissive , and texName variables to improve clarity and
do n ' t fail on x86 for native - image building on window
added a null and length check before setting the size to prevent potential NullPointerException when text is empty
update readVarInt ( ) method to include a value of 1 _ 000 _ 000 instead of 1 _ 000 _ 000 to
added ` private ` constructors to several classes in ` PushUtils ` , ` ThumbnailsCacheManager ` , and ` ThumbnailsCacheManager `
simplified the calculation of the ' length ' variable in RocketPanel . java to simplify the code and improve readability by eliminating unnecessary loops
removed unnecessary cast to MockDirectoryWrapper to simplify code by removing unnecessary type casting
updated the parameter type in the load method from " . * " to " ? i " to ensure proper handling of CSV file loading in the application
added conditional logic to announce accessibility events in TaskbarStashController and modified variable declarations in InvariantDeviceProfile , InvariantDeviceProfile , and
replaced ` Args . getInstance ( ) . getMyKey ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( )
[ java ] add targetjdk13 and targetjdk15 support to pmdtask
refactor QuotaResponseBuilderImplTest to use MockitoJUnitRunner instead of PowerMockito to improve code readability and maintainability by using
added PrintStream and PrintStream variables for error and error streams in TestSchemaToolCatalogOps . java to ensure proper handling of system output and error streams
added a DFSClient parameter to the constructors of FanOutOneBlockAsyncDFSOutputSaslHelper to enhance the functionality of the Sasl
updated the MongoQueryMethod constructor to include RepositoryMetadata as a parameter to enhance query functionality by allowing custom metadata handling
update digester to use propertysource instead of propertysource .
updated import statements in MetaDataEndpointImpl . java to remove unnecessary static imports to streamline code and improve readability
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlockRetryInterval to manage the number of retries to improve
corrected the spelling of " xAxis " to " xAxis " in BarChartActivity and updated the line offset in YAxisRenderer to
added a method to check if a string is printable characters in FsUtils . java to ensure proper handling of printable characters in the system name
rename ` in ` to ` using ` in ` in ` in ` in ` in ` and ` using ` in ` methods to ` using `
add processpluginconfiguration option to projectbuilder . build ( )
updated return values from ` amountTransfered ` to ` amountTransfered ` in ` ProxyConnectionManager ` , ` ServerTrafficCounter ` , and
added imports for Files and Paths , and modified resource path handling in ITSystemTest . java to enhance file existence checks and ensure proper
updated return values in ` ModeledConnectionRecord ` , ` ActiveConnectionRecord ` , and ` AuthenticatedUser ` classes to retrieve the remote host
do n ' t add admin button to community list when admin be enable
replaced instances of ` longCompactions ` and ` shortCompactions ` with ` AtomicInteger ` for thread counter tracking to improve thread management by countering
updated the method of obtaining the package name in WallpaperChooser . java to use resources . getResourcePackageName instead of getApplication ( ) . getPackageName ( )
updated ` getPlayersInPlot ( ) ` method to use ` getPlayersInPlotVisible ( PlotPlayer < ? > player ) `
updated multiple Java files related to AndroidManifest , ResName , and ShadowActivity to improve code organization and maintainability
refactor MlibOpsTest class to improve test coverage to enhance performance and readability of the test cases
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _
updated attribute name from " referencedContainer " to " referencedContainer " in SchemeGenerator and added a new test for expected properties in SchemeGeneratorTest to
removed unnecessary null checks for key and iv in UploadFileOperation . java to simplify code and improve readability by eliminating unnecessary null checks
added a @ Stability annotation to WorkProfileTest . java to indicate the stability of the WorkProfileTest class
removed unnecessary check for bucketing version in TezCompiler to streamline code by eliminating unnecessary checks for bucketing versions
replace ` setCursorPosition ` with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure proper handling of cursor position
changed the ` LockFreeBucket ` class to an abstract class and added ` LockFreeBucket _ FinalFields ` and ` LockFreeBucketLayout `
add a method to print thread pool statistics in the NodeProbe class to improve monitoring of thread pool statistics in the cluster
updated the method to retrieve the maximum bitrate from user preferences to ensure accurate bitrate retrieval based on user preferences
added methods to check if only span IDs are present and span IDs are missing in ZipkinHttpSpanExtractor . java to enhance tracing capabilities
refactor getuserpaymentaccounts ( ) method to be abstract
remove use of reflectionutil . getreflection ( ) and use reflection . getreflection ( ) instead
added a line to set the project in LauncherUtils . java to ensure the project is properly set when necessary
updated JsBundle , JsBundleBuilder , JsBundleBuilder , and JsTestScenario classes to include ProjectFilesystem as a parameter to
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
fix typo find by codespell on fossies . org
refactor ` VersionBuckConfig ` to use ` ImmutableSet . builderWithExpectedSize ` instead of ` ImmutableMap . builder ( ) ` to simplify
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to ensure proper handling of TypeNotPresentExceptions
changed the access modifier of the ` validateTypes ` method from ` public ` to ` public ` to allow access to the ` validateTypes ` method
chore ( deps ) : update gapic - generator - java with mock service generation fix
added SLF4J logging imports to SimulationStatus . java to improve logging capabilities for simulation status updates
updated the Splash font version from 138 to 150 and modified the Font version from 138 to 150 to adjust the font version to reflect the
refactor notification addition in UserInterfaceComponentImpl to run a lambda expression to improve code readability and maintainability
added a mock statement to the ReturnsElementsOf class for mocking elements to improve code readability and maintainability by eliminating unnecessary mocking
corrected a typo in the error message from " non - string partition column is not allowed " to " non - string partition column " to
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to ensure correct handling of stored fields in the database
added a method to retrieve the version code from the MainApp class and updated imports in FeatureList and WhatsNewActivity to use MainApp
camel - 14497 : camel - bean - add test for explicit method invocation in camel - bean
updated assertions from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to ensure
added buffer ownership logic to IndexBufferObject and VertexBufferObjectWithVAO classes to enhance buffer management by ensuring proper resource management
added a transition for the " forgotPassword " password in the PasswordManagementWebflowConfigurer to ensure that the password is correctly changed forgot password
refactor JerseyClientConfiguration class to improve code organization to enhance maintainability and readability of the configuration process
[ hotfix ] [ runtime ] remove unused import from consoleinboundchanneladapterparser
updated print statements in InstanceOfPatternMatchTest and RemoveRedundantTypeCastTest to use ' o ' instead of ' s ' to improve
added methods to manage the last column and row counts in StringDict and Table classes to ensure proper handling of empty strings and improve data integrity
added ` AutoCloseable ` annotation to ` Container ` and ` GenericContainer ` classes , and implemented ` withCustomizer ` method in ` GenericContainer
updated logging level from info to error in MediaInfo . java and modified test cases in RendererConfigurationTest . java to improve error handling and ensure correct
added schemapattern option to BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector classes to enable customization of schema patterns in the database connector
http : / / github . com / bouncycastle / bouncycastle / bouncycastle / bouncycastle / tls
refactor calculations for bitmap sizes in AndroidGraphics . java to improve readability and maintainability of the bitmap creation process
refactor Base64 class implementation to improve performance and readability of the code
[ gr - 16464 ] add support for get / set fallback in global container .
added support for IPHONE in JavascriptEnabledDriverTest to ensure compatibility with IPHONE environments
refactor FlowBuilder and FlowJobBuilderTests classes to improve code readability and maintainability
updated the ` AttributeResource ` class to use ` int ` instead of ` ResName ` and replaced ` ResEntry ` with ` ResId `
refactor ` DefaultDockerClientConfig ` to use ` Optional < File > ` for SSL context handling to improve code clarity and maintainability by centralizing
updated test setup method from ` @ After ` to ` @ Before ` in ` SimpleReactiveElasticsearchRepositoryTests . java ` to ensure proper setup
refactor type variable capture logic in mmm Attr . java and add a new class T6450290 . java with a generic Box class to
added logging level configuration to LoggingFlags and LoggingOptions classes to enhance logging functionality by allowing configuration of logging levels
added logging statements for package removal events and updated method signatures to use Collection instead of Iterable to improve logging clarity and maintainability of the code
added allFilesOption ( ) methods to FileActivity , FileDisplayActivity , and PreviewImageActivity classes to ensure proper handling of file options in
added deprecated methods for handling BiConsumer and BiFunction in MutationOperationGroup . java to enhance functionality and maintainability of mutation operations
updated the calculation of numPredictiveAppCols based on device type to ensure accurate calculation of app column based on device type
updated String initialization to use UTF - 8 encoding to ensure compatibility with UTF - 8 encoding
added RequestMatchers and RequestMatchersTests classes for handling request matchers to enhance functionality for matching request matchers in the security framework
do n ' t check if applet be in a temporary mode , but not in applet mode
updated calculations for knob dimensions in ProgressBar . java to use bgBottomHeight instead of knobHeightHalf to ensure proper positioning
[ hotfix ] [ test ] use external _ functions . json resource instead of src folder
added final fields for extra _ L1 , extra _ L2 , and extra _ L4 in BruteArgumentMoverHandle . java to
added a condition to check if the handler is invalid before processing gesture state to ensure that gesture states are only processed when the handler is invalid
refactor DynamicGrid and Workspace classes to use dynamic layout metrics for long , short , and portrait layouts to improve layout accuracy and maintainability of
added a check for " / robots . txt " in the URL validation logic to ensure that the " / robots . txt " file is
add miss @ staticresource annotation to JBrowseModule . java
updated widget subscription keys from " continue " and " close " to " createWorld " and " return " in AdvancedGameSetupScreen . java to
added a null check for ` b . get ( ) = = 0 ` in the UDFOPDivide class and created a new test class
refactor code formatting and formatting in FlowJob and FlowJob classes to improve code readability and maintainability
replace ` filterProcessesUrl ` with ` filterProcessUrlRequestMatcher ` in ` FormLoginBeanDefinitionParser ` , ` LogoutBeanDefinitionParser ` ,
added onDestroy ( ) method implementations in ShareActivity and ContributionsActivity to unbind the service connection to ensure that the service connection is properly
updated variable name from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity and consistency in variable
refactor multiple command and output handler classes for consistency to improve maintainability and readability of the codebase
added a call to set the request timeout in RaftServerConfigKeys . Rpc to ensure proper handling of request timeout configurations
updated logging level from error to debug in TsFileResourceManager . java and removed unnecessary exception handling in ResourceManagerTest . java to streamline error
added system properties to setModelSource method in MavenModuleLoader to ensure proper setting of system properties for the model source
added server readiness check metrics and updated the getReadinessStatus method to use it to improve code clarity and maintainability by using a more descript
fix animatedtorch not be register on client side
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when closing the writer
added a method to retrieve Hive configuration from a specified directory in UtilsForTest . java and updated related test files to use this new method to improve
added a new feature " Muting Users " to the FeaturesActivity to provide users with a Muting Users link
added a property to set the jdk . reflect . useDirectMethodHandle to " false " to disable direct method handles in the system
hbase - 16446 splitonleadingvarcharcolumnspolicy should use steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] remove unused environment variable in yarnclusterdescriptor
use getword ( ) . getspelling ( ) instead of getword ( ) . getpenunciations ( null , null )
updated JSON string formatting in JsonUtilsTest . java to improve readability and maintainability of the code
added extra data for the tweet ID in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure that the tweet ID is
added a warning log message to indicate that the underlying ring buffer data relates to the reliable topic is lost to improve error handling and provide clearer
do n ' t throw an ioexception if there be no class to analyze
replaced ` Key ` import with ` PublicKey ` import in ` KeyFetcher . java ` to ensure compatibility with the latest security framework
updated the isIncompatible variable from false to true in DLNAResource . java to ensure proper initialization of the isIncompatible flag
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and consistency in method naming
pdfbox - 2452 : avoid npe if range array be empty
[ hotfix ] [ test ] fix flaky test in activemqmessageconsumer
updated off - heap format to true and modified default value from " ON _ HEAP " to " OFF _ HEAP " to enable off - heap
updated the title setting logic in FeedUpdateService . java to ensure consistent title formatting for better readability and maintainability
updated the initialization of the previewPanel in JColorChooser and BasicColorChooserUI to use ColorChooserComponentFactory to ensure the previewPanel is initialized
changed log level from info to debug for model checking in DefaultBuildExtensionScanner . java to improve logging clarity and reduce log verbosity
fix npe in androidtilebitmap when reusable bitmap be null
added a new ` getLayoutParams ` method to the ` FakeView ` class to provide a way to retrieve the view ' s layout parameters
added a check to throw an IllegalStateException if a Cursor is already closed to ensure that an IllegalStateException is thrown when the session is already closed
pdfbox - 2576 : avoid npe when use the same dictionary with the same name .
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests related to JMS functionality
added a private String field ` ts ` with getter and setter methods to the ` Message ` class to provide access to the ` ts `
refactored exceptionmapper to use exceptionmapperutils instead of genericexceptionmapper
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the class from other packages
[ isochrone ] use pmap instead of request . gethints ( ) in routeresource
removed the ' public ' modifier from several test classes in FailureLogAnalyzerTest . java to simplify the code by removing unnecessary ' public ' access modifier
refactor CSRF handling by introducing a separate method ` setCSRF ` to improve code readability and maintainability by encapsulating the
update lombok . launch . shadowclassloader to work with bootstrap
[ drools - 218 ] allow numeric cell value to be disable by default in rule sheet parser .
updated log level from info to debug for default value retrieval in HiveConf . java to improve logging clarity by avoiding unnecessary info logging
added null checks for axes and buttons in Lwjgl3Controller and implemented polled controllers in Lwjgl3ControllerManager to ensure proper
updated import statements for ObjectFactory from cucumber . api . java to io . cucumber . core . backend in WeldFactory and WeldFactoryTest to
added a null check for the host before saving the port forward in PortForwardListActivity . java to ensure proper handling of the savePortForward method
added a new configuration property ` shouldSnapshotData ` and its getter / setter methods in ` GlobalConfiguration ` , and updated related classes to utilize
refactor PersistableBundle initialization and improve job scheduling logic in SyncedFolderObserver . java to enhance code readability and maintainability by reducing
refactor LocationMarshaller to improve code readability to enhance maintainability and readability of the code
replaced ` isTrackpadMotionEvent ` with ` isTrackpadMotionEvent ` in ` StatusBarTouchController . java ` and updated related logic
changed the package of VectorReader and related classes from ` java . io . api . impl ` to ` java . io . api . impl `
updated import statements from ArgumentMatchers to Matchers across multiple test files to ensure compatibility with the latest Mockito API standards
updated method calls to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` across multiple classes to streamline path handling by
updated the ` transform ` method to accept ` RecordReaderConfig ` as a parameter to enhance functionality by allowing configuration of ` RecordReaderConfig ` for
added null check for the extractor before processing annotations in ControllerMethodInvoker . java to prevent potential NullPointerExceptions when the extractor is null
fix max secondary storage limit for account and domain
add guiscreenevent . potionshiftevent to handle potion shift event .
added a deprecated constant COLD _ READS _ TO _ OMIT _ KEY and removed the COLD _ READS _ TO _ OMIT
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management during test execution
add label _ is _ retry to the result of popmessageprocessor . getmessagecount ( ) .
refactor KeyboardAddonSettingsFragment class to improve code readability to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests for a moment
rename ` EventLoopGroup ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references to improve clarity and consistency in naming convention
added UpgradeRequest and UpgradeResponse handling in UpgradeConnection and JettyTrackingSocket classes to enhance session upgrade functionality and ensure proper handling of
added a timeout property and its methods to set the connection timeout in AndroidImplementation . java to ensure proper handling of connection timeouts in the application
removed IOException from getUserAccessPermissions and getTeamAccessPermissions methods to streamline permission retrieval and improve code clarity
added a new test method ` testQuotedCastExpression ` in ` SelectTest . java ` to validate SQL parsing and deparsing to ensure correct
updated assertions in Misc . java to check if a file is a root directory and added a method to check if the file is writable to ensure
added logging for group and thread per group in FixedThreadExecutor and refactored executor selection logic to use dynamic property settings to improve thread management and
added null checks for the field in AbstractChangeGenerator . java to prevent potential NullPointerExceptions when field is null
updated imports from ` CasEventListener ` to ` InitializingBean ` across multiple configuration classes to improve clarity and consistency in naming conventions
replaced direct calls to ` onAnimationEnd ( realAnimation ) ` with a new ` endAnimation ( ) ` method to improve code readability and
added a close method to the DeflaterOutputStream in RegionFile . java to ensure proper resource management and prevent potential resource leaks
added a new file ` gsp001 . java ` that implements a native method for retrieving system properties at early phase Agent _ OnLoad to demonstrate
add isdeclaredbean and isdeclaredbean to allow injection of bean
[ jme3 ] fix cameracontrol . read ( ) and lightnode . write ( ) to read camcontrol and lightcontrol .
refactor ` PopupNotificationPanel ` to use ` SwingUtilities . getWindowAncestor ` for better clarity and consistency to improve code readability and maintainability
replace NoInstanceException with InferenceException in Infer . java to streamline exception handling by using a more general exception type
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the value of the feature value
changed the parameter type of the ` after ` method from ` int ` to ` long ` in ` Mockito . java ` to ensure correct handling of
added onBuild and executionDriver properties with corresponding getter and setter methods to ContainerConfig and Info classes to enable dynamic configuration of the ` onBuild `
added conditional logic to set icons based on the target ' s RTL status to ensure correct alignment of buttons based on the target ' s RTL
added a boolean flag ` enablePositionIncrements ` to the ` StopFilterFactory ` class and modified the return statement to use it to enable position
updated EmailsTest and SystemErrorEmailReportTest to use an instance of InternetAddress in EmailsTest and SystemErrorEmailReportTest to improve
added a new boolean variable ` mTryShareAgain ` to ` FileActivity . java ` to track sharing behavior based on user experience
added tty name handling in JansiNativePty . java to determine if the jansi library uses a TTY name based on the
refactor bytes handling in BandwidthProcessor to use a variable ` bytesSize ` instead of a hardcoded value to improve code readability and
replaced direct calls to ` then ` with ` await ` in ` Issue410Tests . java ` to improve code readability and maintainability by
updated URLs for various chargers in EaseeBindingConstants . java to be private to enhance encapsulation and maintainability of the
[ hotfix ] [ kafka ] increase read timeout from 2 second to 3 second in kafkaioit
replaced ` Matchers . anyOf ` with ` is ( itemName ) ` in ` SearchResultMatcher . java ` to improve code readability and
added SSL context management and trust - all certificates in OkHttp . java to enhance SSL handling by allowing trust - all certificates for improved security
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController to use a new ` onButtonLongClick ` method to improve
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` StringPtg . java `
added nullability annotations to stdout and stderr in ShellStep . java to ensure proper handling of null values and avoid potential NullPointerExceptions
[ java ] increase timeout for asyncappendertest from 1000 to 2000
updated the ` escapeDatabaseObject ` method to accept a ` Class < ? extends DatabaseObject > ` objectType ` instead of ` tableName ` to
added a new boolean variable ` inputChanged ` and modified the condition in ` MaterialRenameDialog . java ` to include a check for ` inputChanged
added a test for state change in ShadowDisplayTest and implemented the setState method in ShadowDisplay to ensure proper handling of display state changes based on post
add support for direct invocation service in the dispatcher
added keycodes for KEY _ X and KEY _ Y in GlobalKeyDispatcherW . java to ensure correct handling of key codes in the key
updated SQL query conditions in PgDatabaseMetaData . java to include conditional checks for server versions v9 _ 0 to ensure compatibility with newer server versions
[ hotfix ] [ runtime ] fix nullpointerexception in queuechannel
updated method signature and variable names in FileUtils . java for clarity and consistency to improve code readability and maintainability by using a more descriptive
[ hotfix ] [ runtime ] add support for ` ` / nodes ' ' metric for jenkins node
add support for ` ` disabled ' ' and ` ` defaults - disabled ' ' header
[ java ] do n ' t throw EOFException if the last byte be negative at the end of the file .
alexeibarantsev : cleanup nacos naming service before destroy it
camel - 14457 : camel - mybatis : fix switch / cases indentation be not consistent with spring data
refactor GoAwayGenerator and GoAwayBodyParser to use a dedicated method for writing status codes to improve code readability and maintainability
added a print statement for the " BadCredentials " type in the AuditEvent class to improve code readability and maintainability
added bounds checking for float rounding errors in Interpolation . java to ensure proper handling of rounding errors
fix wrong path in forgeworldedit . defaults
refactor code to store the dx variable before adding it to the builder to improve code readability and maintainability
added equality checks for PointRangeQuery instances in TestPointQueries . java to ensure correct comparison of PointRangeQuery instances
hbase - 16464 fix testhfilecleaner to use the correct hfile directory
added a check to ensure the file name is not equal to the file transfer request ' s file name before setting the label to ensure that the file
[ hotfix ] [ runtime ] remove unnecessary throw in JedisClusterCommand . java
[ hotfix ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap ` to
refactor QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWriteBenchmark classes to use a new HashMap instance to
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize G _ SCH _ B to improve
added null and empty check for fields and refactored method names in GroovyEngine . java to improve code readability and maintainability by reducing redundancy
set the drawable to false for the number in the AlgoDependentNumber class to ensure that the number ' s drawable is properly set to false
added SERVER _ READ _ SOCKET _ TIMEOUT and SERVER _ TCP _ KEEP _ ALIVE configurations to HiveConf and Hive
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java ` to
( chore ) camel - dml : do n ' t log sql in deletehandler
replaced ` ThreadFactory ` with lambda expressions in ` RealtimeSegmentRelocator . java ` to improve code readability and maintainability by using a
do n ' t set success flag to true in createvpccmdbyadmin
updated windowAlpha calculation in WindowTransformSwipeHandler . java and modified condition in FloatingIconView . java in FloatingIconView . java to
updated the schema warning message in SecurityNamespaceHandler . java to reflect the correct version of the schema to ensure compatibility with the latest Spring Security version
renamed multiple test classes for clarity and consistency to improve code readability and maintainability
changed member variables from non - final to final in multiple classes to enhance immutability and maintainability of the code
added a new ` TestConfigureUDF ` class and updated ` ExprNodeGenericFuncEvaluator ` and ` ExprNodeGenericFuncEvaluator ` classes to
updated the regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to enhance message matching capabilities and enhance test coverage for
removed the ` final ` modifier from the logger variable in ` LOG . java ` to streamline the logging process and improve code readability
updated SQL queries from ` updatePurgedShards ` to ` deletePurgedShards ` in multiple files to improve clarity and consistency in SQL
add ` ` 17 - preview ' ' version to javalanguagemodule
[ java ] wait for compression job to be stop if it can not be start .
fix nullpointerexception in volatilereadnode . getlastlocationaccess ( )
added unmodifiable list of steps in SimpleJob . java and modified method formatting to improve code readability and maintainability
removed redundant fields from TronJsonRpc and updated error handling in TronJsonRpc and TronJsonRpcImpl to streamline error reporting and
refactor currency pair handling in BitstampAdapters to use a variable for better readability to improve code readability and maintainability
[ hotfix ] fix longtasktimer . measure ( ) to use basetimeunit ( )
[ hotfix ] [ euphoria - core ] do n ' t use hashpartitioner in reducebykeytranslator
updated the handling of color values and pubkey IDs in HostEditorActivity to use CharSequence instead of String and improved type safety to enhance type safety
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and update related methods accordingly to improve clarity and consistency in naming conventions
added a MAX _ TWEETS _ IN _ CONVERSATION constant and updated the loop condition to limit the number of replies to 50
updated refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to increase the refresh interval from 1 to 2000
[ hotfix ] fix indexoutofboundsexception in queue . newtailpage ( )
updated the return statement in GlowServer . java to use GlowServer . class instead of getClass ( ) to improve code readability and maintain
refactor the grow method in DataIO . java to use a dedicated method to improve code readability and maintainability
added import statement for DataOutputStream in GdxSetup . java to improve code clarity and maintainability
add a method to retrieve the submitted file name in AttachmentHttpBinding to provide access to the submitted file name from the part
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure proper resource management during loading
added ` ClassNotFoundException ` to the ` main ` method and modified the ` instrumentJar ` method to handle ` NegativeArraySizeException ` to
added a new method ` checkForSpillPossibility ` to handle spill positioning in the ` HashAggTemplate ` class to ensure that the
changed variable declaration from ` info . info . getDocStoreSegment ( ) ` to ` dsName ` in ` IndexWriter . java ` to
added a default SAML name format to the supported name formats in SamlProfileSamlNameIdBuilder . java to ensure the SAML profile name format is
added redirect configuration and error handling in ChangePasswordPage . java to improve user feedback during password change operations
added a semicolon to the closing brace in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle time
deleted the FontScalingTest . java file to remove unused code to streamline the codebase
added validation for filterBeginDate and filterEndDate in RRD4jPersistenceService . java to ensure filterBeginDate and filterEndDate are valid before
added null checks for numVectors in GenericUDAFComputeStats . java to prevent potential NullPointerExceptions when numVectors is negative
test : migrate ExecutableRefTest from JUnit 4 to JUnit 5 to ensure compatibility with JUnit 5 in tests
added null checks for view and glassPane in JLayer . java and created a new test class bug6994419 . java with property change
camel - 14499 : fixed the issue of wiretap not be able to send dynamic expression .
changed the access modifier of the setAction method from public to protected to allow subclasses to access the setAction method from other classes
[ hotfix ] [ planner ] add planner . enable _ topn option to planner .
[ java ] remove unused code in logagenttest . java
fixed - rbatch . execute ( ) method should set queued flag in redisconnection .
refactor getConfVarURL method to use FileOutputStream and FileOutputStream instead of ByteArrayOutputStream to improve resource management and prevent potential null pointer exceptions
replaced Device . defaultDevice ( ) with criteria . getDevice ( ) in createModel method call to improve clarity and consistency in model creation logic
updated the ` onCreateOptionsMenu ` and ` onMenuItemSelected ` methods in ` SimulationViewer . java ` to ensure the correct menu item is
refactor CertificateValidator class to improve code readability to enhance maintainability and readability of the code
updated the initialization of the home directory from " hawtio " to " hawtio . dirname " to ensure the correct directory path is used
added a condition to return SINGLE _ SPACE if comments are empty to ensure proper handling of whitespace comments in the code
changed the ` mClosed ` variable to be ` volatile ` in multiple dictionary classes to ensure thread safety and prevent potential memory leaks
removed printStackTrace ( ) method from ContextHandler . java to streamline error handling by eliminating unnecessary stack trace printing
move customitemdroptest to integration test and move it to integration test
added a boolean parameter ` ifNotExists ` to the ` AddPartitionDesc ` class and updated related methods to include it to enhance partition existence handling
updated NfsSecondaryStorageResource to use Arrays . fill for byte buffers and added input handling to ensure proper resource management and prevent potential memory leaks
[ java ] remove dead code in clusteredservicenode . controlrequeststreamid
added support for SpatialOperator in CapabilitiesTransformer and implemented corresponding test cases in WFSTestSupport and WFSTestSupport to enhance spatial operator functionality
added import for LuceneTestCase and annotated BasicDistributedZkTest . java with AwaitsFix annotation to address issue SOLR - 2161
refactor preface handling logic in Http11InputBuffer . java to improve readability and maintainability of the code
[ java ] disable ingress exclusive by default .
hbase - 14279 addendum : fix offheapcache and bucketcache . ioengine . blockcache . size
added methods to track and update the running record count in JSONRecordReader to improve clarity and functionality of record processing
added a check to remove a year from mergedItems in CategorizationFragment to ensure that all items are processed correctly
updated color drawing in CacheableTextView , CellLayout , and HolographicOutlineHelper from 0x00000000 to 0 to ensure consistent color drawing across different
added a check for OpenGL version available in the render method to ensure compatibility with OpenGL 2.0 rendering
set the context of the action context to null in the BackgroundProcess class to ensure proper context management during execution
added a new method ` getUnescapedName ` to ` BaseSemanticAnalyzer ` and modified related methods in ` QBParseInfo ` to
added a connection timeout configuration in TestConnections . java and changed the count variable to be final in StubConnection . java to improve connection management and ensure
added multiple assertions for approx percentile queries in TestHiveAggregationQueries . java to ensure accurate data retrieval of percentiles in aggregation queries
updated DEFAULT _ IDLE _ TIMEOUT from ZERO to 30 seconds and refactored idleTimeout handling in WebSocketChannel to improve code readability and
updated the method to retrieve shares from the user ' s account name to ensure compatibility with the user ' s platform account
updated Inet6Address to use generics for type safety and added null check for scope _ ifname to improve type safety and prevent potential NullPointerException
refactor PlaybackControlView to replace enableView methods with setButton methods for better clarity and functionality to improve code readability and maintainability by
updated method parameters from ` this ` to ` id ` in ` Session . java ` and ` Token . java ` to improve clarity and consistency in
updated method from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
[ hotfix ] [ runtime ] change default value of useexceptionprobability to __ __
updated color handling in PredictedAppIcon based on the icon ' s themed status to improve visual consistency and maintainability of the code
[ guacamole - 147 ] fix mysql user initialization to be able to create a user with a password .
added " centre " alias to the aliases list to enhance the functionality of the Middle class
added dependency injection for DirectUpload in CommonsApplicationComponent to enable injection of direct uploads in CommonsApplicationComponent
added space limits to BarChartActivity , BarLineChartBase , and adjusted space calculations in BarChartActivity , and YAxisRenderer to ensure consistent
added support for ` HasJavaAbi ` in ` AndroidLibraryDescription ` and ` JavaLibraryDescription ` to enhance functionality by allowing specific ABI
added operation event status type to the request parameters and initialized the services list in CompositeLogService to enhance the functionality of the CompositeLogService class
added debug print for annotations and updated visibility annotation handling in DexAnnotation . java to improve debugging by providing more detailed information about annotations
[ java ] rename jmsio . startbundle and jmsio . teardown to jmsio . teardown
updated the ProcessBuilder initialization to include a classpath variable and added a classpath string to improve clarity and maintainability of the ProcessBuilder initialization
updated documentLoader loading to use " res " separator instead of " values " in PackageResourceLoader . java to ensure correct file path separator is used for
updated method calls from ' this . ' to ' type ' for consistency to improve code readability and maintainability
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to a failing test case
updated the ` ShouldHaveMessage ` class to escape percentages and modified the ` create _ error _ message ` method to improve error message formatting and
fixed - http : / / issues . apache . org / jira / browse / amq - 4237 - jcache / amq -
do n ' t log exception in commandcontext . close ( ) when closing command context .
added a semicolon to the ALPNClientConnectionFactory initialization in HTTP2Client . java to ensure proper initialization of ALPNClient
update packet to use instance . getbasevalue ( ) instead of instance . getvalue ( )
use thinghandlerhelper instead of thingstatus in prestoaudiosink
updated countDownLatch . await ( ) calls from 500L to 5 seconds in multiple test files to ensure that the countDownLatch is only awaits to
changed log level from info to debug in LightThingHandler . java to improve logging clarity and provide clearer feedback on the wrong request
( chore ) camel - async : fix the pool size issue of asyncjobmanagerimpl
updated method signatures and error messages in Reporter . java and ReturnsSmartNulls . java to use Object instead of Location to improve clarity and consistency in
updated the parameter type from ` dataFrame ` to ` frame ` in the ` generate ` method to improve type safety and reduce unnecessary type casting
refactor package - info . java files for consistency to improve code readability and maintainability
[ flink - 18286 ] [ table - planner - planner - planner - planner - planner - planner -
added a method call to mixPlay in the Engine class to enhance the functionality of mixPlay functionality
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated test cases in FinderPatternFinder and QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to improve test accuracy and
simplified the condition for checking leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability
fix nullpointerexception in stringtemplate . isvectormatrixmultiplication ( )
add support for find , find , find , find , and findAll methods in SelenideElementProxy . java to support additional search criteria in the
fix defaultaudiosink . getmaxsupportedchannelcountforpassthroughv29 ( ) to return 48000 instead of 48000
add get / set formula to the xssfname so that it do n ' t fail to parse cell reference
updated the calculation of the target value from 60000 to 90000 in HighDimensionsTest . java to correct the expected value for the target
fix bug in simpletypegt . parse ( string , string ) when value be empty
added a new test class ` ClassPathXmlJobRegistryContextTests ` for verifying job retrieval in ` ClassPathXmlJobRegistry ` to ensure
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to ensure accurate
camel - 12320 - camel - restlet : deprecate restletendpoint # requestbody in favor of restletproducergetinvalid
[ hotfix ] [ log ] remove unused method from logendpointbuilder
refactored the ` submitTraceEvent ` method to a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability
added a condition to check if the order status is not CANCELED and REJECTED in HuobiAdapters . java to ensure
updated image layout calculations in LCMSImageLayout and added a method to calculate next pixel offset in LCMSImageLayout to improve image layout accuracy and
updated timestamp handling in Event . java and JrubyEventExtLibrary . java to use RubyTimestamp instead of a new Timestamp object to improve clarity and
added a check to return the resource if the path ends with " / " in ContextHandler and a corresponding test in WebAppContextTest to ensure
updated ScriptFunctionImpl from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GETTER to
renamed variable ` amt ` to ` scrollAmount ` and updated related logic in ` JEditTextArea . java ` to improve clarity and consistency in
graphdecoder : do n ' t set guard stage if there be no callerloopscope
test : migrate sniperprettyprinterjavaxtest to junit 5
updated URLOutputStream initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential resource leaks
added entity annotations to the Mail class to ensure that the Mail class correctly handles entity entities in the application
updated default values in Main . java from false to true and modified the ` includeTablespace ` option from " false " to " true " to
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to metaDataBuffer and valuesBuffer in the CountersReader
added a boolean flag to manage read non - empty files in ScanBatch . java and a corresponding test in TestJsonReader . java to ensure proper
added null checks for internalCustomName ( ) in StringSubject . java and updated test assertions in StringTest . java to improve error handling and ensure
added a regex pattern for matching library names and modified the conditional check in LibUtils . java to improve code readability and maintainability by using a
updated catch blocks in JrtJavaBasePackages and PackageHelper from ClassNotFoundException to Exception to improve error handling by catching specific exceptions
hbase - 16464 add check to masterfilesystem . checkdfssafemode ( )
updated error message formatting in TranslatingJavacPhaseTracer . java to include the exception class name and message to improve clarity of error messages for
[ hotfix ] [ maven - plugin ] remove unused code
do n ' t dispatch the contact status event if the parent provider do n ' t have any contact .
refactor ` withResourceAndParams ` method to use ` Map < String , String > ` instead of ` Map < String , String > `
added a new integration test class AccountInfoFetchIntegration for fetching account information to ensure correct retrieval of account information in the BTCE exchange
added mouseWheel method to VDUInput and vt320 classes and updated TerminalView to utilize it to enhance mouse wheel functionality and improve
[ lwjgl ] add java . games . input . librarypath to system property
remove @ columnhstore , deprecate in favor of @ columnhstore
[ hotfix ] add skin flag to metadata index ( # 1064 )
[ hotfix ] [ test ] fix flaky test in loadbalancerWithServicetests
fix nullpointerexception in mapservice . getmember ( )
replaced System . getProperty with AccessController for OS version retrieval to improve security by using a privileged action for accessing the OS version
added a new constant FREEMARKER _ CONFIGURATION _ FILE _ SUFFIX and modified the fileSuffix initialization in TemplateEngineFreemarker . java to
[ hotfix ] [ test ] fix hash code calculation in selectmessagequeuebyhash
refactor ToolbarPanel to use AnimationCallback for better animation handling to improve code readability and maintainability by using a custom animation callback
do n ' t use easybind for caret column in styledtextareavisual
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription classes to utilize CxxBuckConfig for
replaced instances of ` SimpleParameterAccessor ` with ` ParameterAccessor ` in multiple classes to improve clarity and consistency in naming conventions
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when setting the password attribute
fix datautilities . defaultvalue ( byte [ ] ) to use array . newInstance ( int , int ) .
http : / / issues . apache . org / jira / browse / amq - 4294 - allow host name verification to be pass to
updated assertions in TestFSTableDescriptors to use ` > = ` instead of ` assertEquals ` for cachehits to ensure accurate comparison of cachehit
[ hotfix ] [ webdriver ] use wddeletecookie ( ) instead of getcurrenturl ( )
added a boolean variable ` mHasEndedLauncherTransition ` and modified the logic in ` AbsSwipeUpHandler ` and ` RecentsView `
added ` < meta charset = utf - 8 ` to the ` HTMLListWriter ` and ` HTMLWriter ` classes to ensure proper character encoding for
refactor IndexReader class to improve code readability to enhance maintainability and readability of the code
updated MAX _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 in HiveConf . java and modified statsPrefix
updated the order of ` arrowButton ` in ` BasicComboBoxUI . java ` and added a new class ` bug6337518 . java
refactor TestRandomAccessBuffer class for improved performance to enhance performance and readability of the code
updated method signatures in UserInfoActivity . java to improve user information handling
added imports for HomeContentProvider and updated broadcast intent to include CONTENT _ URI in multiple service classes to ensure proper notification of content URI changes
added methods to invalidate pressed and focused backgrounds in BubbleTextView and Launcher classes to improve user experience by ensuring pressed and focused backgrounds are
updated the ` getFallbackResponse ` method to include an ` Throwable ` parameter across multiple classes to enhance error handling by providing a more descriptive
removed conditional check for env . _ compile _ only in DumpBytecode . java to simplify the condition for better readability
[ java ] fix null pointer exception in channeluri . gettags ( )
updated JAVA _ REGEX _ SPECIALS string format and added tests for SQL pattern types in TestSqlPatterns to ensure correct handling of different
added a new constant ` ACTION _ BAR _ TITLE ` and updated the action bar title in ` FileActivity ` and ` FileDisplayActivity
updated type retrieval from Iterables . getOnlyElement to Iterables . getLast in PythonDslProjectBuildFileParser . java and added a new
updated the schedule annotation from " minute " to " 0 " in CleaningService . java to correct the time zone for cleaning operations
updated imports and added partition validation logic in TransactionalValidationListener . java to enhance table partition management and improve error handling for partitioned tables
added a new method ` Enable polling ` in ` SnapPuller . java ` to enable polling functionality in the ReplicationHandler class
changed the data type of ` generatedKey ` from ` int ` to ` long ` in ` ShadowSQLiteDatabase ` and added auto - increment
updated return statement formatting in SimpleReferenceCache . java to improve code readability and maintainability
updated error messages in TestInlineUnloaded , InliningBase , and ResolvedClassTest to include " failed to " failed to inline " to improve
updated keepAliveTimeoutShared and keepAliveTimeoutCustom from 60 to 10 and added null checks for endpoint and thread pool stop timeouts to improve thread management and
deleted the HttpTestAccount001 . java file to remove unused code to streamline the codebase
updated exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and modified test assertions in ` DispatcherTest . java ` to
camel - 14497 : camel - cxf - fix the issue that camel - cxf be not support by camel - cxf
added a new case ' ~ ' in ClientUtils . java to handle the ' ~ ' case in the ClientUtils class
camel - 16247 : camel - slack - add default delay to camel - slack
make blockutil . getblockhierarchy ( ) use getitemstackfromblock instead of block . getblockid ( )
updated the size of the FormLayout in TranscodingTab . java from 4 to 5 and modified the JCheckBox condition for encodedAudioPassthrough to ensure
added a new file ` bug8057791 . java ` to implement a visual representation of a JList in a Nimbus look and feel to improve
updated conditional logic in LambdaToMethod . java and added a new class LambdaInterfaceStaticField . java with a static field in LambdaToMethod .
fix websocket api add eth subscription when engine api add eth subscription
updated null check from ` to . length ( ) > 0 ` to ` to . length ( ) > 0 ` to ensure proper handling of null
refactor ParquetFixedWidthDictionaryReaders to use BigIntVector for setting read lengths based on the useDictionary flag to improve error handling and
updated conditional checks in PortraitPagedViewHandler . java to use dp . isLandscape instead of appsStackedVertically to improve
added a new annotation ` Log ` and ` LogInterceptor ` for logging functionality in Spring Cloud AOP examples to enhance the application ' s logging capabilities
added a conditional check for trace length before adding thread ID in QueuedThreadPool . java to ensure that trace is not empty before adding it to the
refactor methods in CacheGenerator and CacheProvider to use ` Implementation ` instead of ` ReferenceType ` to improve clarity and consistency in implementation handling
added totalFrameSize ( ) to the createReferenceMap method call in FrameMap . java to ensure that the reference map reflects the total frame size
refactor TypesafeConfigurator class to improve code organization to enhance maintainability and readability of the code
add a karaf test case for camel - karaf - karaf
renamed main method to bug1 , bug2 , and bug3 in RFE2891944 . java to improve clarity and maintainability of
remove use of ` ` utf - 8 ' ' in httpclientintroductionwarning
updated the ` unsupportedPlatformTool ` method to use ` UnsupportedPlatformTool : : new ` instead of ` unsupportedPlatformTool ` to improve clarity and
changed the type of ` loopCount ` from ` double ` to ` int ` and updated logging to use ` TimeUnit . MILLISECONDS . toSeconds `
added a ` size ( ) ` method to ` FlightConfiguration ` and overridden it in ` FlightConfigurationImpl ` to provide a way to retrieve the
fix kieaddressmanagertest and abstractaddressmanager to use reflection instead of reflection
updated column specifications in VLCVideo . java from " left : " and " grow " to " left : 0 : grow " and "
rename ` ` bisq ' ' to ` ` bitsquare ' '
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker .
updated user configuration directory and repo path handling in MavenCli . java and MBoot . java to improve clarity and maintainability of the application ' s
added a call to glBindBuffer for GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure the buffer is
refactor ServerHttpSecurity class for improved security handling to enhance security features and maintainability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to disable tests related to Postgres stored procedure tests
added default headers to HttpClientProperties and CasCoreHttpConfiguration to enable configuration of HTTP headers based on default values
added new response for credentialsviolation and userpasswordnotvalidexception
deleted the NoOpConfigPathGetter . java file to remove unused code to streamline the codebase
replace codec . base16decode ( ) with bytes . fromhexstring ( ) in engineauthservice
replaced ` CascadedStyle ` with ` CSSName ` and added validation for ` float _ val ` in ` FloatUtil . java ` to
[ danielwagnerhall ] fix checkstyle violation in drools - core
replaced instances of ` CaseInsensitiveHeaders ` with ` MultiMap ` and introduced a new method ` defaultHeaders ( ) ` in ` RestUtils `
changed the type of the ` enc ` variable from ` String ` to ` Charset ` in ProxyServer and Realm classes to improve code clarity and
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to provide a way to
refactor comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use Long . compare instead of Long . valueOf to improve code readability
use debug log instead of error log in jdkhttpclient
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler instead of GeneralSecurityException to improve code clarity and maintainability by using
changed the access modifier of the WingDings class from package - private to public to allow access to the WingDings class
added a null check for the owner pub key before processing filter data in FilterManager . java to avoid potential NullPointerExceptions when filtering is invalid
move bcpginputstream . wrap ( inputstream ) to bcpginputstream . wrap ( inputstream )
updated DataOutputStream initialization to use BufferedOutputStream and added a try - finally block to ensure proper resource management and prevent potential resource leaks
added a new test method ` testSelectAll ` to ` TestJdbcDriver2 ` and modified column qualifier handling in ` HiveBaseResultSet ` to
updated FocusTransitionTest . java file to improve test coverage for transition transitions
updated import statement from org . gwtproject . core . client . GWT to com . google . gwt . core . client . GWT to
added a type check for ` sourceTask ` before initializing ` JobClient ` in ` CounterStatsAggregator . java ` to prevent potential NullPointerExceptions
removed unnecessary whitespace in HttpInput . java to improve code readability and maintainability
added a new method ` changeComponentColor ` to the ` AppearancePanel ` class and refactored the ` AppearancePanel ` class to
changed the parameter from ' false ' to ' hidden ' in the TaskHelper constructor to ensure that the constructor accepts a hidden parameter instead of a false
[ hotfix ] [ test ] fix failovertimeouttest failure
pdfbox - 2852 : close fileinputstream in createfromrandomaccess ( ) to avoid resource leak
added import statement for DefaultParameterHandler in BoundSql , SqlSource , and LanguageDriver classes to enhance code clarity and maintainability
refactor spill state handling in LinearScanWalker to check loop depth before setting interval state based on spill definition and loop depth to improve readability and
add a new class ` MicronautAstBuilder ` to handle Groovy compilation statements to facilitate the compilation of Groovy AST statements in Groovy
added a ` closeInternally ( ) ` method to ` PgResultSet ` and modified ` ResultWrapper ` usage in ` PgStatement `
changed the initialization of serviceAdvisorType from null to PYTHON to ensure that the service advisorType is set to PYTHON
refactor resolver handling to use a ThreadLocal for thread - safe access to improve thread safety and prevent potential NullPointerExceptions
[ java ] make path . append ( ) return a list instead of a collection .
replaced ` new byte [ 512 ] ` with ` org . tron . keystore . generateRandomBytes ( ) ` for consistency to improve code read
added a ` setPersonalisation ` method to the ` SkeinParameterSpec ` class to provide a way to set a personalisation for
removed redundant check for ` n ` in ` CodeGenerator . java ` to streamline code and improve readability
removed unnecessary parameters from scroll methods in AllApps , BaseOverview , and LauncherInstrumentation classes to simplify method signatures and improve code readability
changed the access modifier of the pointer variable from private to public and added reset methods to the FlatRecordReader class to allow external access to the pointer
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
do n ' t dump boolean expression if there be a boolean type .
replaced ArrayList with a boolean variable acceptsAll and updated its usage in AbstractResource . java to improve code readability and maintainability by using a more
added a new boolean parameter ` false ` to the ` TaskView ` class to indicate that the view is not visible in the application
added ` isAutoIncrement ( ) ` method to ` CreateTableChange ` , ` LiquibaseDataType ` , ` DecimalType ` , `
initialize errorText with a default value of " Command failed due to Internal Server Error " to provide clearer error messages when the command fails due to
updated imports in LocalManagementTest . java and modified argument handling in LocalManagementTest . java to improve code clarity and maintainability by using the
updated the method calls from ` add ( currentStatus ) ` to ` push ( boosterStatus ) ` to ` toSimulate ` to
added AJP connector initialization and logging for port binding in GitBlitServer . java to enhance the ability to configure the AJP connector
added type conversion logic in TransTypes . java and created a new Intersection03 . java file with a test case to ensure correct handling of intersection
rename EmbeddingTest class to EmbeddingITest to improve clarity and consistency in naming conventions
added a native method ` startToolkitThread ` to check for the current thread before starting the thread to ensure that the thread is only started when necessary
add option to compress the bundle in parallel to reduce memory usage
do n ' t hide the surface if it ' s a window
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and consistency in file
added parameters for fullNodeHttpEnable and solidityNodeHttpEnable in multiple classes to enable HTTP requests based on configuration settings
added a new property ` service ` to ` GoogleCloudFirestoreTicketDocument ` and modified the ` GoogleCloudFirestoreTicketRegistry ` class to
refactor Generate class to improve code readability to enhance maintainability and readability of the code
updated the ` @ ScalarFunction ` annotation and added tests for handling null arguments in ` JsonFunctionsTest ` to ensure proper handling of null values and
updated BadgeRenderer and related classes to conditionally calculate width based on the DOTS _ ONLY flag to improve code readability and maintainability
[ hotfix ] [ runtime ] remove final from getconfiguration ( )
add a test for invalid excluded package name patterns in OgnlUtilTest . java to ensure that excluded package names do not throw an exception
updated device UDID assignment logic in AppleTest . java and added sdkName parameter in IdbRunTestsStep . java to ensure correct device
updated DefaultHttpClientFilter to use ProduceProcessorManager instead of InvocationType and modified test cases in TestDefaultHttpClientFilter to improve error handling and ensure
added null checks for mScript and mInvokeResetWAR in AllAppsView . java to improve code readability and maintainability
added a private static final boolean ` TEXT _ BURN ` and modified the conditional check in ` Utilities . java ` to ensure that the shadow layer
added Teardown and onetimeTeardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of table and view
added a line to retrieve the parser from the parsers in SecurityNamespaceHandler . java to improve flexibility in handling security parsers
updated the condition in BoundedLocalCache and added a new test for the fastpath method in BoundedLocalCacheTest to ensure correct handling of
refactor ` RawConnection ` to extend ` WebSocketConnection ` and implement ` flush ` methods in ` WebSocketAsyncConnection ` to improve connection handling and
added multiple test methods for soft assertions in SoftAssertionsPerfTest . java to ensure correct behavior of soft assertions in the soft testing framework
added a new constant TEST _ FAILURES _ EXIT _ CODE and updated execute method visibility in PythonRunTestsStep and ProjectWorkspace to enhance
added conditional logic to update the xAdvances array in GlyphLayout . java to include a markupEnabled flag to ensure proper handling of the first run
refactor score assertions in TestBooleanRewrites to use streams for better performance to improve code readability and maintainability by using Java Streams for
changed the method of obtaining the enum class from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` in TypeHandlerRegistry . java to
remove redundant check for playersocketconnection in updatemanager . flush ( )
added a boolean flag ` mStarted ` and modified the ` removeOnDrawListener ` method in ` Launcher ` and ` LauncherAnimUtils
updated multiple Java files including CheckIndex , BlockTreeTermsReader , BlockTreeTermsEnum , and FuzzyTermsEnum to improve code organization and maintain
replaced specific imports with wildcard imports and added a check for NOT _ APPLICABLE in ReplicaAssigner . java to improve code
updated the MEDIAPARSERV2 property from false to true in RendererConfiguration . java to ensure proper media validation based on the media parser ' s
[ aop ] add support for interceptor type in aop proxy
added assertions to verify the existence of a table and partition in FolderPermissionBase . java to ensure that the table does not exist in the database
do n ' t publish status if provider be not in registration state .
modify the randomness calculation in PastelColor . java to use a fixed color base of 180 to ensure consistent randomness by using a consistent
refactor ScriptEngineFactory to improve code readability to enhance maintainability and readability of the code
refactor image handling in HolographicViewHelper to use a new method for creating original and outline bitmaps to improve code readability and maintainability
refactor request method handling in CloudClient . java to use String . fromString instead of String . equals to improve code readability and maintainability by
refactored multiwordpreprocessor . gettag ( ) to use an inferpos ( ) method .
[ hotfix ] remove unused import from iochannelutilstest
added a conditional check for HivePassThroughOutputFormat in the class loading logic to ensure correct class loading based on the HivePassThrough format
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated the boundary check in DOMBuilder to include the start index to ensure proper handling of negative input values
updated method calls to use ` HierarchicalUndirectedGraph ` instead of ` ConnectedComponentUI ` and added imports for ` HierarchicalUn
camel - 14497 : camel - translate2 - verifier : provide a good error message when a service be not support in a region
added a new file ` TestStaticInterfaceMethodHandling . java ` that implements ` InterfaceWithStaticAndDefaultMethods ` and provides a default method for
camel - 14497 : camel - default - keyselector should resolve property placeholders for password .
remove instanceof check from catch block in logresolverbean
refactor multiple security - related classes for consistency and clarity to improve maintainability and readability of the codebase
updated JGit version from " 1.0 . 0 " to " 1.0 . 1.100 - r " and added sorting functionality to
refactored client key retrieval logic in HttpClientIntroductionAdvice . java to improve clarity and functionality to enhance code readability and maintainability by
[ springframework - integration - transformer ] add support for transformer .
updated BACK _ FACTOR and BACK _ FACTOR constants and added REWIND _ TIME constant in ResumeObj . java to
added a method ` isScrollWheeling ` to ` CodenameOneImplementation ` and overridden it in ` Button ` and ` JavaSEPort `
updated usage formatting in UtilityCommands and removed command permission check in DocumentationPrinter to improve readability and maintainability of the code
updated attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in naming conventions
removed duplicate setSeqFiles and setUnseqFiles methods from CrossSpaceCompactionResource and updated references in RewriteCrossSpaceCompactionSelector to streamline
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
do n ' t sync the projet ruleset when update the projet ruleset
remove unnecessary synchronized block in abstractsootfieldref . getfields ( )
[ io . micrometer . core . instrument . elastic . elastic . meter . index . index . index . indexbuilder . indexbuilder . tag
added listeners and job length estimate methods to IController and updated related classes to use IController instead of AbstractController to enhance functionality by allowing users to
add a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to validate rendering behavior with a large horizontal rule
replaced ` System . out . println ` with ` TTY . println ` in TypeSystemTest . java and PartialEscapeAnalysisPhase . java
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
[ java ] fix incorrect framelength check in loginspector
added variable assignments for zeroValue and defaultValue in IntFloatMap and IntIntMap classes to improve code readability and maintainability
refactor icon setting logic in ImageDownloadService to use a Runnable for thread safety to improve code readability and maintainability
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerExceptions when the demand is null
removed the native method ` hasNextSibling ( ) ` from multiple node classes to streamline the code and improve readability
fixed - nullpointerexception in redisdistributedmapcacheclientservice
do n ' t log mobfilecache initialization log when mobfilecache be disable .
updated test cases in ColConvCCMTest . java to improve test coverage and maintainability
refactor variable declarations in Check . java for clarity and consistency to improve code readability and maintainability
pdfbox - 2452 : add default constructor for PDFtextstripperbyarea
updated the type check from ` Float . toString ( ) ` to ` jsonData . asString ( ) ` and added a new class ` X
added a return statement to the GenericFileConsumer class to improve code readability and maintainability
replaced direct call to delegate . allInvoked ( ) with EventQueue . invokeLater ( ) in bug6638195 . java to improve thread safety
updated the calculation of the maximum text message size from getMaxBinaryMessageBufferSize ( ) to getMaxBinaryMessageSize ( ) to ensure consistent handling of binary
updated arithmetic operations in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to ensure correct processing of steeringValue in both TestAttach
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using ` MessageDigest .
replaced instances of ` Date ` and ` Timestamp ` with ` LocalDate ` and ` LocalDateTime ` in ` JdbcSerDe . java ` to improve
update version from 2 to 3 and modify metadata handling in ParseData . java to ensure compatibility with newer versioning and improve performance
updated FlywayAutoConfiguration to use ConditionalOnBean and added EntityManagerFactoryFactoryBean and LocalContainerEntityManagerFactoryBean to ensure proper configuration of EntityManager
added ` sorted ( ) ` method to ` ClassesImpl . java ` to enable sorting of classes in the application
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer class for improved performance to enhance performance and readability of the code
refactor method invocations in TestCloseScope0 . java for improved clarity and consistency to enhance code readability and maintainability by using a more
updated test timeout from 500ms to 5000ms in AdaptServerSocket . java to allow more time for test execution
updated test cases in CaptchaChannelProcessorTests . java to improve test coverage for channel processing
added a condition to update the owning collection in the MetadataImport class to ensure that the item ' s owning collection is correctly resolved and updated
added retry logic to manage the maximum number of retry times in the registry cache file saving process to ensure that the cache file does not exceed the maximum
updated the instantiation of TrackingDirectoryWrapper from mergeDirectory to directory to ensure the correct directory is used for tracking directories
pmd : add test for unusedimportsrule and fix a bug in ruletst
added validation for insert overwrite queries on bucketed Iceberg tables in HiveIcebergStorageHandler and implemented a test for it in IcebergTable
updated assertions in BootstrapTests to use a default identity zone configuration and added a check for legacy SAML keys to ensure compatibility with the default SAML configuration
updated method names from ` isAnonymousOrLocal ` and ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and added a
[ hotfix ] [ mailer ] remove synchronized from getaddressvector ( )
removed WAITING _ FOR _ LINE _ COMMENT and WAITING _ TO _ LEAVE _ BLOCK _ COMMENT from Comment
added IOException handling to the release method and created a new LockReleaseFailedException class to improve resource management and ensure proper resource management during lock release
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align the package
added a conditional check for unary operator in SpelExpressionTransformer and simplified operator handling in LiteralNode and OperatorNode to improve code clarity and maintainability
updated ByteBuddy initialization to use TypeValidation . DISABLED instead of TypeValidation . DISABLED to ensure compatibility with different type validation settings
replaced instances of ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` to simplify type handling by using a more
updated LockModePessimisticReadWriteIntegrationTest to throw PessimisticEntityLockException instead of a hardcoded value to improve error handling
removed the ` LogFile ` parameter from the ` setSystemProperties ` method and updated its usage in ` LoggingApplicationListener ` to simplify the method
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 24448 - fix
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants and updated MicroserviceFactory to use
updated method call from ` proc . getName ( ) ` to ` proc . getBeanName ( ) ` in ` ToeThread . java ` to
changed DB _ PATH _ REGEX and DB _ PREFIX to be static and updated database deletion logic to ensure compatibility with database configurations and ensure
replace numberNew return with HomeDataSource . getInstance ( currentAccount ) . getUnreadCount ( currentAccount ) to ensure accurate retrieval of read count
added a new test method ` testVirtualThreadPoolPreview ` and modified the ` testVirtualThreadPool ` method to include the ` @ DisabledForJ
added a limit parameter to the ` getAllOrder ` method and updated its usage in ` Wallet ` and ` MarketOrderIdListCapsule
added null check for the user before retrieving the settings in HomePage . java to avoid potential NullPointerExceptions when accessing user settings
updated file path handling in LocalFileSystem and added a new test method in LocalFileSystemTest to ensure correct handling of relative wildcard paths in the local file
added maximum width and height settings to the instance ' s bounds in ComponentBuilders . java to ensure that the instance reflects the maximum size of the
updated CommonsHttpSolrServer to set connection manager timeout and added a deprecated method for setting connection manager timeout to improve clarity and maintainability of the code
removed unused exception handling in PrintController . java to streamline error handling by eliminating unused exceptions
replaced ` Optional . of ` with ` map ` in ` CrateType . java ` and added assertions in ` RustBinaryIntegrationTest . java
added methods to check for numbers with separators in SpellChecker . java and created a corresponding test in SpellCheckerTest . java to enhance spell checking
corrected a typo in the constant name from " HelloWorld . message " to " HelloWorld . message " to improve code readability and
refactored file action handling in FileDisplayActivity to utilize a new method for loading file actions to improve code readability and maintainability by
added a daemon flag to the puller in ReplicationHandler and modified logReplicationTimeAndConfFiles method call to handle exceptions to improve error handling and
corrected a typo in the update method call in StoreCachedTest . java to improve code readability and maintainability
updated the constructor of StreamerLoader to use the Materials instead of the materials variable to improve clarity and functionality of the constructor of StreamerLoader
added new font information to the DependencyBank . java file and updated related code to enhance the application ' s ability to generate BitmapFonts from font
added calculations for recycled views in AppsContainerRecyclerView for improved layout management to enhance user experience by allowing recycled views based on device profiles
added a new test method ` testBuildingBinariesSeparately ` in ` AndroidBinaryCrossCellIntegrationTest . java ` to verify the behavior of
fix a bug in examplebaritonecontrol when there be no location for mining .
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance code readability and maintainability by
added null handling logic in FilterOperatorUtils and a corresponding test in NullHandlingEnabledQueriesTest to ensure correct handling of null values in the filter operator
added validation checks for bootstrap method parameters in JDynamicInvokeExpr . java to ensure that the bootstrap method ' s signature is valid before proceeding
[ java ] fix test failure in jmshttpjmstest
removed redundant calls to clearFormatters ( ) in CucumberInstrumentation . java to improve code readability and maintainability
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` in ` AbstractRegisteredService ` and updated
added a condition to adjust workspace labels based on cell size and icon text size to ensure workspace labels are only adjusted if necessary
updated assertions in ReplicationFactorTest to use assertRf for consistency to improve readability and maintainability of the code
[ gr - 13232 ] ensure llvm context be initialize during pre - initialization .
removed the @ Ignore annotation from ChaosMonkey tests to clean up the code and improve readability
replace RuntimeException with JsonIOException in Gson . java to improve error handling by using a more general JSON exception
replace Integer . valueOf ( ) with Integer . parseInt ( ) in VisualScoreTagTest . java to improve code readability and maintainability by using
updated error messages in ` Copy . java ` for clarity and consistency to improve clarity and maintainability of error reporting
refactor segment name validation to use a new method ` isHighLevelConsumerSegmentName ` to improve code readability and maintainability by centralizing
added methods to startActivity and startActivityForResult in ShadowFragment . java and corresponding test cases in FragmentTest . java to ensure proper handling of fragment activity
replace DateTime . now ( ) with clockReader . getCurrentTime ( ) in DueDateBusinessCalendar . java to ensure accurate time retrieval based on clock
updated the return statement in TargetCpuType to include " - target " and " - x86 _ 64 - none - linux - android "
added a method to delete all files in FileDataStorageManager and modified ManageAccountsActivity to utilize this method to improve file deletion functionality
updated the command - line argument from " - ? " to " - h " in SchemaCrawlerCommandLine . java to improve clarity of the command -
added a new method ` createSuiteDescription ` to ` Description ` and updated its usage in ` TestDescriptionTest ` to ensure unique IDs are
refactor decoding logic in SnapshotThread to use decodeBarcode instead of decode to improve code readability and maintainability by using a more descriptive
removed the ` sources ` parameter from the ` BuckTarget ` constructor and updated related imports to simplify the constructor and improve code clarity
added unit tests for range handling in GWCZoomContextFinder to ensure correct functionality and functionality of the ZoomContext class
added a new constant ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` and modified the dependency tracking logic in ` JRuby
updated method call from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
[ hotfix ] [ table - planner - planner - planner - java ] add more log for keyspace creation failure .
refactor image handling in WelcomeWindow to use caching for improved performance to enhance performance and maintainability of image management
updated tuner configuration handling to use a unique ID instead of a hardcoded value to improve clarity and maintainability of tuner configuration management
added HasTests interface to the ` AbstractShBinaryDescriptionArg ` interface and created a new test method in ` ShBinaryRuleIntegrationTest ` to enhance
added a new field " db : hsqldb " to the TestFilter class to include the " db : hsqldb " database information
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintainability
do n ' t materialize host exception if there be no stack trace
[ hotfix ] [ runtime ] do n ' t export jvmci to serviceloader when there be no provider
[ hotfix ] [ test ] add test for duplicatehandlerresolver in aggregateannotationhandlertest
[ flink - 20865 ] [ config ] [ fine - grained ] add fine - grained . shuffle - mode . all -
fix tick hook not be able to use material . field _ 151586 _ h
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
renamed ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` and ` GangliaReporter ` classes to improve clarity and
added a check for empty items in AppsContainerRecyclerView to prevent unnecessary processing when items are empty
added a conditional annotation for the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration . java to ensure that the bean name is
updated XMLLayout to use StringBuilder instead of StringBuffer and modified related methods to improve performance and maintainability of the code
added a new constant ` OMIT _ HEADER ` and modified ` NamedList ` , ` BinaryResponseWriter ` , and ` JSONResponseWriter `
updated the method to retrieve property names from ` getPropertyNumber ( ) ` instead of ` _ id ` in ` EscherProperty . java `
updated the method call to use ` Description . getBuildRuleType ( key ) ` instead of ` getBuildRuleType ( key . getSimpleName (
[ java ] make sure we modify the hierarchy before remove the method numberer .
added null checks for disputeId and depositTxId in TradeDataValidation . java to ensure robustness by preventing potential NullPointerExceptions
added hashCode methods to AbstractNamedObject and modified method signatures in DatabaseSchemaCrawler , DatabaseSchemaCrawler , and TableRetriever to include a add parameter to
added confidence type to sendTx in Wallet . java and updated WalletTest . java to use it in WalletTest . java to ensure
[ java ] use header . value ( ) instead of urivariables . contains ( ) for header .
add condition to check for conditions in CraftingHelper . java to ensure that conditions are processed only when conditions are present
hbase - 16464 hregion . close ( ) should log a warning when close a region
refactor length comparison logic in Credential . java for improved readability to enhance code clarity and maintainability by eliminating redundant checks
[ java ] fix checkstyle violation in clientconductor .
modified the destroy method to throw an InterruptedException instead of using reflection to improve error handling and prevent potential memory leaks
added Oracle support to the condition in TestDefaults . java to ensure compatibility with Oracle versions in the database
camel - 16286 : camel - mail - fix mail consumer to connect to the mail store if it ' s not connected
added token handling and error handling in the Parser class to ensure that more tokens are consumed in the query
[ flink - 24486 ] [ enum ] add enum value for ka , greek , gu , and gu
add a method to retrieve the data file in the Model class and modify the Voice class to handle both duration and F0 model types to enhance functionality
added emailDomain property and corresponding getter and setter methods to LdapIdentityProviderDefinition , IdentityProviderDefinition , IdentityProviderDefinitionTest , and IdentityProviderDefinition to
added configuration properties for read and connect timeouts in the ViewRegistry class to enhance flexibility in handling request timeouts
do n ' t call processdeferredconcepts ( ) if there be no concept link to save
added JUnit category annotation to RedisServiceRegistryTests to enable testing of Redis service registry functionality
added JUnit ' s @ ParameterizedTest annotation and updated method signatures in FindDeprecatedUses and FindDeprecatedUses classes to enhance test coverage and
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` to ensure proper rendering of the component
removed unused imports from multiple configuration classes to streamline code and improve maintainability
updated event signature handling in ContractEventTriggerCapsule , ContractEventTriggerCapsule , LogEventWrapper , and LogEventWrapper classes to
updated filter condition to check if the file name ends with " _ " instead of " contains " to ensure proper handling of session IDs in the
replace clearRect with fillRect and set the background color in MapView . java to improve visual consistency and maintainability of the rendering process
[ java ] fix rule compilation error in packagebuilder . compile ( )
removed unnecessary print statements in multiple Java files to streamline code and improve readability
added a condition to check if scoreDocs [ 0 ] is NaN before comparing scores to avoid potential NullPointerExceptions when scoreDocs [ 0 ] .
updated the initialization of oldKeys to use ` Set . copyOf ` instead of ` Set . copyOf ` to ensure consistent handling of entity keys in the
added zeroTime method to ColumnSnapshotGenerator and a corresponding test in MySQLIntegrationTest to ensure correct handling of date values in database operations
[ java ] replace ` takermultisig ` with ` offererbtc ` in contract .
updated Map < ? , ? > to use wildcards in multiple collector classes to enhance type safety and avoid potential NullPointerExceptions
[ drools - 13838 ] add test case for edit session model in multiple kbases example
updated the instantiation of HiveMetaStoreClient in AbstractRecordWriter . java to use ' this . conf ' instead of ' conf ' to ensure proper
added a condition to check if the modalness equals the modalness to prevent unnecessary processing when modalness is equal to the modalness
added unit tests for codec capabilities in ShadowMediaCodecListTest and implemented global settings method in ShadowMediaCodecList to ensure correct handling of codec capabilities
[ # 5460 ] fix confirm button focus issue ( # 5460 )
added validation for width and height in SunVolatileImage and improved error handling in XRSurfaceDataProxy and XRPMBlitLoops to ensure
updated the group separator in FormatData _ uk . java from a dot dot dot dot dot dot dot dot dot dot dot dot dot dot dot dot
replaced the ` _ loops ` array with ` AtomicInteger ` in ` AsyncStressTest . java ` and ` StressTest . java `
added image and quality display functionality to AchievementsFragment and LeaderboardFragment to enhance user experience by providing feedback when no beta images are available
added access and description properties to the SearchMethodVisitor class to ensure proper handling of context access and descriptions
added sleep calls for SQLException and InterruptedException in IoTDBInsertWithoutTimeIT . java to improve error handling and prevent potential memory leaks
refactored the handling of the durSec variable in DLNAResource . java to improve readability and maintainability of the code
removed the ' required ' attribute from the ` @ XmlElement ` annotation in ` BatchResequencerConfig ` and ` StreamResequencerConfig `
[ hotfix ] [ table ] do n ' t use active txn in tablereader . readtransactions ( )
remove keymanagertype from ssl . keymanager . algorithm and use security . ssl . keymanager . algorithm
refactor ` getSingleSourceApplicableTest ` method to use ` TreeVisitor < ? , ExecutionContext > ` instead of ` JavaIsoVisitor `
do n ' t allow repeat event to be trigger if a repeat event be not present .
rename access specifier . package _ private to accessspecifier . none
refactor method names and improve error logging in Check . java to enhance code readability and maintainability by using more descriptive names
updated the assignment of stripes and stripe statistics in OrcInputFormat . java to ensure consistent retrieval of stripe statistics based on the orc reader
added a null check for ` ex ` in ` JCache . java ` to prevent potential NullPointerException when ` ex ` is null
updated the next URL from HTTP to HTTPS in MyhentaicomicsRipper . java to ensure the correct URL is used for the
added command line argument handling in App . java to display the current version to enhance user experience by providing clearer information about the current version
updated method call from ` split ` to ` splitTokens ` in ` Sketch . java ` to improve clarity and consistency in method naming
added keyboard support in ConsoleActivity and implemented input connection handling in TerminalView to enhance user experience by allowing text editor interactions
updated the type of ` hq ` from ` HitQueue ` to ` ScoreDoc ` in ` ParallelMultiSearcher . java ` to improve type
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when accessing the owner connection address
camel - 16497 : camel - jbang - add support for headersmapfactory in camel context
updated closing brace formatting in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
jmsoutboundgateway : add support for configuration of jms queue and queue for outbound gateway
updated the parameter from ` i + 1 ` to ` i2 ` in the ` expecting ` method to correct the index used in the ` expecting
added null checks and improved error logging in AbstractScriptProcessor and InvokeScriptedProcessor to enhance error handling and provide clearer error logging for script engine
added org . postgresql . PGStatement and org . postgresql . PGStatement to Proxy . newProxyInstance calls to ensure compatibility with the correct package
[ hotfix ] [ test ] fix cassandraiotest failure
changed log level from error to warn in AtomicRemainder . java to improve logging clarity by using a more descriptive log level
[ hotfix ] [ table - planner - planner ] fix aggressive fully expiration
fixed - rblockingdeque . toseconds ( ) method call in rblockingdeque and rqueue . toseconds ( )
[ hotfix ] [ runtime ] remove unnecessary format parameter in jobinspectcommand
refactor Engine class to improve code readability to enhance maintainability and readability of the code
replaced ` Stream . of ` with ` entrySet ( ) . stream ( ) ` in ` ChildHolder . java ` to improve code readability and
[ rocketmq - 4072 ] fix acl client test failure
corrected the spelling of " numIndexDims " to " numDataDims " in BKDWriter . java to ensure consistent
[ hotfix ] [ test ] do n ' t print stacktraces to stderr .
updated the parameter type from funN to lt in ExpressionNodeEvaluator . java to ensure the correct node is added to the list elements
removed the ` public ` modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor . java `
[ hotfix ] [ runtime ] fix typo in error message
removed the ` public ` access modifier from several methods in ` ItemWriter . java ` to simplify method visibility and improve readability
[ hotfix ] [ test ] fix roombahandlertest to use ` ` test ' '
imagenamesubstitutor : add tostring ( ) method to imagenamesubstitutor
replaced instances of ` FSDirectory ` with ` RAMDirectory ` in ` TestNorms . java ` to streamline directory creation by using a
added a static variable ` mLineHeight ` and modified the calculation of ` lineHeight ` based on the height of ` mDrawTextRectBuffer
refactor WalletAppKit class implementation to improve code readability and maintainability
remove hat . js parameter from oqlengineimpl . getinitstream
remove the chat transport menu item from the menu after remove it from the menu
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl ` classes
add null check for bsqblockchainexplorer in preferencespayload
added methods to retrieve and remove attributes in StandardSession and Session classes to enhance functionality for managing session attributes
added assertions to verify the ` found ` bean ' s name and long values in the ` TestDbJson _ List ` class to ensure that the
updated averages array initialization from pageSize to initialPageCount to ensure accurate calculation of averages based on initial page count
refactor BatchCommandLineLauncher class to improve code organization to enhance maintainability and readability of the code
added dataSource and transaction manager methods to BatchMetricsApplication to support HSQL database and transaction management in the application
changed the implementation of GlowrootLogHttpService from UnauthenticatedHttpService to HttpService to enable the use of the HttpService interface
added multiple calls to ` getGraphicsState ( ) . getNonStrokeJavaComposite ( ) ` and ` getGraphicsState ( ) . getNonStrokeJava
removed synchronized keyword from close methods in DocumentsWriter and added synchronization in DocumentsWriterPerThread to improve thread safety and ensure proper resource management
add support for multiplechoiceoptions and validationconstraint in uibinding
updated method calls from ` setReflectively ` to ` setReflectively ` for ` dexStore ` , ` dexSplitStrategy ` , and `
do n ' t update the stored copy of the save tree for a full save
refactor Affix and Dictionary classes to utilize a map of patterns instead of a String to improve flexibility and maintainability of the Affix class
updated the instantiation of ` krakenMakerFees ` and ` krakenTakerFees ` in ` KrakenAdaptersTest
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code and improve readability
refactor NBJavacTrees class implementation to improve code readability and maintainability
added a check for the data encoding in VectorizedPrimitiveColumnReader . java to ensure proper handling of unsupported data encodings
refactor logging conditions in HttpSolrCall . java for improved readability to enhance maintainability and maintainability of the code
added method to destroy the metadata service proxy in ServiceInstancesChangedListener . java to ensure that the metadata service proxy is properly managed for better management
fix infinite recursion in defaultentityqueryrepository . getlvlfilter ( )
added a null check for the changelog ID in the HubChangeExecListener message to improve clarity of error messages when the changelog is not registered
added a new Hashtable for HARDER decoding and improved error handling in AbstractBlackBoxTestCase . java to enhance code readability and maintainability by
changed return type of executeCompilation from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompileStep . java `
removed the ' numEvents ' variable and adjusted the loop condition in ObjectStore . java to simplify the loop logic for better readability and maintainability
remove unnecessary check for @ validated bean in validatedlocalvalidatorfactorybean
fix a bug in entityawareworldprovider . remove temporaryblockentities ( )
[ hotfix ] [ runtime ] remove unnecessary code in intrinsifyarraycopyphase
[ hotfix ] [ test ] remove unused logging from testcoyoteadapter
replaced ` WantedAnywhereAfterFollowingInteraction ` with ` WantedAnywhereAfterFollowingInteraction ` and removed ` WantedAnywhere
added null checks for account and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure proper validation of account and
do n ' t sort dspace command by default
chore : update java microgenerator to 1.0 . 2 , add eta and eta to workflows
refactor property setting for metadata properties in BaseSingleTreeBuilder . java to improve code readability and maintainability
updated AsmLoader to use the interface class loader instead of a hardcoded class loader to ensure compatibility with the interface class loader ' s class
pdfbox - 2576 : avoid npe when read stencil image with no initial point
updated Java2TypeScriptTranslator to conditionally export namespaces based on definition scope to ensure proper namespace management based on definition scope
replaced EmptyServerHandler with AbstractHandler in HttpClientTest . java to ensure proper handling of request and response streams
removed an array of string arrays from addListener calls in HelloInput . java to streamline listener registration for better readability and maintainability
added a null check for getLhs ( ) in AbstractSqmPath . java to retrieve the root of the SqmPath instance
updated package declarations for CreateFolderTest , DeleteFileTest , RenameFileTest , and RenameFileTest classes to improve organization and clarity of the test
refactor BufferedImage initialization and filter logic in AwtCanvas . java to handle BYTE _ INDEXED and GRAYSCALE _ INVERT
guacamole - 116 : add startuplibgraal ( hotspotgraal runtime ) to the compiler configuration .
[ hotfix ] [ test ] remove dataflowportabilityapisupported from pardotest
fix npe in mockshingprotectionservicev1impl when response be null
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization and serialization of JumboEnumSet and Regular
refactor CallStack class to improve code readability to enhance maintainability and readability of the code
log a warning if the max size of a map do not allow any data in the map
updated error messages to use " LST " instead of " AST " in multiple Java files to improve clarity and consistency in error reporting
updated calculations for scoreables and scoreables in ` ThreadedAcousticScorer . java ` and ` ScoreableJob `
http : / / issues . apache . org / jira / browse / amq - 461 - fix nettyhooks . java to return
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLeniumTest .
added makeString methods to ParallelIterable , RichIterable , AbstractMultiReaderMutableCollection , AbstractMultiReaderMutableCollection , AbstractMultiReaderMutableCollection ,
replaced the constant ` Ordered . HIGHEST _ PRECEDENCE + 1 ` with a constant ` DEFAULT _ ORDER ` in ` O
added a new Predicate < ProposedWeakAssociation > parameter to the WeakAssociationsAnalyzer constructor and updated related tests to include it to enhance the
refactor Deflater class to improve performance to enhance performance and readability of the code
added error handling for IOException in Font . java to ensure proper resource management and prevent potential runtime exceptions
added null and empty check for content in VersionTypeBinding . java to prevent potential NullPointerExceptions when content is empty
removed the ` result ` variable from the ` loadAttractionsFromLocation ` method and updated its usage in the ` onPostExecute ` method to
use case - insensitivity instead of case - insensitivity
[ bouncycastle ] [ opensh ] make openshkeyspec . auth _ magic public
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a ` boolean isBind ` parameter and updated related logic accordingly to enhance user experience
updated import statements and modified the caching mechanism in InheritanceCacheTest . java to improve code readability and maintainability by using wildcard imports
updated import statements in ConnectOAuth2RequestFactory and added a method to retrieve user approval requests in TofuUserApprovalHandler to improve code clarity and
fix influx naming convention ( # 645 )
fix : add dump ( string , double ) method in quickfix .
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure consistency in cookie handling
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated its usage in the ` Subject ` class to improve
added a clear all button and a click listener to the OverviewActionsView and RecentsView classes to enhance user experience by allowing users to clear
updated ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to handle existing cluster version and added null check for existing CSVer to improve flexibility in
remove memoryleaktest since it ' s no longer needed
updated the return statement in ServletTester . java to handle localhost to ensure correct port retrieval based on the host ' s hostname
added a conditional check for enabling MvDWAPI in ServerListener . java and updated related settings in Settings . java to enhance user experience by
[ hotfix ] [ test ] add assertclustersizeeventually method to abstractpartitionassignmentscorrectnesstest
added a SingletonHolder class and modified FFIProvider initialization to support JNA support to enhance FFI provider management by allowing the use of JNA
tika - 116 : add test for hierarchical file list ( tika - batch - config )
added null checks for objectToSave and collectionName in MongoTemplate . java and updated related tests in MongoTemplateTests . java to ensure proper handling
change position position from NODE _ ITERABLE to NODE _ LIST in NodeClass . java to ensure correct positioning based on direct input and success
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and updated related methods in ` BithumbTradeServiceRaw `
updated logging statements to include segmentName in RealtimeSegmentDataManager . java to improve clarity and consistency in logging information
replaced hardcoded maxParallelThreads with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to
replace ArrayList with CopyOnWriteArrayList for headerReaders , dataReaders , and readers in FixedByteMVMutableForwardIndex and FixedByteSV
refactor multiple dictionary - related classes for consistency and clarity to improve maintainability and readability of the codebase
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions when destBuffer is null
camel - 14497 : camel - msv : fix the unit test that fail for unknown reason
updated condition from ` = = ` to ` > ` in ` DelegationService . java ` to ensure correct validation of the ` beginCycle `
updated RandomValueStringGenerator size from 6 to 10 in JdbcExpiringCodeStore . java and adjusted assertions in CodeStoreEndpointsTests . java
added type check for UniqueConstraint in StandardObjectChangeFilter to ensure correct matching of UniqueConstraint instances
refactor description handling in MediaDetailFragment to use HashSet for improved performance and readability to enhance performance and maintainability of the code structure
catch ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve error handling for ArrayIndexOutOfBoundsException and ClassCastException
added ` withReferenceFilter ` methods to ` ListImagesCmd ` and ` ListImagesCmdImpl ` classes , and updated filtering logic in ` List
camel - 14499 : camel - jms - add ` ` excludeproperties ' ' property to allow ` ` bridgeerrorhandler ' '
added conditions to check for " # ifndef " and " # endif " flags in OpExclusionUtils . java to ensure proper handling of
added return statements to the DatabaseCommand class to ensure proper handling of database operations
updated Politician instances from " blair " and " chirac " to " Prime Minster of Cheeseland " and " Omni
camel - 14497 : camel - beanshell : use commons - lang3 to check if initfile be not null or empty
updated the port assignment logic in RestletComponent . java to use the current port instead of a hardcoded value to ensure proper handling of port
removed unused imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline code and improve readability
added a system property for maximum Hive query max length in QTestUtil . java and removed unnecessary overridden configurations in SessionState . java to improve
changed access modifiers of userName and securityMgr in WebServer . java and added sendServerVersion method in WebServer . java to enhance encaps
updated method names from " writeKafka " to " hdfsSink " across multiple files to improve clarity and consistency in naming conventions
updated the condition for setting the spark app name in HiveConf and added appName retrieval in HiveSparkClientFactory to ensure that the spark app name
corrected a typo in the variable name from " whiteName " to " includedName " in ManagedClassFactory . java to ensure consistency in
( chore ) camel - selenium : add maximisewindow to allow user to restore the window .
updated file paths and methods in multiple classes to include main cell root and cell Buck - out information to improve clarity and functionality of file path resolution
added an assertion to check for the message " entity expansions " in TestXMLEntityExpansion . java to ensure that the error message contains " entity
updated the calculation of table offset and length in TrueTypeFont . java to use bitwise operations based on the buffer ' s offset and length values
removed the customize method from DirectMethodHandle . java to streamline the code by eliminating unnecessary assertions
refactor line buffer initialization and coordinate checks in LineChartRenderer . java to improve code readability and maintainability by using a more descriptive
refactor the handling of flavors in AndroidBinaryDescription . java to use a loop for loops to improve code readability and maintainability by
updated buffer index assignment from offset to i in LwjglGL11 . java to ensure correct indexing for buffer generation
added two new classes , PropertySuper and PropertyResolutionFail , and TestClassResolutionFail , to implement and validate property resolution to ensure proper error handling and
added a condition to check if the SHUTDOWNHOOK _ ENABLED is enabled before removing the shutdown hook to ensure that the shutdown hook
updated the parameter type from ` url ` to ` FilterChjainProxy ` in the ` VirtualFilterChain ` class to improve clarity and consistency
use array . elements ( ) instead of collections . sort ( ) in percentileaggregationfunction
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified query type analysis in QueryTypeAnalyser to ensure proper handling of
set baseType to null in DatabaseInfoRetriever and set literalPrefix and localizedTypeName to null in MutableColumnDataType to ensure proper initialization of the base
updated link tags in multiple Java files to include the ` @ link ` annotation to improve code readability and maintainability
[ hotfix ] [ runtime ] make instance of evaluatorfactory final
corrected the spelling of " -- target - platforms " to " -- target - platforms " in multiple files to improve code readability and maintain
added sound effect handling in AllAppsView to enable playback of sound effects in the AllAppsView class
changed the exception type from Exception to IOException in the main method to ensure proper handling of IOException during the main method
added functionality to enable granularity for left axis in BarChartActivitySinus . java to enhance user experience by enabling granular
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by centralizing version comparison logic
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS alias support to ensure compatibility with different operating systems and
added ` close ( ) ` methods to ` Connection ` , ` JsonAsyncHttpPinotClientTransport ` , and ` JsonAsyncHttpPinot
[ java ] use queue instead of lock in mockappender . await ( )
[ beam - 4142 ] improve error message when resource be a directory ( # 4142 )
removed unused static imports from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability
remove duplicate unbind handle call in itemserviceimpl . unbind ( )
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the code
removed conditional checks for mDownHitTarget in OtherActivityTouchConsumer . java to simplify the condition for better readability and maintainability
refactor button handling in NavbarButtonsViewController to use configuration for dark theme to improve code readability and maintainability by reducing redundancy
updated abort message to throw an exception instead of aborting to improve error handling by providing a clearer error message
updated byte array handling in ClassWriter . java to include refKind and memberIndex variables to improve clarity and maintainability of the code
added BlockFormattingContext parameter to several findBox and findElementBox methods to enhance functionality by allowing customization of block formatting context
refactor WorkerProcess and WorkerShellStep to use a try - finally block for error output parsing to improve error handling and provide clearer error messages
added null checks and error handling in CheckedListReplaceAll and CheckedListReplaceAll classes to ensure proper handling of null operators and improve error reporting
added a new ` _ writeCallback ` variable and modified the ` fillInterested ( ) ` method in ` SslConnectionTest . java `
added listener registration and removal methods to DeviceFlag and FeatureFlags classes to enhance listener management and ensure proper handling of device configuration changes
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to the GatewayRSocket integration test
removed the import of MalformedURIException from StandardRequestHandler . java to streamline the code by eliminating unnecessary dependencies
added a javascript executor to focus input in the instructor feedback edit page to improve user experience by providing focus information
removed unnecessary synchronization in KrakenStreamingTradeService . java to improve code readability and maintainability
updated print statement from ` System . err ` to ` System . out ` in ` ChangeableUrls . java ` to correct the error message
added a ` randomAccessRows ` parameter to the ` SparseRowMatrix ` constructor and updated related constructors to utilize it to enhance flexibility in
volume : do n ' t delete volume if poolid be null
refactor input stream initialization and path handling in Utilities . java to improve clarity and maintainability of the code
[ beam - 14424 ] fix import of guava in udftestprovider . java
[ hotfix ] [ runtime ] reset profilerclient internal state in memorycallgraphbuilder
[ java ] fix npe in conferencechatmanager . getchatoperationset ( )
add a check to ensure that a file can be write to a file before save .
added a new ` FolderSyncActivity ` class and integrated it into the ` DrawerActivity ` and ` FileDisplayActivity ` to enable synchronization of
[ hotfix ] [ test ] make sequentialchannelstatereaderimpltest more robust
fix ( latin ) : add ` ` % ' ' to Spanishtreenormalizer
updated the method for appending point values in SimpleTextBKDWriter to use getPackedValueSlice instead of pointValue ( ) to improve
added LocaleRandomizer and its corresponding test class LocaleRandomizerTest to facilitate randomization of locale values in the application
added test cases for the " x - font - printer - metric " and " x - font - type1 " types in TestMimeTypes .
updated versions in Installer . java and AutoUpgrade . java to include a new version of " 8.1 " to ensure compatibility with the latest version
reformatted the invocation of the privileged action in TCPTransport . java to improve code readability and maintainability
updated the read timeout logic in Http2AsyncParser . java to include a default value of 0 to ensure the read timeout is set to zero for
updated the default delay value from 120 to 600 for WATCHER _ INITIAL _ DELAY from 120 to 600 to increase the default delay
corrected a typo in the error message in SelectStatement . java to ensure correct usage of the previous column name
added date formatting for custom fields in ThirdEyeJiraClient . java to enhance date formatting capabilities for better user experience
refactor priority generation to use a new ` PriorityGenerator ` instance to improve code readability and maintainability by centralizing priority generation logic
[ java ] do n ' t check the length of the whole class if it ' s not enough for scalar replacement .
added DATE _ TAKEN to the projectionTest and folderSortOrder variables in MediaProvider . java to ensure compatibility with the latest MediaStore features and
corrected the order of parameters in drawImage calls in TexturePacker2 . java to improve code readability and maintainability
refactor JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to use ServletContextHandler instead of FilterHolder to improve code clarity and maintainability
added shutdown calls for validateSignService and trxHandlePool in Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper cleanup
added the ` RawJsonRequestBody ` annotation to ` JaxrsSwaggerGeneratorContext ` and created a new ` RawJsonStringMethod ` annotation to
added a new method ` newTarget ` to ` LoggerUtils ` for creating a ` Target ` instance to enhance logging capabilities by allowing customizable target
replaced ` ListBeanContainer ` with ` ArrayList ` in ` BeanContainer ` and added a new test class ` BeanContainerTests ` for testing to
updated the metric metric from ` blockCountHitPercent ` to ` blockCacheCountHitPercent ` in ` TestMetricsRegionServer . java ` to
camel - 14497 : camel - cache - cache should release file input stream when exchange be complete .
[ teltonika ] set the device id for the position in the teltonika protocol decoder
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` in ` HybridProjectBuildFileParser . java `
added a null check for the operator in JCAssignOp and created a new test class FailOver15 with a test case to ensure that the operator
added a boolean flag ` enableAccountHandling ` to ` BaseActivity ` and modified the onCreate method to conditionally call ` mixinRegistry ` based on
fix a bug in the isochroneresource . findmainconnectedcomponent ( geometryfactory , point )
added a ` path ` parameter to the ` DrillViewTable ` constructor and updated related method calls to include it to enhance functionality by allowing path
added configuration options for pooled byte buffer allocators in PooledByteBufAllocatorL . java to enhance performance and maintainability of pooled byte
updated array type checks from double [ ] to short [ ] in ObjectInputStream and added a new CloneArray class for testing to improve type safety and
added a new configuration variable for the LLAP _ IO _ THREADPOOL _ SIZE in HiveConf and updated executor initialization in LlapIo
added conditional checks for Java spec version 8 and 11 in SecurityServicesFeature . java to ensure compatibility with Java 8 and 11 compatibility
updated latitude and longitude range checks in LatLonGrid . java and added a new test for growing a polygon in TestLatLonGrid . java to improve
add invisibilityofelementwithtext ( ) and refreshed ( ) method to expectconditions
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its implementation to include it to enhance functionality by allowing additional
added a new test method ` reflector _ getOuterClass ` in ` ReflectorTest . java ` to verify the correct behavior of the `
added " auto _ generate _ android _ facet _ sources " configuration to ` ConfigIgnoredByDaemon ` and ` IjProjectBuckConfig `
updated logging messages in HubChangeExecListener to include the message to improve clarity of error messages for better debugging
added properties property to the Link class and corresponding getter and setter methods to allow dynamic property resolution of quick links based on properties
removed @ EqualsAndHashCode annotations and added a toString method in YamlConfigFileDTO to streamline code and improve readability
updated generic type parameters from ` < > ` to ` < ReqT , RespT > ` in ` SimpleForwardingServerClientCall
refactor forName methods to accept a caller - sensitive adapter for class loading to enhance flexibility in class loading by allowing specific caller - sensitive adapters
updated import statements and method calls from ` isEmptyOrNullString ` to ` is ` in ` RequestItemRepositoryIT . java ` to improve code read
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management by using ` ThreadPoolExecutorEx `
changed the access modifier of the ` setSecurityContextAccessor ` method from package - private to public to allow access to the ` setSecurityContextAccessor
updated imports and modified method signatures in TimeStepdefs . java and Transformer . java for better clarity and functionality to enhance code readability and
modbanners : add spark _ isolated , spark _ recessive , spark _ recessive , and spark _ recessive to banner .
updated the ` createProxy ` method to use ` getUri ( ) ` instead of ` ExchangeSpecification ` across multiple classes to improve proxy creation by using
removed unnecessary print statements from RecordGenerator . java to streamline output for better readability and maintainability
[ flink - 15486 ] [ kafka ] fix auto commit test for kafkaconsumeroffsetrepositoryresumetest
removed unnecessary lock release and updated output statement calls in LoggingExecutor and StandardLockService to streamline lock management and improve code clarity
added @ SuppressWarnings ( { " unchecked " , " rawtypes " , " serial " } to AbstractAuthorizeTag and AuthorizeTagCustomGranted
fix race condition in database . closefiles ( ) and database . sync ( )
auto - config - maven - plugin : add support for mutable property in auto - configuration
updated ticker parameter from ' baseSymbol ' to ' counterSymbol ' in VirtExMarketDataService . java to ensure accurate ticker retrieval based on the
camel - 14497 : fix the build error of camel - support - dump
replace UUID . randomUUID ( ) . toString ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to
[ hotfix ] fix concurrentmodificationexception in defaultjobparametersconverter
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
[ hotfix ] [ grid ] set height scale to 256 for FractalHeightMapGrid
updated equality check in SecurityConfig to use ` equals ` instead of ` equals ` for ` String ` to ensure correct comparison of ` securityString1
updated the default value of dumpPartitionId from " dump - partition - id " to " dump - partition - id " in StdoutSink . java
added test cases for TronTXOutput and TronTXOutputs in UTXOSetTest . java to ensure correct behavior of Tron
[ java ] fix unused assignment and unused local variable name check in java 9
pdfbox - 2841 : avoid npe when add a new object to a list of array .
added a new test for overriding previous job parameters in JsrJobOperator to ensure correct handling of job restart parameters in JsrJobOperator
added a boolean field ` disallowBatchOnCascade ` and its getter method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform `
removed redundant assignment of principal variable in JaasAuthenticationHandler . java to streamline code and improve readability by eliminating redundant code
replaced MDCLoggingContext . setCore ( core ) with ExecutorUtil . newMDCAwareFixedThreadPool for core closure to improve thread management and ensure proper
added null check and visibility setting for mActionsView in RecentsView . java to ensure mActionsView is visible only when mActionsView is
refactor JobParameters initialization in RunIdIncrementer . java to use a conditional assignment to improve code readability and maintainability
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added multiple assertions to verify the number of matched devices in SchemaRegionTest . java to ensure correct functionality of the matched devices retrieval process
add run ( runnable ) method to metricseventbus # run ( runnable )
added a null check for max in EigenvectorCentrality . java and created a new EigenvectorCentrality
updated registry port handling in LookupIPv6 . java to use a dynamic port instead of a hardcoded value to improve code readability and maintain
updated vertex colors and colors in GeometryGenerator to use UnsignedBytes for clarity and consistency to enhance code readability and maintainability by centralizing vertex
set amplifier to 0 instead of 2 in blockentitybehaviour .
refactor TubeCalc class implementation to improve code readability and maintainability
disable http client configuration by default .
updated type parameters from List < Class > to List < Class < ? > > and added sanity checks in DefaultValidator . java to enhance type safety
updated annotations in bug8057791 . java and added a timeout value of 8163161 to improve test coverage and ensure proper timeout handling
make the thread daemon to allow speedment applications to exit via main method completion
fix a bug in the lexicon ' s build number when the version be graal .
added a call to ReflectionCheckLinker . checkReflectionAccess in JavaAdapterFactory . java to ensure proper access control during reflection access checks
[ java ] add ` ` lazysessioncreation = true ' ' to some test
added a recordReader parameter to the initIOContext method in CombineHiveRecordReader and modified related classes to include it to enhance the handling of
deleted several ClassLoaderHolder , LoaderManager , and VerticleManager classes to remove unused code to streamline the codebase
added a new method ` configurationChanged ` in ` FileStore ` and modified file existence checks in ` JavaLanguageServer ` and ` ScanClassPath
added a try - catch block around registerSessionCallback and unregisterSessionCallback calls in PackageInstallerCompatVL . java to handle potential exceptions during session
updated index creation paths in TestBackwardsCompatibility . java to replace " org / apache / lucene / index / index . cfs " and "
added a new method ` createAndStart ` to ` AkkaRpcServiceUtils ` and modified the way ` AkkaRpcService ` is instantiated to
[ hotfix ] [ test ] increase mapreduce . map . maxattempts to 3 in testexportsnapshot
pdfbox - 2671 : remove unnecessary null check for afmstandard14 and set nonsymbolic to true
added a new test class ` SslConnectionTest ` to validate SSL connection closure to ensure proper resource management and prevent potential memory leaks
added validation for IPv4 and IPv6 addresses in InetAddress and NetworkInterface classes to ensure proper handling of IPv4 and IPv6 addresses
added a new test method ` testDateSerializationInCollection ` to ` DefaultTypeAdaptersTest ` to validate date serialization in a collection to ensure
refactor Message class to improve code readability to enhance maintainability and readability of the code
added debug logging for SQL generation and modified condition in PutDatabaseRecord . java to improve debugging and ensure proper handling of the first update key
updated the loop condition from ` runningWidth + 2 ` to ` runningWidth ` in ` TableOutput . java ` to ensure correct calculation of running
pdfbox - 2576 : remove unnecessary null check in filter . getobject ( )
updated priority handling in FormatStringChecker to use HIGH _ PRIORITY instead of NORMAL _ PRIORITY to ensure compatibility with different format strings
add a property to ignore non - final loop variable in a for - each statement
updated PDFExporter and PDFExporterTest to use Java . gexf instead of Les Miserables to ensure compatibility with Java ' s gexf
added unit tests for LdapUserDetailsMapper to ensure correct functionality and functionality of the LdapUserDetailsMapper class
[ hotfix ] [ ldap ] change ldap . read . timeout from 500 to 1 sec in milli sec
refactor TestDescription class to improve code organization to enhance maintainability and readability of the test class
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple files to improve clarity and consistency in naming conventions
added a condition to check if the handler is invalid before processing gesture state to ensure that gesture states are only processed when the handler is invalid
updated mMaxDistanceForFolderCreation and mOverScrollPageIndex from 0.8 f to 0.8 f and adjusted rotation values to improve accuracy of folder creation
use configproviderresolver instead of configprovider in ociconfigconfigsource
refactor Testjsig . java file to improve code readability and maintainability
fix mana mana - > mana mana - > mana mana mana - > mana mana mana
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
removed the serialVersionUID field from P11TlsPrfGenerator . java to clean up the code and eliminate unnecessary warnings
refactor tsFile validation logic to improve clarity and functionality to enhance code readability and maintainability by using a more descriptive variable name
added two new Java files , Switch21 . java and Switch19 . java , to provide pattern matching functionality for object types to enhance code readability
updated error messages in ComparableSubjectTest . java for clarity to improve readability and maintainability of error reporting
updated StreamHelper to set xmlStandalone flag and added a new TestStreamHelper class for testing to ensure proper handling of standalone elements in XML content
updated the limit in ` Int2ObjectCache ` from ` Integer . MAX _ VALUE ` to ` Integer . MAX _ VALUE - 8 ` and
removed unnecessary sorting of security filter chains in WebSecurityConfiguration and added a new test for security filter chain configuration to ensure proper sorting of filters in the
updated the order type from TimeInForce . GTC to null in BinanceTradeService . java to simplify the order handling by removing unnecessary time
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer instead of implements Randomizer and update its initialization logic to enhance flexibility and prevent potential NullPointerExceptions
[ hotfix ] [ rocksdb ] fix separator in rocksdb build info store
camel - 13232 : camel - core - add support for camel - activemq component in camel context
added exception handling for NoSuchFieldError in SourceUtils and created a new TestGetBound class for testing bound types to improve error handling and ensure correct
refactor ` LeafFilterFactory ` to use a new method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintain
added a condition to check if the original artifact name starts with SCOPED _ TARGET _ BEAN _ PREFIX in BatchPropertyBeanPost
http : / / issues . apache . org / jira / browse / amq - 4072 - read certificate by issuer
changed the return type of ` defaultBooleanValue ` from ` boolean ` to ` String ` and added a new ` DnsFallback ` class to enhance
do n ' t swallow exception when write tag with exception .
changed the data type of the ` success ` field from ` success ` to ` url ` in the ` DepositAddress ` class to improve clarity and
replaced the implementation of the Privilege class with a lambda expression in WindowsSecurity . java to ensure proper resource management and avoid potential memory leaks
removed the " address " scope from the scope in CommonOAuth2Provider and its tests to simplify scope handling and improve code clarity
refactor submit method in ManagedSelector to use a new Start class to improve code readability and maintainability by centralizing the submit method
added a new ` BIG _ DECIMAL _ 182 _ 04 ` constant and modified color handling in ` WLedHandler ` to
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set for clarity to improve code readability and maintainability
added a new method ` caseJSRInst ( JSRInst i ) ` to the ` InstSwitch ` class to enable handling of JS
added transaction manager to the SubscriptionActivatingSubscriber constructor and updated related imports to support transaction management in the SubscriptionActivatingSubscriber class
refactor SQL statement handling in DBMSProcessor to improve clarity and error handling to enhance code readability and maintainability by using a more descript
removed elevation variable and related logic from ContactItemInflater . java to streamline view elevation handling for better user experience
rename ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in naming conventions
replaced direct calls to ` Files . readAllBytes ` and ` Files . write ` with ` AccessController . doPrivileged ` for privileged actions
refactor GroovyParserVisitor and GroovyPrinter to handle both " = " and " [ " , and " [ " , and " [ " ,
updated warning log message to include the class name of the exception to improve clarity of error reporting for better debugging
updated byte and byte handling in RecordInputStream and UnicodeString classes and added a new test for UmlatReadWrite in TestUnicodeWorkbook to ensure correct
added a test for downloading a file with norway characters in the name to ensure that the download functionality correctly handles file names with 
updated error handling in AsyncResource and added cancellation handling in FingerprintScannerSample to improve error reporting and provide clearer feedback on cancellation issues
added null check for statistics before calling handleCache to avoid potential NullPointerException when statistics is null
added a new test method to remove objects from explicit collections in MongoTemplateTests . java to ensure that objects are removed from explicit collections in the template
update copyright year to reflect new copyright year
updated string formatting in Coder . java for consistency to improve readability and maintainability of the code
added a new boolean field ` mIsClearAllButtonFullyRevealed ` and modified scroll handling logic in ` PagedView ` to improve
replaced direct calls to ` COMMON _ HMS _ PROPERTIES ` with a constant ` COMMON _ HMS _ PROPERTIES `
added a method to check if a address is already in use and updated exception handling to utilize it to improve code readability and maintainability by
added a command line argument for the " test . class . path " system property in TestNestmateAttr . java to enable testing of the
updated SchemaTextDetailType from VERBOSE to verbose _ schema in Grep . java to ensure consistent logging behavior for schema information
fix checkstyle issue in org . apache . catalina . ha
add support for ` ` nested ' ' subtransaction in scopetrans
replaced the variable ` fetchSize ` with ` ThreadLocal < Integer > fetchSize ` in ` QueryProcessExecutor ` and updated related logic in ` Mem
[ java ] remove redundant idle strategy in embeddedpingpingpong
refactor code to use a separate method ` handleBlockingCall ` in ` HttpClientIntroductionAdvice . java ` to improve code readability and
added configuration for HDP _ VERSION in SliderAppsViewControllerImpl . java to ensure proper configuration of HDP _ VERSION in the application
added loading and reload methods to JavacProcessingEnvironment and updated error handling in JavacProcessingEnvironment to improve resource management and ensure proper resource management during
added DeepCloner class and modified method signatures in ParameterizedRobolectricTestRunner , RobolectricTestRunner , and RobolectricTestRunner
added a method to bind boolean to the WebServer ' s JETTY _ SHOW _ STACKTRACE to ensure proper handling of stack trace
added a check for the object type in NativeObject . java to return null if it is an object to ensure proper handling of object types in the
refactor ` SystemDictionary ` to use ` BasicTypeDataBase ` instead of ` _ object _ klass ` for OopField initialization to improve
refactor JwkKeyListView to use PublicKey instead of RSAPublicKey and update JsonWebKeyEndpoint to utilize Base64 encoding for RSAPublicKey and
do n ' t spawn isolates if not spawnisolates ( )
refactor MBeanServerMXBeanUnsupportedTest class to improve test coverage to enhance performance and readability of the test cases
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline the code by eliminating unnecessary dependencies
replaced ` Validator ` with ` validator ` in multiple actuator classes and added ` getOwnerAddress ` method in ` TransactionCapsule ` to
added a new file ` Main . java ` to demonstrate the use of the ` BrokerService ` and ` MessageConsumer ` interface to provide a
http : / / issues . apache . org / jira / browse / amq - 4078 - fix for http : / / issues .
add an empty index to the edge builder so that it do n ' t throw an exception .
[ java ] do n ' t use contains ( ) when remove a correlationid .
added multiple calls to ` saveConflict ` in ` FileDataStorageManager ` , ` FileDownloader ` , and ` FileUploader ` to ensure
updated generic type parameters from ` Map ` to ` Map < Object , Object > ` across multiple classes to enhance type safety and improve type safety
replaced usage of ` StrUtils . splitFileNames ` with ` StrUtils . splitFileNames ` across multiple factory classes to improve code clarity and
added support for " oracle " and " mysql " driver properties based on the presence of " oracle " and " mysql " driver types to enhance database
updated the constructor of ` interceptor ` in ` SignedSupportingClassProxyFactory ` and added a serialVersionUID to the ` MockMethodInterceptor ` class
updated timestamp handling in FileChangedExclusiveReadLockStrategy to use System . currentTimeMillis ( ) instead of java . util . Date to improve accuracy of timestamp
wrap class loader in ` ExecutionContext ` and ` LocalExecutor ` classes to improve class loading efficiency and prevent potential memory leaks
added a runnable to handle buffer change events in TerminalView and updated the buffer height calculation in TerminalTextViewOverlay to ensure proper handling of buffer changes and
refactor processConfigFile method to improve clarity and add pid handling logic to enhance code readability and ensure proper pid handling
[ hotfix ] [ tvm ] remove operationregistry . disablefreezeoperation ( ) from operationregistry
add insecure option to tlsconfig and make it configurable
refactor source path handling in JavadocTool . java and add a new class T7091528 . java to improve code readability and
updated ExporterGDF to use ` VARCHAR ` instead of ` toLowerCase ( ) ` for consistency to improve code readability and maintainability
added cascade option to the @ OneToOne annotation in DefaultUserInfo . java to allow for cascade - based access to the default address entity
updated the hashCode ( ) method to use Arrays . equals ( data ) instead of getMessageId ( ) . hashCode ( ) to improve code clarity and
fix test failure on window
[ hotfix ] remove rocksdbserializedcompositekeybuilder # iskeyserializertypevariablesized ( )
added the ` getStaticPermissionsField ` method to ` ProtectionDomain ` and modified the handling of ` subjectPd ` in ` SubjectDomainCombiner
added null checks for recipes in RecipeHandlerBrewery , RecipeHandlerElvenTrade , and RecipeHandlerFloatingFlowers
refactor parsing logic in mmm Parser . java and ppp Parser . java to improve readability and maintainability of the code
added a ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` and modified ` UploadMediaPresenter ` to handle ` UnknownHostException `
added a new file ` Issue596 . java ` and modified ` Status . java ` to check for unsupported media types to ensure proper handling of
updated bitwise operation to use long literal for bitwise operations to ensure correct handling of bitwise operations
refactored imports in ImportLayoutStyle . java to improve code readability and maintainability
replaced ` GitBashConfigValue ` with ` TERM _ PROGRAM ` and ` MINTTY ` in ` ConsoleUIService `
replaced mocking of AccountManagerCallback with TestAccountManagerCallback and simplified account assertion logic to improve code readability and maintainability by using a more
removed the private final variable ` enclosingType ` and simplified the return statement in ` AnalysisType . java ` to simplify the code and improve readability
rename method names from ` getProperty0 ( ) ` and ` getEntries ( ) ` to ` entries ( ) ` in multiple classes to improve clarity
removed the second parameter from the set method in PutAllCallable . java to simplify the code and improve readability
add null check for mqconsumerinner in mqclientinstance . consumerrunninginfo
[ java ] add source identity to the list of source identity in the driver conductor .
added a new file ` TopTabAction . java ` that implements the ` Presenter . Toolbar ` interface to provide a panel to display the
camel - 14497 : camel - dynamic - router - add support for multiple recipient mode in camel - core .
updated AggregateItemReaderTests to use JUnit ' s @ Before annotation instead of ` TestCase ` to simplify the test class structure and improve readability
added generic type < T > to the Procedure constructor in AbstractObjectValueTypeMap . java to enhance type safety and improve type safety
updated imports and added wikidataEditCount functionality in AchievementsActivity , NetworkingModule , and OkHttpJsonApiClient to enhance user experience
added a validation check for the length of Short . MAX _ VALUE in OfflineSorter . java to ensure that the length is greater than Short .
[ hotfix ] [ runtime ] add a bug accumulator for load of min value .
refactor multiple dataset classes for consistency and clarity to improve maintainability and readability of the codebase
added error messages for invalid credential types in ProvisionClusterRequest and updated test cases in ProvisionClusterRequestTest to improve error reporting for invalid credential
updated random iteration logic in TestVectorUtil . java to use nextFloat ( ) instead of nextFloat ( ) to improve accuracy of random number generation
changed the return type of the ` compareBy ` method from ` int ` to ` long ` in ` DateUtil . java ` to improve clarity
http : / / issues . apache . org / jira / browse / amq - 4253 - add support for ssl in testutil
added potential download options for tiny , tiny , and dmg files in the ChromeDriverFactory to enable safebrowsing functionality for better user experience
added null checks before setting light configurations in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is enabled in DLNAResource to ensure proper handling of transcoding configurations
fix table . diff ( list < list < string > > ) to return empty list instead of empty list
added a new constant ` CustomIgnoreTag ` and modified the handling of ` CustomIgnoreTag ` in ` RobustJavaMethodParser . java `
camel - 14497 : camel - jdbc - do n ' t throw a optimisticlockingexception
fix @ configurationproperties annotation for @ configurationproperties ( ` ` parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and adjusted padding settings to enhance user experience by allowing customizable padding for
deleted the ClusterNodeInfo . java file to remove unused code to streamline the codebase
removed redundant return statement in ShieldedTransferActuator . java to streamline code by eliminating unnecessary whitespace
added debug print statements for Standard and Legacy ciphersuite selection in ServerHandshaker . java to improve debugging capabilities for ciphersuite selection
updated the ` onTemplateChosen ` method in ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` classes to
added a new ` nodeLabelMap ` map and validation for duplicated nodes in ` ImportContainerImpl ` and ` ImportContainerParameters ` classes to
added a new file R2303044ListSelection . java that implements a list selection using SunToolkit to demonstrate the selection of a list item
[ java ] use hasclienttimedout instead of checkkeepalivetimeout in publicationregistration
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when mWorkspace is null
added a new test method ` testCompoundPropertyTwice ` to the ` StepScopePlaceholderIntegrationTests ` class to verify the behavior of compound
updated the calculation of new row count in StatsRulesProcFactory . java to use a list of row counts instead of a single value to improve clarity
[ springboot - doc - build ] remove unnecessary stream . of ( ) call from api method doc
[ gui ] make logger final so it can be use by the user .
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` in ` DistBuildSlaveExecutor . java ` to enhance
updated RuntimeException to provide clearer error messages for JSON parsing to improve error handling by providing clearer feedback on error messages
added a DEBUG conditional check before logging the filtered item in WidgetsModel . java to ensure that logging is only logged when DEBUG is enabled
refactor Console and Scanner classes to improve code organization and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a test for discountOverlapsBoost in TestSimilarityBase . java to ensure
added reflection checks for ` SimpleMailMessage ` and ` MailSender ` methods in ` SimpleMailMessageItemWriterTests ` and ` MimeMessage
added ` exit ` and ` quit ` properties along with their respective methods in ` Global . java ` and removed it from ` ScriptingFunctions . java
refactored loan broker gateway initialization in LoanBrokerSharkDetectorDemo . java to use a local variable to improve code readability and maintainability
rename methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in naming conventions
vmware : fix npe in vwware web service request context
removed unnecessary whitespace in assertions in ResinAcegiAuthenticatorTests . java to improve code readability and maintainability
updated ` bigIntegerToBytes ` method calls to include an additional parameter ` 32 ` in ` ECKey . java ` to ensure proper handling of byte
updated the property key from " fml . disabledMods " to " fml . modStates " in the Loader class to ensure compatibility with the new
refactor account selection handling in ReceiveExternalFilesActivity to a separate method ` showAccountChooserDialog ` to improve code readability and maintainability by
updated IOException message to include hostIp and port information to improve clarity of error reporting for connection failures
add a check to throw an exception if unexpected empty result from validator smart contract call
updated TexturePackerFileProcessor to handle null root files and added a null check for the root file to improve robustness by preventing potential NullPointerException
added a null check for the data source JNDI property in PooledConnection . java to ensure proper handling of null data sources
updated TARGET _ MB and WINDOW values in TestRefprocSanity . java and modified sink initialization in TestRefprocSan
add null check for currentConsole before writing to the output to avoid potential NullPointerExceptions when currentConsole is not initialized
[ hotfix ] [ kinesis ] increase credential refresh delay in kinesisconfigutil
replaced ` AlertDialog . Builder ` with ` showInfoAlert ` in ` SingleUploadFragment . java ` to improve code readability and maintainability by
updated the ` test ` method to include a ` pack ` parameter and modified the ` test ` method to include a ` - package ` parameter to
updated Jetty version from 1.0 . 0 _ 60 to 1.0 . 0 _ 31 and modified import statements in ModulesTest . java and TestBad
pluginbundlemanager : do n ' t add dependency to the dependency list if it ' s not in opensourcebim
refactor ZipFile class to use a HashSet for streams and ensure proper resource management to improve resource management and prevent memory leaks
corrected the spelling of " DATA _ MATRIX " to " DATA _ MATRIX " across multiple files to improve code readability
add synchronization to sequencegeneratorsource . runactive ( ) and markastemporarilyidle ( )
updated method name from ` getCurrentyActiveConnections ` to ` getCurrentActiveConnections ` in BlobServer . java and BlobServerGetTest . java to
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java ` to
added support for " ppc64 " architecture in Bits . java and ByteArrayAccess . java to ensure compatibility with the latest architectures
added a link to the RuntimeException message in RoboMonitoringInstrumentation . java to provide more informative feedback on activity resolution issues
[ java ] use long . max _ value instead of long . minute in waitwithdeadline ( )
replaced instances of ` new Date ( ) ` with ` Instant ` and ` Instant ` in ` DateUtilTest . java ` and ` OffsetDateTime
refactor BytesRef class methods for improved performance to enhance performance and readability of the code
added a toast message to indicate that YouTube Player doesn ' t work on Lollipop yet to improve user experience by providing a clearer feedback
added validation for unterminated dollar quote and string literals in SQL parsing to ensure proper error handling for unterminated dollar quotes and string literal
added a null check for mVibrator in the primary code condition to prevent potential NullPointerException when mVibrationDuration is not set
updated table borders and color assignments for columns in DotRenderer . java and added arrowheads based on foreign key column type to improve visual consistency and
added an ` isEncodedPar ` method to ` HiveConf ` and modified the ` SetProcessor ` to use it in ` HiveConf ` to
pdfbox - 2452 : catch stringoutofboundsexception in pdfparser
refactor X509Certificate class to improve certificate validation logic to enhance security and readability of the code
wavefront : fix invalid uri implementation with proxy uri ( # 3903 )
added a new method ` loadImage ` in ` NetworkedCacheableImageView ` and refactored image loading logic in ` MainActivity ` to
removed the ' this ' parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature and improve code readability
added a new constant ` gdxControllersVersion ` in ` BuildScriptHelper . java ` and updated the ` DependencyBank . java ` to
refactored the LaunchedURLClassLoader class to improve code readability and maintainability
added imports and modified SQL query details in DataSourceHealthIndicator . java to utilize DataAccessUtils for better data retrieval to ensure proper handling of
add ` ` no - cache ' ' header to authentication response
updated the warning message format in ZkController . java to use English locale to improve readability and maintainability of the warning message
updated the constructor of SolrQueryParser to accept an additional Analyzer parameter to enhance flexibility in query parsing by allowing custom analyzers
[ java ] update copyright year to 2016 ( # 11717 )
remove unnecessary semicolons in MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector instances
[ java ] use req . getname ( ) instead of req . getname ( ) in statementgenerator
removed the ` isTypeMatch ` method and simplified the ` addConfiguration ` method call to simplify the code and improve readability
[ java ] add sessiondecorator . offer ( ) and offer ( ) to offer ( ) method .
updated method names from ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trust
[ manifold ] fix bootstrap inserter to check for non - bootstrap annotations
updated TableDescriptorChecker to use TableDescriptorBuilder for max and flush size retrieval to improve code readability and maintainability by using a more descript
updated the calculation of ` maxCommits ` and ` numCommits ` to use ` requestedCommits ` instead of ` maxCommits `
added InvocationTargetException to the main method signatures in bug6794831 . java to enhance error handling by providing more specific invocation exceptions
added a new constant BUILD _ ID and refactored metadata handling in CachingBuildEngine to improve code readability and maintainability by central
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed redundant call to markAsDone in HttpProtocol . java to improve code readability and maintainability
added TezConfiguration import and configuration initialization in TezConfigurationFactory . java to enhance configuration management by using a default configuration
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
removed a conditional check for mIsVisible in CustomPlaybackOverlayFragment . java to simplify the conditional logic for better readability
added null checks and a forget method in OpenALAudio to prevent potential NullPointerExceptions when stopping the most recent sound
fix issue with invalidatestateandotheroperation with discontinuity report
added multiple number tick units to the NumberAxis class to enhance the visual representation of tick values in the application
refactor TargetsCommand and AbstractTargetGraphAndBuildTargets to use a builder pattern in TargetsCommand and AbstractTargetGraphAndBuildTargets to
replaced ` IndexFileDeleter . INSTANCE . accept ( null , fileName ) ` with ` IndexFileDeleter . java ` and removed ` Index
fix a bug in the collision bounding box and add a check for the entire entity ' s collision bounding box
added compression level parameter to multiple constructors in ApkBuilder , SignedJarBuilder , and SignedJarBuilder classes to enhance flexibility in handling compression levels
added a new test method ` shouldIncludeStaticFields ` in ` MirrorTest . java ` to verify inclusion of static fields to ensure that static fields
added support for BYTES data types in MetricFieldSpec and MetricFieldSpec classes to enhance data handling capabilities for BYTES data types
updated error message formatting in AssertJMultipleFailuresError . java and SoftAssertionsErrorDescriptionTest . java to improve clarity and consistency in error
replaced direct calls to ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` to improve
added caching support for post cache in SpringDataJPAJoinFetchPaginationTest and ForumService to improve caching capabilities for post updates in the application
update pronunciation model to use locale prefix instead of german .
added a check for empty postBody before creating a FormBody . Builder in SimpleHttp . java and updated test cases in TestHttpPlugin . java
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 : close the executor
added conditional logic to set the V2 based on the flipY state to ensure proper rendering of textures based on the texture ' s flipy
[ hotfix ] [ runtime ] improve error message in defaultdiscoveryservice
fix npe in metricspublisher . getcontextpath ( ) when contextpath be null
do n ' t reinitialize class when the class loader be reload .
added a new serialization header for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and updated SerializationHeader . java to
added precompiled header handling and validation in AppleDescriptions and AbstractCxxSourceRuleFactory classes to ensure correct handling of precompiled headers in the
replaced WeakReference with AccWeakReference and added security context handling in ImageWatched . java to improve security by allowing access control for image updates
changed access modifier of findNextIndex method from package - private to private in ObjectSet . java and modified remove method in OrderedMap . java
set the isDirect variable to false in VertexBufferObject . java to ensure proper initialization of the isDirect variable
[ java ] remove unnecessary cast from audioeffecthelptextsmap . get ( )
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to ensure proper retrieval of local coordinates
pdfbox5764 : use input . limit ( ) instead of input . capacity ( )
added null check before removing the close hook to prevent potential NullPointerException when context is not initialized
updated border spacing calculations in CellLayout and DeviceProfile classes to use folderCellLayoutBorderSpacingPx instead of folderLayoutBorderSpacingPx to
replace NumberFormat . getInstance ( Locale . US ) . parse ( ) with Value . of ( ) for parsing numeric values to improve code readability and
updated the condition for returning Authentication . NOT _ CHECKED in FormAuthenticator . java to ensure that deferred authentication is only returned when the response is not
updated argument checks from " -- module - ini " and " -- module - start - ini = " to " -- add - to -
added a new constant HIVE _ DEFAULT _ PARTITION _ VALUE and modified the way dynamicPartValues are added to the dynamicPartValues list to
[ hotfix ] [ stream ] add null check for streamoperatorfactory
updated return statements in DefaultArtifact . java to use hasClassifier ( ) instead of hasClassifier ( ) for clarity to improve readability and maintainability
camel - 13232 : kafka consumer should subscribe to topic that have a state repository . getstate should be call twice
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor to provide clearer error messages for missing classes in the classpath
rename GMAIL _ NOTIFICATIONS _ ENABLED to ENABLE _ GMAIL _ NOTIFICATIONS in JabberAccountRegistrationWizard . java
refactor CryptoKey and CryptoKeyOrBuilder classes for improved clarity to enhance maintainability and readability of the code
increased the expected message count from 125 to 25 * concurrencyLevel in LumberjackMultiThreadTest . java to improve test reliability by reducing the expected
added a check for dead players in the player ' s health checks to ensure the player is not dead before proceeding with health checks
refactor Exchange class to improve code readability to enhance maintainability and readability of the Exchange class
api : add apikey and secretkey parameter to updateuser command
refactor switch - cases in MfaProvider , IdleTimer , and SAMLServiceProviderProvisioning to use if - else statements to improve code readability
refactor AbstractMetaDataExportMojo class to improve code readability to enhance maintainability and readability of the code
added imports for SQLIntegrityConstraintViolationException and updated exception handling in Hive . java to improve error handling and provide clearer feedback for materialized
updated the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in naming conventions for
added a new file ` RoboExecutorService . java ` that extends ` org . robolectric . util . concurrent . RoboExecutorService ` to provide a
added a condition to check if the group is a root before adding groups to the menu to ensure that only root groups are added to the menu
updated method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` in ` BraveClientExecutionInterceptor . java ` to
refactor testDynamicNumberOfGCThreads to use base arguments for command - line argument handling to improve code readability and maintainability by consolidating
changed return type of getHostFlavorMap and getAllPossibleHostFlavors methods from ImmutableFlavor to ImmutableSet in CxxPlatforms . java and KnownBuild
updated parameter handling in CreateTable , CreateTableDeParser , and CreateTableTest classes to use PlainSelect for query parameters to improve flexibility in SQL
set alpha to 64 for chat background in chat viewer
test : migrate ctiteratortest to junit 5 ( # 114 )
added clear ( ) method calls in TokenTokenizer , KeywordTokenizer , KeywordTokenizer , KeywordTokenizer , TokenStream , and StandardTokenizer classes to ensure consistent
add a new test class ASTInitializerTest to validate the behavior of AST initializers on a block statement to ensure that the AST is properly initialized and
updated StateMachineConfiguration and StateMachineFactoryConfiguration classes to use ` StateMachineConfigurerAdapter ` instead of ` Enum < E > ` to ensure proper
( chore ) camel - selenium : remove dependency on link = =
updated BigDecimal formatting logic in StringConverter and added new test cases in StringConverterTest to ensure correct formatting of float values and improve test coverage for float
use currentunitofwork . getcurrentscope ( ) instead of currentunitofwork . get ( ) in aggregatelifecycle
updated touchable insets from CONTENT to REGION in TaskbarDragLayerController to ensure proper handling of touchable regions for better user experience
removed a conditional check for the ' ~ ' character in the FencedCodeBlockParser class to streamline code parsing logic for better readability
added socketTimeout property and its corresponding getter / setter methods in ConnectionFactoryImpl , ConnectionFactoryImpl , and BaseDataSource classes to enhance socket timeout handling
added a sleep delay of 500ms in ElementAttributeTest . java to handle potential InterruptedExceptions during test execution
added UTF - 8 character encoding to the InputStream input stream in HttpUtils . java to ensure proper handling of character encoding in the input stream
refactor List class methods for improved performance to enhance performance and readability of the code
refactor AsyncFileImpl constructor to accept URI and Path parameters and add a new test class for error handling to improve code clarity and ensure correct error
added API annotation to CucumberEngineExecutionContext and modified CucumberTestEngine to use STABLE status in CucumberEngineExecutionContext and C
fix nullpointerexception in nuagevspmanagerimpl . getphysicalnetworkbasedonzone ( )
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadList
removed the ` getJavaVersion ( ) ` method from the ` generateClass ` method calls in ` ConstantPoolTagTests . java ` to simplify the
[ java ] do n ' t print error message when compile with - xlint .
added a method ` removeAllHeaders ( ) ` to ` AsyncHttpClient ` that clears the client header map to ensure that the client header map is
replace Vector with ArrayList and simplify argument handling in Main . java to improve performance and reduce unnecessary type casting
updated DEFAULT _ GRID _ COLUMN from 4.0 f to 3 f in AppPreferencesImpl . java to improve the user experience by allowing
added a condition to check if ` forViewCreation ` is not enabled in the ` getQB ( ) ` method to ensure that the table
updated regex patterns in TestHS2HttpServer . java for consistency and clarity to improve readability and maintainability of the code
added a try - catch block around the snippetReflection . asObject method to handle potential exceptions during object creation
updated driver from IE to FIREFOX and modified method calls in SingleTestSuite . java to improve clarity and functionality of the test suite
updated byteOffset calculation in ByteBlockPool . java and added a new test forTooManyAllocs in TestByteBlockPool . java to ensure correct
changed instance variables from static to instance variables in InteractionValueEncoder . java to improve code readability and maintainability by using Locale . ENGLISH
http : / / issues . apache . org / jira / browse / amq - 4253 - improve error handling
added @ suppresswarnings ( ` ` serial ' ' ) annotation to papplet . java
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` and updated related imports to simplify
add option to save / discard any change to the main window
added response type validation and improved error logging in various classes to enhance error handling and provide clearer feedback during response type validation
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure proper handling of the index in the
added input format class parameters to the initTableMapperJob method in TableMapReduceUtil . java to enhance flexibility in handling different input formats in the
removed redundant call to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to improve code readability and maintainability
do n ' t throw a LLVMPolyglotexception if no language be available
added deprecation warning for reserved commits in ReplicationHandler to ensure proper handling of reserved commits based on the master version
rename variable name from ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport ` and related classes to improve clarity and consistency
changed the data type of the ` generateECKeyPair ` and ` generateECKeyPair ` methods from ` long [ ] ` to ` Object [ ]
[ hotfix ] [ runtime ] add suspend ( ) method to statewithexecutiongraph
replaced the static instance of RotationTouchHelper with a new instance of RotationTouchHelper in RecentsAnimationDeviceState . java to simplify the
refactor port table filtering logic to use a lambda expression instead of a lambda expression to improve readability and maintainability of the code
updated method parameters from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency in thread ID
[ java ] remove duplicate offer from list if there be an offer with the same id .
[ java ] use constant instead of hardcoded string for assume .
updated Mockito invocation logic to use doReturn for System . class instead of System . nanoTime ( ) to improve code clarity and maintainability by using a
replaced instances of ` NotLoadedException ` with ` PartialDatabaseObject ` in multiple classes to ensure proper instantiation of ` NotLoadedException ` instances
removed the import of DisplayUtils and added an extra extra file to the intent in FileDisplayActivity to streamline the code by eliminating unnecessary imports
added error handling and compaction cleanup logic in StoreDirect and StoreWAL classes to ensure proper resource management and prevent memory leaks during compaction operations
replaced direct calls to ` stopSwipePipToHome ` with ` stopSwipePipToHome ` in ` AbsSwipeUpHandler . java
added a hidden property and its getter and setter methods to CommandArgumentDefinition and CommandArgumentDefinition to enable handling of hidden data types in the command argument
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the correct remote address is used for testing
[ geos - 2454 ] use the catalog directly instead of the data directory to get the catalog from the style group
added permission checks for launcher activities in InstallShortcutReceiver and updated method signatures in Launcher and Launcher classes to ensure proper handling of malicious intents
added id property to TiledMapTile , TiledMapTile , AnimatedTiledMapTile , and StaticTiledMapTile classes to
refactor Manager class implementation to improve code readability and maintainability
updated JDBC connection string to include a version parameter and modified Session . Builder initialization in SessionExample . java to ensure compatibility with the latest version in the
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo to manage schemas and schemas more effectively
replaced ` putIfAbsent ` with ` put ` in the ` registryCache ` method to improve code readability and maintainability by using a more descript
[ hotfix ] [ benchmark ] add log for singlebenchmarkrunnerexception
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to simplify the method ' s
fix fileselectorfragment to use ' / ' instead of ' / '
updated FastCGIProxyServletTest to include new test methods for handling large and slow client responses to enhance test coverage and ensure proper response content handling
added a call to start the ReadInteractionsService in MarkReadService . java to ensure that the ReadInteractionsService is properly instantiated
added a conditional check for lintClassfile before logging warnings in ClassReader . java to ensure warnings are only logged when the class file is present
http : / / issues . apache . org / jira / browse / amq - 4078 - add smtp port to email
refactor SSLFactory reloading logic to use RetryPolicies for retry attempts to improve flexibility in SSL factory reloading and error handling
updated the date format from " mm " to " ss " in ObjectMapperProvider . java to ensure accurate date formatting for different time formats
corrected a typo in the assertion message in SpyingOnRealObjectsTest . java to improve clarity of the error message for better clarity
added methods to manage line endings onNL in InlineBoxing and LineBox classes to ensure proper handling of line endings based on br tag
updated the construction of filePathString to handle null parent cases to improve robustness by avoiding potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to streamline code by eliminating unnecessary dependencies
updated ServletInputStream initialization to use createHttpServletRequestInputStream and added a new test for Windows 1250 parameters in multipart to enhance test coverage and ensure correct
added properties for the " management . endpoints . web . exposure . include = * " property in AbstractCasEndpointTests . java to enhance test coverage
added a check to ensure the current graph is a dynamic graph to prevent errors when the current graph is not a dynamic graph
[ hotfix ] [ runtime ] add @ scopeone . value ( ) a default for @ scopeone .
add support for suppressexceptions in jsonpath expression
remove duplicate call to controllerleaderlocator . create ( _ helixmanager )
updated usage message from " java " to " clhsdb " and " hsdb " in CLHSDB and HSDB to
refactored the ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` and removed redundant calls in ` SimpleStep
[ beam - 14457 ] remove deprecate write class from batch transforms package
refactor ` ShadowAccessibilityManagerTest ` to use ` AccessibilityManager ` instead of ` getAccessibilityManager ( ) ` to improve code clarity and
add analytics . group _ display _ id for flutter usage statistic
removed the ` SourcePathResolver ` parameter from the ` SourcePathResolver ` constructors across multiple classes to simplify the code and improve readability by
refactored the enumDataTypeHelper initialization in PostgreSQLDatabaseConnector . java and added a new PostgreSQLEnumDataTypeHelper class
updated the path comparison in LogFileTests from " logpath / spring . log " to " logpath " to ensure the correct path separator is
replace instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to align with the new
added error handling for index tables in HiveMetaStoreClient to ensure proper deletion of index tables in case of UnsupportedOperationException
added visibility check before updating disabled flags in RecentsView to ensure disabled actions are only updated when visibility is visible
added a conditional highlighter to set a specific highlighter for Windows to enhance user experience by providing a specific highlighter for non - Windows platforms
add a new method ` addOptionalLocalVariable ` to the ` BugInstance ` class and update its usage in ` CrossSiteScripting ` and `
[ hotfix ] [ hadoop ] use path . touri ( ) instead of path . touri ( ) . touri ( ) . to
removed an unnecessary space in the removeCaptureListener method call to improve code readability and maintainability
changed the value of _ metaDataComplete from true to false in MetaData . java to ensure proper handling of metadata completion state
refactor ` removeTaskTarget ` method to ` void ` and modify bitmap handling in ` ThumbnailSearchResultView ` and ` WorkEduView
added environment variable handling in JsBundleGenrule and corresponding tests in JsBundleGenruleDescriptionTest to ensure proper handling of release flavors
updated type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` to enhance type safety
added unit tests for crlf newlines in import statements in AddImportTest . java and AutodetectGeneralFormatStyle . java to ensure proper
added hubMode property to AbstractLiquibaseChangeLogMojo and defined it in AbstractLiquibaseMojo to enable dynamic configuration of the hub mode
removed unnecessary null check for processedItem in JsrFaultTolerantStepBuilder . java and JsrChunkProcessor . java to simplify
added error handling for missing linkDb in IndexerMapReduce . java to improve robustness by ignoring errors when linkDb is not found
removed exception handling for setIndexerThreadPool method in LuceneTestCase . java to simplify the code and improve readability
updated the IP address format in GameCanvasImplementation . java to improve clarity and consistency in IP address formatting
replaced direct calls to ` executionsById ` with a ` copy ` method in ` MapJobExecutionDao ` to improve code readability and maintainability
added a new file DownloadTest . java to implement a download test using Gdx to provide functionality for downloading screenshots in the application
updated language handling in multiple classes to normalize language code to ensure consistency in language handling and improve code readability
updated exception handling in GenericUDFRound . java to use a more descriptive argument type to improve error reporting and provide clearer error messages
added null check for selectedVersion before processing version in ManageDependencies . java to avoid potential NullPointerExceptions when selectedVersion is null
removed duplicate request matchers from SecurityConfig . java to streamline the application by eliminating unnecessary matchers
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests related to concurrent DPP inserts
fix : do n ' t ignore java . lang . object in bean definition
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test by ignoring the test
[ openwebnet ] remove unnecessary ` ` final ' ' modifier
[ java ] remove unnecessary security check in apr endpoint .
deleted the SunToolkitSubclass . java file to the class is no longer needed in the application context
added an ` hasRotationOrScaling ` method to ` DefaultRenderableSorter ` and implemented the ` hasRotationOrScaling ` method in ` Matrix4
added a new test method ` registerWrapperHandlerBeforePrimitive ` to ` TypeHandlerRegistryTest ` to ensure proper handling of wrapper handler registrations
pdfbox - 2841 : add a method to convert a pixel to a rgb image to make it possible to use alternate color space .
updated URL constants in CommonsApplication and PageTitle to use BuildConfig instead of CommonsApplication to improve clarity and maintainability of the code
camel - 13232 : add health check to camel - http - main
added null check for block position before accessing it in EntityThornChakram . java to avoid potential NullPointerExceptions when accessing block
added a test for altering a table with indexes extending the primary key in AlterTableWithViewsIT . java to ensure correct behavior of altering
updated variable declarations and added commit assertions in TestFunctionQuery . java to improve code clarity and ensure correct doc assertions
removed DrillMongoConstants . ID from fields in MongoRecordReader . java to remove unused DrillMongoConstants . ID
added disconnect methods in YeelightHandlerBase and DeviceBase classes , and modified WifiConnection to handle connection termination to ensure proper resource management and
added handling for AUTO _ INCREMENT in Parser . java and created a test for PRIMARY KEY in TestCompatibility . java to ensure proper
added getter for existing shared indexInformers in SharedInformerFactory . java and updated corresponding test cases in SharedInformerFactoryTest . java to improve clarity
fix npe in templatemanagerimpl . savedetails ( ) when uservm be null
updated ` initColorArray ` method to use ` RobolectricBufferedImage ` instead of ` imageSizeFromStream ` to improve image handling
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up the code and improve maintainability
[ drools - 141 ] fix file path in example / data / stocktickstream . dat
added ` legendRight ` and ` legendBottom ` to the ` PieChart ` class and updated the calculation of ` mOffsetTop ` to ensure
added a condition to return early if the world transform is zero to prevent unnecessary processing when the world transform is zero
added a new file MaryScriptCreator . java to handle file reading and writing scripts to facilitate the creation of script files in the application
added a flowFile attribute to set the remote source host in ListenHTTPServlet to ensure the session correctly handles the remote source host for the REST
[ hotfix ] [ runtime ] close log file in levelcompactiontsfilemanagement
removed the " xlink : href " attribute from the URL in ComponentDescription . java to simplify the code and improve readability
[ flink - 14486 ] [ runtime ] add s3 _ streaming _ upload _ timeout _ checker constant
hbase - 16286 addendum add a check for cluster shutdown state .
added null check for span before logging statements in Slf4jSpanLogger and DefaultTracer classes to improve robustness by avoiding potential NullPointerExceptions
added trim ( ) method to _ config . addActiveOption in Main . java to ensure active options are processed correctly
added depth preference support to the DepthController class to enhance user experience by enabling depth effects
updated assertion in OverseerTest to check success count to ensure accurate tracking of success counts in the overseer
removed the method ` getKernelVersion ( ) ` from the ` LinuxFileStore ` class to streamline the code and improve readability by eliminating
refactor ExecConstants class to improve code readability to enhance maintainability and readability of the code
removed the ScreenRecord annotation from ThemeIconsTest . java to clean up the code and improve readability
added a method to set the scan attribute for paging in TableSnapshotResultIterator and updated ScanUtil to use it in ScanUtil to enhance functionality by
added a conditional check for negative lowRange in Request . java and RequestV2 . java to ensure that lowRange is only set if it is
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource and updated cache size calculation in AsyncWriteCache to
[ flink - 11818 ] [ table - planner - planner ] fix typo in setzoneid method call
updated Content - Type header from " application / json " to " application _ JSON _ UTF8 _ VALUE " in BaseLivyInterpreter . java
updated the way filesystems are removed in ZipFileSystemProvider . java to ensure the correct removal of files from the filesystems list
changed the type of ` obj ` from ` Object ` to ` String ` in ` HttpRequestBuilder ` from ` Object ` to ` String ` to
updated polling timeout values in SoftAutoCommitTest from 2 seconds to 5 seconds to allow more time for polling to improve performance by reducing the number of
do n ' t call listener . beforeevent and listener . afterevent in selenidelogger
refactored multiple Dial - related classes for consistency and clarity to improve maintainability and readability of the codebase
updated logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the version of the Ryuk container from 0.9 . 0 to 0.9 . 1 to reflect the new version of the ryuk container
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a new
[ mojang - 5888 ] remove unnecessary file check in forgeclientlaunchprovider
[ hotfix ] [ test ] remove dependency on yarnclient in yarnitcase
[ hotfix ] [ map ] add stats per map in localmapstatsprovider
deleted the AllTests . java file to remove unused test suites from the test suite
added new character constants for non - breaking HYPHEN and ZERO _ WIDTH _ SPACE in AbstractWordConverter . java to enhance character
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations are not star
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler . java ` to
added eventHandled flag to UIText . java to ensure proper event handling during text processing
deleted the ` Controller . java ` file and renamed ` Weldby ` class to ` WeldModule . java ` to simplify the codebase
[ hotfix ] [ nfa ] do n ' t capture quantifier in empty mode .
added a protected variable ` liquibaseProLicenseKey ` and removed the logging statement from ` AbstractLiquibaseMojo . java ` to streamline the
[ hotfix ] [ runtime ] add method to setmeasureshierarchymemberreader ( )
[ hotfix ] [ runtime ] add - g option to track node source position .
[ hotfix ] fix typo in mondrianproperties javadoc
added support for retrieving friend paths from a source path in Kotlinc steps to enhance user experience by allowing more flexible path handling
added aliases for BATAK , BRAH , BRAHMI , BRAHMI , and MAND in Character . java and
updated equality checks in ExecutionCommand and added a new stringToExecutionCommand method in StageUtils to improve code readability and maintainability by centralizing
refactor Mockito class implementation to improve code readability and maintainability
refactor OCFile class implementation to improve code readability and maintainability
added a ` toString ` method to the ` SystemScope ` class to provide a string representation of the ` SystemScope ` object
refactor CSS parsing logic to handle different percentage types and improve error handling to enhance code clarity and provide clearer error messages for invalid parameters
added unit tests for local index reverse scan functionality in LocalIndexIT . java to ensure correct handling of local index results
updated imports and method calls in BaseAndroidTestCase , BackupHelperTest , and LanguageHelperTest to use ApplicationProvider instead of InstrumentationRegistry to improve
updated message formatting in ItemListActivity , LiveTvGuideActivity , MediaManager , and TvGuideActivity to include additional details to improve user
removed unnecessary conditions from loop condition in RendererUtilities . java and updated imports in RendererUtilitiesTests . java to improve code readability and maintainability
refactor ` askIterator ` and ` bidList ` to use ` ArrayNode ` instead of ` JsonNode ` in ` KrakenStreamingAdapters
added exception handling for SQLiteException when adding a same column in FileContentProvider . java to improve robustness by logging exceptions when adding a same column
removed debug print statement from AsyncServletIOTest . java to streamline error handling by eliminating unnecessary print statements
updated ` ConvertJoinMapJoin ` to use ` hashTableLoadFactor ` instead of ` currInputStat . getDataSize ( ) ` to improve
updated the ` buildView ` method to use ` Context ` instead of ` LayoutInflater ` and added background resource management to enhance user experience by allowing dynamic
added authentication handling in SecurityMockMvcResultMatchers and corresponding tests in SecurityMockMvcResultMatchersTests to enhance security matching capabilities by allowing authentication
ec2 : do n ' t set vpcid if vpcid be null
[ flink - 10955 ] [ test ] disable flinksavepointtest . testsavepointtest
updated variable declarations in multiple Java files to improve code readability and maintain consistency across the codebase
modified the loop condition in Actor . java to include an additional condition for action action execution to ensure that action execution only occurs when there are actions
replaced ` BaseExchange ` with ` BitmexExchange ` in the ` BitmexStreamingExchange ` class to align with the latest version of
add integration test for orgunit and orgunitrelationshipvirtualmetadata
added null check for spatial in LodControl . java to prevent potential NullPointerExceptions when spatial is null
updated ` lastTokenFiltered ` and ` lastTokenFiltered ` values in ` ConditionalTokenFilter ` , modified test cases in ` TestConditionalTokenFilter
do n ' t use graph . unique ( ) in unsafestorenode
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure
added a assertion to check if the casEventRepository does not exist to ensure that the casEventRepository is not empty before proceeding
removed the ` attributeTemplateName ` and ` attributeCol ` parameters from ` AuthenticationAttrProcessor ` to streamline the code by eliminating unnecessary parameters
added null checks for the specified key in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that null
removed the setTypeface method from CodenameOneTextPaint . java to improve error handling by throwing an exception when typeface is not set
added ` open ` method implementations in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` PinotFS ` classes
[ hotfix ] remove deprecate fail method from webdriverrunner
removed the conditional check for item size in SolrRequestParsers . java to simplify the logic for better readability and maintainability
refactor ` createResultObject ` method to use ` this ` variable instead of ` resultObject ` to improve code readability and maintainability by
updated the SQL query in CreateTableGeneratorTest to include the " my - schema " prefix to ensure compatibility with the new schema schema naming convention
refactor filter handling in VectorizationContext to use a boolean flag for filter mode to improve code readability and maintainability by centralizing filtering logic
updated the type declaration of ` inheritConfig ` in ` ExhaustiveSearchPhaseConfig . java ` to ensure that ` moveSelectorConfig ` is
updated the creation of ReorganizeTableStatement to use modifyDataTypeStatement instead of ReorganizeTableStatement to improve code clarity and maintainability by
updated CLUSTER _ NAME and DEFAULT _ CLUSTER _ NAME constants in SystemPropertiesUtils , ConfigNode , and DataNode classes to improve consistency and
updated connection handling in PeerGroup to improve logging clarity and error reporting to enhance clarity and maintainability of the connection process
added conditional logic to assign style based on the length of style strings to ensure correct style assignment based on the specified string representation
fix datafixer . fixtypes . block _ entity and datafixer . fixtypes . block _ entity to be a binary tag .
updated the return statement in NoToStringOnStringType . java from " Use ` String ` to " No # toString ( ) on String " to
updated memory limits from " - Xmx64m " to " - Xmx32m " in TestThreadFailure . java to ensure compatibility with
updated ` retryFailed ` method to return ` FailureContext ` instead of ` int ` in ` Invoker ` and added ` DataProviderRetryTest
updated the return value from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to ensure correct handling of tokens
webdriverbackedselenium : implement select / deselect / capturenetworktraffic ( ) and capturenetworktraffic ( )
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and adjusted its usage in the ` Main ` class to simplify the code
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added checks for dialog opacity , shape , and background color in Dialog . java and Frame . java to ensure that the dialog does not have a default
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to ensure that the ` state ` variable is
added RedisStandaloneConfiguration and updated sentinel configuration handling in LettuceObjectFactory . java to ensure proper handling of sentinel configurations
add a new property ` lastSeenDelayedMessage ` to the ` ChatRoomJabberImpl ` class to retrieve and update the delayed message timestamp
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to ensure proper handling
refactor the creation of a share operation to use an intent instead of creating a new one to improve code readability and maintainability by centralizing
removed unnecessary dependency on ` isInjected ` in ` BeanDefinitionInjectProcessor ` and added ` @ Inject ` annotation in ` FieldPropertyInject ` to simplify
replace ` getMinBuildHeight ( ) ` with ` yStart ` for loops in ` ClassicPlotManager . java ` to improve code readability
[ smack ] fix npe in camel - smack integration test
tiff : do n ' t verify ifd type when read exif file
added support for ENABLED _ LS in VersionedTargetGraphCache and updated executor initialization in VersionedTargetGraphCache to support local stack handling
added conditional checks for video formats in DLNAResource . java to ensure proper handling of video formats in the parser
refactor AutoMlClient class to improve code organization to enhance maintainability and readability of the code
[ lwjgl ] set lwjgl . librarypath to false when load the service manager .
added a new constant ` ESCAPE ` and modified the handling of escape characters in ` CSVStrategy ` to ensure proper handling of escape characters and improve
added support for AUTHORIZATION _ CODE grant types in ClientRegistrations . java and updated corresponding test cases in ClientRegistrationsTests .
added exception handling for self - suppresion and introduced a new initCausePlumbing method in SuppressedExceptions to improve error
added SQL query and assertions in DerivedTableIT . java and modified OrderedResultIterator instantiation in ClientAggregatePlan . java to ensure proper handling
[ hotfix ] [ runtime ] add rsquare to the regression evaluator
added handling for request header names in ThreadContextMDCServletFilter to ensure proper context attributes are added to the application
refactor SparkPlanGenerator to use a local MapWork instance instead of casting to MapWork to improve code readability and maintainability by consol
pdfjndireport : add a method to get the folder image , so that it do n ' t throw an exception .
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer handling in JwtIssuerAuthenticationManagerResolverTests
updated the condition from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test for
updated constructors and method signatures in LLVMInteropType and CxxMethodsTest to include an isMethod parameter to enhance functionality by allowing
removed redundant sleep calls in AbstractBasicMockingIntegrationTest . java to improve code readability and maintainability
added a new file ` KernCrash . java ` that implements font rendering with Kerning Crash to demonstrate the use of Kerning Crash
added a fail ( ) method call to LinkedHashTreeMapTest . java to ensure that the test succeeds on failure
added a method ` getInterfaceAddresses ` to retrieve IP addresses based on network interface prefix to enhance network interface management by providing a way to retrieve IP
[ hotfix ] [ runtime ] fix housekeeper thread leak on shutdown .
[ java ] remove client address check from grouptransferservice . getslaveackoffset ( )
refactor assertions in Assert class to improve code readability to enhance maintainability and readability of the code
added a new test class ` Issue247Test ` to validate the functionality of ` getTreeMap ` to ensure that the ` getTreeMap
changed the data type of ` results ` from ` CategoryItem ` to ` String ` in ` CategorizationFragment ` to improve type safety and
updated validation logic to check if the current date is a leap year and added validation for field errors based on the current year to ensure that the validation
added GrblLookups for alarm codes and error codes in GrblController . java to enhance error handling by using a more descriptive string
added a conditional check to return the all - apps home button label based on the number of screens in the workspace scroll format to improve user experience by
removed the ` count ` parameter from the ` getTrades ` method signatures in multiple classes to simplify method signatures by removing unnecessary parameters
updated ConsoleReader and MemoryHistory classes to use stripAnsi instead of stripAnsi for better readability to improve code clarity and maintainability by
removed the " . jdk " suffix from the JDK path in JavaBuild . java to simplify the construction of the jdkPath
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple files to improve code readability
updated JFCModel constructors to accept a Consumer < String > parameter and modified related method signatures to include a logger parameter to enhance debugging capabilities and
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that tolerance is non - positive to prevent potential NullPointerExceptions
added methods to create and drop views in TestUtil and a corresponding test in DatabaseMetaDataTest to enhance functionality for managing views and privileges in the
added checks for stable floats and doubles in NaNTest . java to ensure tests are only run on Windows
added a new file DesktopTaskbarUIController . java that extends BaseQuickstepLauncher and modified TaskbarManager . java to utilize this class
added task count listener functionality to the ModItemAdapter class to enhance user experience by ensuring task counts are updated correctly
refactor file handling methods in Files . java to improve code readability and maintainability
updated method signatures and variable declarations in AnnotationGrpcServiceDiscoverer . java and GrpcServerAutoConfiguration . java to improve code readability and
updated the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and removed the ` @ FunctionalInterface ` annotation to simplify the interface
log4j2 - 118 resourcepackloader should use modid instead of modfile path
chore : update gapic - generator - java version to 2.1 . 0 and update gax - java version to 2.16 . 0
added growX and growY methods to the Cell class to enhance the functionality of the Cell class
refactor DefaultInputHandler to use diamond operator instead of hardcoded maps to improve code readability and maintainability by reducing redundant code
[ java ] catch exception in activemqtestcase . testreceivetimeout ( )
replaced ` long ` array with ` byte ` array in ` MetricsMemoryTester ` and added memory fail count check in ` TestDockerMemoryMetrics `
deleted the JobParametersPrototype . java file to remove unused code to streamline the codebase
added a securityEnabled flag to the MappingsTable class and updated related method calls to include it to enhance security configuration for mapping operations
rename AppleLibraryDescription to APPLE _ SWIFT _ EXPORTED _ OBJC _ CXX _ HEADERS and update related
changed the DUMP _ TO _ FILE flag from true to false in TestMSPowerPointParser . java to disable DUMP _ TO _ FILE
updated the ` codecNeedsEosPropagationWorkaround ` method to accept ` MediaCodecInfo ` instead of ` String ` to enhance compatibility with
[ java ] use logbufferdescriptor . isConnected ( ) instead of logbufferdescriptor . isconnected ( )
added a condition to check if the output options are no information to ensure that dbInfo is not null to avoid potential null pointer exceptions
[ driver ] use ssl = false for driver uri ( # 443 )
added DOMOutputOptions import and modified buildDOMSubtree method call to include additional output options to enhance debugging capabilities by allowing customizable output options
refactor assertions in Assert class to improve code readability to enhance maintainability and readability of the code
added ' retained ' parameter to the Event constructor and updated related methods to include ' topic ' and ' retained ' parameters to enhance the Event class to
[ hotfix ] [ test ] remove @ JsonIgnore from testresultsummary
added a ` getName ( ) ` method to ` SqlGroupedWindowFunction ` and modified the constructor of ` SqlGroupedWindowFunction ` to
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java `
added locking mechanisms and modified timeout handling in AbstractSessionContext . java to improve thread safety and prevent potential memory leaks
refactored hotswap handling in AppModule and refactored Watcher constructors to use a separate thread to improve code readability and maintain
use ansi dialect instead of calcitesqldialect in sqlnodeconvertcontext
changed log level from debug to trace in FirmwareUpdateService . java to improve logging clarity for firmware update handlers
added unit tests for ` getNullDate ` and ` getNullTimestamp ` methods in ` GetObjectTest . java ` to ensure proper handling of
updated string formatting in StringSubject , Subject , and CustomFailureMessageTest classes to improve readability and maintainability of the code
added unit tests for repository permission handling in UserModelTest . java to ensure correct functionality of permission checks for multiple teams in the user model
added a new Java file ` Test7088020 . java ` containing a method handle test using MethodHandles to demonstrate the functionality of invokeing
refactor Saml2ResponseValidator to use a Set for audience URIs instead of a list to improve code readability and maintainability by reducing
refactor ` afterAppAuthChanged ` and ` refreshLocalCache ` methods in ` AbstractDataChangedListener ` and ` HttpLongPollingDataChanged
replaced direct calls to ` _ stderr . println ` with null checks for ` _ stderr ` to ensure proper handling of ` System . err ` and
added a new constant ` Warning . SEPARATION _ ORDER ` in ` Warning . java ` and modified ` BasicEventSimulationEngine . java `
updated query optimization method to use realtimeTableConfig instead of offlineTableConfig to improve query optimization efficiency by using real - time table configuration
added support for disabling and disabling the " hbase . normalizer . enabled " property in PhoenixHBaseAccessor and UpgradeCatalog
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass handling in ShadowBluetoothDeviceTest and implemented BluetoothClass management in ShadowBluetoothDevice to enhance functionality by allowing Bluetooth class
updated method names from ` contains ` to ` containsProfile ` in ` GlowOffline ` , ` GlowOffline ` , and ` Uuid
added null and empty list check in sumfunction . sum ( [ ] )
updated method call from ` graphModel . getGraph ( ) . readUnlockAll ( ) ` to ` graph . readUnlockAll ( ) `
updated coreNodeName construction to use nodeProps . getCoreName ( ) instead of nodeProps . getCoreName ( ) to ensure consistency in
add updatebackpressure to chat activity and remove refresh request .
updated test cases in TaggerParserPosTagCompatibilityITest . java to improve test coverage and maintainability
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress codecs for
added a check for lastBaseTag in elemtype checks and created a new class T7005671 with multiple test cases to ensure correct handling of
updated superTriangle calculations in DelaunayTriangulator . java and added a seed in LwjglDebugStarter . java
added @ Override annotation to ArrayList , LinkedHashSet , LinkedHashSet , LinkedHashSet , HashSet , TreeSet , and Vector classes to enhance code clarity and maintainability across the
refactor JWTClaimsSet initialization to use a builder pattern to improve code readability and maintainability by using a builder pattern
replace ` setState ` with ` onYellowZoneMadeAvailable ` and update state handling in ` StackOverflowCheckImpl . java ` to
added ShadowSQLiteDatabase and ShadowContentValues classes and replaced deprecated methods in SQLiteDatabaseTest and SQLiteDatabaseTest to improve code clarity and maintainability by central
updated the method call from ` initiateGLInstances ( ) ` to ` initiateGL ( ) ` in ` LwjglGraphics . java `
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` for comparison to improve performance by using ` ArrayUtil . getUnsignedComparator `
added a script parameter to the Locale class and modified the initialization of defaultLocale and defaultCategoryLocale to ensure proper initialization and initialization of default locale and
update return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha in PredictionRowView . java to correct the method ' s
[ hotfix ] fix typo in configurationchangedetector warn message
replaced the import of LoginMockMvcTests with UaaJunitSuiteRunner . allSuiteClasses ( ) in DefaultConfigurationTestSuite . java and Token
trim whitespace before adding elements to _ mimeTypes , _ excludedPaths , and _ excludedPaths in GzipFilter and GzipFilterDefaultTest to
updated the assignment of the _ outputType variable in Response . java to ensure correct formatting of the output type
updated the default value of the " nashorn . regexp . impl " property from JDK to JONI to ensure compatibility with the
replaced ` LooperExecutor ` with ` FutureTask ` and updated task handling in ` ViewCapture . java ` to improve thread safety and reduce redundancy in
add support for ` ` style ' ' and ` ` / styles ' ' query parameter
added a check to ensure the parent folder does not exist and throw an exception if it does not exist to prevent potential errors during folder creation
updated the port port from 0.0 . 0.0 to 127.0 . 1.0 in the PARAMETER . nodeDiscoveryBindIp parameter to ensure compatibility with the
fix typo in inonly and inout camel workitem handler
pdfbox - 4852 : make jpegutil final and add a private constructor
replaced instances of ` WorkModeToggleContainer ` with ` WorkFooterContainer ` in the AllAppsGridAdapter and AllAppsList classes to
refactor multiple Dalvik classes to improve code organization to enhance maintainability and readability of the codebase
[ java ] do n ' t print qualified type parameter in pretty printer if there be no superclass .
added a call to free memory for bytes in the driver context to ensure proper memory management during execution
updated string formatting in QueryByExamplePredicateBuilder and removed null checks in StringQuery to improve readability and maintainability of the code
replaced ` evictionCounter ` with ` evictionCounter ` and ` statsList ` in ` ConcurrentLRUCache ` and ` FastLRUCache `
[ flink - 14486 ] [ runtime ] fix thread leak when run on fx thread
do n ' t use InetAddress . getLocalHost ( ) in networkaddressmanagerserviceimpl
[ opengrok ] set dataroot and sourceroot to db . getdatabase ( ) in mainframe
added a constructor to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration ` to configure the ` MarkedClient ` and ` Marked
refactor TableEnvironment class implementation to improve code readability and maintainability
removed the ` setStatementTimeout ` method and updated its usage in ` MapperBuilderAssistant ` , ` MappedStatement ` , and ` ExecutorTestHelper
removed the ` hangingTscTimeout ` parameter from the ` onTsTranspilationCompleted ` method signatures across multiple classes to simplify the method
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of GeoLocationRequest and
replaced instances of ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` in ` ArtifactFilesystem ` and updated corresponding tests in ` ArtifactFilesystemTest `
[ tika - 164 ] improve error message when jxl document be not a HPSF document .
ggbscripttest : do n ' t trigger concurrent modification on setvalue ( ) .
http : / / issues . apache . org / jira / browse / amq - 461 - fix the issue that tcpnioconnection
added error messages for ` hasValue ` and ` hasValue ` methods in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest
updated visibility logic in BackgroundAppState and modified midProgress calculation in ShelfScrimView to improve accessibility of the app state based on the
added null check for nav in MatDefEditorlElement . java to prevent potential NullPointerExceptions when nav is null
removed conditional checks for absoluteLocation in DrawImage . java and simplified code in GeoImage . java to simplify code and improve readability by eliminating unnecessary
[ hotfix ] fix typo in erroroccurredinonexceptionroute
updated the scheduleAtFixedRate method to scheduleWithFixedDelay and changed log level from info to debug in AstroDiscoveryService . java to improve clarity of
simplified the initialization of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability and maintainability
added JUnit @ Ignore annotation to JmsJdbcXALoadTest . java and JmsJdbcXATest . java to temporarily disable tests
updated import statements in GuiceFactoryTest . java to use specific classes instead of wildcard imports to improve code clarity and maintainability by using specific
added a system feature list and its getter / setter methods to RobolectricPackageManager to manage system features based on the specified name
[ te ] add support for augment path property in rca framework
removed logging of the cancellation watch dog to streamline the cancellation process by eliminating unnecessary logging
added null and length checks for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values
updated variable names from ` needInline ` to ` needStartText ` and ` needEndText ` in ` BoxBuilder ` and ` InlineBox
http : / / whatismyip . akamai . com / whatismyip . akamai . com / what
removed conditional logic for altering the UPGRADE _ ITEM _ TABLE column type in UpgradeCatalog260 . java to simplify the code
updated error messages for index directory and temp resources in BaseTableDataManager . java to improve clarity and accuracy of error messages
refactor DatasetUtilities class to improve code organization to enhance maintainability and readability of the code
added a line to append the selector ID to the key in the Matcher class to ensure that the selector ID does not contain a colon
updated debug log statements and transform method call in GouraudShadingContext . java to improve code readability and maintainability
added ALPHA _ INDEX _ HIDDEN _ WHILE _ DREAMING and TASKBAR _ HIDDEN _
removed redundant lines from KeyExchange . java to improve code readability and maintainability
added a type check for JdbcConnection before attempting to fetch version from the database to ensure proper handling of SQLExceptions during database operations
added a conditional check for the ` fileIndexThatRemains ` variable in ` ServerMainTest . java ` to ensure the correct index is
added getMediaRecorderingMimeType ( ) methods to CodenameOneImplementation , MediaManager , MediaManager , and ImageIO classes to provide access to media
make shaderhelper . useshaders public to allow access to shaderhelper . useshaders ( )
updated the ` BindableFilter ` in ` DruidAdapterIT . java ` from " C = 6588 " to " C = 13500
reformatted the initialization of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
refactored code formatting and added factory configurations in XMPMetaParser . java to improve readability and maintainability of the code
added a new interface ` ClientRegistrationIdentifierStrategy ` for managing client registration identifiers to provide a mechanism for managing client registration identifiers
refactor code to use a while loop instead of a if statement to improve readability and maintainability of the code
rename ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and introduce a new test class ` VarargsAnd
refactor border property handling to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by consolidating
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to improve logging clarity and consistency in log messages
updated the ` attachProjectToConnection ` and ` attachProjectToConnection ` methods to include a ` HubRegisterResponse ` parameter to enhance functionality by
replaced ` & 0xff ` with ` Byte . toUnsignedInt ` in multiple classes to improve performance by using ` Byte . toUnsignedInt `
[ hotfix ] [ runtime ] fix typo in log message .
changed the default value of DepFiles from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure compatibility with the latest
changed the value of ` rangePannable ` from true to false in ` CategoryPlot . java ` to ensure that rangePannable is
refactor the logic for setting the main active page in AllAppsContainerView to handle different adapter types to improve code readability and maintainability
changed access modifiers of variables and variables in Visualizer2TopComponent . java to enhance encapsulation and improve code readability
added handling for CancellationException in FunctionTest . java to ensure proper handling of CancellationException during execution
changed constructor visibility of several constructors from package - private to protected in JarFileResource and JarResource classes to enhance encapsulation by allowing subclasses
refactor DefaultTrackSelector class for improved performance to enhance performance and readability of the code
added a delay of 200 milliseconds for unseqerging in LevelCompactionTsFileManagement to ensure proper handling of unseqerging processes
updated the fee currency from AUD to BTC in BTCMarketsAdaptersTest . java to ensure compatibility with the latest BTC market
updated SQL queries and test cases in DTOProjectionTest and JpjpJPJPJPJPJPJPJ
refactor Unicode class implementation to improve code readability and maintainability
updated the ` installAutoInstance ` method to include a ` Service ` parameter and added functionality to update HIVE _ SERVER _ INTERACTIVE
updated the method call in SendHeadersFirstPublisher . java for consistency to improve code readability and maintainability
updated SSECustomerKey deserialization to use @ JsonPOJOBuilder and removed unnecessary deserialization to streamline JSON serialization and improve code clarity
added support for BIG _ DECIMAL value in RangePredicateEvaluatorFactory to improve handling of decimal values in the evaluation process
rename ` inner ` to ` javacprocessingenvironment `
removed unused imports and print statements from ParameterInfo . java to streamline code and improve readability
added support for ac3 playback in PlaybackController and updated audio playback state handling in VideoManager to enhance video playback capabilities and enhance user experience
added a HashMap to store and set the value to null in the HttpResponse to improve data handling by providing a clearer JSON representation of the response
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to suppress deprecation warnings related to Commons DB
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT ` to verify the functionality of selecting a schema template
refactor RTimerTree class to improve code organization to enhance maintainability and readability of the code
updated package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graph
[ jme3 ] fix for issue # 358 - fix for issue # 358 ( issue # 358 )
added a default name for the client thread pool and scheduler in ClientConnector . java to improve thread management by providing a more descriptive name for
updated visibility of ` treePane ` and ` treeSplitPane ` from protected to private and modified layout settings for better encapsulation to enhance
added phoneNumbersListDescription and phoneNumbersDescription fields to ScimUserEndpointDocs . java to provide descriptions for user ' s phone numbers and
changed access modifiers of several classes from package - private to public and added private constructors in IndexFiles , IndexFiles , and SearchHTML classes to
added null checks for responseMap and improved error logging in JsonHttpPropertyRequest and URLStreamProvider to ensure proper handling of null responses and improve error
refactor SolrRequestHandler class implementation to improve code readability and maintainability
added a check for ` DEFAULT _ PARALLEL ` in the ` XmlSuite ` class to ensure that parallel configurations are only processed when
[ hotfix ] fix checkstyle violation in vmware and vmware
added a check for SCARD _ E _ NO _ SMARTCARD in the CardImpl constructor to ensure the card is only added when the E
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress sysout checks on purpose in Test2BTerms . java
camel - 16497 : camel - bindy - bindy - bindy - bindy - add support for list < object >
change default value of useowner and usetimestamp from true to false
updated method signatures from ` Runnable ` to ` ThrowingRunnable ` in ` runAndCheckException ` and ` checkException ` to improve clarity and
http : / / issues . apache . org / jira / browse / amq - 461 - avoid npe in hash ( ) .
camel - 14499 : camel - aws - sdb component should use camel - aws - sdb to configure the endpoint
updated version number from " 4.0 . 1 " to " 4.0 " and refactored object retrieval logic in LiquibaseXMLTransformer . java to
[ java ] increase proxy certificate validity from 7 to 90
added smoothDelta and lastDeltaUpdate variables and updated return values in ThreadHandler . java to improve clarity and functionality of time calculation
added null checks for paginator in HttpBatchReader , HttpScanBatchCreator , and HttpUrl parsing in HttpScanBatchReader , and HttpScanBatch
added null check for CompactionInfo client in Worker . java and created a test for mark failure in TestWorker . java to ensure proper handling of
updated fragment state handling in ShadowFragmentActivity and added a new test for onSaveInstanceState in FragmentActivityTest to ensure correct behavior of fragment state management
removed unnecessary whitespace in BatchResourceFactoryBean . java to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure proper handling of Android color references in the application
added error handling for NoResultException in AbstractJPAQuery . java and a corresponding test in AbstractStandardTest . java to improve robustness by
[ bugfix ] fix npe in collection . getallparents
updated the usage of ` getWallpaperDepthEffect ( ) ` in ` DepthController . java ` to use ` LawnchairApp
removed unnecessary import of ProcessTools in LocalManagementTest . java to streamline code and improve readability
updated the method name from ` updateTotalEnergyAverageUsage ` to ` updateTotalEnergyAverageUsage ` in ` EnergyProcessor ` and its tests to
fix nullpointerexception in extensionstack . tostring ( )
[ rxjava3 ] cancel subscription when cancel subscription
added connection manager timeout settings to MultiGetRequest and updated connection manager initialization in ControllerStarter to improve connection management and provide clearer warning messages for
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to ensure compatibility with the new
added new instances of SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor and updated the inlineImage method in BaseImageService
removed conditional check for cache success in CachingBuildEngine and added a new test for output hash calculation in CachingBuildEngineTest to ensure correct
add option to disable use bytebuf in nettypayloadhelper
updated the method call to use Warehouse ' s qualified name instead of old name to improve clarity and consistency in naming conventions
added a message to indicate that the Vertx instance must be created with the preferNativeTransport option to ensure that the Vertx instance is created with
change package of enumtypehandlerserializer from typeserializer to typehandling . coretypes
refactor StreamEx class for improved performance to enhance performance and readability of the code
removed duplicate setHint calls for specQueryTimeout and specLockTimeout in SessionImpl . java to streamline query and lock timeout handling
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` to provide a static instance of ` StaticLoggerBinder ` to
removed duplicate calls to ` put ( family , list ) ` in multiple files to streamline code and improve readability
added handling for new and old orientations in TaskbarManager . java to ensure proper rotation handling for window configurations
[ jabber ] unescape xml from occupant ' s nickname in jabber .
updated the method call in StoreDirect . java and added a new test class Issue265Test . java for compact functionality to ensure proper handling of
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable and non - mutable methods in the application
[ drools - 4072 ] add a new Holder class to provide a way to set and retrieve the outcome of execution flow control
updated formatting in DLNAMediaInfo . java and FFMpegVideo . java to improve code readability and maintain consistency in formatting
updated NBWriteServlet and TestWriteListener constructors to accept an unlimited parameter to enhance flexibility in handling write limits in tests
fix blockchain # updatetotaldifficulty ( ) to not update totaldifficulty
refactor DefaultPlaybackController to improve handling of current window seekable actions to enhance code readability and maintainability by reducing duplication
replaced ` Collections . synchronizedList ` with ` CopyOnWriteArrayList ` in ` NativeLibrarySupport . java ` and updated references in ` SecurityServicesFeature .
added a null check for mRollo . mUniformAlloc and updated position calculations in AllAppsView . java to ensure correct positioning and
added a check for the presence of a colon in the key in HttpURLConnection to ensure that the key starts with a colon before proceeding
added PrincipalResolver to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration class to enable the use of PrincipalResolver in the configuration
replaced ObjectMapper with noggit for JSON parsing in DelegationTokenResponse . java to improve code clarity and maintainability by using a custom JSON parser
added a new method ` removeTrailingSlashes ` to ` IoUtil ` to remove trailing slashes from a StringBuilder to improve code readability and
added empty pattern matching methods to PatternsMatcher class and corresponding tests in PatternsMatcherTest to enhance pattern matching functionality and ensure correct behavior
updated error message formatting in LoadIncrementalHFiles . java to improve clarity of error messages for better readability and maintainability
fix fire not fire on vanilla potion .
removed unnecessary whitespace in ` beginOrAdjustReorderPreviewAnimations ` method call to improve code readability and maintainability
reformatted the calculation of decreasePercent and adjusted formatting in ContractStateCapsule and ReceiptCapsule classes to improve code readability and
fix for http : / / issues . apache . org / jira / browse / amq - 4293 - make asynccontentproducer more robust
added a null check for weightField in DocumentDictionaryFactory . java to prevent potential NullPointerException when weightField is null
added variable substitution functionality in AppleBundle . java and created a corresponding test in AppleTestIntegrationTest . java to improve code clarity and ensure correct handling of
[ turret ] fix Turer turret not work with team .
updated method signatures in KucoinAdapters to use ` ( OrderCreateApiRequestBuilder ) ` instead of ` OrderCreateApiRequestBuilder ` to improve type
added a new file ` PreParseGrammarTest . java ` to implement XML grammar parsing functionality to facilitate testing of XML schema preparsers in XML
added ` @ SuppressWarnings ( { " doclint : missing " , " } " , " doclint : missing " ) ` annotation to multiple
added FontManager import and overridden font overrides in ExtendedEditText . java to enhance font management by allowing customization of font settings
added null check for currentUser in AuthorizeTag . java and a corresponding test in AuthorizeTagTests . java to ensure proper handling of unauthorized
camel - 14497 : camel - jaxrs - test - jaxrs should check if uri contain unsafe character
[ hotfix ] [ test ] fix jdbcgeometrytestsetup setup ( ) method
removed unused import of DumpHandler in MultipartFilterTest . java to streamline code by eliminating unnecessary dependencies
[ hotfix ] [ runtime ] add check to stop restore attempt for already cancel task .
[ hotfix ] [ rmi ] remove main ( ) method from remotejmeterengineimpl
replaced String . join with StringUtils . join for anticompacted ranges to improve code readability and maintainability by using Apache Commons Lang ' s StringUtils
updated qualifier retrieval methods in multiple classes to include display metrics to ensure correct handling of system qualifiers in the application
[ java ] add cluster member id to service heartbeat .
added a condition to set the total thread allocated bytes in TestThreadMXBean . java to ensure that the total thread allocated bytes do not exceed the version
updated the logic for evaluating double values and hashing in CustomExpression . java to ensure proper handling of negative and positive infinity values
updated logging statements in AjaxListener . java to use parameterized messages instead of string concatenation to improve clarity and consistency in logging output
added authentication routes and authorized routes in Routes and AuthenticityController , and created corresponding test cases in AuthenticityFormTest to enhance authentication
added assertion to ensure that the nextNode is alive before accessing its state in SnippetTemplate . java to ensure that the next node is not
updated logger name from ConnectionManager to HttpClientRequestImpl in HttpClientRequestImpl . java to improve clarity and consistency in logging functionality
removed redundant calls to ` compareFalseFirst ` and ` compare ` in ` DefaultTrackSelector ` to streamline comparison logic for better readability and
refactor RuntimeSerialization class to improve serialization logic to enhance performance and readability of the serialization process
do n ' t crop the corner of the image if it ' s already crop .
refactor UnitOfWorkFactory to improve code organization to enhance maintainability and readability of the code
added ` allAppsCellWidthPx ` and ` allAppsIconDrawablePaddingPx ` to ` DeviceProfile ` and updated related
tika - 132 : fix issue with content - type header in tika . xml
updated URI construction in ThumbnailsCacheManager . java to use fileId instead of remotePath to improve clarity and consistency in URI construction
added checks for the ` in ` markSupported ( ) ` method in the ` Source ` class to ensure proper handling of ` in ` markSupported
added @ Deprecated annotations to AsyncProcessor , BehaviorProcessor , BehaviorSubject , SerializedSubject , and SerializedSubject classes to indicate that these classes are
ambari - 14747 . ambari handlerlist should show error stacks on the error page
do n ' t try to cleanup a domain when delete a template
remove unnecessary null check in sparcarithmgenerator . emitforeigncall ( )
[ hotfix ] [ runtime ] implement decisiontableconfigurationadapter . getruletemplateconfigurations ( ) in decisiontableconfigurationadapter
added a final variable ` waitingForResult ` to the ` onRequestPurchaseResponse ` method and wrapped the ` onRequestPurchaseResponse ` method to
increased the default timeout duration from 100ms to 1000ms in UnboundedSourceSystemTest . java to increase the timeout duration for improved performance
updated import statements and added a conditional check for the parent string in ShadowAssetManager . java to ensure proper handling of the ' @ ' character in
deleted two Java files , MrefStat . java and MrefStat1 . java , and MrefStat1 . java to remove unused code
updated scope handling in DependencyInsight and DependencyInsight classes to use StringUtils . isBlank for better readability to improve code clarity and maintainability by using a
added message constants for no trades and bad status in BTCETradeServiceRaw . java to improve error handling and provide clearer error messages for
replaced JUnit assertions with Hamcrest assertions in multiple test files to improve test reliability and maintainability by using Hamcrest ' s Hamc
added a method ` getPaymentRequestUrls ( ) ` to ` BitcoinURI ` and corresponding tests in ` BitcoinURITest ` to
[ flink - 383 ] [ runtime ] improve error message for collection and property type ( # 383 )
removed redundant calls to setFolderInfo in FolderPagedView . java to improve code readability and maintainability
[ java ] do n ' t free the thread buffer when the lock owner be release .
refactor null check logic in BasicAbstractTuple to use a for - each loop instead of a loop to improve code readability and maintainability by
refactor LintUtility to use InputResource for reading and reading linter configurations to improve resource management by using InputResourceUtility for better resource
replace direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a Runnable for updating backgrounds and padding to
fix an issue where inventory . onplayertick ( ) be call in the wrong place .
added a case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY event handling
[ java ] add miss @ publicevolving annotation to statettlconfig
added null check for ` x ` in ` PreparedStatement ` , ` Array ` , and ` ResultSet ` classes to ensure proper handling of null values
[ java ] add more detail to archivetool description
changed the string literal from an empty string to an empty string in StringBuilder . java to ensure consistent formatting of the string representation
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class to ensure proper serialization and deserialization of ` JSONSnapshot
added JUnit imports and refactored the ` removeTheTxAndBlock ` method in ` BroadTest . java ` to improve test clarity
added conditional handling for channel state changes in AmcrestHandler and DahuaHandler classes to ensure proper handling of channel state changes based on code
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` , ` BuildRuleFactoryParams ` , and ` BuildRuleFactoryParams
refactor ChangeLogIterator to accept a list of change set filters instead of a list to enhance flexibility in handling different change set filters
do n ' t show stacktraces for guest exception
updated environment variable reference from ` getenv ` to ` getEnvOrSystemProperty ` in ` Ec2Utils . java ` to ensure compatibility with the new
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization and serialization of the classes
refactor space initialization logic in SpacesVisitor . java to use dropParentUntil instead of withInitializer to improve code readability and maintainability by
add servercacheoptions . copy ( boolean nearcache ) to allow copy of server cache .
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest ` to verify that the hidden border is not visible on a floated
updated the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` to ensure
corrected the constant name from LIVE _ URI to PROD _ URI and added logging for Kucoin sandbox host exceptions to improve code clarity and
updated resource loading error messages and modified searchPath handling in SpringResourceAccessor . java to improve clarity and consistency in error handling
added unit tests for microgram and microwatt units in SmartHomeUnitsTest . java and SmartHomeUnits . java to ensure correct handling of micro
updated vertexMask assignment to use getMaskWithSizePacked ( ) instead of getMask ( ) to ensure vertex attributes are processed with size packed
deleted the Tls12SocketFactory . java file to remove unused SSLSocketFactory class to streamline the codebase
texbibentriesresolver : use a stream instead of a lambda expression
added a method to check if the ROBectric legacy mode is enabled in ResourcesTest . java to ensure proper handling of legacy resources in
added a check for FirebirdDatabase before returning " DOUBLE PRECISION " in DoubleType . java to ensure correct data type handling for Fire
added null checks for dataSource and transactionManager in DefaultBatchConfigurer to avoid potential NullPointerExceptions when dataSource is null
[ java ] add package - info . java file for unittest stubs
updated ping command from " www . google . com " to " ping - c 5 127.0 . 0.1 " in OutputStreamTest . java to
[ hotfix ] [ test ] use try - with - resources to avoid potential resource leak
[ java ] do n ' t add score to termquery if scoremode be not need .
[ hotfix ] fix npe in dataflowmetrics . setmetrics ( null )
fix listvmsvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvmvm
refactor DynamicPartitionPruner to use a new method for finding the target object inspector to improve code readability and maintainability by centralizing the
added a method ` removeBuildArtifacts ` to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` and ` ActionExecutionStep `
added logic to set row selection interval based on the selected row in ThrustCurveMotorSelectionPanel . java to ensure proper handling of row selection
[ google - j2cl ] use assertthrowsarraystoreexception instead of assertthrows
refactor PropertySource class to improve code organization to enhance maintainability and readability of the code
added environment name handling and user agent configuration to HttpClientBuilder and HttpClientConfiguration to enhance user agent management by allowing customizable user agent configuration
refactor session creation logic into a separate restore method to improve code readability and maintainability by centralizing session management
updated assertions in IssueTest . java to include a more descriptive error message and changed the return type of getResults ( ) from HashSet to
added a null check for file content type in ConsumeEWS . java to ensure correct content type is used when file content type is null
add activationrequestdenied event to the interaction system
added @ Override annotations and adjusted formatting in GraphApplet . java to improve code readability and maintainability
added a new method ` updateTaskViewsSnapshotRadius ( ) ` to ` RecentsView ` and updated its usage in ` TaskView ` to
added logging for generated swagger schemas and updated revision handling in StaticMicroserviceVersions . java to improve clarity and functionality of the microservice schema generation
changed the return type of the put methods from void to int in ArrayMap . java to improve clarity and functionality of the put method
updated KafkaContainerCluster to use ` withStartupTimeout ` instead of ` Stream < Startable > ` in ` KafkaContainerCluster ` and modified the
do n ' t try to send a message back to a broker if the broker fail to send a message
refactor header addition logic in StaticServerHttpHeadersWriter to use a loop for better readability and maintainability to improve code clarity and maintainability
added package access check for listener type in EventListenerList . java to ensure proper access control during class loading
added custom adapter for application lists in ApplicationsFragment and created a new CustomAdapter class for customization to enhance user experience by allowing custom adapters
fix issue where quick switch icon be not show in the right place .
[ hotfix ] [ download ] use try - with - resources to close downloadstatecursor
refactor insert statement handling in BaseSqmToSqlAstConverter to use the current clause stack instead of a local variable to improve code readability
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursorProjection
[ java ] use thread . readallbytes ( ) instead of thread . readallbytes ( )
added ENABLED _ TS constant to VersionTargetGraphMode and updated VersionedTargetGraphCache to use it in VersionedTargetGraphCache to
updated method signatures in UpgradeCatalog150 . java to improve code clarity and maintainability
rename networkparameters . testnet3 ( ) to networkparameters . oldtestnet ( )
do n ' t update the object panel if there be only one geo .
updated OnboardingPrefs handling in AppsDividerView . java to check for null onboardingPrefs to ensure proper handling of null
updated HdfsDirectory to extend BufferedIndexOutput and modified flush method implementations to improve resource management and ensure proper resource management
added a conditional check for the path iterator before setting the clip in PageDrawer to ensure that the clipping path is only set when the path iterator is
removed synchronization around localAddress assignment to simplify the code and improve readability
refactor TemplateTransformer to use a new method ` addToRow ` and add a new method ` addToRow ` to improve code readability and maintain
added a method ` isWindows ( ) ` in ` Utils . java ` and modified file rename logic in ` Wallet . java ` to improve
updated ALPHABET and ASTERISK _ ENCODING constants to use CHECK _ DIGIT _ STRING instead of ALPHABET to
added a check for executed unexpected types in NodeGenFactory . java to ensure correct handling of unexpected execution types
removed redundant check for stored ( ) in IndexingChain . java to streamline field writing logic to improve code readability and maintainability
fix ( sql ) : fix timestamps with nanosecond in where clause
corrected a typo in the variable name from " postedRunnableStacktraces " to " postedRunnableStacktraces " to improve code read
corrected a typo in the description of the AbstractGCSProcessor class to improve readability and maintainability of the description
replaced ` assertInitialized ` and ` assertInitialized ` methods with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve clarity and
updated directory retrieval from " null " to " single " in CachingDirectoryFactoryTest . java and RAMDirectoryFactoryTest . java to ensure
refactor FaultTolerantChunkProcessor to use filterCount instead of size and update related methods accordingly to improve code clarity and maintainability by
updated method visibility and modified import statements in FileWithTabs and T4994049 classes to improve code clarity and enhance error handling for unexpected return
replaced manual return statements with assumeTrue for WindowsTerminal in ConsoleReaderTest . java to improve readability and maintainability of the code
remove unnecessary admin check in getfeedbacksessionsaction
corrected the calculation of newSelection and currentPageCol in AllAppsView . java to correct the calculation of newSelection and currentPageCol to ensure
[ hotfix ] [ runtime ] do n ' t notify client on results availability on threadinfo .
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog and modified connection handling in DbConnectionDialog to improve data model management
replaced instances of ` writeBuffer ` with ` WRITE _ BUFFER _ SIZE ` for consistency to improve code readability and maintainability by using
refactor segment size calculation in DocumentsWriter and add a new test for indexing in TestIndexWriter to improve code readability and maintainability by
updated the validation logic for the " data " and " dvert " pointers in ArmatureModifier . java to ensure proper handling of dvert
refactor FileDisplayActivity to improve code readability to enhance maintainability and readability of the code
added a ` UnsupportedOperationException ` instance and modified the exception handling in ` ApplySpecialization . java ` to avoid filling in stack trace to avoid potential
updated the method to return the average of line height instead of the size of the lines to ensure accurate calculation of label height based on the average of
refactor constructor of RotationTouchHelper to accept DisplayHolder instead of MainThreadInitializedObject to simplify the initialization process and improve code clarity
modified the loop structure and added quotes handling in AVA . java to improve readability and maintainability of the code
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ( s , 16 ) ` instead of ` Long . valueOf ( s ,
added a new test method ` testSmall ( ) ` and ` testBig ( ) ` in ` ServerDatagramConnectorTest . java ` to
updated the substring method call in TestSqlEntityProcessorDelta . java to use substring method instead of substring to improve code readability and maintain consistency in
refactor Cache class methods for improved performance to enhance performance and readability of the code
updated variable names from ' e ' to ' ev ' in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in naming conventions
updated the ` doBefore ` method to remove unnecessary exception handling and modified the index searcher initialization to improve code clarity and maintainability by eliminating unnecessary
added a main method to the GcodeTable class to create a JTable with a scroll pane to improve user experience by providing a clearer UI component
updated the WEBAPP _ CONNECT _ TIMEOUT constant to use configuration . getConnectTimeout ( ) instead of a hardcoded value to improve
updated the type of envelopedTransform from List to List < Transform > in SamlUtils . java and modified error logging in CRLCredentialsAuthentication
refactor TestMediaService class to improve code readability to enhance maintainability and readability of the code
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK to the Messages class to provide a clearer
add a new file MarketsPrintTool . java that includes functionality for printing fiat and cryptocurrency values in the application
update endpointaddressinterceptor to validate hostname and dashes for an account id .
add registerwebauthnstart , registerwebauthnstart , registerwebauthnstart , registerwebauthnstart , registerwebauthn
refactor ServerSpanThreadBinder class implementation to improve code readability and maintainability
updated the user pointer reference from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and adjusted the calculation accordingly
updated CSV mapping from " Location " to " the _ geom " and " number " in Csv2Shape . java to improve clarity and consistency in
updated variable name from ` callGasWord ` to ` gasCost ` in ` VM . java ` and removed unused imports in ` Program
refactor Parameters class for improved readability to enhance maintainability and readability of the code
added a call to setIgnoreNullValues ( true ) in the MultiplePiePlot class to enable null values in the pie plot
refactor bundle loading logic in ResourceBundle . java to improve cache management to enhance code readability and maintainability by simplifying bundle loading logic
updated the variable ' c ' from ' _ ' to ' - ' in TaggedPdfReaderTool . java to correct the variable name from ' _
add a method to check if a AllowedDuringEditing annotation is allowed in AFreeplaneAction , ExecuteScriptAction , and AFreeplane
added userModified flag to LoginSamlAuthenticationProvider to enable user modification during authentication
added a new file TestSealedObjectNull . java to test the behavior of SealedObject to ensure that unsealed objects are treated as
renamed the method ` onOpen ` to ` setResponse ` in ` ConnectPromise ` and updated its usage in ` WebSocketClientConnection ` to improve
added a static final Set < Material > SNOW in BlockEventListener . java and replaced calls to ` Tag . SNOW ` with ` SNOW
added a lastTradeId field and updated related methods in CryptsyPublicTrade and CryptsyPublicTrade classes to include it to
added error handling for closing HMS connection in HiveStreamingConnection to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ server ] use random . nextLong ( ) instead of system . currenttimemillis ( ) . currenttimemillis (
updated device profile size from 518 to 535 and added a new device profile for Nexus 5 in DynamicGrid . java to enhance user experience by
[ java ] reset the connection object when it be disconnect before the connection object be disconnect .
replaced the use of ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
added support for WHITESPACE _ AROUND _ TEXTUAL _ OP in PHP format tokens and updated related logic to enhance formatting capabilities and ensure correct formatting
added checks for empty and non - empty files in SaveTask and updated test cases in SaveAndLoadTaskTest to improve file handling and ensure correct
added synchronized keyword to multiple method signatures in MLogWriter . java to ensure thread safety during method execution
[ log4j2 - 132 ] fix serialization of mutablelogevent in smtpmanager
change the PADDING constant from LengthLike to NonNegativeLengthLike to ensure proper handling of negative length like operations
refactor createContext method calls to use createContext ( ) instead of createContext ( getUser ( headers ) ) to improve code readability and maintain
fix a bug in worldbuilder . findrealhandler ( ) that be not work for jimple catch
updated JUnitRunner and AndroidPlatformTarget to include Android SDK Manager in the build tool directory to enhance error messaging for the Android SDK Manager
updated cache size from 16 to 8 in OmniNotes . java to adjust cache size based on maximum memory size
added a condition to check if ` start ` is zero in ` InvocationStageTrace . java ` and modified test cases in ` TestInvocationPublishModel
added a try - catch block around the load method in ProvKeyManagerFactorySpi . java to handle potential NullPointerExceptions to improve robustness by
updated port handling in UpstreamCheckUtilsTest to use a volatile port instead of a hardcoded value to improve code readability and maintainability
replaced ` panelDim ` with ` otherParent ` in ` DockSplitPaneW . java ` to improve clarity and consistency in naming conventions
add support for gl _ ARB _ compute _ shader _ 4 and gl _ tessellation _ shader _ 4 gl _ tessellation _
refactor PopulatorContext class to improve code organization to enhance maintainability and readability of the code
do n ' t try to save all notification if the project do n ' t exist
( chore ) camel - jna : use utf - 8 character encode instead of utf - 8
added a check for non - empty arguments before accessing the argument array to ensure that arguments are not empty before processing
updated OSSO header decoders to use a constant PREFIX instead of hardcoded strings to improve code readability and maintainability by using a
added @ Deprecated annotations to GenerateJavaSources , Config , and JavaGeneratorMojo classes to indicate that these classes are outdated and should no longer be used
removed debug logging statements related to Apache Derby driver version access to improve logging clarity and provide clearer error messages
[ java ] add timeout to cep test to make it more robust .
replaced ` . parallelStream ( ) ` with ` . stream ( ) ` in ` PersonNameSuggestionProvider . java ` to streamline the stream
updated the condition for setting the ROLLBACK operation type and added a warning message if the ROLLBACK operation type is already set to
added new version information keys for IBM J9 and OpenJ9 VM in Constants . java and implemented a test for version information in TestDDR
updated logging message for adding fonts in FontFamily . java and added a new DebugFonts . java file with a debug font request to improve
updated import statements in ALPNNegotiationTest . java and added HTTP version check in NegotiatingServerConnectionFactory . java to ensure compatibility with
added RateControl import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to ensure proper handling of rate
added a new file Test6741426 . java that implements Runnable for JComboBox and JTextField rendering to demonstrate the use of NimbusLookAndFeel for JComboBox and
updated the error message in the CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of error messages for
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to prevent potential NullPointerExceptions when dbMg
move s3copyobjectrequest from com . cloud . bridge . service . core . s3 to com . cloud . service . core .
removed accentColor parameter from setup methods in SettingsActivity . java to simplify method signatures and improve code clarity
updated the error message in TemporaryFolderUsageTest from " / temp1 " to " fileAtRoot " to improve clarity of the error message
replaced instances of ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` with ` ClassTypeInformation . LIST `
added check for empty address in clientconfig . addaddress ( string , null )
added " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate verification functionality
[ hotfix ] [ runtime ] change compute method to return output batch size instead of void .
added a condition to conditionally set the menu mode based on popup behavior to ensure that the menu is only displayed when the popup is not shown
[ fontbox - 4875 ] fix indexoutofboundsexception in memoryttfdatastream . read ( )
added a new test class ` FinalizerInfoTest ` for testing the ` finalizer _ info ` functionality to ensure that the ` finalizer _
replaced calls to ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve
do n ' t add compensation model if custom address be present
refactor StringSubject class to improve code organization to enhance maintainability and readability of the code
updated byte array size from 1 , 000 , 000 to 1000 , 000 in BatchValidateSignContractTest . java to temporarily disable tests
fix typo in setmaxinboundmetadatasize method
updated query handling in RetweetActivity . java to replace " @ " with " from : " in the saveRecentQuery method to ensure accurate query
removed the conditional check for rebalance in SimulatorDiscoverer . java to simplify the code and improve readability
added a new ` importAccount ` method to ` YubiKeyAccountRegistryEndpoint ` and corresponding test cases in ` YubiKeyAccountRegistryEndpoint
updated shader program parameters in ShaderManagerLwjgl , FontMaterialProducer , LwjglCanvasRenderer , and LwjglCanvas
added null check for cnt in paintOnTopLoop and improved padding handling in SideMenuBar to enhance code robustness and prevent potential NullPointerExceptions
refactor AbiWriterProtocol class implementation to improve code readability and maintainability
added null check for subName before assignment caption to avoid potential NullPointerException when subName is null
change data flag from IMMOBILE to GRAVITY in EntityItem . java to ensure consistency in data flag handling
added a null check for the sim object in CustomExpression . java to prevent potential NullPointerExceptions when sim is null
do n ' t request the votelist from the network if we do n ' t need it
added a new test method ` testCase4 ` in ` PostgresTest . java ` to validate the behavior of the ` HikariDataSource `
updated substring method from double quotes to single quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintainability by
updated LINE _ SEPARATOR to LINE _ SEPARATORS _ RE in DefaultJavaPrettyPrinter . java and added a StringTokenizer in CommentTest
refactor singleimplementor . currentsnapshot to use compilerdirectives . compilationfinal
added a null check for excludeSet before adding query to the qlist to avoid potential NullPointerExceptions when filters are not present
fix thinghelper . build ( ) to work with bridge .
updated error handling in Ktab . java to provide clearer error messages when a command is provided to improve clarity of error reporting and provide clearer
added a check to return the output file if it exists to ensure that the output file exists before proceeding
added date parsing logic in DateConverter . java and updated corresponding test cases in DateConverterTest . java to ensure correct parsing of date strings and ensure
added assertions to verify the existence of a Post by slug in SpringDataJPALockTest and updated PostRepository to support querying by slug in
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a check for ` Offline
added a static import for SimpleClientHttpRequestFactory and set timeouts to 30 seconds to improve flexibility in request handling
added assertions to verify the existence and name of files in SourceTest . java to ensure correct handling of file paths and their names
remove system property ` ` graalvm . version ' ' from system property
added token validity handling to the ClientAdminBootstrap class to ensure that the newClient has a valid validity value
updated the method to return the default Android API version based on options to ensure compatibility with the latest Android API versions
remove reference to this . placeholderprefix in propertyplaceholderhelper
removed the number parameter from the Subject Public Key Algorithm in the certificate fingerprint validation message to simplify the error message for better readability and maintainability
replaced Thread . sleep with CountDownLatch and added synchronization for collections in ZkSolrClientTest . java to improve thread management and ensure accurate collection processing
added BigInteger import and added it to simpleTypes in MongoMappingContext . java to ensure proper handling of BigInteger instances in the mapping context
added a condition to check if the button text is not equal to the string resource to improve user experience by ensuring that the button text is correctly displayed
added a condition to check if the Mencoder configuration is not out of sync to ensure that the MEncoder does not throw an exception if the M
updated the default event loop thread count from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to ensure the event loop threads are
changed access modifiers of several fields and methods from abstract to protected in CountMin4 . java and added a new FeedbackFilter in AdaptiveWindowT
added an ` getFileFloatSource ` method to ` ExternalFileField ` and created a new test class ` ExternalFileFieldSortTest ` to validate
updated error message from " Invalid URL " to " Connection error " in FetcherException to provide clearer context for connection errors
updated event handling in OpenRocketSaver and added sourceID handling in FlightDataBranchHandler to enhance event processing by providing a source ID for
changed the access modifier of the ` check ` method from private to protected final in ` ShapeRenderer . java ` to allow subclasses to access the method
added synchronization handling for SynchronizeFileOperation in FileActivity . java to improve user experience by providing clearer feedback during file transfer operations
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for file path encoding to improve code readability and maintainability by using URLEncoder
added a null check for the " cn1 $ infinite " property in InfiniteContainer . java to prevent potential NullPointerExceptions during initialization
updated the total variable from 0 to 1 in IntHashSet . java to adjust the calculation of the total value
added a lock timeout check before updating an entry in FeedRefreshUpdater . java to improve error handling by logging an error when the lock is exceeded
[ Solaris ] remove unnecessary null check in acl file attribute view
refactor LatLonTree to use a new Edge array for adding edges instead of a list to improve performance and maintainability of the code
added IOUtils for resource cleanup in ZkCLI . java to ensure proper resource management and prevent potential resource leaks
[ bibtex ] fix comment string in bibtexparser
added strict property handling in Main . java and corresponding tests in MainTest . java to ensure proper parsing of properties based on the " strict " property
fix defaultvalidator to not throw an exception if annotation type do not exist
camel - 154 : camel - http : fix camel - http to use http4 instead of http
added a call to ` waitForThingsToLevelOut ( 30000 ) ` in ` TestCloudPivotFacet . java ` to indicate that the thing
removed redundant checks for ` bytes . length < = Integer . MAX _ VALUE ` and ` bytes . length ` in ` UBJsonWriter . java
updated test cases in ApplicationTest . java to improve test coverage and maintainability
changed the type of the ` details ` variable from ` String ` to ` StringBuffer ` for improved performance to enhance code readability and maintainability by
replace instances of ` Type ` with ` RoboType ` across multiple files to align with the latest RoboType naming conventions
[ java ] make recordingdescriptorpoller return aBORT when dispatch complete .
added cache key and cache lookup functionality to EntityProcessorBase and corresponding test cases in TestCachedSqlEntityProcessor and TestCachedSqlEntityProcessor to enhance
added a new file PutfieldError . java that throws a RuntimeException for handling IncompatibleClassChangeError to provide a clearer error message for
[ hotfix ] [ aws ] use addresstranslator . translate ( address ) instead of table in awsaddresstranslator
added logging statements for memtable flushing and operations in ColumnFamilyStore and Memtable classes to improve logging clarity and ensure correct flushing behavior
rename space . build ( ) to space . SINGLE _ SPACE across multiple files to improve clarity and consistency in naming conventions
removed the redundant ` encodedLength ( ) ` method from the ` Flyweight ` class to simplify the method signature and improve readability
refactor TestMethodResultMapBuilder class to improve code readability to enhance maintainability and readability of the code
[ bcel ] fix findnullderef . findnullderef ( ) to work with java . lang . integer
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated string return values in Utils . java for consistency and clarity to enhance readability and maintainability of the code
updated type checks for ` v ` in ` Utilities . java ` and ` FloatingIconView . java ` to include ` DeepShortcutView `
updated the ` JwtIssuerValidator ` class to use ` Object ` instead of ` String ` for the ` validator ` variable to improve type safety
updated method names from ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate `
[ cobertura ] add coverage config for cobertura project data
added a check to ensure the event bus is registered before registering it to ensure that the event bus is only registered when it is not registered
added handling for ASCII normalization in NormalizerBase . java to ensure correct normalization behavior based on character lengths
[ hotfix ] fix typo in jobcoordinationservice . ismigrationallowed ( )
added error handling and assertions for update statistics SQL execution in SpillableGroupByIT . java and NoOpStatsCollectorIT . java to ensure
camel - 14457 : camel - cometd - producer - consumer : fix test failure on window .
updated HR attributes to include width attribute in HtmlTag . java to ensure widths are not allowed in 5 to avoid potential errors when width is
added a < br / > tag to the HTML output in HtmlCoreReport . java to improve code readability and maintainability
updated the calculation of ` ramBytesUsed ` to include a null check for ` scores ` in ` DocSlice . java ` to ensure accurate
updated CustomTypeAdaptersTest to use Gson ' s new StringHolder class and added a new StringHolderTypeAdapter for serialization and deserialization to enhance
added extraData setting in MergeCoordinator and a corresponding test in MergeCoordinatorTest to ensure proper handling of extra data from mining parameters in MergeCoordinator
added a static final map to track the number of arguments and updated the method call to use it to improve flexibility in handling command - line arguments
[ hotfix ] fix typo in PathParamServerEndpointConfig . java
[ hotfix ] [ runtime ] shutdown rule queue in migrationrulelistener
change parameter name from ' part ' to ' partOrList ' in RestClientRequest and RestClientRequestImpl classes to improve clarity and consistency in
[ hotfix ] fix checkstyle violation in twitterbootstraputils . java
removed the basicCategory method from SpanishTreebankLanguagePack . java to streamline category handling and improve code clarity
add a new method ` load ` to ` AbstractEntityLoader ` and deprecate ` loadByUniqueKey ` in ` UniqueEntityLoader `
[ hotfix ] [ regionserver ] use futures . clear ( ) instead of futures . remove ( )
pdfbox - 2465 : fix issue with image size ( ) with non - zero size
[ hotfix ] fix checkstyle violation in hikaripool
removed the ` assureMatchVersion ( ) ` method from multiple filter factory classes to streamline version validation and improve code clarity
http : / / issues . apache . org / jira / browse / aop / aop / aop / aop / aop
add a check for the first character in the DRLParser ' s match method in DRLParser . java to ensure proper handling of comma
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
added a check to throw an exception for invalid payload length in WsFrameBase . java to ensure proper handling of invalid payload lengths
move publishsubscribechannel and publishsubscribechannel from ' channel ' to ' dispatcher '
changed the data type of the ` executionId ` variable from ` String ` to ` Long ` in multiple classes to ensure compatibility with the latest Hive
http : / / issues . apache . org / jira / browse / amq - 4078 - update the imageprocessor digest to match the
added imports for CollectionParams , CoreAdminParams , and LocalSolrQueryRequest in SolrConfig and SolrConfigHandler to enhance functionality by utilizing
updated the delay duration in mSyncResult from 60 seconds to 3 seconds to avoid too many automatic synchronizations
fix test failure in segmentv1v2tov3formatconvertertest
refactor ` addPathToMTree ` method to use a ` Path ` variable instead of a ` fullPath ` variable to improve code readability
updated URL path handling in DefaultPackageScanClassResolver . java and added a new test case in DefaultPackageScanClassResolverTest . java to ensure
[ hotfix ] [ table - planner - tsextractor ] [ table - common ] add timestampextractorutils . getaccessed
added a new file ` SpringSecurityAuthenticationSource . java ` that implements the ` AuthenticationSource ` interface to provide a simple mechanism for handling LDAP authentication
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions
replaced ` Dialogs . autoSuggestDialog ` with ` SimpleFormDialog ` in ` GenericViewFragment . java ` to improve user experience by providing
added a new test method ` testNewput ` to ` TxInputUtilTest ` and updated assertions in ` StoreAPITest ` to ensure proper
updated method parameter name from ` collection . getName ( ) ` to ` collectionName ` in ` Stream ` and ` ReadDbObjectCallback ` instantiation
updated zoom calculation and logging in MapOverviewImageMouseHandler . java to improve code readability and maintainability by using a more descriptive variable
updated KNearestNeighborClassifier to accept a Similarity parameter and modified the checkCorrectClassification method to return a ClassificationResult instead of void to improve
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing by using constant score range queries
replace ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to ensure correct handling of low resource checks
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
updated ` requestMtu ` method implementations in ` ShadowBluetoothGattTest ` and ` ShadowBluetoothGatt ` to
refactored the return statement in TestPayloadNameRequestWrapper to use a new method ` createServletOutputStream ( ) ` to improve code readability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling by logging warnings when unsatisfiedLinkError is encountered
replace hashmap with concurrenthashmap in channelprocessingmanager . mprocessingchains
updated Japanese resource files to replace " All " , " " " and " grouped " with " grouped " and " grouped " to
updated the condition in JDBCTypeMapping from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping . java ` and changed
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal operations
refactor ` TerminalView ` to use ` AccessibilityStateTester ` instead of ` isScreenReaderActive ` and streamline the code retrieval process
added support for side navigation in the MenuBar and SideMenuBar classes to enhance user experience by allowing side navigation to be displayed
removed the Disposable from the subscribe method in PoloniexManualExample . java and added debug logging in WampStreamingService . java to streamline
added error handling for contract type errors in UpdateSettingForEnergyLimitContractActuator . java and updated assertions in UpdateSettingForEnergyLimitContract
refactor URL handling in PostmanJsonBuilder and add protocol handling in UrlBean to improve code clarity and maintainability by using a more descript
added getter and setter for namespaceprefixref in soapjasperdataformat
refactor assertions in TestRange to use a new method for checking daylight savings to improve code readability and maintainability by encapsulating the
added security checks for the Jetty Solr runner in BasicAuthIntegrationTest . java and updated security properties in ZkStateReader . java to ensure proper
added a PriceFeed parameter to the TradesChartsViewModel constructor and updated the TradesChartsViewModel constructor to include it to allow users to
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a single configuration variable to improve code readability and
updated variable names from ` from ` and ` end ` to ` end ` in ` NativeString . java ` to improve clarity and correctness of
added file downloading functionality to the FileDownloader class to enhance user experience by allowing downloading files
added a line to set the length of the RandomAccessFile in the try - with - resources statement to ensure proper resource management and avoid potential memory leak
added a new method ` checkIfRegistryRunning ` in ` TestLibrary ` and a retry method in ` FileUtils ` to check if a registry is
removed unused imports from EditTest , Quick3dMain , and TextureTest classes to streamline code and improve maintainability
added @ SuppressWarnings ( { " rawtypes " , " SuppressWarnings " , " javadoc " , " SuppressWarnings " , " SuppressWarnings "
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions when instances are null
added support for setting isolation level in the database connection to ensure proper handling of transaction isolation level in the database connection
added transaction attribute handling in AbstractStepFactoryBean and refactored exception handling in SkipLimitStepFactoryBean to improve error handling and rollback logic to
refactor ` CasManagementSecurityInterceptor ` to use ` DirectCasClient ` instead of ` CasClient ` and update related imports to
added visibility and edit category handling in ListFragment and integrated it in NavigationDrawerFragment to enhance user experience by allowing users to add categories in the list
updated method name from ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and renamed ` observeDownloadWorkerState `
pdfbox - 2452 : avoid cast to cosnumber in pdstructureelement . create ( )
updated font size handling from ` size ` to ` getTextSizePx ` in ` TerminalView . java ` and ` TerminalBridge . java ` to
added a validation check for the fact object before updating it to ensure that the fact is valid before processing to avoid potential null pointer exceptions
refactor DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and maintainability
updated the return statement in ArrayListSpanAccumulator to use a new ArrayList instance to improve performance by avoiding unnecessary array creation
removed lockService usage and simplified validation logic in Liquibase . java to simplify the code and improve readability by eliminating unnecessary lock management
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to use it in TestInstanceCacheChecker to ensure that the revision
updated foreign key and index retrieval logic in AbstractRetriever and TableRetriever classes to improve clarity and consistency in foreign key and index retrieval
camel - 14497 : camel - aws2 - s3 - add unit test for aws2 - s3
removed dependency on TradeHistoryParamCurrencyPair in getBitstampUserTransactions method and added a new method in BitstampAccountServiceRaw to simplify
added error handling for NoSuchComponentException in BlueprintContainerRegistry . java to improve robustness by handling potential NoSuchComponentException
[ coyote ] make push ( ) return a boolean instead of void .
refactor LegacyAddressTest to use BufferedReader for reading input files to improve readability and maintainability of the test case
changed the visibility of the ` findDropTargetAt ` method from package - private to public to allow access to the ` findDropTargetAt `
refactor push warning setup into a separate method ` setupPushWarning ( ) ` in ` NotificationsActivity ` to improve code readability and maintain
[ hotfix ] [ runtime ] fix resource leak in nettyasynchttpprovider
updated null checks and variable names from ` null ` to ` StringUtils . isEmpty ( ) ` for consistency to improve code readability and maintainability by
refactor DefaultAnnotationEngine and Stubber classes to improve code organization to enhance maintainability and readability of the code
added an @ Ignore annotation to the MemoryManagerTest class to temporarily disable tests related to PHOENIX - 2840
nifi - 179 : added timezone support to aboutdto , flowresource and aboutdto
updated assertions in Splitter . java and modified splitOwnedRanges method call in StorageService . java to improve assertion clarity and ensure correct splitting of
[ hotfix ] [ runtime ] remove unnecessary try / catch in beancontextsupport
remove duplicate synchronized block in circuitmanagerimpl . getactivecircuits ( )
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using ` IllegalStateException ` instead of ` GdxRuntimeException `
flume - 132 : remove eventdriven sink and source field from pollablerunner
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class for improved performance to enhance performance and readability of the code
change return type of getpointlength ( ) from double to int in geolocus
reformatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintainability
added error handling and logging for database execution in SchemaCrawlerMain and Executable classes to improve resource management and ensure proper resource management during execution
add default tls procotol version for jdk16 and jdk17
corrected a typo in the exception message from " values " and " labels " to " metadata " in CountersManager . java to improve
updated conditional logic in MediaManager . java to ensure correct handling of audio queue position in the stopAudio method to improve clarity and correctness of audio
removed unnecessary conditional check for debug logging in HttpConnection . java to improve code readability and maintainability
added ` @ Transient ` annotation to ` JpaPersistentPropertyImpl ` and a corresponding test in ` JpaPersistentPropertyImplUnitTests `
updated test cases in UpgradeResourceProviderTest to compare versions from HDP - 2.0 . 1 to HDP - 2.0 . 0 to ensure accurate
trufflevm : use object . get ( ) instead of symbol .
changed the visibility of the ` isBinaryType ` method from private to public in ` SampleResult . java ` and updated logging statements in ` Proxy
updated the default value of TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from "
removed the ` findProblem ` method from ` JavaProblem ` and added priority handling in ` JavaProblem ` to streamline the code by eliminating unnecessary
removed the DEFAULT _ OFFHEAP constant from the read method calls in DictionaryIndexType . java and BloomFilterHandler . java to simplify the
updated line separators in TableWriterTest . java to use a constant LINE _ SEPARATOR to improve code readability and maintainability by using
refactor DebugHelper class to improve code readability to enhance maintainability and readability of the code
added a boolean field ` ownsTexture ` to ` ParticleEffect ` and modified its usage in ` ParticleEffect ` to ensure proper handling of
updated the configuration keys in HiveConf . java to include additional LDAP configurations to ensure compatibility with the latest LDAP configuration settings
[ hotfix ] fix checkstyle violation in datacatalog
refactor InputMethodManager initialization and toggleSoftInput calls to use Context . INPUT _ METHOD _ SERVICE to improve code readability and maintainability by
added a test for converting a map of primitive to a map of primitive to a map of a primitive to a map of primitive to a map of
updated the size calculation in TestFileSystem . java to delete the " memFS : fsMem . mv . db " file to ensure the correct size
fix a typo in the error message
updated ` dropSequences ` method implementations across multiple database classes to use ` MigrationFailedException ` instead of ` JDBCException ` to improve clarity and
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions when status is null
added a variable ' f ' to the createField method call in DocumentBuilder . java to ensure proper assignment of the variable ' f '
[ hotfix ] [ tree ] fix hierarchicalicons . getchildren ( ) to return false if there be no style .
added a new test method ` findOneAfterUpsertForNonExistingObject ` to the ` MongoTemplateTests ` class to ensure that the ` findOne `
updated mid calculations in multiple classes to use ` low ` and ` high ` functions instead of ` high ` and ` > > 1 ` to
added functionality to record launch intents and updated broadcast intent handling to handle null shortcuts more gracefully to improve user experience by preventing potential NullPointerException
added createGraphics ( ) method and removed setData ( ) call in JavaSEPort . java to improve rendering efficiency and ensure proper resource management
[ # 11824 ] instructorfeedbackresultspagedata : remove unused parameter
updated ID counter generation logic in Inventory . java and added a new test for ID generation in InventoryTest . java to ensure proper handling of player inventory
added a conditional check before starting the break statement in ConfigDescriptionRegistry . java to ensure that the loop only occurs when it is found
added a new parameter ` returnType ` to the ` returnTypeAnnotations ` method in multiple visitor classes to improve code readability and maintainability by
fix npe in tilemaprenderer . init ( ) when blendedtiles be null
removed the ` @ Classes ` annotation from the ` @ Classes ` annotation in ` Probe . java ` to streamline the code by
updated the ` getArea ` method to use ` abs ` and added null check for ` last ` in ` IfcTools2D . java
updated lockOnSync initialization and throttleRate assignment in Throttler . java to improve clarity and maintainability of the code
[ pipeeventbus ] fix the pipeeventbus . addactions ( ) method in pipeseventbus . addactions ( )
updated the timeout duration in ZkController initialization from 1000ms to 1000ms to ensure proper timeout handling for the ZkController instance
added a new test method ` passcode _ with _ client _ parameters ` to ` TokenMvcMockTests ` to ensure correct handling of client parameters
added constructors for LengthFilter , LengthFilter , and CharArraySet in TestRandomChains . java to ensure proper argument handling for broken offset
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to clean up the code and improve readability
[ llvmx8686 ] use 64 - bit v arg in llvmx86 _ 64bitvastart
replaced direct instantiation of btCollisionObject with a call to getInstance method in btCollisionObjectArray and modified upcast method in btCollision
added a new property ` BUILD _ COPYRIGHT ` and updated its usage in ` AboutDialog . java ` and ` AboutDialog . java
add getdistributedobjects ( ) method to jetclientinstanceimpl . getdistributedobjects
added print statements for component and inertia in FinSet . java and updated expMOI _ tr values in MassCalculatorTest . java to
replaced ` TOTAL _ MEMORY ` with ` MAX _ MEMORY ` in ` SmartDexingStep . java ` to improve memory management
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and changed method parameter name in CreateAlignedTimeSeriesPlan . java to
[ bisq ] remove unneeded error message for delayed payout tx
updated JsonLoaderTest to use ` json ( ) ` instead of ` input ` and added exception handling for ` big _ integer _ t ` to
updated table size validation from 1 to 0x40000000 in ObjectSet . java to ensure correct capacity validation for table sizes
updated imports and modified decimal digits setting logic in ColumnSnapshotGenerator . java to ensure proper handling of decimal digits based on the data scale value
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the code and improve readability
added error handling for security exceptions in FileHelper and modified content handling in TextHelper to improve robustness by handling SecurityExceptions more gracefully
added a new constant ` StyleWithMultipleAttributes ` and updated the ` applyAttributes ` method in ` ShadowThemeTest ` to support multiple attributes in
updated the calculation of sheet name from - 1 to sheets . size ( ) in HSSFWorkbook . java and modified the createSheet method call
updated the tint variable from primaryColor to elementColor in ManageAccountsActivity . java to improve clarity and consistency in naming conventions
updated DefaultEventBus and DefaultPlatformManager to handle null replyHandler and improved path resolution logic to enhance robustness by preventing potential NullPointerExceptions when reply
added ` binaryCollationName ` and ` binaryCollationName ` properties to ` MariaDbDbmsType ` , ` MySqlDbmsType ` ,
added a default method ` whenType ( Class < T > treeType ) ` to the ` Tree ` class to enhance type safety and prevent potential
refactored the way the user view destination is retrieved in ItemLauncher . java to improve code readability and maintainability by centralizing destination retrieval
replace Response . OK with Response . temporaryRedirect in FeedREST . java to ensure proper redirection of the application settings service
[ hotfix ] [ kinesis ] add a check for non - serializable deserialization schema in flinkkinesisconsumer
[ hotfix ] [ runtime ] fix typo in javadoc
replaced a fixed sleep duration with a try - finally block to ensure the zkClient is closed to prevent potential resource leaks and ensure proper resource management
rename methods and variables from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple files to improve clarity and
refactored the read method in ProxyHandler to use a dedicated read method to improve code readability and maintainability
replaced ` BufferUtil . allocate ( length + 11 ) ` with ` ByteBuffer . allocate ( length ) ` in ` ABCase1 _ 2 .
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success or failure to improve error handling and prevent potential null pointer exceptions
updated order comparison logic to use Integer . compare for consistency in AbstractConfigLoader and TestMicroserviceConfigLoader to improve code readability and maintainability
added a new file ` PicOfDayAppWidget . java ` to handle the update of an app widget to provide functionality for updating an app widget
[ flink - 13264 ] [ table - planner - planner - planner - internal ] set default value for internal lb
replaced ` RelOptUtil ` with ` HiveRelOptUtil ` in ` HiveParserCalcitePlanner . java ` and modified join condition logic to
added @ Deprecated annotation to multiple classes to indicate that these classes are outdated and should no longer be used
added user and password option to the JMX connector in NodeToolCmd . java to enable user and password access to the remote jmx connector
removed redundant initialization of scratch in Stemmer . java to streamline code and improve readability
updated parameters in applyFromAppWidgetProviderInfo and applyFromResolveInfo calls to use mPageViewIconCache instead of null to improve code clarity
add a method to retrieve the view for a thumbnail based on the view type to improve code readability and maintainability by encapsulating the
updated rotation calculations in GcodeRenderer . java to ensure correct rotation coordinates to ensure accurate rendering of rotation coordinates
added a new " workspace " option to the DAEMON option and set the workspace directory in TerminalClient to enhance user experience by providing a workspace
updated the file path in CLIManagerTest from " test - classes / options . apt " to " test - classes / options . html "
updated ScimUtilsTest to use JUnit 5 annotations and added imports for PollutionPreventionExtension and ExtendWith to enhance test
refactor OAuthConfirmationController to use a map for model attributes instead of a generic type to improve code readability and maintainability by using a more
refactor assertions in HibernateIT to use assertTrueEventually for improved readability to enhance code maintainability and maintainability by using a more
refactor EventBusHook class implementation to improve code readability and maintainability
refactor MultiPaintEventTest class to improve code readability to enhance maintainability and readability of the test cases
removed the final modifier from mNewScale assignment to simplify the assignment of mNewScale to improve code readability and maintainability
refactor SyncFactory class implementation to improve code readability and maintainability
added uniqueKey field handling in LukeRequestHandler to ensure unique key fields are correctly added to the database
added support for round border color in the BorderEditor and EditableResources classes to enhance visual consistency and maintainability of the border rendering process
add @ truffleboundary annotation to check that the exception be never part of the compilation .
[ hotfix ] [ runtime ] rename slotpoolimpl to slotpoolbridgebuilder in defaultschedulerbatchschedulingtest
added logging statements for pending requests in GatewayRSocket , GatewaySocketAcceptor , and updated return values in PingPongApp to improve logging clarity
added a menu item click listener to the RecentChatFragment for displaying recent chats to enhance user experience by providing a clearer user experience
updated ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget `
updated method names from ` add ` to ` push ` and ` pop ` in multiple classes to improve clarity and consistency in naming conventions
updated API and EVENTLOG URLs from " test . wikipedia . org " to " commons . wikimedia . org " to ensure compatibility with
refactor index handling by introducing setIndex and updateIndex methods to improve code readability and maintainability by centralizing index management
replaced ` Collections . sort ( ) ` with ` Collections . sort ( ) ` in multiple configuration classes to improve code readability and maintainability by
added DateTimePatterns and date - time formats to FormatData _ hr _ HR . java to enhance date formatting capabilities for various time formats
added a call to clearFocus ( ) in DetailFragment . java to ensure that the clicked view does not disappear when the user clicks
updated spinner description language selection logic in DescriptionsAdapter . java and modified language handling in SpinnerLanguagesAdapter . java to improve user experience by ensuring
updated time zone names from " WSST " to " WSDT " in multiple language files to ensure consistency in time zone naming conventions
added native methods for registering global , weak , and access fields in FastGetField . java to enhance functionality and ensure proper handling of access fields
added null handling for field schema type in ReflectData . java and updated corresponding test cases in TestReflect . java to ensure correct handling of null values
[ java ] increase test timeouts in sedablockwhenfulltest
added a null check for resourcePath . getRClass ( ) before remapping the resource remapping to avoid potential NullPointerException when the resource resource is not
[ hotfix ] [ table - planner - planner - planner - planner - planner - hs2 ] add constructor to
camel - 14497 : camel - http - add http explicit connection close header to http endpoint
increased the timeout value from 60000ms to 120000ms in BasicDistributedZkTest . java to improve test reliability by allowing more time for
[ hotfix ] [ table - planner - core ] fix test failure in basereservationflowtest
updated method signatures in mmm Parser . java and ppp Parser . java to improve code readability and maintainability
refactor CasProcessingFilter class implementation to improve code readability and maintainability
remove dependency on org . thymeleaf . dom . Nestablenode in parsers
[ hotfix ] [ core ] add enum to look up strategy
updated metaPortStart and dataPortStart from 40001 to 11001 and added waitingToShutDown method in ClusterNode to improve data port
change log level from warn to info for miss beanelresolver . properties
set the content type of the application / octet - stream to " application / octet - stream " in WebdavEntry . java to ensure
added the ` getQueueSize ` method to ` LazyTraceThreadPoolTaskExecutor ` and created a corresponding test class ` LazyTraceThreadPoolTaskExecutorTests
fix distance operation for line and line with min distance
rename the variable ' required ' to ' requiredLabel ' in AbstractUITag . java to improve clarity and consistency in naming conventions
removed the ` next ( ) ` method from the ` PurgingPartitionIterator ` class to streamline the iteration process by eliminating unnecessary method overriding
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated references in ` VectorUtil ` to
added abstract methods for getHeight ( ) and getWidth ( ) in BaseMonochromeBitmapSource . java to provide a way to retrieve the size of the
added validation to ensure the polygons contain at least 3 points and modified the localVertices assignment logic to improve robustness by ensuring only valid points are
replaced instances of ` ObjectMapper ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to improve code clarity and maintainability by using
added a null check for the ` coeff ` array in ` GeoImplicitCurve . java ` to prevent potential NullPointerExceptions when evaluating polynomials
[ flink - 47384 ] [ runtime ] fix externalnamerecord to read remaining 32 - bit unicode name ( # 47384 )
corrected a typo in the description of the JMS destination description in AbstractJMSProcessor . java to improve code readability and maintain consistency
added login prompts for username and password in LoginInfoEndpoint . java and corresponding tests in LoginInfoEndpointTests . java to enhance user experience by
replaced ` remove ` method with ` removeIf ` in ` AbstractController . java ` to improve listener removal logic for better readability
added a new action ` R . id . actionToggleSpin ` to the ` PieChartActivity ` class to enable the toggle spin functionality
[ citrix ] kill vdiuuid when copy vhd to secondary storage
hbase - 16464 hmaster should skip normalizing table if quota have quota
refactored import statements and added a resize method in AndroidInput . java to improve code readability and maintainability by encapsulating the
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the ` JavaBeanDescriptor ` initialization to include it to
added JUnit Ignore annotation to ClientMapNearCacheTest . java to temporarily disable tests that are always failing and blocking PRs
fix the hopperhock not be able to move the item to the correct position .
added authentication dialog functionality in SsoWebViewClient . java to enhance user experience by providing access to authentication details
refactor test methods in TestStressIndexing2 to utilize TermQuery for document deletion and indexing to improve code clarity and maintainability
[ flink - 22559 ] [ table - planner ] disable upsertkafkatableitcase # upsertkafkatableitcase
updated type list retrieval to use computeIfAbsent for consistency to improve code readability and maintainability
added a configuration option to accept a single value as an array in DefaultEntityMapper to enable handling of single values as arrays in the mapper
updated localization update message in VersionChangeLogs . java to include UK , SL , and SL
updated the SHORTCUT _ CATEGORIES array to use a resource utility method to improve code readability and maintainability by using
fix ` ` instance of of string and number ' ' expression in parser
nifi - 154 - add mime type attribute to gethttp
add toprovenance ( ) method to resourcehistorytable so that it do n ' t throw npe
corrected the spelling of " done " to " done " in HelpActivity and added a searchable option in SearchBookContentsActivity to improve
refactor NatsConfiguration class for improved configuration handling to enhance code readability and maintainability
refactor the ` invalidateStalePartition ` method to accept a ` List < PartitionNameWithVersion > ` instead of using a lambda expression to improve
do n ' t use boundfifobuffer in viewresultsfullprover if there be no result
updated drawable resources from ic _ group to ic _ chat _ bubble in UsersAndGroupsSearchProvider , ShareUserListAdapter , and UserListAdapter
replace ` getLong ` method with ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure compatibility with the latest byte buffer
updated test method names and import statements in MocksCreationTest . java to improve clarity and consistency in naming conventions
added a new constant ` DATA _ SOURCE _ NAME ` in ` CSVThirdEyeDataSource ` and made the ` generateDetectionConfig ` method
updated awaiter timeout values from 10 seconds to 30 seconds in Basic . java to allow more time for asynchronous execution in the phaser
removed the ` BuildSlaveFinishedStatusEvent ` class and updated its usage in the ` DistBuildRunCommand ` and ` DistBuildSlave
[ vmware ] use utf - 8 encode for template uuid name in vmwarestoragemanagerimpl
add a test for depositing a workspace item without a workflow in WorkflowItemRestRepositoryIT . java and add a method to CollectionBuilder . java
updated the stream of classpath files in ClassLoaderSupportImpl . java to use distinct methods to improve performance by ensuring distinct classpath files are processed
removed the method ` isBoxedPrimitive ` from the ` Unbox ` class to streamline the code by eliminating unnecessary method calls
updated argument handling in SpecificCompilerTool to use ` - encoding ` and ` - templateDir ` instead of ` - encoding ` to ensure correct
added a check for external table in HiveMetaStore and updated directory deletion logic in TestHiveMetaStore to ensure that only external partitions are deleted
updated async execution threads and thread pool sizes in HiveConf . java and modified exception handling in SQLOperation . java and SessionManager . java to
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing a dialog
added EXECUTE _ TASK _ ROLE constant and refactored RequestResourceFilter initialization in UpgradeResourceProvider . java to improve
added a new variable ` diff ` to ` ConferenceInfoDocument ` in ` OperationSetTelephonyConferencingSipImpl . java
add clearentries ( ) method to logtree so that we do n ' t need to update the log tree
updated return statements in ChannelEndPoint . java to include input shutdown checks to ensure proper handling of input and output streams
refactor SetNullableGenerator class to improve code organization to enhance maintainability and readability of the code
camel - 14497 : camel - example - reportincident should use http : / / www . camel - example - reportincident
removed unused imports and simplified import statements in NettyRoutingFilter . java and FormIntegrationTests . java to streamline imports and improve code
added API operations for " hello " , " helloWithValue " , and " helloWithValue " in multiple service classes to enhance the functionality of
refactor lifecycle listener handling in Lwjgl3Application and Lwjgl3Window classes to improve clarity and functionality of lifecycle listener management
updated the FG _ FK color from 90 , 0 , 0 to 200 in UIUtil . java to adjust the color value for better visual
disable mp3 audio format by default
fix secondaryindexmanagertest failure on window
pmd : add info about group to the list of preference . pmd plugin
[ hotfix ] [ test ] fix npe in customserializationitcase
refactor MediaFormatUtil class for improved performance to enhance performance and readability of the code
added an overridden method ` isCellEditable ` to the ` GeneralTab ` class to determine if a cell is a cell editable
added an abstract method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified message formatting in ` JavaBuckConfig
added a temporary count increment to VocalTractModifier and updated the vscales array in VocalTractScalingProcessor to improve performance and
updated import statements in TestUDF classes to use BaseScalarUdfTest instead of BaseScalarUdfTest to improve code clarity and maintainability
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to enhance hashing capabilities and ensure proper object comparisons
update test skeleton control refresh to use animation composer instead of old anim .
rename ` NodeFilter ` to ` NodeCountFilter ` in multiple files to improve clarity and consistency in naming conventions
updated the condition to check if the size of the SYNC _ FETCH _ BATCH _ NUM is greater than or equal to the expected size
updated debug expression type from 365 to 366 and modified the type assignment in DebugExpressionParser . java to ensure proper handling of float types and
updated dependency handling in ExcludeDependency . java to use stream ( ) . anyMatch ( ) for better readability to enhance code clarity and maintain
replaced occurrences of ` tmp ( ) ` with ` dst2 ( v ) ` and ` lerp ( v ) ` in ` Vector . java
initialize the ` args ` array with a default value of ` { } ` } ` to avoid potential null pointer exceptions
updated linker argument handling in RustBinaryDescription . java and added a new test for linker flags in RustLinkerIntegrationTest . java
( chore ) camel - core : fix test for travis and appveyor
added dagName configuration to TaskExecutorService and updated logging in GenericUDTFGetSplits to enhance user experience by providing an external LLAP
updated import statement for java . io . File in TileAtlas . java to improve code clarity and maintainability
refactor ` EscapeProcessingOutputStream ` to use ` AtomicBoolean ` for thread safety and improve error handling in ` GradleDaemonExecutor ` to enhance performance
updated the ` validateQuery ` method to include an additional ` arguments ` parameter in the ` validateQuery ` method to enhance error handling by allowing additional
updated index version from 1 to 2 and refactored getTree method in LuceneExecutor . java to improve clarity and maintainability of the code
[ hotfix ] [ kryo ] add test case for default kryo registration
added a null check before adding properties to configTypesUpdated in BlueprintConfigurationProcessor to avoid potential NullPointerExceptions when removing properties
refactor boolean handling in MetaStoreDirectSql . java to utilize BooleanUtils for better readability to improve code maintainability and maintainability by
added a call to hideCustomizationDrawer ( ) in Launcher . java to ensure the drawer is properly displayed in the application
refactor term vector handling in TermVectorComponent to use a constant for the " warnings " variable to improve code readability and maintainability by reducing
added optimistic types logging and updated log messages for clarity to improve logging clarity and ensure proper logging for optimistic types in the compiler
refactor Expect class implementation to improve code readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to facilitate configuration management for Docker connections
added test cases for flaky low rate IP in CloseableDoSFilterTest and CloseableDoSFilterTest to ensure proper handling of fla
camel - 14497 : camel - reactive - add a new exception for no active subscription ( camel - reactive )
refactor Vectorizer methods to use TezTask instead of mrTask to improve code clarity and maintainability by using a more descriptive
updated constructor calls in StringAppender and LogDivertAppender to include a boolean parameter to ensure proper initialization of the constructor in the constructor
fix npe in jmetertreemodel when guipackage be null
[ gr - 16464 ] add support for ` ` weak ' ' and ` ` weak ' ' function
updated multiple Java files including XShareAuto , LoadClassNegative , LoadClassNegative , XCheckJSig , and ReadFromNoaccessArea to
test : add test for defaulttransactionthreadlocal . get ( )
added checks for invalid operation handles and improved error handling in HiveStatement . java to enhance error reporting and provide clearer feedback on invalid operation handles
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ COLUMN _ ALTER _ COLUMN _ ALTER _ COLUMN _ 
camel - 11616 : camel - aws - secretsmanager - aws - secretsmanager - add integration test for aws secret manager endpoint
refactor SimpleTree class to improve code organization to enhance maintainability and readability of the code
removed unnecessary error message from the response in UserREST . java to simplify error handling and improve readability of the response
updated the ` fromContent ` method to include a ` subTree ` parameter and modified the ` fromContent ` method to include a ` subTree
updated column width calculation in Sheet . java and added a new test method in TestHSSFSheet . java to ensure correct handling of column width
added a configPath parameter to the Commands . less method to include the configPath parameter in the command execution
changed the type of tables from Set to Collection in DotWriter , GraphExecutable , and GraphExecutable classes to enhance flexibility by using a more generic collection
updated the default sshd image version in TestcontainersConfiguration . java from " sha256 " to " 1.0 . 0 " to ensure compatibility with
[ hotfix ] [ runtime ] remove assertion from agentmanagerimpl # checkhostid ( )
replaced the handling of ` _ reusableGroupByValuesArray [ i ] ` and ` _ reusableGroupByValuesArray [ i
refactor testSeekNegative to testSeekingExceptions and update seek logic in TestMultiMMap . java to improve error handling and ensure correct
refactor to use builder instead of builder to improve code readability
rename put ( string key , object value ) to putobject ( string key )
modified visibility logic in CellLayout and refactored drag exit handling in DragController to improve code readability and maintainability by encapsulating drag
updated ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` instead of ` o ` and added ` switchIfEmpty ` method to ensure
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure compatibility with package - accessible types
changed log level from warn to trace in LoggingHandler . java to improve logging clarity by using a more descriptive log level instead of warning
fix # 348 - allow wildcard path in whiteblacklist ( # 348 )
added menu options for gallery attachments in GalleryActivity to enhance user experience by allowing customization of gallery attachments
added null check for MongoDBService before building it to avoid potential NullPointerExceptions when service is null
added tests to prevent code formatting of final boolean and boolean values in InlineConstantMutatorTest . java to ensure proper handling of boolean values in inline constant
updated the ` decode ` method to include a ` Blackhole ` parameter and modified its usage in the ` RecordTest ` class to enhance the decoding
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0 (
[ hotfix ] [ devicethinghandler ] do n ' t skip group address / dpt not according to group address notation .
removed the call to clearWitnesses in dbManager to ensure that witnesses are cleared before proceeding
do n ' t throw jdbc _ error in jdbcpagesink . abort ( )
refactor stack handling in NativeError . java to utilize ScriptFunctionImpl for dynamic stack management to improve code clarity and maintainability by centralizing
added a condition to check if the path name starts with " . " in DrillPathFilter . java to ensure that only valid path names are
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration ` to
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before execution
updated BOLDWEIGHT _ NORMAL value from 190 to 0x190 in HSSFFont . java to improve font weight handling by using
changed ` fThreadGroup ` to ` volatile ` and modified ` fLookForStuckThread ` initialization in ` Timeout ` and ` Timeout `
removed unnecessary whitespace in the ValueResultData constructor to improve code readability and maintain consistency
updated the hash code calculation in FuzzyQuery to use super . hashCode ( ) instead of a hardcoded value to improve code readability and
removed unnecessary print statements from PushedResourcesTest . java to clean up the code and improve readability
changed the return type of the ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` to ` void ` to improve type safety
updated JDBC driver version assertions from " 2.1 . 1 " to " 2.1 . 0 " in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated the retrieval of person attributes and principal attributes in PersonDirectoryPrincipalResolver . java to use a resolved principal to improve clarity and maintainability of the
change log level from info to warn in openwebnetbridgehandler
replaced instances of ` intHash ` , ` longHash ` , ` longHash ` , and ` isPositionValid ` with ` hash ` across
added null checks for storageManager andImageViewReference in ThumbnailGenerationTask constructor to ensure proper handling of thumbnail generation tasks
updated loop condition to check if ` nrFound ` is less than ` count ` and tries < 5 in ` GroupSelectionQuery . java ` to
added a new file ` Bug1933922 . java ` containing a test class for recursive compilation to demonstrate the behavior of recursive compilation in a
corrected formatting in multipleseriesProvider . java and Tokenizer . java to improve code readability and maintain consistency in formatting
updated character range check from 33 to 32 in FileResolver . java to ensure valid characters are valid for space characters
added a call to ` cmp . requestFocus ( ) ` in ` Display . java ` to enhance user experience by providing focus to the component
update instructorhomepageuitest to use testdata instead of testdata . json
rename JsonParserAsync to JsonStreamParser across multiple files to improve clarity and consistency in naming conventions
updated Crouton handling in DetailFragment and added onPause method in MainActivity to improve user experience by providing clearer feedback when canceling
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT ` to validate schema query
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
replaced Runtime . getRuntime ( ) . exec ( args ) with ProcessBuilder for command execution to improve code clarity and maintainability by using a more descript
updated the hostname from InetAddress . getLocalHost ( ) to InetAddress . getByName ( " 127.0 . 0.1 " ) in HintedHandOffManager
refactor the handling of subsystem and subsystem assignments in Metrics . java to use a loop for loops to improve code readability and maintainability by
added assumptions to skip tests on macOS in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only run on non - macOS
[ gr - 13232 ] fix property validation in jvmciversioncheck . java
refactor Mockito class implementation to improve code readability and maintainability
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage
updated ` readAllBytes ` method to use ` ctx ` instead of ` source . getSource ( ) ` in ` BinaryParser ` and ` 
added a new enum ` MultiPartFormDataCompliance ` and a getter method in ` HttpConfiguration ` , and created the ` MultiPartFormDataCompliance `
added support for JDK version 7.2 in GradleDistributionManager to enable compatibility with JDK - 17 in the Gradle version
added a new method ` addType ` to ` SnapshotControl ` and refactored type addition logic in ` SnapshotGeneratorFactory ` to improve type
refactor Term class implementation to improve code readability and maintainability
updated return statement to handle null and empty runWith cases to improve robustness by preventing potential NullPointerExceptions
added test for xaconnection . issamerm ( ) in xaconnectionfactorytest
updated multiple Java files related to AudioDeviceInfoBuilder , MediaCodecInfoBuilder , MediaCodecInfoBuilder , NativeInput , NativeInput , and Shadow
pdf417 : do n ' t use negative pixel in samplegrid ( )
updated mTintAmount assignment in TaskView . java to use mTintAmount directly instead of mSnapshotView and mDigitalWell
added a new file ` SumZeroFunctions . java ` that implements ` DrillAggFunc ` and implements ` DrillAggFunc ` to facilitate
updated SQL query parameters from " page _ id " to " page _ id UNSIGNED _ LONG " in FirstValueFunctionIT and NthValue
refactor getAllocationFailWarningMessage method to use a StringBuilder for better readability and maintainability to improve code clarity and maintainability by centralizing
added a null check for propName before adding it to the roleObject to avoid potential NullPointerException when propName is null
replaced private fields with @ VisibleForTesting and refactored action handling in StatusBarTouchController and RecentsView classes to improve encapsulation
[ java ] add logcontainer stream parameter to dockerclient . logcontainer ( )
test : add test for mvstore cache performance
updated the primitive type from " L " to " J " in the PrimitiveType . java file to ensure compatibility with Java ' s built - in
changed the visibility of the ` delegatingApplicationListener ` method from package - private to static to allow external access to the ` delegating
camel - 14497 : camel - rest - binding - set body to null in camel - rest and camel - rest
added files ` FileDeletingTasklet ` , ` TaskletJobFunctionalTests ` , and ` TaskletJobFunctionalTests ` classes to
update size keep drawables on plane companion
updated variable names and logic in BitUtil , Int2IntCounterMap , Int2IntHashMap , Int2IntCounterMap , Int2Int
updated the ` sendEventToTest ` method to accept a ` stateOrdinal ` parameter and modified related methods to use the correct state ordinal instead of
added conditional checks for video thumbnail request handling in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on user agent
refactor error handling in ErrorCheckerService to improve clarity and functionality of error reporting to enhance error reporting and ensure correct positioning of error messages
added conditional logic to add components based on theme constants to ensure proper handling of menu buttons based on theme settings
added a preload attribute to the Skia class and updated the link to include " libskia " to enhance the functionality of the Skia library
[ bitcoin ] add unittest to networkparameters . getunittests ( )
added error handling for invalid format arguments in QueryCommand and corresponding tests in QueryCommandIntegrationTest to ensure proper error reporting for invalid format arguments in the query
replaced the ` capacity ` variable with a ` length ` variable in the ` IntIterator ` class to improve code readability and maintainability by using
updated walkRuleAndAdd method to include projectConfig ' s srcRule parameter to enhance dependency handling by allowing dependencies to be visited based on project configuration
update patchmodulefilemanager to support override module name
[ java ] remove protocol version check from candidate term id check .
added conditional policy setting for SAML authentication in OwnCloudClientManagerFactory to ensure correct client management based on SAML authentication status
added null checks for ` mappedTableResource ` in ` ReadBatch ` , ` WriteBatch ` , and ` ReadBatchTest ` classes to ensure
[ java ] use utils . close ( ) instead of try - catch block .
refactor AnonymousAuthenticationFilter to use Supplier for deferred context handling to improve code clarity and maintainability by centralizing context management
updated the ` removeActor ` method to accept a ` boolean unfocus ` parameter to enhance flexibility in handling actor removals based on the parent '
refactor prompt method calls to use a variable for valid configurations to improve code readability and maintainability by using a more descriptive string
http : / / issues . apache . org / jira / browse / amq - 4253 - add log level to netty http server
refactor DatumAliases , AbstractParser , Formattable , and Parser classes to improve code organization and maintainability
replaced the ` update ( ) ` method with a ` SwingUtilities . invokeLater ( this ) ` method in ` CodeDependenciesPanel . java ` to ensure
camel - 14497 : camel - groovy should use language . getscriptfromcache ( ) instead of exchangehelper . populatevariablemap ( )
[ hotfix ] [ runtime ] remove unused code in pluginmanager
changed access modifiers of several methods in CliFrontendParser , ProgramOptions , ProgramOptionsUtils , and ProgramOptionsUtils to public to enhance encaps
replaced instances of ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
removed the storage alias retrieval from the HttpsMessenger class to streamline the code by eliminating unnecessary aliases
[ hotfix ] [ runtime ] catch ClassCastException when convert text to response
changed the visibility of the updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access the updateImage method
add block . dropresources ( ) and block . dropresources ( ) for serverlevel
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality for spatial location calculator configurations
refactor multiple Java classes related to CommunityDetection , GSAConnectedComponents , GSAPageRank , PageRank , and SingleSourceShortestPaths
updated the ` isEmpty ` method to accept a ` Node < V > ` parameter and added a parameterized test for it in ` TrieTest ` to
updated foreground and background methods in AttributedStringBuilder to include additional parameters to improve clarity and functionality of foreground and background operations
updated fingerprint assignment logic in PeerSync . java and added system property setting in PeerSyncTest . java to ensure consistent fingerprint behavior based on the system
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
updated event handling in MongoTemplate and added a test for UUID handling in MongoTemplateTests to enhance event processing and ensure proper application context management
[ hotfix ] fix collectionitem . writedata ( ) and collectionitem . settransactiontest . testsettransactiontest
( chore ) camel - tika - cli : close inputstream on close
updated exception handling from ` ExceptionWithErrObject ` to ` ApiException ` in ` TestCollectionAPIs . java ` to improve error handling by using
removed unnecessary whitespace in the configuration loading method call to improve code readability and maintainability
[ hotfix ] [ test ] fix test failure in instructorfeedbackcopyactiontest
[ hotfix ] [ runtime ] remove unnecessary exception from jobservicepipelineresult
removed the ` step ` property and related methods from ` HmDatapoint ` , ` HmDatapoint ` , and ` HomematicType
updated log messages and added exclusive lock management in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality of lock management
removed redundant call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to improve code readability and maintainability
[ java ] fix testgettextcontent # testgettextcontent # testgettextcontent # testgettextcontent # testgettextcontent
refactor Logger class to use ThreadLocal for thread - safe logging to improve performance by using a thread - local logger instance
[ hotfix ] [ test ] fix functioninitializer . convertTocompilation ( ) to work with @ visiblefortest
added a new method ` boxedTypeOrType ` in ` Types ` and modified subtype checks in ` Infer ` , ` T663
updated orientation handling in RecentsView and removed redundant updateChildTaskOrientations ( ) call in TaskView to improve code clarity and ensure proper orientation
[ hotfix ] [ test ] do n ' t use liveregionserverthreads . stream ( ) in testflushfromclient
added handling for contract details in the TransactionExecutor class to ensure that the cache is only saved when the new contract details are present
updated balance calculations in ` TokenIssueProcessor ` , ` TokenIssueProcessor ` , and ` Program ` classes to use dynamic properties for asset issue fee
refactor caching mechanism in RealisticRenderStrategy to use URI and Texture for better resource management to improve performance and maintainability of the caching mechanism
refactor Raster and WritableRaster handling in Blit . java and add a new test class Bug7049339 . java for image rendering to improve
added a boolean flag ` isUnselectedStyle ` and modified string width calculations in ` Label ` , ` DefaultLookAndFeel ` , and ` DefaultLookAndFeel
updated ArrayList initialization to initialize mappings and scores with a size of 0 to improve performance and maintainability of the code
removed the flags parameter from multiple query methods in ShadowApplicationPackageManager to simplify method signatures by removing unnecessary parameters
refactor PingRequestHandler class to improve code readability to enhance maintainability and readability of the code
[ android ] add support for sample with increasing timestamps . mp4 .
remove isoldfirmware ( ) method that do n ' t need it
refactor AjaxElementLocator to improve code readability to enhance maintainability and readability of the code
updated the condition in BoxLayout and DefaultLayout to include " table - cell " in the display check to ensure correct handling of table cells in the layout
refactor JsonDecoder to improve handling of array types and add a new test for reordering fields to enhance code readability and ensure correct behavior of
updated the ` listener ` lambda expression in ` BlockCache ` to use ` removalCause ` instead of ` notification . getKey ( ) ` to improve
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable tests related to savepoint functionality
added @ Test annotations to DroolsMvelParserTest . java to improve test coverage for test cases
changed fields from non - final to final in ContextRegisterListener . java to ensure immutability of several fields in the ContextRegisterListener class
added a cacheIterator parameter and modified the reset method in ObjectHashSet to use it to enhance flexibility in resetting objects based on cache behavior
added batch bytes handling to SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure proper handling of batch sizes
updated context constants from MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE to ensure
updated log messages and added abort handling in JdbcProxyGenerator . java to improve clarity and functionality of the close ( ) method
updated the ` getAnimationToState ` method to use ` mState ` instead of ` getState ( ) ` to improve accessibility handling for non -
[ hotfix ] [ log ] change log level from warn to debug
updated substring method in UaaTokenServices and added a new test case in UaaTokenServicesTests to ensure that the persist scope is longer than
updated import statements and added a ` toString ` method in ` AvailableJDBCDrivers ` and ` TestAvailablePlugins ` classes to improve
add a new interface ` ExecutableCommand ` in the ` org . kie . api . command ` package to provide a way to execute a command
remove jdbctableservice from camel - itest - idempotent test
added methods to retrieve left , top , and bottom padding in CellLayout and Launcher classes to improve padding handling for cell layouts
added a conditional check for the length of the ` sb ` before retrieving the ` cands ` list to ensure that the ` cands
removed unused imports and added null check for flow in SamlMetadataUIParserAction to improve code robustness and prevent potential NullPointerExceptions
added a method to check for LDAP processes using a specified port in LdapMockMvcTests . java to improve port management for LDAP processes
[ log4j2 - 132 ] fix the issue of the shutdown method in loggercontext . shutdown ( )
refactor URL handling in Fetcher . java and HTMLMetaProcessor . java for improved clarity and consistency to enhance code readability and maintainability by
updated SolrQuery instantiation to use " name : samsang " instead of " * : * " to improve clarity and consistency in query naming
refactor console initialization to use reflection for improved type safety to enhance code readability and maintainability by utilizing reflection for console instances
changed the visibility of the ` getVerticesColors ` method from public to private and modified the initialization of ` mcol ` to enhance encaps
added exclusion for timestamped reports in HTMLReportGenerator and updated corresponding test cases to ensure proper handling of timestamped report files and improve test reliability
[ hotfix ] [ test ] add parameterizedtest annotation to datavalidatortest
pdfbox - 2452 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java and improved error handling in FieldUtils . java to provide clearer error messages for binding
removed a debug print statement from JoglInput . java to simplify the code and improve readability
added support for allowing extracting private fields in FieldSupport and updated related test cases to enhance field handling capabilities and ensure proper error reporting
replace " { name } " with device name in WebDataHandler . java to ensure proper handling of device names in the application
added a lookupConstructor field and modified the instantiation logic in Platform . java to ensure compatibility with Java 8 types and improve code clarity
renamed the ` weights ` method to ` weightsByDouble ` and added a new method ` weightsByDouble ` in the ` ZParams ` class
added the Database parameter to writeCustomHTML methods across multiple writer classes to include it to enhance functionality by allowing the database to be added to the HTML
added assertion for null values in BTreeMap . java and removed unnecessary type casting to improve code readability and maintainability
replaced Exception with BalanceInsufficientException in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and TransactionTrace to
[ hotfix ] [ test ] do n ' t try to write zero file in profiler . heap . zerofile .
replaced direct print statements with sendMessage calls in Main . java and modified license key handling in Main . java to improve error handling and provide clearer feedback
updated byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and removed generic record handling in HortonworksEncodedSchemaReferenceWriter
added imports for ItemProcessListener and ItemReadListener in multiple Java files to ensure proper handling of batch processing events
updated formatting and added null check for properties in AbstractProviderModule . java to improve code readability and maintainability
removed the ` doc . get ( " title " ) ` method from multiple files to simplify code and improve readability by using a more descript
refactor Test7005594 . java for improved readability to enhance maintainability and readability of the code
updated error message formatting in ResourcesValidationProcess . java to improve clarity and consistency in error message formatting
refactor TopKRollupPhaseOneJob class to improve performance to enhance performance and readability of the code
do n ' t throw an exception if there be no ip4 address
update modifier modifier to support analog and add MCOptionListener to support analog trigger
updated method signatures and imports in IterableSubject . java and IterableTest . java to use Iterable < T > instead of Object to improve clarity and
http : / / issues . apache . org / jira / browse / amq - 4078 - fix http header decode error
added unit tests for SQL query counting in ActivityHistorySQLServerStoredProcedureTest . java to ensure correct behavior of SQL queries in the database
replaced direct calls to ` mSeekBarY . getProgress ( ) ` with ` mMikephil . charting . utils . LargeValueFormatter
replaced hardcoded character ' z ' with a constant ' INNOCUOS _ CHAR ' and updated related logic to improve code readability and
added @ SuppressWarnings ( " argument . type . incompatible " ) to Platform . java to suppress warnings related to argument type compatibility
[ hotfix ] fix typo in tracelinearscanlifecycleanalysisphase
added a todo comment about the auto - generated method stub in NullAssertionValidator . java to clarify the purpose of the method stub generation
added handling for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure proper formatting of rule keys in the builder
do n ' t create the system profile directory if it do n ' t exist
refactor createThreadFactory method to remove redundant constructor calls to simplify code and improve readability
replaced the use of ` LongAdder ` with ` receiver . getMessagesIn ( ) ` in ` HttpChannelOverHTTP ` and ` Http
added a " accept " attribute to the image input dialog to enhance user experience by allowing users to specify a specific image type
updated imports and modified transport client initialization in ElasticIndexWriter . java and TestElasticIndexWriter . java to improve code clarity and maintainability
updated logging statements in ForkController . java to include witnesses , witnesses , and witnesses classes to improve readability and maintainability of the code
added a new test class ` NullPointerAndEmptyArrayTest ` to validate the behavior of ` NullPointerAndEmptyArray ` to ensure proper handling of null
removed the method ` findConfiguredGeneratedSourcePathsUsingDeps ` from ` BaseIjModuleRule ` , ` IjProjectBuckConfig `
updated the ` constructWildcards ` method to accept a ` Collection < String > ` parameter and modified wildcard pattern handling in ` UaaStringUtils
added validation checks for map work aliases in Vectorizer . java to ensure that the map work has more than one alias to work with the same alias
updated import statements in WeatherQueryTest . java to use MockitoJUnitRunner instead of MockitoJUnitRunner to improve code clarity and maintainability by
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by handling FirmwareSettingsExceptions
updated the ` getLangs ` method to return a ` Set < String > ` instead of a ` String [ ] ` to improve performance and
updated import statements and modified assertions in LazyTraceScheduledThreadPoolExecutorTests . java to improve clarity and maintainability of the code
hbase - 11824 addendum fix table lock issue in takesnapshothandler and takesnapshothandler
[ j2kt ] fix ` ` isnull ' ' call in ` ` isnull ' '
added a test to verify that the explorer should have modified HTTP RPC endpoint to ensure that the explorer does not have a modified HTTP RPC endpoint
added a volatile boolean field ` isSuspended ` and modified thread state handling in ` Thread . java ` and ` Test _ Thread . java `
updated Javadoc visitor classes to use Javadoc . Hidden and Javadoc . Serial instead of Javadoc . Since and Javadoc . Since to
camel - 14429 : camel - proxy - factory - bean should use objecthelper instead of null check for camelcontext
removed duplicate @ Override annotations in several security classes to improve code clarity and maintainability
added ModuleImportDescriptor to Java2TypeScriptAdapter and updated EnumTests to include a static method in MyComplexEnumsAccess to enhance module import
use http : / / www . w3 . org / www . w3 . org / www . w3 . org / www . w
added handling for badged app label in BubbleTextView to enhance user experience by providing more informative content descriptions
added MouseWheelListener to handle mouse wheel events in TestMouseWheelScroll . java to enhance user experience by enabling mouse wheel movement
pdfbox - 4852 : close docactual in pddocument . load ( ) , close docexpected . close ( ) to avoid resource leak
replaced instances of " BTC _ ETH " with " XRB " in KucoinAdapters . java and KucoinIntegrationTests . java
[ hotfix ] [ vacuum ] use string instead of object for agent .
removed redundant checks for " DSH " , " DASH " , " QTM " , and " QTUM " currencies in Bitfin
updated JsonFormat . java to use ImmutableSet and TreeMap for field printing and added default value handling to improve code clarity and maintainability by utilizing a
added a condition to handle array types in JacksonXmlFormatMapper to ensure proper handling of enum types in JSON output
updated VirtualThread . java to replace ` t . getThreadGroup ( ) ` with ` carrier ` and added a new constant ` PARK
refactor DirectoryTaxonomyWriter and NameIntCacheLRU classes to use final variables for catTerm and catTerm to improve code readability and maintain
refactor VetoableChangeSupport class implementation to improve code readability and maintainability
updated the calculation of the y - coordinate in BrowserContentPane . java to ensure correct positioning of the owner ' s y - coordinate
removed the ` InvalidPasswordException ` from multiple method signatures in ` PDFParser ` , ` PDDocument ` , and ` StandardSecurityHandler `
added unit tests for ` setActiveAdmin ` , ` getShort ` , and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManager ` to
fix a bug in the inputbarhelppanel to show the menubar instead of the menu
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
added imports and modified sleep durations in BackendInitializerHelper and TerminalClient to use ThreadHelper for controller state checks to improve code readability and
updated condition checks in SwingStartup . java to use ReleaseStatus . OLDER instead of BuildProperties . getVersion ( ) to improve clarity and maintain
added a boolean field ` includeGeneratedFileComment ` to ` DbMigrationConfig ` and modified ` DbMigration ` and ` MigrationXmlWriter ` to
updated argument descriptions to include " | * " and " | * " in multiple Java files to improve clarity and consistency in command descriptions
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused classes to streamline the codebase
updated call names from " nameVariableName " to " optionName " in OptionProcessor . java to improve clarity and consistency in naming conventions
added a condition to check for parallel classes in TestNGContentHandler to ensure proper handling of parallel classes in XML processing
updated the condition for enabling the active master in RouteInfoManager . java to ensure proper handling of empty addresses and avoid potential NullPointerExceptions
fix checkstyle violation in ctmethodimpl . java
added serialVersionUID fields to multiple exception classes to ensure compatibility with Java naming conventions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated shaBase64 method to include a CONST _ SEPARATOR parameter in DigestUtils . java and added a new test in Shibboleth
updated parameter handling to check for null before processing SYSTEM _ ACTIONS _ ENABLED to improve robustness by avoiding potential NullPointerExceptions
added a new file ` Person . java ` containing a class named ` Person ` with a name field to facilitate the creation of a named Person class
remove unused localendpoint parameter from gossiper . start ( )
updated the condition for checking time strings in AbstractClient . java to ensure correct handling of time strings in comparison
added assertions for time column and total documents in SegmentMetadataImplTest and updated SegmentMetadataImpl to include time column and totalDocs to ensure accurate data
replaced java . awt . Color with net . sf . openrocket . util . Color and updated the background color from RED to DARK _
added disconnectEmitters . onNext ( new Object ( ) ) to disconnectEmitters . onNext ( new Object ( ) ) to ensure proper
[ hotfix ] [ runtime ] use annotation type instead of annotation name for annotation type .
[ java ] add test for click on element hidden by double overflow .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing a dialog
added support for custom JNDI location in JTATransactionManager to enhance flexibility in handling JNDI lookups
changed the access modifier of the ` pickUri ` method from public to private to allow access to the method from other classes
removed the ` hasFunction ` method from the ` Library ` class to streamline the code by eliminating unused methods
renamed ` enabledCiphers ` to ` result ` for clarity and consistency to improve code readability and maintainability by using a more descriptive
[ flink - 18286 ] [ table - planner - blink ] [ table - planner - planner - planner -
replaced IllegalArgumentException with requireNonNull for buffer and user credentials in Identifiers . java and DatabaseConnector . java to improve code readability and maintainability by
rename input to inputmap in valuesresolver . coercevalueforinput ( )
added bounds checking for row and column dimensions in FlightConfigurablePanel . java to ensure proper validation of row and column dimensions
added a call to ` scrollSelectionVisible ( ) ` in ` ThrustCurveMotorSelectionPanel . java ` to ensure the scroll is visible
pmd : fix unnecessarylocalbeforereturnrule npe
refactor script engine retrieval to use ScriptEngineManager instead of ScriptEngineManager to improve code readability and maintainability by centralizing script engine retrieval logic
updated correlation assertions in EuclideanDistanceSimilarity and EuclideanDistanceSimilarityTest to use assertEquals instead of Double . isNaN to improve accuracy
[ hotfix ] fix npe in datatracker . backup ( )
updated the ` relativize ` method to accept an additional ` Path ` parameter and added a new method ` relativize ` to
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to improve clarity and consistency in handling decimal digits
[ hotfix ] [ test ] skip current writer head file 1 . log . tmp
replaced ` toHexString ` with ` toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure accurate JSON representation of list bytes
rename ` ErrorHandlerController ` to ` Error403Controller ` and add new classes ` Error404Controller ` and ` Error404Controller ` to
replaced ` resetTerminal ( this ) ` with ` resetIf ( this ) ` in ` UnixTerminal ` and ` WindowsTerminal ` classes to ensure
updated Tiny . java and NbBundle . java to include new trigger patterns and modified the handling of the collection array to improve code clarity and
refactor connection management logic in ConnectionPool . java to use an iterator instead of an iterator to improve code readability and maintainability
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple classes to improve clarity and consistency in naming
pdfbox - 2452 : avoid npe when create a tree with an id _ tree .
updated error message formatting in JavassistUtils . java to provide clearer context for error handling
[ java ] fix largestreamlettest failure on window .
updated page type handling in HomeFragment to include extra pages based on shared preferences to improve user experience by allowing additional pages based on user preferences
added error handling for broken gaussian image creation in AndroidImplementation . java to improve robustness by handling potential exceptions during image creation
removed the suppressNode ( ) method from BaseParser . java and added @ SuppressSubnodes annotation in BaseParser . java to streamline the
refactor FDFParser initialization to use try - with - resources for resource management to ensure proper resource management and avoid potential resource leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed in the project
added a shell command to execute the key event 82 in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to improve
added JSON serialization for filename to URL in FileDumper . java to ensure proper handling of JSON files in the output directory
add a private method to reset the result notified flag in profilerserver
fix texturehelper . loadtexturefromimage ( ) to use loadimage ( ) instead of loadtexturefromimage ( )
[ hotfix ] [ test ] fix checkstyle violation in test
updated random number from " 97817745008 " to " 9781797845005 " in RandomizersTest . java to
updated the notification sound setting logic in AlarmReceiver . java to include a ringtone configuration to enhance user experience by providing a configurable ringtone
added a method ` reportLoopCount ` to report loop counts in the ` RootNode ` class to enhance the handling of loop count reporting based on
updated FinalizeUpgradeAction to set the current stack version based on the repository type to ensure compatibility with the latest version of the cluster
[ flink - 20286 ] [ table - planner - planner - planner - planner - planner - planner -
removed redundant call to streamManager . open in ItemOrientedStep . java to improve code readability and maintainability
added a new file ` CountedLoopProblem . java ` that implements a loop that calculates the number of elements in a string to demonstrate the
[ gr - 16464 ] fix parameter name in executecompiledmethod ( )
[ gr - 13232 ] fix issue with jvmci _ pending _ speculation _ offset field in vmconfig .
updated KafkaStreamsTracing class to use ValueTransformerWithKeySupplier and TracingValueTransformerWithKeySupplier instead of TransformerSupplier to enhance tracing capabilities
[ hotfix ] [ feedback ] fix constant sum question detail for constant sum
removed the call to DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java to streamline the application process by eliminating unnecessary
added thread management functionality to the CloseRace class to improve resource management and error handling for child threads
change return value from ` val ` to ` val . intValue ( ) ` in ` IntPointField . java ` and add assertions in ` Test
updated the arc size calculation in MyButton . java to use a fraction of the width and adjusted related calculations to improve the accuracy of the arc size
updated the value of veryHighWidth from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java
rename ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` in ` SqlSourceBuilder ` and related classes to improve clarity and consistency in
removed the ` waitForStateTransitionToEnd ` method and replaced it with direct calls to ` waitForStateTransitionToEnd ` in ` WorkProfileTest
added imports for CasCoreAuthenticationPrincipalConfiguration , CasCoreHttpConfiguration , and CasCoreLogoutConfiguration in multiple test files to ensure
updated byte reading logic in Volume . java to use a more efficient byte array to ensure accurate reading of single byte [ ] data
camel - 14297 : camel - http - fix the test error of camel - http
refactor proxy class path creation to use a builder pattern to improve code readability and maintainability by using a more descriptive variable name
added a new class MediaScriptScopeProvider for managing AudioManager and VoiceManager to provide a mechanism for managing audio and voice scope elements in the application
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to use it in AnimFactory to improve layer management
added a check to return early if the queue size is zero in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to
added null checks for mapOp and mapWork in MapRecordProcessor and updated exception handling in TezProcessor to improve error logging and ensure proper handling
refactor center handling in CylinderRegion to use a unified method for better readability and maintainability to improve code clarity and maintainability by
[ hotfix ] [ test ] use expectedexception in testbadusecases
updated query parameter handling in QueryExecutorImpl . java and added a new test for multi - execute in StatementTest . java to ensure proper handling of
do n ' t try to customize the security environment if it ' s not already set .
updated the API endpoint in ReviewInterface to include the rctag in the API query to enhance the API ' s functionality by allowing users to specify the
refactor test cases in Test . java to improve code readability and maintainability
updated PBEKeySpec to use keyLength instead of blkSize to ensure correct key length is used for encryption
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure proper handling of section definitions in the document
added distance calculation and accuracy checks in GpsLoggingService . java to improve accuracy of jump detection based on location information
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to streamline code and improve readability
chore ( deps ) : generate sample code in the java microgenerator ( # 116 )
[ hotfix ] [ runtime ] use reference for rootnamefn and sourcefilterfn instead of boolean
removed unnecessary sorting of data and added in AllAppsList . java to simplify the code and improve readability
refactored ` SettingsActivity ` to extend ` PreferenceActivity ` instead of ` ThemedPreferenceActivity ` and removed the ` ThemedPreferenceActivity
updated the value class name from " HostD " to " UsingUnresolvedD " to clarify the purpose of the value class generation
updated assertion syntax in FST . java to improve code readability and maintainability
added an assertion to check if a Security policy does not exist or a file to ensure that the security policy does not exist or not a file
[ olingo2 ] add getconfiguration ( ) method to olingo2component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for the test to complete
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by removing unnecessary parameters
add a new method ` sendimagebyhttp ` and ` sendxmppimagebyhttp ` to ` xmppclient ` and ` xmpp
camel - 16297 : camel - netty - fix the issue of netty producer not be able to get the channel from the pool
updated regex pattern in BalancedClickhouseDataSource . java and added tests for host names in BalancedClickhouseDataSourceTest . java to
removed the system property " org . apache . jasper . compiler . disablejsr199 " from FragmentActivator . java to streamline the
added null string handling in CSVRecordReader and CSVRecordReaderConfig to support handling of null values in CSV format configuration
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to skip operations on the LiquibaseService instance
updated the type of ` aggregatedScope ` from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java `
update smarthome / items / smarthome / items to use ` ` / command ' ' topic
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve error handling by
added " zkCredientialsProvider " and " zkCredentialsProvider " to SolrXmlConfig and updated related assertions in TestSolrXml to improve
fix mana tablet ' s mana tablet not work properly
added a method to set the identifier collection in P25P2DecoderState to ensure proper handling of call event identifier collection
removed the import of HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter from TestRandomChains . java to streamline the code
updated thread pool name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to improve clarity and consistency in
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
corrected a typo in the assertion message in TypeDefinitionRegistry . java to improve readability and maintainability of the assertion
added visibility of shareWithMeIcon in LocalFileListAdapter . java to hide the share with the user ' s icon
updated the stylesheet link from HTTP to HTTP in multiple classes to ensure compatibility with the latest version of the browser
updated ` RouterFilter ` , ` RouterServerListFilter ` , and ` RouterDistributorTest ` to use ` getOrLoadSortedService
updated assertions in TestIndexWriterMergePolicy to include segment and segment counts to improve clarity of assertion messages for better debugging
[ hotfix ] [ runtime ] deprecate multilayerperceptron , multilayerperceptron , and runmultilayerperceptron
http : / / issues . apache . org / jira / browse / amq - 3078 - fix npe in crawlersessionmanagervalve
refactor getJspApplicationContext method to use privileged actions based on security settings to enhance security by allowing access to the application context based on security settings
refactored RocketComponentConfig to use minL and maxL instead of l and updated length calculation logic to improve accuracy and accuracy of model
updated NonceService and OpenIDAuthenticationProviderModule to include Scopes . SINGLETON in the bind method to ensure that the NonceService
updated the parent link update logic in FileWrapper . java to ensure that child links are updated correctly to enhance user experience by ensuring child links are updated
removed the HttpMethod parameter from the ` doExecute ` method and adjusted the URL construction in ` SpringCloudPlugin . java ` to streamline error handling
updated publishWithDelay parameters from 100ms to 500ms in RetrievalBlockingMessageStoreTests . java to increase the expected value from 100ms to
added a boolean flag ` mShiftCodesAlways ` and modified the logic for determining if the ` mShiftCodesAlways ` is set to true to
[ flink - 24486 ] [ zookeeper ] fix race condition in zookeeperleaderelectionmanager . isleader
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated filter condition in AbstractKerberosDescriptorContainer to use identity . isReference ( ) instead of identity . getName ( ) to simplify the filtering logic for
updated the ` newInstance ` method signatures to use a ` noop ` parameter instead of ` AbstractCommandOptions ` to improve flexibility in creating ArtifactCache instances
added a sleep delay of 3000 milliseconds in the exception handling in TestListenTCPRecord . java to ensure proper handling of InterruptedExceptions
refactor argument handling in PatchExtensionMethod to use original arguments to improve code readability and maintainability
replaced ` Map < String , String > ` with ` Set < RawNativeLibraryImpl > ` in ` RawNativeLibraries ` and updated related methods
added support for " apply - sequence " and " ignore - send - failures " attributes in DefaultRouterParser and AbstractChannelNameResolvingMessage
remove unused ` x509publishurl ` field from ` jwkviewresolver `
refactor reader assignment logic in QueryComponent . java to improve code readability and maintainability
replaced instances of ` MaxFloatFunction ` with ` Double2Parser ` in ` ValueSourceParser . java ` to improve parsing efficiency by using a
simplified the return statement in the Container class to improve code readability and maintainability
removed unused variables and removed IOException from the next ( ) method in TokenSources . java to streamline code and improve readability
cloudstack - 12626 : fix the bug that cloudstack / cloudstack / cloudstack / cloudstack / cloudstack / cloudstack /
added conditional annotation and modified flowBuilderServices initialization in CasMultifactorAuthenticationWebflowConfiguration and CompositeProviderSelectionMultifactorWebflowContextConfiguration to
updated ` WriteJdbcPTest ` to use ` ResultSetMetaData ` instead of ` AtomicInteger ` and refactored database setup methods to improve clarity and
removed conditional check for null and empty string before setting the Look and Feel settings in DefaultPlatform . java to simplify code and improve readability by
refactor method calls from ` getDesiredStateEntity ( ) ` to ` getDesiredStateEntity ` in ` ServiceComponentHostImpl . java `
removed conditional logic for setting margin start in FloatingTaskView . java to simplify margin calculations for better readability and maintainability
added a condition to break the loop in RootFolder . java and updated status line setting in NavigationShareTab . java to improve user experience by providing
[ hotfix ] [ runtime ] remove unused variable in cpucallgraphbuilder
[ flink - 18286 ] [ gui ] fix layout to use deftoolbar instead of ` ` 0 ' '
added NetworkAddressChangeListener to HomekitImpl and updated related warning messages to improve network management and maintainability of the HomeKit implementation
updated lease retrieval and assertions in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of leaseManager to improve
replaced ` Optional . < SourcePath > ` with ` Optional . absent ( ) ` for ` arg . prefixHeader ` and ` arg . link
added null check for e . getMessage ( ) in ExceptionHandlerRegistryFactory . java and a corresponding test in ExceptionHandlerRegistryTest . java to ensure
changed the ` nextID ` variable to be ` volatile ` and modified its usage in ` DirectoryTaxonomyWriter . java ` to improve thread safety and
[ hotfix ] [ test ] make jmsqueuecompositesendreceivetest more robust
added HasSourcePath interface and updated AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to implement it
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify error handling by eliminating unnecessary string manipulation
added a custom index field name to the FastTaxonomyFacetCounts class and updated related test cases to ensure correct handling of custom index field names and
updated the calculation of ` millis ` based on ` seconds ` and ` nanoseconds ` in ` Instant . java ` , and added a new test
fix attribute lookup to use name ( ) instead of getbuffertype ( ) . name ( )
added block update script handling in CopyPaste . java to ensure that the update script is blocked before proceeding
added a new file TestCMoveLimitType . java that implements a ByteBuffer interface with a method to test char buffer operations to ensure proper handling of
[ java ] add recordconfiguration . contains ( recordertype ) method to recordconfiguration .
fix the issue that camel - sql - stored - template - ast . scaletoken do n ' t work .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to align the vendor with the
refactor color handling in Main . java and VersionCommand . java to utilize a new method for printing version information to improve code readability and
refactor token validation logic to use a hash variable instead of a stored token to improve code readability and maintainability by centralizing token validation logic
added EOFException handling in Http11InputBuffer . java to improve error handling by throwing an EOFException
add unit test for delete member and non - existent group
[ hotfix ] [ runtime ] remove unnecessary array creation
deleted the V2ReplicationProtocol . java file to remove unused code to streamline the codebase
updated references from ` BuildRule ` to ` SourcePath ` across multiple classes to improve clarity and consistency in handling compilation time classpath dependencies
added two new demo classes , ConstructorArgsDemo . java and FinalDemo . java , and modified StupidFinal . java to include Strict
use threadlocal instead of threadlocal to avoid memory leak
updated assertion to check for replication factor in WriteResponseHandler . java to ensure that the response count is less than 2 times to ensure that the replication factor
added null check for ` item . getIndexNumber ( ) ` in ` ItemRowAdapter . java ` to ensure that ` item . getIndexNumber (
rename methods and variables from " showAnchestorsShown " to " showAncestorsShown " across multiple files to improve clarity and consistency in
added a conditional check to return early if the app ' s width is less than 12 to improve performance by avoiding unnecessary processing when the app ' s
updated the equality check in ChangeLogParameters from ` = = ` to ` . equals ` in ` ChangeLogParameters . java ` and added a
changed the visibility of the loggers map from static to final to ensure the loggers map is declared as final
updated the method to return the base plot instead of the current plot to ensure the correct plot is returned for the current plot
camel - 14263 : camel - fileupload : add initial creation flag to create upload directory
added a boolean parameter ` sendStatus200 ` to several constructors and methods in ` ServerGenerator ` , ` ServerFCGIConnection ` , and
added a condition to check if the comment length is greater than zero before processing to ensure that only valid comment characters are processed
added imports for BuckFileType and BuckFileTypeManager , and modified association handling logic in BuckModule . java to enhance file type management and
replaced specific function imports with a wildcard import and updated method signatures in ComposedUtil . java to improve code readability and maintainability by
[ hotfix ] [ test ] add support for rtmlocking on non - linux cpu
corrected the spelling of " DUMMY _ ACCOUNT _ NAME " to " DUMMY _ ACCOUNT _ NAME "
refactor Player class to improve code organization to enhance maintainability and readability of the code
added a static method ` mockitoPackageImport ` to the ` AbstractModbusOSGiTest ` class to ensure that the ` mockitoPackageImport
fix findbugs warning in polyglotexceptionimpl . java
added a reset method to ` ShadowFontsContract ` and modified ` ShadowFontsContract ` to utilize the ` @ ForType ` annotation
added ` toMillis ` method to ` TimeGranularity ` and modified ` endDateTime ` initialization in ` PinotDataSourceMaxTime `
added null check for ` _ try . getFinally ( ) ` and ` tryBodyAnalysis ` in ` ControlFlow . java ` to ensure
updated assertions in Assert . java and ArrayEqualityAssertTest . java from expectedExceptions = AssertionError . class to expected . length to improve error handling
fix wrong stacksize calculation in windowclicklogic
corrected a typo in the index method call in MeshBuilder . java to improve code readability and maintainability
nifi - 129 : remove the controllerserviceprovider from the processcontext in standardprocessscheduler
added AP _ PROCESSORS parameter to KotlincToJarStepFactory and created a test for it in KotlincLibraryIntegrationTest to
updated RESCROLL _ DELAY from 750 to PAGE _ SNAP _ ANIMATION _ DURATION in DragController and PagedView classes to
added functionality to refresh shortcuts based on user permission to ensure shortcuts are only refreshed when necessary to improve user experience by ensuring shortcuts are
added case statements for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle the HISTORY _ SEARCH _ 
added null check for cname in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure proper handling of null core names and improve
added marker selection functionality to the NearbyMapFragment to ensure the bottom sheet is deselected when the map is selected
added a catch block for Throwable in FileSyncAdapter . java to handle potential exceptions more gracefully
refactor test assertions in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve code readability and maintainability by ensuring
removed redundant refill calls and updated filter condition in FeedQueues . java to improve code readability and maintainability by reducing redundancy
make defaultdrmsession and defaultdrmsessionmanager thread - safe .
updated ` AndroidBinaryDescription ` and ` AndroidBinaryBuilder ` to use ` Locale . US ` and added a ` setPackageType ` method to
updated XML MIME type from " text / xml " to " application / xml " in multiple test files to ensure compatibility with the application ' s xml
updated the initialization of ` confFile ` to use ` INSTANCE . confFile ` instead of ` INSTANCE . confFile ` to ensure consistent usage of
updated the timeout duration from " sleep 5 ; exit 1 " to " exit 1 " in HostPortWaitStrategyTest . java to ensure proper handling
updated the data type of ` numCountDistinct ` and ` getGroupingIdValue ` methods from ` IntMath ` to ` LongMath ` to
added headless exception throwing for HeadlessException in Toolkit . java to ensure proper handling of headless environments
[ furnace ] do n ' t use cansmelt in the furnacehandler . cansmelt
[ hotfix ] [ solver ] [ solver ] add a description for move thread count
[ flink - 14157 ] [ table - planner - planner ] fix search parameter path with different resource name .
added a new test class ` Issue582Test ` to validate the functionality of ` Pair . Pair < String , Integer > > ` in the
[ native ] add test case for decimal overflow in unit test
refactor LoadingCache class implementation to improve performance and readability of the code
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest to ensure proper handling of non - constructor methods with class names
[ java ] add method to check if the element be selected or disabled .
refactor view existence check in ViewExistsPrecondition and add hasView method in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator classes to improve error handling and
refactor DOMUtil class to improve code organization to enhance maintainability and readability of the code
added translation calculations to TaskViewUtils and implemented a logMatrix method in Utilities to enhance user experience by providing more detailed logging of matrix transformations
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags and Rotation
added a walk method to TempFSTTermsReader and modified temp term output handling in TempTermOutputs to improve arc reading performance and ensure correct
added SolrQueryRequest parameter to multiple create methods across multiple factory classes to enhance request handling for Solr queries
added null checks for Post content and announcement validation in SingleTableMySQLTriggerTest . java to ensure proper handling of null values in SQL queries
refactor FieldValueHitQueue to use a new setComparator method and introduce a new setComparator method to improve code readability and maintainability by
updated SQL query prefix string formatting in PhoenixQueryBuilderTest . java to improve readability and maintainability of test cases
added Spark . awaitInitialization ( ) method to the RequesterTest class to ensure proper initialization of the Spark instance
added methods to save and save the total storage pool and total storage pool in DynamicPropertiesStore . java to enhance flexibility in managing total storage pools and
added NinjaProperties handling in AssetsController and updated related test cases in AssetsControllerTest to utilize it to improve file handling and
updated the method call from ` mapMarks . containsKey ` to ` getMapMarkKey ` in ` MapMarksManager . java ` to
added a ` TokenRewriteStream ` parameter to multiple methods in ` BaseSemanticAnalyzer ` and ` DDLSemanticAnalyzer ` to enhance the handling of
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to simplify error handling
http : / / issues . apache . org / jira / browse / amq - 4253 - add url to jxbrowsermanager
updated image file creation logic to use equals instead of equals for format equality to improve code readability and prevent potential null pointer exceptions
[ somfytahoma ] remove the bridge id from the exception message .
disable flaky test on github
refactor OpenWireConnectionTimeoutTest to use static final constants for SSL configuration to improve code readability and maintainability by centralizing SSL context initialization
updated warning log messages and added NaN value handling in DynatraceExporterV2 . java to improve clarity of warning messages and ensure proper handling of
added a call to remove the session ID from the session info to ensure that the session ID is removed from the session information
added null check for hostname in HeartBeatHandler and adjusted formatting in AlertReceivedListener to improve code readability and maintainability
refactor buffer flushing logic in ChannelEndPoint . java to improve readability and maintainability of the code
[ hotfix ] [ test ] use kie - api instead of kie - api
added unit tests for the seekTo method in ShadowMediaPlayerTest and implemented the seekTo method in ShadowMediaPlayer to ensure proper handling of seek - to
updated method names from ` createTask ` to ` createThrowingTask ` in multiple executor classes to improve clarity and consistency in naming conventions
added a conditional to set the border of the tabCloseButton based on the IS _ AQUA _ LAF flag to ensure the tab close button
added POST requests and read timeout settings in TSPTimeStampService . java and modified test assertions in TestSignatureInfo . java to improve request handling and
update xstreamutils . createxstream ( ) to include classloader
added error logging for invalid diamond types in ` Attr . java ` and created a new ` DiamondRaw . java ` class to improve error handling for
[ hotfix ] fix checkstyle violation in reloptutil
updated the requirements for unsigned 16 and unsigned 32 - bit values in Http2Settings . java to ensure that unsigned 32 - bit values are required for
deleted the file ` Issue664Test . java ` and deleted the file ` Issue664Test . java ` to clean up the code and
removed redundant session insertion logic in SessionsPoolTest . java to streamline the session management process and improve error handling
added start and end object in geojsonwmsbuilder to allow for start / end root object .
updated the method to set the index of the table to use intValue ( ) instead of a hardcoded value to improve code readability and maintain
added a method ` canCurrentlyManuallyUnstash ( ) ` in ` TaskbarStashController . java ` to check if the
camel - 14497 : camel - spring - boot : remove customid attribute from route coverage helper
modified the ` getEventMismatchMessage ` method to accept a ` boolean waitForExpectedCount ` parameter and adjusted the timing logic accordingly to improve event mismatch handling
added a new file ` HeaderFixer . java ` that implements a header file processor to handle file header processing to facilitate the handling of header files
added broadcast permission handling for loading complete in Launcher and updated app widget ID handling in LauncherProvider to enhance user experience by allowing broadcast broadcasts
deleted the SuperJumperAndroid . java file to the class is no longer needed in the project
updated the return statement in SystemTableScan and modified test queries in TestStarQueries to improve performance and ensure proper session management in planner queries
removed the KeyValuesProviderAware interface and ObservationConventionAware interface from the Observation class to streamline the code by eliminating unused interfaces
add missblocks to processidrematches ( ) and remove it from missingitems list
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use explicit casting to ensure proper type safety and avoid potential ClassCastExceptions
added caching mechanism for data format strings in HSSFCellStyle . java to improve cache management and prevent potential memory leaks
updated the query string in RemoteAuthenticationEndpointTests to include a filter attribute to ensure correct filtering of user credentials in the response
updated the condition from ` def . needsInput ( ) ` to ` def . finished ( ) ` in ` DeflateCompressor . java ` to
added container info and workspace configuration to the logger in Launcher . java to improve logging clarity and ensure proper workspace management
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
remove dead test from logback - classic
added null check for newInput and improved debug output formatting in BugContentProvider and BugGroup classes to enhance robustness by preventing null pointer exceptions and
added a " Reopen in Browser " menu item and modified server opening logic in JavaScriptEditor . java to improve user experience by ensuring the browser is
added error handling for multiple times in SemanticAnalyzer and updated method signatures to include a SemanticException message to improve error reporting and provide clearer context for
updated the ` addEntryListener ` method to include an ` EqualPredicate ` parameter in the ` addEntryListener ` method to ensure proper handling of
fix coordinatearrays . reverse ( coord ) to return early if coord . length < = 1
updated the method call for setting the open state in ToolbarPanel . java to improve code readability and maintainability
added a new variable ` first ` and initialized it to false in ` TestPayloads . java ` to ensure that the variable ' first ' is
replaced manual overview mode entering with a method call to showOverviewMode to improve code readability and maintainability
[ hotfix ] [ test ] fix networkroutetest failure
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of integer values
updated variable declarations in NestedArithmeticTest . java and added a @ Override annotation in AMD64FloatConvertNode . java to improve code readability and
updated HttpClientRequestImpl to use appendBytes for pending chunks and modified assertions in HttpTest to improve buffer handling and ensure correct behavior of buffer operations
updated verboseLevel assignment and modified artifact replacement logic in GetMavenDependenciesTask . java to improve clarity and correctness of the artifact string
pdfbox - 2452 : remove unnecessary cast to cosdictionary ( a suggest by valerybokov )
removed unnecessary print statement in ReferenceUtil . java to simplify code and improve readability
[ hotfix ] [ table - planner - planner ] add visibilitypredicate environment to fieldvisibilityschematransformation
added ` solidityJsonRpcHttpPort ` and ` solidityNodeHttpJsonRpcEnable ` parameters to the ` CommonParameter ` class and updated
added type check for folder before removing drop target to ensure proper handling of DropTarget instances
refactor stub jar generation logic into a separate method ` createStubJar ` to improve code readability and maintainability by encapsulating the
updated feature descriptions in GettingStartedTab . java and added new Features in StartPageTopComponent . java to enhance user experience by providing more
[ java ] use meteredflusher instead of meteredflusher to avoid race condition .
removed unnecessary casting of booleanValue ( ) in OnlineTestCase . java to simplify the code by eliminating unnecessary casting
updated ReturnAttributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure correct return attributes are returned for all users
refactor the handling of onIdleTimeout and onContentAvailable in HttpChannelState . java to improve clarity and functionality to enhance code readability and
refactor CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to improve code readability and maintainability
updated TABLE _ HEADER _ SEPARATOR regex and modified matcher logic in TableBlockParser . java and added a new test case in TablesTest .
updated the return value from 32.0 f to 31.5 f in Camera . java to ensure compatibility with the latest camera features
added a preference for the " startonbootup " option in GpsSettingsActivity and updated URLs in Utilities to ensure proper handling of the
updated the client secret value from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to ensure that the client secret is consistent with the
updated assertions in MySQLStoredProcedureTest , PostgreSQLStoredProcedureTest , and PostgreSQLStoredProcedureTest to include the parameter name
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race conditions
refactor ` getInputPinotFS ` , ` getOutputPinotFS ` , and ` getOutputPinotFS ` methods to use ` PluginManager
added locale checking in TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct date formatting based on the specified language
added MetalLookAndFeel import and set its look and feel to improve user experience by allowing the MetalLookAndFeel to be displayed
added a PreDestroy annotation and modified sendMessage handling in Bot . java to ensure thread safety and prevent potential memory leaks during sending
removed the message from the error message in the GlobalErrorHandler to simplify error handling by removing the message from the error message
rename moduletable . addreads ( moduleentry ) to moduletable . addexports ( moduleentry )
added logging for CmdLineException in PinotAdministrator . java to improve error handling for command line exceptions
updated equals ( ) and hashCode ( ) methods to use isEqualTo ( o ) instead of super . equals ( o ) in Subject . java to ensure
updated variable names from " RIGHT " to " END " in CustomPlaybackOverlayFragment . java and ImageButton . java to improve clarity and consistency in
updated zoom level minimum and maximum values for map zoom controls in BasicMapViewer . java to ensure correct zoom level settings for better user experience
refactor DrillRoot to use process user and process group names from ImpersonationUtil to improve code readability and maintainability by centralizing
replaced instances of ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in multiple files to improve code readability
added argumentExtractors parameter to DelegatedClientAuthenticationAction and updated service resolution logic in DelegatedAuthenticationWebflowConfiguration to enhance service resolution flexibility and
changed the defaultGroup variable from non - final to final in NacosServerRegisterRepository . java to ensure the defaultGroup variable is declared as final
fix tilesizechanger . destroy ( ) to call createtilecaches ( )
removed redundant calls to mGuideInfoRow . addInfoRow ( mSelectedProgram , mSelectedProgram , false , false ) in CustomPlaybackOverlay
refactor cleanEntriesForFeedsWithoutSubscriptions method to use a list of subscriptions instead of a single subscription to improve code readability and maintain
replaced ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to streamline authentication handling
nifi - 154 : fix filebasedclusternodefirewalltest to use temporary folder instead of system . io . tmpdir
[ hotfix ] [ coordinate ] fix infinite loop in conicfive points .
reformatted conditional statements in RandomAccessReader . java for improved readability to enhance code readability and maintainability
added @ SuppressWarnings ( { " vararg " , " vararg " } ) annotations to Fields and MockitoBeforeTestNGMethod classes to suppress
refactor CImage methods to use a list of Image objects instead of an array to improve code readability and maintainability by encapsulating
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to ensure proper handling of byte array comparisons
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in multiple files to improve clarity and consistency in naming convention
replaced null checks with ` Objects . equals ` in multiple classes to improve code readability and maintainability by using ` Objects . equals `
[ hotfix ] [ runtime ] rename classresolver . resolveclassfromcanonicalname to resolveclassfrombinaryname ( )
added multiple assertions to verify configuration properties in NinjaDefaultTest . java to ensure proper handling of views in the Ninja configuration
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile ` to
updated padding bottom and adjusted listViewPositionOffset values in DetailFragment . java and ListFragment . java to adjust padding and positioning based on
updated exception handling to use ` Thread . currentThread ( ) . interrupt ( ) ` instead of ` Exception ` to improve code readability and maintainability
added null checks for ` f . getValue ( ) ` and ` field . getValue ( ) ` in ` HttpFields . java ` , and created
do n ' t allow staticnat rule to be use in specified network id
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure
added a call to remove the extra empty screen from the workspace to ensure proper handling of extra empty screens in the workspace
added a new boolean variable ` fixedWidth ` and modified the logic for adding glyphs in ` BitmapFont . java ` to improve glyph positioning
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored related methods in ` ChangeLogFragment ` to simplify the
added methods for preEvent , postTransition , and stateMachineError in AbstractStateMachineFactory to enhance state machine handling capabilities
refactor ConfigDescriptionProvider to improve code readability to enhance maintainability and readability of the code
updated role creation to include " role1 " and " owner " in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase
added a new boolean variable ` countSorted ` and modified conditions in ` FacetComponent . java ` and ` TestDistributedSearch . java ` to
updated the cache file path for the checkstyle cache file in CheckstyleReport . java to ensure proper configuration of the checkstyle cache file
added functionality to stop the Jetty Solr runner in DeleteInactiveReplicaTest . java to ensure that the Jetty Solr runner is stopped before proceeding
added a file name parameter to the FileActionsDialogFragment constructor and updated its usage in OCFileListFragment to enhance user experience by allowing users to
added INVALID _ DIRECTION constant and updated conditional checks in CellLayout . java to improve code readability and maintainability by using a constant
[ java ] update inner transfer api endpoint to match new api version .
[ hotfix ] [ test ] implement jobexecutionservice # assertjobrunningeventually ( )
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client ` package to enable the admin
replaced specific imports with a wildcard import and added visitIdentifier method implementations in FindTypes . java to improve code readability and maintainability by
added a method to set the action text color in AuthenticatorActivity to improve user experience by providing a clearer color for the application
added a new ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , ` StreamSupplierComponent ` , and ` MockManager `
refactor method names from ` addTestSteps ` to ` createTestSteps ` in ` Runner . java ` to improve code readability and
renamed test methods from " noArgMethodIsNotValid " to " validNoArgMethod " in StaticHandlerMethodResolverTests and MethodInvokingMessageHandler
added a method to cancel a child process in SparkClientImpl and implemented a cancelClient method in RpcServer to ensure that the child process exits
added ` getImplicitPreCoercionValue ( ) ` method to ` SkylarkParamInfo ` , ` ParamInfo ` , and
initialize lastDisplayedUser with Optional . empty ( ) to ensure lastDisplayedUser is initialized to avoid potential NullPointerExceptions
added an ` findAll ` method to ` QueryDslMongoRepository ` and updated its usage in ` QueryDslMongoRepository ` to enhance query
added null checks before stopping the SchemaRegionConsensus and DataRegionConsensusImpl instances to avoid potential NullPointerExceptions when stopping
[ hotfix ] [ benchmark ] exit warm - up loop in case of failure
add xread and xreadgroup method to multikeypipelinebase and multikeybinaryredispipeline
removed unnecessary comments from LinkedBufferInput and StreamInput classes to streamline code and improve readability
added WebSecurityCustomizer bean to CasWebAppSecurityConfiguration and refactored the configureHttpSecurity method in CasWebSecurityConfigurerAdapter to
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStoreNoDoAs `
added a method to register content providers in ShadowContentResolver and updated ContentProviderController to use it in ContentProviderController to improve provider registration logic and ensure
updated AttributeReader constructor to use ClassFile . Version instead of Version to improve compatibility with ClassFile ' s version handling
added a keep - alive configuration to the SingleConnectionManager configuration to ensure that the connection is kept up to date
[ java ] rename unicastflowcontrolsender and unicastsender flowcontrolsupplier to unicastsender flowcontrolsupp
added null check for getCurrentPoint ( ) in DrawLocus . java and GBasicStrokeD . java to ensure proper handling of null points in
added error handling for IOException in ChannelEndPoint and modified flushing logic in WebSocketMessageD13Test to improve resource management and ensure proper resource management during
simonstewart : add option to use selenium . take . screenshot for selenium
replaced usage of ` assertEquals ` with ` assertThat ` in multiple test files to improve code readability and maintainability by using a more descriptive
remove deprecate method from trufflelanguage . getcontextreference ( )
refactor Throwable handling in StubberImpl and add new test classes for handling bad exceptions to improve error handling and ensure proper reset of mocking progress
updated ascendant check and error handling in Actor . java and Group . java to improve clarity and consistency in error reporting
added location permission dialogs and updated the getCenter method in LocationPickerActivity to utilize LocationServiceManager to enhance user experience by allowing users to
add a new class ` CounterMDB ` that implements a message driven bean using ` MessageDrivenBean ` to demonstrate the functionality of ` Counter
added CookieSpecs import and set it to STANDARD in GetHTTP . java to enable standard cookie specification for HTTP requests
replaced the conditional check with a method call to ` r1 . overlaps ( r2 ) ` in the ` Intersector ` class to improve
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering logic in AirspyT
added monitoring URL parameter to ScrollingPanel and SystemInformationsButtonsPanel constructors to allow users to configure the monitoring URL for better user experience
[ k8s ] remove kubernetes . service . create - timeout config option
added switch - case handling for place descriptions in NearbyListFragment to improve user experience by allowing customizable icons for place descriptions
added a null check for the package before adding it to the allClassesByPackage to prevent potential NullPointerException when the package is not initialized
added a new file PrintInlining . java containing a main method that prints " Passed " to provide a system . out . println for
fix Javadoc . parse ( ) to correctly handle nested braces
[ java ] remove unnecessary assignment of initialtermid and requestrecordings correlationid in archivetest
updated EdgeDataTable to use ` graph . getEdgesAndMetaEdges ( ) ` instead of ` graph . getEdges ( ) ` to ensure
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to streamline code and improve maintainability
updated Timber logging to include playback speed information to improve clarity of error messages for better debugging
added roomremovedevent to muc room when the cluster be start .
updated the JSON string format from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure compatibility with the latest features
added key properties to the TextureHelper class to enhance texture handling capabilities
refactor ` PythonDslProjectBuildFileParser ` to use ` EventReportingProjectBuildFileParserDecorator ` instead of ` PythonDsl
[ j2cl ] add library normalization pass to j2cl transpiler
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory ` to
[ hotfix ] [ runtime ] remove unnecessary check in memorysegment . isfreed ( )
added TemporalType import and annotation to ConsoleSessionVO . java to ensure proper handling of timestamp timestamps in the application
added a new file ` Hbs . java ` and ` HbsTest . java ` for handling template loading to facilitate the use of the Handlebars
refactored code to improve readability and maintainability to enhance maintainability and maintainability of the code
updated the iteration method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to improve clarity and consistency in
[ selenide ] add more test to confirmtest . testconfirmtest . waituntilalertdialogs
added a check for distinct column indices in the ReduceSinkDeDuplication class to ensure that only distinct column indices are processed
refactor MiscUtils to improve handling of added - to - list entries and enhance error reporting to enhance code readability and maintainability by reducing
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
corrected the package name from " websocket - server " to " jetty - websocket - client " in TestOSGiUtil . java to ensure
make samlauthenticateduser . getattributes ( ) return an immutable map instead of unmodifiable map
do n ' t try to repaint the modified program if it ' s a bad location .
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with ` bytes ` in multiple Java files to simplify code
updated method call from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure accurate
added a check for the class name " javax . naming . Context " in HtmlJndiTreeReport . java to ensure that the class name
refactor database option handling in StorageUtils to use a switch statement for better readability to enhance code maintainability and maintainability by using a switch
updated edge type from " double " to " mutual " in ImporterGEXF . java to ensure proper handling of mutual edge types
removed the static final int FLAG _ SLIPPERY constant from StatusBarTouchController . java to streamline the code and improve readability
truffle : do n ' t use math . min ( 1 , 1 ) for non - array field .
added methods to retrieve and set Google Drive folder path in PreferenceHelper and updated related classes to utilize it to improve user experience by allowing users to
add a new method ` shuffleSuggestions ` to ` RadioButtonTreeItem ` and add a new method ` shuffleSuggestions ` in ` 
added @ Nullable annotation to multiple assertThat methods in Truth . java to enhance type safety and prevent potential null pointer exceptions
updated byte array return values in ArrayUtil . java for better readability to improve performance and maintainability of the code
added a new test class ApiExceptionTest and modified ClassInstrumentor to check if the ctor can be instrumented to ensure that exceptions are only instrumented
added a synchronized map for waitingForAnticompaction in StreamIn and StreamInManager to manage the waitingForAnticompaction map to
added a boolean field ` isKeyguardSecure ` and its getter / setter methods in ` ShadowKeyguardManager ` , and refactored test
added serialVersionUID fields to StringDialog . java to ensure proper serialization of the StringDialog class
updated status processing to replace ' > ' with ' ' and added a conditional check for the length of ` overrides ` to ensure proper handling of
rename the test method from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureException
[ hotfix ] fix asyncfile # checkreaded ( ) not call after close ( )
updated LIGHTS _ NUM , LIGHTS _ INTESITY , and LIGHT _ INTESITY in HybridLightTest . java
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple test files to simplify filesystem initialization and improve code clarity
changed the type of ` PathWithLines ` from ` List < String > ` to ` List < PathWithLines > ` in multiple classes to
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
[ hotfix ] remove @ notnull annotation from test _ dirs array
added a call to Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) in ShadowParcelFileDescriptor . java to ensure proper resource
added a method to reset the prefix index in BasisLibrary and refactored the prefix index retrieval in BasisLibrary to improve thread - safety
added logging level annotation to TestDistributedStatsComponentCardinality . java to enable testing with HTTP connection logging
added multiple calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure proper handling of immutable values in the IntList
added @ NotNull annotations and modified URI construction in GrpcServerRunner , GrpcClientBuilder , UnitTestIdleHelper , and UnitTestReadHelper
move graal . workdir to java . util . function . supplier instead of java . util . function
fix invalidation of insight . keysunchangedassumption ( ) and insight . functionsunchangedassumption ( )
added platform - specific file writing for the manifest file in GenerateManifestStep . java to ensure proper handling of OS - specific manifest files
add a new class RFE3531161 for handling null checks of non - null values in FindNullDeref . java to provide a
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and ThingResource classes to enhance null safety and prevent potential NullPointerExceptions
[ hotfix ] fix checkstyle violation in masterjobcontext
added a conditional block to initialize the stream in PageDrawer . java to ensure the stream is properly initialized when necessary
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable accessing all apps
refactor FragmentTestUtil to use ActivityController for creating FragmentActivity instances to improve code clarity and maintainability by using Robolectric ' s
renamed methods and variables from ` imageObj ` to ` gpsObj ` in ` FileProcessor ` and ` ShareActivity ` to improve clarity and
rename ABCASE classes to TestABCASE1 _ 1 , ABCASE1 _ 2 , ABCASE1 _ 2 , ABCASE1 _ 2
corrected the parameter name from ' num ' to ' value ' in the saveEnergyPriceHistoryDone method and added a null check for the black
refactored the creation of the RocketChangedEventHandler to use a local variable to improve code readability and maintainability by centralizing the handler
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to define a recipe for changing Maven dependency groupId and artifactId to ensure that the
updated file system initialization and added a check for indexable segments in IndexingJob . java and SegmentChecker . java to ensure that the input path
updated address comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use Suppliers for replacementPaths and pathToSourcePathMap to improve error handling and error reporting
corrected the spelling of " Examples " in JsonExamples . java and package - info . java to improve code readability and maintain
added multiple debug log statements to ViewExtractor . java to provide more detailed information about the output and input stream operations
refactor FindsByLinkText class to improve code organization to enhance maintainability and readability of the code
added a new file ` Main . java ` with a main method that prints " java oop entry point hit " to demonstrate the functionality of
[ sip ] fix synchronization issue in sipregistrationsipimpl
removed redundant continue statements from NativeScanner . java to streamline code and improve readability
changed the package of RendererConfigurationTest from ` test ` to ` configuration ` in ` RendererConfigurationTest . java ` to align the package structure with
replaced ` ImmutableSet . Builder ` with ` Supplier < ImmutableList < BuildRule > > ` in ` AndroidLibraryDescription . java ` to improve performance and
replaced ` stream ( ) . count ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl .
added charset handling to metadata in ExtractingDocumentLoader to ensure the correct content type is used for metadata processing
cloudstack - 14646 : fix databaseconfig . getdomain ( ) to use ? instead of string concatenation
added a check to return early if the slot is - 1 in WindowListener . java to improve performance by avoiding unnecessary processing when the slot is not
added a flag to ignore transitive repositories in the DefaultMavenExecutionRequest class to enable users to ignore transitive repositories in the execution process
removed duplicate @ Inject annotation for backgroundJobManager in ContactsPreferenceActivity . java to streamline the code by eliminating unnecessary dependencies
updated ColorsActivity to extend AppCompatActivity instead of Activity to improve compatibility with newer Android versions
added null check before closing the selection object to avoid potential NullPointerException when selection is not initialized
added a condition to break the loop if the matcher starts with a length and starts with the end of the string to ensure proper handling of regular expressions
updated the @ IntegrationTest annotation to include a value of " server . port = 0 " to set the server port to " server . port =
added a new ` UDFReverse ` class and registered it in ` FunctionRegistry . java ` , and created a ` UDFReverse ` class
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` across multiple classes to improve clarity and consistency in method
refactor Tracer class implementation to improve code readability and maintainability
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase
updated import statements in XMLChangeLogParserTest . java to use wildcard imports to improve code readability and maintainability
added synchronization and synchronization for buffer clearing in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety during split operations
updated forecastMinutes and forecastDays from 0 and 6 to 48 and 8 in OpenWeatherMapOneCallHandler . java to allow for more accurate forecast
[ hotfix ] [ test ] fix test failure on window
updated RemoteTargetGluer to initialize mRemoteTargetHandles array and added logging for splitTaskIds changes to improve user experience by ensuring splitTaskId
updated the ` parseRerunFile ` method to use ` splitAndThenFlatMap ` and ` splitAndMap ` and ` splitAndThen
add a new item to the creative tab for the livingwood , livingrock , and livingrock , and biome biomes to the creative tab
updated assertions in TestRadioButtons to use a more descriptive parameter for size assertions to ensure correct size assertions for better readability and maintainability
added support for file sizes in RCFileCat and implemented getNumberRows method in RCFile to enhance functionality for managing file sizes and
refactor multiple triangle - related classes for improved consistency to enhance maintainability and readability of the codebase
added multiple checks for an MXNet NDArray instances in JnaUtils . java to ensure proper handling of MXNet NDArray
refactor BlobServer class for improved performance to enhance performance and readability of the code
pmd : fix ` ` unused private method ' ' bug in unusedprivatemethod
rename ` lexicalScope ` to ` lexScope ` in multiple files to improve clarity and consistency in naming conventions
add a test for the auto - startup of the sourcepollingchanneladapter to verify the behavior of the sourcepollingchanneladapter
added getter and setter methods for child and item boundables in Quadtree classes and updated constructor visibility in AbstractNode and STRtree to enhance functionality
updated version parsing logic to handle version numbers correctly to ensure compatibility with different version formats
added a check for non - empty tags before adding to activeItem to prevent potential NullPointerException when tags are not available
added ` parseDateTimeStringToEpochMillis ` method to ` DateTimePatternHandler ` and ` fromDateTime ` methods in ` DateTimePatternHandler ` to
hhh - 17100 fix nullpointerexception in stringwrapperusertype . getvalue ( )
refactor Log4j2ConfiguratorServlet to improve code readability to enhance maintainability and readability of the code
removed unnecessary exception handling in StorageBasedAuthorizationProvider . java to simplify exception handling and improve code readability
updated CGoCompileStep to use String . join for command prefix and added a new test for prebuilt dependencies to ensure proper handling of prebuilt
added @ Buildable annotation to CustomResource . java to disable builder functionality in the kubernetes API
removed the @ Override annotation from the Only class to improve code clarity and maintainability
added timeout constants to HTTP client parameters in HttpClientFactory . java to improve connection handling by allowing more time for connection timeouts
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
[ java ] add support for everything but trace to enable all but trace .
removed the @ Singleton annotation from ApplicationController . java to streamline the code by eliminating unnecessary dependencies
added error handling for username assignment in ShareActivity to ensure correct username retrieval based on display name and display name
added imports for BatchStatus and BatchStatus , and implemented a test for resuming paused instances in SimpleJobLauncherTests to ensure proper handling of paused
added null check for cacheConfig before joining to avoid potential NullPointerExceptions when cacheConfig is null
( chore ) camel - grid - docker : make localnode public
[ hotfix ] use java . lang . nameasstring ( ) instead of java . lang .
pdfbox - 2452 : fix parsing of nonsequentialpdfparser to handle nonsequential docment
[ hotfix ] [ test ] fix checkstyle violation in testdistributedlanczossolvercli
refactor HttpServerTestBase class to improve test coverage to enhance performance and maintainability of the test cases
fix flaky test in testcase .
added unit tests for handling null values in ` NestedBeanIgnoreNulls ` to ensure correct handling of null values in ` NestedBeanIgnoreNulls
added a new interface ` RedissonAutoConfigurationCustomizer ` in ` RedissonAutoConfiguration ` and created a ` RedissonAutoConfigurationCustomizer ` interface
updated the index calculation in Indicator . java and added a new test class IndicatorTest . java with unit tests for the Indicator class to
added new method ` execInContainerWithUser ` to the ` ContainerState ` and ` ExecInContainerPattern ` classes to enhance functionality by allowing
refactor conditional checks for WebSocketByteListener and WebSocketTextListener in NettyWebSocket . java to improve readability and maintainability of the code
added test cases for attribute conjunction and negated attributes in SemgrexTest . java to ensure correct behavior of attribute handling in SemanticGraph
added a broadcast intent for the CLEAR _ PULL _ UNREAD activity in HomeFragment . java to provide feedback to the user about the
removed conditional checks for PreGingerbread and OverScroller initialization based on SDK version to simplify the code and improve readability
[ hotfix ] [ runtime ] add defaultprofilevalidationsupport . flush ( ) in dstu21config .
camel - 14499 : do n ' t throw runtimeexception when no veto be start .
added FloatingActionButton functionality to manage FAB menu visibility based on image coordinates to enhance user experience by allowing users to open the FAB menu
added support for inline formatting in ToDateTokenizer and updated related classes to enhance date parsing functionality and improve test coverage
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading
updated Japanese error messages in XPATHErrorResources _ sv . java and XPATHErrorResources _ sv . java to correct the spelling of "
added a server check condition to the OperationsServiceConnection to ensure that the service binds only occur when the server is checked
updated the position column references from ` getBeginColumn ( ) ` to ` getBeginLine ( ) ` and ` getEndLine ( ) `
added waitFor ( ) method calls in ManagedThread . java and implemented waitFor ( ) method in ManagedThread . java to ensure proper resource management and prevent
added a boolean property ` requireAllRepositorySources ` and updated related methods in ` PrincipalAttributesProperties ` , ` CoreAuthenticationUtils ` , and `
[ hotfix ] [ runtime ] fix flaky test in mapcontainer
added support for SSL protocols in the NettyWebServer and ServerBasicConfig classes to enable specific SSL protocols based on configuration
replaced ` AtomicBoolean ` with ` AtomicReference ` in ` SetOnce ` and updated related methods to use ` AtomicReference ` instead of ` AtomicBoolean ` to improve
updated the return statement in QueryDslMongoRepository to handle null properties and added a new test case in SpringDataMongodbSerializerUnitTests to
refactor RoundRectBorder assertions in RoundRectBorderTest . java to simplify border equality checks to improve code readability and maintainability by eliminating unnecessary
add check for empty bft configuration in parameterizedbft test
[ java ] remove paralleltest from selenide integrationtests
updated CountDownLatch and List initializations and added a validation check for sign length in PrecompiledContracts . java to ensure that the latch and futures are
updated conditional check in ProcessInformationsPanel . java from " windows " to " ! windows " to ensure correct handling of windows conditions
rename methods from ` maxN ` and ` minN ` to ` greatest ` and ` greatest ` in ` MoreCollectors . java ` to
added null check for orderbook in BitmexStreamingExchange and refactored connection handling in BitmexStreamingService to improve code clarity and
added validation checks for latitude and longitude in GeoPointField and created a corresponding test in TestGeoPointField to ensure proper validation of latitude and longitude
updated method names from ` createWorkflowFile ` to ` createFile ` in ` OozieProxyImpersonator ` and ` WorkflowFilesService
refactor ResponderId class implementation to improve code readability and maintainability
updated the ` getTableDocument ` method to include a ` withDependents ` parameter and modified its usage in the ` CompactCatalogUtility ` class
added a notification dialog for number of consecutive uploads without coordinates in UploadActivity to improve user experience by providing feedback when the number of consecutive uploads
added a new POST endpoint for retrieving profile data and modified the return statement in ProfileResources . java to enhance profile management by allowing customization of profile
refactor JpaMetamodelEntityInformation to utilize DirectFieldAccessFallbackBeanWrapper for property value extraction to improve code clarity and maintainability by
added indexing assertions and updated method names for bootstrapping last DDL timestamps in UpgradeIT . java and ConnectionQueryServicesImpl . java
[ dropwizard ] add default exception mapper to dropwizard - jersey
[ hotfix ] [ table - planner ] do n ' t set storefieldaction to false in entry editor
updated the parameter name from ` ownerPtr ` to ` ownerPtr ` in the ` nativeCreateNSWindow ` method to improve clarity and functionality by
updated SQL command to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure compatibility with the updated database schema
add support for hover and stock tile , fixes # 244
fixed - rbuckets . get ( string , string ) return null when codec be specify
add findunrelatedtypesingenericcontainer annotation to findbugs . detectunrelatedtypesingenericcontainer
refactor back progress handling in LauncherBackAnimationController to use BackProgressAnimator for improved readability to enhance performance and maintainability of back progress
changed the visibility of ` _ initialPageNo ` from ` final ` to ` _ initialPageNo ` in ` ContentLimitContainer . java `
[ java ] do n ' t use bitmask for crc16 .
added comment handling in FormattedSqlChangeLogParser and a test for comment parsing in FormattedSqlChangeLogParserTest to ensure correct parsing of
[ plexus ] fix archiver initialization in mavenjarmojo
replaced HumanReadableException with BuckUncheckedException in DefaultClassUsageFileReader . java to improve error handling by using a more specific exception type
refactor aggregation handling logic in TSServiceImpl . java and add multiAggregationTest in DaemonTest . java to improve code readability and
added input validation for UNSIGNED _ BYTE , RGBA , and Uint8Array in GwtGL20 . java to enhance error handling for unsupported
added a new test method ` testDebugInfo ` in ` OutputMemoryTest . java ` and modified method invocation in ` PrintR . java `
replaced UnmodifiableClassException with a volatile Throwable for exception handling in InlineBytecodeGenerator . java to improve error handling and provide clearer error
[ hotfix ] [ runtime ] add traceclassinitializationtraces to trace class initialization
updated parameter name from ` timeSpentMs ` to ` queryLevelMs ` in ` BaseBrokerRequestHandler . java ` to ensure consistency in parameter
updated TopicRouteService to use Caffeine cache instead of Google ' s LoadingCache and added a new TopicRouteCacheLoader for loading topic
mbtilesdatastorefactory . createdatasource ( ) should set read - only to true
updated regex pattern for invalid source target release in FindBuildToolFailures . java to ensure correct handling of invalid target releases
updated the URI construction logic in DetailFragment . java to include a check for availability before constructing the location intent to ensure that the location intent
added a null check for ` getInheritedParameterContexts ( ) ` in ` StandardParameterContextDAO . java ` to avoid potential NullPointerException
refactor ClassLoader class to improve code organization to enhance maintainability and readability of the code
added a method to set the origin response header in ProxyRequestHelper and implemented a test for it in ProxyRequestHelperTests to ensure proper handling of
added a new ProfileSettingDrawerItem instance to GpsMainActivity to enhance user experience by providing a profile setting drawer item
added XML validation attributes and updated TldParser initialization to utilize it to enhance XML parsing capabilities by allowing validation of XML validation options
[ firefox ] update firefox driver to use ie instead of firefox
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to ensure proper handling of rows based on the limit clause
refactor SqlStreamTerminator to use allActionsAreOptimizableFilters instead of isCountOptimizable to improve code readability and maintainability
added event handling for node and mouse click events in StandardVizEventManager to enhance event management for node and mouse interactions
replaced direct calls to ` buffer . setMemory ( ) ` with a new method ` zeroBuffer ( buffer , position , length ) ` to improve
[ java ] add memory to TerminalNode to improve memory management
removed unnecessary methods from LCDUIImageMonochromeBitmapSource . java to streamline the code by eliminating unused methods
refactor path handling in SourcePathResolver to use a new method ` getPathPrivateImpl ` for improved clarity to enhance code readability and maintainability
[ flink - 14257 ] [ ds - xsd ] fix xmlparser ' s encoderesourcetostring ( string , string )
modified the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method and added encoded URL handling in ` WebsocketRoutingFilter ` to enhance the
[ llvm ] use execution config instead of llvm / nwcc / nwcc / nwcc / nwcc / n
added a private method ` getCxxPlatform ` to retrieve the CxxPlatform from a ` BuildTarget ` parameter to improve code readability and maintain
added imports for ` org . apache . lucene . index ` , ` IndexReader ` , and ` Similarity ` in multiple Java files to
updated ConcurrentLinkedStack to handle null exceptions and added new test cases for bubbles and iterator bubbles to enhance error handling and ensure correct behavior of
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes
added a null check for mDirectories before creating a new array to prevent potential NullPointerException when mDirectories is null
updated the condition in RecentsView to check if the overview state is enabled and first layout is not enabled to ensure proper handling of the overview state
added multiple package - info . java files for various Lucene package to ensure consistent package structure and maintainability
added a text field for the visible auto leveler panel in AutoLevelerTopComponent to improve user experience by providing a more descriptive text
added functionality to call post - optimization callbacks in DirectUpdateHandler , DirectUpdateHandler2 , and UpdateHandler classes to enhance event listener management by allowing
updated the compression mode to use padded length instead of a hardcoded value to ensure proper initialization of the decompressor and set a dummy byte to
removed the check for user data in Shaderc . java to streamline the code by eliminating unnecessary checks
[ hotfix ] [ metastore ] fix bug in retryingmetastoreclient
[ hotfix ] [ log ] do n ' t log exception when host status be null
refactor Subject class implementation to improve code readability and maintainability
use concurrentreferencehashmap instead of concurrenthashmap in abstractserializationservice . typemap
updated color distance calculation in HSSFPalette and added a new test for findSimilar color functionality in TestHSSFPalette to ensure correct
refactor multiple request and response classes to improve code organization to enhance maintainability and readability of the codebase
[ android ] add test for findelementbynumericid ( ) and findelementsbyid ( ) and findelementsbyid ( )
added flags parameter to receiver registration methods in ShadowApplication , ShadowContextImpl , and ShadowContextImpl classes to enhance receiver registration by allowing flags to be
updated FFmpegTest to use Mockito for resource loading to ensure compatibility with Mockito ' s mock implementation
added a previousInput parameter to the OggInputStream and modified the loop method in OggInputStream to accept a previous input stream to improve resource management
added a new constant RESPONSE _ WAS _ NULL and updated failureMessage assignment to use it to improve code readability and maintainability by using
[ hotfix ] [ runtime ] do n ' t check for anomalyfailure and anomalywarningcount in detectionmigrationresource
refactor Toast usage in BaseActivity and DetailActivity to improve code readability and maintainability to enhance maintainability and maintainability of the code
updated the request creation method in TracingFeignClient to use requestTemplate ( ) instead of method ( ) to streamline the request creation
updated LDAPCertStore to throw an exception for invalid LDAP names and added name validation to improve error handling and provide clearer error reporting for invalid LDAP
refactor retain logic into a separate method ` retain ` to improve code readability and maintainability by encapsulating retain logic
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test method ` testPerformItemClick _ ShouldFireOnItemClickListener `
[ hotfix ] [ test ] simplify checkpointfailuremanageritcase
deleted the GenericItemUIProvider . java file to remove unused code to streamline the codebase
added getter and setter for selectedobject in sipcommselectorbox
added @ Isolated annotation to MetaInfConfigurationTest . java to indicate that the static method of FileSystemPool is not used in tests
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to serverConnector to set the host for the server connector
add support for client _ credentials and client _ credentials grant type in clientregistrationendpoint
added CloverInstrumentationFilter to TestInterfaceAudienceAnnotations and modified SplitLogCounters to include a new Clover instrumentation filter to enhance the handling of
added ZHIMI _ HUMIDIFIER _ CB2 device to MiIoDevices . java and updated ReadmeHelper . java to
refactored plausibletobreak method to use calculationcontext instead of blockstateinterface
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow access to the method for better encapsulation
added error logging for empty repositories in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to indicate that the Ambari may not be managing
simplified the condition for checking containsMissingValue in IntHashSet . java to improve readability and maintainability of the code
added java . io . Serializable to RuleAdministratorImpl . java to enhance code readability and maintainability
updated ` allowedOrigins ` and ` allowedOrigins ` to use ` Set < String > ` and ` List < Pattern > ` instead of
updated test cases in BaseG3dHudTest . java to include " g3d " and " knight . g3db "
added error handling for latest solidified blocks in Manager . java to improve robustness by logging an error when the latest solidified block is invalid
hbase - 16464 fix npe in execresult . coprocessorexec ( ) when value be null
added a method to check if a remote user has access in the HttpServer class to enhance security by preventing potential NullPointerExceptions
replaced the ` writeTo ` method with a ` getStubClassBytes ` method in ` ClassMirror ` and refactored the ` StubJar `
added an internalLinkText TextView to share the internal link text based on the file type to enhance user experience by providing a more descriptive text
updated the accuracy assertion to use Locale . ENGLISH in PredictionTest . java to ensure accurate accuracy validation by using Locale . ENGLISH
updated the condition in ModelZooTest . java to correct the spelling of " SATURDAY " to improve code readability and maintain
updated hideInput ( ) and hideIme ( ) methods in AllAppsContainerView and LauncherAllAppsContainerView to ensure proper
[ hotfix ] [ test ] use inmemoryeventstore to configure embedded event store in test
refactor BsdFileStore to use a new method ` getmntonname ` in ` BsdNativeDispatcher ` for better
add test case for issue # 1599 ( issue # 1599 )
added command arguments for spawning commands in SpawnCommand . java to ensure proper command execution and positioning based on command arguments
replaced direct calls to ` getDesiredWidth ( ) ` with ` getContentAreaWidth ( ) ` and introduced a new method ` getContentAreaWidth
fix graalcompilertest and hotspotcryptosubstitutiontest to be final
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with Windows semantic
added ` pluginCheckClassNames ` to ` pluginChecks ` in ` UpgradeCheckRegistry ` and modified ` addColumnsToUpgradeTable ` method
refactor Environment class to improve code readability to enhance maintainability and readability of the code
added a BadApple annotation to RecoveryAfterSoftCommitTest . java to address issue SOLR - 7421 with a specific bug URL
updated file system separator logic in CodenameOneImplementation . java and removed unnecessary check in HashtableContent . java to improve code readability and maintainability
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AU
replaced specific resource accessors with a wildcard import and updated resource accessor initialization in LiquibaseEntityResolver and XMLChangeLogSAXParser to improve resource
added import for Security and set the " jdk . tls . disabledAlgorithms " property in ComHostnameVerifier and JavaxHostnameVerifier to disable SSL
updated Immutable annotations in AbstractCxxDeps and removed EMPTY constant in CxxLibraryDescription and CxxLibraryTest to improve code clarity and maintainability
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` in ` StubJarTest . java
modified the declaration of the ` resizeThreshold ` variable in ` Int2ObjectHashMap . java ` to improve code readability and maintainability
updated folder name hint logic to check for empty title before setting hint to improve clarity and maintainability of folder name hinting
updated the ` loadClientByClientId ` method calls to include the " uaa " parameter to enhance functionality by allowing the " uaa "
changed access modifiers of several methods from public to private in ShadowSQLiteDatabase . java to enhance encapsulation and improve encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , UnsafeBufferPosition , and UnsafeBufferPosition to handle isClosed state to ensure proper handling of
updated MimetypeIconUtil . java file to improve icon handling functionality
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple provider classes to improve clarity and consistency in naming conventions
added a test for negated instance checks in UnnecessaryParenthesesTest . java and updated UnnecessaryParenthes
added a ` built ` flag and a ` teleport ` method to the ` Location ` class to enable teleporting of the ` org .
replaced ` Base64 . encode ` with ` Base64Utils . encodeToUrlSafeString ` for modulus and exponent in ` TokenKeyEndpoint `
updated import statements and added ProjectComponent dependency in TranslatorManagerHelper . java to improve code clarity and enhance statistics reporting functionality
rename ` ContainerAnnotation ` interface to ` ContainedBy ` in ` ContainerAnnotation . java ` to improve clarity and consistency in naming conventions
added a null check for the ` getId ( ) ` method in ` ObjectIdentityImpl . java ` to ensure that the ` getId ( ) `
refactored the ` setUpRevampedTweet ` method to accept a ` muffled ` parameter and added a new method ` isM
added a conditional check for the theme package in UserProfileActivity to retrieve the verified TextView based on the settings to enhance user experience by allowing users to
refactor AbucoinsDigest to use a static instance variable instead of a static instance variable to improve code readability and maintainability
camel - 14497 : camel - mongo - add autowire to enable autowire on the mongo component
added a sourceIndex field to the AttributeMapping constructor and updated related classes to include it to enhance attribute mapping capabilities by allowing dynamic indexing based on
[ flink - 18286 ] [ hive ] log corrupt statistics when alter table ( sergey chauhan )
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to determine if the security is enabled
refactor ConnectivityReceiver , AbsTransport , TerminalKeyListener , EastAsianWidth , and EastAsianWidth classes to improve code organization and
do n ' t escape email from contact email in home page
add modulemanager . enrichreflectionswithsubsystems ( module ) method to modulemanagerimpl
update joinmodeller to use the number of feature instead of a hardcoded value
[ ggb - 232 ] fix the issue that algebra processor do n ' t work on window .
[ hotfix ] [ kafka ] check for debug and trace log level before update kafka offset .
updated ACTION _ SET _ PLAYBACK _ SPEED to PlaybackStateCompat for consistency to improve code readability and maintainability by using a
add automation support for automating automation in automation .
tika - 132 : fix error message for invalid asciinamelength and unicodecharlength
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as non - deterministic on JDK
refactor lock file creation in MavenDependencyResolver and add createLockFile method in MavenDependencyResolverTest to improve code readability and maintainability by
updated sync interval configurations in UpdateUtils . java to include additional notifications to enhance user experience by providing clearer sync options
added a check for FEDERATION _ USER in AuthenticationManager to return null if the user is FEDERATION _ USER to ensure proper
do n ' t call executemethodnode if it be not an instance of truffleobject
replaced ` Collectors . toList ( ) ` with ` Collectors . toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest `
logbackvalve : do n ' t fail if filter reply do n ' t exist
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the code
removed the import of Version from CreateIndexTask . java to streamline the code by eliminating unnecessary dependencies
added handling for Oracle and Oracle databases in MissingPrimaryKeyChangeGenerator . java to ensure compatibility with Oracle and Oracle databases
added MetastoreException to the execute method and updated exception handling in MSCKRepairOnAcid to improve error handling and provide clearer
[ flink - 24486 ] [ kafka ] retry commit transaction in kafka committer ( # 24486 )
update forwardmessagetodlq to remove the message handle from the group
added a new method ` withServices ` to ` DockerComposeContainer ` and created a corresponding test class ` DockerComposeServiceTest ` to enhance service
[ hotfix ] [ runtime ] use copyset ( ) in export . java and structcontextdecorator . java
removed unused imports and simplified return statement in FeedParser . java to streamline code and improve readability by eliminating unnecessary clean code
removed conditional check for AppsCustomizePagedView . DISABLE _ ALL _ APPS in Launcher . java and updated cell layout retrieval
use double instead of int in meterrealtimebodydatadto
added a new file ` bug4150029 . java ` that extends ` JApplet ` to implement file selection functionality for BackSpace keyboard button
added a boolean field ` isSparkConfigUpdated ` and its getter and setter methods to ` HiveConf ` , and modified ` SparkTask `
added a method to retrieve the long press indicator in AppIcon , AppIconMenuItem , and Workspace classes to enhance functionality by allowing customizable long press
added checks for empty polygons in WKBWriter and updated corresponding test cases in WKBWriterTest to ensure proper handling of empty polygons and
refactor ` NativeLibraryMergeEnhancer ` and ` AbstractUnflavoredBuildTarget ` classes to use ` Builder ` instead of ` with
added a new file ` MultiplyByMaxInt . java ` containing a class ` MultiplyByMaxInt . java ` with a method to
removed action view collapse handling in OCFileListFragment to improve user experience by enabling drawer indicator based on the current file state
removed unused imports from TestRAMDirectory . java to streamline package structure and improve code readability
replaced FixedBitSet with BitSet in Automaton and Operations classes to simplify the code and improve readability by using a more generic BitSet
[ DMN ] add a message for no definition for name ' node ' expression , a suggest by valerybokov
replace @ ContainedBy ( AC . class ) with @ Repeatable ( DC . class ) in multiple test files to ensure compatibility with the new
updated the message format in AbstractController . java to include a duration variable to improve clarity of message formatting for better debugging
added package access check for baseClassName in OpenMBeanAttributeInfoSupport . java to ensure correct class name retrieval and improve code readability
[ hotfix ] [ table - planner - planner - core ] make readresponseresolver optional
added a calculation of freeSize in StoreDirect . java to ensure freeSize does not exceed the expected value
refactor ` areTouchesDisabled ` method to accept a ` MotionEvent ` parameter and update related logic in ` AnyKeyboardView ` and ` AnyKeyboard
updated SslContextFactory instantiation to use SslContextFactory . Server instead of SslContextFactory to ensure compatibility with the latest SslContext
replaced the PrivilegedSocket class with a direct instantiation of Socket in PG _ Stream . java to simplify the code and improve maintainability by eliminating unnecessary
refactor InputTest class to improve code readability to enhance maintainability and readability of the code
updated finishRecentsAnimationOnTasksAppeared and AbsSwipeUpHandler to accept a Runnable for pause blurs to enhance user experience by allowing pause
removed unused imports and added null check for currentLatLng in NearbyMapFragment . java to streamline code and improve readability by eliminating
updated the method to retrieve client secrets in ClientAdminEndpoints and added mock mocks in ClientAdminEndpointsTests to enhance functionality by using the client details
updated SQL query to use the ` BeforeEach ` annotation instead of ` XMLConfigBuilder ` to improve code readability and maintainability by using a
[ hotfix ] [ test ] make activemqmessageconsumer more robust .
added unit tests for handling unknown key exceptions in SlidingGanttCategoryDataset to ensure correct handling of unknown keys in the SlidingGant
updated the filtering logic in ShenyuTrieRuleListener to use Optional for null checks and added return statements in ZookeeperSyncDataService to improve
[ jme3 ] make lightcontrol . controldir ( ) and lightcontrol . light ( ) public
added @ SuppressWarnings ( " UnusedAssignment " ) annotations and modified the handling of stacks in StdErrLog . java to improve code clarity
updated HttpSessionEventPublisher to use getContext ( ) for event publishing and added null context checks to ensure proper context management and prevent potential NullPointerExceptions
added a semantic exception for the CREATE CQ statement in ASTVisitor . java to ensure that the syntax of CREATE CQ statement has changed from v
[ hotfix ] fix typo in flinkiotdbsink javadoc
added a constant for custom simplified nodes and refactored conditional checks in CanonicalizerPhase . java to improve code readability and maintainability by
updated the parameter passed to the setImageDrawable method in ActivityListAdapter . java to ensure proper context is used for file icon rendering
updated the method to retrieve the index or constraint name using the schema ' s name to improve clarity and consistency in naming conventions
[ bigquery ] fix time format for timestamp field in bigquerytablerowiterator
added ` findViewWithTag ` methods to ` ShadowView ` , ` ShadowViewGroup ` , and corresponding tests in ` ViewGroupTest ` to
refactor for loops to use generics in multiple classes to improve type safety and reduce unnecessary casting
updated import statements in IndexToolForDeleteBeforeRebuildIT . java and MetaDataClient . java to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants and modified enum value retrieval logic in SpringBootDocBuildTemplate . java to enhance support for
( chore ) camel - svm : do n ' t try to load resource from jar file .
updated CUDA _ R _ 32F , CUDA _ C _ 32F , and CUDA _ C _ 32U to
refactor ` ResourceLoader ` class to use ` FileFilter ` instead of ` File ` for file handling to improve code readability and maintainability by
use simpleattachablematerialdata . getattachedface ( ) instead of block . getattachedface ( )
added a case for VARBINARY in RelToStageConverter . java to handle VARBINARY cases in RelToStageConverter . java
removed the import of DateHelper from NoteAdapter . java to streamline the code by eliminating unnecessary dependencies
updated backup messages and added backup backup handling in the Backup . java file to improve user feedback and provide clearer feedback for backup backups
fix simple panel position to be relative .
replaced the method of creating a temporary file in ShadowParcelFileDescriptor . java to simplify file deletion logic and improve code readability
replaced ` getStackForThread ( ) . poll ( ) ` with ` getStackForThread ( ) . removeFirst ( ) ` in ` StackBasedSecurity
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to improve clarity and consistency in rule naming
fix integerequalsnode . getxorneutral ( ) and integerequalsnode . getxorneutralreference
removed the static final Type STRING _ ARRAY from TypeFactory . java to simplify the code and improve maintainability
added a new method ` hideIme ( ) ` to ` AllAppsContainerView ` and refactored logging in ` LiveSearchManager
fix network density issue in blockstatecontainer . setbits ( int , boolean )
updated assertions in ` TimelineMetricCacheSizingTest . java ` and modified cache management in ` TimelineMetricCacheTest . java ` to
add gl _ max _ texture _ size optimization to the playerusagesnooper .
[ java ] fix a typo in the trystoplogrecording ( ) method
added a conditional check to reset startPosn when isInTransform is true to ensure startPosn is reset when the transformation is enabled
add querycontext . isskipstartree ( ) to disable star tree by default
added a lockNearbyView flag and updated related methods in NearbyActivity . java to improve user experience by ensuring the progress bar is only
add of ( ) , inverse ( ) , and inverse ( ) method to maptransformer
refactored EmeddedObjects and EmbeddedObjects classes to improve code organization to enhance maintainability and readability of the code
added support for retrieving the loaded launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance user experience by allowing customizable widget
replaced ` ChangeEvent ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to improve event handling by using a more
added calling UID management methods to ShadowBinder and corresponding tests in ShadowBinderTest to enhance the functionality of calling UID management in the ShadowBinder class
refactor ` ExpectationFailure ` class to use ` Objects ` instead of ` AutoValue ` and update related methods to improve code clarity and
removed warning log for no support for deserializing message in BitcoinSerializer . java to streamline the code by eliminating unnecessary logging
[ fix ] bug in imagereplacedelement . setwidth / setheight / setwidth / setheight / setwidth / setheight /
added support for &# 9 and &# 10 characters in Markdown renderers to enhance character handling and ensure correct formatting of markdown output
added a new button for common deletion and refactored password setting logic into a separate method to improve code readability and maintainability by encap
refactor ` getFileChannelMethod ` to use ` MappingMethods ` for method retrieval to improve code readability and maintainability by encapsulating
changed access modifiers of test methods from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to
added new option options for Slider keytab installation and principal in LlapOptionsProcessor . java to enhance the flexibility and functionality of the keytab
updated the ` tearOutGraphViewContainer ` method to accept a ` JFrame ownerFrame ` parameter and added animation control functionality to enhance user experience by
added synchronization checks and assertions for workspace loading in LauncherModel . java to ensure shortcuts are only added when the workspace is loaded and prevent unnecessary
changed fields and logic in NodeManageMemoryMergeOperator , NodePathsConvertOperator , NodePathsCountOperator , and NodePathsCountOperator to be final
updated method signatures in IssueInterface , ValidationReport , and ValidationReport classes to include messageType , and checkResults parameters to enhance flexibility in handling message
added a method to safe the provider name and updated error message formatting in RSAClientKeyExchange . java to improve code readability and maintainability by
rename ' dynamicconfiguration ' to ' flinkconfiguration ' in containerspec
updated log level from WARNING to OFF in CCJSqlParserUtil . java to correct the logging level from WARNING to OFF
[ hotfix ] [ runtime ] remove unused code in aggregatelifecycle
changed access modifiers of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public in DefaultMapScaleBar . java to
removed the @ Ignore annotation from CovariantOverrideTest . java to improve test clarity and maintainability
refactor curly method to use Qtype instead of cmin to improve code readability and maintainability by using a more descriptive variable
updated modelhelper . loadroutes to use document . getOwnerDocument ( ) instead of document . getsoapcontext ( ) .
added space minimum and maximum values for getXAxis ( ) in ScatterChart . java to ensure proper handling of space dimensions in the chart
removed unnecessary whitespace in ExpressionStringBuilder . java to improve code readability and maintain consistency
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` StateManager `
added a check for the presence of " UTF8 " key in the properties file to ensure that the key is not missing in the system resource
updated TestReproduceMessage and LuceneTestCase to use MixWithSuiteName for debugging and added seed decorator for random value to improve debugging capabilities and
added a new UI event for long - press events in StatsLogManager and updated ItemLongClickListener to log long - press events to improve user experience
added null check for log in StoreWAL . java and created a new test class Issue112Test . java for double commit functionality to ensure proper
added a condition to check if the ' showSectorLandInfo ' property is not null in the campaign state to ensure that the campaign is only
updated generic type casting in multiple classes to use generics for type safety to enhance type safety and reduce type casting errors
refactor Enum class to improve code readability to enhance maintainability and readability of the code
updated ` buildNearbyRandom ` method to accept a boolean parameter and added validation checks for ` nearbyRandom ` and ` LinearDistributionNearbyRandom
remove temporarycache . removeremover _ service . shutdown ( )
disable createsqlviewcontainer and createwmslayerimportcontainer in newlayerpage
set default value of Availability _ availability to Availability . UNAVAILABLE to ensure proper initialization of the Availability object
updated processing of PBFT commit messages and added synchronization checks in multiple classes to enhance synchronization handling and enhance debugging capabilities for PBFT transactions
chore : update gapic - generator - java version to 2.1 . 0 and update gax - java version to 2.10 . 0
updated the ` _ freeSpaceReclaimDisabled ` variable to ` _ freeSpaceReclaimQ ` and modified related methods accordingly to improve flexibility in
changed access modifiers of KDC _ OPT _ PROXIABLE and KDC _ OPT _ PROXIABLE from public to private
added a null assignment for the writer variable and initialized it to null to ensure proper initialization of the writer and avoid potential NullPointerExceptions
reformatted code for consistency in ProfilePager . java to improve readability and maintainability of the code
rename ` paintBackground ` method to ` paintComponentBackground ` in the ` Slider ` class to improve clarity and consistency in naming conventions
added a new method ` valueFromClassConstant ` to retrieve values from class constants to ensure proper handling of object value constant values in the configuration
added error handling for service initialization in KafkaService . java to improve robustness by logging errors when initialization fails
updated the RESOURCES _ TO _ ALWAYS _ ACQUIRE set to include " usr / share / zoneinfo / tzdata " to
camel - 14497 : camel - message - auto - create channel should use ' channelname ' instead of ' channel ' for the message bus
added keywords handling in HTMLDocument and a test for indexing in TestDemo to ensure correct handling of indexing of documents in the indexing process
update version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to handle a conditional statement to improve code readability and maintainability
replace instantiation of ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall . class ` to simplify
refactor Builder class to improve code readability to enhance maintainability and readability of the code
[ isbn ] use www . ebook . de / tools / isbn2bibtex instead of manas . tungare . name
do n ' t throw exception if the language context be not active
added null check for the text object before firing data change events to prevent potential NullPointerException when text is null
use rnnutils instead of iterator to reduce memory usage
added trim ( ) method to the line in SuffixURLFilter . java to ensure the line is trimmed before processing
added a check for inGodmode in HandlerCombatInvocationsNotify to prevent processing when inGodmode is true
do n ' t register and unregister the wrapped popup in checkbox creation dialog
updated constructor parameters in LinkedHashMapCache and BoundedLinkedHashMap to include a boolean parameter to improve code readability and maintainability
removed unnecessary whitespace in ChannelEndPoint . java to improve code readability and maintainability
updated KeyIndexBuilder constructors and removed hardcoded strings in OrcRecordUpdater , OrcOutputFormat , and OrcAcidKey
added Locale . ROOT to the exception handling in DirectUpdateHandler2 . java to improve error reporting by providing a clearer locale - specific error message
[ gr - 16464 ] fix the guarding node creation in the javaloweringprovider .
do n ' t try to traverse exceptiondispatchblock if there be no exceptiondispatchblock
bugfix : add getclassificationdisagation ( buginstance b ) to cloud . getclassname ( buginstance b )
replaced ` BuildTarget . copyOf ( buildTarget ) ` with ` BuildTarget ` in multiple files to simplify code and improve readability by eliminating unnecessary
refactor SqlRunner class to improve code organization to enhance maintainability and readability of the code
change the type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorageUtils
replaced instances of ` knownApis ` with ` knownSdks ` and updated related methods to use ` HashSet ` instead of ` TreeMap ` to
use confidenceprogressindicator instead of progressindicator in createofferview
updated header check from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 to ensure compatibility with the new
fix ( blueprint ) : do n ' t create blockindex if they do n ' t exist
added view type for chatfundingchatadapter . getmessageforcurrentlocale ( ) and getmessageforcurrentlocale ( )
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in LinuxLibrary and MacOSXLibraryDL classes to standardize the encoding of
fix a typo in the regex pattern in the englishrelations class .
refactored the ` insert ` method to remove ` canvas ` parameter and added duplicate padding handling in the ` TexturePacker ` class to improve
refactor ` getVisitors ( ) ` method to use a ` apply ( Refactor < S , T > refactor ) ` method to
added methods to retrieve child elements by name and recursive elements in the Xml class to enhance functionality for retrieving child elements
set the " Content - Charset " header to " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of
added ` @ SystemUiControllerFlags ` annotation and modified UI state handling in ` AllAppsTransitionController ` and ` AllAppsTransitionController
removed the private ClientConfigurationService field from IntrospectingTokenService to streamline the code and improve maintainability
updated error message formatting in HiveRecordSet . java to include additional context to improve clarity of error messages for better debugging
removed the private byte array ownerId field from NodeEntry . java to streamline the code and improve maintainability
[ hotfix ] [ config ] fix typo in config value
added score calculation to the merge method in TextFragment . java to ensure that the score does not exceed the maximum score
removed the private Digester field from Md4PasswordEncoder . java to streamline the code and improve maintainability
added a validation check for the maximum unimproved step count in UnimprovedStepCountFinish . java to ensure that the maximum un
added a check to return early if the currently opened editors are empty to ensure that only available editors are processed
added mockito verification methods to BDDMockito and updated test cases in BDDMockitoTest to ensure proper verification of mock behaviors and ensure
updated the method of obtaining the class loader from ` currentThread ( ) . getContextClassLoader ( ) ` to ` PathScanner . class . getClassLoader ( )
add apioperation annotation to codefirst . sayhi2 ( )
[ hotfix ] [ test ] add log for abstractsplitbrainprotectiontest
added null checks for logoutConfigurer in DefaultLoginPageConfigurer and ServerHttpSecurity classes to ensure proper handling of logout configurations
[ gbasis ] use degree ( 0 ) instead of degree ( 0 )
added logging functionality to ` DockerComposeContainer ` and created a new test class ` DockerComposeLogConsumerTest ` to enhance logging capabilities for better debugging
updated the parameter type in the testMapping method from ` Class < ? > ` to ` Class < ? > ` in ` StandardJavaTypeMappingTest
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a way to retrieve the supplier from a given supplier
replaced a break statement with a return statement in ConsoleActivity . java to improve code readability and maintainability
camel - 16297 : fix issue with buffer content type in platform - http
added platform separators methods in MorePaths and updated arguments in CopyStep to use it to improve path handling for Windows and above
added null check for params before processing in AuditEvent . java to avoid potential NullPointerException when params are not provided
added a method ` throwExceptionIfFail ( ) ` to the ` load ` method in ` NativeLibraries . java ` to improve error handling by
updated SDK version from " 4611349 " to " 4514284 " in SdkConfig . java and added tests in ShadowText
add a new ` TransactionLogKey ` class and a corresponding class ` TransactionLogKey ` to manage transaction logging functionality
added a new property ` enableSqlWithoutProfile ` and its getter / setter methods in ` JdbcEnvironmentProperties ` , ` JdbcEnvironmentRepository ` ,
added a try - finally block around the write method call in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ runtime ] use eventgenerator . fromfunction in modloadingstage
updated date formatting in DateUtils and removed an assertion in FontParsersTest to ensure correct formatting of date and font parsing
updated ` getThreadInfo ` method to use ` super . getThreadInfo ( ) ` instead of ` getThreadMXBean ` to improve thread information
added a prevTlogOnPrecommit field and modified the sleep duration in LeaderTragicEventTest from 5000 milliseconds to 2000 milliseconds to improve
updated the FastAsyncWorldEdit job URL from " FastAsyncWorldEdit - P2 - V6 / " to " FastAsyncWorldEdit -
updated file existence checks and added null check for path in SegmentGeneratorConfig . java to ensure proper directory creation and prevent potential NullPointerExceptions
added methods to calculate normal vectors in DefaultObjUtils and refactored vertex retrieval in TriangulationHelper to improve code readability and maintainability
updated the ` find ` method to include ` identityZoneId ` in the ` JdbcAuditService ` class to ensure accurate retrieval of identity zone ID
refactor SpanCollector class for improved performance to enhance performance and readability of the code
added null check for SESSION _ MANAGER . getCurrSession ( ) in AuthorizationFilter . java to prevent potential NullPointerException when accessing session
refactored TransactionIsolationLevel class implementation to improve code readability and maintainability
corrected the spelling of " printLVgroups " to " printLogicalVolumegroups " in OshiController . java to improve code readability
[ hotfix ] [ test ] set the current thread name in testsession
refactor CookieManager class to improve code readability to enhance maintainability and readability of the code
removed the loop for adding components in LauncherExtension . java to simplify the code and improve readability
added a new OverviewToAllAppsTouchController to the list to enhance user experience by allowing the overview to all apps
changed the return type of ` scaleHotseatWithWorkspace ` from ` boolean ` to ` getWorkspaceScaleAndTranslation ` in ` LauncherState
added a check for JUnitRule in DefaultStackTraceCleaner . java and a corresponding test in StackTraceFilterTest . java to ensure proper handling of
replaced instances of ` ARRAY _ BASE _ OFFSET ` with ` ARRAY _ BASE _ OFFSET ` in ` MappedResizeableBuffer
added a private BalanceListener instance and updated walletService to remove it to improve balance listener management and ensure proper cleanup of the wallet service
updated color conversion logic in RealisticRenderer to handle different edge modes to ensure correct color conversion based on the current edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and updated log initialization in Issue546Tests . java to ensure proper handling of
[ traccar ] remove unused patternutil . checkpattern ( ) from gl200 protocol decoder
updated playback timing logic in FullDetailsActivity to include last playback time to improve user experience by providing more detailed information about the last playback time
refactor SpanishXMLTreeReader to use a new method ` isEllipticNode ` for better readability and maintainability to improve code clarity
added a conditional check to clear the language and iso attribute in the InstallItem class to ensure proper handling of language and iso data in the application
updated the ReactiveLoadBalancerClientFilter to override the secure scheme based on the response ' s server ' s secure scheme to ensure the correct scheme is used
corrected a typo in the variable name from ' byteBuffer ' to ' byteBuffer ' in DefaultMessageStore . java to improve code readability and
removed the ` final static ` modifier from the ` fullFilePathFromClassName ` method in ` NativeImageDebugInfoProvider . java ` to simplify the
replaced the implementation of the Correspondence class with a lambda expression in ShadowBackupManagerTest . java to improve code readability and maintainability by
corrected the spelling of " isEnUS " to " isENLocale " in JRELocaleProviderAdapter . java and LocaleDataMeta
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify code and improve readability
fix block texture not be bind to terrain . png .
added a return statement to the TxCacheDB class to improve code readability and maintainability
replaced imports of ` com . sun . xml . ws . org . objectweb . asm ` with ` jdk . internal . org .
refactor FastDictionary class implementation to improve code readability and maintainability
[ java ] set session status to status _ closed in nioconnection . close ( )
updated FlightEvent instances in FlightEventsTest . java to include additional events and adjusted epsilon calculation to enhance event handling and improve test coverage
[ beam - 14646 ] fix import of grpc - v1p26p0 in java . base module
updated the method call from ` target ` to ` newElement ` in ` SaajStaxWriter . java ` to ensure consistency in naming convention
hhh - 13232 : add a new method to get profile picture link for instructor course
added a short list of rules based on the length of the password length in DefaultPasswordValidator to ensure that alphabetic and numeric sequence rules are only
[ java ] use command . capturescreenshottostring instead of hardcoded string .
removed JUnit Test import and added @ Test annotation to ProxyClassSerializationTest . java to streamline test coverage and improve code clarity
updated the format of the ` scale ` argument in ` DLNAMediaInfo . java ` to include the ` format = bgr24 `
[ gr - 13232 ] remove unused import and remove unused method
added alias check for authentication manager in AuthenticationManagerBeanDefinitionParser to ensure proper handling of authentication managers in the registry
added handling for forwarded _ server in ForwardedRequestCustomizer and updated test cases in ForwardedRequestCustomizerTest to ensure correct handling of forwarded
added a call to setLength ( 0 ) in ConsoleReader . java to ensure that the string is properly set to zero
changed access modifiers of ` allowedRoles ` , ` disallowedRoles ` , and ` allowedRoles ` , and ` disallowedRoles ` from private
updated OpenIDE - Module - Specification - Version from 1.11 to 1.11 for consistency to ensure compatibility with the latest OpenIDE versions
hbase - 12279 addendum set default sslhandler wrapdatasize for nettyrpcserver
refactor multiple IPv4Address , Inet4Address , Inet6Address , InetAddress , SocketOption , and URI classes to improve code organization and maintain
updated FixedLengthTokenizerTests to remove the inheritance from TestCase and added test cases for tokenizing small strings with whitespace to simplify the test structure and ensure
updated the protocol binding in OpenSamlAuthenticationRequestFactory to use a configurable protocol binding to improve flexibility in handling SAML2 authentication requests
added AttachedSurfaceControl import and modified transaction handling in DepthController . java to ensure proper transaction management and avoid potential null pointer exceptions
update version check from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility with the
replaced WRITE action from WRITE to CREATE in AccessController . java to ensure consistency in action handling for bulk load and cleanup operations
updated subList method from ` 0 ` to ` 0 ` in ` TsFileManagement . java ` and adjusted measurement schemas in ` MergeTask
camel - 14497 : fixed fileinputstream to be read from a file stream in genericfileconverter .
added a ` login ` method to ` DefaultShardManager ` and modified ` ShardManager ` to conditionally call the ` login ` method to ensure
updated the formatting of the DeleteGlobalRef method call to improve code readability and maintainability
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to ensure consistency in naming convention
do n ' t try to terminate a response if the completion be mark a failure .
fix feedback response comments logic for user - students
added security checks for linked and unc or device paths in BMPImageReader . java to enhance security by allowing user - defined profiles based on
updated the ` setSimpleCuboid ` method calls to use ` ( short ) 0 ` instead of ` ( short ) 0 ` to ensure
pmd : wait for pmd check the file in the package before run the actionPerformed ( ) method
refactor grid presenter initialization to use a dedicated ` setGridSizes ( ) ` method to improve code readability and maintainability by centralizing
changed return values from false to true in ContributionsListFragment . java to ensure consistent behavior of the ContributionsListFragment
added a new testSkipRange method in DistinctPrefixFilterIT . java and modified filter logic in BaseResultIterators . java to include a
added unit test for acrobat checkbox group property in pdbuttontest
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to ensure that the file connection is properly closed and clean up
added a condition to check if the " metaTable " property is valid in HiveIcebergStorageHandler to ensure that the " metaTable "
add a popup to select the default currency in the payment account ' s combobox
replace IOException with Throwable in WriteFlusher . java to improve error handling by catching specific exceptions
added a boolean flag ` mStartedEnterAnimation ` and modified item range notification logic in ` IconRecentsView . java ` to improve animation handling
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to provide access to the active key ID in the configuration
updated action descriptions from ` sendEmail ` to ` sendAttachmentMessageActionLabel ` and ` sendAttachments ` in ` SendMailActions `
changed the ` isActive ` variable from ` private boolean ` to ` volatile boolean ` in ` SocketServer . java ` to ensure the ` isActive `
remove isdesc ( ) from order by expression context
cast to charsequence to string to avoid cast to string
added a check for the OWNCLOUD _ APP _ NAME in the DisplayUtils class to ensure that the app name is consistent with the
hbase - 16279 addendum add a check for kerberos permission in masterfilesystem . setdir ( )
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` JavaxServletWebExchange ` to
refactored the Instant class to improve performance to enhance performance and readability of the code
updated ` getStateFormat ` methods from ` int ` to ` String ` and changed return type of ` getStateFormat ` from ` int ` to `
updated logging statements in CentralAuthenticationServiceImpl . java and modified conditional checks in AbstractTicket . java to improve code readability and maintainability
pdiccbased : do n ' t throw an illegalargumentexception
removed unnecessary whitespace in the conditional statement in AbstractFileResourceSet . java to improve code readability and maintainability
fix plugin parameter expression evaluator to align to base directory
move protobuf coder registration to extensions . protobuf . extensions . protobuf . extensions . protobuf
updated JpaQueryParsingToken to include a signed numeric literal parameter and added a test for query parsing to ensure correct parsing of signed numeric literals
updated the ` generateLaunchLugFromRASAeroRailGuide ` method to accept an additional ` parentLength ` parameter and adjusted related properties accordingly
removed the implementation of the getNonceFactory method in BitmexStreamingExchange to streamline the code by eliminating unnecessary method implementations
[ hotfix ] [ mailbinding ] fix logging in mailbinding . java
[ java ] use default mtu timeout instead of configuration . mtutimeoutn
changed the default value of ` initializeLoadedClasses ` from true to false in ` FastClasspathScanner . java ` to ensure proper initialization of loaded classes
added a call to ` grabFocus ( ) ` in ` FullTextSearchPanel . java ` to ensure that the search field is focused on the
refactored the initialization of NioParams in TlsConnectionLogging . java to use a local variable to improve code readability and maintainability
removed an assertion for the double value in StatementTest . java to streamline the test to ensure that the test returns a random number of double values
updated assertions in TestSolrConfigHandler to use a more descriptive string format for expected values to improve readability and maintainability of the test
replaced ` HttpMethod ` with ` ServerHttpRequest ` and updated mock usage in ` CsrfWebFilterTests ` to improve code clarity and maintainability
updated regex pattern in FilterResourcesStep . java to use ` fromDensity ` instead of ` density . toString ( ) ` to ensure proper handling of
added a new ` buttonUIID ` variable and refactored related methods to use the ` elementPrefix ` method to improve code readability and
removed dependency on DisplayMetrics for densityDpi in RecentsAnimationDeviceState . java to simplify condition checks for better readability and maintainability
added two new Java files , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , to test
added an import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with a bug URL to address issue SOLR - 61
fixed - rexecutorservice . schedule ( ) method return null if nextstartdate be null
removed unnecessary null checks for credentials in ` needsToUpdateCredentials ` checks in ` FileDownloader ` and ` FileUploader ` classes to simplify the
fix potential nullpointerexception in comactor . close ( )
updated method calls from ` get ( iface ) ` to ` getOrDefault ( iface , 0L ) . getOrDefault ( iface , 0L )
added a nonce parameter to the TokenMvcMockTests to retrieve claims from the token to ensure that the correct nonce is retrieved for the token ' s
refactor chart editor classes for improved consistency to enhance maintainability and readability of the codebase
added width and height settings to form layer layer in Form . java to ensure proper layout behavior for the form component
updated import statements in BrowserContentPane . java and added a method to calculate the maximum Y - coordinate based on the owner ' s height to ensure
updated the ` openDatabase ` method to return a boolean indicating whether the database is connected to ensure proper resource management and prevent potential memory leaks
updated DOCKER _ COMMAND to use Platform . DOCKER _ COMMAND instead of hardcoded to improve code readability and maintain
added a null check for the ' is ' parameter in the initializeParameters method and improved error handling to enhance robustness by preventing potential NullPointerExceptions
added a color parameter to the drawLeaveBehind method and updated its usage in multiple classes to enhance user experience by allowing customizable background color
add an error message if the flutter plugin do not work with android studio
http : / / issues . apache . org / jira / browse / amq - 4253 - fix npe in responseserializer . getidentity
removed unused fields and methods related to module persistence in StartArgs . java to streamline the code and improve maintainability
updated argument validation and error message in GeminiMarketDataService . java to improve clarity and correctness of error messages
changed HashSet to LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure consistent ordering of questions in the request context
add unit test for realm response and add test case .
updated exclusion patterns in AuthCheckFilter . java to include specific jsp files to improve clarity and maintainability of the code
refactor runnable handling by introducing queueRunnable and queueRunnableAndSort methods to improve thread safety and maintainability of runnable execution logic
updated method signatures in AbstractCommandRunner , AuditCommandRunner , CommandRunner , and CommandRunner to use String . . . . args instead of String
refactor read method to use a variable ` i ` instead of ` c ` for clarity to improve code readability and prevent potential null pointer exceptions
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to ensure that overflow pages are
added pivot positions for the arrow in DeepShortcutsContainer to ensure the arrow ' s position is consistent with the current icon ' s position
[ hotfix ] [ runtime ] remove unnecessary printstacktrace ( ) call
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter in the ` AbsSwipeUpHandler ` class to enhance functionality by allowing
update usage message to use class name instead of org . apache . pdfbox . pdfbox .
updated InternetAddress instantiation to include a parent parameter and added validation for valid hostnames to improve error handling and provide clearer feedback for invalid hostnames
removed references to ` AuthenticatorActivity . this ` in multiple activities to simplify method calls and improve code readability
replaced instances of ` counter ` with ` _ currentDocId ` in ` SizeBasedDocIdIterator ` and updated related methods accordingly to improve clarity
refactor promptToOpenFile method to accept a filename parameter and update its usage in FilePanelEntry to enhance file selection functionality by allowing users to
updated widget span and page sleep delay in AppsCustomizePagedView . java and modified related methods in AppsCustomizeTabHost .
refactored FlightConfiguration to use InstanceMap for managing active components and transformed coordinates to improve code readability and maintainability by consolidating component
update micrometer test to use ' direct ' instead of ' seda : '
updated DateTimeFormatter to use Locale . ROOT for default date format to ensure consistent formatting across different locales
dspaceobjectconverter : add getpermissionfilteredmetadata ( ) method to retrieve filtered metadata value
added a new test method ` testMissingRequired ` in ` TestStarTreeConfig . java ` to verify the behavior of ` StarTreeConfig `
camel - 14497 : camel - spring - route - builder : allow recipient list to be use by default .
refactor inline layout handling in InlineLayoutBox and add repaint logic in HoverListener to improve layout management and ensure proper repaint behavior
refactor AuthenticatorActivity to use ServiceConnection instead of DetectAuthenticationMethodOperation and introduce OperationsServiceConnection to improve service connection management and manage operations service
