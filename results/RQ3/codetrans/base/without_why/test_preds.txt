refactor SocketAppender instantiation to use setRemoteHost and setPort directly to improve clarity and encapsulation of socket configuration
refactor BasicAuthPlugin to use a separate method for setting prompt headers to improve code readability and maintainability by reducing duplication
removed the ` RecordDescriptor . msgLengthOffset ` reference from the ` ManyToOneRingBuffer ` class to simplify the code and improve readability
cloudstack - 10220 : do n ' t ignore overcommit if vm detail detail be null
added support for anti - alias flags in ShadowPaint and updated related tests in PaintTest to enhance the functionality of ShadowPaint to support anti - alias
updated the title of the MassSetFieldsDialog to use a localized string for field names and content to improve user experience by providing clearer and more
do n ' t fail the test if there be no bug
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 469 . do n '
added a ` RemoteInputListener ` interface and modified the ` RemoteInput ` class to handle connection status to improve event handling by notifying listeners when
updated conditional statements in OrcEncodedDataReader . java for consistency to improve code readability and maintainability
added a condition to check if the thing handler is enabled in HomeConnectBridgeHandler to ensure that only enabled things are processed in the filtering logic
added null check before calling AuthorizeManager . removeAllPolicies ( ) and AuthorizeManager . addPolicies ( c , bs , bs )
updated assertions in ` DefaultTypeAdaptersTest ` and ` ObjectTest ` to use ` matches ` instead of ` isJava9OrLater
added JSON serialization and logging for DAG information in TezTask . java to enhance debugging capabilities by providing detailed DAG information
updated time calculation in ComputedSummary . java and added getTagTime method in HprofHeap . java to improve accuracy of heap time retrieval and provide
updated the method for retrieving upload count in ContributionsActivity . java and removed the RxJava2Tasks . java file to streamline the
remove unnecessary check for mvstore . ismvstore ( ) when forcelockeveninMvcc = true
[ issue # 4848 ] fix commitlog size calculation ( # 4849 )
updated folder handling in Launcher . java to check if the associated folder is open before marking it as open to improve error handling for folders that are
added a new test method ` testSortOrder ` to validate the ordering of PGProperty names to ensure that property names are sorted in ascending order for proper
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a clear
updated the ` supportsDrop ` method to accept ` ItemInfo ` instead of ` AppInfo ` and modified intent retrieval logic to improve type safety and
updated assertions in RequestBuilderTest to use isIn instead of hasMessage for clarity to improve readability and maintainability of the test code
replaced ` NearbyMapFragment ` with ` NearbyListFragment ` in ` NearbyActivity . java ` to improve clarity and
bugfix : use sessionstatus instead of status in flatprofilecontainerfree constructor
added a boolean field ` sendZeroAnomalyEmail ` and its getter / setter in ` EmailConfiguration ` to control the sending of zero an
[ hotfix ] [ kafka ] fix checkstyle violation in flinkkafkaconsumerbase
added user and geofence retrieval methods for user and geofence to the DataManager class to enable retrieval of user and geofence data
added a constructor to BlockingResponseListener that accepts a maximum size of 2MB to improve flexibility in handling larger data sets
[ java ] refactored memberbroadcastsreceived method to use bytearray instead of channeldata array to improve code readability and maintainability
added a try - finally block around snapshot processing in MultiLeaderServerImpl . java to ensure resource management and prevent potential resource leaks
updated URL formatting in assertion statements in LoginSAMLAuthenticationFailureHandlerTest . java to improve consistency and clarity in URL formatting
refactor ConfigMetadataProviderTest . java for improved clarity to enhance code maintainability and readability
updated imports and modified the ` updateNoteReminder ` method to use ` noteToUpdate ` instead of ` note ` to enhance clarity and maintain
added a new ` AcceptAllFilter ` class and refactored directory stream handling in ` Files ` and ` WindowsDirectoryStream ` classes to
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
added a try - catch block around the lookupType method in CompilerToVM and CompilerToVMHelper classes to handle ClassNotFoundException to improve error handling
added validation for Docker image name in GenericContainer . java and created DockerImageNameTest . java to ensure the Docker image name is correctly formatted and
updated the error message from " login failed username " to " login _ failed _ wrong _ credentials " in LoginActivity . java to improve clarity of
added autofocus functionality to multiple form classes to ensure consistent focus behavior across form components
added unit tests for zone SAML configurations in SamlIDPRefreshMockMvcTests . java to ensure proper functionality of SAML configurations for zones
added checks for ` isEmpty ( ) ` and ` isDigit ( ) ` in ` ComparableVersion . java ` and a corresponding test in ` ComparableVersion
updated modes from ` topLeftMode ` to ` topRightMode ` and modified return values in ` Sheet . java ` and ` UIManager .
refactor ` ParallelUniverse ` imports and package structure in ` RobolectricTestRunner ` , ` ParallelUniverseTest ` , and ` Parallel
updated method return type handling in LocalCacheFactory and NodeFactory classes to improve code readability and maintainability by reducing redundancy
updated the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in HSSFCellStyle . java to improve
added functionality to draw self loops in the graph to enhance visual representation of graph elements
renamed ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` to ` ALLOW _ TVM _ SOL
renamed the method ` addManaged ` to ` manage ` in the ` DropwizardAppRule ` class to improve clarity and consistency in method naming
set the drag handle indicator to zero in AllAppsTransitionController to ensure the drag handle indicator starts at the bottom of the screen
removed logging statements from CollectionViewer , CommunityViewer , and ItemViewer classes to clean up unused logging and improve code clarity
updated the warning message for pushing predicates down in storage handlers during query optimization to provide clearer guidance on filter management during query optimization
added an assumption to skip tests on non - OSX builds to address potential issues with finding itself in the build server
added Maven bundles for Jetty ALPN client and a debug flag in TestJettyOSGiAnnotationParser to enhance OSGi
act - 132 : do n ' t try to retry a job on a process that do n ' t retry
refactor Transaction class to improve transaction handling logic to enhance performance and maintainability of transaction management
replaced ` @ CustomFieldBehavior ` with ` @ ExcludeFromRuleKey ` and added a reason to exclude the ` Genrule execution ` from
simonstewart : do n ' t try to find the firefox executable on window
phoenix - 4951 fix a bug that cause a nullpointerexception when create a table with the same name in the mapping
[ hotfix ] [ runtime ] remove unnecessary suppression of rawtype in hadoopoutputcollector
added a condition to check if the client version is less than MIN _ SPLITTABLE _ SYSTEM _ CATALOG and the view type is
add updatestudentcascade ( ) method to update studentcascade cascade
removed the import of TestCellReference from AllXSSFTests . java to streamline the code by eliminating unnecessary dependencies
added a check for block hardness in LensPiston . java to ensure the block ' s hardness matches the block ' s hard
added a new file LongPointerPressTest3049 . java for testing long pointer press functionality to facilitate testing of long pointer events in the application
[ gr - 32233 ] do n ' t use trufflecompileroptions . value ( trufflecompileroptions . compileroptions ) .
refactor code to simplify null checks in BaseBuilder and XMLConfigBuilder to improve code readability and maintainability
removed conditional check for ` ListBlockParser ` in ` ListBlockParser . java ` and added a new test for rendering deeply indented lists to
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend ` AbstractAssert ` for better encaps
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests due to issue # 1070
test : use string . nativestring instead of string . nativestring for savemessage
refactored the closing brace in RouteStartupOrderLastTest . java to improve code readability and maintainability
added a condition to check if the video format is a video format before retrieving web subtitles to ensure the web subtitles are only processed for video
added security property for " jdk . tls . disabledAlgorithms " in ComHostnameVerifier , JavaxHostnameVerifier , and JavaxHostnameVerifier to
cloudstack - 10247 : do n ' t check if the vm be in the local scope and the vm be in the local scope
updated cache entry retrieval and logging statements in Driver . java , QueryResultsCache . java , and QueryResultsCache . java to improve logging clarity and
added an option to skip model updates in AddManagedDependency and updated related classes to improve clarity and functionality of dependency management documentation
added a test method ` lastIntentSenderRequest . send ( ) ` in ` ShadowActivityTest . java ` and implemented the ` send ` method
updated GLCanvas and GLCanvas initialization to enable and disable FBO functionality in RocketFigure3d . java to improve rendering performance and maintain consistent
added synchronized block for controllerListeners in HydrawiseAccountHandler and updated related code in HydrawiseControllerHandler to ensure thread safety when accessing
added a static method ` beforeClass ` to disable EasyMock compatibility in ` TestCoreAdminApis . java ` to address compatibility issues with Java 9
updated year retrieval method to use ` ChronoField . YEAR _ OF _ ERA ` instead of ` Math . abs ` and added local time formatting
do n ' t try to disconnect a connection if it ' s already close .
updated variable name from " cur . ws _ commit _ id " to " cur . ws _ commit _ id " in TxnHandler . java
refactor BufferedInputFilter to use ByteBuffer instead of ByteChunk for better memory management to improve performance and resource efficiency in handling byte buffers
added a method ` toSync ` to the ` AsyncUtils ` class and a corresponding test class ` AsyncUtilsTest ` to improve asynchronous task handling
refactor GroovyConfiguredCompilerFactory , GroovyLibraryRules , and KotlinConfiguredCompilerFactory to utilize ActionGraphBuilder across multiple classes to improve
simonstewart : add a unit test for uploading with invisible file input
replaced the try - catch block for creating tables with a try - catch block to handle SQLException to improve error handling and prevent application crashes due to SQL
added a check to ensure the file exists before calling super . getLocalMavenDir ( ) to prevent errors when the file does not exist
do n ' t hide the hidden label if the new label start with hidden _ prefix
fix : fix nullpointerexception in ctelementimpl # getmetadata ( ) .
replaced ` setFlags ( ) ` with ` addFlag ( ) ` in ` DefaultTrackOutput . java ` to improve buffer handling by using a
added a condition to check if the cached object can be reordered before proceeding with the reordering logic to ensure that reordering only occurs when
updated error message for missing method call in verify ( mock ) to improve clarity of the error message for better debugging
added null check for backupFolder before logging expiration logs to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the usage of ` Array . newInstance ( void . class ) ` to demonstrate
added @ AddToRuleKey annotation to the ToolType field in ClangCompiler , GccCompiler , and GccCompiler to enhance rule key
replaced hardcoded timeout checks with a static constant PINCODE _ TIMEOUT to improve code readability and maintainability by using a defined constant
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 493 : implement is
removed the @ Ignore annotation from multiple test classes to enable tests that require the MongoDB server for execution
http : / / issues . apache . org / jira / browse / amq - 4673 - fix test that fail on slow machine
updated the condition in MetaDataSource to check if the table is an artifical instead of a string prefix to improve code readability and maintainability
updated file status checks from ` fileStatus . isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java
added null and empty checks for session attributes in MongoSessionManager . java to ensure proper handling of session attributes and improve code clarity
replaced setFixedSize ( 320 , 240 ) with setSizeFromLayout ( ) in CameraSurfaceView . java to improve layout responsiveness by
refactor the stopping variable assignment in AbstractConnector . java to improve readability to enhance code clarity and prevent potential NullPointerExceptions
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintainability
camel - 16263 : camel - core - use system . currentTimeMillis ( ) instead of stopwatch to calculate elapsed time .
[ java ] remove unnecessary doOnError ( ) call from delayedmonpublishertest .
updated the assertion to check if the exception is an instance of WebSocketHandshakeException to improve error handling by providing more informative failure messages
refactor AllAppsTransitionController to implement OnLayoutChangeListener instead of creating a new class to improve code organization and maintainability by separating layout change
renamed ` theHandler ` to ` handler ` in ` PolicyBasedAuthenticationManager . java ` for consistency to improve code readability and maintainability by
int - 1213 add default output channel attribute to xpathrouterparser
added DurationCapable annotation and modified cacheSeconds initialization in MessageBundleProperties . java and CasCoreWebConfiguration . java to enhance cache duration flexibility
updated the version string from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to ensure consistency in the openapi
replaced the ` append ( buffer , true ) ` method with a call to ` append ( buffer , true ) ` in ` ByteBufferPool . java
added a warning check for the " alt - rt . jar " jar detection in the Main class to warn users when the " alt - rt .
updated username handling in JdbcScimUserProvisioningTests to use upper and lower casing for user names to ensure consistency and correctness in user identification
updated FlightRecorderProfiler . java to use ArrayList instead of Arrays and added conditional options based on Java version to ensure compatibility with different Java versions and improve
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check if
added a condition to check if the content view has content in the buffer in HttpParser . java and implemented a test for chunked put in Proxy
updated AtmosEndpoint . java file to improve functionality to enhance performance and maintainability of the application
added support for additional print methods in Java2TypeScriptAdapter to enhance functionality to support additional print methods
added a new file TestCapacityUntilGCAround . java that tests metaspace capacity calculations on 32 - bit platforms to ensure correct behavior of garbage
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added logic to update the end time calculation in SamplingStatCalculator . java to ensure accurate time tracking for sampling results
added unit test base on user forum issue
tmi - 22 : change iioexception to warn for image with single chunk icc _ profile with bad index / count
fix vanilla reequip animation when the item be not the item
refactor JoobyModule , SpringModule , and JoobyExtension classes to conditionally register beans based on entry type to improve bean registration
use container . getparentclassloader ( ) instead of thread . getcontextclassloader ( ) . getparentclassloader ( )
add support for additional nameupdater . properties file in jmeter . properties
[ java ] set start state of ellipsoidregionselector to true .
updated URIs from " http " to " https " in JavaSEPort . java to enhance security by using secure protocols for URI access
[ geos - 5131 ] validate sortby parameter in wfs query to prevent invalid parameter error
updated the condition for determining the grantor string from ` equals ( null ) ` to ` null ` in ` AbstractJdbc2DatabaseMetaData . java `
added GraphicsConfiguration and Transparency imports in DiagramGenerationTest . java to verify image rendering with compatible transparency to ensure that the test verifies the
added a null check for sidedDelegate in the fmlCommonHandler class to prevent potential runtime errors when attempting to install Minecraft . class
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
test : use asserteventually instead of wait for lock . islocked ( )
added a new method ` wholeWordTokenize ` to ` StringUtil ` and a ` joinTokens ` method in ` StringUtil ` to enhance tokenization
use response . senderror ( 404 ) instead of response . sendstatus ( 404 ) for not find
refactor command handling in SystemHighlighter to improve command parsing logic to enhance code readability and maintainability by using a more descriptive variable name
update version and version date from " 1.0 . 0 - SNAPSHOT " to " 1.0 . 1 - SNAPSHOT " and set version date to "
updated position method to use idx dimensionSize instead of idx to ensure correct buffer positioning based on dimension size
added support for handling drag - and - drop functionality in the SystemUiProxy and SystemUiProxy classes to enhance drag - and - drop functionality and
[ java ] add assume to socketappendersocketoptionstest . testsockettrafficclass
added support for PSK - AES256 - GCM - SHA384 and TLSv1 . 2 in TestCipher . java to enhance security
updated description retrieval from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java
added Jackson annotation for JSON properties in ScimGroupMember . java to enable proper serialization of the ` value ` property
added schema scoping functionality to HqlQueryRenderer and implemented tests for schema scoping in HqlQueryRendererTests to enhance query parsing
[ hotfix ] [ runtime ] fix typo in subscriptionhelper . requireNonNull ( )
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
added a new parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method in ` VideoManager . java ` and updated related
updated byte array initialization in MagicDetector . java and added new file types in TestMimeTypes . java to ensure correct decoding of AROF files and
[ hotfix ] [ table - planner - blink ] remove unused getmonitonicity method from flinksqloperatortable
added EqualsBuilder and ToStringBuilder methods to OneTimeTokenAccount and OneTimeToken classes to enhance object comparison and hashing functionality in the database
added a condition to check if the assistant is not launched before proceeding with fling to ensure that fling only occurs when the assistant is not
added a new file SolarisShortDSA . java that utilizes a DSA key pair to demonstrate the use of a DSA key
added a call to toggleSearchLabel ( false ) in ListFragment . java to disable the search label for improved user experience
volume : do n ' t try to create a snapshot if it do n ' t exist on primary
added a new class ` DetailsServiceConnection ` and modified the ` unbindService ` method in ` FileDetailActivity . java ` to improve service connection
updated the handling of SSL peer verification exceptions in HttpClientTLSTest . java to improve clarity and efficiency in verifying SSL peer verification exceptions
removed the ` equals ` method from the ` ConjunctionScorer ` class to simplify the code by eliminating unnecessary complexity
added null check for the item before binding to prevent null pointer exceptions when binding items
add random commit for getraftgroupids ( # 18420 )
refactor cache size comparison to use a variable for better clarity and performance to improve code readability and ensure cache shrinks to a maximum of 90
updated API path from " / api / v2 " to " / api / v3 " and adjusted related methods to ensure compatibility with the latest
added an empty ( ) method to the Freenect2 class to check if the current size is zero to provide a convenient way to check if
added null checks for page data in AsyncPageReader and added a new test for empty dict pages in TestDrillParquetReader and TestD
[ log4j2 - 1342 ] add support for solana data type when build channel name
add config to disable the animation when an item be charging on top of a mana pool .
[ java ] use egress . connection . isConnected ( ) in clusternoderestarttest .
[ hotfix ] [ test ] log error instead of ignore
do n ' t try to create directory on window if directory do not exist
removed redundant calls to StyleInjector . inject ( stylesProvider . openScreenStyle ( ) ) in ResourcesInjectorFull . java to improve code readability
updated variable types from String to FileResource in BaseLiquibaseTask and DBDocTask to use FileResource instead of String to improve type safety
fix blockworldvector . isequal ( ) to use getx ( ) and getz ( ) .
refactor LongConcurrentLRUMap . java to enforce immutability and improve encapsulation to enhance code safety and enforce immutability
added a literal string to the resourceConfiguration addition in ReflectionProcessor . java to ensure the resource configuration contains a valid regex pattern for processing
updated the method for retrieving the KRB5CCNAME environment variable and added validation for the cache name to improve cache retrieval logic and ensure proper initialization
updated the database path in ValidateMultiSignContractTest from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract
removed PeerRequirement from hasSufficientPeers method in IbftProtocolManager , EthProtocolManager , and DefaultSynchronizer classes , and
simonstewart : fix the issue of session log not be attach to the current session
bugfix : do n ' t expand geo segment in equal _ boolean expression
added a check to clear pending rendering operations if the size exceeds 20000 and is minimized to optimize rendering performance by avoiding unnecessary operations when minimized
do n ' t call sleepmillis ( ) if the deadline do n ' t pass
fix write - behind write delay when write - behind write - behind write - behind write - behind write - behind
added a method to set the icon of the JLabel to null in GroupTreeCellRenderer to improve UI layout by eliminating unnecessary visual clutter
updated test methods for strict matching in TestBlacklistAwareRedirectResolver to improve clarity and functionality of redirect matching tests
added resource cleanup in ShutdownMonitor and updated test methods in ShutdownMonitorTest to improve resource management and enhance test coverage for shutdown functionality
refactor memory handling logic in RandomAccessStore . java for consistency and clarity to improve readability and maintainability of the code
refactor field retrieval and setting logic in Json . java for improved clarity and functionality to enhance code readability and provide clearer error messages for better
[ hotfix ] [ coordination ] move componentclosingutils into coordination
cloudstack - 10254 : do n ' t wait for snapshot to be create while transition to error state
cloudstack - 10297 : do n ' t return ipv6 range if it ' s empty .
corrected the spelling of " userDetails " to " beanNames " for consistency to improve code readability and maintainability
increased the timeout from 15 seconds to 30 seconds in the getLeaderRetry method call from 15 seconds to 30 seconds to allow more time for leader retrieval
refactor error message method signatures to remove unnecessary parameters to improve code readability and maintainability
updated drawImage calls in URLImage . java to correct the positioning of images to ensure proper rendering of image elements in the graphics context
updated the comparison condition from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure the correct
refactor code to use a separate method for checking item high cardinality to improve code readability and maintainability
[ hotfix ] [ stream ] add exception to streamconfig # newstreamtaskexception
refactor hash tag handling in Preprocess . java to improve readability and efficiency to enhance performance and maintainability of the code
refactor the read method in MessagePack . java to improve readability to enhance code readability and maintainability
added a new annotation interface ` Mapper ` to the ` org . apache . ibatis . annotations ` package to provide a mechanism for defining the annotation type
add a check for ` issupportsfhircomment ( ) ` when ` extensions . isEmpty ( ) ` be true and ` comments . isEmpty
[ mod ] add support for ` ` . mod ' ' and ` ` . mod ' '
added an alias for node _ popup / node _ popup _ scripting in the entryNavigator to improve clarity and organization of scripting menu entries
updated constants and added alpha animation logic in OverviewActionsView , RecentsView , and OverviewActionsView classes to improve task visibility handling and
camel - 3979 : fix potential class cast exception in camel - jms .
[ java ] remove unnecessary ` ` throws ioexception ' ' declaration .
deleted the ` AbstractDelegatedVerb . java ` and ` FailureContext . java ` files to remove deprecated code to streamline the codebase
added micro compression support in GzipHandlerTest . java and modified gzip handling in GzipHandlerTest . java to improve gzip compression handling and ensure
[ java ] use backpressureutils . getandaddrequest instead of consumercapacity . getandadd ( ) in onsubscriberedo .
added logging for component stop events in SpeedmentImpl . java to improve monitoring and debugging capabilities of component lifecycle events
[ dspace ] add support for load dspace - config from servlet context
added null check for ` kv ` and modified row matching logic in ` StoreScanner ` and ` TestWideScanner ` classes to improve robustness and
camel - 14263 : camel - Nagios - eventnotifier should not use jmx when run test
added a constant for the canonical package separator in SourceLineAnnotation and modified source path handling in SourceCodeDisplay to improve code readability and maintainability
added methods to find YARN binary , Hadoop home , and application ID in HiveConf , RemoteSparkJobMonitor , and RemoteSpark
added support for both " mysql " and " maria " database names in DbConnectionManager to ensure compatibility with both MySQL and Miaria databases
[ hotfix ] [ test ] fix log output in splitlogmanager
added a new file ` ExecuteAndReturnStringTest . java ` to test the functionality of ` ExecuteAndReturnString ` to provide a testing framework
added a new file ` InvokespecialInterface . java ` implementing a ` I ` interface and a method to demonstrate the usage of ` invokespecial `
refactor EvictingBoundedList class implementation to improve performance and readability of the code
do n ' t use edge base dir traversal mode if turncosts = true
added a condition to check if the backgroundDisabled property is set and a selection cannot be negative to ensure that selections are only allowed when the background
hbase - 13386 throw unsupportedoperationexception if rpcserver . getheader ( ) return null
updated hotseatCellSize calculation to use cellLayoutBorderSpacePx instead of hotseatPadding to improve layout accuracy by incorporating border
refactor partition name handling in ExpressionTree . java to use values . get ( ' partitionColumnIndex ' ) instead of keyEqual and partitionName
add versioned support for namedtaskdecorator ( # 181 )
updated the directory retrieval method from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
changed the default value of the ` equal ` variable from ` false ` to ` true ` in ` DisplayModeTest . java ` to ensure that
added code point formatting for high codepoints in UnicodeToLatexFormatter and updated UnicodeConversionMaps to include a new test for high - point
added null and non - null checks for value in OAIDCCrosswalk . java and updated value assignment logic in Item . java to ensure proper
simonstewart : do n ' t select the last frame if it ' s the first one
added a border to the plug - in panel and modified the name check condition in the BookmarksPanel and BookmarksPanel classes to enhance
refactor URL building in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building the base URL to improve code readability and maintainability by
replaced java . sql . Date with java . sql . parseDatetime and updated assertions in SoftAssertionsTest . java to improve date parsing functionality and
updated the adaptOrders method to include a reverse parameter and adjusted limitOrders initialization to enhance order adaptation logic to accommodate reverse orders
modified the PrettyPrinter class to handle null and invalid vartype cases and added a new Java11Var class for testing to improve error handling and demonstrate
[ java ] remove unimplemented ` ` notyetimplemented ' ' test
modified Hadoop configuration initialization to disable default properties to ensure Hive defaults are used without overriding by existing Hadoop
updated the draw method call from ` super . drawChildren ( batch , parentAlpha ) ` to ` super . draw ( batch , parentAlpha )
added unit test for filesplitstreamingwithchoice
[ java ] use getcatalinabase ( ) instead of system . getProperty ( org . apache . catalina . globals )
added unit tests for date time pattern retrieval in ShadowICUTest . java and modified the return statement in ShadowICU . java to ensure correct
added a style attribute to the object map in PlotSquared . java to improve the clarity and usability of color codes in the output
added ZuulProperties parameter to traceRestClientRibbonCommandFactory and related classes to enable tracing of REST client services with Zuul properties
tika - 3666 : fix fontparserstest to work with time zone .
added a new file ` SampleApplication . java ` and modified the ` BuildInfoMojo . java ` method in ` BuildInfoMojo . java `
updated the calculation of xDist in PagedView . java to use Math . abs instead of Math . abs to ensure accurate x - coordinate comparison
deleted the GUIRWTester . java file to remove unused code to streamline the project
removed the @ NullableDecl annotation from the ` countPlaceholders ` method signature in ` LazyMessage ` and ` StandardSubjectBuilder ` classes to simplify
updated error message formatting in TestStream . java to improve clarity of error messages for better debugging
thymeleaf : move thymeleaftemplatereader from templateparser to markup
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated XML expression calls in ` XPathTest . java `
added @ Nullable annotation to FutureUtils . java to indicate that certain fields may not be nullable
add warn if invokedynamic be not resolve during call graph construction .
updated email addresses in ContextTest . java from " myfakeemail @ gmail . com " to " myrealemail @ example . com
updated HTTP response message formatting in HttpConnectionTest . java and URIUtil . java to improve clarity and consistency in error reporting
added a method ` getColumnDataType ` to ` AbstractResultSet ` and implemented it in ` ResultTableResultSet ` to provide a standardized way to retrieve
camel - 15836 - camel - aws2 - test - aws2 - test - aws2 - client - interface should throw unsupportedoperationexception
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
replaced ` System . currentTimeMillis ( ) ` with ` Instant . now ( ) ` and replaced ` System . currentTimeMillis ( ) ` with `
added version checking and improved debug logging in LibMediaInfoParser . java to enhance media information parsing and ensure compatibility with newer MediaInfoLib features
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enhance proxy handling for dependencies in the project
added a new file ` SerialHeap . java ` that extends ` GenCollectedHeap ` and updated the mapping in ` Universe . java `
added multiple @ SuppressWarnings ( " serial " ) annotations to the Gson class to suppress serialization warnings for better code clarity
fix mouse wheel event to use vector2i for tooltip position .
datamongo - 1608 - fix nullpointerexception when findbyfirstname ( ) return null
[ hotfix ] [ java ] add support for multiset type in maptypeinfo .
added a method to retrieve an active XOAuth provider by issuer and zone ID in XOAuthProviderConfigurator to improve error handling and provide clearer feedback
added a check for delimiters in the CMapParser class and updated condition checks in TestCMapParser to ensure proper handling of delimiters and
added OperationsService integration and refactored file expiration logic in ContactsBackupJob . java to improve service management and ensure proper unbinding of the
refactored type inference logic and added a new class T6938454a with a new class T6938454a to enhance type inference
added isconfighidden ( ) method to accountlist . ishidden ( ) .
added an error log for inconsistent display sizes in DisplayController . java to improve debugging by identifying inconsistencies in display configuration
updated schema removal logic in PMetaDataImpl and added a new test for schema removal to improve code clarity and ensure proper functionality of schema management
ggb - 2375 passive login listener should be fire after login .
added a new file ` Box2DTest . java ` and modified ` GDXTester . java ` and ` Box2DTest .
patch by jbellis ; review by gdusbabek for cassandra - 129
updated the DEFAULT _ BUFFER _ REQUEST _ TIMEOUT constant from Duration . millis ( 5 ) to Duration . ofMinutes ( 5 ) to improve
added DEFAULT _ GENERATOR _ NAME and DEFAULT _ GENERATOR _ VERSION constants in SpeechSettings . java and updated related classes
added a button to the help button in OpenOfficePanel . java to provide users with an easy way to access the help page
[ java ] use child channeloption . childoption ( channeloption . tcp _ nodelay , nettyTcpNodelay , nettyTcpRecycleaddr
updated method signatures and parameter types in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceTradeServiceRaw classes to improve type safety and
added a transient transient Class < ? > classRef and refactored class loading logic in ScanResultObject . java to improve handling of class references
refactor connection handling and redirection logic in DecodeServlet . java to improve code readability and maintainability by consolidating connection logic
added null handling functionality to Querydsl in Querydsl . java and created corresponding integration tests in QuerydslIntegrationTests . java to improve
added null check for the actor before processing actions in ParallelAction and SequenceAction classes to ensure that actions are only processed when the actor is not null
fix ( test ) : fix checkstyle issue in cttypetest
added synchronization to ` sfWritersLock ` in ` HDFSEventSink . java ` to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and a corresponding test class ` JJ ` , ` JK ` , and ` K
added functionality to revoke an existing agent certificate and updated script arguments in CertificateManager . java to improve certificate management and ensure proper validation of revoked certificates
added a check for responses with no body codes in AbstractHttpTest . java and modified the condition in HttpServerTestBase . java to ensure proper handling of
refactor script initialization and exception handling in ScriptTransformer . java to improve clarity and error reporting to enhance maintainability and provide clearer error messages for
added support for " DBCP " and " NONE " connection pooling in HiveConf and QTestUtil to enhance connection pooling capabilities and improve
updated method calls from ` mDevice . pressHome ( ) ` to ` mLauncher . pressHome ( ) ` across multiple test files to ensure
added filtering logic for locking and unlocking files in FileMenuFilter . java and modified condition checks in OCFileListFragment . java to
refactor Version class to improve code readability to enhance maintainability and facilitate future updates
patch by jbellis ; review by gdusbabek for cassandra - 151
replaced multiple calls to ` thrsync . waitForSignal ( ) ` with a single method ` waitForState ( Thread . State . WAITING )
refactor ` getCoercedAttrValues ` method to accept ` ProviderInfoCollection ` instead of ` Map < String , Object > `
simonstewart : refactor localstorage interface to extend storage interface
added null check for existing view before checking new row type in PlanExecutor and modified test cases in CreateViewStatementTest to improve robustness of view
updated exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve clarity of error messages for better debugging
updated query handling in SpellCheckComponent to use rb . getQueryString ( ) instead of rb . getQueryString ( ) to ensure query string is retrieved
added validation for illegal characters in header values in Headers . java to ensure header values are valid and prevent potential errors
replace instanceSize with arrayBaseOffset and update related methods in HybridLayout and HostedInstanceClass to improve clarity and maintainability of the code
[ apex ] rename astcommentcontainer . setcontainscomment to abstractapexcommentcontainernode . setcontainscomment
hhh - 13232 add log for lazy fetch mode join
refactor ` NoGetOperationsFilter ` and ` NoUserOperationsFilter ` classes to extend ` AbstractSpecFilter ` instead of implementing ` Swagger
added assertions to verify database and table names in TestCompactionTxnHandler and updated TxnHandler to set database and table names to ensure that the correct
added graceful shutdown to timerconsumer and add unit test for it
added a condition to check if a block is processed before adding traces to ensure traces are only added when the block is not processed
replaced ` contains ` method with ` CollectionUtils . contains ` for checking null elements in ` ProviderManager ` to improve code readability and maintainability
simplified the return statement for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to improve code readability and reduce unnecessary complexity
updated SQL query execution in LocalIndexIT and added a new constant LOCAL _ INDEX _ LIMIT in BaseResultIterators and modified related classes to
added a check to prevent adding collections with the same name multiple times in the past to ensure that collections with the same name and type have already been
refactor screen positioning logic in VDUBuffer . java and update cursor position handling in VDUBuffer . java to improve accuracy of cursor position
removed the constant USE _ RETRIES from HttpShardHandlerFactory . java to simplify the code and improve maintainability
updated VERSION _ NUMBER regex in JavaVersion . java and added a new test for JavaVersion . parse ( ) in TestJavaVersion . java to
[ hotfix ] [ runtime ] add check for empty input gate in streamtask
added a JUnit test method to TestReceivingMessageSourceParserTests . java to ensure that the parsing functionality works as expected
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when accessing properties
refactor IOException handling in FileSystemBlobStrategy to use initCause for better clarity to improve error reporting by including the cause of the exception
updated the spelling of " Setting up base URLs " in multiple classes to improve code readability and maintain consistency in naming conventions
txidtext : add txconfidencelistener to be able to update tx confidence .
added a constant for the G1 perm gen constant and a check for it in the JmxSupport class to support the G1 perm gen functionality
removed unused imports and simplified return statements in NearbyController . java to streamline code and improve maintainability
pdfbox - 4892 : make clonefornewdocument public , a suggest by valerybokov
added imports and modified task type checks in BaseSwipeUpHandlerV2 . java to ensure that home activities are correctly handled during gesture state transition
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants in ` DefaultEdgeClientFilter . java ` to
renamed methods and modified their case handling in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and consistency in naming
added a method call to set the unfreeze amount in the UnfreezeBalanceV2Actuator class to ensure the correct unfreeze amount is
updated PUBLISHED _ TIMESLOT _ DESCRIPTION and PUBLISHED _ ROOM _ DESCRIPTION from " per minute " to " per
simonstewart : use commons - io for copy directory instead of google - common - io
refactor assertions in AbstractListAssert , AbstractUriAssert , and Lists classes to improve code organization and maintainability
javadocs : add miss @ see link ; correct broken link url ; standardize formatting / capitalization / punctuation
updated the ` $ pushAll ` operation to use ` addMultiFieldOperation ` instead of ` put ` in ` Update . java ` to improve
added null check for ` randomUUID ( ) ` before setting the UUID in ` MockHubService . java ` to ensure that ` randomUUID ( ) `
added a default method ` onHoverEvent ` in ` InputConsumer ` and implemented hover event handling in ` OverviewInputConsumer ` to improve event
added a delay in the initialization of the " boostrap _ conf " variable in CoreContainer . java to ensure that the " bootstrap _ conf "
camel - 14284 : camel - netty - server - bootstrap should use ` ` consumer ' ' label instead of ` ` consumer ' '
hbase - 26165 increase hbaseclientretries _ number to 35 , hbase - 2640 ( addendum )
updated file path handling in SourceSnippetHelper . java to use absolute paths instead of absolute paths to improve compatibility across different operating systems
[ gr - 32258 ] fix test failure in encodedgraphcachetest .
updated query command to use " all _ tables " instead of " customer _ count " and added a new test for querying system tables to improve
added functionality to handle multiple kraken asset codes in KrakenAdapters . java to enhance currency metadata handling for better integration with Kraken assets
added a ` toString ( ) ` method to ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test ` to
[ te ] alerttaskrunnerv2 : use dimensionmap instead of entry . getKey ( ) for group email
[ influxdb ] fix npe in influxdbpublisher when measurement and database be blank
rename ` doTransform ` method from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming
updated address filtering logic in NetUtils . java to include unique local addresses to enhance security by ensuring only unique local addresses are processed
added a method to quote column names in the DataTextFormatter class to ensure that column names are properly quoted to improve data integrity by preventing SQL injection
added methods to set system properties and set properties in WrapSystem and StrUtils classes to enhance system property management and improve code readability
added a constructor to the UpdateRequest class that accepts a URL parameter to initialize the request with a POST request method
removed the static modifier from the EnumSerialization enum in multiple Java files to improve code readability and maintainability
added a warning for the experimental response format in DataImportHandler and ReplicationHandler classes to indicate that the response format is experimental and may change in the
updated debug logging to include formatted strings for moduleNames and added a method to format moduleNames to improve logging clarity by providing more informative debug messages
bug fix : increase row height of attribute registry table by 5 / 4
[ java ] fix checkstyle violation in defaultbrokerheartbeatmanager
added meanPartitionSize and partitionCount variables in CqlInputFormat . java and updated related logic in CqlInputFormat . java to improve handling of partition
simplified the condition for checking the name in JUnitTestsShouldIncludeAssertRule to improve code readability and maintainability
[ drools - 118 ] add equal ( ) and hashcode ( ) to ruleterminalnodelefttuple .
added import for StageIDsRearranger and a condition to resolve StageIDsRearranger in TezCompiler . java to ensure proper handling of
use net instead of concurrent - service - pool name for messagingservice . patch by jbellis
updated memory consumption check in LotsOfOutput . java to improve memory management to ensure accurate memory consumption tracking during initialization
added imports for Document and Document in multiple Java files to enhance documentation clarity and maintain consistency across the codebase
refactor ` LdapProperties ` to use ` anonymousReadOnly ` instead of ` baseEnvironment ` and update related methods to improve clarity and maintainability of
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed access modifier of EchoInputDoFn from public to private in ExampleEchoPipelineTest . java to restrict access to the EchoInputDoFn class
added a new method ` finishMocking ` in ` DefaultMockitoSession ` and modified its return logic in ` DefaultMockitoSession ` to
refactor dependency handling in GoTestDescription . java and add new test cases in GoTestIntegrationTest . java to improve clarity and functionality of rule generation
refactor SPDYAsyncConnection to replace ` flushing ` and ` writePending ` variables with ` readBuffer ` and ` writeHandler `
change blockliquidwrapper . getstaticblock ( ) to getflowingblock ( ) .
updated intent handling in AndroidLocationPlayServiceManager and modified location data retrieval in BackgroundLocationHandler to improve location handling by allowing URL parameters to be passed
refactor AprEndpoint class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ table - common ] handle streamingplan in clifrontend
fix CraftingManager . java : use computeifabsent ( ) instead of computeifabsent ( ) to improve performance
flume - 1027 : add testutils . doforcedcheckpoint to testfilechannelrestart and testsyslogtcpsource .
refactor conditional checks in TabsAndIndentsVisitor . java to simplify the condition to enhance readability and maintainability of the code
added a regex pattern for matching pg _ temp _ . * in NeuteredLinesFilter . java to enhance filtering capabilities for temporary files in the
updated the ` ProtoRestSerializer . create ( ) ` method to include a default value of false to ensure consistent behavior across the codebase
added a condition to handle " INTERVAL " and " NCLOB " types in DataTypeFactory . java to ensure correct handling of data types
[ wavefront ] do n ' t flush the distribution histogram if it ' s not publish .
added a warmup option to the Spring Cloud selector handle in ShenyuClientRegisterSpringCloudServiceImpl . java and updated the ` Divide
added a new implementation of the ` registerListener ` method in ` ShadowSensorManager ` to enable the registration of sensors with specified rate and max latency
added exception handling for HTTP full method and header tests in SelectChannelServerSslTest . java to improve error logging for overtook HTTP responses in
camel - 14263 : camel - ignite : fix npe in camel - ignite
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 560 : line number
pdfbox - 2576 : catch unsupportedflavorexception instead of ioexception , a suggest by valerybokov
added unit tests for setting display header capabilities in ShadowDisplayTest . java to ensure correct functionality and error handling of display capabilities
added a finally block to reset the classLoader in JavacInMemoryStep . java to ensure proper resource management and prevent memory leaks
added more context in SemanticException messages for better debugging to improve debugging by providing more context during exception handling
added a constructor to the Message class to ensure the Message class has a default constructor for instantiation
do n ' t throw an exception if the gui class do n ' t exist .
refactor PhoenixDecimalObjectInspector to use PrimitiveTypeInfo and enforce precision scale to improve type safety and ensure proper handling of null values
updated CompressionResponseStream to use OutputStream instead of GZIPOutputStream in CompressionFilterTestServlet and modified the content encoding handling in CompressionServletResponseWrapper to improve response
renamed ` WWWWAuthenticate ` and ` parseWWWAuthenticateHeader ` to ` authenticateHeader ` and updated related methods accordingly to improve
removed unnecessary checks for " EJS " , " _ " , and " org . omg " directories in DCD . java to simplify the code
added a method to retrieve the thread group name in ThreadLeakTest . java to improve clarity and maintainability of thread name retrieval logic
refactor method signature and logging in MethodInvocationPrivilegeEvaluator . java to improve code readability and maintainability
updated package name from " org . apache . nutch . crawl . DmozParser " to " org . apache . nutch . tools
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and reduce
cloudstack - 2530 : add support for iso iso path for user vms
refactor signal handling logic in SigInt . java and improve test assertions in SigIntTest . java to enhance code clarity and maintainability
[ hotfix ] [ table - common ] use arrayutils . isEmpty instead of static import
updated import statements and added new auto - configuration annotations for DiscoveryClient and HibernateJpaAutoConfiguration in AxonAutoConfigurationWithSpringCloud
added multiple @ Override annotations in ColorRGBA . java to improve clarity and maintainability of the code
remove undeprecated planningentityselector . resetinitializedplanningentities ( ) since it be deprecate
added build time handling in TwoLevelArtifactCacheDecorator and updated related classes to include build time management to improve cache management by incorporating build
updated field access methods in GroupByOperator to use getDeclaredFields ( ) instead of getDeclaredFields ( ) and modified condition checks in NUMROWSEST
added a null check before adding block appearance in the addBlockAppearance method to avoid potential NullPointerExceptions when the block is null
added CNC _ BTC and CNC _ BTC currencies to the currency pair to support trading functionality for the Chinesecoin currency in the application
updated skewAllowance value from 5 to 15 and refactored related classes to use CasConfigurationProperties for skewAllowance to improve flexibility in
updated SongListActivity to use ` SortName ` instead of ` PrimaryImageAspectRatio ` for sorting in ` SongListActivity . java ` to ensure
added a method to read a request body as a byte array in the Utils class to ensure proper handling of request bodies to avoid potential NullPointerExceptions
added legacybaseblock . getnbtdata ( ) and setnbtdata ( ) to block .
refactor snapshot retrieval logic in IcebergBranchExec . java and add a test for it in TestHiveIcebergBranchOperation . java
use list . singleton instead of list for setexternalgroupswhitelist ( )
[ photon ] fix crash when click on ray and ray button .
updated password change validation logic in IdentityProviderEndpoints . java and added logging in IdentityProviderEndpoints . java to improve error handling and provide clearer logging
added a method to remove notInitializedInConstructors from notInitializedInConstructors to ensure that notInitializedInConstructors is not included in the
added a check for closed connection before throwing DatabaseException in JdbcExecutor . java to ensure proper URL is used when the connection is closed
camel - 14284 : camel - springmvc - add test case for missing body
updated regex patterns for user and password from " user " to " password " in CredentialInjector . java and CredentialInjectorTest . java to
added " Item4 " and " Item4 " to the list of menuItems in ActionListenerCalledTwiceTest . java to enhance user experience
updated print statements in TestCoreParser . java to include class name format and improved result validation logic to enhance readability and provide clearer output for
corrected a typo in the comparison condition in SimpleNode . java to improve code readability and maintain consistency in naming conventions
changed the visibility of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encapsulation
updated the method for retrieving document counts in MoreLikeThis . java and added a test for small sample samples in TestMoreLikeThis . java to
updated quest event triggering logic in QuestManager . java to include a new substring to ensure the event triggers correctly for valid quest states
[ hotfix ] [ test ] make networkbufferpooltest a static class
updated query appending logic in MongoSessionDataStore to use append method for better clarity to improve code readability and maintainability
added a new macro substitution for the ` unsafeGetLong ` method in ` CompilerDirectivesSubstitutions . java ` to facilitate the retrieval of long
updated time zone data from " Asia / Amman " to " Asia / EET " across multiple time zone files to ensure accurate representation of time
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to correct a typo and improve code clarity
hhh - 11818 - do n ' t throw jdbcexception if transaction be rollbackonly
downloadexternalfile : do n ' t print null suffix if it do n ' t exist .
disable screen menu bar on macosx by default
geogebracasintegrationtest : add piecewise integration test
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods in ` BaseSwipe
added modWhiteListPattern assignment and a test case for modifying Hive . metastore . uris in JdbcWithSQLAuthorization . java to ensure
added entryName and value to invalidClasses in EntryLoader . java to ensure proper handling of invalid classes during entry loading
updated the method to retrieve the damage target from the player ' s team instead of the sharded team to ensure accurate targeting of damage units based on
updated cookie domain from " comp1 " to " domainHelper . getHostName ( ) " in CookieImplementationTest . java to ensure the test uses the
added validation logic for nullable columns in multiple classes to ensure columns do not validate nullable values correctly
refactor multiple security - related classes for improved organization and consistency to enhance maintainability and readability of the codebase
updated CustomCollectionTest . java and CompositeIdRouter . java to use static final constants instead of static final variables to improve code clarity and ensure consistent
added snapshot scratch pad functionality in ` ExecutablePreparedStatementBase ` and modified ` PostgreSQLIntegrationTest ` and ` PostgreSQLIntegrationTest `
added checks for max _ cache _ size and max _ cache _ size in DefaultServlet . java to ensure proper handling of cache size and cache size
fix issue with duplicate dnd indicator in jabref frame .
updated description creation in ExecutionUnitRunner and modified test assertions in CucumberTest and CucumberTest to improve clarity and functionality to enhance test
updated the condition to check if ` myVersion ` and ` buildTimeString ` are both non - empty and non - empty to improve code read
removed the ` public ` modifier from method signatures in ` TimeUtils . java ` and updated import statements in ` GitBlitUtilsTest . java
removed the " jdk . reflect . useDirectMethodHandle " property and refactored class name check logic in RefectionMHTests to improve
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with file extensions in the
fix nativeimagedebuginfoprovider to return the class name for hostedmethods .
added icon retrieval methods and updated class displayed value in DataTableTopComponent . java to improve icon functionality and maintain consistency across the codebase
added a check for the last occurrence of the last dot in the request name to ensure that the substring is only returned when the last dot is present
updated the replacement logic in FindAndReplace . java and added a test for dollarignslerated functionality in FindAndReplaceTest . java to
jabber : fix npe in setconnection ( ) when debugger be null .
refactor SchemaExtractionProcessor class to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` in ` IO . java ` to enable directory copying functionality in the ` IO ` class
added error handling for unknown datum class in JacksonUtils to improve error reporting for unknown datum types
refactor ABI and source ABI retrieval methods in DefaultJavaLibraryBuilder . java to improve code clarity and maintainability by centralizing ABI
refactor height calculation in SelectBox . java to simplify height calculation to improve code readability and maintainability
added normalization for dbName and tableName in ObjectStore . java to ensure consistent identifier formatting across the application
added schema handling for oracle database types in DbSqlSession . java to ensure proper schema assignment for oracle databases
removed the logout call from HomeFragment . java to simplify the logout process and improve code readability
[ hotfix ] [ test ] fix typo in mockstreamingruntimecontext ( # 1337 )
added null check for candidates in FastImportAction . java to prevent potential NullPointerException when accessing candidates
updated the managed state check in ContainerLifeCycle . java and added new assertions in ContainerLifeCycleTest . java to improve clarity and correctness of managed bean
rename IExecutionAttributesDialect to IExecutionAttributeDialect across multiple files to improve clarity and consistency in naming conventions
added a call to metadata . clearUnsafe ( ) in AlterTest . java to ensure safe access to metadata during tests
added null checks for location in CmdGetTime . java to handle potential null values to improve code robustness by preventing potential NullPointerExceptions
added null checks in TabletInsertionDataContainer and refactored DisruptorQueue to use DisruptorQueue ' s setExceptionHandler method to
deleted the Session2Token . java file to the class was deemed unnecessary for the current project
volume creation and removal process do n ' t fail if the destination volume can not be remove
added a new ` Install ` class and integrated it into ` SystemShortcut ` and ` InstantAppResolver ` in ` PopupDataProvider . java `
added a constructor to ` LdapAuthenticationProvider ` that accepts an ` NullAuthoritiesPopulator ` and updated tests accordingly to ensure that the ` LdapAuthenticationProvider
added a system property for the retrolambda jar path in Executor . java and improved error handling in CN1BuildMojo . java to ensure
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the build process by removing unnecessary exception
replaced FixedBitSet with Bits for sorting live documents in DocumentsWriterPerThread . java to improve handling of non - null live documents during sorting
added handleNullResult method to JMESPathExtractor to improve handling of null results in the JMESPathExtractor class
updated import statements and added a check for valid authorities in AuthorizeTag . java to improve code clarity and handle cases where no authorities are provided
updated assertions in DefaultLogoutManagerTests , DefaultSingleLogoutServiceLogoutUrlBuilderTests , and CasSupportJdbcAuditConfigurationTests to use Java '
vm snapshot : fix typo in error message
updated configuration handling in RobolectricTestRunner and added a test for merging class and method configurations to improve performance and ensure correct merging of configuration
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize a more efficient socket connection implementation
added a method to compare partial field keys in HiveAlterHandler and updated related tests in TestHiveMetaStore to improve comparison logic to ensure
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to the FeatureFlags class to control the visibility of the icon in
corrected a typo in the condition in SimulationStatus . java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback in StandardDeployer and StandardUndeployer classes to improve compatibility with the Jetty framework ' s callback handling
added workspace listener functionality to the PreviewControllerImpl class and modified the PreviewUIController to build the graph when workspace changes occur to ensure the
added a check for VM anonymous classes in ReflectionFactory . java and modified the class name check in ReflectUtil . java to improve handling of anonymous classes
refactor TransportHelper class to improve code structure to enhance maintainability and readability of the codebase
updated file path formatting in CatalinaAcegiUserRealm . java to improve compatibility with Spring ' s resource loading mechanism
updated logging messages in AmbariServer . java to improve clarity to enhance visibility of server startup processes for better debugging
added null checks for init and modify nodes in JSONWriter . java to enhance robustness and prevent potential NullPointerExceptions
refactor ` SliderAppsViewControllerImpl ` to simplify the ` run ` method signature and improve user authentication handling to enhance code readability and
added a check to ensure the backgroundManager is not attached before attaching it to avoid potential null pointer exceptions when the backgroundManager is not attached
added functionality to set the current tab in AllAppsTabbed , Launcher , PagedView , and Workspace classes to improve tab management and
added null check for the ` p ` parameter in ` BaseDataSource ` and a corresponding test in ` SimpleDataSourceTest ` to ensure that invalid URL
added support for JUnit 5 features in PebbleModuleTest . java to ensure compatibility with newer Java versions and improve test reliability
added ` EditNameDialog ` functionality to manage directory creation in ` FileDisplayActivity . java ` to improve user experience by allowing directory creation to be
added functionality to toggle bar borders in multiple activity classes to enable customization of bar borders in the chart
updated the API endpoint from " okcoin . com " to " okex . com " in OkCoinExchange . java to ensure compatibility with the
[ jbrules - 2530 ] add a naturalscorecomparator to the acceptedforagertest . testpickmoveall
replaced FileChannel with SeekableByteChannel for stream handling in Files . java and added byte array comparison in BytesAndLines . java to improve memory management and
refactor getFlattenFieldTransferPair method to use FieldReference instead of TypedFieldId to improve code readability and maintainability by reducing redundancy
updated the ` MockHandler ` class to use ` MockHandlerImpl ` instead of ` MockHandler ` across multiple files to ensure consistency with the new
refactored conditional statements in SerializationConfigurationParser . java for clarity to improve code readability and maintainability
added imports and a memory limit setting in QuickstepProcessInitializer . java to limit memory usage on debug devices to improve performance on debug devices by
refactor sumWithCompensation and incrementing logic in Collectors . java to improve clarity and maintainability of the code
[ log4j2 - 1342 ] do n ' t ignore osgi bundleexceptions in abstractloadbundletest
[ hotfix ] [ table - common ] do n ' t serialize toplevel deletion time in precompactedrow
updated return statement in ICC _ Profile . java and added a new test class ColorConvertOpTest . java for invalid render intent handling to ensure correct
added MeterRegistryLifecycle to manage meter registry lifecycle to ensure proper resource management and prevent memory leaks in the application
change log level from warn to info in configurationutils . java ( # 10786 )
added error handling for generating a certificate with an empty byte array in CertificateFactoryTest . java to ensure that the certificate generation process fails gracefully with
camel - 16265 : camel - core - optimize simpleparser to handle ambiguous operator
refactored the onTabUnselected method in EditorActivity and added focus handling in IDEEditor to improve code clarity and ensure windows are dismissed
add user name to error message when accesslogvalve fail to open
updated scaling and scaling parameters in SkeletonModelGpuSkinningTest . java and adjusted animation time calculation in OGREXmlLoader . java
removed InterruptedException from the createOrThrow method signature in DefaultProjectFilesystemFactory . java to simplify method signature by eliminating unnecessary exception handling
added @ Deprecated annotation to UpgradeResponse . java to indicate that the methods are outdated and should not be used in new code
added support for generating D . ts files along with JavaScript files in the transpiler to enable users to specify where generated files should be generated
added a test for Kinesis fetch timeout in StreamConfigTest . java and updated default fetch timeout value in StreamConfig . java to ensure that the
[ hotfix ] fix typo in streamingdataflowworker
increased the maximum number of metastore server ' s max threads from 100000 to 1000 to optimize resource usage and improve performance
changed the return type of the onTaskSnapshotChanged method from void to boolean in RecentsModel . java to allow the method to return a boolean
replaced ` mMaxShadowRadius ` with ` shadowRadius ` in ` SwipeUpAnimationLogic . java ` to ensure the shadow radius reflects the
added a new test method ` chainNestingAndAggregation ` to the ` ChainParserTests ` class to verify the functionality of chaining and
updated the loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure the loop
do n ' t use source . isinteractive ( ) for source . isinternal ( ) .
added a null check for previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure correct behavior when previousCachedFilePath is null
added DisplayController import and modified WindowManagerProxy initialization in LauncherPreviewRenderer . java to support display control functionality in the launcher
added checks for the root directory in MetalFileChooserUI and SynthFileChooserUIImpl to ensure that the toolTipText is set correctly based on
updated the way screen size is retrieved in LooksFrame . java to ensure compatibility with the current toolkit ' s screen size retrieval
changed the return type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > in Tensor
added unit tests for fetching results with factory expression in JPASQLBase . java to improve test coverage and ensure correct functionality of fetching results
removed unnecessary point removal logic in FreeformFinSetConfig . java to simplify the code and improve clarity by eliminating unnecessary debug output
updated the MOE version from " 1.2 . 2 " to " 1.2 . 0 " to incorporate the latest features and fixes from the new release
updated error message from " canot set call value " to " cannot set call value " and added spendingAllGas ( ) method call to
updated error message formatting in ` ElementsShouldSatisfy ` and ` ZippedElementsShouldSatisfy ` classes to
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should not be used in new code
refactor unsafe registration logic to use a dedicated method to improve code readability and maintainability by reducing duplication
added @ Hint ( isDep = false ) to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and added a new test
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable vertical scrolling for better user experience
[ hotfix ] [ table - common ] fix checkstyle violation in migrationrequestoperation
[ knected ] update knected handler to use baseurl instead of moduleipaddress
updated the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy .
added support for creating and using a non - ASCII database in the TestJdbcWithMiniLlap class and updated query processing in LlapBase
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate the parsing and deparsing of SQL
added touch event handling and refactored copy mode logic in ConsoleActivity . java to improve code readability and maintainability by encapsulating
refactor ` writeXmlOutput ` method to use ` try - with - resources ` instead of ` Closeables ` to improve XML output handling and
camel - 14284 : fixed npe in abstractaggregationstrategy when the exchange be null . thanks to andreas for the patch .
camel - 14263 : camel - logging : use camelexchangeexception . createexceptionmessage instead of exchangehelper
move logback . logback . classic to the logback - classic package
added a check for the presence of ValueNumber . PHI _ NODE in TypeQualifierDataflowAnalysis . java to ensure that targetVN is
removed unused import of SharedStringSource in TestXSSFRichTextString . java to clean up the code and improve readability
added a static method ` invokeMethod ` to handle method invocations in ` ObjectInvokeHelper . java ` to provide a convenient way to invoke methods
refactor BoxAndWhiskerCalculator , BoxAndWhiskerDataset , and HistogramDataset classes to improve code organization and maintain
[ hotfix ] [ test ] upgrade readwritableconfigurationtest to junit 5
updated the ` NormUpdate ` class to use ` equals ` method instead of ` equals ` for field comparisons to improve code readability and
changed the access modifier of the IndexFileNameFilter constructor from public to private to enforce encapsulation and improve code readability
make sure ifstatementtest do n ' t fail if it be not a booleanedge
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
removed the use of a static method ` TypeAdapter . nullSafe ( ) ` in the ` TypeAdapter ` class to simplify the code and improve
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected size in the test
added EXIFReader class to read and process metadata from a file to enhance image processing capabilities by providing detailed metadata information
camel - 14284 : camel - aws2 - cloudwatch - batch - to - standard - unit should return none for unknown unit
[ rhdm - 1342 ] fix npe in applypmmlmodelcommand ( # 3983 )
updated the message formatting in FluentProtocol . java to improve clarity to enhance readability and understanding of expected scenarios during startup
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
aarch64 : reset label range when emit a branch target outofboundsexception .
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java and added a test for
added a new method ` find ` in ` TicketCatalog ` and updated debug logging statements in ` DefaultTicketCatalog ` and ` HazelcastTicket
reformatted string concatenation in TestSSL . java for clarity and readability to improve code readability and maintainability
[ hotfix ] [ runtime ] fix lock issue in sortmergeresultpartition
use long . max _ value instead of long . max _ value in jmsio . read ( ) and jmsio . write ( )
updated query methods to include " type " parameter and modified pagination in PluginHandleController and PluginHandleDTO classes to enhance functionality by allowing sorting based on
updated the method call from ` DefaultSpanCreator ` to ` Start ( ) ` in ` DefaultSpanCreator . java ` and ` Sleu
added color and depth format configurations to IOSGraphics and updated IOSGraphics constructors to utilize these new configurations to enhance the rendering
refactor login integration tests to use a dedicated attemptLogin method to improve code readability and maintainability by reducing duplication
added checks for ` handle ` in ` PtNDArray ` creation to ensure that ` real ( ) ` and ` complex ( ) `
refactor loop conditions in SynchronizationStatistics . java for improved readability to enhance code clarity and maintainability by eliminating redundant checks
updated Implements . java and ShadowPicker . java files to improve functionality and maintainability of the code
refactor HttpClientOptions initialization and add SSL options for HTTP / 2 in RestTransportClient and TransportClientConfig to improve configuration management for HTTP / 2 connections
updated conditions in ` DynamicStruct ` , ` SolidityFunctionWrapper ` , and improved type name handling in ` SolidityFunctionWrapper `
updated property retrieval to include a default value for " text - align " and " font - size " in InlineLayout and FontUtil classes to ensure
added default constructors for ` CopyStep ` and a corresponding test in ` CopyStepTest ` to enhance flexibility in command execution by allowing recursive operations
fixed - rsemapepermitted . acquire ( ) method do n ' t throw exception if acquire ( ) be call multiple time . #
camel - 14263 : camel - dsl - fix camel - groovy - dsl and camel - dsl
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` to utilize it for parsing flavor strings to improve code organization and
updated ` ArrayList < String > ` and ` List < String > ` to use ` List < ByteString > ` instead of ` List < String >
added a check for non - empty resultsMeta before printing to avoid unnecessary output when resultsMeta is empty
refactor ConcurrentLinkedQueue logic to improve item removal logic and introduce a new class RemoveLeak to enhance performance and address potential memory leaks in the
add addtokentoken to huggingfacetokenizer . decode ( ) to allow token to be add .
[ hotfix ] [ runtime ] use java . util . collections . nCopies for resourceprofiles
update loadsingletsfilenode . loadsingletsfilenode . loadsingletsfilenode . addvaluechunkdatasize ( ) to
added session storage context handling in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to enhance session management capabilities within the web flow
added a test for XML schema validation in TestJspDocumentParser . java to verify the functionality of XML document parsing in the application
added a constructor to TypeAdapter and updated the @ Ignore annotation in ReflectionAccessTest . java to mark the test as disabled until record support is implemented
refactor SuspendedEvent handling in Debugger . java and add a prepareKill method in SuspendedEvent . java to improve error handling and
refactor AntPathRequestMatcher class for improved readability to enhance maintainability and clarity of the codebase
do n ' t pass null parameter to createresourcepolicy ( )
added a null check before releasing the deflater entry in GzipHttpOutputInterceptor . java and updated testing assertions in BlockingTest . java to
added JUnit ` @ AfterEach ` annotation to ` ReactorCoreAutoConfigurationTests . java ` to ensure tests run after each test execution
updated MD5 calculation to normalize Unicode characters and remove " Unknown " unicode character 65533 to ensure accurate MD5 checksum generation by removing unknown characters
refactor command handling in Example . java to improve readability and maintainability to enhance code clarity and prevent potential null pointer exceptions
changed the keyListener field from private to private final in BasicProfilerState . java to ensure that the keyListener cannot be reassigned after initialization
updated the variable assignment from ` t ` to ` dbDoc ` in ` MongoTemplate . java ` and added a new test for saving JSON strings
added functionality to retrieve multiple remote addresses from an IP address in RequestUtils . java and created a test for it in RequestUtilsTest . java to
updated the ` getJobArgs ` and ` getJobArgs ` methods to use ` ObjectBuilder ` instead of ` String ` for better type handling to improve
added a static host address retrieval and modified local host address retrieval in CookieManagerTest . java and UnmodifiableMaps . java to improve clarity and
updated glyph wrapping logic in GlyphLayout . java and added a test in BitmapFontTest . java to ensure proper resource management when wrapping runs are all
added pauseOrResume methods to PulsarPartitionSplitReaderBase and updated PulsarSourceReaderBase to support multiple splits to
added support for the HIVESCRIPTIDENVVAR configuration in HiveConf and ScriptOperator classes to enable dynamic configuration of the script operator ID in Hive
refactor the ` getListedTermCounts ` method to use ` Stream < String > ` for processing terms to improve code readability and maintain
added a new action class ` UseSeparateStepSizeAction ` to the ` platform . plugin . jog . useSeparateStepSize ` to provide
added final fields and modified file unlock logic in FileMenuFilter . java to enhance immutability and streamline lock file action logic
hbase - 13388 fix the bug that htablesplit . split ( ) do n ' t handle empty regionlocations correctly
updated the value of ` PARENT _ SPAN _ ID ` from " false " to " 1 " in ` HttpClientRequestAdapter . java `
pdfbox - 2576 : use IOUtils . closeQuietly instead of a boolean to close subdoc
added support for JSNI display mode in GwtGraphics and updated related methods in GwtGraphics to enhance rendering capabilities and improve user experience in fullscreen mode
updated the ` WebfingerIssuerService ` class to use ` URI ` for URI normalization and improved resource handling to enhance URI handling and improve resource
added a new test class SoulApacheDubboClientConfigurationTest to verify the configuration properties of SoulApacheDub
replaced ` Gdx . files . internal ( fileName ) ` with ` resolve ( fileName ) ` in ` SkinLoader . java ` to improve
added trace logging and changed log level from warn to info in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreCacheLoader to
updated locking mechanisms from REALTIME _ LOCK . lock ( ) to REALTIME _ LOCK . lockInterruptibly ( )
changed package declaration from ` java . lang ` to ` java . lang ` to improve organization and clarity of the code structure
fix nullderefandredundantcompilationfinding ( ) to report false if there be no catch block .
update dashrendererbuilder to use defaulthttpdatasource in onmanifesterror and onsinglemanifest
added a configuration property for the maximum number of prepared statements cached per database connection to provide configuration flexibility for managing prepared statements per database connection
updated method signatures from ` WritableConfig ` to ` Configuration ` across multiple configuration classes to improve clarity and consistency in configuration management
added error checking for command operations in AutoScalingHandler . java to improve error handling by throwing an exception for invalid command payloads
refactor CombinedDataset class to improve code structure to enhance maintainability and readability of the code
updated byte array initialization in InflateIn _ DeflateOut . java to use byte array instead of a byte array to improve code readability and
added a method ` removeCryptographyRestrictions ( ) ` in ` Utilities . java ` and implemented permission removal functionality in ` Utilities . java `
fix teleportation in case the event be cancel .
added a new test method ` testPageMarginsLongTextTransform ` in ` TextVisualRegressionTest . java ` to verify the functionality of page
added null check for vContext and refactored context management in Vectorizer . java to improve efficiency by avoiding redundant calls to getVectorizationContext
fix ( wialon ) : speed should be multiply by 0 . 539957 .
hbase - 25819 disable user metric user aggregate by default ( # 3211 )
add an isEmpty ( ) method to JsonObject and a corresponding test case in JsonObjectTest to enable checking if the JsonObject contains no members for easier validation and
added new boolean fields and modified unregistering logic in Launcher . java to ensure the receiver is only unregistered when the receiver is attached
refactor AsyncFile , HttpClientRequest , HttpClientResponse , and ReadStream classes to improve code organization and maintainability
[ beam - 10226 ] add parameter to the zadd operation in pipelinebase .
[ ds - 3942 ] fix checkstyle violation and fix checkstyle violation .
rename testasyncmessages to testasyncmessagesperformance so it do n ' t introduce false failure .
added a new method ` getNodeOptional ` to ` VersionedTargetGraphBuilder ` and updated ` VersionPropagatorBuilder ` to handle optional targets
updated time range checks for epoch seconds in TimeZoneProvider . java to improve accuracy in time zone validation
updated the return value in EscherBlipRecord . java and added a new test class TestOLE2Embedding . java to ensure correct
updated the initialization of ` row ` and ` column ` variables in ` JSONParser . java ` to ensure proper initialization of ` row ` and `
replaced ` JavaType . ShallowClass ` with ` StringUtils . Pattern ` for type matching and refactored the ` isAssignableFrom ` method to
added support for a new ACTION _ PLAY _ TRAILER and updated DETAIL _ THUMB _ HEIGHT in BaseItemDetailsFragment
added a method to remove glyph information from the cache in CStrike . java to improve memory management by removing glyph information from the cache
act - 102 : fix deleteexecutionentity cascade delete event when activity be end .
camel - 14263 : camel - jbang - use the @ XmlRootElement annotation for the name of the xmltype .
updated the endpoint in SimpleHttpClientTests from " http : / / scottb . html " to " https : / / abc1234 .
add a prdef option to reset all preference to default value
hbase - 13388 make thrift metrics and thriftserver subclass protected ( addendum )
[ danfossairunit ] remove deprecate channel . manual _ fan _ speed from danfossairunithandler
use hamcrest assertion instead of junit in favor of junit in test
removed redundant null check for expansionHelper in TweetActivity . java to streamline code by eliminating unnecessary duplication
added equals and hashCode methods in PartitionPanel and PartitionFactory classes to ensure proper object comparison and hashing functionality for PartImpl instances
cloudstack - 6239 : add disk size parameter to custom parameter for user vm detail
updated visibility logic in PredictionRowView to conditionally show suggested apps in the drawer based on user preferences to improve user experience by allowing users to
[ geos - 7920 ] bboxparser now handle invalid bounding box crs
added validation methods for value , position , and depth parameters in LibrustzcashParam . java and modified ivk [ 31 ] in Librus
mark ithrowableentity a deprecated and mark it a deprecate
added a new variable ` x ` and ` y ` in ` NodeDataImpl . java ` to initialize the node ' s x and y values
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for failing when missing scopes are present to improve
refactored the initialization of declaredDepsBuildResult and returnedStdErr to use try - with - resources for better resource management to improve code clarity
updated the VERSION constant from " 0.9 . 1 " to " 0.9 . 2 " to reflect the release of version 0.9 . 2
added a condition to check if the item type is DEEP _ SHORTCUT or the item type is DEEP _ SHORTCUT
added hashCode ( ) method to TimeGranularitySpec class to ensure proper hash code generation based on type , time type , and column name
changed visibility of classes from private to protected in BooleanQuery , DisjunctionMaxQuery , and DisjunctionMaxQuery classes to allow subclasses to
added a boolean flag ` useTransparentNTLMProxy ` to control NTLM proxy usage based on response code to ensure proper handling of NT
[ gr - 28620 ] aarch64 : fix aarch64 move to aarch64 .
server : use capacity . getusedcapacity ( ) instead of vm . getreservedcapacity ( )
added a check for ` docs . getMaxScore ( ) ` before processing the ` includeScore ` condition in ` JSONResponseWriter . java ` to
updated the audio recoder from 22050 to 44100 in AudioRecorderTest . java to improve audio quality and performance during testing
updated the calculation of newOriginX in RocketFigure . java to account for subject bounds to ensure correct positioning based on the scale factor
updated DruidQueryBasedInputFormat to check for empty data sources and set a default interval to ensure data source is not null or empty before processing
added ORIGINAL _ ID and ORIGINAL _ TYPE constants and updated pattern matching in CustomProperty . java and CustomPropertyTest . java to
added a static method create ( Table parent , Map < String , Object > data ) to the Index class to provide a convenient way to create an
removed the ` isBetweenGivenPeriod ` variable from the return statement in ` Dates . java ` to simplify the return statement for better readability
[ flink - 20536 ] [ table - planner - blink ] fix union writer compatibility issue
added association type handling and refactored path join logic in QueryUtils . java to improve the handling of entity types in query processing
added synchronization to the ` spans ` list in ` TestSpanHandler . java ` to ensure thread safety when accessing shared spans
( chore ) camel - core - java : use generics instead of object
updated exception handling in ViewContextImpl . java to use InvocationTargetException for better logging to improve error handling clarity and provide more informative log messages for
refactor OAuth2AccessTokenEntity class to improve code organization to enhance maintainability and readability of the code
[ java ] remove status = rejected message from scbengine .
added two new project files for iOS data and moe resources in GdxSetup . java to enable loading of image resources for the iOS
added ConcurrentMergeScheduler to the MockAnalyzer instantiation in TestSearcherManager . java to improve performance by allowing concurrent merge operations
modified condition in QTestUtil and improved list handling in GenericUDTFInline to enhance code robustness and prevent potential NullPointerExceptions
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code readability and maintainability
ggb - 2275 spreadsheet key listener should not prevent click on key press
hhh - 13236 - fix deprecation warning in osgi bundleActivator
fix incorrect calculation of connectiontimeout in hikaripool . gettimeout ( )
[ java ] move the creation of the component . xml file into the non - packaged resource directory .
updated file name handling in Compat . java and added directory checks in FileOpener . java to ensure consistent file path formatting across different operating systems
changed the return type of the row method from ` Cell < T > ` to ` void ` in ` Cell . java ` to provide a clear
[ beam - 12154 ] make sure -- p2p - port and -- rpc - ws - port be specify multiple time . ( #
added null mask functionality to WebSocketClient and modified WebSocketConnection initialization to use FixedMaskGen to improve flexibility in WebSocket mask generation based on null state
refactor the genUDTFPlan method to return a Pair < RelNode , RowResolver > instead of a single outputRel variable to improve
added node selection statistics for bucketed and non - preferred nodes in NodeScheduler and related classes to track the number of nodes selected and their non -
added a new class Person with a name property and getter / setter methods to provide a structured way to store and retrieve the name of a Person object
refactor owner pointer handling in CPlatformWindow . java to improve clarity and functionality to enhance readability and maintainability of the code
added clock functionality to PlaybackOverlayFragment and updated logo fade handling to improve UI responsiveness and visual feedback during playback
remove markdirty ( ) call from blockchanger . markdirty ( )
updated the ` IMPL ` variable and improved exception handling in ` SegmentReader . java ` to ensure proper class loading and provide clearer error messages
updated cell update event handling to run on the Event Dispatch Thread to ensure that the event is fired on the Event Dispatch Thread for thread safety
removed the DefaultInetAddressAdapter and updated the typeHierarchyAdapter method to use Class instead of TypeToken to streamline type adapter registration and improve
added methods to retrieve double , long , and string values in Series class and corresponding unit tests in DataFrameTest to ensure proper handling of null values and
removed the " -- no - audio - time - stretch " option from the options list to simplify the configuration for audio time stretch options
[ geot - 4242 ] fixed bug in geoutils . getrect ( lon , lat , lon , max _ lat _ incl )
cloudstack - 10254 : fix finddiskoffering ( ) to return the correct diskofferingid
fix hazelcasttest . shutdownall ( ) so that they be clean up after each test
blockciphertest : do n ' t fail if aes mode do n ' t exist .
added filter for printing operations logs in QFileClient . java to enhance logging functionality for better debugging
fix ( aop ) : add type argument support for type argument .
added a null check for the current connection address in ProtocolProviderServiceSipImpl . java to ensure the current connection is initialized before use
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to improve performance and readability by
refactor code to use try - with - resources for resource management to ensure proper resource management and prevent potential memory leaks
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct intent creation in multiple activities to streamline search functionality
removed the ' this . ' keyword from the ' GrepOptions ' constructor and updated the ` toString ( ) ` method in ` GrepOptions
http : / / issues . apache . org / jira / browse / amq - 5036 - add osgi configuration to the web console
added @ Autowired annotation to RepositoryIndexCreationIntegrationTests . java to enable dependency injection for PersonRepository in integration tests
updated exception handling from Exception to InterruptedException in UIServer . java and improved log message formatting in TestVertxUIManual . java to enhance error
refactor case handling in BlockCactus . java for improved readability and organization to enhance maintainability and readability of the code
refactor mouse event handling in ThemeSelector to use MouseMotionAdapter for better responsiveness to improve user interaction responsiveness
updated abstractMinMulticastFlowControl to extend AbstractMinMulticastFlowControlRhsPadding and added a new abstract class AbstractMinMulticastFlowControlR
added vertical alignment support to the editStringAt method in IOSImplementation and IOSNative classes to enhance functionality by allowing alignment options for text editing
do n ' t throw exception if model file be not specify .
added a condition to check for distinct queries in ClusterIntegrationTestUtils and modified query generation logic in QueryGenerator to improve query handling for distinct queries and ensure
[ gr - 32233 ] make string similarity method public and add support for nativelinkage .
bug 58687 - jmeter : fix typo in property file
added null check for children in PartitionPruner . java to avoid potential NullPointerException when children is null
added token position and current position variables in MessagePackParser and updated related tests in MessagePackParserTest to improve handling of JSON parsing context and ensure
added locale management in AbstractSolrMorphlineTestBase to ensure default locale is restored after tests to ensure consistent test environment by resetting locale settings
remove redundant if statement to streamline size calculation to improve code clarity and maintainability
added a new test class ` MetricsReporterTest ` to validate the registration and handling of metrics in the ` MetricsReporter ` to ensure that the `
camel - 14263 : camel - spring - boot : remove unused import in camel - spring - boot
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for rectangle objects
[ hotfix ] [ streamkafkap ] fix test failure on non - existent sink
refactor DSAParameterGenerator to use BigInteger . ONE for strength checks and simplify BigInteger initialization to improve code readability and maintainability by using a
added support for FQDN usage in LLAP daemon configurations and updated host name retrieval in multiple classes to enhance the flexibility and accuracy of
fix clientoutofmemoryhandlertest fail on slow ci server
added a method to retrieve the object ID from a shape ID and updated related classes to use it to improve the accuracy of object ID assignment across shapes
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of distinct queries in the
updated Driver , SearchTravRetLoadFieldSelectorTask , SearchTravRetTask , and SearchTravTask classes to improve code organization and
added bind and unbind methods for the ExtensionAdapter interface in ManagedKubernetesClient . java to enable binding and unbinding of the ExtensionAdapter
refactor subtitle display logic to utilize a new utility method for retrieving info rows to improve code readability and maintainability by encapsulating
updated imports and annotations from JUnit 5 to JUnit 5 in TestAuthHandlerBoot . java and TestRSAProviderTokenManager . java to
bugcollectionbugreporter : do n ' t throw exception when generate summary
replaced ` intPool . reset ( false , false ) ` with ` bytePool . reset ( ) ` in ` TermsHash . java `
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated the API level check from ` apiLevel > = S _ V2 ` to ` TIRAMISU ` and added a new window
refactor UrlHelper to improve scheme checks and port management to ensure correct port assignment based on request scheme and port values
added a conditional check for MSSQLDatabase in AddForeignKeyConstraintGenerator . java to ensure compatibility with MSSQL ' s RESTRICT constraint handling
hbase - 26157 fix some code style issue in hbase - replication
fix the emzuli pipe filter not work on the client side .
simonstewart : do n ' t use debug mode for the htmlidentifier
updated method calls in HiveLookupTableSource and HiveLookupJoinITCase to use getTableSchema ( ) instead of getProducedTableSchema ( )
fix thread leak in player . setthrowswhenusingwrongthread ( boolean )
added import for CatalogAndSchema and modified sch . SCHEMANAME assignment in SequenceSnapshotGenerator . java to enhance schema name handling with customization
updated color scaling in SpriteBatch , SpriteCache , SpriteCache , SpriteCache , SpriteCache , and AlphaTest classes to
fixed - rconnection . tocompletableFuture ( ) . tocompletableFuture ( ) . get sentpromise ( ) method return null instead of null #
added handling for HTTP and HTTPS URLs in SolrLoggerServiceImpl . java to ensure that only relevant cores are included in the statistic year
refactor ` launchTask ` methods to use ` @ NonNull ` annotations and improve task handling in ` TaskActionController ` to enhance null safety and
updated MorfologikFilter to accept a Dictionary resource instead of a String to enhance flexibility in handling different Morfologik language configurations
updated sorting options in GridFragment from " CommunityRating " and " CommunityRating " to " CommunityRating " and " CriticRating " to
added imports for ViewKt and ViewKt and modified visibility logic in CustomListRowPresenter to ensure proper visibility control for ListRow items
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in ` CatalogAndSchema . java ` and ` CatalogComparator
[ jsr310 ] add support for jsr310 for java time module
updated import statement from ` org . apache . log4j . MDC ` to ` org . slf4j . MDC ` to align with the
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver . java ` to ensure type safety and improve code clarity
removed unnecessary line breaks in CoinbaseTransaction . java to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified ` ProjectCommand ` to include a check for passed - in targets
replaced the use of System . gc ( ) with the BusySpinIdleStrategy in Ping . java to improve performance by reducing unnecessary garbage
updated the ` OCFile ` class to use ` ContentResolver ` instead of ` ContentProvider ` across multiple files to ensure compatibility with the latest
removed redundant if statements in ReportPanel . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix nullpointerexception in testinglogicalslot
added a new recipe class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime . gc
removed redundant super ( ) calls across multiple exception classes to streamline exception inheritance by eliminating unnecessary super ( ) calls
added a method to set the icon in ScaleImageLabel to ensure the icon is correctly set based on the UI ID
replaced ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve clarity and consistency in variable naming
added support for the " - cp " option in command - line arguments in the Main . java file to enhance flexibility in command - line argument handling
[ hotfix ] [ avutil ] fix avutil compiler configuration in avutil
updated initialization declaration in StorageService . java to improve code readability and maintainability
updated Test7196045 . java file to improve test coverage and ensure functionality is validated
updated density and decay values in ShaderParametersLightShaft . java from 0.5 f to 1.0 f and 0.5 f in ShaderParametersLightShaft .
added ` withState ` and ` stateData ` fields to the ` OidcConfiguration ` class and updated related methods in ` Oidc
ddl : alter table unique constraint for non - null column ( # 1519 )
added support for federated share in UsersAndGroupsSearchProvider and updated related conditions in EditShareFragment to enhance sharing functionality by allowing users to share
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to ensure that the ` needsDocValues ` method
[ java ] improve error message for unaligned buffer alignment .
added a ` intForEach ` method to the ` Int2ObjectHashMap ` class and modified the ` IntObjConsumer ` interface to include a
fix scoreboard not be associate with the temporary scoreboard . close # 1342
change return type of count ( ) method from Long to long in QueryDslMongoRepository and QueryDslPredicateExecutor classes to improve performance by
refactor MManager to improve snapshot creation logic and log message formatting to enhance clarity and maintainability of MTree snapshot logging
updated the calculation of the dot product in VectorUtil to use a denomous factor instead of a fixed value to improve accuracy of the dot product
added a new constant ` IRREVERSIBLE _ THRESHOLD ` and related methods in ` DynamicPropertiesStore ` and ` Manager ` to manage
refactor locale setting logic in GpsMainActivity , MainPreferenceActivity , and Systems classes to utilize PreferenceHelper for locale management to improve
added a condition to check if a new database was created in the LauncherProvider to ensure that the cling only occurs when a new database was
refactor BasicAclEntryAfterInvocationCollectionFilteringProvider to use a local variable for collection iterator to improve code readability and maintainability
reformatted the null check for datamodel in Constants . java to improve code readability and maintainability
added a check to ensure the current thread is the same in TestIndexWriterDelete . java to prevent potential race conditions when accessing the index writer
changed the visibility of the closeDatabase method from private to protected to allow subclasses to access and override the closeDatabase method
updated imports in FullDetailsActivity . java and BaseRowItem . java to use ModelCompat . asSdk instead of APIclient . model .
added functionality to set attributes for SVG elements in BatikSVGDrawer . java to ensure proper handling of XML attributes in the XML document
refactor exception handling in ConsoleKeys . java to improve readability to enhance code clarity and maintainability by reducing redundancy
added a check for " WaitForResult " in the intent and adjusted the waitingForResult assignment logic in CodenameOneActivity to ensure proper handling of
updated constructors and methods in ` PriorityQueue ` to use ` Supplier < T > ` instead of ` boolean ` for pre - population to improve flexibility
added widget description display and visibility handling in WidgetCell . java to improve user interface by displaying widget descriptions when available
added a maximum attribute count check and thrown a GdxRuntimeException if the maximum allowed attribute count is reached to ensure that the attribute registration does not exceed
move predicatestest to the correct package to make it easy to test predicatestest
camel - 14263 : camel - http : / / issues . apache . org / jira / browse / camel - jbang -
updated inline layout handling in InlineLayout and Breaker classes to improve alignment logic to ensure proper handling of unbreakable strings and prevent boundary conditions
added null check for view and adjusted avatar radius dimensions in ShareUserListAdapter . java to improve code robustness and prevent potential NullPointerExceptions
updated the ` shouldInstrument ` method to include ` androidPackages ` and ` instrumentingExcludeList ` for better instrumentation to enhance compatibility with Android SDK
added a check for insert destination before source in BrowserContentPane . java to ensure correct column count is returned for insert destinations
refactor memory limit file path retrieval in CmdModifierTest . java to use a dedicated method to improve code readability and maintainability by centralizing
refactor CxxDeps initialization to use a static final EMPTY _ INSTANCE constant to improve code readability and maintainability by centralizing dependency management
added a null check for the specified source under test is not among its dependencies in JavaTestRule . java to improve error handling by providing clearer
add support for vazkii proxy 10.9 . 4 and vazkii 10.9 . 2
added a check for negative index values in the StringUtils class to ensure that the index is always non - negative to avoid potential errors
increased the timeout duration from 100ms to 500ms in TimeoutTest . java and adjusted sleep duration in TimeoutTest . java to allow more time for
refactor TaskOverlayFactoryGo constructor to include AssistContentRequester parameter to improve flexibility in managing assist content requests
updated the handling of witness address in VoteWitnessProcessor . java to use encode58Check instead of creating a readable string to ensure the witness address is
refactor DefaultMethodRegressionTests class for improved readability to enhance maintainability and clarity of test cases
refactor WorkloadManagerMxBean to improve code structure to enhance maintainability and readability of the code
updated KafkaProducerException import from ` org . springframework . kafka . core ` to ` org . springframework . kafka . KafkaException ` to
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear ( ) method to ExceptionThrowingTaskletStub and corresponding test cases in FaultTolerantExceptionClassesTests to ensure proper
[ samsung ] include beamjobcoordinatorrunner and beamcontainerrunner in error message
added an extraProperties parameter to multiple TableConfigTunerUtils methods across multiple classes to enhance flexibility in configuring table configurations
added checks for in - progress segment names in PinotRealtimeSegmentsManager . java to prevent adding segments that are in an in - progress state
added a condition to return null if the touchable is disabled in the Table class to ensure that only enabled touchable tables are processed
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to verify support for
throw a retryablehazelcastexception if cache config have not be create yet
refactor module installation logic in JSweetTranspiler and added a method to check if a node package is installed to improve code clarity and
added ManagedObject annotation for MBean registration in MBeanContainer and Destroyable classes to enhance management capabilities for MBeans in the application
changed the condition from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in ` LongClickableSpan . java `
fix nullpointerexception in esmilighthubdiscoveryservice and esmmilighthubhandler
updated the logic for reification checks to accommodate reverse candidate types to ensure correct warning generation based on the type being
updated player position logging and block size calculations in WorldEditListener . java to improve clarity and accuracy of player position outputs
camel - 14263 : camel - kafka should shutdown the consumer when the consumer be shut down
removed default value for ` examples ( ) ` in ` Schema . java ` to simplify the code by eliminating unnecessary default implementation
updated thread interruption logic in AgentRunner . java and added a return statement in AgentRunner . java to improve code clarity and ensure proper termination of
remove the time column from the dataset configuration in DefaultAggregationLoader . java and PinotDataSourceDimensionFilters . java to ensure that the time column is
simplified the null and length check for shards in FacetComponent . java to improve code readability and maintainability
replaced calls to ` rustBuckConfig . getLinkerProvider ( ) ` with ` CxxPlatforms . getParseTimeDeps (
added name property getter and setter methods in JaasAuthenticationProperties , JdbcAuthenticationProperties , NtlmProperties , and NtlmProperties classes to
do n ' t throw an exception if we can not connect to the igv
refactor scan range handling to use a local variable for small scan threshold to improve code readability and maintainability by reducing redundancy
added routeId to the ` RetryGatewayFilterFactory ` string representation in ` RetryGatewayFilterFactory . java ` to enhance the clarity of the output
refactor widget calls in LineReaderImpl . java to improve code readability and maintainability
refactor the ` onOverviewShown ` method to use ` DiscoveryBounce . showForOverviewIfNeeded ` instead of ` onOverviewShown ` to
refactor conditional checks in CheckIndex . java and add a test for deleting all point documents in TestPointValues . java to improve code readability
updated publish method call from ` cd ` to ` updateLastState ` in ` ZkController . java ` to improve the handling of state updates
updated SQL string concatenation syntax in MetastoreDirectSqlUtils . java to improve readability and maintain consistency in string concatenation
removed a redundant call to add ( 0 , null ) in SpliteratorCollisions . java to improve code clarity and maintainability
simonstewart : add a condition to check if the text condition be case - insensitive
removed redundant do statements in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
no effective change - add forwardonlyfetchsize ( ) to ormqueryengine
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler . java to improve error handling and logging for closed channels
pdfbox - 4071 : use the size of the beads list instead of a fixed - size one
added support for rounded corners on windows in QuickstepAppTransitionManagerImpl . java to ensure compatibility with devices that support rounded corners on Windows
refactor background view handling in DesktopTaskView . java to use View instances instead of PagedOrientationHandler to improve code clarity and maintainability by
refactor the initialization of the upstreamCheckService in UpstreamCheckServiceTest . java to improve code readability and maintainability
removed warning log statements for immortal and debug statements in AbstractSession and AbstractSessionManager classes to streamline logging for better readability and maintain
replaced error logging with return statements in ZooKeeperHiveLockManager . java to improve error handling and streamline lock retrieval process
[ hotfix ] [ javadocs ] fix typo in javadoc
added a check for custom data before generating mipmaps in FileTextureArrayData . java to ensure mipmap generation only occurs when custom
updated password format assertions in DefaultMaskingFormatterTest . java to use lowercase characters instead of hardcoded strings to enhance readability and maintain consistency
added a selectable property and methods to manage the selection state in the List class to improve user interaction by preventing touch events when not selectable items
added a check to return false if the vector ' s value count is zero in LlapArrowBatchRecordReader . java to ensure that the method
updated PolicyContext to use File . separator for file separator evaluation and improved test coverage to enhance file separator handling and ensure correct evaluation of file separators
replaced Set with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance and memory efficiency in query handling
refactor TLSRestrictions class for improved readability to enhance maintainability and facilitate future updates
[ hotfix ] [ kafka ] do n ' t try to close kafka producer if it ' s null .
updated the ` assertNodeStateProvider ` method to accept an additional ` ignorableNodeValues ` parameter to improve flexibility in node state verification by allowing optional
added a lock file in RocksdbMavenPomCache . java to ensure that the LOCK file is deleted if it does not exist to
make minizookeepercluster # getclientportaddress ( ) consistent with server . getclientport ( ) . getport ( )
added a new method ` getResponse ` to handle HTTP requests in ` RestClient . java ` to improve error handling and logging for web service connection management
[ te ] fix arrayindexoutofboundsexception when upload segment file
updated loginStudent calls to use a password parameter instead of a username to enhance security by allowing the use of a password for STUDENT
reformatted conditional statements in EnhancedBrowseFragment and StdBrowseFragment to improve code readability and maintainability
increased the number of strings in TestSpecialOperations from 500 to 100 in TestSpecialOperations . java to accommodate larger data sets for testing purposes
[ java ] remove unused hextobyte ( ) method from wkbattributeio .
corrected the spelling of " messageWithHeaderEntry " to " messageWithHeaderKey " to improve clarity and consistency in method naming
added a method to check if a transition is a direct substate in AbstractStateMachine to ensure proper handling of state transitions in the state machine
added conditional checks for ` ListMultimap ` and ` SetMultimap ` in ` MultimapSubject . java ` and corresponding tests in ` MultimapTest
added JoinOperation interface to PostJoinOperation class to enhance functionality by integrating JoinOperation functionality
added a new test method ` testDataIssue258 ` to validate the functionality of the ` AdditionalPostgreSQLTest ` class to ensure
fix amq - 5035 test that fail on slow ci server
updated AvaticaDatabaseMetaData . java for consistency to improve code maintainability and readability
updated ` lifeTime ` , ` idleTime ` , ` maxWaitTime ` , ` maxWaitTime ` , and ` maxWaitTime `
[ java ] use sipactivate . getmediaservice ( ) . getmediaservice ( ) . getmediaservice ( ) . getmediafactory (
replaced ` handleFilters ( ) ` methods with ` evalFilters ( ) ` and modified filter handling logic in ` FacetProcessor . java ` to
added a enabledTimeout property and modified the logic for enabling or disabling the timeout handler in the ShuffleHandler class to ensure that the timeout
replaced hardcoded values for quick step starting rotation to use a constant instead of a hardcoded value to improve code readability and maintainability
updated log messages in XPathBuilder . java and added debug logging in XQueryBuilder . java to improve clarity and consistency in logging output for better debugging
[ java ] use dataresource instead of dataresource for read csv file .
add test case for edgecasestokenizer ( # 1751 )
added a validation check for the ' atlas ' property in AtlasTmxMapLoader . java to ensure that the ' atlas ' property is
camel - 14263 : camel - core - camel - core - remove unused propertyplaceholders helper class .
added a call to ` levelDbDataSource . closeDB ( ) ` in ` BlockchainTest . java ` and removed the ` ReceiveSource `
refactor line splitting logic in CoreMarkdownNodeRenderer to use List < String > instead of String array to improve code readability and maintainability by
[ int - 1342 ] fix checkstyle violation in webserviceinboundgatewayparsertests ( # 1343 )
replaced ` ImmutableList . Builder ` with ` List < Object > ` in ` SQLBindings ` and added a deprecated ` getNullFriendlyBindings ` constructor
added a check for the " OpenJDK " JVM name in the VirtualMachine class to enhance compatibility with OpenJDK environments
added keepAlive ( true ) to the base URL configuration in ReactorClient . java to ensure connection stability by keeping the connection alive
replaced string literals with ShaderProgram constants in MD5Renderer , MD5Renderer , ObjLoader , and ObjLoader classes to standardize
camel - 14263 : camel - core - camel - core - add support for property component in camel - core .
refactor UnfreezeBalanceActuator to check for null accountCapsule before accessing it to improve code clarity and prevent potential NullPointerException
updated the version number from 3 . 8 to 3 . 8 . 1 in XMPPServer . java to ensure compatibility with the latest features and improvements
replaced direct calls to ` t . unannotatedType ( ) ` with ` t . unannotatedType ( ) ` in `
refactor assertions and configuration management in StorageGroupProcessorTest . java to improve code readability and maintain consistency in sequence TsFile size handling
updated the ` DumpObjects ` method to include an ` DumpableCollection ` for environment management to improve object dumping functionality and support environment - specific
added a parameter ` waitbeforestart ` of 2500 in ` FFMpegVideo . java ` to ensure the video processing waits
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and its usage across multiple classes to simplify the constructor and improve
fix listindex - > indexoutofbounds in accessorstest . testlistindex
added a method to compile methods in GraalCompiler . java and a framemap getter in LIRGenerator . java to provide access to the frame
updated test annotations to include ` @ ConditionalIgnore ` and ` @ RunWith ` in ` DynamoDbTicketRegistryTests ` and ` BaseAuthenticationRequest
fix the baat ' s y - coordinate when it be a water block
updated the ` toString ( ) ` method in ` Directory . java ` and added a ` getLockID ( ) ` method in ` RAM
removed the ` allowExperimentalOptions ( ) ` method from the ` allowExperimentalOptions ( ) ` method in ` Launcher . java `
added methods for path assertions and a then ( ) method in BDDAssertions . java to enhance the BDDAssertions class for better assertion
updated variable names from ` hp ` to ` hostField ` in ` ForwardedRequestCustomizer ` and ` ForwardedRequestCustomizerTest ` to
updated logging level from debug to warn for multiple Kubernetes configuration files to provide clearer guidance on how to configure Kubernetes configuration
added handling for file upload statuses in FileUploadService and UploadListActivity to improve user experience by providing user feedback during file uploads
added a new ` ProviderLoader ` class and modified ` TerminalManager ` to use it for loading crypto providers to streamline provider installation process and improve
replaced instances of ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests ` to use
updated the SelectFromDatabaseChangeLogStatement to use a computed column configuration instead of a hardcoded value to improve flexibility and maintainability of the
hhh - 12178 - add support for getcurrentschemacommand ( ) in postgresql81dialect
add check for non - zero datamemberssize in internalpartitionserviceimpl and internalpartitionservicelitemembertest
added error handling and scheduler startup logic in ` ExecutionScheduleManager ` , ` ExecutionSchedulerImpl ` , and ` ExecutionScheduler ` classes to ensure proper
replaced ` text . toString ( ) ` with ` text . toString ( ) ` in ` BoxBuilder . java ` to improve code readability and
updated assertion messages in StatisticMap . java for clarity to improve readability and maintainability of the code
updated the ` getStagedRectSlideEnd ` method from ` 383 ` to ` 500 ` in ` TabletSplitToConfirmTimings
update WaveInfoDialog and PlacementFragment to use Core . bundle . get ( " waves . random " ) instead of hardcoded strings to
updated the condition for removing road items in the BukkitMain . java file to include an additional check for the owned plot to ensure road items are removed
added touchExplorationEnabled method to ShadowAccessibilityManagerTest and modified listener invocation logic in ShadowAccessibilityManager to enhance functionality for managing touch exploration state
pdfbox - 5328 : improve cmap subtable lookup ( a suggest by valerybokov )
use getname ( ) instead of getPropertyAsString ( ) for testelement . name ( )
replace npoifsfilesystem . writefilesystem ( big ) with poifsfilesystem . create ( big )
added PlotArea imports and modified plot retrieval logic in Move . java to ensure that the method returns false when the plot area is not found
updated version regex pattern in TestWebHCatE2e . java to ensure correct matching of version strings
updated the condition from ` count < 0 ` to ` count < 1 ` in the ` Filters . java ` file to ensure that the count
fix a bug in kafkaconsumerprocessor . getconsumerid ( ) when there be multiple consumer thread .
added a check for the ` ok ` flag in ` JavacCompiler . java ` to ensure that the execution fails gracefully if the ` ok
mow - 169 repaint the view if the selection be not change .
camel - 20297 camel - spring - batch : fix checkstyle violation in springbatchproducer
added a method ` isAnimationFinished ` to check if the animation has finished to ensure that the animation does not exceed the specified frame count
updated import statements in LoginInfoEndpoint . java and added a new test for custom FavIcon with line breaks in LoginMockMvcTests . java
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified the refresh text in ` HomeFragment . java `
fixed issue with space in text field when click on a button in web
updated the implementation of the ObjectHashSet class to improve performance and maintainability of the code
refactor null checks in DataUtilities . java for improved readability and efficiency to enhance code clarity and maintainability by using Arrays . equals for null
fix forge bug and allow for deletion of enchanted book , mc - 12770
test : add unit test for async resource
rename header map files from " target - flat " to " target - user " in ProjectGenerator . java to improve clarity and consistency in naming convention
added debug logging for sending messages in MailService . java and improved error handling in MailService . java to enhance logging clarity and provide more informative
updated method names from ` resetTaskItemView ( ) ` to ` resetToEmptyUi ( ) ` in ` TaskHolder . java ` to
added unit tests for retrieving partitions by name in HiveMetaStoreClientApiArgumentsChecker . java to ensure proper functionality and performance of partition retrieval in the
added a new line in FileListListAdapter . java to improve code readability and maintainability
changed the types of ` ArrayList ` and ` ShareeUser ` from ` ArrayList ` to ` List ` in ` OCFile . java `
updated the method call from ` getChildCount ( ) - 1 ` to ` getChildCount ( getChildCount ( ) - 2 ` in ` BubbleBarView .
removed " org . eclipse . jetty . websocket . util . server . internal . " and " org . eclipse . jetty . websocket . javax .
changed the S3Request constructor parameter from true to false in S3Request . java to change the default behavior of the S3Request to disable
fix npe in jfxradiobuttons when the timeline be null .
updated the condition for handling empty splits in DeweyNumber . java and added a test for zero - length splits in Dewey
added a static method ` categorySetString ` and modified the return statement to replace " Category : " with an empty string to ensure the category set
updated assertions in WebSocketClientTest from " Invalid close control status code " to " Invalid close code " to improve clarity and consistency in error messages
added a null check for the classLoader in WebappLoader and adjusted assertions in TestVirtualWebappLoader and TestVirtualWebappClassLoaderWeaving to
refactored the logic for collecting inherited persistent fields in PersistentAttributeTransformer . java to improve code clarity and maintainability
pdfbox - 4892 : check if a page label be a number and not a number , a suggest by valerybokov
added a new test class TestPorterStemFilter to validate the functionality of the PorterStemFilter to ensure that the PorterStemFilter behaves as
added a success parameter to the ` postBatchMutate ` method in ` Indexer . java ` to indicate if the miniBatch operation was successfully written
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch .
fix concurrentmodificationexception in chatwindowmanager . close ( )
added static imports and removed the Sys . touch ( ) method from multiple Java files to streamline the code for better readability and maintainability
added " - mardu " command to the list of tracked files in HgCmdLineInterface and updated the ` untrackedFiles ` method
camel - 14263 : camel - netty - add timer to the producer so we do n ' t have to synchronize the timer .
updated visibility modifiers in DirectionalLight , PointLight , and SpotLight classes to be final in DirectionalLight , PointLight , and Point
updated width and height calculations in X11GraphicsConfig , WGLGraphicsConfig , and WGLGraphicsConfig to ensure valid dimensions are used to prevent
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and ` DelegatingSecurity
added a new class ` AnnoFilterTreeSet ` and modified the ` findClassesThatExtend ` method to accept ` inner ` annotations to enhance
updated the logic for determining the maximum size of newLength in BytesColumnVector . java to ensure proper handling of overflow scenarios and prevent potential overflow
fix writebehindmapstorewithevictiontest . testwritebehindmapstorewithevictiontest . testwritebehind
updated the ` uninstallListeners ` method signature from ` JScrollPane ` to ` JComponent ` in MotifScrollPaneUI and XTextAreaPeer to
add isequal ( polyfunction ) method to check if two functions have the same degree and degree
added a null check before retrieving the column class in the SynthTableUI class to avoid potential NullPointerException when the table is not initialized
added error handling for class loading in CustomChangeWrapper . java to improve robustness by preventing application crashes due to ClassCastException
replaced ` ConfigPathGetter ` with ` DistBuildConfig ` and refactored related classes to use ` DistBuildConfig ` instead of
update export dialog to show warning if double entry be disabled
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to known issues
changed the return type of the ` doJoin ` method from void to boolean and modified the ` doJoin ` method to return a boolean indicating success
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the code by eliminating unnecessary functionality
updated intent flags in LauncherTimelineCursorAdapter to include FLAG _ ACTIVITY _ NEW _ TASK and added FLAG _ ACTIVITY _ NEW _
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable pagination functionality in query results
updated assertions in RepositoryConventionPluginTests to check for the correct Maven artifact URLs to ensure tests validate the correct repository URLs for Maven artifacts
[ openfire ] add a new affiliation task to the pubsub cluster .
fix taglib directive uri to start with ` ` . . / ' '
changed the visibility of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array handling for object updates in CacheKey . java and updated related test cases in CacheKeyTest . java to improve performance by reducing unnecessary object
replaced instances of ` GnomeFileTypeDetector ` with ` FileSystemProvider ` for file type detection across multiple files to improve file type detection functionality
added a call to close the WebSocket session in TestWsWebSocketContainer . java to ensure proper resource management and prevent memory leaks
replaced ` ShadowVirtualDeviceParams ` with ` VirtualSensorCallback ` and added ` VirtualSensorDirectChannelCallback ` interface in ` ShadowVirtualDeviceManager
added a condition to check if the context is changed before execution in HttpSessionSecurityContextRepository to ensure that the session context is not removed from the session
refactor loopback address retrieval logic in NetUtil . java to improve address handling to ensure correct loopback address is returned when the network is up
updated the constant name from BUF _ SIZE to DEFAULT _ BUF _ SIZE and refactored deflate buffer initialization to improve code readability and
added secure validation and improved error handling in KeyInfoReferenceResolver , XMLSignatureInput , and TransformXPath classes to enhance security checks and provide clearer
added a flag to manage the presence of the icon change listener in the icon component to ensure that the icon change listener is only removed if it is
added Russian language support to the Language . java file to enhance localization support for Russian users
hhh - 15564 - use nanosecond instead of SECOND for duration in sqm conversion
disable frame state verification in substrategraphkit .
reset robolectric . resourcesmode and robolectric . alwaysincludevariantmarkersintestname system property after each test to ensure consistent test execution by resetting
added system class " org . slf4j . " to the web application context in ViewClassLoader and created corresponding test cases in ViewClassLoaderTest to
added a check for " jar " in the ` ChangePackaging ` class and a corresponding test case in ` ChangePackagingTest ` to ensure
updated file download method calls to use ` withExtension ( " txt " ) ` instead of ` download ( ) ` in ` FileDownloadViaHttp
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to reset the buffer
replaced ` getDefaultUnits ( ) ` with ` setPreferredUnits ( ) ` and replaced ` getDefaultUnits ( ) ` with ` setPreferredUnits (
updated the expected date format in DatePatternConverterTest to use UTC timezone to ensure consistent date formatting across different time zones
modified the return statement in Terminator . java to improve code readability and maintain consistency
updated error messages for invalid file URIs and improved error handling in FileSystem . java and DistributedFileSystem . java to enhance clarity and provide clearer
make showtrackingnotification more responsive by delay it to 1 minute instead of 1 minute
added awaitility and improved connection handling in FtpReconnectAttemptServerStoppedIT and FtpEmbeddedService to enhance reliability and reliability of connection management during
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve performance and thread safety in concurrent scenarios
added an ` ignore ` method to multiple log classes and implemented it in ` LoggerLog ` , ` Slf4jLog ` , ` Logger
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when accessing runningTaskView
removed unnecessary type casting for item and contents in BukkitWorld . java to simplify code and improve readability
added a call to ` GraphicsUtil . cleanImage ( img ) ` in ` PanelManager . java ` to ensure that the image is properly cleaned
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing MMap , MaxChunkSize , and maxChunkSize in Solr to facilitate the
added null check for ` ic ` before creating a ` cleanUpColor ` object to prevent potential NullPointerException when ` ic ` is null
updated the assertion message in QueryEqualityTest . java to use field1 _ s instead of field1 _ s to ensure the test accurately verifies the
refactor ExtendedOperatingSystemMXBeanImpl class implementation to improve code readability and maintainability
added a method to install left commands in the SideMenuBar class to improve the flexibility and functionality of command installation in the title bar
added a boolean flag ` advanceWindowed ` in ` AppSettings ` and conditionally called ` setUpWindow ( ) ` in ` TweetActivity
added a check for SybaseDatabase in the DropPrimaryKeyGenerator class to support additional database types in the DropPrimaryKeyGenerator logic
refactor Client class to improve code structure to enhance maintainability and readability of the code
[ java ] reset the lastrecordingposition when the leader be ready .
replace invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and implement shouldDelayChildPressedState in Cell
added a return statement in NearCachedClientMapProxy . java to prevent potential NullPointerExceptions during execution
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added error handling for server startup in ListenHTTP . java to ensure graceful shutdown of the server to avoid application crashes
camel - 15836 - camel - aws2 - s3 : fix camel - aws2 - s3 - s3 - stream - upload
[ hotfix ] fix typo in webmonitor metric path parameter
ambari - 226 to 227 : drop network _ offerings key that do not exist in 226 to 227 version of the db
added a new test class ` TestThriftCLIServiceSecurity ` and modified password handling in ` TOpenSessionReq ` to ensure that the password is
added a new variable ` maxEnergyLimit ` and refactored energy limit assignment logic in ` VMActuator . java ` to improve code
added maxInMemorySize property and its getter / setter methods in HttpClientProperties . java and updated WebClient plugin initialization in HttpClientPluginConfiguration . java
refactor caching logic in Cache . java to improve performance and reduce memory usage
added new files RunCucumberTest . java and StepDefinitions . java to implement Cucumber testing functionality in the Cucumber framework
added error handling for parsing double values in TypeJsonUtils . java and added new assertions in TestArrayOperators . java to improve robustness of
updated hex string handling in Utf8StringBuilderTest . java to ensure compatibility with updated UTF - 8 encoding standards
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 422
camel - 14263 : camel - jbang - allow to configure the maximum number of output on a loadbalance .
updated the assertion in TestIndexWriterExceptions . java to set the maximum buffered documents to ensure the test correctly verifies the expected document frequency based on
replaced ` putUnencodedChars ` with ` update ` for resource hashes in ` ComputeExopackageDepsAbi ` and ` HasAndroidResource
removed unused methods for enumValue , int , and long in AsmRuntime . java to streamline code and improve readability
added biome tags for MANGROVE , MANGROVE , and DEEP DARK , and IS _ OVERWORLD
[ java ] use parallel thread pool for image loading in papplet .
changed access modifiers of fields and methods in BaseTableUpsertMetadataManager . java to protected and modified preload segment handling to improve encapsulation and
updated localized strings in multiple Java files to include " abb " for " abb " and " abb " to improve clarity and consistency in
replaced ` vid . equals ( ) . equals ( vname ) ` with ` vid . hasImageEqualTo ( vn ) ` for
camel - jbang : add repos option to run - dcamel . jbang . run
added handling for NaN scores in CrawlDbReader . java to handle NaN scores gracefully to improve robustness by preventing potential errors when processing NaN
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure proper resource management and cleanup after tests are executed
modified focus handling in FilterConditionEditor and added focus listener in FindAction to improve user experience by ensuring the input field is focused when the component is
[ hotfix ] [ checkpointscleaner ] use autocloseableasync for cleanup of checkpointscleaner
added a new file XPathWhiteSpaceTest . java to test XML schema validation to ensure proper validation of XML documents with specified schema
added a check to ensure the trie log layer is not overridden if it is already present in the world state storage
refactored the FilledNewArrayInstruction class to improve code readability to enhance maintainability and facilitate future updates
added timeout annotations to multiple @ Test annotations in SimpleNetworkTest . java to ensure tests do not hang indefinitely
updated the condition for determining the parent path in OCFile . java to improve clarity and correctness of path validation
added a print statement to indicate the failure of loading the skin file to improve debugging by providing feedback when skin file loading fails
added markDirty ( ) and isValid ( ) methods in LgoLevel2BatchSubscription and implemented it in LgoGroupedLevel2Update to
added a static final ` UNDEFINED ` constant and replaced instances of ` Result ` with a static final ` Result . UNDEFINED ` to improve code
updated assertions in TestTransactionCallback to throw NullPointerException instead of PersistenceException to ensure that the test correctly handles potential null pointer exceptions
add checkjetisenabled ( ) to uploadjobmultipartoperation so that it be serializable
[ hotfix ] [ runtime ] improve error message when recover data from a scheduled job journal
bug fix : do n ' t show summary level for folded node
updated the ` pos ` and ` sizeMask ` variables in ` DataOutput2 ` and modified the ` ensureAvail ` method to use a
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest to temporarily disable tests that are failing due to cruelty
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 560 .
removed unnecessary ' final ' keyword from the final parameters in FileManager . java to improve code clarity and maintainability
[ java ] remove transformfunctiontype implementation from transformfunctionfactory .
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` to ` VariableElement ` and ` VariableElement ` classes to enhance functionality
updated RFC5280 string from " RFC3280 " to " RFC5280 " across multiple Java files to ensure consistency with RFC 5280 standards
[ java ] fix classcastexception in searchannotationvisitor and searchannotationvisitor .
refactor item restoration logic in ListActivity and NoteAdapter to use SparseBooleanArray instead of HashMap to improve performance and memory efficiency during drawable restoration
refactor conditional statements in DirectUpdateHandler2 . java for improved readability to enhance code clarity and maintainability
refactor path handling in ConfigFileApplicationListener to utilize ResourceUtils for URL checks to improve code readability and maintainability by leveraging
updated PreviewPositionHelper to accept a Context parameter and adjusted device inset offsets based on split - screen mode to ensure correct positioning of the
[ java ] do n ' t publish new leadership term if it already exist .
pmd coverage test : use standarderrorstreamlog instead of output
refactor bytearrayinputstream . skip ( ) to use a constant for the number of bytes skipped to improve code readability and maintainability by
removed unnecessary conditional check in UpdaterTask . java to simplify the code structure for better readability and maintainability
changed the ` MAX _ HEADERS ` constant from final static to public static and modified block chain download logic in ` Peer . java ` to allow
added rt . jar to the standard library list in modloader
refactored the connection handling logic in AbstractHandshakeHandler . java to simplify the code for better readability and maintainability
[ geot - 4671 ] fix heterogeneous property in rasterlayerresponse and rasterlayercatalog
added a conditional check to send an error response if the response is already committed to ensure that error messages are only sent when the response is not already
updated condition checks in HttpSession . java to improve clarity and correctness to enhance readability and maintainability of the code
updated the fadeOutFakeTaskView method from true to false and added color tinting logic in SwipeUpGestureTutorialController to
fix ( prefabformat ) : set prefab name when deserialize prefab
removed redundant ScimGroupExternalGroupBootstrap instantiation and added additional properties to external group set to streamline the configuration process and improve clarity in group management
added a validation check in FreezeBalanceActuator and added a validation check in TransferActuator to ensure that the minimum amount is 1
replace ' / ' with ' File . separator ' in the path index calculation to ensure compatibility across different operating systems
ggb - 248 fixed focus and error message in multi - button .
updated the method in GpsMainActivity to use session . getDescription ( ) instead of a default string and added event handling in AnnotationViewFragment to
added a check for the number of pages in JsoupNonVisualRegressionTest . java and modified the assertion in JsoupNonVisualRegression
[ jsweet 2 catch - up ] add support for androidnativebufferallocator
added handling for flag names starting with " ! " in multiple classes to ensure that flag names start with " ! " and improve flag validation logic
added a comment to clarify the purpose of the query execution in JDBCHistoryCache . java to improve code readability and maintainability
updated comparison from " ITEM _ USE _ GRANT _ SELECT _ REWARD " to " ITEM _ USE _ GRANT _ SELECT
refactor priority handling in QueuePriorityTest and add a toString method in PriorityElement to improve test reliability and ensure correctness of priority elements
added dependency injection for AffinityGroupDao in AffinityApiUnitTest . java and updated test cases in AffinityGroupDao . java to improve test
added null check for the main command and modified argument checks in Main . java to enhance error handling and improve command - line argument validation
[ java ] increase the lightoutputstream size from 7 to 4 in propertytypes , byteiterablebase , and longbinding
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` in ` ClassWriter . java ` and created a new class ` T8032819 . java `
removed an assertion check for the length of the ' sn ' variable in Person . java to simplify the code and improve readability
refactor file extension check in VirtualFile . java to handle null extensions gracefully to improve robustness by preventing potential NullPointerExceptions
replaced return statement with continue in ContactRightButtonMenu . java to improve loop control flow
[ hotfix ] [ runtime ] fix checkstyle violation in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver . java to improve readability and maintainability of the code
refactor socket descriptor handling in PlainSocketImpl to improve code clarity and ensure proper resource management to enhance code maintainability and prevent potential memory leaks
added functionality to manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by ensuring only relevant media details are removed
updated log message to accurately reflect offsets from the element ' s in - view center point to improve clarity and accuracy of log messages for better debugging
added a new Java file ` bug4865918 . java ` that tests scrollbar block increments to address bug 4865918 related to
removed the use of VelocityEngine in ADKerberosOperationHandler . java to simplify the code by eliminating unnecessary dependency on VelocityEngine
added group trigger handling functionality in QuestCommand . java to improve user feedback for group triggers in quest commands
do n ' t try to select gnucash account file if it do n ' t exist
added Lombok ' s @ ToString annotation to PartitionChangeEvent , TbApplicationEvent , and TbApplicationEvent classes to enable proper string representation
updated the configuration URI to use a constant instead of a hardcoded value to improve maintainability and readability of the configuration URI
removed multiple calls to setViewportComponent and setJScrollPane in BrowserPanel . java to streamline view management and improve code readability
added support for forward and back navigation keys in LwjglInput and updated keycode handling in ParticleEditor to improve input input functionality and
added a condition to check if the indexMimeTypeParts configuration is enabled in MoreIndexingFilter to enhance flexibility in handling MIME type parts based on configuration
added a regex pattern for retrieving author information in JSDoc . java to enhance documentation clarity by including author information
updated constants for database and table creation and deletion in MetricsConstant . java and updated corresponding tests in TestMetaStoreMetrics . java to improve clarity and
updated HiveDatabaseSchema and HiveSchemaFactory classes to utilize DrillHiveMetaStoreClient and SchemaConfig for better database schema management to improve
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter for query parameters to enhance the
updated Hijrah calendar name from " Hijrah - umalqura " to " Hijrah - umalqura Calendar "
added support check for Firefox in WebAudioWrapper . java to ensure compatibility with non - IE browser scenarios
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the ` InterceptorConstants ` constructor in ` InterceptorConstants `
updated database table creation statements to use a default value of " DEFAULT " instead of a hardcoded value to ensure compatibility with the latest database schema
updated method names and logic in WriterRecordBatch , StreamingAggTemplate , and StreamingAggTemplate classes to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in executiongraph
added a boolean field ` hasHasFrom ` and modified SQL statement construction in ` DeleteDeParser ` and ` DeleteDeParser ` classes to support
updated synchronization logic in ` SynchronizeFolderOperation . java ` to handle multi - status requests and improved error handling to enhance clarity and functionality of synchronization
refactor test matching logic to use a new utility method ` applicableListTests ` to improve code readability and maintainability by reducing duplication
updated regex pattern in LogAnalyser . java to improve regex matching to enhance accuracy of log output by allowing colons in timestamps
camel - 15836 : camel - jbang - enable integration test for google cloud
fixed - redissonsearch . value ( ) method do n ' t accept ` ` inclusive ' ' or ` ` exclusive ' ' parameter . #
refactor CCLicenseStep to use generics for better type safety and clarity to improve code readability and maintainability
added null check for globalId before adding it to guidIndex to prevent potential NullPointerException when globalId is null
updated comparison strategy in ` OptionalAssert ` to use ` objects . getComparisonStrategy ( ) . isEqual ` instead of ` Object . equals `
refactor memory handling in NoNewLineParagraphCssApplier , ParagraphCssApplier , ParagraphCssApplier , and ParaGraph classes to
added a new file TestArrayCopyToFromObject . java that tests the ArrayStoreException thrown to ensure that ArrayStoreException is properly thrown when
refactor sys . path insertion statements in BuckPythonProgram . java for clarity and consistency to improve code readability and maintainability
fix checkstyle issue in ajp / apr / nio / ajpprotocol . java
fix findfiles ( ) method to accept default unfound root when visit all file
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable to address issue HIVE - 2262
[ java ] fix nullpointerexception in testinternalinputbuffer . isresponse400 ( ) .
refactor autoloadCall method to accept a lower name parameter and manage locks more effectively to improve thread safety by preventing concurrent access to the lock
updated version comparison logic in CustomPlaybackOverlayFragment , PlaybackController , and PlaybackController classes to ensure compatibility with the latest server versions and improve
updated localhost handling in ` BasicKrb5Test . java ` and ` OneKDC . java ` to ensure correct retrieval of the
added a boolean variable ` jsr250AttributeFound ` and created a new test class ` Jsr250VoterTests ` to
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability by reducing redundancy
added a static final variable HS2 _ PROXY _ USER and modified session parameter handling in ConnectionFactory . java to enhance session parameter management by
added support for Snappy compression in HdfsCompressionCodec and corresponding tests in HdfsProducerTest to enhance compression capabilities and ensure proper functionality
added a sleep delay in the HttpClientTest class to ensure proper synchronization during test execution
[ bug - 66175 ] fix multi - cell array formula for multi - cell array
updated glyph positioning logic in GlyphLayout . java and modified text in BitmapFontTest . java to improve glyph positioning and enhance test coverage for
updated the initialization of the K3S image in Fabric8IstioIT . java to use a constant instead of a hardcoded
replaced calls to ` apiClient . ReportPlaybackStartAsync ` with ` apiClient . ReportPlaybackProgressAsync ` in ` PlaybackController . java
patch by jbellis ; review by gdusbabek for cassandra - 1465
fix maploaderhittingevictiononinitialload ( ) for maploader . putfromloadall ( ) and maploader . putfromload
updated the return statement for LENGTH _ BIT and ERROR _ BIT in ResponseFlag . java to improve code clarity and maintainability
fix default policy for read - only community
added a SoftReference to manage CompositeFont instances in FontUtilities to improve memory management and avoid potential memory leaks
updated the calculation of prefHeight in Tree . java to reset prefHeight to zero to simplify the height calculation logic for better clarity and maintainability
drools - 10213 dmn evaluator compiler : add support for dynamic variable error message ( # 3353 )
removed unused imports and updated method signatures across multiple Java files to improve code clarity and maintainability
changed the visibility of the ` finishRunningRecentsAnimation ` method from private to public and modified the execution mechanism in ` NavHandleLongPressInput
added null checks for ` id ` and ` type ` parameters in ` ElementFactoryImpl ` , ` ImportContainerImpl ` , and updated data handling
[ beam - 12263 ] log unknown instructionresponse and state gRPC client ( # 12263 )
nifi - 10254 : fix flowfile size limit in binfiles . createbin ( )
refactor Teams . java to use a loop for finding the closest core to improve efficiency by using a more efficient way to find the closest core
added a check to skip copying content - length in the RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateTestToHttpServletRequest to
updated Java2TypeScriptTranslator and Java2TypeScriptTranslator to handle character literals and added assertions in SyntaxTests to improve code clarity and ensure
updated size calculations and adjusted component sizes in multiple classes to improve clarity and consistency in the spectrum panel and sample sizes
hbase - 13386 add - allregions option to canary . allregions ( chiaping tsai )
testcassandraconnector . testcassandraconnector . testcassandraconnector . testcassandra
added resetCursorPosition ( ) method call in KahaDBStore . java to ensure the cursor is reset before processing new data
[ java ] : set new frame width and height only when new frame be less than min size .
fix blockfalling . damageofstate ( ) during world gen
make testhttpsamplersgainsthttpmirrorserver static to improve performance
added null check and removal logic for KerberosPrincipalEntity in KerberosPrincipalDAO and updated related imports in KerberosPrincipalHostEntity to improve
removed the boolean parameter ` true ` from the ` AcidUtils . getTableSnapshot ` method call to simplify the method call by removing unnecessary parameters
camel - 14263 : camel - apr - do not log exception if poller do n ' t exist
updated the build exception message to include the Monetization setup and paste the Base64 - encoded RSA public key to improve clarity of the error message
updated ` fileFolder ` initialization to use ` getDisplayName ( ) ` instead of ` getName ( ) ` in ` FileTranscodeVirtualFolder ` to
[ drools - 3533 ] add support for spring - boot - inf . classes .
added an assumption to skip tests on versions 19 and above in CheckIndexTest . java to ensure compatibility with feature version 19 and avoid false negatives
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method and refactored the ` assignTargetsForSplitScreen ` method
refactor LeaderLatch class for improved readability to enhance maintainability and clarity of the codebase
added methods to initialize Zookeeper parameters in SolidityNodeHttpApiService to ensure proper initialization of Zookeeper parameters for the Solidity node
transaction . getdepthinblocks ( ) and transactionconfidence . getdepthinblocks ( ) do n ' t need to set confidencetype . building
updated method names and methods in CodenameOneImplementation and Location classes to improve clarity and consistency in naming conventions to enhance code readability and maintain
initialize platformName to " ios " to ensure platformName defaults to " ios " for compatibility
refactor PageEditClient class to improve code readability to enhance maintainability and facilitate future updates
reformatted conditional statements for mozDash and webkitLineDash in Graphics2D . java to improve code readability and maintainability
refactor CreateVisibleSignature class to improve code readability to enhance maintainability and facilitate future updates
added error handling and logging for outgoing frame processing in AbstractExtension . java to improve robustness by catching and logging exceptions during frame processing
replaced direct exception handling with a privileged action in ContextHandler . java to improve security by ensuring caller checks are performed with the appropriate privileges
added logic to update the parent of feed categories in CategoryREST . java to ensure that only children of a feed category are removed from the database
added title handling for contrib manager types in ContributionManagerDialog . java to improve clarity and usability of the dialog based on the contribution type
added a new BigDecimal ` vwap ` field and its getter / setter methods to the ` Ticker ` class to support the calculation of the
added support for ` noWidgetsView ` in ` SearchAndRecommendationsScrollController ` and implemented bottom inset padding in ` WidgetsFull
add rendergraphapi to the dag - gsoc module to enable tinting of dag graph
added theme color setting to NCFirebaseMessagingService to enhance the visual appearance by using the primary theme color
updated ShadowUsbManagerTest . java to improve test coverage to ensure proper functionality of ShadowUsbManager functionality
[ recommender ] improve logging of evaluation result in averageabsolutedifferencerecommenderevaluator
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is properly refreshed after
added a check for zero values before calculating the bounds dimensions to prevent potential zero values from being added to the bounds
replaced HashMap with LinkedHashMap in multiple classes to maintain the insertion order of elements in the options map
replaced native closure manager with closurePool in NativeClosureFactory . java to improve performance by utilizing a more efficient closure management approach
test : migrate camel - main to junit 5 ( # 4513 )
added new files ` WebsocketIngressIntegratedBootstrap . java ` and ` WebsocketPluginTest . java ` for integration testing of the WebSocket
[ ds - 3939 ] remove unused test method for abstractimportsourceservice .
refactor authentication equality check to use a new method ` areEssentiallyEqual ` to improve code readability and maintainability by encaps
added a conditional check to return false if " jnr . ffi . compile . x86asm " is set to " true " to ensure
replaced instances of ` callNode . getType ( ) ` with ` callNodeType ` for consistency and clarity to improve code readability and maintainability by
added a new interface ` Insecure ` and refactored the ` MessageBuffer ` class to improve security by indicating that the ` MessageBuffer `
added new configuration variables for Hive properties in HiveConf . java to enhance the configuration options for improved performance
initialize scopes , policies , and policies to new HashSets in ResourceSet . java and added null check in DefaultResourceSetService . java to ensure
updated the ` decrefOnClose ` variable to be ` final ` and modified the ` MultiReader ` constructor to include ` readerFinishedListeners `
refactor multiple Java files related to asynchronous socket handling to improve code organization and maintainability
simonstewart : refactored inputfieldtest to use setvalue ( ) instead of clear ( )
changed the visibility of ` getFirstTypeArgument ` from ` $ Gson ` to ` final class ` in multiple classes to improve encapsulation and
changed the return type of keySet ( ) and values ( ) from Collection < Integer > to KeySet and Values ( ) in Int2IntHashMap
added a ` duration ` parameter to the ` FlipTransition ` class and updated related methods in ` FlipTransition ` to allow customizable animation
removed trace logging for invalid subsAreValidForStreaming in DLNAResource . java to streamline code by eliminating unnecessary trace logging
update forge version to 10.10 . 0 ( # 7954 )
replaced System . err . println with LowLevelLogUtil . log for warnings related to runtime environment limitations to improve logging clarity and support for multi -
added support for Java 15 and Java 16 in the parser configuration to support Java 16 features in the parser
updated background padding and padding logic in ExpansionViewHelper . java to improve layout responsiveness based on the number of replies
[ hotfix ] fix partitionbackupreplicaoperation callback check in abstractpartitionprimaryreplicatask
added metadata field and its getter / setter methods in SeedUrl and SeedResource classes to store and output metadata information efficiently in SeedUrl
added a null check for the declaration before creating a Pattern object to ensure that the binding is only set when the declaration is not null
updated TestCoprocessorWhitelistMasterObserver . java file to improve code clarity and maintainability
ww - 3905 add package name to action validator name to allow for more flexible validation
updated IterableTest to use Arrays . < Object > instead of Iterable < Object > and added a new test method for handling null values to improve type
added stream methods to ` MapIterable ` , ` PrimitiveObjectMap ` , ` MapIterable ` , and ` PrimitiveObjectMap ` classes to enhance
clone the notifInfo object before returning it to ensure the original notifInfo object remains unmodified
appw : fix npe in commandkeyset . getstring ( ) .
refactor AEADBlockCipher class to improve code structure to enhance maintainability and readability of the code
added a method ` isVariableLocal ` to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added null check for resource ID and changed default resource mode from best to legacy in PackageResourceTable . java to ensure proper handling of resource names and
added a conditional check for ` ulSize ` and ` ulPos ` before setting underline metrics in ` TrueTypeFont . java ` to ensure proper
updated the ` SignPlugin ` constructor to accept a ` List < HttpMessageReader > > ` parameter and added a ` ServerCodecConfigurer ` to
updated Int2ObjectCache class implementation to improve performance and memory usage
camel - 14263 : camel - aws2 - standard - maven - authentication - remove dependency on maven - artifacts
refactor AudioNode class to improve code structure to enhance maintainability and readability of audio node operations
[ enedis ] use sslcontext instead of cookiestore in linkyhandlerfactory
added imports for Stream and improved function name handling in HiveFunctionRegistry . java to enhance code readability and maintainability by utilizing a stream
http : / / issues . apache . org / jira / browse / amq - 4673 - fix a couple of typo in the
modified the ` getBuildTargetForAlias ` method to remove the ` ` # ' ' character from the alias string to ensure that the alias is
( chore ) camel - odata2 : improve handling of empty odata feeds
added support for equivalent version retrieval in MetaStoreSchemaInfo . java to enhance version management by distinguishing between different Hive versions
server : do n ' t expunge vm if expunge do n ' t exist
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in new code
refactor ONDashClockExtension and AlarmReceiver to use a dedicated method for obtaining note titles to improve code clarity and maintainability by centralizing
renamed GoogleAuthUserConfigTable to GoogleAuthUserConfigTableTest and updated test column types to improve clarity and consistency in naming conventions
replaced ` commit ( ) ` with ` apply ( ) ` in multiple classes for saving shared preferences to improve performance by avoiding unnecessary commit operations
added a new TestIdleListener class to the Session instantiation in AsyncTimeoutTest . java to enable handling of idle states during tests
[ beam - 8558 ] fix bigqueryioit flakiness ( # 9995
added background resource setting and resetting of icons in HotseatPredictionController and BubbleTextView to improve UI consistency by setting the icon ' s background
mondrian : fix typo in getflushafterquery and getflushafterquery property .
[ native ] add test for native system query
fix regression in LIMEExplanation and LIMEColumnarTest
added a new parameter ` args ` to ` AppleSimulatorController ` and modified the ` InstallCommand ` class to include additional arguments to enhance command execution
refactor code to use a local variable for the area object to improve code readability and maintainability by reducing repetitive method calls
added a condition to check if the pipeline ' s state is available in ContainerBase and StandardContext classes to ensure that the pipeline ' s state is
added clipping to outline for the QSB background view in QsbWidgetHostView to improve visual appearance of the background view
added time tracking and improved flag conversion logic in SQLManager , BlockTypeListFlag , and PlotArea classes to enhance performance monitoring and provide clearer
updated import statements and modified depth test behavior in FloatingTextRenderer . java to improve code readability and maintainability by reducing unnecessary imports
trufflenfifeature : fix typo and fix typo .
refactor JdbcAggregationRepository to use a private propagationBehavior variable instead of hardcoded values to improve flexibility and maintainability of the propagation behavior setting
[ fix ] layervalidation : add support for l1 and l2 regularization
added exception handling for read and write operations in AbstractChecker . java to improve error logging and handle potential exceptions more gracefully
updated the access modifier of the colorStack array in GlyphLayout . java to ensure consistent access to the colorStack variable across instances
updated method parameters from ` false ` to ` true ` for ` getMappedStatement ` and ` hasStatement ` in ` Configuration . java ` to
convert tradable identifier to lowercase in BTCEPollingMarketDataService . java to ensure consistent depth retrieval regardless of the identifier casing
updated the expected values in the ` ChannelStateTests ` class in ` ChannelStateTests . java ` to correct the expected values for the channel state
removed the ` versionedHashes ` field from the ` EnginePayloadParameter ` class and related tests to simplify the ` EnginePayloadParameter ` constructor and
set trigger price to an empty string in the model when the trigger price text changes to improve user experience by clearing the trigger price in the UI
refactor student feedback redirection logic to improve readability and maintainability to enhance clarity and maintainability of the code
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 10254 do n ' t log the result of hstore . getdebuglevel ( ) if the result be null
no effective change - do n ' t persist new or dirty property when cascade be true
added a boolean field ` _ alwaysSaveUri ` and its getter and setter in ` FormAuthenticator . java ` to control whether URIs should be
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class for setting layer types and
updated import statements in LWChoicePeer . java to use wildcard imports and added a method to handle the visibility of the popup menu to improve
make stressprofile case - insensitive to lower case
replaced the use of ` JavaConversions . asScalaIterable ` with static imports from ` JavaConversions . asScalaIterable `
fix npe in mockservereventlog when there be no request
log warning if property file can not be load
added try - with - resources statement in ClientMain . java to ensure proper resource management and avoid potential memory leaks
added a condition to check if the network support is supported and the network is up to ensure proper handling of outgoing connections based on network capabilities
modified the initialization of SQLCommand to accept a length parameter to ensure the command length does not exceed the bounds of the command string
added methods to set the latest consume time and the latest free time for the receiver capsule in UnDelegateResourceActuator and BandwidthProcessor to
added a new method ` invalidSessionStrategy ` to ` SessionManagementConfigurer ` to allow configuration of an invalid session strategy
improve error message to provide clearer context on the failure
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the existence of keys in a map to ensure the correctness of
added a new delegate method for JDBC4TemporaryPreparedStatementMethods in JdbcProxyGenerator . java and updated method signatures in JdbcProxyGenerator . java to
added a static method ` ensure ` to ` ServerWebSocketContainer ` and updated related methods in ` DirectUpgradeTest ` to improve the handling of WebSocket
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in the ` toLanguageFlags ` and ` getLanguageFlags ` methods in ` CxxFlags .
pdfbox - 2576 : fix npe in curvetoreplicateinitialpoint ( point2d )
[ java ] do n ' t create array of empty methodhook [ 0 ] when there be no method .
added a boolean parameter ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the return statement in ` MockAuthenticationManager ` to allow
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to provide a more descriptive parameter for job execution
added a check for ` canExecute ( ) ` before checking if the file is writable in ` SharedLibraryLoader . java ` to ensure that the
added a method ` hasTimeSeriesQueryLanguage ( ) ` to ` TimeSeriesQuery ` and its override in ` TimeSeriesQueryOrBuilder ` to
bug 60254 - sample result collector should use event instead of SampleResult
added new constants for battery level , time offset , and profile name in BundleConstants . java and updated CustomUrlManager . java to utilize these
fix checkstyle issue in searchexpression . applyrule ( )
ggb - 2375 move widget to absolutescreenlocateable instead of widget
updated method calls and texture filtering in ProjectiveTextureTest . java and modified texture initialization in ProjectiveTextureTest . java to enhance texture quality and
refactor setResourceToDelegate method to return a File object instead of void to ensure the output resource is writable before delegation to the delegate method
camel - 14263 : camel - properties component should resolve the property placeholder when match the endpoint .
updated the condition in ActionScheduler to check if the current time is greater than the last attempt time and changed the assertion in TestActionScheduler to ensure
updated the file path for the debug log in DbgPacker . java to ensure a temporary file is used when debug log is not null
update notification overlay to not hide the hidden hidpi hid .
fix blockpipe . markblockneedsupdate in case pipe . gate be set to null
refactor TestSupplementary to use Locale . getDefault ( ) for locale management to ensure Locale is restored after execution to improve resource management and prevent potential
updated the color value for the team in the Team . java file to improve the visual appearance of the team in the UI
make activematchedstates a collection instead of a set to avoid concurrentmodificationexception
updated the null check for annotation in SoftAsserts . java to correct the logic for determining if the annotation is null or empty
updated error handling in StorageResources and added logging for InvalidTypeIdException and UnrecognizedPropertyException in StoragePluginRegistryImpl to improve clarity of error
refactor call tree printer to use file . tocsvfile instead of reportutils . report
added null checks and refactored note handling in DetailFragment . java to improve null safety and ensure proper initialization of notes
added a peakTasks variable and modified the calculation of the loaded value in AssetManager . java to improve the accuracy of asset loading by accounting for the
simonstewart : enable native event on window for the firefox driver
added support for custom score and fetch interval metadata in the Injector class to enhance the flexibility and usability of the dependency injection process
updated imports from ` org . apache . commons . collections . collections . ListUtils ` to ` org . apache . commons . collections4 .
added a method ` isShareSchema ( ) ` to ` CoreContainer ` and a corresponding test in ` TestCoreContainer ` to enable schema sharing
updated sizeInBytes method calls to use a boolean parameter for better handling of segment sizes to ensure accurate representation of segment sizes based on segment
updated assertions in VersioningTest to assert that the JSON object is not null to ensure that the test correctly verifies the absence of expected values
updated SQL query in ` Field . java ` and modified nullability handling in ` AbstractJdbc2DatabaseMetaData . java ` and ` DatabaseMetaDataTest .
[ java ] make appendnewleadershiptermevent return false instead of false .
removed the buildMediaType method and its usage in WebClientPlugin . java to simplify the code by eliminating unnecessary code
replaced calls to ` termBytesReader . fill ` with ` termBytesReader . fillSlice ` across multiple classes to improve clarity and consistency in term
refactor compaction checks in AcidUtils and add a new test for cleanup after ioW and major table compaction to improve code clarity and
patch by jbellis ; review by brandonwilliams for cassandra - 141
added new classes for PojoProducers , PojoProducers , and RestProducers , and RestProducersCutomized in the application
updated method calls to use CACHE _ SECTION _ NAME instead of hardcoded values to improve maintainability and readability by avoiding hardcoded
removed duplicate registration calls to AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to streamline code by
add slab wood item to the OreDictionary to make it easy to place the slab in the correct place .
refactor multiple Java classes related to session management to improve code organization and maintainability
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` UndefinedSymbolsLinker . java ` to simplify the class hierarchy
prepare next release 3.0 : update doc tree to be ready for release
hhh - 13636 remove skipfordialects from denormalizedtablephysicalincludedialect
corrected the positioning of the spriteBatch drawing in HelloWorld . java to ensure the sprite is drawn correctly within the specified bounds
modified the logic for determining the position of a plot in PlayerFunctions . java and modified the toString method in PlotId . java to improve clarity and
added a deprecated version constant LUCENE _ 8 _ 5 _ 0 to indicate that this version is outdated and should not be used in new
updated the print statement format in SSLSocketImpl . java to improve readability to enhance code clarity and maintainability
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify the SQL parsing and deparsing of
refactor dependency type handling in CoNLLUOutputter and SemanticGraphCoreAnnotations to use SemanticGraphCoreAnnotations . DependenciesType instead of String
refactor ` NoSuchBuildTargetException ` methods to utilize ` ParseContext ` for building target descriptions to improve code clarity and maintainability by central
updated the method call from ` MyChild ` to ` MyChild . test ( ) ` in ` TestOutOfMemory . java ` to ensure the
updated the array size from ` Block . blocksList . length ` to ` 256 ` in ` Configuration . java ` to optimize memory usage and improve
updated logging statements and modified version check logic in BukkitMain . java to improve clarity of output messages and ensure titles are only included for Paper only features
update AbstractSQLChange to handle escaped commas in PostgreSQL database statements to ensure proper SQL syntax handling for escaped commas in
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and corresponding tests in ` BagsTest ` to enhance functionality
added html escape codes and updated shortname and permalink handling in BuildNavAndPDFBody . java to ensure file names end with HTML codes and
updated the constructor of MqttBrokerConnection to include a boolean parameter for client ID to ensure proper handling of client IDs during broker connection
added null check for the root change log before retrieving the change set to ensure a valid change log is retrieved to avoid potential null pointer exceptions
refactor method invocation and logging in multiple classes to improve code readability and maintainability
added database drop functionality and improved logging in TestHiveMetaStorePartitionSpecs . java and TestObjectStore . java to enhance database management and
added a new parameter " order _ currency " to the endpoint in BithumbAuthenticated . java and modified the API call in BithumbAccountServiceRaw
deleted the SSEFluxWebConfig . java file to remove unused configuration class to streamline the codebase
refactor JsonBuildHelper and IDocBuildTemplate to use getReturns ( ) instead of fully qualified names to improve code clarity and maintainability by
refactor YamlResource to use a RESTful method for listing YAML configurations to improve code clarity and enhance functionality for fetching detection configurations
removed the ` public ` modifier from the ` equals ` and ` hashCode ` methods in ` Marker . java ` to enhance encapsulation by
replaced the custom ` newThread ` method with a lambda expression and refactored the ` awaitTermination ` method in ` Basic . java ` to
added unit tests for the ` addingToList ` method in ` MongoTemplateTests ` and created a new class ` PersonWithAList ` to
ggb - 2275 update sync applet panel size ( width , height , evno ) in web
replaced toolbar visibility setting with a postDelayed for asynchronous execution to improve UI responsiveness by ensuring toolbar updates after a delay
[ iotdb - 4023 ] fix the issue that we do n ' t need to initialize the firstpagereader if it do n '
cloudstack - 10225 : do n ' t try to save password on vr that be already run .
reset variables in Response . java to reset usingOutputStream , usingWriter , and isCharacterEncodingSet to ensure proper initialization of output and character encoding settings
added a check to return early if assignment side effects are detected in the group dialog to ensure proper handling of group assignments and prevent potential errors
refactor JSON and JSONObjectConvertor classes to improve code organization and readability
updated the conditional check for icon width and height in FileUploadApiController . java to ensure proper validation of the icon ' s width and height limits
refactor ` fetchPublicKey ` method to use ` StringUtils . EMPTY ` instead of ` EncodingUtils . encodeBase64 ` in ` JwtToken
updated import statements and added a method to check MIME types based on the operating system to improve accuracy of content type verification for different operating systems
use the jzlib codec for compression , so we can use it in the future
added a static method ` doesClassLoaderDescendFrom ` in ` Util . java ` and refactored the ` doesClassLoaderDescendFrom `
updated the ` connect ` method signature in ` ChannelProvider ` and ` ProxyChannelProvider ` to handle NoClassDefFoundError to improve error handling
added a test for handling an empty final column in the TextReader and TestCsvHeader classes to ensure the CSV header correctly handles empty final columns in
added compass gravity and margin settings in NearbyMapFragment . java to improve visual alignment and spacing in the user interface
added a new test method ` testInterpolation ` to ` GeoPathTest . java ` to verify the interpolation functionality of ` GeoPath ` to ensure
added HiveException handling and improved error messaging in ` getLeafFilterBuilderByType ` and ` ParquetFilterPredicateConverter ` to enhance error handling and
added handling for video stream type and language setting in LibMediaInfoParser . java to ensure proper language settings are applied for video streams
added a warning log for invalid schemas in the microservice version before deploying to improve error handling and provide clearer diagnostics for compatibility issues
refactor item addition logic across multiple array classes to use a new addAll method to improve code readability and maintainability by reducing redundancy
added multiple try - catch blocks for exception handling in DataSourceProxy . java to improve code readability and maintainability
refactor InMemoryClientRegistrationRepository to accept a Map < String , ClientRegistration > instead of a Map < String , ClientRegistration > to enhance flexibility
added a method to reset the UI state in the SchemaUpgradeHelper class to ensure the UI state is correctly reset during the upgrade process
added a failedStep flag and updated conditional logic in JUnitReporter and JUnitReporterTest classes to handle pending exceptions more effectively and improve test coverage
add a patch to allow . in entity selector to allow . in entity selector .
added Closeable interface to the Selector class to ensure proper resource management and prevent resource leaks
replaced default parallelism and iterations settings with MultiplexConnectionPool in MaxConcurrentStreamsTest . java to improve connection management and performance during concurrent stream operations
added multiple calls to stringType ( ) in CoreOptions . java to enhance clarity and maintainability of the code
added null checks for character and parameter in HqlQueryRenderer and updated test paths in EclipseLinkUserRepositoryFinderTests to improve context handling and
updated status handling in HttpGenerator , HttpChannelState , and Response classes to use constants instead of constants to improve code readability and maintainability by
pdfbox - 2576 : fix typo , a suggest by valerybokov
fix flaky test that fail on ci
added methods to expand selections in ParquetFormatPlugin and ParquetGroupScan classes to improve handling of Parquet metadata files and enhance code clarity
updated the ` isSuccess ` variable to true and added error handling for compilation mode in ` Jsr199Javac . java ` to
added a ` TableModelListener ` to the ` DefaultSortedTableModel ` class and implemented it in ` DefaultSortedTableModel ` to handle table change events
updated the minimum value for the number in ServerConfig . java from 49152 to 65535 to ensure that the number is greater than or equal to
updated AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to notify changes to root URIs only when the SDK version is KitKat
removed log _ OC . startLogging call from MainApp . java to streamline logging process for better performance
added exception handling to the FilterChainProxy class to handle wrapped RequestRejectedExceptions to ensure proper handling of wrapped RequestRejectedExceptions during request processing
updated StringBuilder ' s arraycopy method to use ' this . length ' instead of ' length ' to ensure proper reference to the current instance ' s length
pdfbox - 4892 : throw an illegalargumentexception if filter list be empty
added a new class ` TbStopWatch ` that extends ` StopWatch ` and methods ` start ( ) ` and ` stop ( ) ` to
fixed typo in pliststore . setinitialized ( true )
added @ Deprecated annotation to multiple continuation classes to indicate that these classes are outdated and should not be used in new implementations
[ zeppelin - 4071 ] fix classloading issue in remoteinterpreterserver .
corrected the entity reference in the condition check in CommandSourceStack . java to improve code readability and maintainability
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with
updated the parameter name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve code
# 119 - add beanname to beandescriptor and beanpropertyassocmany to make it easy to find the beanname
updated URLs in ` BasePage . java ` to include " static / all . js " and added a new ` WroSassProvider
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT . java ` to verify the functionality of showing
rename parameter names from " appContextLocation " to " contextConfigLocation " across multiple files to improve clarity and consistency in naming conventions
refactor exception handling in OCSPChecker . java to ensure specific exception types are handled correctly to improve clarity and maintainability of error reporting
add writeoutputsolution ( ) configuration option to write benchmark output
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to validate the slice size functionality in ` SortedTableMap . Sink ` to ensure proper
added a recipe for slime balls in the CraftTransport class to enable custom recipes for slime items in the craft process
mahout - 159 fix iteration bug in sequentialaccesssvmvector . iterator ( )
added entity handling for Shulker entities and updated entity metadata handling in BukkitMain . java and EntitySpawnListener . java to ensure entity owners are
added a new method ` getDebugLogger ( ) ` to ` DIHWriter ` and implemented it in ` SolrWriter ` to provide access to
added methods to manage maximum directory and file name lengths in IOHelper . java and added a warning log in MultiKahaDBPersistenceAdapter
added a check for the presence of a specified tag in UpToTagChangeSetFilter and updated its usage in UpToTagChangeSetFilter to improve error
( chore ) camel - core : use arraylist instead of linkedlist to improve performance
http : / / issues . apache . org / jira / browse / amq - 4273 - fix typo in brokerroutingmanager
updated volumePaint and upPaint values from ` Color . gray ` to ` Color . GREEN ` in ` CandlestickRenderer . java ` to
refactor InsettableFrameLayout to use LayoutParams instead of Frame . LayoutParams and add ignoreInsets flag to improve layout parametrization logic
added a new property ` duration ` in ` BuildTargetDurationListener . java ` and updated related tests in ` BuildTargetDurationListenerTest . java
replaced ` @ Profile ` annotation with ` System . getProperties ( ) ` in multiple test files to use ` assumeTrue ` instead of ` @ Profile
added null check for the user before processing claims in OAuthConfirmationController . java to avoid potential NullPointerException when user is null
added support to replace endpoint with advicewith . thanks to sergey for the patch .
replace java . util . concurrentset with java . util . concurrentset in cassandraconnection
server : listpublicipaddresses api : add sourcenetworkid parameter to listpublicipaddresses api command
added tests and methods to manage battery optimizations in ShadowPowerManager to enable testing and management of battery optimizations in the power manager
updated the version retrieval from ` System . getProperty ( " jetty . version " , ` __ buildProperties . getProperty ( " version " ) ` to
added tests to verify the order of invocations in NumberOfInvocationsInOrderVerifier to ensure correct verification of invocations in the verification process
tregex : do n ' t use tregexresult . getnomatchinstance ( ) when there be no match
added a parameter " - foreground " to the startProfile method call in NewProfileExtensionConnection . java to ensure the profile is started with a foreground
refactor executor initialization to use IOUtils for better resource management to improve code readability and maintainability by using more descriptive utility methods
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` Array [ ] ` in ` MetadataIndexer .
updated logging statement to use the file name instead of the file name in CodeEditorView . java and added action removal logic in EditorTextActionWindow
updated skippedEntries format in ClassFileReader and updated warning message in JdepsTask to improve error reporting and provide clearer context for skipped entries
added LinkStorage to store links in the document storage in Fetcher and updated FetcherTask to use it to improve link management and enhance document handling
updated the bubble populate method to include a null parameter for existing bubbles to improve bubble data handling and prevent potential null pointer exceptions
[ hotfix ] [ log ] throw illegalargumentexception if no start / stop / resume time be specify
refactor ` buildRpcExt ` method signatures to remove unnecessary ` methods ` parameter to simplify the method signature for better readability and maintainability
[ java ] : enable feedback delay generator for multicast when receive message .
added properties to the Gson object in ClientInformationResponseView . java to enhance the response serialization and deserialization of client information
added a condition to check if the openOrder ' s fieldAmount is non - zero before adding it to limitOrders and set averagePrice only
removed the private method ` rawExecutionReports ( ) ` from ` rawExecutionReports ( ) ` in ` BinanceStreamingMarketDataService `
added a method ` fail ( Exception e ) ` to ` LdapTimeoutTest . java ` and modified error handling in ` ReadServerTimeoutTest .
make sure we do n ' t crash if the user dictionary do n ' t exist .
ambari - 13939 . rootservicecomponentconfigurationresourceprovider should store the alias / file name ( alejandro )
added a check to skip parsing segments that are already parsed in the ParseSegment class to improve performance by avoiding unnecessary parsing of segments that are already parsed
[ hotfix ] [ yarn ] allow yarn . application - attempt - failure - validity - interval to be configurable
[ geos - 7063 ] do n ' t fail to unload h2 driver if it be not include
hbase - 25825 add a default readtype to snapshot input format in snapshot ( # 2529 )
added fixed height and width parameters to LoginInstanceRequest with corresponding getters and setters to manage instance display sizes and widths in the login
added a corner radius parameter to the ` update ` method across multiple classes to allow dynamic adjustment of corner radius during animations
added filtering for cross product command in the COMMANDS _ TO _ REMOVE array in QFile . java to enhance functionality to filter cross product
added a retry mechanism for connection pooling in TxnHandler . java to handle potential exceptions during connection retries to address potential BONECP bug
move txnensurereserve and txnpreparebackupoperation to txncheckreserve and txnpreparebackupoperation
added a final field ` strings ` to the ` FirstOfStringsMatcher ` class to store and manage the ` strings ` array effectively
updated SQL statements in CostBasedDecisionIT , DeleteCompiler , and added a new test class ExplainPlanTextTest to improve clarity and functionality of
added retryable check and updated exception handling in BaseServiceException . java and its test cases in BaseServiceExceptionTest . java to improve retryability
added a new parameter ` rapidInstallTypes ` to multiple classes and updated related methods to support it to provide a list of rapid installation types for improved
updated the seed pattern in SortTest . java to allow for optional trailing commas to enhance flexibility in seed parsing for different input formats
refactor MultimapSubject and MultimapSubject classes to improve clarity and structure to enhance readability and maintainability of the code by reducing redundancy in
updated the calculation of the display size in the Workspace class to ensure the correct positioning of the hotseat based on device orientation
added a ` transmux ` parameter to the ` Transformer ` class and updated related classes to support it to control the transcoding behavior based on media
added functionality to localize strings in the Picker class to ensure localized strings are used for better user experience
camel - 14284 : camel - cxf - client should not throw exception if a customer can not be find
hhh - 11436 - fix for postgresql81dialect with lock / lock / lock / lock / lock
updated assertions in ` TestJdbcDriver2 . java ` and modified imports in ` HiveStatement . java ` to ensure proper handling of null query
[ beam - 10297 ] add test for unbounded pcollections in pardotest .
updated string concatenation syntax in GpsSimpleViewFragment . java to improve code readability and maintain consistency in formatting
[ java ] remove unused leadershiptermid parameter from joinlogasfollower method .
refactor HttpSender to use a private HttpExchange instance instead of directly accessing it to improve encapsulation and ensure proper access to the
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit 5
rename ` token ( ) ` method to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and ` AppOpticsProperties
added null check and improved equality and hash code handling in Recipe , Markers , and SearchResult classes to enhance code robustness and prevent potential NullPointer
pdfbox - 4892 : use double instead of float for font size , a suggest by valerybokov
addressbookdocomoresultparser : use array instead of string . maybewrap ( email )
refactor exclusion handling in RawMavenResolver to improve clarity and functionality to enhance the handling of exclusions for better resource management
added support for DSX exchange info and improved currency handling in multiple classes to enhance error handling and ensure proper initialization of currency pairs
updated TestBlockingIO , TestParsingTable , and TestResolvingTable classes to improve test coverage and ensure consistency across the codebase
[ drools - 90 ] fix incremental build failure when kmodule pom be invalid
updated the initialization of ` copy ` to use ` finale - k ` instead of ` 0 ` and added a check for ` sobj .
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
fix hostfielddesc . getfieldhandles ( ) to not throw unknownidentifierexception .
added a new annotation for ` CompletionStage ` in ` DefaultNullnessAnnotations . java ` to enable handling of ` CompletionStage ` in asynchronous operations
updated mFreezeCheckPoint calculation from 9000 to 10000 to accommodate longer freeze durations
updated Whitebox state management in AbstractCommonPowerMockRunner and removed unused imports in PowerMockRunner . java to streamline the code and improve clarity
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure the correct type is
refactor indentation handling in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced LuceneTestCase with junit ' s TestCase in TestSingleTokenTokenFilter . java to simplify the test implementation by removing unnecessary dependency on Lucene
updated the HTML structure in HtmlProcessInformationsReport . java to include a wrapped text element to improve the display of wrapped text in the report
updated JdbcStepExecutionDao and MapStepExecutionDao classes to utilize DefaultLobHandler and LobHandler to enhance execution context management and ensure
added a condition to check if the new media folder is not hidden to ensure that child elements are only added when the new media folder is not hidden
added null check for the actor before setting the first and second widgets in SplitPane . java to improve error handling for null actors and ensure proper removal
added support for handling parameterized Java types in RemoveUnusedImports . java to enhance type resolution for parameterized types in the application
updated debug log message format and added null and empty check for modFileInfo to improve logging clarity and ensure robustness against null or empty modInfos
changed the logger variable from static to static in TicketGrantingTicketImpl . java to ensure the logger is shared across all instances of Ticket
updated SQL string in PhysicalPlanTest . java to include new time series name " 81 + 12 " to ensure the test accurately reflects the intended data structure for functionality verification
added a method ` isValue ` in ` AttrData . java ` and modified exception handling in ` Converter . java ` to improve value validation and
added support for US - International PC character detection in CPlatformResponder . java to enhance character input handling for specific locales and modifiers
[ java ] add configuration for publication connection timeout in spysimulatedconnectiontest .
added a check to return false if the request URI starts with " / css " or " / favicon " in GTVGFilter . java
added assertions to verify the successful installation of the APK and ensure the device is rooted to improve error handling and ensure the device is rooted
no effective change - remove oracle ansi sql limiter
updated the expected length of enabled secure transport protocols from 1 to 3 in TestSimpleBodyHandler . java and TestVertxTLSBuilder . java
updated the Java file paths in DiffRuleKeysScriptIntegrationTest . java to use a newer version of the Java library to ensure compatibility with the latest
added a boolean variable ` mIsDismissHapticRunning ` and modified the condition in ` TaskViewTouchController . java ` to ensure that
fix mixineventworldexplosion . getcause ( ) for projectile .
added a method to retrieve item IDs from symbols in SymbolInputAdapter to enhance the functionality of SymbolInputAdapter by providing stable ID retrieval
updated the ` getBook ` method to accept a query parameter for limit bids and limit asks in ` BitfinexPollingMarketDataService ` to improve
normalize the quotation mark in staxconverter ' s xml comparison
added ` toString ( ) ` method to ` KubernetesLeaderElectionDriver ` and ` ZooKeeperLeaderElectionDriver ` classes to
refactor SqlSessionFactoryBean class to improve code structure to enhance maintainability and readability of the code
refactor TripleInvoker to improve null handling for method descriptor retrieval to enhance code clarity and maintainability by reducing redundancy
replaced Gdx . app . error with GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing a GdxRuntimeException instead of
added a method ` isStarted ( ) ` to check if the ` Deadline ` is already started in ` RawStoreProxy . java ` to
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages when a closed channel is encountered
added null check for genres before setting the textView text to avoid potential NullPointerException when genres are not available
[ hotfix ] [ checkpoint ] add test for reset hook in regionrestorehook
fix entitydatajsonformat to support collection of mapped container
fix walnode cost calculation when there be no oldest unpinned memtable
fix issue where callback do n ' t retry same host on callback failure
[ java ] move the ` ` background ' ' package - info from ` ` com . oracle . truffle . tutorial . background ' ' to
added a new test class SQLServerEscapeQuestionCharacterTest for testing SQL query escape functionality to ensure proper handling of question characters in SQL queries
[ jooby ] add null check for route in camelmodule .
[ javafxse ] use util . wait instead of synchronize in javafxseport .
changed the package of ParameterFlags from ` ParameterFlags ` to ` provider . ParameterFlags ` across multiple files to align with the new provider package structure
make sure we do n ' t try to load the regiondecoder when it ' s an instance of regiondecoder
removed the ` appName ` parameter from the ` configure ` method signatures in ` InputRC . java ` and ` InputRCTest . java ` to
add unit test for uninstall command that ignore ignore dependency .
[ java ] add argument to chrome headless option for chrome driver functional test
updated value assignment to use intern ( ) instead of hardcoded value to ensure consistent memory usage and prevent potential memory leaks
added support for " MOVE " in the connection status check to ensure proper handling of move operations in addition to existing operations
updated ISO8601 _ MONTH _ YEAR2 _ TIME and ISO8601 _ PERIOD _ MICROS dates in FixedDateFormat . java to
removed the shaded import of Lists from multiple test files to remove unnecessary dependency on curator shaded
[ hotfix ] [ network ] fix npe in hsbuffercontext . startspilling ( )
added permission checks for untrusted visits in the visit logic to ensure only authorized players can visit untrusted plots
added a check to return early if the service is already registered to prevent unnecessary processing when the service is not registered
updated the condition in BasicURLNormalizer to check for curly braces and added a test for curly braces in TestBasicURLNormalizer to
changed access modifiers of several methods in QuickstepTransitionManager from protected to private to enhance encapsulation and restrict access to these methods
added a null check for the ` res ` variable in ` EncodingConfiguration . java ` to ensure accurate comparison of clock rates between two encoders
added a method ` getProjectPath ( ) ` to ` ProjectGenerator ` and updated ` SeparatedProjectsGenerator ` to return an ` ImmutableSet
refactor calendar ID handling in HostLocaleProviderAdapterImpl . java to improve code clarity and ensure proper validation of calendar IDs
added a new file MSwingUtilities . java that provides utility methods for image scaling to improve error handling and image processing capabilities in the application
camel - 15836 : camel - mail - use asyncproducer instead of defaultproducer to make it easy to do the same thing .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable refreshing of resources during configuration changes
added unit test for onexception ( ) and onexception ( ) processor
added a new file ` Main . java ` and ` ScriptRenderer . java ` to implement integration of scripting functionality in the schema crawler tools
added a condition to check if the input state is ` __ NONE ` in the ` if ` condition in ` Request . java ` and implemented a
updated glyph descent calculation and added a method to check if the glyph dimensions are non - negative and improved touch focus handling in multiple classes to ensure that
replaced reportFailure calls with context . runCloseHooks in DeploymentManager . java and added a new test case in DeploymentTest . java to ensure proper
fix lexiconrecipemapping . getunlocalizedname ( ) in case the item be not in the lexicon .
updated sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve test reliability by allowing more time for interruptions
updated LoincHandler . java to check for non - blank shortName before checking if it is not empty to ensure that the shortName is not
fix for jollydayholidays . java : use classpath . getresource ( ) instead of classpath . getresource ( ) .
added a new utility class ` FieldUtils ` to handle field access and mutator methods in ` org . springframework . security . util . ReflectionUtils
updated assertions in DeferredAttr . java and added DoubleStaticImport . java with a test method in DoubleStaticImport . java to improve code clarity and
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for widgets to ensure proper layout is used for
do n ' t update the last xmpp account if it fail to load the last xmpp account .
added a new method ` setvar ` to handle setting variables in a line reader to provide users with easy access to variable usage and help information
fix catentity . onanimaltame not call onanimaltame .
added null check and improved error handling for unsigned values in WindowFrame . java to enhance code robustness and provide clearer error messages for invalid values
pdfbox - 2576 : add a test to verify that there be a HELV font in the widget
set app mode to app . getMode ( ) in PageListController . java to ensure the application state reflects the current application mode
added support for setting the Docker file path in ImageFromDockerfile . java and created a new DockerfileBuildTest . java file to enhance the
when cpu sampling and lock contention monitoring be run together , some thread can be register twice - do not override old info
updated the condition in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of a hardcoded value to improve clarity and maintainability
[ hotfix ] [ checkpointing ] add more logging to singlecheckpointbarrierhandler
added new table types to the Schema class to enhance schema management capabilities in the application
added a minimumSimilarity parameter to FuzzyQuery and modified FuzzyTermEnum to accept it to enhance flexibility in FuzzyQuery by allowing minimum similarity
replaced ` addActionsView ( ) ` with ` setActionsView ( ) ` in ` RecentsView . java ` to improve clarity and consistency
logback - 102 . add ` ` immediateflush ' ' property to outputstreamappender instead of ` ` immediateflush ' ' property .
added Rabbit and Kafka auto - configurations to the AutoConfigureAfter annotations in ZipkinAutoConfiguration . java to ensure compatibility with additional auto -
added null check for component removal in JLayer . java and created a new test class bug6875716 . java to ensure proper handling of
replaced ` shaded ` import with ` com . google . common . base . Function ` in multiple files to simplify import statements by removing unnecessary shade
fix bug in bciblockmapping . processblock ( ) and unwindblock ( ) .
refactor conditional checks and add getter and setter methods for legacy renderer to improve code readability and maintainability by consolidating related logic
replace intToFourBytes ( ) method with Ints . toByteArray ( ) in AbstractJweDecrypter and AbstractJweEncrypter classes
added null check for mObserver in isHomeAndOverviewSame ( ) method to prevent potential NullPointerException when mObserver is null
added a new ` ThenComparing ` method to the ` Comparator ` class and a corresponding test in ` TypeTest . java ` to improve
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
updated the end time setting in UserRuleAnomalyFunction to use the currentKey bucketMillis instead of null to ensure the correct end time is
added error handling for parsing integers in VisualScoreTagTest . java to ensure robustness by preventing crashes due to NumberFormatException
added a class loader parameter to the enhancer configuration in MockFactory . java to ensure the enhancer uses the correct class loader for enhanced functionality
added a new OriginalFormat class to handle object formatting in the ConverterWithEnumFormat to improve the handling of enum values during object parsing
added a static final PATTERN _ YYYY _ MM in FileStorageUtils . java to improve code readability and maintainability by avoiding hard
refactor JAWTRenderer class to improve code readability to enhance maintainability and facilitate future updates
camel - 15836 - camel - aws2 - lambda : fix autowire test for camel - aws2 - lambda
uservmmanagerimpl . validateorreplacemacaddress ( string , networkid ) do n ' t fail to generate a valid mac address for a
added a condition to check if the header name is " Authorization " to ensure proper handling of authorization headers in the proxy servlet
corrected the method call from ` submit ` to ` execute ` in ` TraceableExecutorService . java ` to ensure the correct execution method is used
added ` getDetails ( ) ` method to multiple authentication token classes , including ` getDetails ( ) ` , ` setDetails ( ) ` ,
updated the variable ` randUsePoints ` from ` nextBoolean ( ) ` to ` nextBoolean ( ) ` in ` SolrTestCaseJ4 .
replaced ` appendDot ( ) ` with ` endSentence ( ) ` across multiple classes to standardize method naming for better clarity and maintainability
updated formatForConsole method to accept a Locale parameter to ensure consistent formatting across different locales for better localization support
refactor GroovyParserVisitor to use a wildcard import and streamline argument processing to improve code readability and maintainability by using a wildcard import
added checks for bottom and right inset calculations in Border . java to ensure proper positioning of elements when they exceed specified limits
refactor gesture state handling to use a static final DEFAULT _ STATE to improve code readability and maintainability by centralizing state initialization logic
replaced ` DateTime ` with ` Instant ` and updated version formatting in ` LlapServiceDriver . java ` to improve compatibility with Java ' s date
refactor openblas and openblas _ nolapack classes to improve code organization and maintainability
do n ' t rely on commons - io to close the piece storage
added synchronized keyword to the initTxnMgr method in SessionState . java to ensure thread safety during transaction manager initialization
increased the timeout duration in ` AbstractDistribZkTestBase ` and increased the SO _ TIMEOUT in ` AbstractFullDistribZkTestBase
added a new class ` SearchResults ` that retrieves a list of documents from a ` Hits ` to provide a structured way to handle and
refactor threadCPURefresher initialization in CPUSamplerSupport . java to improve code organization and readability to enhance maintainability and reduce redundancy in the
updated the initialization of the ` primitives ` array and added a null check for it to ensure that ` primitivesTemp ` is initialized before use
added support for new version versions " 8.1 . 0 - cfs " and " sorted . 8 . 10 . 0 " in TestBackwards
updated feature flag to TEAMFOOD and updated text method in AppIcon . java to improve user experience by allowing two line labels in all
added a new API endpoint to retrieve tenant pools for a current instance to provide users with information about tenant pools for the current instance
refactor TopFieldCollector to include ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods to
updated the ` isAbstract ( ) ` condition in ` InlineBytecodeGenerator . java ` and added new test cases in ` InlineByteBuddy
added logging statements to CxxCompileStep , CxxPreprocessStep , and CxxPreprocessStep classes to improve error tracking and debugging capabilities
add utility method to stringutil . removecharacter ( string , string , string , string ) to remove -
fix ( core ) : add support for metadata _ service _ protocol _ key ( # 10786 )
added a new interface ` DataTransformer ` to the ` org . kie . api . process ` package to provide a mechanism for transforming expressions
updated the type of ` Object [ ] ` and ` Number [ ] [ ] ` from ` Collection < ? > ` to ` Number [ ]
removed the ` interesting ` flag from the ` visit ` method call in ` FormatStringChecker . java ` to simplify the code and improve readability
updated the initialization of SolrCore in ElectionContext . java to ensure the core is properly initialized before use
refactor ITestDbTxnManager to improve code structure to enhance maintainability and readability of the test code
replaced direct connection handling with a try - with - resources statement in DatabasePlatformFactory . java to ensure proper resource management and avoid potential memory leaks
added a test method ` testMapModel ` in ` CodeFirstPojoClient ` and ` CodeFirstPojoPojo ` classes to verify the functionality of
pdfbox - 4892 : do n ' t throw exception if xobj be null , a suggest by valerybokov
refactor selection and item listener logic in ScaleDialog . java to improve code readability and maintainability to enhance code clarity and ensure proper state management
rename the playerstepstatus method to tickbelt , since it do n ' t work on forge .
added logging for rectangle appearance stream creation in AppearanceGeneratorHelper . java to improve error handling and logging for field appearance stream creation
replaced SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to maintain the insertion order of keys
updated the ` TIME _ BETWEEN _ TOUCH _ AND _ DRAG ` constant from 1500 to 1000 and added a
updated the library preload from " libdc1394 - 22 " to " libusb - 1.15 " in dc1394 . java to
added a check for agentSupport before setting all constructors to public in MainMockTransformer and created new test classes for static methods with private constructors
pdfbox - 2576 : do n ' t try to decrypt object that be already present in the list
bug 58686 - fix window title not be set correctly on mac o x
updated depth calculation logic in XRSurfaceData . java to handle different pixel sizes to ensure depth is set correctly based on the image ' s
added error handling for unsuccessful responses in OkHttpDataSource to improve error reporting and provide more context in InvalidResponseCodeException
added a static method ` exit ` to the ` TopLogging ` class and modified its usage in ` TopThreadGroup ` to improve exit handling by
modified the initialization of the ` start ` variable in ` NativeRegExp . java ` to handle cases where ` regexp . isGlobal ( ) ` is
added an @ Ignore annotation to the OptaPlannerDaemonSolverTest class to mark the test as ignored due to upgrade to the latest optaplanner
corrected the variable name from ` lowIndex ` to ` highIndex ` in ` DefaultAllocator . java ` to ensure the correct allocation is used
added a method to clean entries without feeds in DatabaseCleaner and updated AdminREST to handle deletion of entries without feeds to improve resource management and
changed the return type of the appendToLabel method from void to AtomicCounter to enable method chaining for improved usability
[ java ] : replace BusySpinIdleStrategy with NoOpIdleStrategy in lowlatencymediadriver
added handling for NOT _ MODIFIED status in CacheControlHeadersWriter and corresponding tests in CacheControlHeadersWriterTests to ensure proper caching behavior when not
refactor instrumentation partial evaluation test to use toolevalnodefactory instead of spliceinstrumentlistener
updated the paintTabArea method in SynthTabbedPaneUI to use insets to improve rendering accuracy of tab area in the tabbed pane UI
updated the ` getKrakenDepth ` method to accept an additional ` args ` parameter and added validation for the orderbook size argument to ensure
camel - 14263 : camel - file : fix issue with absolute path on window .
added a new method ` build ` to ` JavaProvenance ` and modified imports in ` MavenProjectParser ` and ` MavenProjectParser
added trace logging for registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java and a corresponding test in TestInbuilt
updated loop iteration from 100 to 200 in CloudStateUpdateTest . java to improve test coverage and ensure robustness
patch by jbellis ; review by gdusbabek for cassandra - 141 . patch by jbellis
added a check for writable output files in the ` NativeErrors . java ` class to provide clearer feedback on whether the output file is still writable
added PackageInfo handling in LauncherModel . java to check if the application info is enabled to ensure that the application is enabled before proceeding with
cloudstack - 10220 : do n ' t throw exception when database upgrade fails
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a new test for non - skippable exceptions in
replace startsWith ( completed ) with regionMatches ( ) in LineReaderImpl . java to improve performance by avoiding unnecessary string comparisons
added imports for SourcesFileErrors and refactored data table handling in Recipe . java to improve code readability and maintainability by
added task dismissal logic for the overview in TaplTestsTaskbar to ensure that all tasks are dismissed when the overview is available
add dbupgradesystemvmtemplate interface to allow update of system vm template
removed unnecessary null checks and simplified connection handling in LdapClient . java to improve code readability and reduce unnecessary null checks
refactor code to use a local variable for the current index to improve code readability and maintainability
patch by jbellis ; review by gdusbabek for cassandra - 1446
added a check for synthetic fields in ReflectUtils . java to skip processing of synthetic fields to improve performance by avoiding unnecessary processing of synthetic fields
added LoggerProvider class and integrated it into Configuration . java and ApplicationController . java to improve logging capabilities and facilitate dependency injection in the application
changed the type of ` ImmutableMap < String , String > ` from ` ImmutableMap < String , String > ` to ` ImmutableMap . Builder < String ,
added a warning to warn users when multiple glue classes configure the spring context is deprecated to ensure users are informed about the deprecation of multiple glue classes
added a deepStart method to Startables that accepts an array of Startables to enhance functionality by allowing deep cloning of Startable objects
removed deprecated ` reservePrimitiveExtensionArray ( ) ` method from ` Shape ` and its implementation in ` ShapeImpl ` to clean up the codebase
make the laser table a block , so it can be use directly .
simplified the object name check logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated policyEntry ' s expireMessagesPeriod assignment in MemoryLimitTest . java to set it to zero to prevent test failures due to excessive memory consumption
refactor conditional checks in RequestHandlers . java for better readability and performance to improve code clarity and maintainability by eliminating unnecessary null checks
modified the method to replace ' - ' with ' . ' in the servlet name to ensure consistent logging format by removing trailing commas
updated import statements and modified python environment handling in ProjectBuildFileParser . java to enhance code clarity and ensure only valid Python path values are processed
updated method calls and error handling in DirectAudioDevice and Toolkit classes to improve code clarity and ensure robustness against invalid audio frame sizes
updated the handling of null enums in ElasticSearchStringLookupService to return an empty Optional instead of null to improve robustness by avoiding potential
updated string formatting for unexpected end of segment in CommitLogReader . java to improve clarity of error messages for better debugging
added a policy assignment to WebSocketSession to ensure the WebSocket session uses the correct policy from the container scope
removed static field detection logic in Java2TypeScriptTranslator . java to simplify the logic for determining static field initialization
added a webroot argument to the context creation in UserService . java to allow users to specify a webroot for context creation
test : migrate camel - spring - dsl to junit 5 ( # 4564 )
[ netbeans - 4071 ] remove reflection from monitoredvmutil . isattachable ( )
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation logic
replaced specific trade DTO imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and provide a placeholder
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is properly reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground or mOriginalBackground are
removed unnecessary semicolons from the range check in FloatingDecimal . java and added a new class ToString . java to improve code readability and
updated the property type check in PropertyDescriptor . java and added a new test class Test7189112 . java to improve type validation for property
removed the maxVersion initialization in RealTimeGetComponent . java to simplify the version retrieval process by eliminating unnecessary maxVersion
added logic to set the ORIGIN header based on whether the URI is secure or not to ensure the ORIGIN header is set correctly based on the
refactor animation logic in RecentsView and TaskView to improve UI responsiveness based on overlay modal state to enhance user experience with smoother
updated error messages in ORCRecordReader to include field names and updated method calls accordingly to improve debugging capabilities by providing more context in error messages
remove castvideos . m3u8 and basic . m3u8 example
removed unnecessary imports and simplified the interface definitions in PersistenceProvider . java to streamline code and improve readability by eliminating unnecessary dependencies
updated Log references from " ExecRPCInvoker . class " to " org . apache . hadoop . ipc . RPCEngine . class " across multiple
added diagnostic logging to TestSpecificCompiler and implemented a test for union and fixed fields in TestSpecificCompiler to improve error handling and ensure warnings are logged
modified the session management logic in WebSocketEndpoint . java and added a new test for session closure in WebSocketIT . java to ensure that the session is
increase delay from 1 second to 10 second in order to avoid flaky test .
[ xwork - planner - planner - planner - planner - planner - update xmlconfigurationprovider to use Apache strut
added conditional checks for stream stopping in WebCamInputPanel . java to ensure proper resource management and prevent potential memory leaks
changed ` bittrexChartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType `
[ geot - 6831 ] fix example for geotools . geotools . geotools . geotools2
updated the method call from ` substream ( 200 ) ` to ` skip ( 200 ) ` in ` TargetType58 . java ` to improve
hhh - 10956 - fix npe in composite identifier generation
rename findfulltextaction and downloadfulltextaction to downloadfulltext
updated URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl classes to enhance URI registration functionality to include host and port information for better context
renamed WebSocketMapping and WebSocketUpgradeFilter classes to improve clarity and consistency in naming conventions
added a blank check for the OSDb hash before retrieving the API result to avoid potential NullPointerExceptions and improve code robustness
added token transfer functionality in RuntimeImpl and MUtil classes to handle token transfer based on contract values to enhance security by ensuring tokens are transferred correctly based
camel - 14263 : camel - ftp : do n ' t delete file in stepwise mode
corrected the spelling of " getSearchBindDN " to " getSearchBindPassword " in JacksonLDAPConfiguration . java to ensure consistency in
added assertions and modified hybrid hash table configurations in MapJoinOperator . java and HybridHashTableContainer . java to improve join result validation and
added a ` endPoint ` parameter to the ` HTTPSPDYAsyncEndPoint ` class and updated related methods in ` ServerHTTPSPDY
added " id " parameter to intent in multiple adapters across multiple adapters and TweetFragment classes to ensure the correct ID is passed for the
added proxy authorization handling and refactored disconnection logic in HttpURLConnection . java to improve handling of proxy requests and enhance code clarity
[ bugfix ] fix thread safety issue in tracecontext . getnumchildren ( )
updated JWT ( 9 , 0 , 0 , 0 , " jwt " ) and RESPONSE ( 9 , 0 , 0 , 0 ) in
disabled the test for NullPointerException in ValueTypeTests to temporarily disable the test due to a known issue
[ kie - issues # 283 ] remove unimplemented resourcefactoryserviceimpl from kieresources ( # 283 )
updated predicate types from IN to NOT _ IN across multiple predicate classes to improve clarity and consistency in predicate usage
updated exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to improve error handling robustness to enhance user experience by providing clearer account
added null check for witnessService before calling validateWitnessPermission to prevent potential NullPointerException when witnessService is null
updated the string concatenation in JoinDesc . java to use getExprString ( ) instead of getExprString ( ) to improve code clarity and ensure
added a conditional check for Javadoc presence before setting the JavaDoc in AbstractJavaClassTranslator . java to ensure that the JavaDoc is only set
renamed ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and added new classes ` RedefineInterfaceCall .
replaced redundant revalidate ( ) calls with revalidateWithAnimationSafety ( ) in Tabs . java to enhance security by ensuring animations are properly handled during
[ hotfix ] [ metric ] return unregisteredmetricsgroup instead of unsupportedoperationexception
refactor y calculation in Polygon . java to use oldX variable to improve code readability and maintainability
updated cache creation method to accept a Configuration parameter to ensure type safety by explicitly casting to Configuration
added a check for empty stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a
refactor ShadowCookieManager class to improve cookie management functionality to enhance performance and maintainability of cookie management
added a new configuration property ` METASTORE _ AUTHORIZATION _ EXTERNALTABLE _ DROP _ CHECK ` in ` HiveConf .
added a check for ApplicationType . Desktop and ApplicationType . WebGL in Stage . java and adjusted the draw method in ProgressBar . java to
[ gr - 32233 ] fix the problem of getbytebuffersupport return null if the default byte order be not set .
updated the property name for PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the web view initialization logic to support dynamic web login URL
corrected the spelling of " Paramter " to " Parameter " in the ExecutorException message to ensure clarity and accuracy in error reporting for JDBC
added a parameter to the ` @ RequestParam ` annotation in ` AuditEventsMvcEndpoint ` and updated the ` perform ` method in ` AuditEvents
rename ` ExponentialTimer ` and related classes to ` PreciseThroughputTimer ` and update related references to clarify the purpose of the timer
added functionality to remove and reset soft bodies in SoftBodyTest . java to ensure proper cleanup of soft bodies and prevent memory leaks
[ hotfix ] [ table - common ] make sinkfunctionprovider public
[ zeppelin - 4071 ] fix log message when zeppelinhub fail to connect .
added a new test class ` JingleTest ` to verify that no redundant namespaces are present in the Jingle XML output
fix a nullpointerexception when check for redplasma / redplasma
added HTTP / 2 header handling to BareResponseImpl and updated connection handler to extend HttpToHttp2ConnectionHandler to improve response header management and
reformatted conditional statements in Remove . java for consistency to improve code readability and maintainability
updated the delimiter logic in SimpleReport . java to include two lines instead of just one to improve clarity and accuracy in the report output
added a new class ` T6863746 ` and modified the ` JavapTask ` to ignore symbol files to ensure proper handling of symbol
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` start ` method from the ` TickerDemo ` class to
refactor switch - case structure and exception handling in Runtime . java to improve code readability and ensure contract existence is validated before proceeding
make sure input3d be only create when not in applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw parserexception in scripttagpayloadreader . parsepayload ( )
updated the method ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` in ` JpaRepositoryConfigExtension . java ` to improve clarity by
updated the ` getExecutableCommand ` method to return an ` List < String > ` instead of a string representation to enhance flexibility in command execution by
[ fix ] iosgles20 : set x , y , width , and height correctly
deleted the UploadPathActivity . java file and modified upload path handling in ComponentsModule . java to streamline the codebase by eliminating unused components
updated return statements in SimpleTextFieldsReader to check if indexOptions is DOCS _ ONLY to ensure proper handling of total and sum total term
fix ( constructor ) : ensure that implicit constructor be set correctly ( # 2195 )
added a database parameter to populateValidateNullableIfNeeded and populateValidateForeignKeyIfNeeded methods in ColumnSnapshotGenerator . java to ensure compatibility with OracleDatabase when populate
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
updated the variable name from ` indexOptions ` to ` this . sortedPackedPoints ` in ` PointInSetQuery . java ` to improve code
added substring extraction for rawName in SchematicHandler . java to ensure proper formatting of rawName strings for proper handling
added case handling for empty collections in AbstractCollectionAssert . java and updated the return statement in CollectionAssert _ isUnmodifiable _ Test . java
removed the static modifier from the Option enum in ProcessExecutor . java to simplify the enum declaration and improve code readability
refactor dialog handling in Compose and ComposeActivity to conditionally close the dialog based on Twitlonger settings to improve user experience by
replaced the toggleKeepInSync method with a CheckBox for managing file synchronization to streamline the synchronization process and improve code maintainability
replaced ` DatatypeConverter . parseBase64Binary ` with ` java . util . ImageUtil . getEmbeddedBase64Image ` and added unit
added a new file ` ControllerCounter . java ` and ` DBCallback . java ` in ` org . springframework . datastore . document .
added a final modifier to the deleteTicket method signature in EhCacheTicketRegistry . java to enforce immutability of the ticketId parameter
added a new file ` FlywayMigrationRunner . java ` to run a Flyway migration process using Spring ' s application context to facilitate
replaced calls to ` isEmpty ( ) ` with ` size ( ) ` in ` HashMap . java ` and added a new class ` OverrideIsEmpty
updated the VERSION constant from " 0.9 . 0 " to " 0.9 . 0 " to reflect the latest version of the TsFileDB library
added nullable annotation to the modify method in CompressionCodec and added logging for missing ORC compression modifiers in WriterImpl and ZlibCodec to improve code
added null check for mainClass and improved jar creation in LauncherHelper . java and TestHelper . java to ensure robust handling of missing main manifest
corrected the spelling of class names in multiple test files to improve code readability and maintain consistency in naming conventions
fix graal node count not be support by graal .
refactor cellcopypolicy to use constructor instead of clone to make it easy to create a copy policy .
added a static method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` for resetting the ` sIconLoadResult `
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java `
updated margin calculation in IconRecentsView to support landscape orientation to improve layout responsiveness for different screen orientations
deleted the AddAdapter . java file to remove unused adapter class to streamline the codebase
fix empty list in nonstaticlifter . getconstructorcode ( ) .
refactor conditional checks for processSortCols and listBucketCols in OpTraitsRulesProcFactory . java to improve code readability and maintainability
refactor TestLogWatcher to use a looper method to check if a new watcher finally registers to improve error handling and provide clearer feedback
added a print statement to the Java2TypeScriptTranslator class to enhance type output formatting for better compatibility with TypeScript
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the latest release
added a conditional check for the SPRING _ AOP _ PROXY _ TARGET _ CLASS property in TraceEnvironmentPostProcessor . java to
removed the singletonLock variable from TypeCachingBytecodeGenerator . java to simplify the locking mechanism by directly using BOOTSTRAP
add example for when ( ) / when ( ) / when ( ) / when ( ) / when ( ) / forwardclass ( )
added a ` appendToFile ` parameter to the ` writeFile ` method and modified the ` writeFile ` method to accept an optional ` appendToFile ` parameter
refactor Maven repository mirror handling in MavenExecutionContextView and MavenRepositoryMirror classes to improve clarity and correctness of repository mapping logic
added a ` name ` parameter to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer
updated the condition in ` OAuth20CallbackAuthorizeEndpointController ` to use ` matches ` instead of ` equals ` for matching service redirect URIs to
replaced calls to ` declaredAnnotations ( ) . values ( ) . toArray ( ) ` with ` AnnotationParser . toArray ( declaredAnnotations ) ` to
updated method signatures in UserManagerCompatVL from ` getBadgedDrawableForUser ` to ` getBadgedIconForUser ` and `
updated the default line separator in GlobalConfiguration to include LF or CRLF for output to provide clearer guidance on the operating system ' s default
[ cmu ] fix isderivedclass check in cmu - frontend
sanitize the input in the model so that it do n ' t appear multiple time .
chore : update java and python dependency ( # 107 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include an IOException and added a test for the ` hello - world . txt
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future feature additions
updated container type assignment in AllAppsRecyclerView and modified logDeepShortcutsOpen method in UserEventDispatcher and AllAppsContainer classes to improve
hbase - 26486 add deprecate key to hbase . ipc . server . allocator . buffer . max and hbase . ipc .
[ native ] add support for left _ table in join query
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types from the executable to improve clarity and functionality of the method ' s
refactor TestFSTs class to improve code readability to enhance maintainability and facilitate future updates
ggb - 221 fixed height calculation of input box for non - latex string
hbase - 26464 increase the initial size of the region split policy to reduce memory usage
removed unnecessary model reset and startLoader calls in LauncherClings . java to streamline the loading process and improve code clarity
refactor managedselector to use lists for keys , updates , and updatesAt to improve code clarity and ensure proper initialization of data structures
added a set of excluded datasources to the SpringDataSourceBeanPostProcessor class to control the exclusion of specific datasources from processing
removed null check for ` cb ` in ` TableValuesView . java ` and simplified conditional statements in ` TableValuesPanel . java ` to improve
camel - 15836 - camel - aws2 - kinesis : make it easy to configure aws client
refactor VelbusSensorHandler to use a loop for channel masking to improve code readability and maintainability by reducing duplication
disable unfavorable benchmark in boundedlocalcache test due to unfavorable benchmarks
added a test method to validate database path validation in IoTDBSessionSimpleIT . java and PartialPath . java to ensure that illegal database
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are reset before processing new data
renamed ` desiredWorkspaceLeftRightRightMarginPx ` and ` desiredWorkspaceLeftRightRightPx ` to ` desiredWorkspaceHorizontalMarginPx
reformatted code for improved readability in CharTokenizer . java to enhance code maintainability and clarity
chore : update gapic - generator - java version to 2.1 . 0 ( # 560 )
updated the XENSERVER _ NETWORK _ LABEL constant from " xenservernetworklabel " to " xenservernetworklabel " to
updated libGDX version numbers and nightly version in DependencyBank . java to ensure compatibility with the latest features and improvements in the library
added a private Set < String > metricNames and its getter method to SolrCore . java to improve thread safety and encapsulation of metric
updated URI handling in MavenManifestFactory . java to use Fs . fromUrl for file path retrieval to improve compatibility with file system URL handling
replaced direct property checks with a static final boolean variable IS _ MAC to improve code readability and maintainability
refactor JdbcAggregationRepository class for improved readability to enhance maintainability and clarity of the codebase
added a method to clear and merge slotList from another Frame instance to ensure slotList reflects the current state of the frame
initialize m _ predCount to - 1 in PredicatedNodeTest . java to initialize the predCount variable to a default value of - 1
added imports and overridden the mergeProperties method in ConfigurationSpringInitializer . java to ensure consistent handling of configuration properties across the application
[ hotfix ] [ log4j2 ] fix classcastexception in command line log setup
replaced HashMap with LinkedHashMap in aliasToWork and related classes to maintain the insertion order of elements in the map and plan operations
added a check to determine the jdbcHandlerMap if it is null and the type is an instance of Class to ensure proper mapping of type handlers based
added debug logging statements to multiple item writer classes to improve traceability and debugging capabilities during item writing operations
modify the parsing of wellformed strings in LocaleUtils . java to ensure that wellformed strings do not exceed the last character
added asynchronous execution to the close handler in VertxHttp2Handler and updated context handling in Http2ServerResponseImpl to ensure proper context management during
improve performance of xssfevaluationworkbook . gettable ( string ) and xssfevaluationworkbook . gettable ( string
updated ` SchemaTextFormatter ` to include ` BASIC ` and refactored conditional statements in ` BaseSchemaTextFormatter . java ` to improve
updated MongoFactoryBean references from MongoFactoryBean to MongoClientFactoryBean in MongoNamespaceReplicaSetTests . java to ensure compatibility with the latest MongoDB
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order and maintain insertion order
added a check to ensure the operator tree is properly cloned in SkewJoinOptimizer . java to ensure that the operator tree is properly cloned before processing
added a null check for the client ID in DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to handle cases where the client ID is
added a patch to clear the AchievementList field _ 187981 _ e in StatList . java to ensure that the AchievementList is
initialize ` userName ` , ` productName ` , and ` productName ` to empty strings in ` MutableDatabaseInfo ` and ` MutableJdbcDriver
updated permission link from " share read " to " share view " in QuickSharingPermissionsBottomSheetDialog . java and SharingMenuHelper . java
added LongBuffer support in ByteBuffersDataInput . java and implemented readLongs method in ByteBuffersDataInput . java to enhance long data handling and
refactor file time handling to use separate seconds and milliseconds in UnixFileAttributes . java and Basic . java to improve clarity and maintainability of time
added a new file TestNoEagerReclaimOfHumongousRegions . java with a class TestNoEagerReclaimOfHu
added search bar visibility management in AllAppsContainerView to control the visibility of the search container based on user preferences
updated the method call from ` env . router ( ) . get ( ) ` to ` env . routes ( ) . get ( ) ` to
added null checks for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during chart rendering
added a new action to reload the page in the doMenu to enhance user experience by allowing users to reload the page easily
changed log level from info to warn for various log messages from info to warn in SQLManager . java to enhance the clarity and specificity of log
updated the minimum Spring version from 3.1 . 7 . RELEASE to 3.1 . 8 . RELEASE to ensure compatibility with the latest security features and security
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided to avoid runtime exceptions
[ geos - 5131 ] use ServiceLoader instead of geoserver . lookupproviders ( ) .
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added a method to stop the statement executor in JdbcConnector and updated logging in HiveViewImpl to improve resource management by ensuring the statement executor is properly
allow external entity to be disable by default , so that we do n ' t have to disable it .
replaced JdbCommand . cont ( ) with Jdb . contToExit ( 1 ) in JdbStopThreadidTest . java to improve
added a method ` getType ` to ` ShadowContentResolver ` and a corresponding test in ` ContentResolverTest ` to ensure that the ` getType ` method
[ hotfix ] [ table - common ] fix classcastexception in expressionthreadpoolmanager
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure compatibility with the Vert .
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable . addCaptureListener ` method to improve clarity and consistency in listener handling
use availableprocessors ( ) . availableprocessors ( ) * 3 instead of 10
[ hotfix ] [ runtime ] log error when establish resource manager connection in taskexecutor
added null check for classFile in LambdaRewriter . java and modified return statements in AbstractMemberFunctionInvokation . java to improve error handling
updated the exception message to include additional parameters for minimum and maximum values to improve clarity of error messages for better debugging
updated the ` onMessage ` method to accept an ` E ` parameter and improved logging for delayed telegram handling to enhance message processing by providing context
added new classes ` Cursor ` , ` Database ` , ` Row ` , and ` Cursor ` , ` Database ` , and ` Cursor ` ,
refactor assertions in AbstractIterableAssert , AbstractPathAssert , and AtomicReferenceArrayAssert to improve code organization and maintainability
no effective change - add setbeanid ( ) method to beanserver
updated the XSLT transformation method in RuleSetToDocs . java to use a new method for obtaining the add - menu - to - site descriptor xsl
added a private List < RequestMatcher > matchers list to manage request matchers to improve the management of request matchers in the HttpSecurity class
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing functionality for ContactResource instances
add getrequest ( ) and getrequest ( ) to abstractprocessor , remove unused method .
updated log messages in FileManager . java to improve clarity and consistency to enhance readability and provide more informative feedback during the save process
added tearDown ( ) method to TestJdbcDataSource and tested index searcher in TestIndexSearcher to ensure proper resource management and prevent memory leaks during
refactored syntax tests in SyntaxTests . java for improved readability to enhance maintainability and clarity of the code
refactor ConnectionModel , ModeledConnection , and ModeledConnection classes to improve code organization and maintainability
tika - 3639 : remove unused tika parserdecorator from tika - core
fix security manager to check for non - dedicated server .
removed unnecessary parameters from AccountUtils , IndexedForest , and CustomPopup classes to simplify the code and improve readability
updated parameter name from " swap " to " rename " in CoreApiMapping . java to improve clarity by using a more descriptive parameter name
added a new test method ` testJsxComment ` and modified token parsing logic in ` JsLexerJsxTest . java ` and `
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for testing purposes
added error handling for missing Buck configurations in BuildEndToEndTest . java and updated test cases in CxxEndToEndTest . java
added physical memory management checks in TestStringBufferAndBuilderGrowth . java to verify that the machine has sufficient physical memory for testing purposes
refactor ` MapToLocalDateConverter ` to use ` ConversionService ` for better encapsulation to improve code readability and maintainability
added a success flag to the HiveMetaStoreClient class to indicate successful execution of the Hive meta store
updated conditional checks in ResourceReferenceInfo . java and modified bundle creation in Dstu2BundleFactoryTest . java to improve code clarity and ensure
updated conditions to check for " amp . twimg . com " alongside " vine . co / vine . com / v / " in
added a @ Deprecated annotation to the AreaReference class to indicate that the class is outdated and should not be used in new code
refactor ElementType and Target classes for improved readability to enhance maintainability and clarity of the codebase
added assertions and modified reference kind handling in MemberName . java to improve error messaging and ensure correct reference kind validation
changed the default value of ` submitKeyUpdates ` from ` false ` to ` true ` in ` SelectorManager . java ` to ensure thread safety
added a condition to check if the first event is an instance of MouseEvent to ensure proper handling of mouse events in the editing process
camel - 14263 : camel - bean - add support for bean static method in beanexpression .
http : / / issues . apache . org / jira / browse / amq - 4970 - fix typo in javadoc
[ java ] rethrow unchecked exception in agentrunnertest .
added @ Override annotations and updated descriptions for various Java classes to enhance clarity and consistency in the codebase
refactor face addition logic in ObjLoader . java to improve clarity and structure to enhance maintainability and readability of face management logic
refactor ProcessEngine class to improve code structure to enhance maintainability and readability of the code
corrected the spelling of " reentrantLock " to " lock . lock " in multiple classes to improve code readability and maintainability
added a " mavenPackaging " parameter to the ` getBomReference ` method in ` PrintMavenAsCycloneDxBom `
updated the back method call to include the component reference to ensure the correct component is returned for navigation
[ java ] do n ' t try to verify server - to - server certificate .
updated generic type parameters in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to improve type safety and clarity in method signatures
updated method calls in Fetcher , Generator , and Injector classes to use getConf ( ) instead of NutchConf to ensure consistency in configuration
[ bugfix ] do n ' t removeboardspane if the stub be already deselected
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the session ID for external use
added null checks for node and edge time interval in ImportContainerImpl . java and updated time interval initialization in ImporterGEXF2Test .
removed the " - logLevel " command from the ` withCommand ` method in ` MockServerContainer . java ` to simplify the command execution by removing
updated error logging to include the exception message to improve debugging by providing more context in error messages
replaced RobotsHonoringPolicy with CrawlMetadata in DispositionProcessor . java to simplify the retrieval and setting of robotsHonoring
added JUnit @ Ignore annotation to the ITSystemTest class to temporarily disable tests that are not ready for execution
[ java ] fix broken test on window
added imports for ByteArrayInputStream , DataInputStream , ZipInputStream , and alternativePath method in ExpectNewDemo . java to provide a way to retrieve the alternative
added a call to ` input . getFirstFilter ( ) . init ( ) ` in ` LogEntryParseTester . java ` to ensure that the
[ java ] add protectiondomain parameter to bufferalignmentagent .
added dispose ( ) method to waterripples to clean up resources in the WaterRipples class to prevent memory leaks
added a configuration option to disable unsafe external table optimizations and a semi - join feature in DynamicPartitionPruningOptimization to enhance performance by preventing
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
change wallpaper offset from - 30 to 0 in Launcher . java and set it to 0 in Workspace . java to adjust wallpaper positioning
updated return value in SybaseASADatabase and modified sequence query logic in SequenceSnapshotGenerator to ensure correct sequence retrieval based on database type
nifi - 10254 : add test case for commit / rollback on dbcp cleanup
added parent directory creation and error handling in SnapPuller and TestReplicationHandler to ensure proper directory structure and validate replication behavior
updated AppTarget id from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure consistency with naming conventions
updated framer methods to accept an output buffer as a parameter to enhance frame processing by allowing additional data to be passed during frame operations
updated method signatures in OAuth2LoginAuthenticationFilter and related classes to improve clarity and consistency to enhance code readability and maintainability by standardizing parameter
added extended message to the map creation and delimiter functionality in GenericUDFStringToMap . java to enhance user understanding of the delimiter functionality
refactor PlainFormatter to use ChronoUnit for formatting instant strings to improve readability and maintainability of the code
increased TIMEOUT _ MS from 1000ms to 3000ms and refactored the close method in AgentRunner . java to improve timeout handling and
hhh - 13213 avoid reflection in classloadingstrategyhelper . getprivatelookup ( )
refactor Mockito class to improve readability to enhance maintainability and facilitate future updates
updated the debug log message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify the purpose of the event logging
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily ignore a test that produces at least one sample result
updated the exception message to specify that the row and column must be greater than zero to improve clarity of the error message for better debugging
[ wagoncart ] fix error in decisionnode and wagoncART
added sorting functionality for BoundSheetRecord in XLS2CSVmra . java and implemented BOF comparator in BoundSheetRecord . java to improve
refactor calculations in ThrustCurveMotor to use startThrust and endThrust instead of avgImpulse to improve clarity and
added inputManager parameter to InputSystemJme initialization in NiftyJmeDisplay . java to enhance input management capabilities in the application
refactor code for improved readability and maintainability in UniverseBuilder . java to enhance code clarity and ensure that the offset is non - negative
remove block . getmesh ( ) , deprecate in favor of blockmesh
[ hotfix ] [ yarn ] rename keytabpath to localkeytabpath in yarntaskmanagerrunner
added a new option ` EMPTY _ WORD _ OPTIONS ` in ` Example . java ` and modified matcher logic in ` LineReaderImpl .
added a check for writeCommitLog in the pushViewReplicaUpdates method call to ensure that view replica updates are only pushed when the writeCommitLog
added functionality to automatically open the web button in the CaptureActivity and PreferencesActivity classes to enhance user experience by allowing users to easily open web links
added a new test method ` testBatching ` to ` JoinedTableTest . java ` to test batching behavior in ` Hibernate `
added exception handling for EntityExistsException in JpaPersistenceService to improve logging clarity for duplicate timestamp issues during persisting
deprecated the -- format option and updated its usage in the CucumberOptions and RuntimeOptionsFactory classes to improve code clarity and encourage the use of
removed the save ( ) method from the PMS class to streamline the code by eliminating unnecessary method calls
simplified the back key handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of newCapacity in AbstractStringBuilder . java and added a new Capacity class Capacity . java to improve the correctness of the
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to improve user experience
patch from peter fassev : add support for endnote reference in xwpfdocument
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager . java and updated credential retrieval method in CasEventsReportEndpointTests
added a test method for retrieving the GDAL version information in BridjOGRDataStoreTest . java to verify the correctness of the
added a new file ` Lifecycle . java ` to manage network error handling to provide a framework for managing network errors in the application
updated DeviantartRipper to include a custom cookie for URLs and added a retry mechanism for 404 HTTP requests to improve error handling and ensure
removed unused imports and simplified the loop structure in BodyTubeShapes . java and RocketFigure . java to improve code clarity and
added support for scaling and scaling of surfaces based on the RETINA flag in PJOGL . java to enhance rendering flexibility based on
fix ( create ) : disable offline option for dartlang . org ( # 3639 )
refactor DiskDocValuesConsumer to use BlockPackedWriter instead of PackedInts to improve performance and maintainability of the code
refactor defaultroutebuilder to use a sortedset instead of a collection to improve performance .
removed redundant data handling and stream processing in GoAwayTest . java to simplify code and improve readability
added property handling for Map and FluentSetterBean in ReflectionUtils . java and created a new FluentSetterBean class in EasyRandomTest . java to
refactor ` post ` and ` send ` methods to return ` HttpResponse ` instead of ` ByteStreams ` to improve type safety and clarity in
sort by : - reverse : add test to make sure we get the correct folder
updated logging statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity by using a more descriptive
add writeimagescalinginformation and writeimagescalinginformation to rtfdocumentsettings .
added a conditional check for aggregate function name in TSServiceImpl . java to include the full path representation based on the execution context
replaced LuceneTestCase with WithNestedTests . AbstractNestedTest in TestExceptionInBeforeClassHooks and added cleanup methods in TestSystemPropertiesInvariantRule to
added functionality to select and display the x - CAP enable and server URI in the PresencePanel to improve user experience by displaying the x - cap
added a method to handle exception handling in the Dispatcher class and updated error handling logic in dev mode to improve error handling and provide more control over error
added stopTextEditing methods to CodenameOneImplementation , Textbox , and TextArea classes to manage text editing lifecycle to improve user experience by ensuring text
nifi - 138 : fix flowfilecontrolrate to handle non - existing group attribute in controlrate .
updated the ` showDialog ` method to include a ` isNewComponent ` parameter and modified the ` selectPreset ` method to accept a new parameter
added error handling and logging for chat messages in ChatAnnotation . java to improve debugging capabilities and ensure thread safety during message sending
added a check to ensure the HTMLDataFlavorTest is only executed on Windows to prevent test failures on non - Windows operating systems
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to TRANSACTION _ SERIALIZABLE method in TransactionIsolationLevel . java
modified the way newRecids are added to the queue in AsyncWriteEngine . java to improve resource management by allowing more time for the queue to
use java . util . zip . ZipFile instead of org . apache . tomcat . util . compat . jrecompat . jre . jre
added a null check for the command class in the RegisteredServiceSimpleFormController . java file to ensure that the command class is only created when
change disk _ failure _ policy from best _ effort to ignore and add ignore to disk _ failure _ policy .
removed the ` public ` access modifier from the ` rip ` method in ` RipStatusHandler . java ` to allow external classes to access these methods
[ java ] do n ' t use inet address when discover peer discovery .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner . java to streamline the code by eliminating unused functionality
updated import statements and modified computePartitionAssignment method to include ClusterDataCache to enhance rebalancing functionality by incorporating cluster data cache management
simonstewart : remove the deletecontainer method and add autoremove option to containerconfig
simonstewart : do n ' t attempt to parse a selenium command with a pipe - separated pipe
test : make createglossarytests more resilient to failure
updated schema reference references from ` allOfRef ` to ` components _ SCHEMAS _ REF ` in ` ModelResolver . java ` to
updated the ` EntityDeletedEvent ` class to use ` JsonUtils . writeValueAsString ` instead of ` event . deleted ` to improve code clarity and
added support line matching for the " gop " format in FormatConfiguration . java and updated related imports in LibMediaInfoParser . java to
added a new file TestProfileReturnTypePrinting . java that implements a loop with multiple iterations to demonstrate the usage of the TestProfileReturnTypePrinting
added locking mechanism for concurrent access to CURRENT _ VERSION _ INFO in ParseConfigUtils . java to ensure thread safety during configuration updates
added support for AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and prevent potential memory leaks
simonstewart : remove the @ ignore annotation from firefoxprofiletest . java
updated return statements in HasAndroidDeviceDetails . java and modified getSystemBars ( ) to return a Map < String , Map < String , Object
make sure projectstats be only add when the bug instance be not dead .
bugfix # 224 , disable label shadow , recent , recent , recent , recent , recent , recent , recent , recent , recent , recent
removed multiple @ Override annotations from CacheControlImpl . java to improve code clarity and maintainability
added a check for empty recurrences in ScheduledAction . java and a corresponding test in ScheduledActionTest . java to ensure that weekly actions do not
refactor upload task handling in ShareActivity to use a menu item instead of a button to improve code organization and maintainability by consolidating button
refactor multiple Java files related to message handling to improve code organization and maintainability
added the ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to load exchange metadata from an input stream
added WritableSerializer to JSON serialization for various Writable types in CrawlDbReader . java to enable proper handling and serialization of various Writable types in JSON
remove the testerrequest . getremoteaddress ( ) from testjaspicbasicauthenticator . java
added a configuration pid to the MDNSDiscoveryService component to enable the discovery service to access the MDN service configuration
added null check for messageItem before scrollToPositionWithOffset to prevent potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in TestBPIndexReorderer . java to include ForkJoinWorkerThread to enhance thread pool configuration for better performance
removed duplicate assertions for role dependencies in RoleCommandOrderTest . java to improve code clarity and maintainability
added a new method ` restoreLocalInfoFromTableInfo ( ) ` and modified ` writeObject ` to include a ` dedupWithTableInfo
reformatted code for consistency and readability to improve code readability and maintainability
added transformation and flipping functionality in BitmapFontTest . java to enhance image rendering capabilities in the application
added a condition to check if the PythonUtil . isBuiltInAggregate ( x ) is a builtin aggregate to ensure that only non - builtin aggregates
[ java ] do n ' t mark a pending echo if it ' s already in the queue .
add getunreachabletokenowners ( ) method to get unreachable token owner .
geosymbolic : fix coordmultiplication to not change to multiplication
updated content type handling in FormAuthenticator and added getter and setter methods in SavedRequest to ensure the correct content type is set based on the request
updated access modifiers and added null checks for localGraphicsEnvironment in XToolkit . java to improve code safety and ensure localGraphicsEnvironment is not null before
refactor RecommenderJob , RecommenderJob , and AbstractJob classes to improve code organization and maintainability
[ hotfix ] [ runtime ] use read / write locks in environmentimpl .
added a new test method ` testReadIdentityProviderInOtherZone _ UsingZone _ UsingZone _ Token ` to ` IdentityProviderEndpointsMockMvcTests
updated job scheduling to use ExpireJob instead of JobHandle and added null check for timestamp in PointInTimeTrigger to improve job management and ensure
removed unused import of ` Service ` in ` SendTicketGrantingTicketActionTests . java ` to clean up the code and improve readability
[ rocketmq - 1380 ] send heartbeat to all broker when rebalance be complete .
allow cairo . detached . mkdir . mode to be configurable
[ java ] add clustertest . sendMessagetoslowdownservice to ensure that message be send to slow - down service .
[ authors3 ] [ year ] use [ auth ] [ authors3 ] [ year ] instead of [ authors3 ] [ year ] .
updated dependency handling in DBinaryDescription and DLibraryDescription to utilize CxxPlatforms for dependency resolution to improve compatibility with the C++ tool
refactor GoogleCloudAPI and GoogleTTSService classes to improve resource management to ensure proper cleanup of OAuth services and avoid potential memory leaks
camel - 14263 : camel - core - file - on - completion should check for dynamic file name before delete the file
added a boolean flag ` reopenReaders ` in ` SolrConfig . java ` and modified the condition in ` SolrCore . java ` to allow
add dialect version to mapwriter to support versioning
added new methods ` currentDate ` , ` currentTimestamp ` , and ` currentTimestamp ` to the ` Update ` class to enhance the functionality of
added a dup method to the Attr class and a new PrimitiveTypeInBoundForMethodRefTest class with a test method for mapping primitive types to
refactor condition implementations to use lambda expressions for improved readability to enhance code maintainability and reduce boilerplate
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector . java to improve query performance and accuracy in test assertions
removed multiple class references from ConcurrentClassLoadingTest . java to streamline the code by eliminating unnecessary dependencies
renamed the method ` providesUploadController ` to ` providesDirectNearbyUploadPreferences ` and added a new method ` providesUploadController ` to improve
added support for the " SYSDUMMY1 " database mode in Parser and Mode classes to support testing of DB2 and Derby databases
updated logging statements in TraceGatewayEnvironmentPostProcessor and added conditional properties in SamplerAutoConfiguration and SamplerAutoConfiguration classes to enhance logging clarity and
bugzilla 52213 - fix bug in poixmlproperties . addproperty ( ) and addproperty ( )
[ geotiff ] fix handling of neg infinity nodata in geotiffreader
added error handling and refactored process status retrieval in CliDriver . java and SessionState . java to improve code readability and maintainability by
updated MockRestAdapter to use Scheduler instead of Executor for asynchronous operations to improve responsiveness and responsiveness of the mock implementation
added a default method ` selectByRuleIdSet ` to ` RuleConditionMapper ` and refactored the ` selectByRuleIdSet `
added a method ` addExitDescription ` in ` AbstractJob ` , ` AbstractStep ` , and ` AbstractStep ` to add exit descriptions
added a condition to check if the player is the current player before proceeding with the event to ensure the event is only triggered when the player is
rename columnfamily to columnfamilycolumn so that it would well reflect our new functionality .
removed unnecessary import of java . util . Collections in PlotConfiguration . java to improve code clarity and maintainability
refactor defaultiosinput to use uialertcontroller instead of delegate to uialertview .
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` in ` Python
updated the parameter name from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more descript
added assertion to verify that the message is not null in AdvServiceTest . java to ensure that the service behaves correctly when a message is
refactor key handling in MappingMongoConverter to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
updated log message formatting in NearbyMapFragment . java to improve readability of log output for better debugging
camel - 14263 : camel - jbang - remove the javatype from the deprecated row .
updated FuzzyLikeThisQuery to handle non - existing fields in terms retrieval and added a test for non - existing fields in FuzzyLikeThis
modified the ` writeApplicationsLinks ` method to accept a boolean parameter for tabular lists to enhance flexibility in output formatting based on the tabular
[ ds - 3942 ] remove dependency on dspace in createmissingidentifiers . java
updated the ` assignBytes ` method calls to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure the method uses
changed the return type of getDisplayScript from abstract to null in LocaleNameProvider . java to provide a default implementation for the method
simonstewart : correct the order of sequence in remotewebdriver . java
pdfbox - 4892 : use the size of the cosarraylist instead of a fixed size .
added synchronization to wait for active interfaces before proceeding with further operations to ensure thread safety and prevent potential null pointer exceptions during network operations
fix bug 45538 - handle nested object in workbook . getallembeddedobjects ( )
removed import statement for Shdr in ShaderNodeLoaderDelegate . java to clean up unused imports and improve code clarity
renamed ` hostParams ` to ` roleParams ` and updated its usage in ` AmbariManagementControllerImpl . java ` to improve clarity and
pdfbox - 4892 : do n ' t use symbol font , a suggest by valerybokov
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to improve code clarity and
updated LiveTvGuideActivity and ProgramListAdapter to use a new variable ` mCurrentGuideStart ` instead of ` Calendar ` to ensure accurate
updated method invocation from ` getDeclaredMethod ` to ` Whitebox . getMethod ` in ` MockGateway . java ` and added new classes ` CommonParentTest
added library paths for freetype and fontmanager in JREUtils . java to ensure proper loading of freetype and fontmanager libraries
refactor function parser to use dummy argument for multi - variable function
[ gr - 24165 ] loopsafepoint elimination : add support for unsigned range guard .
do n ' t call valuenumberdataflow . gettopvalue ( ) when the method be ` ` instanceof ' '
added a new ` LocalizedString ` class and updated related methods in ` Formattable . java ` and ` Resolve . java ` to utilize
add serverconfig . disableclasspathsearch ( ) to disable classpath search
replaced System . arraycopy with Arrays . copyOf in DataLine . java to improve immutability and simplify array copying logic
updated the default value of ` retries ( ) ` from ` 0 ` to ` 1 ` in ` Reference . java ` and added a test for
added settings handling in TexturePacker . java and updated usage instructions in TexturePacker . java to enhance functionality by allowing customizable settings for texture
added views for uploaded images and updated progress bar text handling in AchievementsFragment . java to improve user experience by displaying relevant images and displaying relevant
added multiple tracer calls to TranslatingJavacPhaseTracerTest . java to ensure proper logging behavior during annotation processing rounds
added a new attribute ` & prop = categoryinfo ` in ` CategoryInterface . java ` and introduced ` CategoryInfo ` class in ` Mw
updated assertion messages for " username " and " password " in AuthzAuthenticationRequest . java to ensure that " username " and " password " are
added accessibility manager imports and a method to retrieve the auto - hide timeout in TaskbarStashController . java to improve accessibility support for the
added handling for ' ^ ' in the GenericSignatureParser to ensure that NoSuchElementException is properly thrown to improve error handling for unexpected input scenarios
updated access flag handling in ClassVisitorDriverFromElement and added new test cases in StubJarTest to ensure correct handling of generic interface and enum signatures
added null checks in IntervalFilter and improved null handling in LowpassIntervalsSource to enhance code robustness by preventing potential NullPointerExceptions
added unit tests for entry set iterators in MapInterfaceTest . java to ensure proper functionality of iteration over entries in a map
added a serialVersionUID field to the TreeMap class to ensure serialization compatibility for the TreeMap class
updated the createdAt timestamp from milliseconds to seconds in ImageData . java to ensure the image ' s creation time reflects seconds instead of milliseconds
added support for the f2m locus in singularwebservice , and add a method to get the locus command in castranslator
added imports for PRIVATE _ KEY and PUBLIC _ KEY in AccountRemovalJob . java and updated key deletion logic in AccountRemovalJob . java
http : / / issues . apache . org / jira / browse / amq - 5036 - use a helper method for keep - alive
added a check to return early if no interceptors are present in the map to prevent unnecessary processing when no interceptors are present in the map
standarddialect : remove duplicate inlining cdata section processor in standarddialect
removed the spillEnabled parameter from the ` BinaryHybridHashTable ` constructor and its usage across multiple classes to simplify the constructor and eliminate the need for
refactor environment variable handling in EnvironmentVariableHelper to use Optional for better readability to improve code maintainability and handle potential null values more gracefully
ww - 4891 fix checkstyle issue in defaultactionmapper
added SerializableMode import and updated import statements in Mockito . java and PluginSwitch . java to enable serialization support for the Mockito library
added nullability check for fieldInjectionPoint in AbstractBeanDefinition . java to ensure proper handling of nullable field values in DependencyInjectionException
added support for isolation level in select statements in compatibility mode to enhance query performance by allowing different isolation levels in select statements
added constants for Hive server2 transport and http path in HiveConnection . java to improve code readability and maintainability by avoiding magic strings
added a method ` isCacheable ( ) ` to the ` GlobalOrdinalsWithScoreQuery ` class to ensure that the query is not cached
added a new file TestStrangeControl . java that tests StrangeControl functionality to demonstrate the use of StrangeControl in a multi - thread
updated file generation paths from " . json " to " . jsfile " and " . jslib " in JsFile and JsLibrary
added selection methods to ShadowEditText for improved usability to enhance the functionality of the selection feature in the application
refactor the startGRPCServer method to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a ` use ` method to ` Jooby ` and updated ` Router ` and related tests to ensure the ` path ` parameter is not
added a null check for ` fst ` in ` FreeTextSuggester . java ` to ensure that a lookup is not supported at this time
updated string formatting in T4975569 . java and modified verification method in T6729471 . java to ensure consistent newline handling and
added ABI writer class handling and logging functionality in JavacInMemoryStep . java to enable the use of a custom ABI writer for processing
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to boolean method
added a check to ensure the scheduledExecutorService is not run if the service is stopped before executing the pull request execution to avoid potential errors when the service
[ hotfix ] [ network ] fix typo in energyendpointer javadoc
fix bug in componentpresetchooserdialog when the first column be favorite .
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to clean up the code and improve readability
camel - googlesheets : fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription . java ` and updated related references in ` C
deleted the files Constants . java , DistanceUtils . java , and DistanceUtils . java to remove unused code to streamline the project
refactor key splitting logic in RandomPartitioner . java to improve clarity and efficiency to enhance readability and maintainability of the code
[ gr - 24166 ] fix build - time initialization for jdk 22 +
[ k8s ] add test for create inline role binding
added debug logging statements for session cookie configuration to improve traceability and debugging during session management
updated file name calculation in HotseatFileLog . java to use the calendar ' s day number to ensure the file name accurately reflects the current year
updated variable name from ` o ` to ` v ` in ` ObservableBlockingSubscribe . java ` to improve clarity by using a more descriptive
added error handling for invalid option usage in JavapTask . java and created a new class T8033711 . java to improve robustness
replaced ` Collectors . collect ( Collectors . toList ( ) ) ` with ` Collectors . toList ( ) ` across multiple files to simplify code
[ hotfix ] [ runtime ] add shutdown flag to taskdriver error log
[ hotfix ] [ network ] enable tiered storage in gatebuffersspecutils
( chore ) camel - mail : use isnotsuccessstatus ( ) method to check if the response code be not 200 or 299
added useGL20 configuration and modified Cubocy initialization in CubocDesktop . java to enable GL20 support in the Cubocy application
no need to check if the method return type be VoidType .
refactor OutputMacroExpander to use Arg class instead of DefaultSourcePathResolver and add a new Arg constructor to improve code clarity and maintainability
fix test that fail on slow ci server
[ hotfix ] [ doc ] fix file path in mergewordslisttask
[ # 10237 ] instructor : add support for list of response comment ( # 10237 )
reformatted code for better readability to improve code clarity and maintainability
added a new file TestEscapeThroughInvoke . java containing a class TestEscapeThroughInvoke . java that tests object escaping to ensure proper functionality of object
replaced the use of stream . skip ( ) with IOUtils . read ( bytes , start , bytes ) in FilePreviewService . java to improve performance
added jdbc interceptor to manage connection pool startup in the ConnectionPool class to improve error handling and provide clearer logging for pool startup issues
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching a broader range of exceptions
hbase - 26265 lrublockcache . getblockbyhfilename ( ) should return the overhead if eviction be in progress
removed a conditional check for taskCount in RecentsView . java to simplify the code and improve readability
added instance config change listener to HelixBrokerStarter and adjusted sleep duration from 1000ms to 5000ms in HelixServerStarter to improve
added new classes CoinmateExchange , CoinmateStatic , and CoinmateMetadataServiceRaw for retrieving exchange metadata to facilitate the retrieval and retrieval of exchange
add a warning if the project directory contain ` ` $ { basedir ' ' or ` ` $ { project . basedir ' '
pdfbox - 4892 : ensure that object and object key be set correctly when write to pdfs
add setdisplaydata ( list < itemspec > ) method to transform . setdisplaydata ( list < itemspec > )
updated assertions in SubjectTest to use assertThat for null checks instead of DefaultSubject to improve readability and maintainability of the test code
removed the " jdk . certpath . disabledAlgorithms " property and set it to " MD2 " and " RSA keySize < 1024 "
added checks for ` OptionData . addSubcommands ` and ` OptionData . addSubcommandGroups ` in ` OptionData . java ` to
updated module - info . java files for mmm and ppp modules to improve module dependencies and maintainability
added error handling and exception management in ` ensureConnection ` and ` ensureConnection ( ) ` methods in ` IOSImplementation . java ` to improve
removed redundant null assignments in LauncherInstrumentation and LogEventChecker classes to ensure proper resource management and prevent potential memory leaks
refactor error handling and resource management in FileSinkOperator . java to improve clarity and maintainability of the code
added diagnostics handling in SchemaGenerator . java to print diagnostic information during task execution to improve debugging and traceability of diagnostics during task execution
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to provide a more appropriate exception type for semantic analysis
updated DataSourceMonitorTests . java file to improve test coverage to enhance reliability of data source monitoring functionality
added a ` loadedResourcePaths ` set and modified the method scan logic in ` ClasspathMethodScanner . java ` to optimize resource loading by avoiding
updated error logging to check for null testInstance before accessing it to improve clarity and prevent potential NullPointerExceptions during service initialization
fix npe in routinginboundhandler when a route be not find .
added a ` natIp ` field and updated logging statements in ` EkeyUdpPacketReceiver ` and ` EkeyHandler ` to include it
updated ArrowByteBufAllocator to use ArrowByteBufAllocator instead of BaseAllocator to improve memory management and align with the latest ArrowByte
refactor CommitLogArchiver , CommitLogReplayer , JdbcDecimalTest , and JdbcDecimalTest classes to improve code organization and maintainability
added null checks for parser state and body buffer in HttpConnection . java and created a new test for UnexpectWithBody in RFC2616BaseTest
( chore ) camel - test - infra - multitimeout : improve subscription validation and request handling .
patch by yukim review by jbellis ; review by jbellis for cassandra - 151
added @ Test annotation to TestOrcTimezone1 . java to enable testing of the Orc timezone functionality
refactor conditional logic to use a new method for matching enabled metrics and timers based on substrings to improve code readability and maintainability by
added error handling for JSON processing in PinotSegmentRestletResource and simplified return statements in TraceContext and TraceContextTest to improve error reporting and
updated JTable . java to handle null superclass and added a new Test6888156 . java file with a new Test6888156 class
added conditional checks for the existence of the shell before passing it to the command - line arguments in IDEService . java to ensure that the application
updated the deleteWithoutSubscriptions method call from 10 to 1 in DatabaseCleaningService . java to optimize resource management by limiting the number of subscriptions
replaced List with Set for testInstances and added dependency injection in JunitJupiterTest to improve performance and maintain order of test instances
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
added transactionDisable ( ) and fileMmapEnableIfSupported ( ) methods in BTreeMapTest . java to improve transaction management and ensure proper
modified the iterator initialization in SortedIntList . java and added a new test class SortedIntListTest . java to ensure proper resource management
added a method to unregister the object in DefaultRemoteProxy and modified exception handling in JMXHelper to improve resource management and avoid printing stack traces
[ hotfix ] [ rocksdb ] adjust rocksdb default writebuffer size in rocksdbconfigurableoptions
removed the ' true ' parameter from the constructor call in Style . java to simplify the constructor by eliminating unnecessary parameters
updated the argument addition method from ` addArgument ( " message " , f [ 0 ] . getMessage ( ) ) ` to ` addArgumentNo
samza runner : remove unused pipelinejsonrenderer # tojsonstring ( )
[ bugfix ] fix helloaudio to not set positional to false .
refactor LoopRotateBadNodeBudget class to improve code readability to enhance maintainability and facilitate future updates
added a ` TypeInformation < ? > ` parameter to ` convertToMongoType ` methods across multiple classes to enhance type conversion functionality to include TypeInformation
ggb - 2200 fixed input box rendering for imaginaryunit
[ java ] : fix bug in sendkeytoactiveelement . sendkeytoactiveelement . sendkeytoactiveelement
added methods to get and scale a BufferedImage using specified target sizes in AddAndScaleMultiImage . java to improve image scaling capabilities and ensure proper
removed the extendArgumentCheck ( ) and extendWrapStore ( Engine ) methods from DBMaker . java to streamline the code by consolidating
added a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to ensure the shift state is updated when necessary
removed the ` DETECTED _ ACTIVITY ` constant from ` SerializableLocation ` and simplified log URL retrieval in ` CustomUrlManager ` to
replaced ` ExtensionConfig ` imports from ` org . eclipse . jetty . websocket . extensions . extensions ` to ` org . eclipse . websocket .
removed the import of Buildable from AaptPackageResources . java to clean up unused imports and improve code clarity
updated Unused methods in multiple Java files to improve code clarity and readability to enhance maintainability by addressing unused code elements
updated the error message in WebSocketUpgradeHandler to include the status code to provide clearer context for the error when the upgrade protocol is invalid
updated the formatting of the blockMode assignment in P11Cipher . java to improve code readability and maintainability
refactor Mockito class to improve readability to enhance maintainability and facilitate future updates
refactor merge logic to eliminate redundant checks for owner permissions to improve code clarity and maintainability by reducing redundancy
removed deprecated ` getConversationID ( ) ` methods from multiple classes to clean up the codebase and indicate that the method is outdated
replaced ` com . sun . freetts . freetts ` with ` de de de de de de de de de de de de de
replaced ` BaseSemanticAnalyzer ` with ` PlanUtils ` for stripping quotes in ` BaseSemanticAnalyzer ` , ` PartitionSpec ` , and ` Partition
refactor ` updateRendering ` method in ` DLNAResource ` to improve rendering context management to enhance clarity and maintainability of rendering context updates
added repositories to the resolution and remote artifact repositories in DefaultPluginManager to ensure all relevant resolutions are included in the project
close the applicationcontext to prevent resource leak .
refactor PhysicsClient class to improve code structure to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable tests due to frequent failures
added a file initialization method to the ZipFile class to ensure the file object is properly instantiated based on its name
added a deprecate method ` handleAll ( ) ` in ` TryType . java ` to indicate that this method should no longer be used
add unit test to ensure uid be not initialize by the default constructor
added logging functionality for call stack traces in GenericDAOImpl and modified import statements in ForumServiceImpl and ForumServiceImpl to utilize StackTrace
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the code and improve test clarity
refactor unparseList method calls in FunDefBase , ParenthesesFunDef , and ParenthesesFunDef classes to improve
updated SQL query to include cluster _ id and cluster _ id for selecting configurations to improve data retrieval accuracy and provide clearer error messages for
corrected the spelling of " supressWarnings " to " suppressWarnings " in UnsafeAutomaticSubstitutionProcessor . java to ensure consistency and correct
added error handling for unexpected JsonElement peeking in JsonTreeReader . java and created a test for it in JsonElementReaderTest . java to
added support for handling unexpected arguments in the internal runner in TestCommand . java to ensure that unexpected arguments are handled correctly during the internal runner execution
added a new method ` dedup ` to ` SolrDeleteDuplicates ` , ` SolrIndexer ` , and ` SolrIndexer ` classes to
[ hotfix ] [ example ] use blink planner in streamsql example
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is cleared before running tests
updated progress display logic in Progress . java and added a dispose method in RSSReader . java to improve performance by optimizing progress display behavior
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added methods to write and close streams for POIDocument in IOUtils . java to improve resource management and ensure proper closure of output streams
updated print statements in JavaBuild . java to include newline characters to improve output formatting for better readability
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` _ root ` and ` dot
added custom user search functionality in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to improve user authentication handling
added default port handling and port filtering functionality across multiple classes to enhance routing flexibility by allowing dynamic port selection based on server port
updated SnmpTargetHandler and related tests to use the new ` verifyStatus ` method instead of ` updateStatus ` to improve status verification logic and ensure
[ # 8842 ] instructor : edit session should only be submit for section with submit privilege .
added an @ Incubating annotation to the AvailableSettings class to indicate that the class is outdated and should no longer be used
refactor file path extraction logic in FileResolverImpl . java and add a new WarFileResolverTest . java file to improve code readability and
updated the ` newFlushedSize ` string format in ` DocumentsWriterPerThread . java ` to include ` includesDocstores ` to provide
change dirt . getunlocalizedname ( ) to use block . dirt . getunlocalizedname ( ) .
corrected the spelling of " stripWhitespaceX " to " stripWhitespaceY " in ImageProcessor . java to improve code readability and maintain
updated the value of ` locks ` from ` threads ` to ` threads * 1000 ` in ` FeedRefreshUpdater . java ` to allow for
added exactSearch parameter to MetadataIndexNode in TsFileSequenceReader . java and created a test for it in MeasurementChunkMetadataListMap
removed the dateFormat parameter from the makeResultFromDelimitedString method calls in CSVSaveService . java to simplify method signature and improve code readability
added a preferred size for the pane in the NavigationShareTab class to improve the layout responsiveness of the user interface
refactor BeiderMorseFilter to improve token attribute handling and state management to enhance filter functionality and ensure proper state management during token processing
refactor Upnp handler classes to improve code structure to enhance maintainability and readability of the codebase
use pos . getxy ( x , y , z ) instead of pos . getblockpos ( ) in lenswarp
test ( json ) : add unit test for tojson ( )
refactor MutableContextDataSupplier class to improve code organization to enhance maintainability and readability of the code
changed exception handling from Exception to Throwable in CoreContainer . java to improve error handling and logging for better debugging
updated the KubernetesMockServer constructor to include HTTPS parameter to enhance security by allowing HTTPS connections
[ gr - 36233 ] make sure we compute the stamp in the graph for mathematical operations .
updated HTTP status codes in DefaultServlet to support GET requests and modified test assertions in DefaultServletTest to ensure proper handling of HTTP methods and improve test
tika - 351 : fix tika - 353 tika long format to use the US locale .
refactor exception handling in ShowFileRequestHandler to use setException instead of throwing an exception to improve error handling and provide clearer exception messages for 404
added exception handling in ReflectorClassWriter . java and implemented a try - catch block in ReflectorClassWriter . java to improve error handling and
added a clamp method to Vector2 for clamping vector lengths to enhance vector manipulation capabilities
added OAuth2 authentication handling in ChainedTokenGranter . java to ensure requested scopes are correctly set based on the client ' s scope
refactor BC _ instanceof class for improved readability to enhance maintainability and clarity of the codebase
removed the setSaveFlags call from EditorBottomSheetBehavior . java to streamline the code by eliminating unnecessary setting of save flags
refactor UaaUrlUtilsTest to use JUnit 5 annotations instead of public access modifiers to improve test structure and maintain compatibility with JUnit 5
fix nativequery return type cast to basicdomaintype . gettypename ( ) .
added synchronization for retrieving and retrieving the aat flag for fonts in SunLayoutEngine . java to improve performance by reducing redundant calculations for fonts
[ java ] use intarraylist instead of bigarrayarray in typedset .
simonstewart : fix issue where selectelementhandlingtest and windowswitchingtest do n ' t work
refactor BrokerRequestUtils to improve code structure to enhance maintainability and readability of the code
refactor instance handling in InjectorBuilderImpl to use a map of instances instead of a linked list to improve clarity and maintainability of the code
replaced calls to ` getRawTargetNodeFactory . create ` with ` buildTarget . getBasePath ( ) ` in ` BuildTargetToRawTargetNode
added null check for ` val ` before parsing ` result ` to avoid potential NullPointerException when ` val ` is null
add keepalivemanager to keep connection listener alive for jabber service .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.07F to 0.0 67 in IntHashSet . java to ensure the default load factor is
added methods to retrieve all data types physical variations in VectorizationContext and VectorPTFDesc classes to enhance data handling capabilities in the vectorization
move htmlassettranslater and stringresourcetranslater to client . j2se
refactor logic for handling overview actions and clear all buttons in OverviewState . java to improve code readability and maintainability
added Entity annotation to BaseActivityEventEntity . java to enable persistence of activity events in the database
added trace logging for ` TouchInt ` , ` NavBarSwipeInteractionHandler ` , ` TouchInteractionService ` , and ` TouchInteractionService `
added a new file ` InvalidOptions . java ` to validate Java command line options to ensure compatibility and correctness of command - line option usage
added an error log for inconsistent display sizes in DisplayController . java to improve debugging by identifying inconsistencies in display configuration
[ pac4j ] remove dependency on commons . lang3 . tuple
changed the default value of the ` _ unwrapServletException ` variable from ` false ` to ` true ` in ` ErrorPageErrorHandler . java ` to
added a condition to set the status of ` si . status ` to ` ShortcutInfo . DEFAULT ` in ` PackageUpdatedTask . java `
camel - 14263 : camel - seda : fix issue with unbounded seda queue size
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods in Kernel . java and App . java to manage batch updates in the application
added HttpClient configuration and getter methods in ThirdEyeApplication . java to enable HTTP client support in the application
added a Sort parameter to JobInstanceFetchRequest and updated batch and sort handling in JpaJobPersistenceImpl . java to enable sorting functionality for job
refactor the cancelCryptoFacilitiesOrder method to use an open order list instead of throwing an exception to improve order cancellation logic and ensure
ggb - 260 hide keyboard when click in algebra view
make memmove ( ) and memcpy ( ) non - optimizable .
reformatted code for improved readability in BindLdapAuthenticationHandler . java to enhance maintainability and readability of the code
added a blockToolTip property and its getter / setter methods in ToolTipManagerW . java to control tooltip blocking behavior in ModeToggleMenu . java
added timeStyle parameter to DefaultDateTypeAdapter and updated related methods in GsonBuilder to support custom date and time styles to enhance flexibility in date formatting
updated playerSet appending format in ListCommand . java to improve clarity of player identification in the output
added a check to return a List < Z > if the list is empty to ensure that the method returns the original list if it is empty
added exception handling for InvocationTargetException and wrapped CommandException in ParametricCallable . java to ensure that InvocationTargetException is treated as CommandException for better error
modified the ` getLikeExpression ` method to include a ` isLike ` parameter and adjusted related logic accordingly to enhance functionality to differentiate between regular expressions
added start and stop methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to provide functionality for starting and stopping streams in the component
removed redundant locale handling in the runChild method in LuceneTestCase . java to streamline the test by eliminating unnecessary locale management
refactor multiple PG - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor context handler initialization to use a dedicated init method to improve code readability and maintainability by reducing duplication
camel - 16323 : camel - osgi - blueprint - add route builder reference to camel - osgi - blueprint - 9 . xml
nifi - 10213 : fix test to use contains instead of substring in testexecutestreamcommand
removed the ` noWarnings ` parameter from the ` returnTypeSubstitutable ` method and added a ` warner ` parameter to the `
added ThrottleType enum and modified processThrottled method to handle different throttling types to improve processing efficiency by allowing different throttl
updated variable assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve code readability and prevent
refactor Annotation and AnnotatedElement classes to improve code organization and readability
added a new interface ` Model ` and modified ` Sheet ` , ` Workbook ` , and ` Workbook ` classes to implement the ` Model `
camel - 14263 : use camel _ filter _ pattern instead of hardcoded string for filter strategy
added a ` clearEntityManager ` option to the ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control the clearing of
added null checks for ` info ` in ` InstallShortcutReceiver . java ` and improved error handling in ` Launcher . java ` to enhance robust
make twodimensionalcollectionvaluedmap optional by default
updated exchange specifications from " btc - e " to " wex " and updated the exchange name from " BTC - e " to
added null checks in OrcEncodedDataConsumer and EncodedTreeReaderFactory classes to prevent potential NullPointerExceptions when accessing column readers
added null check for ` files ` in ` SegmentInfos . java ` and a new test method in ` TestIndexReader . java ` to ensure
fix flaky test when use elastic search
updated the calculation of the return value in DeviceHandler . java to handle negative values to ensure that the return value does not exceed the maximum limit for
updated the condition from ` < 1 ` to ` < 0 ` in ` RangeInputStream . java ` and ` RangeReader . java ` to ensure
camel - 14263 : camel - core - camel - routes - configurer should log additional route builder at debug level instead of info
refactor methods in HlsChunkSource and HlsPlaylistTracker to improve clarity and consistency to enhance readability and maintainability of the code
updated test class names from ` NumericRangeFilterBuilderTestCase ` to ` TestNumericRangeBuilder ` and moved them to ` LuceneTestCase ` to improve
added runtime context handling and stateful mapper implementation in StatefulOperatorTest to ensure correct state management during streaming operations
removed null check for fill and stroke in Area . java and added bitmap shader shift assignment in Line . java to simplify code and ensure bitmap shader is
added a method to check if a blockchain exists and updated import statements in Blockchain . java and BlockchainTest . java to improve blockchain
removed leading and trailing whitespace from the extracted value in SQLPlusSupport . java to ensure consistent formatting by removing leading and trailing whitespace
set the socket ' s async mode to false and set it to true in Http11AprProtocol . java to ensure that the socket is not
ggb - 260 do n ' t set the divider location if it ' s not need .
added health check metrics for good and bad calls in the Pinot controller to enhance monitoring capabilities for health checks and improve error handling
hide shared avatars from the item view in LocalFileListAdapter to improve user experience by removing unnecessary shared avatars
remove the ` @ ClientBundle . Source ` annotation from the ` @ Source ` annotation in ` org . geogebra / web ` and `
updated boundary checks for argument lengths in multiple classes to ensure that the input length is within valid bounds to prevent potential runtime errors
added logging level checks in LogInterceptor . java to ensure commands are executed only when the logging level is fine
replaced ` awaitLatch ` with ` assertWaitUntil ` in ` EventBusTracingTestBase . java ` to improve code readability and maintainability by
modified locale handling in QueryParser and added getter / setter methods in QueryParser to improve flexibility and encapsulation in locale management
fix : use linkedhashset instead of arraylist to preserve order .
[ jbrules - 2530 ] fix bug in the build process for beta node constraint .
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` and ` OCSPResponse ` to
added serverState variable and modified sleep duration logic in SSL . java to improve server state management and ensure proper handling of server failures
added methods to retrieve and set the number of active connections in SourceCounter and SourceCounter classes to improve connection management by tracking the number of active connections
make the executorserviceexecutionstrategy public so that it can be use from other package .
added a method ` getSrcRoots ( ) ` to the ` createDefaultJavaPackageFinder ` method in ` BuckConfig . java ` to
added a PrintWriter to the OutputWriter initialization in ScriptExecutable . java to enable better output handling for output options
[ hotfix ] [ test ] fix test failure in filesourcetextlinesitcase
added support for DataTable in JRubyStepDefinition to handle DataTable instances in JRuby arguments
updated visibility settings and improved image node retrieval in SearchImagesRenderer and ApacheHttpClientMediaWikiApi classes to enhance UI responsiveness and improve image retrieval
refactor ReadSentimentDataset class to improve code structure to enhance maintainability and readability of the code
added error messages for parsing errors near characters in specified formula strings to improve debugging by providing clearer context on parsing errors
added getter and setter methods for the bind address and modified the WebSocketClient class to enhance encapsulation and improve code readability
[ java ] : fix typo in clusteredmediadriver . close ( ) .
refactor width and height setting logic in WidgetGroup . java to improve code readability and maintainability by consolidating related logic
updated session fixation attribute comparison to use Boolean . valueOf for clarity to improve readability and maintainability of the code
[ hotfix ] [ logic ] fix the problem of the digital channel not be start in the correct mode .
simonstewart : add a linear backoff mechanism to chromebinary . sleep ( 2500 ) and chromebinary . incrementbackoff ( )
added support for HTTP method and route in TraceExchangeFilterFunction and related classes to enhance the client response handling by allowing specification of HTTP method and route
patch by gdusbabek , review by jbellis for cassandra - 151
updated return statement in ICC _ Profile . java and added a new test class ColorConvertOpTest . java for invalid render intent handling to ensure correct
add check for ` ` notsure ' ' parameter in contribution question detail
added calls to ` PublicMethed . waitProduceNextBlock ` in ` ContractInternalTransaction003 . java ` to ensure proper block production
removed the Serializable interface from the KafkaRecord class to simplify the class structure and avoid unnecessary serialization
added PGConnection import and modified the connection proxy invocation in PooledConnectionImpl . java and added a test for PGConnection in BaseDataSourceTest . java
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info for token encryption in TokenAuthenticationHandler to provide clearer feedback on configuration issues related to token encryption
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class is outdated and should not be used in new code
added topology update event handling and refactored command reporting in AmbariManagementControllerImpl , AbstractServerAction , and FinalizeKerberosServerAction
added iterator handling and enhanced value writing functionality in NamedListCodec to improve performance and clarity in data writing operations
fix issue where assigncompletelylostpartitions be call with an exception if the state be null .
added import for InclusionRule and set it to NONE in ApiExample . java to enable schema inclusion functionality in the API example
[ hotfix ] [ test ] fix test failure in streamexpressiontest
fix bug in sdo . createlinearring ( ) with unclosed ring and single point ring
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to ` ConstantPool ` class to retrieve base name and count the number of
add setdebugevaluationoutputfornexteval ( boolean value ) to formulaevalevaluator
test ( refactor ) : disable test for java 8 in favor of jdk8
modified the ExoPlayerProfile instantiation by removing the last boolean parameter and updated the isLiveTv condition in PlaybackController to streamline profile creation and ensure correct playback behavior based on user
added a return statement in DynamicStyleBar . java to ensure the method exits early to avoid potential NullPointerExceptions
added logging statements for setting and resetting database properties in the Utils class to improve traceability and debugging of database property management
refactor ReactiveAuthorizationManager class to improve code readability to enhance maintainability and facilitate future updates
added a check for boolean type before promoting strings to objects in MethodEmitter . java to ensure proper handling of boolean types during type promotion
make llvmaddressnuller public instead of objectnuller .
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
add unit test to verify transaction - aware cache proxy
added a new method ` calculateBoundingBox ` to calculate bounding box based on vertex attributes to improve bounding box calculation for meshes based on vertex attributes
added a new enum ` TargetHashFunction ` and modified its usage in ` TargetsCommand . java ` to allow users to specify a different hash
refactor DefaultConfigurationProperties class to improve configuration handling to enhance maintainability and readability of the code
added high light color and alpha settings to ListViewMultiChartActivity and modified BarChart rendering logic to enhance visual clarity and improve arrow rendering for better user
added pgSgPathPlanMap entry to pgSgPathPlanMap in ClusterPlanRouter . java to ensure proper mapping of pg - group
[ hotfix ] [ test ] fix test failure in infinispanremoteproducerit
added lock handling in MavenArtifactFetcher and improved dependency resolution in MavenDependencyResolver to ensure proper cleanup of temporary files and prevent concurrent access issues
added conditional check for GL _ ES in the fragment shader string to ensure compatibility with OpenGL ES environment
updated method signatures from ` SortedSet ` to ` Set ` in ` RSGroupInfo . java ` and ` TestRSGroupsAdmin2 . java
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49048 .
updated CustomAnalyzer to use a default match version and added a new test for the version - aware filter to ensure the correct behavior of the token filter
added a test method to read values from a set package archive info in ShadowPackageManagerTest . java to ensure that the application correctly reads and retrieves
replaced ` invoke ` calls with ` MethodUtil . invoke ` across multiple classes to improve method invocation handling and ensure proper package access checks
added progress event handling for project configuration and task start events in GradleBuildService . java to enhance the progress reporting mechanism for project configuration updates
removed synchronized block from AndroidWebDriver . java to improve performance by reducing unnecessary synchronization
fix issue with hikaripool initialization fail fast
updated the ` getResult ` method signature and added an ` error ` method in ` Net . java ` to simplify the method signature and improve error handling
changed the ` isNative ` field from ` boolean ` to ` transient ` and modified the ` addEntry ` method to use ` false ` instead
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity and consistency in error reporting
automation : rename ` ` rule enable ' ' handler to ` ` ruleenablementactionhandler ' '
refactored multiple Java files to improve code structure to enhance maintainability and readability of the codebase
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of authentication request handling
renamed ` getBasicSourceOptions ` to ` getBasicSinkOptions ` and updated related methods in ` KafkaDynamicTableFactoryTest ` to improve clarity
added null check for the repository in UsersPanel . java to handle cases where the repository does not exist to improve error handling and provide clearer feedback
added support for additional font file types in the SunFontManager class to enhance font validation to support additional font formats
refactor type matching logic in AnnotationMatcher . java to improve clarity and maintainability to enhance readability and maintainability of the code
replace " OFF " with " SEVERE " in Grep . java to improve error handling by providing a more specific error level
added a check for debug logging before logging messages in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when debug
fix SurefirePlugin . java when there be no include / excludes list .
added a check for moving to the default screen on home intent in Launcher . java to ensure the home intent is moved correctly when the folder is
updated the maximum bitrate from 110 to 30 in PMS . java to allow for a more flexible bitrate setting
refactored the ` getOptions ( ) ` method to use ` optionsMap . values ( ) ` instead of ` optionsMap . values ( )
trim whitespace from the return value in MutableDatabaseProperty . java to ensure consistent formatting by removing leading and trailing whitespace
removed the path separator from the output filename assignment in XOMParserTest . java to simplify the output file path format
removed the PID from the error log message in ProcessBesuNodeRunner . java to simplify the error message by eliminating unnecessary parameters
added a protected method ` getLoadedMusic ( ) ` and ` getLoadedSound ( ) ` to ` MusicLoader ` and ` SoundLoader `
replaced ` ClassUtils ` with ` Class < ? > ` in ` OnBeanCondition . java ` to ensure type safety and improve code clarity
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for testing purposes
added a null check for the lrPauseButton in CPUFeature . java and MemoryFeature . java to ensure the button is not selected when it is
replaced ` PreferenceCategory ` with ` mAccountsPrefCategory ` and refactored preference handling in ` Preferences . java ` to streamline preference
fixed typo in xmppconnection . sendavailablepresence ( ) and xmppconnection . sendavailablepresence ( )
updated StringBuilder initialization in ObjectInputStream to use an initial capacity based on utflen to improve memory efficiency by allocating appropriate initial capacity when utflen is
added configuration properties for statsd export in WebEndpointsAutoConfigurationIntegrationTests to disable statsd export for the WebEndpointTestApplication
refactor InterruptedException handling to improve code clarity to enhance maintainability and readability of the code
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the code
refactor connection check logic to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
[ log4j2 - 1342 ] fix argumentarraymessagemapper to handle map type correctly .
do n ' t throw exception if parent object be not an instance of indexabledspaceobject
added Intent . FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to PasscodeActivites in PasscodeManager . java to
refactor ( patternparameterconfigurator ) : remove @ deprecate in favor of @ template
modified the ` beginDraggingWidget ` method to return a boolean indicating success or failure to handle cases where the image drawable is null to improve user
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for the root object in DynamicStyle . java to prevent potential NullPointerExceptions when the root is null
add confusion matrix to maxenttagger and test sentence
fix npe in jmeterthread . setlastsampleok ( true ) when the result be null .
added unit tests for ` getConnectedDevices ` , ` getConnectionState ` , and ` removeDevice ` methods in ` ShadowBluetoothHeadset
corrected a typo in the property name from " # autowire " to " # autowired " in PropertyBindingSupportTest . java
added " clone " and " finalize " methods to the objectMethods set and modified loading logic based on the FINALIZE _ METHOD constant to enhance
added null checks for counters in IntegrationTestBigLinkedList . java to improve error handling for insufficient YARN configuration
added a new constant ` REFERRING _ OBJECTS . ID ` and modified the boolean value of ` canGetInstanceInfo ` to improve
updated the service filtering logic in SamlIdPServicesManagerRegisteredServiceLocator . java to ensure the service matches the specified service ID
added a null check for the activity before executing the runOnUiThread method in PhotoFragment . java to prevent potential NullPointerExceptions when accessing
[ java ] remove unnecessary whitespace in log message .
added a stringType property and its getter method in DatabaseAdaptor and updated JDBCSessionDataStore to use it to allow dynamic configuration of the string type for
updated test cases in UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " to improve test
refactor thread name handling to use a dedicated method for updating and resetting thread names to improve code readability and maintainability by centralizing thread
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the code
[ drools - 2200 ] fix dmn evaluation of negative output
make sure texture map creation finish before move to splash progress
added a tooltip to the showCGCP checkbox to enhance user experience by providing context - sensitive information
replaced ` getTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory . java ` and added
add a text parameter to the retarget action ( # 3561 )
ggb - 2105 use getlabel ( stringtemplate ) instead of getlabelsimple ( ) for spreadsheet column name
updated the BRIGHTNESS _ FACTOR constant from ` intValue ( ) ` to ` doubleValue ( ) ` in ` BindingConstants . java `
fix a bug in sscmhistoryparser . gethistory ( ) . gethistory ( ) . getcurrentrevision ( ) .
added a new parameter ` isAdmin ` to the ` createUser ` method and implemented user list methods in ` HomekitAuthInfoImpl ` to
added null checks for ` writeMethod ` in ` IndexedPropertyDescriptor ` , ` Introspector ` , and ` PropertyDescriptor ` classes to improve type safety and
[ dynatrace ] remove unused collect ( ) .
updated method signatures in Context . java and Request . java to improve consistency and clarity to enhance code readability and maintainability
add setcapabilitiesfromspongebuilder ( ) to mixinitemstack so that it can be deserialize from nbt .
[ hotfix ] [ test ] fix checkstyle violation in lifecycleutilstest
added validation for CreateSmartContract and TriggerSmartContract types in Wallet . java , and modified contract creation logic in GetContractServlet . java to
added new package - info . java files for ` com . ibm . dtfj ` and ` com . ibm . lang . management ` to
modified the add method to use a loop for updating the tail in DocumentsWriterDeleteQueue to ensure thread safety when adding new nodes to the queue
added a check for duplicate JavaFileObjects in JavadocTool . java and modified test arguments in T7091528 . java to improve handling of
changed the default value of STRIP _ IPV6 from " true " to " false " for STRIP _ IPV6 in HostPort
added a new method ` addNewUserParameters ` to the ` LoginServerTokenEndpointFilter ` class and modified the initialization of ` loginInfo `
added language support for CPP in the LanguageFactory and updated conditional checks in LanguageFactory and CPPParserTokenManager to ensure compatibility with additional language
refactor thread executor creation to use a single - thread executor to improve code organization and maintainability by centralizing executor creation logic
added cache - control and expiration headers to the LoginService and FormAuthenticator classes , and modified response handling in FormAuthenticator to ensure proper caching behavior and
[ java ] add the exception message to the error log .
updated HSSFTests to replace AllHSSFUtilTests with TestAreaReference , TestRangeAddress , TestSheetReferences , and TestEmptyDocument
refactor FetchHTTP2Test , FetchHTTPTest , and FetchTestBase classes to improve code organization and maintainability
added a null check for the output file before retrieving the classDirectory to avoid potential NullPointerExceptions when accessing the output file
added privileges to the ExternalResourceControlPriority in Java2DRenderer . java to enhance security management for external resource execution
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure robustness against ArrayIndexOutOfBoundsException in font rendering
added a final modifier to the ` mbean ` variable and refactored the ` main ` method to improve immutability of ` mbean ` and
added a check for empty comments in TabsAndIndentsVisitor to ensure that only non - empty comments are processed to avoid potential errors
updated assertions in SimDistribStateManager and TestTriggerIntegration to adjust collection rate limits in TestTriggerIntegration to ensure that collection rates are within acceptable
updated string comparisons to case - insensitivity in multiple classes to improve case - insensitivity in change set validation
removed the ` getString ` method from the ` ShadowBundle ` class to simplify the code by eliminating unnecessary complexity
updated date formatting in TweetActivity to support military and non - military time settings to ensure consistent date formatting based on user - defined locale settings
nifi - 10286 : do n ' t return an empty list if there be no connection
refactor keyboard focus handling in DetailFragment to use a dedicated method to improve code readability and maintainability by encapsulating focus logic
fix issue with file : / / and file : / / in addition to file : / /
[ fix ] coordinatematrix . solve do n ' t work with multi - dimensional matrix .
added import statement for Message in GenericMessage . java to utilize Message class for improved message handling
refactor SQL query construction to use a join method for task attempt fields to improve code readability and maintainability by reducing redundancy
updated the filter selection logic in AquaFileChooserUI to check if the file filter is not equal to the selected item to ensure the filter is
[ java ] fix synchronization issue in p2ptransportmanager .
replaced ` toString ( ) ` with ` booleanValue ( ) . booleanValue ( ) ` in ` ArrayPtg . java ` and added a new test
updated import statements in PGtokenizerTest . java to use static assertions instead of wildcard imports to improve code readability and maintainability
refactor the handling of enclosing elements in Java2TypeScriptTranslator to improve clarity and correctness in determining final variable assignments to enhance code readability
added functionality to create and set a sequence for auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s auto
updated byte reading logic to check for negative values instead of negative values to ensure proper handling of negative values in byte array operations
updated assertions in ImageParserTest to check for Dimension VerticalPhysicalPixelSpacing and HorizontalPhysicalPixelSpacing to ensure accurate validation of Dimension dimensions in the
updated the method call from ` getParent ( ) ` to ` getParent ( ) ` in ` Component . java ` to ensure the correct parent is retrieved
updated import statements in multiple files for consistency to improve code readability and maintainability
replaced calls to ` NativeCrypto . ENGINE _ finish ( engine ) ` with ` NativeCrypto . ENGINE _ free ( engine ) ` for
added iteration methods to various classes and updated their implementations to improve iteration event handling and maintain consistency across the codebase
refactor FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management to improve resource management and prevent memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of logs during test execution
refactor URL loading logic in BrowserActivity to handle Twitter URLs more gracefully to improve user experience by providing a direct way to open the URL
add awaithoststatus ( ) method to deploymentgrouptest . testhoststatus ( )
change logResult from false to true in VisibilityController . java to enable the logging of label allowed status
increased the maximum auto retry limit from 0 to 25 in RestTemplateRetryTests . java to improve reliability of the test by limiting the number of retries
removed System . out . println ( result ) from TranslatorSupportTest . java and added @ Override annotations in StandardTypeMapperComponent . java to
added a new ` FRACTION ` resource type and implemented a new ` FRACTION ` class in ` PackageResourceLoader ` and ` R `
removed a conditional check for file write confirmation in BasicFrame . java to streamline the code by eliminating unnecessary checks
added null checks for tag groupId and artifactId in findNewerDependencyVersion method to enhance robustness by ensuring valid tag groupId and artifact ID are retrieved
hbase - 20586 hbasenamespaceauditor should throw quotaexceededexception instead of donotretryioexception
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the codebase
updated TestFuzzPreLoop . java file to improve test coverage for fuzz functionality
added a check for negative f0 in HTSVocoder . java to ensure f0 is non - negative to prevent potential errors
updated catalog retrieval logic and improved null checks in SchemaRetriever and TableRetriever classes to enhance code robustness and prevent potential NullPointerExceptions
remove clearencoders and getencoders from inputbuffer so we do n ' t need to clear it
added SharedPreferences support for empty screens in Workspace . java to control screen display behavior based on user preferences
added a warning log for deprecated cucumber - needle in NeedleFactory . java to inform users of the deprecation of cucumber - needle
updated theme handling in ShadowThemeTest , ShadowArscAssetManager , ShadowArscAssetManager , ShadowArscAssetManager , ShadowArsc
updated error messages in VerifyFast . java to use Arrays . toString instead of string concatenation to improve readability and maintainability of the error message
no effective change - ebean migration for versioning
added conditional checks for PROTO _ PROPERTY _ NAME and modified getter and setter methods in ScriptObject . java and Global . java to improve type safety
updated the shuffle method in TestFilterDirectoryReader to include a random parameter to enhance the randomness of the readers list
added logic to retrieve the displayName based on whether the user is sharing a remote clarification to improve user experience by providing clearer context for sharing
updated the path formatting in CookieRetrievingCookieGenerator to include a default value of " / " to ensure that the path is not empty
removed unnecessary closing braces in Jvm and JvmJvmstatModel classes to improve code readability and maintainability
updated cacheName variable to use ` getTotalBackupCount ( ) ` instead of ` getBackupCount ( ) ` for better clarity to improve code read
updated comparison logic in ValidationResult . java to check if the page number is not equal to zero to improve accuracy in determining if the page number is
added a null check for the focused widget in the highlighted condition to ensure the highlighted item is only highlighted when the focused widget matches the current instance
reformatted method signatures in SoundUtil . java for consistency to improve readability and maintainability of the code
refactor ApplePackageDescription and related classes to utilize AppleCxxPlatformsProvider for flavor retrieval to improve code clarity and maintainability by consol
[ java ] add test for show ololo format tab separate with name and type
renamed ` onConnect ` and ` onAccept ` methods in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to improve clarity
refactor EnglishPTBTreebankCorrector to improve code readability to enhance maintainability and facilitate future updates
added a new file TestGetLoggerNPE . java to test logging behavior with Java AWT access to ensure proper logging behavior based on user -
[ java ] add getdata ( ) method to pathsharingcontext and set appcontext to null in scripteddeciderule .
[ gr - 32233 ] make sure to call castexact ( object [ ] , object [ ] , object [ ] , object [ ]
added functionality to handle the use of " NEXT VALUE FOR " in NextValExpression and updated related classes accordingly to enhance flexibility in handling next value
improve error message when resource bundle be not pre - cached
removed pending writes in the BoundedLocalCache and added a test for clearing pending writes in BoundedLocalCacheTest to improve cache management and ensure
added a new parameter " Leverage _ Level " to the exchange specification and a corresponding getter / setter in QuoineNewMarginOrderRequest
added a method ` boundInitialization ` in ` PropertyDescriptor . java ` and created a new test class ` Test7192955 . java `
replaced ` failsafeWidth ` and ` failsafeHeight ` with ` SetDisplayModeCallback ` in ` LwjglGraphics . java `
added null check for buttonsAwatingRelease in Tabs . java to prevent potential NullPointerException when buttonsAwatingRelease is null
refactor wrap width calculation in LineCell and StyledTextAreaSkin classes to improve clarity and maintainability of wrap width calculations
updated error message formatting in XSLTErrorResources _ it . java to improve clarity and consistency in error reporting
replaced HashMap with LinkedHashMap for paramValues in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain insertion order for parameter values
[ java ] replace single quote with double quote in string . format ( ) .
replaced the use of ` NamespaceContext . getNamespaceURI ( prefix ) ` with ` getNamespace ( prefix ) ` in ` StaxXmlPullParser . java
added support for ` nestedJoins ` configuration in multiple test classes to enable nested joins functionality in the testing framework
fix a bug where root admin can not be specify by admin only .
added caching functionality for JavacFileManager and modified the CompletionTaskProcesor constructor to accept a cursor parameter to enhance performance by ensuring correct class
added Hive configuration variables for METASTOREURIS and SQLAUTHORIZATION _ MANAGER in TestMsgBusConnection . java to configure the Hive
[ hotfix ] [ test ] use hamcrest matcherassert . assertThat instead of junit . assertthat
add nullability annotation to metadatarenderer and textrenderer
fix symbolmapreaderimpl . keytooffset ( ) to use long . BYTES instead of long . size ( ) .
removed debug print statements from TermFilterTest . java to clean up the code and improve readability
removed the ` Reflection ` class and removed the ` TypeConverters ` class from the ` TypeConverters ` class to streamline the codebase
refactored the ThreadlessExecutor class to remove the sharedExecutor and add getter and setter methods for clarity to improve code readability and maintainability
refactor exception handling in DateTimeFormatter and add a new test for null return in TestDateTimeParsing to improve code readability and ensure proper functionality of
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` for clarity to improve code readability and maintainability
added a new class T7034495 with generic interfaces and a new class T7034495 with generic types to prevent crashes due to
refactor loop structure in LotsOfEvents . java to improve readability to enhance code clarity and maintainability
refactor conditional checks in TransclusionDecideRule . java to improve readability to enhance clarity and maintainability of the code
[ micronaut ] remove unused version print method in micronaut . java
added tests for the ` Area3DPtg ` formula in ` TestBugs . java ` to ensure correctness of name definitions in the
updated the description retrieval logic in MindIconFactory . java to handle cases where the name ends with a slash in the description to improve clarity in icon
updated the ` onHomeIntent ` method to accept a ` internalStateHandled ` parameter to enable handling of home intents based on the internal
refactor the dependency tree retrieval in CxxBuckConfig . java to improve code readability and maintainability
added a new ` showDetails ` method to multiple activities in the ` FileDisplayActivity ` , ` FileDisplayActivity ` , and ` FolderPicker
removed the ` $ apply ` operator from multiple function names in multiple classes to simplify the code and improve readability
fix high - level encode test to cover more case .
updated formatting and formatting in SourceBuilder . java for improved clarity and consistency to enhance code readability and maintainability
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure the adapter reflects changes in the data set
added a method to set the default WAL sync mode in ShadowSQLiteConnection to allow dynamic configuration of WAL sync mode for SQLite connections
updated type checking logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure correct handling of list elements
camel - 15836 - camel - aws2 - s3 : remove unused method in defaults3crtasyncclient
updated test cases in ` doDudPasswordTest ` from ` ef677 ` to ` ef677 ` and ` DEF
add more debug information to the test failure message
do n ' t use a bail in case of an internal error .
ggb - 260 fix for npe in open ( ) and open ( )
refactor SQLXML class to improve code structure to enhance maintainability and readability of the code
added a limit parameter to the ` getOrderBook ` method in ` YoBitMarketDataService ` and modified the ` getOrderBook ` method to
use heapoutofboundsexception instead of metaspace . stresshierarchy . common . exceptions in stresshierarchybaseclass
nifi - 10254 : set maxstringlength to Integer . MAX _ VALUE in standarddataflow to limit string length to integer . max
updated the retrieval of the engines string in PmsConfiguration . java to ensure a default value of empty string is used to avoid potential null pointer exceptions
corrected the spelling of " FullIterator " to " WheelIterator " in the TimerWheel class to improve code readability and maintainability
do n ' t throw runtimeexception when generate a customized bug pattern
fix localchunkprovidertest fail on slow ci server
changed visibility of the uncomplete checklists menu item from true to false to disable the uncomplete checklists feature for improved user experience
refactor result map handling in DefaultResultSetHandler and introduce a new Contract class in DiscriminatorTest to improve clarity and functionality of result map resolution and
added null checks for defaultHome and unregistered the receiver in OverviewComponentObserver . java to ensure proper handling of null values and prevent potential NullPointer
removed the @ VertxGen annotation from the PumpImpl class to streamline code generation process for improved performance
removed unnecessary casting of ` FileDisplayActivity ` in ` FileDetailFragment . java ` and ` OCFileListFragment . java ` to
removed leading and trailing spaces from the token in ConfigAttributeEditor and added a new test method in ConfigAttributeEditorTests to ensure proper attribute handling and
refactor ClassUsingAnotherAuxiliary and SelfClassWithAuxiliary classes to improve code organization and maintainability
svm : add getunnamedmodule ( ) to dynamichub . getunnamedmodule ( ) .
added handling for " pg _ " in DatabaseMetaData . java to determine the metadata table type based on the presence of " pg _ " in the
[ java ] deprecate agent . getagentrequest ( ) and agent . getagentrequest ( ) .
updated the RQST field type from - 1 to 1 in ThriftHiveMetastore . java and modified the exception handling in HiveMetaStore
added a new module - info . java file for the core package to define module dependencies and exports for improved modularity and encapsulation
added logic to manage flush state and write operations in SslConnection . java to improve handling of fillable states and ensure proper fill interest management
updated Log4j2LogDelegateFactory to improve logging delegate creation logic and added a new test for NoExceptionInInitializerErrorTest to ensure proper
updated the logic for determining the LIBJVM variable and improved error handling in test cases to ensure tests are only executed when the server VM is
refactor methods in MongoOperations and ReactiveMongoOperations to improve code organization to enhance maintainability and readability of the codebase
added " org . postgresql . ssl . LibPQFactory " to the PGProperty class to ensure compatibility with PostgreSQL ' s
disable interprocess semaphore test for now
added sorting functionality for theme keys in EditableResources . java to ensure consistent ordering of resource names and improve code readability
added a new class ` OSvTerminal ` and modified ` TerminalFactory ` to support OSV terminal functionality to enhance terminal support and ensure compatibility with
added support for additional file extensions in ClassType . java to ensure compatibility with additional file formats
replaced HashMap with TreeMap for combined vectors in DrillTestWrapper . java to ensure sorted order of elements in the combined vectors
added a check to ensure the index is within the bounds of the list before iterating over names and values to prevent potential ArrayIndexOutOfBoundsException when accessing
refactor WebSocketPolicy class for improved readability to enhance maintainability and facilitate future updates
refactor ` readPhoneStatePermissionGranted ` and ` setAccessPhoneStatePermissionGranted ` methods to use instance variables instead of static variables to improve
added a new method ` resolveMessage ` to ` StandardMessageResolver ` and modified null checks for ` context ` and ` defaultMessages ` to enhance
updated Constructor handling to use generics for Class < ? extends ClassVisitor > to enhance type safety and prevent potential ClassCastExceptions
added a new class ` LoggingAuditService ` for logging user authentication success , authentication success , and failure events in the ` UAAAuditService `
added nullability annotations and improved temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance code robustness by preventing null
fix : do n ' t create aop proxy if it ' s an abstract class
camel - 14263 : camel - http : enable the use of http . proxyhost and http . proxyport in camel - http
updated MAX _ ENCODING _ VERSION from " 1.1 " to " 1.1 " to reflect the latest version of the encoding system
added a call to jdk . internal . util . StaticProperty . jdkSerialFilter ( ) in the System class to enable serial filtering functionality in the
improve log message to provide more detail about the pool size
removed the ` forceFinished ` parameter from multiple classes to simplify the method signature for better readability and maintainability
updated the parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` in ` ensureRealtimeClusterIsSetUp `
add validationreport . iserror ( ) and disallowvalidator . isfail ( ) method to improve error handling and provide more informative error messages
refactor inline QSB handling in InvariantDeviceProfile to improve readability and maintainability to enhance the flexibility of the inline QSB display options
updated the ` createClassPath ` method to include an ` throws Exception ` parameter and modified the location to decode URLs to improve error handling and
updated the ` @ Given ` annotation in ` TransformSteps . java ` to use ` ( . * ) ` instead of ` 10 ` to improve
fix npe in java2d . fill ( ) when image be null .
[ hotfix ] [ test ] increase fault tolerance timeout in faulttolerancetest
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
add environment . seturl ( dockerimageurl ) to environments . seturl ( )
[ drools - 586 ] remove unused system . gc ( ) call in test
refactor multiple classes related to additional answers and invocations to improve code organization and maintainability
replaced ` createHardLink ( ) ` with ` copyFile ( ) ` for file copying in ` SnapshotTaker . java ` to improve
refactor method names from ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in method naming conventions
[ java ] add device check to lsTM and mxndmanager to ensure all device be in the same device .
added a check for ` Xml . Document ` before visiting ` FindIndentXmlVisitor ` to ensure proper handling of XML documents during autodetection
updated tests to use AndroidJUnit4 instead of InstrumentationTestCase in multiple test files to improve compatibility with Android ' s testing framework
added new GasLimitRule and new DifficultyRule , GasLimitRule , and ParentGasLimitRule in CommonConfig . java to enhance
changed the access modifier of setupData ( ) from public to private in BaseAssumptionsRunnerTest . java to encapsulate the setupData method
rename ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` and ` XMLChangeLogHandler . java ` to improve
added a null check for the listener in TripleServerStream . java to ensure proper resource management and prevent potential NullPointerExceptions
[ hotfix ] [ doc ] use site . baseurl instead of / . .
added a new test method ` testIssue154 ` to ` SelectTest . java ` to verify the correct parsing and deparsing of SQL
refactor Common class to improve code organization to enhance maintainability and readability of the code
refactor launcher event logging to use try - with - resources for better resource management to improve code readability and maintainability by encapsulating
refactor StreamExecDeduplicate class for improved clarity to enhance code maintainability and readability
add log for error when send kafka message to a topic
added PersistentPropertyAccessorFactory to SimpleElasticsearchPersistentEntity and implemented isImmutable method in SimpleElasticsearchPersistentEntity to ensure proper initialization of PersistentPropertyAccessorFactory
[ fix ] geocoordsys1d . setcoord should return boolean instead of void .
add swipe event listener to handle x and y axis . ( issue 151 )
fix a bug in ngram estimation that be cause the estimation to fail .
updated import statements from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align package structure with the new
added methods to retrieve folder icon properties from label state and cardinality in StatsLogCompatManager . java to improve the accuracy of folder icon information retrieval
replace ` capability . getServerSlogan ( ) ` with ` capability . getServerName ( ) ` in ` ThemeUtils . java ` to improve
added a new file TestSkeletonPredicates . java to implement and test the TestSkeletonPredicates class for testing skeleton predicates to ensure correct behavior
refactor equality and hash code implementations in SelectionHighlighter . java to improve object comparison and enhance hash code generation for better object comparison
added a new StringResultConverter class to handle string conversions to improve the handling of string values by providing a standardized way to convert string values
camel - 19751 : replace @ disabledifsystem ( ) with @ disabled ( ) in camel - core
updated the condition from ` WaitForSingleObject ` to ` WaitForSingleObject ` in ` JansiWinSysTerminal . java ` to correct the condition
updated the ` setInBuffer ` method to set the buffer ' s limit when it is null and added null checks for ` buffer ` to ensure
updated the assertion in TestSolrDiscoveryProperties to use File . separator for the data directory to ensure compatibility across different operating systems when checking the data directory
updated the condition for determining the operating system type from " linux " to " mac " and added support for macOS pre - catalina
updated the ` Lock ` class to use ` lockName ` instead of ` File ` to improve clarity by using a more descriptive variable name
updated the variable name from " appIcon " to " apps _ view " in Overview . java to improve clarity by using a more descript
updated method references from ` Invocable . InvocationType ` to ` ClientDatagramEndPoint . this ` in ` ClientDatagramEndPoint . java
updated the SQL query for retrieving step executions from " oreder by STEP _ EXECUTION _ ID " to " order by
updated button handling in LwjglInput . java to use ` gdxButton ` instead of ` toGdxButton ` to improve clarity
added tests for rejecting tasks in TaskRestRepositoriesIT . java to ensure that the server correctly verifies the rejection status of submitted tasks
refactored logging statements in multiple classes to use a static logger instance instead of a transient logger to improve code consistency and maintainability by standardizing
updated the expiration time calculation in SsoAccessTokenProvider . java and added a new test in SsoAccessTokenProviderTest . java to improve code clarity
[ geos - 7906 ] skip test on window due to macos - github - build
added alarm suppression methods to GreetResourceMockedTest and OciMetricsCdiExtensionTest classes to provide default implementations for alarm suppress
reformatted conditional statements in JFrame . java for improved readability to enhance code clarity and maintainability
added null check for the MediaDatabase connection before executing the ANALYZE SAMPLE _ SIZE query to avoid potential NullPointerExceptions when access
replaced the ` getSolrMetricsContext ( ) ` method with ` super . initializeMetrics ( ) ` in ` SuggestComponent . java ` to
refactor file listing and folder handling in OCFileListFragment . java to improve clarity and structure to enhance readability and maintainability of the
camel - 14263 : camel - aws2 - scp : use iterable < keypair > instead of an array
refactor SourceVersion class to improve code readability to enhance maintainability and facilitate future updates
added a new test class ` ThreadFactoryTest ` to validate the functionality of the ` MyThreadFactory ` class to ensure that the ` ThreadFactory
refactor lock period retrieval to use a helper method for dynamic properties retrieval to improve code readability and maintainability by encapsulating logic for
added a new TicketModel instance to the EditTicketPage class to initialize the ticket with a new instance of TicketModel
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the option to dimiss apps from
updated constructors in multiple assertion classes to include a self - type parameter for better type handling to enhance type safety and ensure proper type casting for
updated menu constants and added quotes functionality in TweetActivity . java to enhance user experience by allowing quotation options in tweets
make sure interrupt be finish before start jmeterthread .
replaced ` codecPassthrough ` and ` codecPassthrough ` with ` decryptOnlyCodecFormat ` in ` MediaCodecAudioRenderer . java ` to
added a conditional check for result before offering failure in ServerHTTP2StreamEndPoint . java to ensure that failure handling is only executed if the result is
updated German and French error messages from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ fr . java
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety for the CheckpointsCleaner class
updated MockRestAdapter and RestAdapter classes to use Subscriber instead of Observer in MockRestAdapter and MockRestAdapterTest to improve code clarity and
refactor code for better readability in ComponentPresetManager . java to improve code clarity and maintainability
added a new configuration option for unique column names in Hive configuration and updated corresponding methods in TestJdbcDriver and TestJdbcDriver2 to improve column name
make sure we set example text and audio effect when it ' s change .
added validation to ensure that only valid sessions are processed to prevent runtime exceptions when attempting to access a session that is not valid
hhh - 11436 remove unused code that be no longer use
updated the initialization value of keyPairGenerator from 256 to 255 in JceX25519Domain . java to ensure the key pair generator uses the correct
added codec setting for Lucene41 postings format in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41 postings format
[ hotfix ] [ checkpoint ] added logging for empty header list in checkpointrangeheaders
add support for rsa / aes / oaep padding ( relate to github # 999 )
[ gr - 29999 ] remove dependency on native - image for aarch64 .
log a warning if the source resolver fail to resolve a source .
updated conditional logic to handle UNIX and non - UNIX operating systems correctly to ensure appropriate transport options are returned based on the operating system
updated error handling in FileUploadUtils and modified segment file upload logic in ControllerConf and UploadRefreshDeleteIntegrationTest to improve clarity of error messages and ensure
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple files to ensure proper memory management and prevent potential memory leaks
change the USE _ PIPELINE _ DOWNLOADER constant from false to true in FastSyncChainDownloader . java to enable the downloader functionality
updated calendar handling in SimpleDateFormat . java and added a new test class Bug7130335 . java to improve date formatting functionality and ensure correct
refactor code to use a local variable for iconCount instead of directly accessing mRollo . mState to improve code readability and maintain
cloudstack - 10277 : do n ' t add default hypervisor to the list of hypervisors if the default hypervisor
refactor StringBuffer class to improve performance to optimize string manipulation operations
added a call to set the rule UID in RuleResource . java to ensure the rule has the correct UID for referencing rules
added a null check for the listener before unsubscribeing from the registry to avoid potential NullPointerExceptions when the listener is null
add ` ` pretty _ print ' ' property to jolttransformjson to allow to apply pretty print formatting to the output of the transform
change access modifier of ACCESS _ TABLE array from private to public to allow access to ACCESS _ TABLE from outside the class .
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to use " No resources " instead of " Resource ' does not exist " to improve clarity
[ xmpp ] do n ' t swallow exception during transport shutdown .
refactor multiple classes related to event handling and notifications to improve code organization and maintainability
added a new boolean variable ` effectiveClusterVersion ` and ` isUpgradeSuspended ` in ` AmbariManagementControllerImpl . java ` to
update copyright year in FindsByCssSelector . java to reflect the current ownership to ensure compliance with copyright regulations
removed the final list of wfields from the writer to streamline the code by eliminating unnecessary variable declaration
added default key size settings for encryption and signing keys in OAuthProperties to ensure proper key size settings for encryption and signing operations
hbase - 11619 add miss getcolumnfamilycount ( ) method to htabledescriptor . getcolumnfamilycount ( ) and hbase - 1
replaced the usage of ` AllowedResourceAliasChecker ` with a lambda expression to simplify the alias check logic for better readability and maintainability
updated ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and Serializable classes to improve code clarity and maintainability
[ java ] add reset ( ) method to cluster and clusteredserviceagent . reset ( ) .
hbase - 16305 fix the issue that we do n ' t have the correct sequencefile . writer for chunkedwriter
added a new abstract class AbstractJobExecutor that implements a job execution executor to facilitate the execution of job executions in batch processing
refactor replay logic in RecoveryStrategy . java to use a future variable to improve clarity and maintainability of the replay logic
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity by using a more descript
( chore ) camel - consul : return empty list of service IDs if the discovery be disabled
replaced ` Float . floatToIntBits ( float ) Math . random ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` for hashSalt to improve
added a collection of failed runtime compilations and refactored print statements in RuntimeCompilationFeature . java to improve handling of invalid frame states during parsing
updated the calculation of ` currentStart ` and ` baselineStart ` in ` TimeOnTimeComparisonHandler . java ` to ensure correct calculation of time
added support for abstract methods in the ` answer ` method in ` CallsRealMethods ` and created corresponding tests in ` CreatingMocksWith
refactor package access checks in NashornScriptEngine and Context classes to improve security management to enhance code readability and maintainability by reducing redundancy in
refactor ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and implement error setup for plugin data initialization to improve test clarity and
replaced ` dtm ` with ` model ` in ` ContributionListPanel . java ` and updated font handling in ` ContribTableModel . java `
added a new method ` hasHasTIS ` to ` QuickstepTestInformationHandler ` and modified conditional checks in ` LauncherInstrumentation ` to
refactor connection handling in ConnectAction to use Mutex for thread safety to improve thread safety and maintainability of the connection dialog
updated type parameters in ` ShowOptions ` and ` ComputeShowOptions ` methods to use ` BuildTarget ` instead of ` String ` to improve type
[ java ] add support for native / regex / regexp / objects in the javaemul package .
added support for handling ` HOME ` , ` END ` , and ` HOME ` and ` END ` operations in ` Less . java `
removed synchronization for retrieving connected plots in PlotHandler . java to simplify code by eliminating unnecessary synchronization
refactor Intent handling in Utilities . java to use Intent . createChooser for sharing activities to improve code readability and maintainability by consolidating
removed the public access modifier from the Roster constructor to restrict instantiation to package - private for better encapsulation
added basic constraints extension to the certGen to enhance security by allowing basic constraints to be processed
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to verify the correct handling of transform offsets in
replaced ` field . multiValued ( ) ` with ` precisionStep ` in ` TrieField . java ` to simplify code and improve readability
deleted the TaskbarStateHandler class and its associated methods to streamline the codebase by removing unused or redundant components
added a new file ` ArrayLength . java ` that tests the behavior of ` getField ` and ` getDeclaredField ` for an array type to ensure
add log to hzstartit # destroyforcibly ( ) and wait for the hazelcast process to destroy .
added @ PostConstruct annotation and refactored the save method in ApplicationSettingsService to improve dependency injection and ensure proper initialization of application settings
updated assertion logic in Safepoint . java to adjust value comparison to ensure correct handling of positive and negative values
updated threadNameField to use " Ljava / lang / String " instead of " charArray " and changed return type from charArray to string
updated the default ring seed from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and HnswGraphBuilder to
use a font instead of create a new one in the java2d class to allow customization of the stroke .
refactor the ` expandDynamicStar ` method to use a dedicated ` expandDynamicStar ` method to improve code readability and maintainability by central
added a new method ` findInterestingChildren ( ) ` to manage and store interested child records in the ` Comment2000 ` class to ensure that
added a warning icon to the HTTP status frame in HTTPServer . java to improve user experience by providing a clear warning message for status codes
fix bug with mouseevent . getmodifiersex ( ) and mouseevent . getmodifiers ( )
[ amd64 ] fix typo in countleadingzerosnode . java and counttrailzerosnode . java
[ camel - 13369 ] fixed issue where attachment type be not set when disposition be set to not set .
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
added a ` clearLog ` method to ` ErrorConsoleController ` and implemented it in ` ErrorConsoleViewModel ` to provide a way to clear log
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the controller
refactor code to use LocaleHolder for caption management and improve message serialization to enhance code clarity and ensure proper handling of locale - specific captions
added connection pooling functionality to ConcurrentBatchIdentifierTest , SequenceOptimizerIdentifierTest , and AbstractTest classes , and adjusted execution count in AbstractTest to
[ java ] add opera driver to defaultdriversessions .
updated catch blocks in ManageJournalsPanel . java to use Exception instead of MalformedURLException and IOException to improve error handling and provide user feedback during
added new LIFX product identifiers and updated their usages in LifxProduct . java to enhance functionality and support new color options in the Lifx
added asynchronous request setup and complete request handling in OverseerCollectionProcessor and CollectionsHandler classes to enable asynchronous replica creation in the collection process
refactor PostgresDatabase and PostgresDatabaseTest classes to improve clarity and consistency in primary key name assertions to enhance code readability and maintainability
updated LogPanel initialization to use ` objectId ` instead of ` null ` for the ` logPanel ` to ensure proper reference handling and improve log
update bone length unit in SkeletonInterBoneWire . java from UNIT _ Y to UNIT _ XYZ in SkeletonInterB
added a browserDestroy method to the AndroidImplementation class and updated the deinitialize method to improve browser destruction handling and ensure proper cleanup of resources
added a call to waitForActiveCollection for " readApiTestViolations " in AutoScalingHandlerTest . java to ensure that the test waits
refactor loop structure in ScreenTerminal . java and remove unused imports in Tmux . java to improve readability and maintainability of the code
updated SoftResetAction . java to use ControllerState constants instead of backend . isIdle ( ) and backend . isPaused ( ) to enhance the
disable on - disc stream cache to speed up texture pack reload
added a conditional check to retrieve the parent folder in Request . java and RequestV2 . java to ensure the correct parent folder is used when the
fix a typo in the variable name from ' isPersistent ' to ' persistent ' to improve code readability and maintainability
replaced ` deleteOnExit ( ) ` with a ` close ( ) ` method in ` FileOutputStream ` to ensure proper resource management by closing the output stream
added error handling for ` RestClientException ` in ` StandardGitHubRepository . java ` to improve robustness by catching potential ` RestClient
log4j2 - 1343 messagefactory2adapter . getoriginal ( ) should return the original messagefactory .
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related to
updated regex pattern from " ( 0 - 9 ] { 1 , 2 } " to " ( 0 - 9 ] { 1 , 3 } "
added initial and dismiss delay settings for the ToolTipManager in ExtractionModelFrame to improve user experience by allowing more time for UI updates
refactor ProjectCommand to improve handling of passed - in targets in ProjectCommand . java to enhance clarity and maintainability of the project command logic
added timezone setting and assertion in TimeTest . java to ensure correct formatting of time objects in UTC timezone
refactor MediaSessionConnector to improve code structure to enhance maintainability and readability of the code
use endpoint . gethandler ( ) . getsslimplementation ( ) . getsslsupport ( ) . getsslsupport ( ) . getsslsupport
updated GpsLoggingService to display the accuracy instead of altitude in the distance information to improve the accuracy of location reporting for users
added a new method ` isFuturesEnabled ( ) ` and modified ` BinanceAccountService ` and ` BinanceTradeService ` to check
[ # 10219 ] update adminaccountmanagementservlet to include instructoraccountstable instead of account
added a method to set the accept queue size in ThriftHttpCLIService to ensure proper handling of queue size configurations
updated the variable ` watchServiceEnabled ` from ` getClass ( ) . getName ( ) ` to ` PROPERTY _ DISABLE _ WATCHER
added a check for SSL scheme in the JmsFactory class to ensure proper handling of SSL connections in the application
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and refactored error handling in ` TestWindowFunctions
updated the calculation of the duration in GCInspector . java to ensure that the duration is always positive for a really fast collection
[ java ] fix nullpointerexception in nodewithdocumentation . getcomment ( ) with line comment
replaced the ` reserveMemory ` method with a ` readReservedMemory ` method and updated its usage in ` WhiteBox . java ` to improve memory
added calls to ` ungroupedAggregateRegionObserver . checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java
hbase - 26165 addendum make procid protected and include procid in log message
camel - 14263 : camel - cxf : allow to configure the service class in the WSDL service factory bean .
refactor YAML change log serialization to include a container map for databaseChangeLog to improve clarity and organization of change log output
updated print statements to include a newline character in SchemaPrinter . java to improve output formatting for better readability
refactor road regeneration logic to improve code readability and maintainability
updated context usage in HomeFragment . java for nowPlayingRow and footerRow to improve code readability and maintainability
replaced @ GeneratedValue annotations with @ GenericGenerator annotations across multiple classes to use Hibernate annotations for generation strategy to improve code readability and maintainability
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature by eliminating unnecessary country parameter
updated the buffer writing method in BZip2Codec to include position and remaining parameters to improve data handling efficiency and prevent potential data loss
ggb - 2275 make sure console be open when the app be open .
added a new constant VALUE _ TYPE _ EMPTY and refactored the create method in Value . java to improve code clarity and maintainability by central
[ java ] use string . equals instead of string . equals for equality check .
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and facilitate future updates
added a new method ` newInstanceExact ` to the ` TargetGraphFactory ` class to provide a way to create an instance of an exact target graph
patch by jbellis ; review by gdusbabek for cassandra - 151
added Gson support for ArtifactVersion in MetadataCollection and ModMetadata classes to enhance serialization and deserialization of ArtifactVersion objects
modified the handling of the previous and previous elements in NativeArray . java to improve clarity and correctness of the array manipulation process
updated file handling in FileUploader to update parent file IDs to ensure the correct parent file ID is set for uploads
added a new test class UTF8ReaderBug for handling supplementary characters to ensure correct parsing behavior for supplementary characters in XML input
add a unit test for the proxybuilder to make it easy to understand how to use the proxy builder
updated expected stream paths from " depth " to " depth / ethbtc / ethbtc / ethbtc / eth
added a method to reset initial and max allocations in SimpleParallelizer and Wrapper classes to ensure proper reset of allocation states in the parallelization process
removed the import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
added synchronization to System . getProperties ( ) in Agent . java and created a new test class AgentCMETest . java to ensure thread safety when
refactor ModelUtils class to improve code readability to enhance maintainability and facilitate future updates
refactor AbstractDoubleArrayAssert to improve code structure to enhance maintainability and readability of the code
updated width and height calculations in Legend . java to include bounds checking for labels to ensure proper rendering of labels when the index is out of bounds
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` , ` TestResponse
replaced the direct usage of ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` in ` MoreLikeThis .
replaced the call to ` ruleResolver . requireRule ( ) ` with ` BuildTargetSourcePath ` in ` Omnibus . java ` to simplify
do n ' t download the latest version if versioning be disabled .
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` to the ` MediaFolder ` class
removed " - b " argument from args in AidlStep . java and modified format string in GenAidlTest . java to streamline
[ findbugs ] add integration test for issue 79 .
added a TODO comment to the FakeHttpLayer class to indicate that the test should not be executed in the future
[ hotfix ] [ runtime ] remove error handler in embeddedleaderservice
replaced Flowable streams with Single for better readability and efficiency in CompositeDiscoveryClient . java to improve code clarity and maintainability by using reactive
replace ` systemResources . getConfiguration ( ) ` with ` applyQualifiers ( ) ` in ` ParallelUniverse . java ` and ` BootstrapTest
[ hotfix ] [ configuration ] add description for jobmanageroptions . recoverfromtaskfailure
rename ` updateNoWidgetsView ` to ` updateRecyclerViewVisibility ` for clarity and consistency to improve code readability and maintainability by using a
added exception handling for WstxInputFactory and WstxOutputFactory in XmlUtil . java and updated test cases in MultiVersionXmlParser
added a setUp method to the AuditAliasCommandIntegrationTest class to ensure the workspace is properly initialized before each test execution
removed unnecessary logging statements in WidgetsFullSheet and WidgetsRecommendationTableLayout to improve code readability and reduce unnecessary log clutter
[ cxf ] disable test that be not applicable in this scenario
added a try - catch block around the update ( ) method call to handle potential exceptions during periodical refresh to improve error handling and logging for period
refactor ` ChainingAuditPrincipalIdProvider ` to use ` RequiredArgsConstructor ` and add ` addProviders ` method in ` CasCore
added a method to check and set the default background fills in HSSFCellStyle . java and updated HSSFPalette . java to
rename ZonedDateTimeFormatter class to improve clarity to enhance readability and maintainability of the benchmarking logic
added a new method ` shouldBufferUpdate ` in ` DistributedUpdateProcessor . java ` and created a new test class ` DistributedUpdateProcessor
added a null check for the rocket stage in SimulationListHandler . java to ensure proper handling of null motor scenarios
updated command names and modified getItem method parameters in WorldEdit . java and WorldEdit . java to improve clarity of command descriptions and enhance item retrieval
refactor ExtendedMasterSecretExtension class to improve code organization to enhance maintainability and readability of the code
changed the declaration of the ` processor ` variable from non - final to final in ` AndroidInput . java ` to ensure that the ` processor `
added a listener to notify the listener when a write operation is reached the end of the stream to improve error handling by notifying listeners when a write
added a new variable " CUBE " in MySQLDatabase . java to support MySQL ' s CUBE database functionality
added a try - catch block around the ` rm ` method call in ` TestReplicationHandler . java ` to handle potential ` IOException ` during the
renamed ` ExperimentalRobolectricTestRunner ` and ` TestClassRunnerForParameters ` to ` MultiApiRobolectricTestRunner ` and updated related
updated field retrieval in DefaultOkHttpClientFactoryTest to use getter methods for timeout and hostname verification to improve code readability and maintainability by centralizing
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the operating system in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 278 fix for ggb - 290 , make sure we do n ' t need to set the parent for the
added a ` fromCli ` parameter to the ` jailerMain ` method and modified the exception message to include a ` fromCli ` parameter to
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added preference storage for unread pulls in TalonPullNotificationService to manage unread pulls effectively
[ java ] do n ' t use object stamp if it ' s an object type .
updated delta times and memory calculations in Box2DTest , OrthographicCamera , and Pong classes to improve accuracy of camera positioning and
refactor layout manager initialization for comments RecyclerView in ViewPostDetailFragment . java to improve code readability and maintainability by reducing redundancy
changed log level from trace to warn in CLIService . java to reduce log verbosity for non - critical issues
added debug output for methodinstance . name ( ) and methodinstance . flags ( ) . isabstract ( ) .
ggb - 260 mouse click on ie10plus and ie10plus do n ' t work on ie
updated getNotificationUsers method to include deviceId parameter and modified user retrieval logic to enhance user management by filtering users based on their device IDs
updated the base URL in CGIARProvider . java from " http : / / droppr . org / srtm / v4 .
refactor MotifFileChooserUI to remove unnecessary method calls and add a new test class bug6520101 to improve code clarity and test
refactor handle method implementations in HollowDiffUIRouter , HollowHistoryUI , and HollowExplorerUI to return boolean values instead of void to improve
refactor ` getRuleOptional ` methods to accept ` Class < T > ` instead of ` fromNullable ` to improve type safety and error handling
added a condition to hide the transport spinner based on the makingShortcut flag to improve user interface responsiveness by hiding the transport spinner when necessary
updated the handling of null attributes _ field in ` Attr . java ` and added new classes ` T7073477 . java ` and `
added conditional checks for back button clicks across multiple fragments to ensure back button actions only occur when appropriate to enhance user experience by preventing unintended back navigation
added a new constant LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB and modified the getViewIndexDataType method in QueryServices and MetaDataClient
corrected the spelling of " v " in SDRTrunk . java to improve code readability and maintain consistency
added import for StringUtils and updated the method to clean the private key path to ensure that the path is clean before use to avoid potential errors
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method in ` MTable . java ` to simplify the method signature and improve
updated IndexWriter configuration to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest version of Lucene
hbase - 26157 disable column family check in importtsv . ( # 322 )
[ java ] rename logrecordingchannel to logsubscriptionid so that it would well reflect our new subscription .
replaced startActivity ( intent ) with startActivitySafely ( ) and setVisibility ( ) in Launcher . java to improve activity launch safety and visibility management for
added a condition to return early if the second element of jsonNodeNew is empty and the first element is " i " in the jsonNodeNew
refactor Procedure class to improve code structure to enhance maintainability and readability of the code
updated resource bundle application to include the default locale and class loader to ensure proper resource loading for different locales in the application
[ j2kt ] add kotlin normalization pass for array creation
added checks for mincount in PerSegmentSingleValuedFaceting and adjusted counting logic in PerSegmentSingleValuedFaceting . java to ensure
fix author list not be present in mod metadata ( # 7363 )
added a new test class ` OSGiTest ` and created tests for ` com . google . gson . annotations ` and ` sun . misc
refactor isDependentServiceEnableable logic into a separate method for better readability to improve code clarity and maintainability by encapsulating the
hbase - 26105 fix testasyncprocess . setautoflush ( false ) and testasyncprocess . setautoflushto ( false )
fix ( ctscanner ) : cast to ctstatement to avoid classcastexception .
feature . hasuserdata ( ) should return true if feature . getuserdata ( ) be empty
removed ` HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify method signatures
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
added a method to enable logging in the JavaCompiler class to ensure proper logging behavior for Java compilation
added a new class ` InJavaSourceSet ` and modified ` UsesJavaVersion ` to use it to improve the handling of Java source sets
updated resource loading in TestGDALParser to use a dynamic fitsFilename variable to improve flexibility in resource loading for GDAL files
added a new static method ` createGetter ` to the ` ReflectionHelper ` class to provide a convenient way to create getters for objects and attributes
removed the conditional check for useExternalStorage in DirectUpload . java to simplify the condition for better readability and maintainability
added a new configuration option ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` , ` IndexerOutputFormat ` , and
api : change disk _ offering _ id parameter to false and throw an exception if it be not pass in .
updated assertions in ToHtml and BaseTestCellComment to check for non - empty notes instead of empyy notes to improve clarity and accuracy of
added null checks for ` amountToAdd ` and ` amountToSubtract ` in multiple classes to ensure that ` amountToAdd ` and ` amountToSubtract
added a new test class ` Issue382 ` to handle specific error types to ensure proper exception handling for specific error scenarios in the application
replaced RuntimeException with Integer . signum and simplified the return statement in PositionUtils . java to improve code readability and maintainability
added a condition to hide the text in the holder if the condition is not met to improve user interface responsiveness by preventing unnecessary text display
fix : fix npe in astparentconsistencychecker and jdtimportbuilder
[ java ] do n ' t call getprofile in firefoxdriverservice .
add a bucketpickup to the liquidblock class , so it can be reuse by other block .
http : / / issues . apache . org / jira / browse / amq - 2902 - fix test failure
updated the time zone from " PST " to " America / Los Angeles " in LocaleProviders . java to ensure the application uses the correct time
refactor ` DistinctErrorLog ` to remove the ` existingObservation ` parameter and simplify the ` newObservation ` method signature to improve code clarity
updated TEST _ PROPERTIES to include WEEKLY , WEEKLY , WEEKLY , and WEEKLY , and WEEKLY to
renamed the method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and updated logger initialization logic to improve clarity and ensure proper initialization of
[ java ] deny access to class , field , and proxy in the GraalContext class to enhance security by restricting access to specific classes
refactor image manipulation methods in PGraphics2 . java for improved clarity and functionality to enhance code readability and maintainability by consolidating method
updated the method call from ` table . getSd ( ) ` to ` partition . getSd ( ) ` in ` HiveAbstractReader . java
refactor overlay scrolling logic in Workspace . java to improve clarity and maintainability to enhance readability and maintainability of the code
hhh - 14713 - add support for hibernate ' s jdbc batch builder
[ java ] improve error message when shouldnotreachhere ( ) be call .
added a new test class ` MockWithStaticStateDemo ` and created a new test class ` MockWithStaticStateDemo ` to ensure that the
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing
added error handling for null UGI in SecurityUtil . java to ensure proper execution of actions when ugi is not initialized
updated error handling to include the number of error codes in the exception message to improve clarity and debugging by providing more context on the error code used
camel - 14284 : refactor endpointhelper to use endpointhelper . resolveparameter instead of endpointhelper . reslovestringparameter
updated precision and scale checks in RexNodeConverter to improve precision and scale handling to ensure accurate representation of decimal values in SQL queries
updated the handling of optional vendor and device properties in WebAuthnMultifactorDeviceProviderAction . java to improve null safety and avoid potential NullPointerException
updated the assertion in WalletTestAccount003 . java to use Long . toString ( now ) instead of " testName " to ensure the
replaced AxialStage with RocketComponent in BasicFrame . java and refactored selection handling in DesignPanel . java to improve code clarity
added a long running time parameter to the Args class to allow configuration of the VM ' s execution time
updated conditional logic in FindRefComparison . java and added a new class Ideas _ 2012 _ 05 _ 21 . java to enhance equality checks
updated import statements and modified method signatures in HttpServerProvider , HttpsServer , and FtpClientProvider classes to enhance compatibility with Java ' s service
[ geot - 6063 ] fix gml3encodingtest to work with xmlunit . xml
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
added a condition to check if referenceDatabase matches comparisonDatabase in MissingUniqueConstraintChangeGenerator to ensure compatibility with reference databases during unique constraint validation
refactor Android property handling in IjProjectTemplateDataPreparer to streamline asset management logic to improve code readability and maintainability by reducing
replaced assertions in DuplicateCookieTest . java with await ( ) in DuplicateCookieTest . java and SessionRenewTest . java to improve synchronization
added user _ args and timestamp fields to the ChromeTraceBuildListener to enhance the data structure to include user - specific arguments and timestamps in the
[ gr - 23636 ] optimize resource bundle lookup for jdk 11 .
updated log level from " Match limit " to " Match order " in HepPlanner . java to improve clarity and accuracy of log output
added a new file TheRockMetaDataDemo . java to display exchange metadata to provide users with exchange metadata information for the TheRock exchange
changed classes FloatingDecimal , FormattedFloatingDecimal , FormattedFloatingDecimal , and FormattedFloatingDecimal from FloatingDecimal to
removed unparseIdentifier ( columnName , conf ) from columnNamesBuilder . append to columnNamesBuilder to simplify the code and improve readability
added a new test method ` replaceField ` in ` JavaTemplateContextFreeTest . java ` and updated ` BlockStatementTemplateGenerator . java `
added a check for ` m . isSynthetic ( ) ` in ` InstantiateStaticClass . java ` and introduced a new ` Bug1282 .
updated the method call from ` projectFilesystem . getPathForRelativePath ( basePath ) ` to ` basePath ` in ` WorkspaceAndProjectGenerator . java `
added handling for pending expressions in IkStepDefinition . java to handle potential control flow errors and improve error management during step execution
changed ` equals ` and ` hashCode ` methods from ` final ` to ` hashCode ( ) ` in multiple type classes to allow for method overriding in
added a method to retrieve the sync level from a string and implemented a method to retrieve the default sync level to improve flexibility in configuring sync levels
[ java ] make controlcommandtest . testclientpause ( ) test more robust .
added a condition to check if the slice state is not RECOVERY in the RecoveryStrategy logic to ensure that the RecoveryStrategy does not proceed
corrected a typo in the create method call in opencv _ core . java to improve code readability and maintain consistency
added SDKPath parameter to AppleBundle and SwiftStdlibStep classes , and modified makeProcessExecutorParams method to accept an execution context to enhance the
refactor TransientBlobCleanupTask to use a BiConsumer for cleanupCallback instead of a hardcoded storageDir to improve code readability and
cloudstack - 10297 : fix a typo in the warning log message .
updated PasswordEncoder and StandardPasswordEncoder classes to enhance security features and improve security features
added conversion logic for sorting , union , and union in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct data
refactor BetterBlockPos class to improve code structure to enhance maintainability and readability of the code
updated the method to retrieve the servlet context using the class ' s class loader to ensure the servlet context is loaded with the correct class loader for proper
updated version checking logic to use ` isNightlyBuild ( ) ` instead of ` isAutoConnect ( ) ` for nightly builds
added OracleDatabase support for handling trailing newlines in SQL statements in LoggingExecutor . java and JdbcExecutor . java to improve compatibility with Oracle database
added a new constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to indicate that null values
fix test failure on linux due to port conflict
do n ' t draw audio when there be too many audio .
added a multifactor authentication provider bypass configuration to DuoSecurityMultifactorProviderBypassConfiguration to enhance multifactor authentication handling for improved security
reformatted method declarations in MaxRectsPacker . java for consistency to improve code readability and maintainability
[ drools - 7 ] fix checkstyle violation in drools - core
added methods to set and get the help page in the PMS class and refactored help page handling in HelpTab and LooksFrame classes
added GeocodeProviderFactory and Constants classes , and implemented a new Constants interface to provide geocoding functionality and define constants for Omni Notes beta
removed the import of ` util ` from ` CharArraySet ` in ` LuceneAnalyzerUtil . java ` and ` LuceneTokenizer . java ` to
refactor exception handling in ` OptionTest ` and ` ResourceManagerImplTest ` to improve readability and maintainability of the test code
[ py4j ] do n ' t delete object if it ' s an entry point .
updated conditions in ` SegmentsInfoRequestHandler . java ` and modified conditional logic in ` CollectionsAPISolrJTest . java ` to improve document handling
updated the calculation of ` numPredictiveAppCols ` to use ` isPhone ( ) ` instead of ` Math . max ( numColumns
added a static method ` hasScalarSubqueryInput ` to ` JoinUtils ` for checking scalar subqueries in ` JoinUtils . java ` to
add blockbuildcraft to make it easy to remove craft from the inventory .
refactor layout parameters in DeviceProfile . java to use FrameLayout ' s LayoutParams for better layout management to improve code readability and maintainability by
updated the method call from ` run ( ) ` to ` start ( ) ` in ` YahooSession . java ` to ensure that the session is
updated the handling of the ` ms ` variable in ` HiveMetaStoreClient ` and modified the shutdown logic in ` HiveMetaStoreClient `
updated getDisplayScript method to include Category . DISPLAY in Locale . java and added a test case for zh - Hans - CN to
updated references from ` CORE _ NAME _ PROP ` to ` ZkStateReader . CORE _ NAME _ PROP ` in ` Replica
replaced ThreadLocalRandom with Random for random number generation in StoreDirectTest . java to improve performance and reduce contention in concurrent environments
added a check for the launcher state before calling backup methods in LauncherBackupHelper . java to ensure backup operations are only executed when the launcher is
updated IllegalArgumentException messages to include additional context for space validation to improve debugging by providing more context in exception messages
added resilience pooledrouteoktest for camel - core . thanks to sergey for patch .
rename ` mBodySpace ` and ` mBarSpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming convention
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ test ] use temporaryfolder in filemessagehistorytest
added debug logging for express , quartz , and mongodb driver in Grasscutter . java to improve logging detail for easier troubleshooting
changed the visibility of the ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery `
updated conditions for exiting overview mode and workspace state checks in Launcher . java to ensure proper behavior when the workspace is not in the normal state
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability across array assertions
added a conditional check for cacheable before notifying the new template in SnippetTemplate . java to ensure that notifications are only sent when cacheable
added new constants for SCOPE _ ENTITY , SCOPE _ GLOBAL , SCOPE _ DOC , and SCOPE _ SOLR _
updated the CREATE TABLE statement to include a primary key for the measurement table and added a test for primary key retrieval to ensure the database schema correctly identifies
[ pantheon ] rename -- permissions - config - path to -- permissions - config - file
removed unnecessary session creation logic in HttpSessionContextIntegrationFilter . java to streamline the code for improved readability and maintainability
added a new file TestIfWithDeadRegion . java that implements a method to retrieve a string from a string using a Supplier to facilitate testing of
corrected the spelling of " EnglishUdLas " to " EnglishUSD " in DependencyParserITest . java and DependencyParser
refactor ` SnowflakeIdGeneratorTest ` to use ` HighResolutionTimer . enable ( ) ` and ` HighResolutionTimer . disable (
added staticUi property and conditionally hide toast bar based on shared preferences to improve user experience by allowing customization of the toast bar behavior based on
replaced ` new Privilege ( ) ` with ` LocalFree ( pLuid ) ` in ` WindowsSecurity . java ` to ensure proper resource management
replaced calls to ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` to
updated JOptionPane to use localized strings instead of hardcoded strings to enhance internationalization support for dialog messages
tika - 3666 , tika - 3666 , tika - 3666 , tika - 3666 , tika - 3666
added logging statements and refactored method signatures in Runner and FeaturePathFeatureSupplier to improve logging clarity and maintainability to enhance debugging capabilities and
camel - 14263 : camel - eip - documentation - enricher - fix the indentation of the xml output
add a synchronized method ` removeVersionInfoForEndpoint ` to ` MigrationCoordinator ` and implement a new method ` removeVersionInfoForEndpoint ` to
added debug logging for capture devices in DeviceConfiguration . java and modified conditional checks in DeviceConfiguration . java to improve debugging capabilities and ensure proper handling of
added WebSocketConfig to manage WebSocket connection limits to enable dynamic configuration of maximum frame payload size in the WebSocket client
add test listener to cachevalidationlistener to prevent memory leak
added a check to trim the content length before adding it to the document to ensure that empty content lengths are not added to the document
[ hotfix ] fix synchronization issue in defaultsolverjob
[ iotdb - 5241 ] ignore a non - exist pathalreadyexistexception when concurrent insert ( # 7141 )
added a new method ` check ` to the ` Authz ` class to provide a way to check the result of authentication
changed access modifiers from public to protected in multiple classes to enhance encapsulation and improve code readability
server : check if a virtual ip address be reserved for reserved vlans ( # 5212 )
updated HttpParser to set _ valueString to an empty string instead of checking for RFC2616 to simplify value parsing logic and improve test coverage for
refactor initialization and output handling in J9VMInternals and Thread classes to improve code clarity and maintainability by consolidating initialization logic
added methods to create and manage external storage directories in ShadowEnvironment and created corresponding tests in EnvironmentTest to enable testing of external storage state management and ensure
[ jbrules - 2530 ] fix mvel type coercion error in mvel ( # 292 )
reformatted code for consistency and readability in LoggingConfig . java to improve code readability and maintainability
added exception message to the logger in ActionNode . java to provide more detailed error information for debugging purposes
added support for extracting tel : from a number in SipUtil . java to ensure correct parsing of the TEL format in the input string
refactor the visibility logic for sharedWithMeIconV in FileListListAdapter . java to improve readability and maintainability of the code
deprecate hive . optimize . sort . dynamic . partition . threshold in favor of hive . optimize . sort . dynamic . partition . threshold
refactor ExecuteStatementOperation and Operation classes to use static constants for configuration management to improve code readability and maintainability by reducing duplication
refactor BTCMarketsStreamingAdapters , BTCMarketsStreamingService , and BTCMarketsWebSocketSubscriptionMessage to use Arrays instead
[ geot - 5663 ] fix the ogrdatastoretest to use the correct type name
removed an unused method ` onErrorInStep ` in ` StepListenerSupport . java ` to streamline the code by eliminating an unnecessary method
refactor Wallet class to improve code structure to enhance maintainability and readability of the wallet functionality
camel - 15836 : camel - netty - http : fix camel - netty - http issue in camel - netty - http
replaced System . out . println and System . out . println statements with LogFactory in TestNonBlockingAPI . java to improve logging consistency and reduce verbosity
added a check to return false if the current row index exceeds the size of the connection list to prevent potential ArrayIndexOutOfBoundsException when accessing the database
[ net . sourceforge . pmd . rules ] add a new rule class with the same name as an enclosing class
added a new class ` ExtendedPlatformComponent ` and refactored mbean retrieval logic in ` ManagementFactory . java ` to improve management functionality by ensuring
added quotes to SQL strings in BasicQueryTest . java to ensure proper handling of special characters in SQL statements
updated URLs from " org / knowm / xchange / bleutrade / dto / " to " org / knowm / xchange / ble
refactor TextEscapeUtils class to improve code readability to enhance maintainability and facilitate future updates
added a filter parameter to the AbstractSpatialFieldType class and modified the FilteredQuery instantiation in TestSolr4Spatial to allow dynamic filtering based on local
removed progress handling for auto email sending in GpsLoggingService . java and added a post method in AutoEmailHelper . java to improve user feedback
replaced ArrayList with HashSet and refactored iterator methods in Inlinks and LinkDb classes to improve performance and readability of the code
[ tradfri ] fix race condition in tradfridiscoveryservice . removeolderresults ( )
updated filter handling in HiveMetaStoreClient and added a test for blocking mode in TestFilterHooks to improve filtering behavior based on server - side filtering
added a new ` Abandoned ` status to the ` TicketModel ` class and updated the ` TicketsPage ` to remove
[ java ] remove null value for columnaliasprefix in platform class .
updated LlapRowRecordReader , LlapRowInputFormat , and LlapRowInputFormat to use BytesWritable instead of Text to improve data handling efficiency
terasology : warn if run on a 32 - bit jvm on a 32 - bit system .
refactor conditional checks in PdfCopy . java for better readability to improve code clarity and maintainability
added a new daemon option for running the web pendant UI in TerminalClient to enhance user experience by providing a web pendant UI for
added a new file ` FlushIndexTask . java ` that implements a ` PerfRunData ` class to flush the index buffer when a performance
patch by jbellis ; review by gdusbabek for cassandra - 11899
added support for SEASONS output in the MediaLibraryFolder . java file to ensure compatibility with additional output formats
added a new file LocalSocketAddress . java to test IPv6 availability to ensure that the local socket address matches the specified IPv6 address
updated grid size points in GridSizeMigrationTask . java from 2 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 5
replaced direct calls to ` getName ( ) ` with direct calls to ` getClass ( ) ` in ` SerializerPojo . java ` to improve code read
added read - only options and modified commit and rollback methods in the Context class to ensure transactions are committed and mutated only when in read - only
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future updates
updated the calculation for lastRunEnd from ` runEnds . floor ( ) ` to ` runEnds . ceiling ( boxIndex ) `
added EOFException and EofException to the assertion in GracefulStopTest . java to ensure proper handling of both ClosedChannelException and EOF
do n ' t use lock for listener . get ( httpRequest ) . remove ( httpRequest ) .
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
added a conditional check for account asset optimization in CommonParameter . getInstance ( ) to ensure account asset optimization is enabled based on the current configuration
added a new constant J9 _ GC _ POLICY _ NOGC to the VM class to set a no - garbage collection policy to zero to
added error handling for invalid contract protocol buffer retrieval in TransactionCapsule . java to improve robustness by throwing a P2pException for invalid
[ net . sourceforge . pmd . rules . strictexception ] remove unused exceptiontypechecking . java
updated resource path in HelpContent . java to use " en / " instead of " en / " to improve localization handling and provide clearer error
added a new file ` ProcessorInfo . java ` that retrieves the number of available CPUs and masks CPUs to provide a structured way
add option ` ` - html ' ' to generate html output .
[ logback ] make logbackxmllocation optional and use jakarta dependency .
refactor HostLevelParamsHolder to handle service component recovery events and update data structures accordingly to improve code clarity and ensure data integrity during cluster updates
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to enable dynamic handler creation based on user configuration to
refactor depType handling in RustCompileUtils to use a switch statement for better readability and maintainability to improve code clarity and maintainability
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter for query parameters to enhance the
hbase - 10213 do n ' t try to seek to the first KV in halfstorereader when the splitkey be empty
hhh - 14213 add miss ` ` isalways ( ) ' ' method and deprecate it in favor of ` ` always '
add a test case for nn . layernorm ( ) to verify that nn . layernorm ( ) use nn . nn ( )
replaced direct calls to ` showShareFile ( ) ` with direct calls to ` getFileOperationsHelper ( ) ` across multiple activities to streamline code
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of the ` LiquibaseUpdate ` plugin with relative
convert the proxy type from lowercase to uppercase in Proxy . java to ensure consistent proxy type handling regardless of casing
add MinecraftForge . getDungeonLootTries ( ) to make it easy to load modded loot .
refactor JdbcDatabaseSnapshot to improve column filtering logic based on table and column names to enhance performance and accuracy of column retrieval in the database snapshot
added a new container with a border and a label to the CSSBorderTest class to enhance the visual appearance and organization of container elements
add retryautoconfiguration and retryloadbalancerinterceptor to allow retry on http status code
updated constructor parameters in CellLayout from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure the layout behaves
updated the calculation of the parent task name in PinotHelixTaskResourceManager to use System . nanoTime ( ) instead of System . nanoTime (
added error handling for UncheckedIOException in ServiceResourceProvider . java to improve robustness by catching unchecked exceptions during service request processing
refactored the logic for determining index versioned files in IndexDatabase . java to improve readability and maintainability of the code
ggbround ( x ) : fix case when x = = 0 and x = = 0
refactor AnonCipherWithWantClientAuth class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ doc ] deprecate producertemplate in favor of producertemplate
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
fixed flaky test ( evictiontest ) by use assertallthetime ( ) instead of sleep
replaced the ` encodeInternal ` method with a ` saltedPass ` variable in ` Md5PasswordEncoder . java ` to improve code clarity and
replaced the use of ` ViewTreeObserver ` with a direct reference to ` mTaskRecyclerView ` in ` IconRecentsView . java ` to
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
[ flink - 20613 ] [ table - planner - blink ] fix max timestamp calculation in sstablemetadata
remove import of callparticipantpanel . * and set the preferred size of the security panel .
added a null and empty check for the presence of replies in multiple adapter classes to ensure that replies are only processed if they are not empty to avoid
added ` toString ( ) ` and ` equals ( ) ` methods to ` HitbtcBalance ` class to improve object comparison and hashing functionality
fix ( sql ) : fix order by clause with in statement
retryexhaustedwithdetailsexception : return the address as a string instead of a string to improve clarity and accuracy of error reporting
use opencookie instead of contextawareaction . open ( ) in editgcodefile
updated JsonToGrpcApplicationTests to use the org . hc . core5 . http . impl . classic . HttpClient and org . apache . http
[ grid ] fix power leak in pipepowerwart . sendenergy ( ) .
added a check to delete the temporary output file if it exists to ensure that the output file is deleted if it does not already exist
changed the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a new test for retrieving trades
added time limit checks in ReplayProcessor , ReplaySubject , and ReplaySubject classes , and corresponding tests in ReplaySubjectTest to ensure
updated the expectedCitation string format in CitationStyleGeneratorTest . java to correct the formatting of the expectedCitation string
added SQL insert statements and refactored the handling of media table columns in MediaTableFiles . java to improve code readability and maintainability by
ggb - 2255 : do n ' t show equation definition in exam when there be no equation
fix nullpointerexception when retrieve delete text button rectangle in text field .
hbase - 26165 metareader . setmetascannercaching ( ) should be set when startrow be null
updated the initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes to improve code readability and maintainability
added a new boolean flag ` ENABLE _ TRANSIENT _ TASKBAR ` to ` FeatureFlags . java ` to enable transient taskbar
refactor AccessExecution , AccessExecutionVertex , ArchivedExecutionVertex , and ArchivedExecutionVertex classes to improve code organization and maintainability
added a check for scale = 3 in IOSGraphics . java to ensure density is set correctly based on the scale value
rename ` optional ` to ` vararg ` in ` Parameter . java ` to improve clarity by reflecting the purpose of the variable
hbase - 25835 regionstatestore . getstate ( ) should log exception instead of log message
replaced ` AssertTask ` with a lambda expression for assertions in ` TestClusterUpgradeUtils . java ` to improve readability and maintainability of the
updated warning messages and refactored AsyncHttpConnection and LocalAsyncContextTest classes to improve clarity of warning messages and enhance code readability to enhance
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` class to control the visibility of arrows in the UI
added lock mode handling in Database . java and removed the testSetMode method in TestRowLocks . java to ensure proper locking behavior for
skip test on linux / amd64 on linux .
added checks for Integer , String , and IntValue in Scalars . java to ensure proper handling of Integer , String , and IntValue types
updated error handling for missing and multiple primary keys in CreateTableStatement . java to improve clarity and correctness of error messages related to table creation
added conditional logic to set drawable resources based on the LMP status in multiple classes to improve UI responsiveness when the LMP is enabled
fix VMServiceManager to throw an exception if there be no isolate to query for Flutter views to improve error handling and provide clearer feedback when
[ java ] add support for http / 2 and http / 2 . x and http / 2
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and clarity of the codebase
simonstewart : move seleniumcdpconnection . create ( caps ) to grid . router and make it a distributed cdp test
[ java ] add type parameter to @ aggregateroot to fix test failure
added support for handling prebuilt libraries in Python binary descriptions to enable proper management of prebuilt dependencies in the build process
added support for client authentication in NetServerOptionsConverter and removed the deprecated setClientAuthRequired method in HttpServerOptions and HttpServerOptions to streamline client
updated repl directory references from " / user / hive / repl / " to " / user / hive / cmroot / " across multiple files to
refactor task view retrieval logic in RecentsView . java to improve clarity and efficiency to enhance code readability and maintainability by consolidating
( chore ) camel - amqp : increase timeout for unit test
removed the call to clearAll ( ) in DataTableTopComponent . java to streamline code by eliminating unnecessary method calls
rename ` controller ` to ` flowcontroller ` in ` DecreaseContextLevelProcessable ` and ` SimpleModelProcessable ` classes to improve
added a new test for handling exchange sums in the OperatorTreeGenerator and added a new test for ConsumeAllChildrenPipelineBreaker to ensure
added LoaderHandler dependency to the module - info . java file to utilize the ClassLoaderHandler for class loading functionality
bugfix : solve ( ) do n ' t set the best solution in the event thread
added JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive data in JSON output
added a null check for the throwable variable in PlotListener . java to ensure that the code only executes when the throwable is not null
refactor query check to use a local variable for queryInfo to improve code readability and maintainability
fix autoworkbench not work when there be no recipe
fix : gl200text do n ' t parse hdop when there be no hdop
updated variable names and logic in AvroRecordToPinotRowGenerator . java to improve clarity and consistency in naming conventions
added multiple calls to ` HttpMethed . waitToProduceOneBlock ` in ` HttpShieldTrc20Token004 . java `
ww - 4100 add initializable factory to container to allow dependency injection
add longtasktimer sample to timerobservationhandler ( fixes # 330 )
changed ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and updated calculations for ` interval ` to improve
thymeleaf : deprecate unwrapped fragment expression in thymeleaf template
replaced HashMap with ConcurrentHashMap for _ attributes in SessionData . java to improve thread safety and performance in concurrent environments
fix for http : / / issues . apache . org / activemq / browse / amq - 2852 - avoid duplicate message in consumer
added constants for main and secondary color constants and refactored the extractInto method to improve color extraction logic to enhance color extraction accuracy and support for
added check for accessible folder before add it to src folder path list
updated the ` appendContent ` method to include a ` includeTitle ` parameter and modified related logic in ` NotesHelper ` to enhance functionality to include
changed the initialization of the sessionRegistry variable from a new instance of SessionRegistryImpl to simplify the sessionRegistry initialization process
added logging for reconnection completion and error handling in NettyStreamingService . java to improve visibility into connection status for debugging purposes
updated proxyFactory initialization to use JavassistProxyFactory instead of CglibProxyFactory to ensure compatibility with internal Javassist proxy
replaced ` ConcurrentLinkedQueue < Thread > ` with ` ConcurrentHashSet < Thread > ` in ` QueuedThreadPool . java ` to improve performance and reduce
refactor SocketExceptions and ExceptionText classes to improve exception handling and message formatting to enhance clarity of error messages and ensure proper address information is included
added a method to check if the view path is under the repository directory in ProjectView . java to ensure that the view directory is not inside the
add drag - and - drop functionality to the jabref frame
added new XX : + UseCompressedOops option in multiple test files to ensure proper handling of compressed memory in class dumping scenarios
removed error logging for invalid update log states in PeerSync . java to streamline error handling for better clarity and debugging
deleted the ConnectionHook . java file to remove unused code to streamline the codebase
solr - 12313 : remove the ' waitForReplicasInSync ' constant from distributedupdateprocessor
camel - 14284 : camel - swagger - api : fix the issue of parameterassert . isofarraytype ( ) .
updated version handling in ApexLanguageModule to use external version instead of a hardcoded value to ensure compatibility with external versions and improve access control
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a singleton instance of AggregateEngine and refactored the thread pool usage in OverflowQueryEngine to improve thread management and ensure proper shutdown of
updated WebSocketAsyncConnection constructor to accept ByteBufferPool instead of StandardByteBufferPool to enhance buffer management for WebSocket connections
added scrollToPositionWithOffset logic in UploadActivity . java to adjust scroll position based on the index to improve user experience by ensuring correct scroll positioning
fix ( sql ) : handle timestamp override by other column alias in sql code generator
refactor animation handling in LauncherAnimUtils and add transition animation in LauncherStateTransitionAnimation to improve animation performance and user experience during state transition
added a condition to disable the default user agent in the HTTP client based on the configuration to enhance flexibility by allowing users to disable the default user agent
added a check for Pubsubhubbub in FeedRefreshUpdater and ApplicationSettings to enable conditional handling of pubsub updates based on the service '
changed the finalize method from public to protected to allow subclasses to override the finalize method
updated the ` isAnonymousOrLocalClass ` method to check for synthetic classes in ` StubJarClassEntry . java ` to ensure that synthetic classes
[ dspace ] make sure dspacewebapp be not ui - specific
added a null check for leftTableAlias and implemented getTableAliasContainingColumn method in RowResolver to ensure that a semantic exception is thrown when a column
[ hotfix ] [ runtime ] add trigger identity to triggerkey . withidentity ( )
updated logger messages to use ` TransactionCapsule ` instead of ` TransactionCapsule ` for transaction failure messages to improve logging clarity and ensure
make basicmaptest more robust against slow machine
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig ` and ` TestHive
added TlsClientCertPolicy enum and refactored client certificate handling in GitBlitServer . java and GitBlitServer . java to
updated event handling and logging in KrakenFuturesStreamingService . java to improve clarity of subscription status and enhance debugging information
added support for the " Sec - WebSocket - Protocol " header in the WebSocket handler to enhance WebSocket handling by allowing specification of sub - protocols
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve visibility into fetch request processing for debugging purposes
updated the formatting of dimensions and label in HolidayEventFormatter . java to improve clarity and consistency in the output format
refactor inner class field handling in FinalizePrivateFieldsTest and add a method to ignore inner classes to improve code readability and maintainability by
[ hotfix ] fix typo in unexpectedjobexecutionexception javadoc
removed the ` ClassLoaders . internal . loader ` file and updated the ` buttonShouldBeOpaqueButtons ` logic in ` AquaLookAndFeel . java
updated docsEnum handling and cost comparisons in DrillSidewaysQuery . java and DrillSidewaysScorer . java to improve
added GeoDegeneratePath class registration in StandardObjects . java to ensure proper handling of geodegeneration paths in the application
removed the ` preFill ` parameter from multiple pool constructors in the ` ParticleEffectPool ` , ` FlushablePool ` , and `
updated taskbar launcher state handling in TaskbarLauncherStateController and modified bitwise operations in TaskbarStashController to improve taskbar state management
added null check for StyleInfo before comparing styles in CascadeDeleteVisitor . java to prevent potential NullPointerException when style is null
fix a bug that cause the status tab to not show up on the right side .
refactor icon retrieval logic in FileTreeViewHolder . java to improve clarity and maintainability to enhance code readability and maintainability by consolidating
[ hotfix ] [ test ] use contains instead of isequals for paralleluniversetest
fix concurrentmodificationexception in xmlreporter . gettestresults ( )
[ native ] add nativeprobabilityfunctionqueries to test native probability
added a call to ShutdownThread . deregister ( this ) in ClientContainer . java to ensure proper resource management and prevent memory leaks
hhh - 11486 - sybase ase15 dialect should not drop temporary table after use
simonstewart : do n ' t try to convert htmlunit color to htmlunit
refactor SolrCore , XMLWriter , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code readability to enhance maintainability and facilitate future updates
updated hex string format for address and reserve size in VirtualAllocCommitUncommitRecommit . java to improve clarity of allocated memory information for debugging purposes
do n ' t refresh ad playback state when ad group count change .
updated the equality check logic in MultimapSubject . java to adhere to the contract of Multimap . equals to ensure the method adheres to the
updated fetchPropertyValue calls to use unit _ hz instead of deg _ text for frequency value to improve clarity by using a more descriptive string
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
replaced ` putAll ` with a direct assignment of ` includedLabelSets ` in the ` all ` TreeMap initialization to simplify the code and improve performance by
[ fix ] vertexlighterflat : add normal element to the vertexformat element .
updated TracingClientInterceptor , TracingServerInterceptor , and TracingClientInterceptor to ensure span context is properly managed to improve span visibility tracking during
replaced ` ZoneId . of ( timeZoneStr ) ` with ` TimeZone . toZoneId ( timeZoneStr ) ` in ` ScheduledTrigger . java
added ` AsyncBucket ` and ` InMemoryExtension ` classes and updated ` Bucket4j ` and ` ConfigurationBuilder ` to include ` AsyncBucket `
added regex pattern matching for class directory in resexhausted003 . java to improve flexibility in specifying the test class directory location
removed unnecessary whitespace in AbstractConnector . java to improve code readability and maintain consistency in formatting
refactor OngoingStubbing class to improve code readability to enhance maintainability and facilitate future updates
added logic to reuse a WebServer based on a Optional < WebServer > to improve web server management by allowing reuse of existing web servers
replaced ` productConstructor ` with ` constructor ` in ` HttpClientUtil . java ` and added a static import for ` SolrHttpClientFactory . setHttpClient
added a check to clear the allowlist if it is not empty in ParametersInterceptor . java to ensure thread allowlist is cleared if it is not
updated the method call from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the
[ drools - 4071 ] do n ' t log gaps and overlaps if the hitpolicy be not COLLECT
added a new test method ` testSlidingWindowsCombine ` to the ` CombineTest ` class to validate the functionality of the combine function in the pipeline
added a check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to ensure apps are only bound when
camel - 14263 : camel - jbang - fix test that fail on slow ci server
refactor code for better readability and maintainability to improve code clarity and maintainability
refactor menu bar property retrieval and update usage logic in AquaMenuBarUI . java to improve readability and maintainability to enhance code clarity and
fix a bug in setrawlocation ( ) that be cause the player to crash .
updated query logic in SimpleJpaRepository to use CriteriaQuery for querying results to improve query performance and maintainability by simplifying the logic for
added methods to set timestamp , difficulty , and nonce for genesis block arguments in BlockUtil . java to enhance blockchain configuration for better transaction input
do n ' t force safepoint generation if not in gensafepoints
added null and empty checks for the list of children in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs classes to improve robustness
changed class visibility from package - private to public in ArtifactResolver . java to allow access to these classes from other packages
added thread termination and dispose methods in ClientConnectionHandler and BulletPhysics classes to ensure proper resource management and prevent potential memory leaks
added validation to ensure maxBufferedDocs is at least 1 to prevent illegal argument exceptions when maxBufferedDocs is less than 1
added functionality to save and restore login state in LoginActivity to improve user experience by managing login state during configuration changes
added null checks for ` next ` and ` valueExtractor ` in ` Pump . java ` to ensure that ` valueExtractor . run ` returns
added loadbalancer creation and access methods in HttpShardHandlerFactory and updated access modifiers in LBHttpSolrServer to enhance encapsulation
updated the order value from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy and
added server initialization and handler management in TestJNDI . java to enable better handling of server connections in the application
updated conditional statements in SortedDynPartitionOptimizer . java for consistency and clarity to enhance code readability and maintainability
removed the check for NIOEventLoop in FileStreamChannel . java to simplify the logic by assuming the loop is a NIO event loop
updated the calculation of ` newNumNulls ` to use ` newNumRows ` instead of ` oldNumNulls ` to ensure that the
camel - 14284 : camel - jbang - add kamelet support to camel - export
replaced OkHttpOAuthConsumer with AuthState and added authorization handling in OSMJob . java to improve security and error handling for uploading to Open
removed debug print statements from multiple test classes and updated method signatures in BasicPTXTest to streamline output and improve clarity of test results
added support for client authentication in the IoTDBRestServiceConfig and related classes to enable configuration of client authentication for REST services
refactored the injection logic in PropertyAndSetterInjection . java and added a new test class ChildWithSameParentFieldInjectionTest . java to
make bloom size configurable without system property
updated the cursor adapter parameter from false to true in HomeFragment . java and added preference refresh in TweetPager . java to ensure the cursor is
updated the intermediate header height ratio from 1f to 75f in ProfilePager . java to improve the visual appearance of the intermediate header in the scroll
replaced ` @ SuppressWarnings ( " null " ) ` with ` RuntimeEvent ` in multiple files and added a new ` RecompilationEvent
added HOST _ SYS _ PREPPED constant and related methods to Configuration and related classes to support pre - installed configurations in the a
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created a corresponding
added a loop to remove the first character from the location in DefaultServlet . java to ensure that the location starts with a slash to prevent potential errors
added property handling for entities and scores in StaticPipeline . java to ensure proper initialization and validation of properties in the StaticPipeline class
refactor filename handling in Frame . java and add configuration handling in WhoopsModule . java to improve code readability and allow dynamic configuration of Who
[ geos - 7906 ] catalogrepository should not throw exception if the datastore be not find in the workspace
refactor assertion methods in Assert . java to improve code readability and maintainability
renamed ` MultiLineTextTests ` to ` MultiLineGridlikeTextTests ` and added a new test class ` MultiLineJaggedTextTests
fix unit test so that it do n ' t fail on slow ci server
[ tsfile ] remove unnecessary ` ` writemeasurementscheams ' ' call from tsfilewritealignedwithtsrecord
updated the loop condition in TestPromotionFromSurvivorToTenvivorToTenvivorToTenvivorToT
updated the logging library path from " slf4j12 " to " slf4j - reload4j " in LoggingOptionsTests . java to
[ huobridge ] wait for the status detail assertion to be complete before proceeding with the test
updated package structure from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities . activities `
[ drools - 1276 ] disable unit test due to drools - 1276
added a new constructor ` PullRequestMergedEventsStream ` to handle schema file reading and logging in ` PullRequestMergedEventsStream . java ` to
refactor AbstractExpressionPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix typo in taskslot javadoc
renamed ` FIRE _ EXCEPTION _ ON _ FAILURE ` and ` CLOSE _ EXCEPTION _ ON _ FAILURE ` to ` CLOSE
added a check for the removal of a lock before releasing it in MoveTask . java to ensure that locks are only released when they are not
refactor property retrieval to use ResourceBundle for better resource management to improve code readability and maintainability by reducing boilerplate code
transaction : use byteutil . empty _ byte _ array instead of zero _ address .
refactored the initialization of ClassInfo in ClassGraphClassLoader . java to improve code readability and maintainability
make the blob storage directory non - exist in jobmanagerstartuptest
chore : [ clouddatastream ] update clouddatastreamresourcesproto . java ( # 43 )
added extras to the builder in FileDisplayActivity to support additional configuration options for the activity
fix a bug in the particle emitter when there be no particle .
updated expected cluster name assertions in AmbariManagementControllerImplTest . java from 2 to 1 in AmbariManagementControllerImplTest . java
updated the ` @ Column ` annotation in ` TransientSessionTicketImpl . java ` and added exception handling in ` JpaTicketRegistry . java
updated Bug4823811 . java file to fix an issue related to bug 4823811
added a path relativization function to the args addition in RmStep . java to ensure the pattern deletion is relative to the project '
[ deconz ] retry full state request if initial request fail ( # 8704
replaced ` convertSaltToByteArray ` with ` getAttribute ` and ` setAttribute ` methods in ` ShibbolethCompatiblePersistentIdGenerator ` to improve
corrected the spelling of the @ Inject annotation in RequestValidationService . java to improve code readability and maintainability
added functionality to hide the STATS LOGGER message in UiThreadHelper . java to improve user experience by ensuring the keyboard is hidden when the user
updated conditional statements in FileNodeProcessor . java and MManagerBasicTest . java to improve code readability and ensure proper cleanup of Tsfile
refactor NavigableMap , NavigableSet , and NavigableSet classes to improve code organization and maintainability
added a test method to validate the functionality of slurpfile ( ) in IOUtilsTest . java to ensure that the slurpFile method behaves
updated access modifiers of ` client ` and ` wrap ` methods across multiple classes to improve encapsulation and clarify functional interface usage
refactor span retrieval logic to use a dedicated method for checking span names to improve code readability and maintainability by reducing duplication
added support for DateWritable in the Hive schema converter to support date data types in Parquet to enhance data handling capabilities for date data types in Hive
updated the split method to use Patterns . COMMA _ SEPARATOR instead of a hardcoded string to improve code readability and maintainability by
ggb - 260 do n ' t throw invalidinputexception when start value be invalid
refactor column comparison logic for table and row fields in SemanticAnalyzer . java to improve readability and maintainability of the code
updated the logic for updating the maximum scores in WANDScorer . java to improve clarity and correctness of scoring logic
refactored the Correspondence class for improved clarity to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to improve clarity and maintainability of the code
updated the default value of ` curPixVal ` in ` XRSolidSrcPict . java ` and added a new test class `
refactor biome dictionary to use supertypes instead of subtypes
renamed ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and maintainability by using a more descriptive variable name
added imports for LOCAL and PLATFORM _ POSTSUBMIT and modified the @ Ignore annotation in TaplTestsLauncher3 . java to enhance stability
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure the log file suffix is not empty before proceeding to prevent potential errors caused by empty log file suffixes
refactor PythonBuckConfig class to improve configuration handling to enhance performance and maintainability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManager and ShadowApplicationPackageManager to enhance functionality for managing system shared library names in the
fix meiligao protocol decode ( fix # 323 )
added a null check for the tile before calculating battery stored and total battery capacity to prevent potential NullPointerException when tile is null
added a new ` TrimCache ` class and enhanced cache trimming functionality in ` PrefFragment . java ` to improve cache management and provide user feedback
chore ( deps ) : remove unnecessary api client import
replaced return statements with ` throw ` for ` NotAuthorizedException ` in multiple classes to improve error handling by providing a more specific exception type
refactor schedulePeriodically method signatures and suppress warnings in the Scheduler class to enhance code clarity and maintainability by reducing boilerplate
replaced refreshListOfFilesFragment with a call to onItemClicked in FileDisplayActivity to improve user interaction by notifying when an item is clicked
added debug logging and stream selection logic in StreamUtil . java to improve error handling and provide clearer logging for file matching issues
refactor createTempTable method to accept CreateTableRequest instead of EnvironmentContext to simplify the table creation process and improve code clarity
added a volatile flag ` aborted ` and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to
added indentation checks in BlockQuoteParser , DocumentParser , FencedCodeBlockParser , and ListBlockParser classes to improve block parsing logic to
added a new class ` NetworkWifiStatusReceiver ` and ` ChangeWifiStatusEvent ` to handle network status changes in the ` PostFragment ` and
refactor control frame validation to simplify the condition to improve code readability and maintainability
added visibility setting for the collapse handle in WidgetsBottomSheet to ensure the collapse handle is displayed when needed
added new files ` Issue475 . java ` and ` XSS . java ` for handling HTML and JavaScript in the ` Jooby `
added a check to return early if ` e . getUnitsToScroll ( ) ` is zero in ` StandardGraphIO . java ` to prevent
updated the condition from checking if the size of contract list is less than one to checking if it is less than or equal to a single contract list
added methods to ` JsonArray ` , ` JsonObject ` , and ` put ` in ` JsonArray ` , ` JsonObject ` , and ` JsonArrayTest `
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class for testing print services to ensure consistent hash code generation
[ zeppelin - 2058 ] fix db2idialect and db2zdialect . issameorafter ( )
added a condition to check if the platform fee is non - zero before enabling the connection to ensure that the connection is only enabled when the transaction '
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
fix buffer subsample data before call
removed the ' public ' access modifier from multiple class declarations to enforce encapsulation within the same package
added import statement for Retrofit in Part and PartMap classes to utilize Retrofit functionalities in the application
refactor JsonBuildHelper , ParamsBuildHelper , ParamsBuildHelper , ParamsBuildHelper , and JsonBuildHelper to improve parameter handling
added TYPE _ TASKBAR _ OVERLAY _ PROXY and TYPE _ OPTIONS _ POPUP _ DIALOG in AbstractFloat
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated alpha calculation logic in ClipAnimationHelper and added support for hasRecents in RemoteAnimationTargetSet to improve animation behavior for task recency
updated the method call from ` createRenderScript ( true , true ) ` to ` createRenderScript ( true , true ) ` to simplify the
refactor PMD class to improve code structure to enhance maintainability and readability of the code
refactor PluginListCellRenderer and PluginTableModel to use a new method for checking system bundles to improve code maintainability and readability by centralizing the
updated import statements and formatting in IntegrationTestSparkBulkLoad . java for consistency to improve code readability and maintainability
keychaingrouptest : use low false positive rate instead of hardcoded value
refactor configuration retrieval and selection logic in Overview . java to improve code readability and ensure proper selection of motor configurations
server : fix findattache ( hostid ) return null when agent be not find .
added null check for the value in DefaultRecordStore . java to avoid potential NullPointerException when accessing values
cloudstack - 10297 : throw exception instead of return null for non - kvm enabled machine
updated constant names for NO _ NAME and NO _ VALUE in ParamAction . java to improve readability and maintainability of error messages
updated constructor parameters in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to use Object instead of InvocationContainerImpl
added a method to strip parameters from method names in the LocationOpener class to improve method clarity by removing unnecessary parameters
updated VERSION _ NAME and VERSION _ CODE from " GreatVoyage - v4 . 1 - 56 - g0ba5c77 "
fix for geos - 5131 : use set instead of list to avoid concurrentmodificationexception
[ geot - 6863 ] symbolmblayer should use label cache instead of hardcoded value
ggb - 118 : center popups when overlap feature be present .
updated error messages in ValidationSuite . java for consistency and clarity to improve code readability and maintainability by standardizing error messages
added a ` StartingWindowListener ` class to manage the transition manager in the ` QuickstepTransitionManager ` to improve the handling of task launching events
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to clarify the inherited documentation related to MBeanServerConnection
updated exception handling in CheckPackageAccess . java to include PackageAccess and PackageDefinition checks to improve clarity and accuracy of exception messages related to security exceptions
increased the timeout duration for the executor service in ThreadSafetyTest from 30 seconds to 90 seconds to allow more time for the executor service to terminate
changed the loggingEnabled variable from a static boolean to a Boolean and added a new test class XRLogTest to ensure logging is enabled only when
added @ JsonIgnore annotation to Schema class to exclude certain fields from JSON serialization
increased test timeout from 5000 to 10000 in TestNonTxIndexBuilder . java to allow more time for tests to complete successfully
refactor the ` train ` and ` train ` methods in ` SimpleNaiveBayesClassifier . java ` for improved clarity and functionality to enhance classification
added a new class CheckHelperControllerModule and added AuditLoggerModule to the CheckDatabaseHelper class to enhance module functionality by incorporating audit
refactor Prototype class to improve code structure to enhance maintainability and readability of the codebase
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure proper initialization of the table is transactional property
[ java ] : remove unused writefragment method from recordingwriter .
[ java ] : fix a bug where the cue index be not set when the subtitle be empty .
updated groupByTypeAndTag calls to use " alias " instead of " metricName " in KairosDatastoreTest . java and added an alias
updated the list of currency pairs from " BTC _ CAD " to " USD " in VaultOfSatoshiBaseService .
hhh - 14213 ensure proper resource leak in unit test
updated import statements for KafkaSender from ` zipkin2 . reporter . kafka11 ` to ` zipkin2 . reporter . kafka . KafkaSender
added GwtBinaryIntegrationTest . java and A . java files for testing GWT binary builds to ensure that the build process can be able to build
added a condition to hide loading cause label and adjusted conditional logic in BrowserContentPane . java and SQLConsole . java to improve user experience by preventing
updated randomizer retrieval logic in EnhancedRandomImpl . java and added new test cases in EnhancedRandomImplTest . java to improve
added XMLSecurityPropertyManager to DTDConfiguration , SAXParser , and NonValidatingConfiguration classes to utilize XMLSecurityPropertyManager for improved XML security
added a new file InterfaceWithDefaultMethod1 and Subtype classes with default methods to demonstrate the usage of default methods in interfaces and subclasses
updated SQL queries in SqliteFieldPredicateView . java to use ` GLOB ` instead of ` LIKE ` to improve performance and
[ drools - 4071 ] make getdmnprofiles ( ) protected to allow subclass to access it
fixed - redissonscript . writeallasync ( ) method do n ' t work in distributed mode
[ java ] remove unnecessary string concatenation in espresso language .
updated logging statements to use ' d ' instead of ' debug ' in multiple files to improve log granularity and provide more detailed information during
fix memory leak in fmloutboundhandler . sendproxy ( ) .
added a new constant ` HTTP _ JETTY _ SERVER _ HANDLERS ` and modified thread pool initialization in ` WebServer . java
refactor shortcut management to handle removed shortcuts more efficiently to improve shortcut management and avoid unnecessary updates
remove unnecessary type check for String in conversionService . convert ( ) to improve code readability and maintainability
removed the navigateUp ( ) method from DetailFragment . java to streamline navigation logic for better user experience
added a check for the AndroidMarket presence before checking if the play services are included to ensure that play services are only included when the AndroidMarket is
update cell parsing logic in TableBlockParser and add new test cases in TablesTest to improve handling of whitespace around pipes and ensure correct HTML table rendering
added bridging header handling in NewNativeTargetProjectMutator and related classes to support customizable bridging headers in the project generation process
updated PotentiallyDeadCode . java to improve handling of unused methods and streamline path management to enhance code clarity and maintainability by standardizing
added functionality to detect and log redundant arguments in the diamond finder to enhance the detection of redundant arguments in the code
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) `
removed debug logging statement for registering cache metrics in SolrCacheHolder . java to clean up the code and reduce unnecessary log clutter
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error management during authentication failures
updated the comparison logic in Test6796786 . java to check for negative values to ensure accurate validation of zero in floating - point comparisons
added a local file for " logback . dev . xml " in the JoobyMojo and Main classes to include the " logback .
added a new class JaasEventCheck to handle Jaas authentication events to improve event handling for Jaas authentication in the security provider
refactor view management in QuickstepTransitionManager to use a list of visible views instead of a single page to improve code readability and maintainability
modified the comparison of StringDistance in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure correct
replaced HashMap with Map in ShadowSystemServiceRegistry . java to improve code clarity by using a more appropriate data structure
[ hotfix ] [ log ] remove unused constant in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
cloudstack - 2539 : add agent . script . timeout property to allow customizable script timeout .
updated JDBC _ TABLE and JDBC _ SCHEMA parameters in AbstractJDBCConnectorProvider . java to include JDBC _ SCHEMA to enhance database connection
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to improve code clarity and maintain consistency in SQL
replaced the synchronized map implementation with a computeIfAbsent method for schemaTypeCache to improve thread safety and performance when accessing the schemaTypeCache
refactor header addition logic in StaticServerHttpHeadersWriter to check for duplicates instead of adding them to improve efficiency by avoiding unnecessary header additions when
added JUnit @ Ignore annotation to LatticeDemo . java to ignore tests that depend on files available only from the CMU
added a call to mkdirs ( ) in TestCollector . java to ensure the directory structure is available for testing purposes
added chunked streaming mode setting in StarTreeJobUtils . java to improve performance by reducing the frequency of data transfer
jsonschema : add basic and single type syntax checker and add test
hbase - 26464 : move com . google . protobuf import from com . google . protobuf to org . apache . hbase . thirdparty .
added a test to ensure that beans with recursive structure does not cause stack overflow exception to ensure that bean population does not cause stack overflow errors
added IOException to the getRemoteName method in AccountingTransceiver . java to ensure proper handling of IO exceptions during method execution
updated exception handling and added HttpClient creation in UserAccountManagerImpl , ConnectivityServiceImpl , and ConnectivityServiceImpl classes to improve error handling and
updated WebSocketConnection . java and ExplicitDemandTest . java files to improve WebSocket connection handling and enhance test coverage
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration by allowing pointcut methods to be used with pointcut definitions
updated import statements and added hostname verification logic in the Connection class to enhance security by allowing configuration of endpoint identification in SSL connections
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enhance
updated method calls from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) . joinInternal ( ) . joinInternal
removed redundant joint removal logic in World . java to improve code readability and maintainability
fix npe in searchfilter when filterstring be null
[ hotfix ] [ test ] make sourcereadertestbase . sourcereadertestbase package public
refactor document retrieval logic in DocumentsStorageProvider . java to improve code readability and maintainability by reducing redundancy
added a new interface ` HookDefinition ` and ` JavaHookDefinition ` in the ` cucumber . runtime ` package to provide a structured way to define
refactor synchronization logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing duplication
added an ` allowTs ` parameter to the ` setExoOptions ` method and modified the ` setExoOptions ` method to accept
remove user and role from the identifier collection to clean up unused identifiers in DMRDecoderState . java
replaced instances of ` new Color ( 1 , 1 , 0 ) ` with a static constant ` INVISIBLE ` in ` Color . java ` to
added null handling logic for identifiers and function types in CountAggregationFunction and added a new test for null handling in NullHandlingIntegrationTest to ensure correct handling
added a new variable ` deep ` in ` InternalTransaction . java ` to initialize the ` deep ` variable to indicate that the transaction is not deep
updated the way the name is stored in the buffer to ensure that XML attributes are properly escaped to prevent potential XML injection vulnerabilities
updated work directory handling in multiple classes to use a configurable work directory to improve flexibility in configuration management by allowing users to specify a custom work directory
added a check to set the rule ' s deprecated status in RuleSetFactory . java to ensure that the rule is marked as deprecated when specified in
amd64directcallop : use codebuffer . position ( ) instead of codebuffer . position ( ) .
added static final constants for minStamp and maxStamp in TimeRange . java and added a test for it in TestTimeRangeTracker . java to
refactor BitDocIdSet class to improve code organization to enhance maintainability and readability of the code
refactor connection handling in AbstractTimelineMetricsSink to utilize a dedicated method to improve code readability and maintainability by reducing duplication
updated conditional checks in DetailFragment . java and added video handling in GalleryActivity . java to improve code readability and ensure proper handling of video
allow tank . fill ( ) to be call only if the world be in a remote mode .
added dependency checks for ` RuleAnalysisLegacyBuildRuleView ` in ` CsharpLibrary . java ` and modified dependency checks in ` RuleAnalysisLegacy
iqpephandler now process pep and dummy service if available
added a null check for the runtime before evaluating intrinsicGraph in IntrinsificationPhase . java to ensure that intrinsicGraph is only evaluated when runtime
updated condition to check if the active list is not empty before refreshing it in MetricTrackingWindmillServerStub and StreamingDataflowWorker
pdfbox - 4892 : do n ' t increment objectid / genid while read from pdfs
added constructors to LwjglAppletApplication and modified canvas handling in LwjglApplet to ensure proper initialization of the application
updated the string representation of DockerClientConfig in EnvironmentAndSystemPropertyClientProviderStrategy . java to include a null check for the DockerClientConfig object to improve clarity
refactor the ` doPostAuthentication ` method to handle different message lists based on account state to improve code clarity and maintainability by consolidating
updated Int2ObjectCache class implementation to improve performance and memory usage
added a private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to set the resolveFromAttribute `
refactor Readable class for improved readability to enhance maintainability and readability of the code
refactor JsoupNonVisualRegressionTest to use TestSupport . WITH _ FONT for page break avoid stuck to improve code readability and
updated the icon for the share menu item in CaptureActivity . java to improve the visual appearance of the share menu
updated Java version handling in Constants . java to utilize StringTokenizer for improved version management to enhance compatibility with different Java versions and ensure compatibility with newer
[ java ] handle non - JDBC 41 compliant driver .
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced ` Set ` with ` ArrayList ` for storing elements in ` Enclosed . java ` to improve performance and maintainability of the code by using
added multiple @ Override annotations in CentralAuthenticationServiceImpl and ImmutableCasView classes to enhance code clarity and ensure proper method overriding
added multiple line breaks in ChartProvider . java to improve readability and maintainability of the code
fix dir preference for bibtex db ( # 4134 )
modified the return statement in JavacParser . java and added a new ExtraSemiTest . java file with additional semi - colons to improve
added handling for AFTER and BEFORE cases in User and UserRepository classes to support the retrieval of user records based on their created timestamps
updated Test15FloatJNIArgs . java for improved functionality to enhance performance and maintainability of the code
updated version and wiki formatting in the plugin . java file to improve readability and maintainability of the code
fix incorrect substring index in MockProcessContext . java and add a new test for encryption and decryption in TestMockProcessContext . java to ensure
[ java ] ensure that reentrant call be not permitted during callback .
refactor dependency merging logic to check for null dependency before merging to improve code readability and prevent potential NullPointerExceptions
added timeout annotations to the @ Test annotation in SslBytesServerTest . java to ensure tests do not hang indefinitely
refactor Peer class to improve code readability to enhance maintainability and facilitate future updates
refactor RealtimeIndexingCoordinator , StreamProvider , StreamProviderConfig , StreamProviderConfig , StreamProviderConfig , and StreamProviderConfig to improve
added null check for exportedData before writing to output to prevent potential NullPointerException when exporting view capture data
refactor popup positioning logic in RecyclerViewFastScroller . java to improve code readability and maintainability by encapsulating scroll thumb radius
updated the message in BuckWSServerPortUtils and added a method to check if the tool window is instantiated in BuckEventsConsumer to improve clarity
added a conditional check for Windows before adding a JCheckBox for preventSleep in GeneralTab . java to ensure that the checkbox is only added on Windows devices
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java ` to align
added cropping logic for window dimensions in QuickstepAppTransitionManagerImpl . java to ensure correct window dimensions are used based on vertical bar layout
added full - screen exclusive mode functionality to the AWTPermission and XWindowPeer classes to enhance security warning visibility based on the full - screen '
[ pms ] fix stringutil . getplayeddurationstr ( ) to return correct length
added methods to add credentials for MapWork and ReduceWork in DagUtils to improve credential management in the DAG implementation
camel - 14263 : camel - jbang - use entryset . entryset instead of keyset . entryset . entryset .
trim trailing whitespace from thread names in SessionState . java to ensure consistent thread naming by removing leading and trailing whitespace
updated the message message in GpsMainActivity from " Not yet " to " Not yet " in GpsMainActivity . java to improve clarity
refactor Job class to improve code structure to enhance maintainability and readability of the code
added a new abstract class ` Unused ` and a test method ` testUnusedType ( ) ` in ` Main . java ` to verify type
hbase - 26486 addendum update hbase _ master _ host to hbase _ master _ hosts ( addendum )
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of records instead of a single record to improve data handling by allowing multiple records to be processed
updated MAX _ DELEGATE _ LOCK _ PERIOD logic and adjusted its usage in multiple classes to ensure maximum delegate lock period is within
do n ' t set the networkrate to null if it ' s empty .
added initialization and application of ExchangeSpecification in CmcExchange class to ensure proper initialization and application of ExchangeSpecification
updated seed node configuration retrieval to use a list of IPs instead of a configuration object to improve flexibility in configuring seed nodes by allowing dynamic IP
make clienttpcconfig default to false ( # 241 )
updated the Swagger UI version from 2.1 . 10 - 1 to 2.1 . 2 in multiple application classes to incorporate the latest features and improvements in the
refactor divide operation logic in MutableBigInteger . java and introduce ModInvTime . java for testing modular inverse calculations to improve clarity and functionality of
refactor key assignment logic in NamedObjectList . java to handle empty names more gracefully to improve code readability and maintainability by consolid
replaced direct calls to ` Util . cleanupEmptyDir ` with ` Util . cleanupEmptyTableDir ` across multiple classes to improve clarity and consistency in
updated AsyncCache . java and Cache . java files to improve performance and maintainability of the caching mechanism
added import for RCFileInputFormat and registered it in SerializationUtilities to enable serialization of RCFileInputFormat for improved data handling
added default methods for retrieving Java types and categories in TypeMapperComponent to enhance type and category mapping functionality for Column columns
added error handling for invalid host headers in Request . java and updated test cases in RequestTest . java to improve robustness by providing clearer error
updated TimeZoneFinderTest and ShadowTimeZoneFinderTest to utilize ReflectionHelpers for time zone retrieval to improve compatibility with newer Android API levels and enhance
removed the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods from ` StandardOp . java ` to streamline the code by eliminating unnecessary
changed the access modifier of ` cfsDir ` from ` segment ` to ` cfsDir ` in ` SegmentCoreReaders . java `
added ` hasMainThreadProfile ` method to ` AggregateDao ` , ` AggregateRepository ` , and ` TransactionCommonService ` classes to check if
added validation to ensure annotation definitions are not allowed in a Buck rule with required for source ABI absent or set to false to ensure that non -
corrected the spelling of " greekLowerCase " to " greekLowercase " across multiple filter factory classes to ensure consistency in
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
[ scb - 2576 ] use discoverysearchrequestprocessor in web ui since dspace 4.0
added logic to remove specific time zones from the list of time zones in BasicDateTime . java to improve date handling by ensuring only relevant time zones are
updated the SurfaceSyncGroup initialization to include a name " TaskBarController " to improve clarity by specifying the group ' s purpose
updated file deletion logic to use getId ( ) instead of BsonObjectId to simplify code and improve readability by removing unnecessary casting
added unit tests for querying column indices and bytes so far in ShadowDownloadManagerTest . java to ensure accurate retrieval of total size and total bytes
modified the condition for inserting text in the TextField class to improve readability and maintainability of the code
added a check to return early if the node is the same as the target to prevent unnecessary processing when the target node is the same
added a method ` afterSetStatements ` in ` BlockLexicalContext ` and refactored statement handling in ` BlockLexicalContext ` to improve code
added hashCode methods to IntervalXYDelegate and updated XYSeriesCollection classes to utilize HashUtilities for hashing to improve hash code generation for better
add cleanup to clientqueuedisruptiontest . init ( ) and clientqueuedisruptiontest . cleanup ( )
added a new test method for verifying scripted attribute filter in ` CloudWatchAppender . java ` and updated related imports in ` Cas
updated method name from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in ` Gson . java `
added calls to waitToProduceOneBlock and waitToProduceNextBlock in HttpTestZenToken002 and WalletTestZenToken
added checks for non - empty subtags in LanguageTag . java and improved language tag handling in LanguageTag . java to ensure that language tags are
add config for kvm . ssh . to . agent to allow kvm to ssh into kvm agent
changed access modifiers of ScheduledAction and related classes from public to package - private to enforce package - private visibility for better encapsulation
removed the import of ` PagerSlidingTabStrip ` from ` EmojiKeyboard . java ` to simplify dependencies and improve code clarity
added a condition to check if the filter contains a dash in the filter string to ensure that the filter does not contain a dash in the output
updated sort column order from " natural " to " natural column order " in BrowserContentPane . java and modified data model handling in Desktop . java
removed the unnecessary array copy operation from Utils . java to optimize performance by eliminating unnecessary array copying
added HTML encoding for remote address in HtmlSessionInformationsReport . java to ensure proper handling of remote addresses without spaces
updated the topic prefix from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to ensure the event matches the
refactor synchronization in FastHttpDateFormat . java to improve code readability and maintainability
added thread pooling for file moving operations in Hive to improve performance by limiting the number of concurrent operations during file operations
added a new ` trigger ` method and a ` period ` parameter to the ` WrapTimer ` class to allow users to specify a time period for
added support for LOCAL _ DATE and LOCAL _ DATE types in TypeInfoUtils and updated corresponding tests in TypeStringUtilsTest to ensure proper handling of additional
added a verbose option to the error logging in AbstractStatusReporter to provide more detailed error reporting for debugging purposes
added menu toggle functionality to ClickStartHandler and ItemControls classes to ensure the menu state is correctly handled when the menu is displayed
s2s vpn : ensure VPN connection be only esitablished between account and domain .
removed unnecessary error handling in CursorReadingTask and added a new test for error handling in CursorReadingTaskUnitTests to improve error management and ensure proper
pdfbox : do n ' t attempt to create thumbnail or extract text if it be encrypted
do n ' t need to shutdown the curator watcher executor service if it ' s not available .
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
updated the parameter name from ` getSelectedItemId ( ) ` to ` id ` in ` HostsList . java ` to improve code readability and
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the type of the ` replaceOrderBulk ` method from ` Collection < ReplaceOrderCommand > ` to ` List < ReplaceOrderCommand > `
changed the method name from ` enterDefault ` to ` enterIdentNode ` and added a new method ` enterFunctionNode ` to improve clarity and
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to use it to provide a utility method for
added a new test class ConcurrentModificationExceptionOnMultiThreadedVerificationTest to verify concurrent modifications and invocations to ensure that concurrent modifications occur
do n ' t throw usernotfoundexception when remove from a roster . jm - 144
replaced ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added ` getOverlayedProperties
updated method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check for extTypeCustomDesers in MessagePackFactory and updated copy method in MessagePackFactoryTest to improve robustness of the
removed system . setProperty ( " mockserver . logLevel " , " WARN " ) and set it to " WARN " in Main . java
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve clarity
removed unused imports and modified the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code and improve
added ` termScoreMap ` to the ` scoreMap ` variable and updated its usage in ` TestGrouping . java ` to improve clarity and
replaced ` & 0x8000000000000000L ` with ` & 0x8000000000000000L ` and added a ` eq ` method for comparison to simplify
removed the headline style setting for the text in MainViewModel . java to improve text appearance and consistency in the user interface
added a boolean variable ` didSupportDarkText ` and modified notifyChange logic to check for support of dark text to ensure notifications reflect changes in the
[ hotfix ] [ checkpoint ] do n ' t attempt to enqueue request on too many pending checkpoint
updated KEEP _ ALIVE _ TIME _ MILLISECONDS and KEEP _ ALIVE _ TIME _ MINUTES in Parallel . java to increase the
updated the filtering logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use ` anyMatch ` instead of ` filter ` to improve readability and
added TestRequirements . notWindows ( ) and TestRequirements . notArm ( ) to OpenCVImageFactoryTest . java to ensure compatibility with
http : / / issues . apache . org / jira / browse / amq - 3986 - improve test , copy prefetch policy on manage connection factory
[ py4j ] fix npe in getreturnvalue ( string , gateway )
added Repeatable annotation and a Repeatable annotation to the Issue class to enhance the functionality for managing multiple issues in the code
updated user properties from " hcat _ user " to " webhcat _ user " and modified test imports in BlueprintConfigurationProcessorTest
fix ( pgwire ) : use socksproxyhost instead of socket . connect ( )
[ hotfix ] [ runtime ] fix typo in slotreport javadoc
added import statement for org . apache . commons . lang3 . ClassUtils in ReflectionUtils . java to utilize the Apache Commons Lang library for
replaced HashSet with LinkedHashSet for _ excludeProtocols , _ excludeCipherSuites , and selected _ protocols , and selected _ ciphers to maintain
added a static method ` systemResource ` to handle resource retrieval in ` Resources . java ` to improve resource management by caching the system resource if it
added a constant for the EXTRA _ SIZE in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to
added a test for handling invalid circuit breaker URIs in ServerMvcIntegrationTests . java to ensure proper exception handling for invalid fallback URIs
added support for AllowAllHostnameVerifier in HTTP client creation to enhance security by allowing hostname verification for HTTP connections
removed resetting of ` cin . resetBytesReadCounter ( ) ` and replaced the ` resetBytesReadCounter ( ) ` method with a
added a ` preferAES ` boolean property and its getter and setter methods to the ` ProtectionPolicy ` class to manage the preference for AES encryption
camel - 14263 : camel - opentelemetrytestsupport should use log . info instead of system . out . println
remove elbintegrationtest . testloadbalancerinstanceoperations ( ) from elbintegrationtest
corrected the spelling of " setAlarm " to " setRingtone " in the AlarmReceiver class to improve code readability and maintain
added error handling for file creation in DiacriticTest . java to ensure that file creation fails gracefully when locale or file system is configured
hhh - 11736 - fix for oracle 11 compatibility with oracle 11
refactor texture and atlas file handling in TextureUnpacker . java to improve error handling and ensure atlas files are accessible
added locking mechanism for cluster write access in AmbariManagementControllerImpl . java to ensure thread safety during service state changes during concurrent access
refactor FilterChainProxy , DefaultFilterInvocationSecurityMetadataSource , and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a new test method ` testResultSetShouldNotCloseStatement ` to ` TestJdbcDriver2 . java ` and modified ` HiveQueryResultSet .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 490 . fix buffering
added logic to remove pre - deleted databases from the database schema map to ensure that only pre - deleted databases are processed
http : / / issues . apache . org / jira / browse / amq - 4273 - remove chunkedwriter from the pipeline
updated item ID checks in EnhancedBrowseFragment and added deleteItem method in FullDetailsFragment to enhance item deletion functionality and improve user experience by
refactored RuleBank and related classes to use a new RuleBank interface for rule management to improve code organization and maintainability by centralizing rule
added error handling to the init method in JcaTlsCrypto . java to improve robustness by catching potential exceptions during the ENCRYPT
added new files TestMonomorphicObjectCall . java and Object . java to implement and test monomorphic object calls in the Java environment
replaced ` removeMetaDataSource ( session ) ` with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop . java `
hbase - 27175 fix npe when scan . gettimerange ( ) return null
[ hotfix ] [ runtime ] rename local _ state _ directory _ root to local _ state _ directory
updated the ` AlterTimeSeriesStatement ` constructor to accept a ` true ` parameter and modified the ` AlterTimeSeriesStatement ` constructor to accept it as a
fix condition . matchtext ( string ) to match whole string and substring ( string ) .
added error handling for retrieving the routing table builder in HelixBrokerStarter . java to improve robustness by preventing application crashes due to invalid configuration
fix npe in httphttpclientintroductionadvantage advice
log4j2 - 1349 use char [ ] instead of string . getpassword ( ) for the jmspassword parameter
bug 10297 : do n ' t call session . invalidate ( ) when domain be in recursive mode
[ java ] remove counter . equals ( ) and counter . isuniformdistribution ( ) from counters .
updated the ` initialize ` method in ` BasicTumbleStepper ` to include warnings from the original ` SimulationStatus ` to improve error handling
[ gr - 32233 ] fix the system . currenttime ( ) call to transfertointerpreterandinvalidation .
updated the variable declaration in the PrettyPrinter class to use a variable reference instead of a tree reference to improve clarity and maintainability of the code by
added null checks for indexToNode [ currSize ] before creating new nodes to improve memory management and prevent potential null pointer exceptions
refactor the filtering logic in DatagramSocket and DatagramChannelImpl to improve clarity and functionality to enhance code readability and maintainability by encaps
updated TestQueryDNS . java to use JUnit 5 API for improved test structure to ensure compatibility with the latest testing framework
added a new file NutchServerInfo . java to provide NutchServerInfo class with server start and job information to provide a structured way to
replaced OffsetAttribute with AttributeSource for token attributes in EdgeNGramTokenFilter . java to simplify attribute management and improve code maintainability
added timestamp functionality to CqlInserter and ThriftInserter classes to allow users to specify a timestamp when writing columns
refactor DSAParameterGenerator to use BigInteger . ONE for strength checks and simplify BigInteger initialization to improve code readability and maintainability by using a
refactor NumberUtils to use intBits and doubleBits instead of doubleToLongBits in Numbers . java and update related imports in Numbers .
updated the mask check in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure proper masking behavior for IP addresses
added SQL exception handling for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of constraint violations in database interactions
[ issue # 5983 ] fix the brokeroffsetstore not set zero if not find
added methods to add and insert tabs with font and size parameters in Tabs . java to enhance tab management functionality and improve code organization
updated array sizes from ` size ( ) ` to ` 0 ` in multiple classes to improve performance by avoiding unnecessary array sizes
[ hotfix ] [ runtime ] add taskmanagerruntimeinfo to mockenvironmentbuilder
reformatted conditional statements in MavenVisitor . java for consistency to improve code readability and maintainability
updated variable names from " MOCK _ APP _ SECRET2 " to " MOCK _ NAME _ UPDATE " and added tests for selector refresh
added a new file ` FormatCheckingTest . java ` to test Java class format errors to ensure that the Java process correctly identifies and reports illegal class
updated the line number assignment logic in CodeGenerator . java to improve clarity and consistency in line number handling
added a try - catch block around the ` getProperties ( ) ` method call to handle potential ` Exception ` during property retrieval
added methods to create RadioButton instances with different icon and command parameters to enhance the functionality of the RadioButton class for better user interaction
increased the capacity of the LinkedHashMap in LRUCache and adjusted the CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFile
[ int - 1636 ] make the default capacity constant public and add indexed argument to the messagebus bean name .
added null check for symbolicName in OsgiManagementNameStrategy . java to avoid potential NullPointerException when symbolicName is null
fix : add -- external option to modecontribution . load ( )
[ hotfix ] [ yarnsessionfifoitcase ] add more logging to iomanager . shutdownhook
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and ` RobolectricTestRunner ` classes to
added a check for non - empty ` notPropagatedHeaders ` in ` AbstractMessageProducingHandler ` and created a test for it to
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future feature additions
implement HasTests interface in RustBinaryDescription , RustLibraryDescription , and RustLibraryDescription classes to enhance functionality by integrating test
updated placeholder drawable resources in FileMessageVH . java to improve clarity and consistency in error handling
refactor OnExitTest class to improve code readability to enhance maintainability and facilitate easier debugging
added a method to recreate the taskbar when user preferences change to ensure the taskbar is recreated when the user preferences change
added reflection - based methods for dumping heap dumps in HeapDump . java to support both IBM J9 and non - IBM J9 environment
camel - 14263 : camel - mybatis : ensure session be close in case of exception
simonstewart : fix the ie driver to be able to iterate over all open window
updated JDK version and added @ TriggerPattern annotations in IteratorToFor . java to improve compatibility with Java 5 and enhance code readability
set the application state to UNAVAILABLE in JmxApplicationProvider to ensure the application does not enter an unavailable state
refactor buffer position and rem calculations in ByteBufferAs - X - Buffer , Heap - X - Buffer , and StringCharBuffer classes to improve
updated method call from ` toUri ( ) . toUri ( ) ` to ` toMove ` in ` ConditionalResolverMergeFiles . java `
updated array deletion logic and added empty set methods across multiple array data classes to improve array management and ensure proper handling of empty states
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
replaced document additions with a new document addition in TestMultiPhraseQuery . java to improve clarity and consistency in document handling
added support for PENDING payment method in ReservationController and modified filter conditions in TicketHelper to ensure tickets are only assigned to available online for
added a new thread variable ` _ onTimeoutThread ` and refactored exception handling in ` HttpChannelState . java ` to improve thread management
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to improve logging detail for better debugging
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
patch by jbellis ; review by gdusbabek for cassandra - 1877
added support for " Home " model branding in HeosDiscoveryParticipant . java and modified player property handling in HeosPlayerHandler . java to
added a ` Wait ` property and its getter / setter methods to ` PlainSelect ` , ` SelectDeParser ` , and created a new class
refactor Neo4j to use AttributeController for managing node and edge properties to improve code maintainability and readability by centralizing attribute management
updated null check for ' from ' and ' serverName ' in SessionManager . java to ensure robustness by preventing potential NullPointerExceptions
nifi - 10266 : deprecate rocksdbflowfilerepository in favor of rocksdbflowfilerepository
updated the method to retrieve the " IS _ GRANTABLE " from a results object instead of a hardcoded string to improve flexibility by allowing
updated URL check in JavascriptContext . java to include a check for the " javascript : " prefix to ensure that the URL starts with " javascript
camel - 20297 camel - cxf : fix test failure on macos
added a check for a new column descriptor before modifying it in LoadTestTool . java to ensure that the column descriptor is correctly initialized before modify
added a Disposable interface to the Texture class to ensure proper resource management and prevent memory leaks
added null checks for tldBundleLocation and updated WebBundleDeployerHelper imports to improve robustness and clarity to enhance code robustness and
refactor GoQuorum compatibility check in BesuCommand . java to improve code readability and maintainability by reducing duplication
replaced IOException with Throwable and updated suppressed handling in HttpInput . java to improve error management by using a more appropriate error type
added a condition to check if the change in era is caused issues to ensure that the change in era is not caused by the change in era
updated @ ApiOperation annotations to use ` HostResponse . ResponseWrapper ` instead of ` Wrapper ` in multiple services to ensure compatibility with the latest API
addedBoost check to the equals and hashCode methods in FilteredQuery . java to ensure accurate query matching based on the boost value
added a semicolon to the constructor declaration in FileMenuFilter . java to improve code readability and maintain consistency
[ geo ] text edit : do n ' t show debug info if there be no debug parameter
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior with HWM to ensure correct
added check for empty entity list before create a forge event to prevent potential null pointer exceptions
replaced ` KeyMappingPreparedStatementSetter ` with ` ItemPreparedStatementSetter ` across multiple classes to align the implementation with the new Spring framework ' s
use identityqueryfilter instead of range for compaction test
added null check for the ` type ` attribute in ` MiniAapt . java ` and created a new test for invalid item resources to ensure
added support for SpELJudge in the OperatorEnum and created a new SpELJudge factory to enhance functionality to support Spel expressions in
[ hotfix ] [ table - common ] fix checkstyle violation in localexecutionplanner
bugfix # 26915 , use openide ' s lookup for default profiler
refactor Conscrypt classes to improve code organization and clarity to enhance maintainability and readability of the codebase
updated attribute resolution logic in AttributeResolution9 . java and changed variable types in ShadowArscAssetManager9 . java to improve error handling for attribute
updated the version number in fullOptions from " 1.6 " to " 6 " in SetupHid . java to ensure compatibility with the latest features and
changed access modifier of extractMetadataColumns method from private to public and added metadata extraction logic in PushProjectIntoTableSourceScanRule to enhance accessibility of
added imports and modified the way localized names are retrieved in AboutActivity . java to improve code clarity and ensure consistent retrieval of localized names from the
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
modified the delay logic in HomeFragment to conditionally refresh shared preferences based on live streaming settings to improve user experience by ensuring refresh occurs only when live
added exception handling to the MappingException in AuditConfiguration . java to improve error reporting for better debugging
camel - 20297 camel - file : fix test that fail on slow ci server
updated generic types in ` CompositeType ` , ` AbstractType < ? > ` , and ` DynamicCompositeTypeTest ` to use generics to
added transport support functionality to GitClientApplication and updated RepositoryUrlPanel to include transport support checks to enhance the application ' s ability to handle transport -
added gesture handling and logging capabilities to various input consumer classes to enhance user experience by providing clearer logging for input consumer interactions
fix npe in changeparentpom when mavenmetadata be null
added a check for " Large Page Support " in TestLargePageUseForHeap . java and modified command - line arguments in TestLargePageUse
cloud _ usage : skip migration if the cloud _ usage db do n ' t exist
http : / / issues . apache . org / jira / browse / amq - 4973 - fix test failure on window
added a new test class ` TestObjectStreamClass ` and modified ` ObjectStreamClass ` to test serialization and deserialization to ensure proper functionality of the ObjectStreamClass
refactor conditional checks for ` getDataCenterInfo ( ) ` in ` ZoneAwareDiscoveryFilter . java ` to improve readability and maintainability of
corrected log level from ` error ` to ` warn ` in ` OpenTracingTracer . java ` to improve log severity for failed tracing data capturing
added a toString ( ) method to the Generator class to provide a readable string representation of the registered generators
refactor URI quoting logic to use a local variable for clarity to improve code readability and maintainability
added a null and empty check for resources in ClusterControllerImpl . java and created a test for resource retrieval in ClusterControllerImplTest . java to
refactor response handling and error logging in AccepttoApiUtils . java to improve clarity and error handling for API response extraction
updated vertex buffer allocation logic in VertexBufferObject . java to ensure compatibility with Android versions lower than 5
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the code
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and modified its usage in ` HashJoinInfo ` to allow for backward
added a method ` getStringDistance ( ) ` to retrieve the string distance in ` SpellChecker . java ` to provide access to the ` sd `
added new flags and methods for mutability and mutable pending intents in AndroidImplementation . java to enhance security and ensure proper handling of push notifications on
added utility methods for setting and appending read column IDs in HiveFileFormatUtils to improve code clarity and maintainability by centralizing read column
updated the method name from ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper .
added temporary toast messages in SavedExperiments . java to improve user experience by providing feedback during offline operations
added logic to set the parent ' s version if it is null in ServiceModule . java and a corresponding test in ServiceModuleTest . java to
added a new test class ` RawSerializationTest ` to validate Gson ' s toJson method to ensure that the ` toJson ` method handles various
simonstewart : use sslcertificategenerator instead of seleniumserver to generate SSL certificates for logging .
updated the loop structure in ExpansionViewHelper to iterate over replies instead of using a for - each loop to improve performance by reducing the number of
increased the timeout duration from 3 seconds to 60 seconds in the assertThrows method from 3 seconds to 60 seconds to allow more time for resource access
added a test method ` testNGramFilterPayload ` to validate the behavior of the ` DelimitedPayload ` and ` PayloadAttribute ` classes to
refactor AclImpl class for improved readability to enhance maintainability and clarity of the codebase
added unit tests for different array sizes in EasyRandomTest . java to ensure that the EasyRandom class correctly generates different array sizes for different
xenserver : do n ' t throw exception when stop a vm
added thread - local handling for write operations in SslConnection . java to improve reliability by ensuring write operations are executed under a thread - local
added a method ` ancestorsVisible ( ) ` to check if the actor ' s ancestors are visible to improve the logic for determining if the actor is
added logging for rolling - update steps in RollingUpdateOpFactory . java to provide better visibility into deployment failures for debugging purposes
[ hotfix ] [ table - common ] add nullable annotation to sinkprovider
added authentication failure event handling in DaoAuthenticationProvider and implemented AuthenticationFailureUsernameNotFoundEvent in LoggerListener to improve error handling and provide context for authentication
updated AtMostXVerificationTest . java file to improve test coverage and reliability
updated the default QType reference from ` OldLuceneQParserPlugin ` to ` LuceneQParserPlugin ` across multiple files to ensure consistency
updated SimpleDateFormat initialization in WeekDateTest . java to include Locale . US to ensure consistent date formatting across different locales
added a new method ` isInitialized ( ) ` to the ` JavaLanguageServer ` class and created a new ` LocalsCompletionTest _ template
updated the parameter name from " idToken " to " shouldHaveIdToken " in the test _ fetch _ token _ from _ authorization _ code
added beginTransaction , setTransactionSuccessful , and endTransaction methods to DatabaseAdapter , and refactored account bulk operations in GncXmlHandler to
refactor data handling in MimeType . java to use ByteArrayOutputStream for better efficiency to improve performance by reducing the number of byte array operations
refactor exception handling in MessagingTemplate to use a boolean variable for clientHasReceived instead of an empty string to improve clarity and maintainability of exception
added a method ` isAcceptable ` to the ` AutoFormatVisitor ` class to check if a source file is an instance of ` J .
updated TestIndexWriterMergePolicy to set maximum buffered documents and set RAM buffer size to 100 to improve performance and resource utilization during index writing
added a method to clear the wits collection in the Manager class and implemented a test for witness updates in ManagerTest to improve witness management and ensure
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing NoSuchElementException when accessing elements
flumeshell : remove log4j dependency and use log . info instead
added reindex collection request and updated authentication metrics in BasicAuthIntegrationTest and DaemonStream classes to improve test reliability and ensure that authentication metrics are minimum
replace HashMap with LinkedHashMap in DependencyUtil . java to maintain insertion order for nodes
fix ( reactive ) : add error handler for internal server error
refactor header validation logic in Http2TestBase . java to improve code readability and maintainability
refactor system property handling in System . java for better clarity and maintainability to improve code readability and ensure compatibility with different Java versions
changed method signatures from ` contains ` to ` doesNotContain ` and added corresponding tests in ` StringSubject ` and ` StringTest ` classes to
added new JVM methods for counter time and event writer in CheckGraalIntrinsics . java to enhance intrinsic tracking capabilities for the gra
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the DataSource reference from ds2 to ds2 in PersistenceManagerProvider . java to ensure the correct connection factory is used when compactor is used
refactor DeploymentOptions class to improve configuration management to enhance application performance and maintainability
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable . ConstantState ` instead of ` Drawable . ConstantState ` to simplify drawable
replaced ByteArrayInputStream with StringReader in XmlParser , YamlParser , and YamlParser classes to simplify resource management and improve code readability
added functionality to rewrite ` coalesce ` operators in ` RexNodeConverter . java ` and implemented it in ` SqlFunctionConverter . java ` to
camel - 14263 : camel - hl7 - do n ' t throw exception when unmarshal fail .
refactor ` JavassistProxyFactoryFactory ` to use ` Thread . currentThread ( ) . getContextClassLoader ( ) ` and ensure proper context
refactor DefaultDateTypeAdapter constructor and constructor parameters in DefaultTypeAdapters . java to improve code clarity and ensure proper synchronization for date formatting
reformatted code for improved readability in DocumentUtil . java to enhance code maintainability and clarity
refactor HttpClientRequestBase to improve URI handling and query parsing logic to enhance code clarity and maintainability by simplifying query parsing logic
added a method to filter old feed entries in FeedRefreshUpdater . java to ensure only relevant entries are processed during the refresh process
change log level from fatal to warn in FSHLog . java to improve log clarity by using a more appropriate log level
refactor NodeMap to use a new NodeMapIterable class and improve iterator implementation to enhance functionality and maintainability of the code
updated imports and modified predicates in DiscoveryClientRouteDefinitionLocator . java to improve clarity and functionality of predicate handling
added a check for non - empty fields before processing operations in MongoRecordReader . java and modified the SQL type check in RexToMongoTranslator
do n ' t add admin to the admin list if it ' s empty .
replaced calls to ` MultiFields . getFields ( searcher ) . terms ( field ) ` with ` SolrIndexSearcher ` in multiple plugins to improve
updated the method to return the class name and identity hash code instead of the bean ' s toString ( ) to improve clarity and maintainability of the
refactor the logic for determining the primitive type in GroovyParserVisitor . java to improve readability and maintainability of the code
[ gr - 26969 ] remove uninterruptible hashcode ( byte [ ] ) method .
updated the timeout values in SedaBlockWhenFullTest . java from 100 to 300 and increased the timeout from 100 to 300 to improve test reliability
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level documentation for
updated the logic for determining the read length in MessageUnpacker . java to ensure buffer size does not exceed the bounds of the buffer to prevent
updated import statement from ` io . micrometer . common . lang ` to ` io . micrometer . core . lang ` in ` HttpClientTiming
updated IconCache . java to include user serial in the query to enhance functionality by allowing user - specific identification of components
( chore ) camel - core : fix typo in getbackpressureforasyncsendsize ( )
added a boolean parameter ` isClassfileOnly ` and modified resource addition logic to include ` isClassfileOnly ` to ensure resources are only added
cloudstack - 10220 : fix db upgrade for baremetal _ nsp _ id , host _ id , nsp _ id ,
removed the IJava2DRenderer interface from the Java2DRenderer class to simplify the class structure and eliminate unnecessary interfaces
added onTearDown method to handle offload buffer emptying in DefaultAudioSink . java to ensure proper handling of offload buffer emptying during audio
refactor UpstreamCacheManager to utilize ScheduledThreadPoolExecutor for scheduling upstream tasks to improve performance and resource management during upstream processing
refactor StreamType class for improved readability to enhance maintainability and clarity of the codebase
updated assertion message in Recording . java to include the expected output time to provide clearer context for the assertion failure
updated FilestorePage and RootPage to use RequiresAdminRole and modified authentication logic to enhance security by restricting access based on user permissions
skip camel elasticsearch rest test until it ' s fix
refactor method signature in ExpressionControlBusFactoryBean to improve method validation to enhance code readability and maintainability by reducing redundancy
update button texts from " leftButtonAltcoin " and " rightButtonFiat " to " buyWithFiat " in OfferBookChart
camel - 14263 : camel - restlet should match the uri prefix when the method be not allow .
block : remove block . createnextblockwithcoinbase from createnextblock ( )
updated BTreeMapJava to implement NotSerializableException and modified serialClone method in ConcurrentSkipListMapTest and JSR166Test to improve serialization handling
added null check for the cause before logging errors in RuleEngineImpl . java to ensure errors are logged only when the cause is not null
reformatted the conditional statement in Main . java to improve readability to enhance code readability and maintainability
changed the return statement from ` mFilesAll ` to ` mFiles ` in ` LocalFileListAdapter . java ` to ensure the correct index
deleted the PlainVerifier . java file to remove unused code to streamline the codebase
added a condition to close system windows in the OverviewCommandHelper to ensure that the system window is closed when the AltTab action is triggered from
updated DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog behavior and state management to enhance user experience by ensuring the bottom sheet dialog
updated charset parsing to include UTF - 8 encoding to ensure proper handling of character encoding in MIME types
added a call to ` super . deinitialize ( ) ` in ` TextField . java ` to ensure proper initialization of the TextField component
refactor testSerialization method to use TestUtilities for serialization to improve code maintainability and reduce boilerplate code
updated previous clause handling in GroupByFillDataSet and added a new test case in GroupByFillDataSet to improve the functionality of the previous fill logic
added error handling for negative array sizes in JAXWSExceptionBase . java to ensure proper handling of negative array size scenarios
test : migrate ctresolvedimporttest to junit 5 ( # 4563 )
increased the timeout duration from 10 seconds to 60 seconds in the T6567415 . java file to allow more time for the thread to complete
[ hotfix ] [ runtime ] fix default value for slotsharinggroup in miniclusteritcase
added title handling methods to ` ShadowActivity ` , ` setTitle ` , ` setTitleId ` , and ` getTitle ` in ` ShadowActivity ` ,
pdfbox - 4892 : use poilogger instead of commons - logging
updated alarm handling in the InstarHandler to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy in alarm state management
[ java ] increment remove operation count when delete a map ( # 11818 )
updated enum declaration and modified status handling in Response . java to improve code readability and maintainability
refactor javac location retrieval to use a method to find the javac location to improve code clarity and maintainability by encapsulating the
fix ( core ) : add project - name support for stable channel ( # 1076 )
added a new test class ` DeprecatedStubbingTest ` to validate stubbing behavior to ensure that stubbing methods are correctly implemented and verified as interaction
updated import statements in ITBraveServletFilter . java to use javax . servlet instead of org . eclipse . jetty . server . DispatcherType
make sure that np - av be allow even if it do n ' t occur in parse error .
[ bouncy castle ] allow rsa key exchange to be disable by default .
refactor BufferedReader initialization to use ` reader . close ( ) ` instead of ` output _ reader ` in multiple files to ensure proper resource management and
( chore ) camel - pubsub - api : unget oauth service when delete an access token
replaced AGGRESSIVE _ EASE interpolator with EMPHASIZED interpolator in TaskbarEduView . java to improve animation performance
added functionality to handle region migration and logging in multiple classes to improve logging clarity and ensure accurate reporting of region migration results
added a new file FileDialogLeakTest . java to test the behavior of the FileDialog class to ensure proper resource cleanup and prevent memory leaks during
updated the package structure for TestOpenTableInCoprocessor from ` org . apache . hadoop . hbase ` to ` org . apache . hadoop .
[ gr - 32233 ] do n ' t invoke uninterruptable method in trufflefeature .
[ flink - 20613 ] [ protobuf ] move pbcodegenrowtypemethod into pbcodegenrowserializer and pbcodegenrow
added a null check for the disi variable in the DrillSidewaysScorer class to ensure that the condition only proceeds if the dis
updated method calls to use ` setNewSourceInfoBlocking ( ) ` instead of ` setNewSourceInfo ( ) ` across multiple test files to
added version handling for Java 9 in Constants . java and updated condition in Helper . java to ensure compatibility with newer Java versions and improve code clarity
updated FileReporter constructor to accept String and File types instead of null to ensure proper type handling for the FileReporter class
updated the condition from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity . java ` to ensure the end -
added home button functionality to the action bar in DirectMessageConversation . java to enhance user navigation by allowing back navigation to the home screen
updated the PROTOCOL _ VERSION from 5 to 6 and added user retrieval functionality in ` RpcServlet ` , ` RpcUtils ` , and ` Rpc
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable MSSQL compatibility checks for different operating systems
replaced the variable ` startClass ` with a variable ` originalStartClass ` in ` WhiteboxImpl . java ` to ensure the correct start class is
fix a bug in dexbody . getlocals ( ) . getlocals ( ) . getlocals ( ) . getlocals
replace calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContext
[ jbrules - 2423 ] fix look and feel not work on nimbus and nurserostering
corrected a syntax error in the version string in AppPage . java to ensure proper formatting of version strings in the version string
refactor animation listener handling in LauncherAppTransitionManagerImpl . java to improve clarity and maintainability to enhance code readability and maintainability by
updated the error message in AddressFormatException from base58 to version in DumpedPrivateKey . java to provide clearer context about the source of the address
updated the method call from ` offerPayload . getExtraDataMap ( ) ` to ` newOfferPayload . getExtraDataMap ( ) `
updated milestoneParameters initialization to differentiate between open tickets and repository names to improve clarity and functionality of ticket management in the application
updated the battery parameter from 640 to 80 in PipeItemsWood . java to adjust the battery configuration for better performance
added a new method ` getClusterKey ` to include blueprint names and revisions in the ` getStateMachineClusterInstance ` method to enhance the functionality
added a default value of ` true ` to the ` downgradeAllowed ` variable and a corresponding test case in ` UpgradePackTest ` to ensure
updated XMLNSDocumentScannerImpl and XMLDTDScannerImpl to use ELEMENTSTART and ATTRIBUTENAME instead of ATTRIBUTE to ensure correct parsing of XML elements
added an ` EmulateSystemLoadLibrary ` configuration and modified library loading logic in ` Library . java ` to enable conditional loading of system libraries based
refactor app name comparator to use a dedicated method ` getAppNameComparator ( ) ` to improve code readability and maintainability by centralizing
refactor entry handling in DefaultPlatformManager and FatJarStarter to ensure proper resource management and prevent potential resource leaks
reformatted assertions in TestSecretKeyCredentialHandler . java for better readability to enhance code clarity and maintainability by providing more context in assertions
camel - 14263 : camel - spring - boot should use springcamelcontext . getcontext ( ) instead of spring - boot .
[ hotfix ] [ doc ] fix typo in metricoptions . withdescription
hbase - 26175 testfulllogreconstruction should use dfs . support . append and dfs . client . retry . interval
added default values for reuseAddress and setSendBufferSize , ReceiveBufferSize , ReceiveBufferSize , and TrafficClass in DatagramSocketOptions to enhance flexibility in network configuration
updated the shutdown message handling in GlowServer . java and modified the SHUTDOWN _ MESSAGE constant in ServerConfig . java to improve clarity
[ java ] deprecate the interface locatable in favor of the internal one .
updated error messages for VERSION _ FIELD in VersionInfo . java to clarify that the field must be searchable and not multiValued to improve clarity
replaced ` equalityPredicateColumns ` with ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to simplify predicate handling and
refactor initialization and disconnection logic in HelloMessage . java to improve code readability and maintainability
updated closing braces in Navigator . java to improve formatting consistency to enhance code readability and maintainability
changed access modifiers of record reader classes from private to public in RecordReaderFactory . java and added a new test class for ParquetRecordReaderConfig
added case for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator and corresponding tests in Mongo
refactor GROUP BY clause validation logic in CalciteSqlParser . java to improve readability and maintainability to enhance code clarity and ensure correct
added memory management and unmapping functionality to ` FileChannelLinesSpliterator ` and ` FileChannelLinesSpliterator ` classes to improve resource management and prevent memory leaks
refactor the code to use a local variable for the validator object instead of calling l . getValidator ( ) directly to improve code readability and
added a method ` schedule ( ) ` to ` CircuitBreakerImpl ` and modified ` CircuitBreakerTest ` to accept a ` ScheduledFuture
replaced FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECLUDE _ FROM _ RECENTS with FLAG _ ACTIVITY
updated property names from " ajax " to " progressbar " in SubmissionController , FileUploadRequest , and FileUploadRequest classes to improve clarity
added JUnit ' s Disabled annotation to TableExtRetrieverTest . java to clarify the purpose of the test by disabling retrieval strategy for
fix concurrency issue in entitygraph . getexportedcount ( ) .
updated import statements in MetricsImpl . java from ` requireNonNegative ` to ` requireNonNegative ` in ` IntRangeUtil1 . java `
updated HttpParser to handle illegal characters and modified appending logic in HttpParserTest . java to improve character handling and ensure proper encoding of encoded headers
updated the activity layout from ` trends _ activity ` to ` configuration _ activity ` in ` ConfigurePagerActivity . java ` to reflect the correct layout
updated print statement in SLWTTextListing . java to include the position in the output to provide clearer context for debugging SLWT
refactor ForceLeaderTest to conditionally use TLOG replicas based on the ` useTlogReplicas ( ) ` flag to improve test
refactor Thread class to improve thread management to enhance performance and maintainability of the code
refactored template file suffix handling in AbstractConfigurableTemplateResolver to improve clarity and maintainability of template file suffix management
camel - 16323 : camel - cxf : do n ' t set the xmlns attribute on the cxf binding
reformatted code for consistency in YamlRepresenter . java to improve readability and maintainability of the code
updated output formatting in ToChar . java and added SQL insert statements in TestFunctions . java to improve readability and maintainability of date formatting in
added imports for ValidTxnList and ValidTxnWriteIdList in GenericUDTFGetSplits . java to enable configuration of transaction and
replaced ` ArrayList < String > ` with ` Collections . emptyList ( ) ` and replaced ` ArrayList < String > ` with ` Collections . emptyList (
bugfix : book . getbookpath ( ) return null when there be no initial image
updated SSTDeserializer and TestSSTDeserializer classes to enhance error handling and improve test coverage for SST deserialization
refactor grid column retrieval to use a constant instead of a hardcoded value to improve code readability and maintainability by centralizing grid column
updated message format in ` Platform . java ` and ` ComparisonFailureWithFieldsTest . java ` to include line break characters to improve clarity of
[ java ] add ` ` waitingforkeys ' ' flag to ` ` decoderinputbuffer ' ' and set it to ` ` false ' '
updated API endpoint paths from " / api / margin / v3 / accounts " to " / margin / v3 / accounts " to standardize
refactor conditional statements in LineUtilitiesTests . java for clarity to improve readability and maintainability of the test code
added error handling for varargs and old array syntax in JavacParser and created new classes VarargsAndOldArraySyntax and T656963
fix npe in defaultdrmsessionmanager when setplayer ( ) be call on the wrong thread .
added support for method calls in VariableContext and updated related tests in TestVariableContext to enhance functionality to support method calls in variable contexts
added tests for invalid compilation unit and profile string JSON in ExperimentParserTest . java and removed the asNullableBoolean method in ExperimentJSONParser
updated buffer limit calculation in Piece . java and modified buffer limit setting in SharingPeer . java to ensure buffer position is correctly set based on
added HttpClientProperties to the NettyRoutingFilter and related classes to enhance the configuration options for HTTP client responses
replaced ` NativeLinkTargetGroup ` with ` NativeLinkTarget ` and refactored related methods in ` CxxLibraryFactory ` and ` Native
camel - 14284 : camel - main - add unit test for camel - rest - configuration
added support for RexFieldAccess in AST converters and refactored field access conversion in RexNodeConverter to improve handling of field access
added a static final variable ` QUERY _ LOG _ ENTRY _ VALUES ` in ` QueryLogger . java ` to improve code readability by
fix ( webclient ) : do n ' t relativize uri if proxy . noproxy ( ) be set .
updated certificate chain handling in PKCS12KeyStore and added trusted certificate tests in StoreSecretKeyTest to improve robustness of certificate processing and ensure
added reflection access checks in ` NativeObject ` , ` Bootstrap ` , and ` ReflectionCheckLinker ` classes to enhance security checks for reflection access
removed the ' public ' access modifier from the constructor of CollisionMap constructor to restrict instantiation to package - private for better encapsulation
deprecated the ` getRawInputFromTransactionInput ` method and added a null check for the ` input ` parameter to indicate that the parameter should not be
refactor log level comparison logic in ConfigurationValueConverter and Main classes to use a switch - case structure to improve code readability and maintainability by
cloudstack - 2536 : remove the region _ id parameter from the user account table
added support for EncryptedDocumentException in OldExcelExtractor and a corresponding test case in TestOldExcelExtractor to ensure that encryption is not supported for
[ gr - 24165 ] add native image export to benchmark suite ( # 3373 )
modified the visibility of the holder image in TimeLineCursorAdapter . java to ensure the holder image is displayed when not needed
increased the timeout duration in BatchingStateChangeUploadSchedulerTest from 10 to 50 milliseconds to avoid all attempts timing out during test execution
updated directory creation logic in ShadowContext . java and added a new deleteDir method in ContextTest . java to improve directory management and ensure proper deletion
refactor exception handling in ExceptionFactory to use Class . forName for assertion failures to improve compatibility with OpenTest 4 . x and ensure proper class loading
increased the WAIT _ TIME _ MS constant from 10000ms to 60000ms in LauncherInstrumentation . java to allow for a longer wait time
added support for the " aud " extension in ConnectOAuth2RequestFactory and updated the JWT claim handling in ConnectTokenEnhancer to enhance
camel - 14284 : camel - kafka : remove default value for consumer parameter in camel - kafka
added a new constant ` selectableItemBackground ` to the ` R ` class to define the background color for selectable items in the application
replaced multiple specific imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and provide a placeholder for future
updated eventType assignment in TxnSetOperation . java to ensure correct handling of null entries to improve code clarity and maintainability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 560 .
updated class loading from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java to
added functionality to manage format records in HSSFDataFormat . java and updated assertions in TestWorkbook . java to improve handling of cell formats and
[ hotfix ] [ kafka ] deprecate kafkaproducer in favor of kafkaproducer
updated the condition for determining the compressed chunk length in CompressedInputStream . java to ensure that the compressed chunk length does not exceed the maximum allowed value
added redisstringidempotentrepository to enable idempotency for camel - redis
fix vanilla use metadata instead of metadata in containerrepair .
added support for real local repository layout in the LegacyLocalRepositoryManager class to ensure correct artifact retrieval based on layout type
[ hotfix ] [ runtime ] do n ' t try to start the taskmanager if it be not initialized
added configuration options for deploying files in AbstractArtifactResolutionException to enhance user experience by allowing users to deploy files from their own repository
updated the ` getTemporalPath ` method to use ` getInternalTemporalPath ` instead of ` getTemporalPath `
added a method to find FeedEntryStatus by entries and updated import statements in FeedEntryStatusDAO . java to improve code clarity and maintainability by
added executeStart ( ) and executeEnd ( ) methods to the VertxThread class and updated deployment options in BlockedThreadCheckerTest to improve
updated the ` instantiate ` method to accept a string parameter and added a null check for the output argument to ensure that a valid output argument is provided
added SDK version check for Ezvcard parsing in LoadContactsTask . java to ensure compatibility with devices running Android O and above
replaced ` setRemoteAddress ` and ` setRemoteHostname ` methods with direct assignment of ` remoteAddress ` and ` remoteHostname ` to simplify the code
added a null check for realClass in Robolectric . java to ensure that the shadowClass is annotated with @ Implements to prevent runtime errors
add tlsMutualAuthenticationRequired check to tlsMutualAuthenticationCertificateChain in NettySslContextFactory and ExampleNettySslContextFactory to ensure
added SSL exception handling in BasicHttpTest . java and modified import statements in BasicHttpTest . java to ensure proper exception handling for SSL - related
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance encapsulation and provide access to consumer and producer properties
refactor conditional statements in PageChangeListener and FrameRenderer classes to improve code readability and maintainability
updated the warning message from " Could not send email to " SMS " to " SMS " in CommunicationsManager . java to accurately reflect the absence of
no effective change - add draftqueryoptimization method to beandescriptor and beandescriptordrafthelp
added exception handling for resource transfer in MultipartBody . java to improve resilience against resource temporarily unavailable scenarios
fix ( refactor ) : fix checkstyle violation ( # 2905 )
refactor multiple Java files related to EndpointConfiguration , SpEL , and SSLContextParameters to improve code clarity and maintainability
fix the issue that attach file in the working directory do n ' t exist in the bib database
added LoadOptionsBuilder to configure SchemaCrawler options in AccessTest . java to enhance schema loading options for improved functionality
changed the package of TestLoadLegacyLibrary from ` org . openj9 . test . loadLibrary ` to ` j9vm . test .
removed exception handling for unknown operation names in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties from the prototype in ProjectProperty . java to enhance functionality by allowing dynamic configuration of project properties
refactor connection handling in AbstractDbmsOperationHandler to use a try - with - resources statement to ensure proper resource management and avoid potential memory leak
[ hotfix ] [ runtime ] fix typo in datastreamjob
replaced try - with - resources with try - with - resources and added error handling for ErrnoException to improve resource management and prevent potential resource leak
camel - 14263 : camel - cxf : use real class to get the service class .
added a check for " h2 - 14 " in the HTTP2ServerConnectionFactory to ensure proper handling of HTTP / 2 connections based on the
refactor LambdaToMethod to use VarSymbol for parameter symbols and update conditional checks in ReflectionVisitor to improve code clarity and ensure correct handling of lambda
chore : correct the spelling of sbarq in the grammatical relation .
increased the cache file size from 5000 to 60000 in DL4JInceptionV3Net . java to improve performance by allowing more time
added a method to set the lop of the phrase in the QueryParser to ensure the phrase slop is correctly configured for query parsing
updated sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow more time for the LongPressMouseListenerTest to
updated the default value of the HOST _ PROPERTY from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to
[ java ] add parallel scheduling for loadgame and savescreengrabber .
updated visibility logic in EditShareFragment to include both ` canEdit ` and ` areEditOptionsAvailable ` conditions to ensure that both ` canEdit
updated progress calculation in DepthController . java to ensure progress does not exceed a defined threshold
remove unused packetreceived ( ) method from clientsession and componentsession
added debug logging and refactored authentication handling logic in DefaultCasDelegatingWebflowEventResolver and DelegatedAuthenticationGenerateClientsAction to improve clarity
added null check for the service parameter in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and modified conditional checks in SamlIdPMetadataUIAction
add ` ` hide ' ' flag to pantheon command to hide permission .
added instrumentation for the " CoroutinesRoom $ Companion " class in AndroidConfigurer . java to prevent instrumentation of the " Coroutines
added a synchronized method ` isSupported ` to ` isSupported ` in ` NegotiateAuthentication . java ` to ensure thread safety when accessing
removed the setInitScript method from the InitializingDataSourceFactoryBean class to streamline the initialization process and improve code clarity
camel - 16263 : camel - jbang - increase the number of concurrent consumer in persistent - queue and temporary - queue
refactor AuthenticationProvider , TargetObject , and TargetObject classes to improve code organization and maintainability
added line flushing and closing logic for tagged elements in PdfDocument . java to ensure proper text formatting when the element is tagged
log4j2 - 1349 add a unit test for the patternlayout
simonstewart : do n ' t throw unsupportedoperationexception in hta mode with selenium core
added a new class ` MwThankPostResponse ` and refactored the ` thank ` method in ` Service . java ` to improve
replaced ChannelEndPoint with SocketBased in ChannelEndPoint and added a new SocketBased interface to enhance socket management capabilities in the jetty - io framework
refactor revokingStore initialization and set maximum size setting in Manager . java to improve clarity and ensure correct size setting for the revoking store
added test cases for implicit joins in HQLTest . java to verify the functionality of implicit joins in HQL queries
added line separator handling to assertions in NonVisualRegressionTest . java to ensure consistent line endings across different operating systems
refactor IndexWriter to use a Collection for file references instead of incrementing references and adding an assertNoUnreferencedFilesOnClose method to
added @ Final annotation to method signatures in BaseError . java to enforce immutability and improve code readability
added validation for ` newPercent ` in ` ConsumeUserResourcePercentActuator ` to ensure that the ` newPercent ` value is within
added a condition to check if the old login is displayed to ensure that the legacy login is only shown when the resource is configured
rename the test class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
removed conditional logic for setting the response page in EditTeamPage . java to ensure the correct response is returned for user interactions
updated debug log message from " error with cred file during startup " to " error initializing plugin credentials " to provide clearer context for troubleshooting
added a try - finally block for closing the server socket channel in ConnectionManager . java to ensure proper resource management and prevent potential resource leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
added a new method ` createDynPartSpec ` to handle dynamic partition specifications in ` BaseSemanticAnalyzer . java ` to improve code read
do n ' t use significant figure in round hack for long integer
added a visitDirectory method to JarDirectoryStep to handle directory entries and updated tests accordingly to ensure that the JarDirectoryStep correctly handles directory entries and
added a new file ` JWKSetEditor . java ` that implements a ` PropertyEditorSupport ` to parse and set JWK text to facilitate the
replaced ` copyBytes ( ) ` method with ` finish ( ) ` in ` OrdsBlockTreeTermsWriter ` and added assertions for pending
do n ' t use method . resolveparameterclasses ( ) . resolveparameterclasses ( ) .
change default value of ` byIP ` from true to false in ` Fetcher . java ` to disable the fetcher threads per host by IP
simplified the conditional check for queryTimeout in StatementUtil . java to improve readability and maintainability of the code
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to enable target configuration hashing
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
cloudstack - 10297 : network usage stats update task should run immediately if initial delay be negative
replaced ` allAppsFade ` interpolator with a static final frame constant in multiple classes to improve code readability and maintainability by centralizing interpolator
added swipe length calculation in Background . java to adjust the position of the nav bar based on the display density to improve UI responsiveness by adjust
added a new module - info . java file for the Jetty HTTP3 server to define module dependencies and exports for better encapsulation and
refactor JsonType and JsonTest classes to use constants for JSON object references to improve code readability and maintainability by avoiding hardcoded strings
removed redundant null checks for the context variable in ResourceResolverBean . java to simplify code for better readability and maintainability
[ hotfix ] [ checkpointing ] set default value for tolable _ failure _ number in executioncheckpointingoptions
updated the ` reportInnerClassReferences ` method to use ` Element ` instead of ` TypeElement ` for better handling of inner class references to improve clarity
added a space before the " test . tool . vm . opts " system property in the command string to ensure the command starts with an empty string
replaced FluentIterable with Java Streams for file listing in ChromeTraceBuildListenerTest . java to improve code readability and leverage built - in utility
fix dubbo register flag not be set to true ( # 10265 )
added onsettingschanged ( ) method to end all session if security otr mode be disabled .
added outline size and transparency properties to NODE _ LABEL _ OUTLINE _ SIZE and NODE _ LABEL _ OUTLINE _ TRANSPARENC
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
added a new boolean parameter ` true ` to the ` Win32FontManager ` class to enhance font management functionality
added null check for the visitor before executing the visit method in TreeVisitor . java to ensure proper cursor management and prevent potential NullPointerExceptions
refactor error handling policy for jdtcompiler when there be no classpath
added content and text alignment properties to the LabelBlock class to enable customizable text alignments for label rendering
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
refactor ` isLoopback ` and ` isLoopback ` variables to use ` Boolean ` instead of ` boolean ` for better null safety to
added a Locale parameter to the ` fromRfc1123DateString ` method in ` DateUtils . java ` to enable locale - specific date
fix test that fail on window due to missing file extension
nifi - 10254 : add option to output a flowfile when no hit be find for a query
remove aggregationRatio and usageType parameters from method signatures and methods in QuotaManagerImpl . java to simplify method signatures and improve code readability
[ java ] fix switch / cases indentation .
fix potential npe in readfilesp and streamfilesp
refactor the widget handling logic in PageChangeListener . java to improve readability and maintainability of the code
added isWriteProtected method to Workbook and HSSFWorkbook classes , and modified username handling in RecordInputStream , RecordInputStream , and RecordInputStream to
added error handling to unregisterInvalidatedSessions ( ) method in PluginMonitoringFilter . java to improve robustness by logging exceptions during session management
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the message from " ThingStatus . OFFLINE " to " Not reachable " in HueLightHandler . java to correct the status
added a loading flag and a method to check the loading state in FMLClientHandler . java and created a new file GameSettings . java with
use core . bundle . getunit . thousands instead of core . bundle . mil [ ]
replaced Preconditions with a switch statement for handling BYTES and STRING types in MessagePackParser and added a new BinKeyPojo class in MessagePackData
added Parameterized test for handling reserved words in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure that queries with reserved words as identifiers
added test methods for serialization and deserialization of nested maps in MapTest . java to ensure correct serialization and deserialization of nested maps in JSON
[ geot - 4863 ] fix for geot - 4863 in geot - 4863 .
replaced ` SORT _ ORDER _ DIALOG _ TAG ` with ` SORT _ ORDER _ FRAGRMENT ` in ` FileDisplayActivity
added error handling for empty testplans in standardjmeterengine
updated method references in GeneratedEntityTranslator and JdbcManagerSupportImpl to use Lazy < DbmsType > for dbmsName , schemaName , and
modified the argument handling logic in the Parser class to check for non - strict identifiers before retrieving them to improve robustness by ensuring argIdent is only
updated the default HTTP protocol setting in JettyHttpComponent9 . java to use the system ' s protocol instead of a hardcoded value to
set the default value of displayVolume to true in VolumeVO . java to ensure the volume display is enabled by default for better user experience
updated version and message logging in JavahTask . java and added a new VersionTest . java file in VersionTest . java to enhance clarity of
refactor condition checks in ChangeLogParameters . java to improve clarity and functionality to enhance readability and maintainability of the code
changed log level from warn to debug for transaction failure messages in JtaTransactionManager . java to improve logging granularity for better debugging
hhh - 13636 skip setoperationtest for oracledialect
removed redundant startHandshake and setSoTimeout calls in the Connection class to streamline the handshake process and ensure the socket timeout is properly set
updated the translucent and non - translucent action bar size calculations across multiple fragments to ensure action bar sizes are correctly calculated based on
changed the CHA option from false to true in EspressoOptions . java and changed the class visibility from non - final to final in
http : / / issues . apache . org / jira / browse / amq - 4073 - log the current thread ' s context class
refactor JodaTimeRangeRandomizersTest to simplify import statements and improve test clarity to enhance readability and maintainability of the test code
updated resource handling in WebDescriptor to redirect resources only if the Servlet version is greater than 5 to ensure compatibility with newer JAkarta specification
fix : check if a node be ready instead of not ready .
replace liveEndpoints with handler . endpoints in StorageProxy . java to ensure correct retrieval of endpoints from the handler object
added a null or empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new versioning of the RPC
added security checks for package access checks in ObjectStreamClass and ObjectStreamField classes to ensure package access checks are only performed when a security manager is present
refactor methods in Utils and XLCDCommunicator to improve code clarity and encapsulation to enhance maintainability and readability of the
refactor DefaultMetricsTagProvider to use an unmodifiable map for host information instead of an ImmutableMap to improve code readability and maintainability by using a
simonstewart : fix typo in the test suite name
change the default logging level from OFF to ERROR in Launcher . java to ensure the application displays the appropriate error level for better debugging
changed field declarations from private to final in IconNormalizer . java to enhance immutability and improve code readability
added support for ` firstCallPrepareDo ` in ` PrepareInterceptor ` and corresponding tests in ` PrepareInterceptorTest ` to enable conditional invocation of the
refactor workspace and exit overview mode handling in Launcher and AppsCustomizePagedView classes to improve clarity and maintainability of the code
updated dependency injection to use @ Singleton instead of asEagerSingleton ( ) in AuthWithStoreFeature . java to improve flexibility and reduce dependency on eager
added an ` ignoreInvisibleAssociations ` parameter to the ` incomingAssociations ` method in ` GraphicalDataModelView . java ` to
bug 10674 : do n ' t remove private ip from capacity table if it ' s null
updated the relative URL format in ProfileServlet . java to include additional command information to improve user experience by providing clearer instructions on async profiling functionality
fix ( oas ) : add support for required field in api model
updated class names from ` CasCoreConfiguration ` to ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreStandaloneBootstrapAutoConfiguration `
refactor FeatureFlags class for improved readability to enhance maintainability and facilitate future feature additions
updated the unique string construction and added a new test for uniqueIdForLargeHueID in ConfigStore . java , and updated the hue ID
added image caching logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure the correct drawable is displayed when a picture is displayed
updated compaction messages in HiveConf . java to clarify compaction behavior for insert - only tables to improve clarity on compaction behavior for insert -
added a null check for storage path in the condition to ensure that a storage path is not null before proceeding to prevent potential null pointer exceptions
refactor resize threshold checks across multiple classes to use a new resize check instead of comparing keysAssigned to improve code readability and maintainability by central
refactor LDAPConnectionService class to improve code organization to enhance maintainability and readability of the code
removed the required attribute from the @ XmlAttribute annotation in AggregateDefinition . java to simplify the annotation and indicate that the attribute is no longer required
removed debug tracing logs in TouchInteractionService . java and added a constant in RecentsAnimationDeviceState . java to improve performance by reducing unnecessary logging
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated assertions in TestMultiSearcher from hits . length ( ) to hits2 . length ( ) in TestMultiSearcher . java to correct the expected
added a new class ` LucenePackage ` that retrieves the ` LucenePackage ` instance to provide a way to retrieve the ` LucenePackage ` instance
updated the calculation of ` sizeInBytes ` from ` - 1 ` to ` - 1 ` in ` RAMDirectory . java ` to ensure
pdfbox - 4892 : do n ' t calculate avg value size for aggregation evaluator
added a null check for the drawerToggle before executing animations to prevent potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method signature to improve code clarity and suppress warnings during method execution
added logic to automatically scan modules based on override classpath and enable system jars and modules to improve module scanning functionality by ensuring correct class loaders are
add support for corporate and non - corporate field name in msbibexportformattestfiles
added a new method ` cancelCoreRecoveries ( ) ` to manage core recovery cleanup in ` CoreContainer . java ` to improve recovery management and
replaced ` System . currentTimeMillis ( ) ` with ` System . currentTimeMillis ( ) ` and introduced a new method ` cDiff ( ) `
refactor conditional checks for ` found ` in ` RepoEditView . java ` to improve readability and maintainability to enhance code clarity and ensure
[ hotfix ] [ doc ] fix typo in startup message
added trustResolver , roleHierarchy , and permissionEvaluator variables to the SecurityEvaluationContextExtension class to enhance security configuration by allowing default values for trust resolver
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize defaults to primeSize - 1 when it is
replaced direct usage of ` ocLocalFolder . getUsableSpace ( ) ` with ` FileStorageUtils . getUsableSpace (
modified the ` combine ` method to accumulate values in ` DistinctSqlAggregation ` and added a new test for the ` combine ` method in `
added a test method to verify execution of post - login activities for successful user authentication to ensure that the user service correctly executes post - login activities
extractorspanishstrippedverb do n ' t need to be static for spanish
removed unnecessary hashcode and length checks in CharArraySet . java and added a new test class TestCharArraySet . java for object contains to simplify code
[ java ] improve error message for unsupported track format .
updated the return type of ` jsBundle ` from ` JsBundleAndroid ` to ` AndroidPackageable ` in ` JsBundleGenrule
added UTF - 8 character encoding support in StringDictionary and modified string indexing in DictionariesTest to ensure correct handling of UTF - 8 encoded
updated case " Logical Analyzer " and " Logic Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to
added instanceClassName and instanceClass variables in AbstractVector . java to ensure the instanceClassName matches the instanceClassName before creating a new Vector instance
removed the syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unnecessary synchronization
instructor : fix issue with missing response in contribution question
added import for TestLoggingExtension and annotated the test class with @ ExtendWith to enable logging functionality for better debugging and monitoring
phoenix - 5866 : add support for map underscore to camelcase mapping
added support for the VIOMI Internet Electric Water Heater 1A ( 60L ) device in MiIoDevices . java to enhance compatibility with
replaced calls to ` getSslSessionData ( ) . getCerts ( ) ` with a local variable ` SslSessionData ( ) `
added a new file ` CreateNewSpreadsheet . java ` to implement functionality for creating a spreadsheet using Apache POI ' s HSSFWorkbook
replaced ` Duration ` with ` long ` for ttl and ` timeToLive ` in ` CacheProperties ` and ` CacheAutoConfiguration ` classes to
updated CONTENT _ URI in LauncherBackupHelper and LauncherModel to use CONTENT _ URI _ NO _ NOTIFICATION instead of CONTENT _ URI to
updated the wiremock version in SwaggerResolveTest . java to ensure compatibility with the latest features and bug fixes
replaced synchronized block with the instance variable ` this ` in ` SunFontManager . java ` to ensure thread safety when accessing shared resources
added a condition to check if ` c ` is a lowercase character in ` DocClassUtil . java ` to ensure proper handling of special characters in
replaced ` String . format ( ) ` with ` getString ( ) ` in ` Workspace . java ` to simplify code and improve readability
added import for Scope and a message for no validation errors in ValidateCommandStep . java to provide user feedback when no validation errors are found
refactor IntegrationTestContextLoader to utilize DefaultResourceLoader and FileSystemResourceLoader for web application context configuration to improve resource management and context management in the integration
updated scroll handling logic in Component . java and modified component retrieval in JavaSEPort . java to improve scrolling behavior and ensure correct component retrieval
reformatted the conditional statement in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated related methods to use ` ClientStat ` instead of ` Long ` to provide a structured representation of
updated regex patterns in CellContentConverter to replace " $ 1 " and " $ 2 " with " $ \ n " for better readability to
add newlines and newlines to test case output .
mondrian : fix typo in javadoc .
added stack trace printing in ProcessTools . java and modified launcher test logic in CustomLauncherTest . java to improve debugging capabilities and enhance test coverage for
removed the testEmbeddedImage method from TumblrRipperTest . java to clean up the code and improve maintainability
added a check to ensure the slot for the store type is present before converting it to the method to avoid unnecessary conversions when there are no slots
refactor data source handling in ContainerMediaChunk , InitializationChunk , and ExtractorInput classes to improve clarity and maintainability of data source initialization
refactor BaseLockFactoryTestCase to use PrintStreamInfoStream for output formatting to improve readability and maintainability of the test code
tika - 352 - add support for dynamic service loader in tikaconfig .
updated DocLint . java and DocLintTester . java to use Java ' s Diagnostic interface and improved generic type usage to enhance code readability and
added a new command for the IMPORT _ CMD in DataImportHandler . java and updated conditional checks in DataImporter . java to enhance command
added a test for modifying inner classes based on the ` ignoreDefinition ` flag in ` ChangeType . java ` to ensure that inner classes are
removed the import of android . util . Log in JettyService . java to eliminate unnecessary dependencies and improve code clarity
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated related logic to include it to manage workspace screens more
added a new servlet for the " Kill switch " functionality in Jetty7AppServer . java and created a new class KillSwitchServlet . java
refactor LLRealtimeSegmentDataManager to improve the handling of multiple records in LLRealtimeSegmentDataManager to enhance code readability
added a static boolean to check if the operating system is Windows before proceeding with further operations to avoid running tests on non - Windows operating systems
added a contact error dialog if the protocol provider is not registered to ensure the application does not attempt to add a contact if it is not connected
replaced direct bean registration with a bean component registration in AuthenticationConfigBuilder to simplify the registration process and improve code readability
updated the drawing method in FastBitmapDrawable to use null parameters instead of the left and top coordinates to simplify the drawing process and improve performance
fix ( protocol ) : fix typo in date ( ) protocol decoder
changed access modifiers of getFontPath and getPlatformFontPath methods from public to protected in SunFontManager and X11FontManager classes to enhance en
added multiple @ Deprecated annotations to the EnhancedRandom class to indicate that these methods are outdated and should not be used in new development
handle reachedmaxsizeexception in clientmapstoretest and clientmapstoretest
added option to keep empty sentence in document preprocesser .
updated createArtifactSubdirectory method to return a boolean indicating failure to validate POM file and SHA1 mismatches to improve error handling and provide clear
refactor ` JavaLanguageServer . java ` to use ` JavaCompilerService . NO _ MODULE _ COMPILER ` instead of a static final
added a null check for the answer in DirectAgentAttache . java to log a warning when a resource is null to improve error handling for null
change exception handle so that task queue can
added a new API and improved null checks in PipeItemsObsidian . java to enhance functionality and ensure proper handling of null values
dataimporter : fix locale issue in datemathparser . parsemath ( )
added a checkbox to control the inclusion of decals in the StorageOptions class to enable users to choose whether to include decals in the
updated the ` generateDocumentation ` method call to include a null parameter for the ` outputDirectory ` parameter in ` Liquibase . java ` to
updated performance logging in HiveProtoLoggingHook to include queue name and improved test assertions in TestHiveProtoLoggingHook to enhance performance tracking and ensure
corrected a typo in the log message from " Begining with Solr 5 . 0 " to " Beginning with Solr 5 . 0 "
updated the class file version check from 58 . 65535 to MAJOR _ VERSION in ignoreRecordAttribute . java to ensure accurate verification of class file
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP password authentication to ensure proper functionality and behavior of LDAP operations in the application
updated imports in TaskCompiler to use BasicStatsNoJobTask instead of OrcInputFormat to improve performance by utilizing BasicStatsNoJobTask
fix nullpointerexception when save all notification ( # 113 )
refactor VisibleAdvance class to improve code readability to enhance maintainability and facilitate future feature additions
fix ( kubernetes - client ) : add reconnect option to reflector . start ( )
added support for dynamic number columns in Sparklines in EdgeDataTable , NodeDataTable , and EdgeDataTable classes to enhance compatibility with dynamic numbers
added null checks for groupId , artifactId , and version in ResolvedGroupArtifactVersion constructor to ensure parameters are not null to prevent potential NullPointerExceptions
added a null check for apiInfo in V2HttpCall . java to ensure that a default API is used when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added light effects and debug logging for texture and shader operations in PhotoPanel and FlameRenderer classes to improve texture management and ensure proper cleanup of resources
fix : add a context menu for local variable with no max
added a check to ensure the index is within bounds before processing characters in CSSParser . java to improve robustness by preventing index out - of -
added functionality to set the default look and feel based on the " isLookAndFeelDecorated " property to enhance user interface customization based on the application '
removed the ' this ' keyword from the SQL query in HostRoleCommandDAO . java to simplify the SQL query and improve code readability
updated function names from " F5 - UNKNOWN " to " F5 - TOWER TEST " and " F6 - TRANSPON
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance swipe detection logic for better user experience
replaced ` HostDatabase ` with ` ColorStorage ` in ` ColorsActivity . java ` to utilize a more appropriate color storage implementation
refactor String class to improve code readability to enhance maintainability and facilitate future modifications
removed unused imports and added logging functionality across multiple Java files to improve code cleanliness and maintainability
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to retrieve global entries from the global map to enhance functionality
added assertions to ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method behaves as expected
test : migrate cucfiltertest to junit 5 ( # 4549 )
added a constant for the path separator in JavadocReport . java to ensure consistent path formatting across different operating systems
removed the static modifier from the augmentSuccessViewModelObjects method in AbstractServiceValidateController . java to simplify the method signature and improve code readability
hhh - 11813 - fix test failure due to miss presence of field
removed the conf parameter from the Outlink constructor calls across multiple files to simplify the Outlink instantiation by eliminating unnecessary parameters
removed the ` LexicalContext ` parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures and improve
added imports and modified return statement in UseLambdaForFunctionalInterface . java and removed unused imports in TypesInUse . java to improve code
removed the appendClassSelector method call from m _ classFilesets to simplify the file set addition process
added a debug log statement for unsupported root input in HiveCardinalityPreservingJoinOptimization . java to ensure correct handling of aggregate inputs in the query optimization
fix registryevent . getregistry ( ) to use the registrymanager . active . getregistry ( ) . getregistry ( ) .
updated assignment of ` x3 ` and ` y3 ` in ` Intersector . java ` to improve code clarity and maintain consistency
added default methods for SBE decoding in MessageDecoderFlyweight . java to implement unsupported methods in the SBE implementation
refactor ElasticsearchContainerTest to use static constants instead of hardcoded versions to improve maintainability and readability of the code
refactor message parsing to use a ByteBuffer for better memory management to improve performance by reducing the number of byte array allocation
ambari - 11807 . add version to cluster name and version in gsinstallerclusterprovider ( alejandro )
camel - 14263 : camel - ftp : remove unused setconfiguration ( ) method
[ zeppelin - 4071 ] add error handling for dependency loading in zeppelin interpreter setting .
modified local initialization logic in Gen . java and added a new NoLocalsMustBeReservedForDCEedVarsTest . java file to ensure
added a check to return early if targetCertConstraints . getBasicConstraints ( ) is - 2 and created a new class BuildEEBasicConstraints .
added database initialization logic in JdbcPostgresqlDAO to ensure values with same time will be upserted after database connection to ensure compatibility with Postg version
added WebSocket extension and a minimum message size constraint in SimpleEchoClient and AbstractWebSocketConnection to ensure WebSocket message size adheres to specified limits and prevent
removed the ` undeleteAll ` variable and modified the logic for managing pending deletion counts in ` SegmentReader . java ` to simplify the logic for
added null check for scopes in ClientRegistration and updated corresponding test cases in ClientRegistrationTests to enhance robustness by preventing potential NullPointerExceptions
added null checks for orderBy before adding parameters in CartesianProductStream . java to avoid potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest matcherassert in clusterentrypointtest
vm : do n ' t check if the vm be in backedup state , since it do n ' t exist anymore .
added a debug log message to LogUtils . initHiveLog4j ( ) in HiveServer2 . java to improve logging detail for debugging
added a check for non - empty tasks before proceeding with asset loading to avoid potential NullPointerExceptions when no tasks are available
do n ' t try to delete a node if it do n ' t exist
do n ' t create relationentity if it ' s not a relationentity
added checks for empty barcodes in Code128Reader , Code39Reader , and FalsePositivesBlackBoxTestCase to ensure that an exception is thrown
replaced TreeSet with LinkedHashSet for suites in SSLContextImpl . java to maintain insertion order for cipher suites
added a method to check for control characters in the Escaper class and updated the expected string in the InternationalizationTest class to improve character handling and
refactor SqlSource to check for CharSequence return type and replace String return type with StringBuilder in SqlProviderTest to improve type safety and allow for more
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` to calculate the vertical transition offset for a page in ` PagedView ` to improve page transition
refactor JavaTemplate to use pruned compilation unit and improve formatting to enhance code readability and maintainability by using more descriptive variable names
added setAccessible ( true ) to the method in WidgetInterceptor to ensure that the method can be accessed by other classes
added a check for the " database . server . id " field before setting the default value in ConnectorConfigGenerator . java to ensure that the default
updated OS X version from " Mac OS X 10 . 7 " to " Windows NT 10 . 0 " in AbstractRipper . java to
added a menu item to browse the URL using the PMS server ' s host to enhance user experience by providing easy access to the server ' s
added a new static variable ` actualValueName ` and refactored the initialization of ` value ` in ` HandleGetter . java ` to improve
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by preventing application crashes due to out - of - bounds
[ hotfix ] [ log ] improve logging in queue and filecheckpointio
added a call to ` loadBattlePassManager ( ) ` before calling ` loadBattlePassManager ( ) ` to avoid null pointer exceptions
updated SSHD image version in PortForwardingContainer . java and added KexAlgorithms to the echo string to ensure compatibility with the new SSH
added a bigObject array and initial garbage collection in ThresholdTest . java to force an initial full - gc for performance optimization
added a condition to check if the log name starts with ` getName ( ) ` and modified logger level handling in ` StdErrLog . java `
fixed - rremoteservice . getremoteserivce ( string ) method do n ' t call redisson _ remote _ service . #
added a ` isSelected ` method to the ` MultiButton ` class and modified ` invertFirstTwoEntries ` to include ` selected ` functionality to enhance
renamed ` UpNextActivity ` to ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to standardize the activity ' s functionality
[ issue # 5039 ] fix the issue that brokercontroller . setfenced ( true ) do n ' t set replicasmanager .
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection and ensure proper resource management to improve connection handling and ensure proper closure of Redis connections
updated theme color retrieval methods to use resource ID instead of TypedArray to improve flexibility and maintainability of theme color management
rename method participanttransportaddresschanged to peertransportaddresschanged so that it would well reflect our new call architecture that also include conferencing and conference
removed redundant registration of type adapters in ToolingApiLauncher . java to streamline code and improve maintainability by reducing redundancy
updated the list of test payloads in TestPayloadCheckQuery . java to improve code readability and maintainability
modified the ` putChar ` method in ` ConsoleReader ` and added a test for reading lines with a mask in ` ConsoleReaderTest ` to
added user information to the command output in BaseCommand . java to enhance debugging by providing contextual information for user interactions
move modulesupport to api . test to make it easy to run test .
[ hotfix ] [ runtime ] remove unused parameter in slotsharinggroup
updated StreamExInternals to conditionally use Java9Specific based on the " one . util . streamex . emulateJava8 " configuration to
updated texture files from " wheel . png " to " sys . png " in DecalTest . java , MusicTest . java , and Music
refactor receiver registration and unregistration in Launcher . java to improve code readability and maintainability
updated import statement in HostsRemovedEvent . java to ensure consistent formatting to improve code readability and maintainability
added an ` allowIntrospection ` flag and modified the client introspection handling in ` ClientDetailsEntity ` and ` IntrospectionEndpoint ` classes to enhance
replace direct write calls with htmlEncode for session attributes in HtmlSessionInformationsReport . java to enhance security by preventing XSS vulnerabilities
added PhrasePrefixQuery and PhrasePrefixQuery elements to the list of query elements in the Query class to enhance query documentation for better usability
replace size ( ) = = 0 with isEmpty ( ) in CommentsInserter and CommentsParser classes to improve code readability and performance by
refactor string type checking logic in NoValueOfOnStringType . java to improve clarity and efficiency to enhance code readability and maintainability by
updated method signatures from ` A ` to ` Object ` in multiple classes to improve type flexibility and consistency across the assertion framework
updated the ` ThrowingFunction ` interface to use ` throws Exception ` instead of ` lambda ` to improve type safety and clarity in the codebase
refactor PreferenceManager methods to use a single method for retrieving the uploader behaviour to improve code readability and maintainability by centralizing preference management
fix ( prettyprinter ) : do n ' t try to initialize final field in a constructor
updated BitmapDrawable initialization to use Robolectric ' s newInstanceOf method to ensure compatibility with Robolectric ' s bitmap handling
renamed the method from ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to improve clarity and
updated PageMarkerResources from ` add ` to ` current ` in ` PageIndicator . PageMarkerResources ` to reflect the current page indicator ' s
added a volatile int for reinvocations in BasicInvocation . java to track the number of reinvocations and improve logging clarity
updated the calculation of topPadding in DefaultLookAndFeel . java to use ` getInnerHeight ( ) ` instead of ` getHeight ( ) ` to ensure
added a break statement in the Recognize . java file to ensure proper termination of a switch statement
added HapticFeedback functionality to handle home screen locking in multiple classes to enhance user experience by providing tactile feedback during drag operations
added logic to handle different cell types for formula processing in ExcelBatchReader . java and added a new test case in TestExcelFormat . java to
fixed a bug in immutablefield . isanonymousinnerclass ( ) for anonymous inner class
added a new variable ` userAgent ` and updated its assignment logic in ` HttpGetter ` to allow dynamic retrieval of the user agent based on application settings
added required attribute to @ XmlAttribute annotation in PropertyDefinition , AvroDataFormat , BarcodeDataFormat , and Base64DataFormat classes to
change log level from info to debug for file not found messages to improve logging granularity for better debugging
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to use a dynamic method for retrieving the unique ID to ensure compatibility with newer player versions and
camel - 14284 : camel - jbang - fix defaultroutescollector when include be empty or false .
added a new boolean parameter ` vertexColor ` and modified client state handling in ` PShape3D . java ` to allow customization of color
added a new boolean variable ` isPkColumnFiltered ` and updated related logic in ` SchemaDotFormatter . java ` and ` DiagramRendererOptions
removed Shadow . extract from the matrix in ShadowMotionEvent . java to simplify the code by eliminating unnecessary shadowing
removed the ` MetaRules ` package from the ` com . facebook . buck . parser . api ` package to simplify the package structure and improve code
refactor class definition handling in GroovyEngine . java to improve clarity and efficiency to enhance readability and maintainability of the code
change package name from web to plugin and add a plugincontextlistener to manage plugin initialization and destruction
replaced System . out . println with System . out . println in NativeCodeGenerator . java to improve code readability and reduce unnecessary console output
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in ` FlightConfiguration
added unit tests for asserting the cause of a NullPointerException in ThrowableAssert _ hasCause _ Test . java to ensure proper handling of NullPointerException
removed unused flatten and pack variables from AutomaticDependencies . java to streamline the code by eliminating unnecessary variables
renamed ` requestedScopes ` to ` allowedScopes ` for clarity to improve code readability and maintainability by using a more descriptive
simonstewart : add test for setcapabilities in firefoxdriver . setcapabilities ( )
added description property and methods to manage route descriptions in multiple classes to improve clarity and usability of route descriptions in the application
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a method to set the weight of an edge in ImporterCSV to ensure the edge has the correct weight value for processing
[ iotdb - 4023 ] fix quota cost calculation when aggregate tariff cost be in a current month .
added support for pg _ attrdef and adsrc in the SQL query in DatabaseMetaData . java and updated the column default value in DatabaseMetaData .
added a null check for binarized sentences in SentimentAnnotator . java to ensure that binarized sentences are properly built by
added detailed user information to a string representation of the User class to improve readability and debugging by providing detailed user information
updated the method to retrieve the message body and added null check for the message object to improve robustness by handling cases where the message body may be
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory . fromexecutionvertex to taskdeploymentdescriptorfactory . fromexecution
use groupmanager . getgroupbyname ( jid ) instead of node . getsharedgroups ( jid ) for group visibility check .
added a path to the Maven test classpath in AbstractJRubyMojo . java and removed the @ SuppressWarnings annotation in CucumberMojo . java
removed redundant type checking in MethodHandleImpl . java and added a new test method in MethodHandlesTest . java to improve code clarity and ensure correct method
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
updated condition checks for width and height in URLImage . java to ensure accurate size comparisons for URL images
added a condition to check if the name starts with " META - INF / " before processing the class name to ensure proper handling of class names
added final modifiers to ` createImageToFileSystem ` , ` createImageToStorage ` , ` createImageToFileSystem ` , and ` createImage
updated assertions in StackWalkerTest to use VersionCheck for version checks and improved log message formatting to ensure compatibility with newer version checks and enhance test
changed the visibility of the ` addViewportJob ` method from protected to public to allow external classes to access the ` addViewportJob ` method
removed the ` num - output - partitions ` parameter from the ` buildFlow ` method and its usage in multiple test files to simplify the method signature
removed server restart and no system exit settings from TestDatabase . java to simplify server management and improve code readability
added null and empty checks in NodePathsConvertOperator and adjusted child iteration logic in SchemaQueryMergeOperator to improve robustness by preventing null or empty
[ java ] add gettotalharvestingtime ( ) method to get total harvest time .
updated font drawing parameters in ParticleEditor . java to increase frame rate and decrease frame rate from 10 to 5 to improve visual performance and responsive
added support for setting the " keyserver _ port " configuration in the UpgradeCatalog240 class to ensure that the " hadoop - env "
added a transparent background color to the SvgViewerFactory to improve visual appearance by applying a transparent background
removed the minSdk annotation from the ShadowKeyguardManagerTest and ShadowKeyguardManager classes to simplify configuration and improve code readability
updated the ` containsExactly ` method to accept a ` varargs ` parameter instead of a ` rest ` parameter to simplify the method signature and
updated Bandwidth . builder ( ) to use refillGreedy and added a permission check for the key in Bucket4jFilterFunctions
updated GermanAnalyzer , WordlistLoader , and WordlistLoader classes to enhance functionality and improve code readability
added a new ` isMaterializedView ` flag and modified the transformations addition in ` Optimizer ` , ` Generator ` , and ` Semantic
added exception handling for NoClassDefFoundError in REngine . java to improve robustness by preventing crashes due to NoClassDefFoundError
refactor TraceWebFilter to use SpanAndScope instead of Span to improve clarity and maintainability of span handling
added null check for the cause before setting the exception in AbstractUpdateCommandStep . java to avoid potential NullPointerException when the cause is null
updated SolrServerException instantiation to include the base URL as a parameter to improve error handling by providing context for the SolrServerException
changed print setup record ' s landscape setting from ` ls ` to ` ls ` in ` HSSFPrintSetup . java ` to
added a null check for the object in JavaVoidObjectInspector . java to ensure that the method returns null when the object is null
added validation for argument names in ArgDesc . java to ensure that invalid argument names throw an appropriate exception
added support for memory background location handling in AndroidLocationPlayServiceManager to improve performance by avoiding unnecessary requests when the activity is null
changed the condition from ` ! = ` to ` = = ` for primitiveType ` in ` MeshBuilder . java ` to ensure the condition correctly
do n ' t try to compare zero byte array in trufflestring . compare ( ) .
added a method to set the command list in the ComboBox to ensure the ComboBox reflects the correct command list state
nifi - 10237 : use tlshelper . escapefilename for alias filenames that contain forward and back slash .
updated ZkCLI command arguments in ZkCLI . java to use localhost : 9983 instead of hardcoded strings to ensure compatibility with
updated equality checks in FirmwareUpdateProgressInfo and BridgeHandler classes to use getStatusDetail ( ) for consistency to improve code readability and maintainability
added a conditional check for remoteGrpcStatus before posting a console event to ensure that console events are only posted when the remote grpc status is OK
reformatted method signatures across multiple classes for consistency and clarity to improve code readability and maintainability
added entity ID to the tick ' s entity before adding it to the tick ' s entity to ensure the tick ' s entity is properly initialized before
added a new method ` getErrorString ` to handle different error codes in ` GLSurfaceViewAPI18 . java ` to improve error handling by providing
do n ' t use the fallback feature processor manager if the locale be not support .
updated the server URI handling in RFC2616BaseTest . java to use " http : / / myhost : 1234 " instead of the server
added a call to addToHelperList ( ce ) in the Construction class to enhance the functionality of the Construction class
added a condition to skip the first character in the escape sequence in GlyphLayout . java to improve error handling by skipping unnecessary escape sequences
added security permissions and refactored context class loader management in Transport , TCPTransport , and TCPTransport classes to enhance security by ensuring proper context class
refactor directory list handling in ReceiveExternalFilesActivity to improve folder synchronization logic to ensure proper navigation to the root when a folder is not provided
added a null check for the service loader loader before loading it to avoid potential NullPointerExceptions when m _ serviceLoaderClassLoader is null
removed logging statement in BarrowmanCalculator . java and modified the deltap calculation in TubeCalc . java to simplify the calculation logic by removing
refactor column retrieval logic in TimelineControllerImpl . java to handle different object types to improve code clarity and maintainability by consolidating related
added registerExtraComponents method to BaseBrokerStarter . java to register extra components for BrokerAdminApiApplication in BaseBrokerStarter . java
added a new test method ` test4658 ` to ` MultiCfQueryExecIT ` and modified the query execution logic in ` MultiC
peergroup : use a linkedlist instead of a list to avoid concurrentmodificationexception .
fix a bug that could cause the builder to crash if there be more than 100 unchanged cycle .
removed the configNodeSimpleConsensusSnapshotTriggerThreshold field and its getter / setter in ConfigNodeConfig . java , and updated related methods
updated multiple Java files to remove unnecessary closing braces to improve code readability and maintainability
added a null check for ManagedService annotation before registering the JMXHelper in DefaultRemoteProxy . java to ensure that the JMXHelper is
tika - 3664 : fix encodingdetector for ziparchiveentry . getname ( )
added a new file TestSplitThruPhiDivMod . java containing test methods for mathematical operations to implement and verify the behavior of division operations in
added methods to lookup generic interface and superclass types in TemplateRegistry . java to improve type handling and support for generic superclass registration
updated the default byte size from 512 to 1028 in ByteArrayOutputStream . java to optimize memory usage and improve performance
added comments to the languagesExcluded array in PlayerSettingsScreen . java to clarify that certain Chinese and Persian symbols are not available in the current locale
modified byte array allocation logic in TransferCompletionHandler . java to accommodate a larger number of bytes to ensure that the transfer process does not exceed the maximum
use windowactivatedlistener instead of addwindowfocuslistener instead of addwindowfocuslistener .
refactor error handling in SemanticAnalyzer to check for null source nodes before throwing a SemanticException to improve robustness by ensuring that a null source is
added scaling functionality for the aabb bounding box in the SkeletonRenderer class to improve rendering accuracy by adjusting the bounding box based on the
added a method to retrieve the Solr home file in DistributedClusteringComponentTest and BaseDistributedSearchTestCase to provide a way to access the Solr
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning for the application context
removed the ` getAccount ( ) ` method from ` UserListItem . java ` to simplify the code by eliminating unnecessary method
added a test method to verify package installation functionality in ShadowPackageManager to ensure proper handling of package names and default values when no package name is provided
refactor AvailableSettings class to improve code organization to enhance maintainability and readability of the code
added TransactionCapsule and ReceiptCapsule fields in TransactionTrace . java to facilitate transaction processing and finalize method implementations
add client . shuffle . member . list property to allow client to specify whether to shuffle socket address .
replaced Text with CrawlDatum in SegmentReader . java to improve handling of crawl data in the segment reader
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future modifications
refactor fetch size handling in TsfileDBConfig and QueryProcessExecutor classes to use ThreadLocal for fetch size to improve thread safety and performance in
updated the method call from ` trunk ( ) ` to ` trunc ( ) ` in ` GenericUDFTrunc . java ` to ensure correct
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialize the title variable to an empty string to ensure title is always initialized to avoid null reference issues
added null body handling in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that the response ' s body is not null to
deprecate serverinstance interface and deprecate it
use macadapter . registermacevents ( ) instead of macadapter . newinstance ( ) .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related annotations to improve clarity and functionality of
updated the return statement in the toEnum method from ` toEnum ` to ` return ` in HandlerLibrary . java to ensure the method returns the
changed the visibility of the hideUnprivilegedObjects variable from private to final in PgConnection . java to enforce immutability of
[ fix ] audiodatasourcestest fail with ` ` no file ' ' error
added support for saving Giphy video URLs on Android Q to ensure compatibility with newer Android versions while saving video URLs
act - 136 : add deserializedObject for variableinstanceentity in servicetaskvariablestest
renamed multiple classes related to ticket management and authentication to improve clarity and maintainability of the codebase
( chore ) camel - maven - logger : use computeifabsent to improve performance
hbase - 26165 remove the DataOutputOutputStream class from hbaseobjectwritablefor96migration ( addendum )
updated the bucket ID from 1 to 2 in the Hive configuration to ensure correct data retrieval in Tez scenarios
changed log level from info to debug in MavenEnhancePlugin . java to improve logging granularity for better debugging
added a new method ` getDefaultProviderName ( ) ` to ` Platform ` and updated provider name handling across multiple classes to ensure consistent provider name usage
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to enhance testing capabilities by allowing Captor annotations to be processed
added error handling for empty test class and method names in TestSuiteBuilder . java to provide clearer feedback when no test cases are found
added import statements and modified prefix computation logic in GroovyAutoComplete . java , GroovyLanguage . java , and GroovyLanguage . java to improve code clarity and
use osm . graphhopperosm instead of graphhopper . graphhopper . graphhopper . graphhopper
[ java ] add retry option to the client client in case the remote server do n ' t support it .
removed the ` final ` modifier from the ` mHideSysUiScrim ` variable and added a method to manage the visibility of the ` show
added cancellation logic to the enqueue method in OkHttpCall and modified cancellation logic in OkHttpCall . java to improve cancellation handling and ensure proper cancellation
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance swipe detection logic for better user experience
updated the RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to ensure compatibility with Spring Security '
added a new ` ImplicitLambdaConsideredForApplicabilityTest ` class and created a new test class ` ImplicitLambdaConside
[ j2kt ] testboxingconstructors and testboxingvalueof for j2kt and j2kt
added unit tests for populateing display metrics in DeviceConfigTest and implemented a method to populate display metrics in DeviceConfig to ensure proper handling of display
updated exception handling and timestamp creation in ExternalViewReaderTest , PinotDataTypeTest , and PluginClassLoader classes to improve error handling and simplify URL generation
updated the icon resource reference from drawable . logo to mipmap . ic _ launcher in RootCursor . java to ensure the correct icon is displayed
added errorBuilder . setContentText ( content ) to errorBuilder in FileUploader . java to improve error handling by providing clearer error messages
refactor ConcurrentHashMap implementation to improve performance and memory management efficiency
added methods to adapt user trades from an array and implemented it in the AbucoinsAdapters and AbucoinsTradeService classes to enhance
removed unnecessary call to ` callRemovePlot ` in ` PlotSquared . java ` and modified plot removal logic in ` Claim . java ` to
simonstewart : make the htmlunitdriver compatible with the webdriver
added support for VARBINARY database type in BlobType . java to ensure proper handling of VARBINARY types in database interactions
http : / / bugs . apache . org / bugzilla / show _ bug . cgi ? id = 49198 . fix
added synchronization to the language object map to ensure thread safety when accessing shared resources
updated context handling in InboundBuffer to use ContextInternal instead of VertxThread and added a new checkContext method in InboundBufferTest to
added a new method ` deadServerNoTimeout ` to ` LdapTimeoutTest ` and modified timeout handling in ` LdapTimeoutTest ` to improve timeout
updated usage message from " UniocdeData . txt " to " UnicodeData . txt " in CharacterName . java to correct the spelling
camel - 14263 : camel - cxf : add inout header to cxf inout exchange
updated multiple SynthUI classes to improve code structure to enhance maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver . java and updated return value in BoosterSet . java to ensure proper handling of boost
add support for proxy authentication in jabref .
removed the ` getInterval ( ) ` method and updated the ` metricsInfo ` method to use ` System . currentTimeMillis ( ) ` instead of
replaced InternalError with a return statement in Class . java to simplify error handling by returning false instead of throwing an InternalError
[ ci ] fix testipcutil . testcompression ( ) to fail on window .
removed chunked transfer from the request handling in NettyRoutingFilter . java to simplify the request processing by eliminating unnecessary chunked transfer
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that attributes are reset before processing new data
added pollingPeriod parameter and improved verification mode handling in VerificationAfterDelayImpl and After classes to enhance flexibility in verification process by allowing custom polling period
added a new configuration for SQL authorization manager and modified conditional logic in ` SemanticAnalyzer ` , ` SessionState ` , and ` QueryCompact ` to
refactor DockerInterpreterProcess to use a more descriptive path for interpreter files instead of a hardcoded path to improve code maintainability and
hbase - 24175 fix typo in hregionmeta . gettableregions ( ) .
added an @ Ignore annotation to the PartialEscapeAnalysisTest class to temporarily disable the test due to known issues
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to improve
added a try - finally block to ensure the reader is released to prevent memory leaks and ensure proper resource management
added resource management to the header buffer in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to include tests for
added null check before closing the ResultSet in JdbcExecutor . java to ensure that the result set is closed only when it is not null
updated driverVersion from - 1 to 10 and updated driverVersionMinor from - 1 to 6 in DerbyDatabase . java to ensure compatibility with the latest
fixed bug in usestringbufferlength when there be no literal .
removed error logging statement from RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
updated the createDb method to return a Connection object instead of void to improve resource management by ensuring the database connection is properly closed
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
added configuration for offpeak maximum compaction size in CompactionConfiguration and updated related methods in RatioBasedCompactionPolicy to allow configuration of compaction
added null check for " address " in BitstampDepositAddress . java and created a new DepositAddressJSONTest . java file to improve handling of
replaced ` throw new IllegalStateException ( " Buffering capacity exceeded " ) ` with ` response . abort ( ) ` in ` BufferingResponseListener
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` in ` ProjectView . java ` to ensure compatibility with
replaced ` Event ` with ` InvocationType ` in ` InvocationFinishedEvent ` and updated metric retrieval logic in ` DefaultMetricsRegistry ` to improve clarity
added a loop to check if the network interface supports multicast before returning it to ensure that only valid network interfaces are returned for multicast support
added a loop to check for valid checksums in ChangeSet . java to improve code readability and maintainability by reducing redundancy
added a clone method to the BufferedChecksumIndexInput class that throws an UnsupportedOperationException to provide a placeholder implementation for the clone method
updated radius calculation in Circle . java to include radius comparison to ensure radius values are correctly validated against radius values
added a condition to check if the frequency band identifier matches the identifier before setting it in P25Channel . java to ensure that the frequency band is
refactor ` GestureDetector ` to use ` tapRectangleWidth ` and ` tapRectangleHeight ` instead of ` tapSquare ` for better clarity
change default replication on write from true to false to disable replication on write operations
added a new parameter ` lastFillTime ` to ` CryptoFacilitiesAuthenticated ` and modified ` CryptoFacilitiesTradeServiceRaw
added ` getDelegate ( ) ` method to ` TraceCallable ` and ` TraceRunnable ` classes to provide a way to access the ` delegate `
added synchronization functionality and improved error handling in FileActivity and FileDisplayActivity to enhance user experience by providing feedback during file synchronization events
added quiche stream writable functionality to the connection stream in ForeignIncubatorQuicheConnection and JnaQuicheConnection classes
added a boolean parameter to the method call in JavascriptContext . java to enhance functionality by allowing additional parameters during execution
refactor TableCell constructors to remove unnecessary Align . left parameters to simplify code and improve readability by eliminating unnecessary parameters
added a new file ` TracingAutoConfiguration . java ` to enable automatic tracing configuration for UAA spans to enhance tracing capabilities in the application
refactor the addition of a Para element in the Submissions class to improve code clarity and maintainability by using a local variable for the first
updated the ` getPrunedQueryableSegments ` method to include a ` List < IndexSegment > ` parameter and modified the returnSegmentReaders method
refactored the VertxBufferTest class for improved readability to enhance maintainability and facilitate future updates
fix bug in messagesubmissionchunk . getdates ( ) and add unit test for it
changed the access modifier of the ` mContext ` variable from private to protected in ` PredictionAppTracker . java ` to allow subclasses to access the
removed multiple unused imports from ShowTablesOperation . java and ShowViewsOperation . java to streamline code and improve readability
added a new exception class ` MongoDataIntegrityViolationException ` and modified ` MongoTemplate ` to include ` WriteResult ` and ` MongoActionOperation
[ hotfix ] [ runtime ] do n ' t call jobcompletionfuture ( ) in jobcoordininationservice
updated the ` bitsToHumanReadable ` method to include multiple suffixes and refactored the ` bytesToHumanReadable ` method to use a
refactor merge policy initialization in TestUpgradeIndexMergePolicy and add a test for no pathological merges in TestMergeOnFlushMergePolicy to
added a check to return early if the overview state is disabled to prevent further processing when the overview state is not enabled
updated error log message to include a link to the documentation for CPU support checks to provide clearer guidance on CPU performance issues related to CPU management
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter for loading settings to improve flexibility in loading setting models from different input streams
added null checks for incoming Fields , DocsAndPositionsEnum , and LeafReader classes to ensure robustness by preventing NullPointerExceptions
add support for cryptographic key size in jcecrmfencryptorbuilder
updated exception handling in NetSocketReader and removed redundant constructors in SoftEndOfStreamException to improve clarity and maintainability of exception handling
removed redundant @ Inject annotations from multiple Java files to streamline code and improve maintainability
updated the expected size from 9 to 10 in BundledDistributionTest . java and added tests for database users in PostgreSQLTest . java
[ flink - 20613 ] [ stream ] add job name to pipeline option for printing and logging
updated scaling logic in OverviewState . java to differentiate between two - panel and single - panel devices to improve layout responsiveness based on device
add a populator tree to ice plain biome to make it easy to generate populator .
removed DateTimeZone parameter from getMaxTime and getMinTime methods in DataUpdateManager and StorageUtils to simplify method signatures by eliminating unnecessary zone handling
[ j2kt ] add isqualified flag to ` ` thisreference ' ' and ` ` tounparameterizedtypedescriptor ' ' .
updated regex pattern in XhamsterRipper . java to ensure compatibility with the new version of the xhamster library
fix an issue with entity list in world . getentities ( ) .
hhh - 11836 - oracle ddl - use correct table name when schema be null
corrected a typo in the condition in FlutterConsoleFilter . java to improve code readability and maintainability
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing selection of all files in the menu
[ java ] : fix term offset calculation in network publication .
refactor GuildUpdateOwnerEvent class to improve code structure to enhance maintainability and readability of the code
fix inportal tick for creative player and entity ( # 118 )
added functionality to handle compressed and uncompressed chart heights in ClusterMonitorTileSkin . java to improve layout responsiveness and ensure proper rendering based on
refactor multiple codec templates to improve code organization to enhance maintainability and readability of the codebase
updated length calculations to use long instead of int for better precision to prevent potential overflow issues and ensure correct handling of large integer values
removed null check for header in RendererConfiguration . java to simplify the condition to improve code readability and maintainability
cloudstack - 10225 : do n ' t scale disk and memory of vm with custom service offering . do n ' t change disk offering
updated import statements in Order . java and modified LimitOrder . Builder initialization in HitbtcAdapters . java and HitbtcAdapters .
replace idleCount with consecutiveIdleCount in LLRealtimeSegmentDataManager . java to improve clarity and consistency in variable naming
updated the configuration service name from " JRuby " to " JRubyScripting " to clarify the purpose of the service in the automation context
rename variable ` name ` to ` displayName ` in ` ConfigCategory . java ` to improve clarity by using a more descriptive variable name
updated condition in ParticipateAssetIssueActuator to include an extra check for exchangeAmount to ensure accurate validation of the exchange amount against
removed a loop condition that checks if the index exceeds 10 in FeedUtils . java to simplify the code by eliminating unnecessary iterations
added a new test method ` testHDF4 ` to validate HDF4 parsing functionality to ensure compatibility and correctness of the HDF4
[ calcite - 6092 ] do n ' t throw exception for invalid time value in cast ( )
[ java ] fix npe in ie editor when language server be null .
added a new method ` quietCloseAll ` to handle multiple AutoCloseables in ` CloseHelper . java ` to improve resource management by reducing
updated the argument string for the confirmation button in RemoveFileDialogFragment to use common _ yes instead of hardcoded strings to improve clarity and maintainability
added a null check before drawing the image in Pixmap . java to avoid potential NullPointerExceptions when source and height are zero
replaced ` ReflectionHelpers . callInstanceMethod ` with ` java . security . ProtectionDomain ` and replaced ` ReflectionHelpers . callInstanceMethod ` with
updated the regex pattern in the fqdnRegexPattern in GUIUtil . java and added tests in GUIUtilTest . java to improve regex validation
updated conflict handling in CachedRowSetWriter to use long conflicts instead of boolean to improve performance by reducing unnecessary boolean checks
( chore ) camel - test - infra - flutter : clean up code and improve readability
added a conditional check for reference reference in ReferenceMemory . java to ensure correct assignment behavior when the reference is the current instance
added seed file validation and improved error handling in the Injector class to enhance the functionality to inject seed URLs in the job
added a condition to check if the original view is hidden before displaying it in FloatingIconView to ensure that the original view is shown only when
bugfix : maximumdesiredsize should always be non - negative .
added logging for unsupported texture coordinate types and introduced a method to check for supported texture coordinate types to improve error handling and provide clearer logging for unsupported
added error handling in ` EncodeActivity . java ` and improved validation in ` SupplementalInfoRetriever . java ` to ensure proper file deletion and
http : / / issues . apache . org / jira / browse / amq - 4203 - add seek and close method to tracingconsumer
updated the handle retrieval logic in HandleDAOImpl . java and added a newPrefixLength property in UpdateQuery . java to ensure correct handling of prefix
simplified the initialization of ` convertedValsList ` by removing the ` addAll ` method from ` convertedValsList ` to improve code readability
added a deprecated constructor in AbstractTimer to indicate that this constructor should no longer be used and may be removed in future versions
added a nightly warning dialog for the Universal Gcode Sender version to inform users of potential bugs in nightly builds to ensure users
add option to sort response by team name for general question
updated the return statement from " Remove unnecessary throws " to " Remove unnecessary ` throws ` declarations to improve clarity and consistency in error reporting
removed the CacheApplication class and replaced it with CommonsApplication for caching functionality to streamline the code by consolidating caching functionality into a single class
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application . application . getAppContext ( ) ` to simplify
refactor StatisticsServlet class for improved performance to enhance performance and maintainability of the statistics handling logic
added a check for Android SDK version before updating configuration to ensure compatibility with devices running KitKat and above
added a new constant for ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ EXISTS ` in ` VersionDefinitionResourceProvider
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
patch by jbellis ; review by gdusbabek for cassandra - 1447
added " com . sun . org . apache . xml . internal . resolver . helpers . " and " com . sun . org . apache .
renamed methods ` persistExecutionContext ` to ` add ` across multiple classes to improve clarity and consistency in method naming
do n ' t replace the input of loopexitnode if it be a loopexitnode
refactor SearchAndRecommendationsScrollController to replace RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController . java to improve code organization and
added a check for terminal support in ConsoleReader . java to ensure the application only runs when the terminal is supported
changed the type of ` timeAllowed ` from ` long ` to ` int ` in ` CloudExitableDirectoryReaderTest . java ` and added
updated session validation check in AbstractSessionCache and added session flushing test in RemoveSessionTest to ensure that sessions are only flushed when valid and
refactor column name handling in ChangedIndexChangeGenerator to improve null safety and clarity to enhance code readability and prevent potential NullPointerExceptions
replace java . util . Vector with java . util . ArrayList for adding and removing RadioButton instances to improve performance and maintainability by using a more
refactor UserManagerCompat to extend UserManagerCompatVNMr1 and isNycMR1 and above and introduce a new User
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to multiple database classes and updated return logic in ` Reorgan
updated ` spawnThreadToCompareActionGraphs ` to include ` lastActionGraphAndResolver ` for better handling of mismatched rules to improve clarity
added LockDatabaseDesc and UnlockDatabaseDesc classes to manage database locking and unlocking operations to provide a structured way to manage database - related properties
refactor RankingTopComponent , RankingToolbar , RankingTopComponent , RankingTopComponent , and Ranking
added handling for DisconnectMessage in HandshakeHandler and updated logging in NodeImpl to improve disconnection handling and provide clearer logging for disconnections
added a test method ` testSetDeleteSG ` to ` IoTDBAuthorizationIT . java ` to verify the functionality of setting and deleting storage
chore ( regen ) : update java doc to version 1.1 . 0 ( # 13 )
added checks for missing types and improved type validation logic in multiple classes to enhance type validation and error handling for missing types
added multiple methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to facilitate the execution of
updated import statements and improved metadata buffer size checks in CountersManager . java to enhance code readability and ensure compatibility with UTF - 8 encoding
removed the ` toString ( ) ` method and updated logging statements in ` MultiSteps ` , ` SendEmail ` , and ` SendEmail ` classes
added a null check for joinKeys in JoinDesc . java to ensure that the joinKeys array is properly cloned when it is not null
added a PrincipalResolver to the authentication handler registration in WebAuthnConfiguration to enable customizable principal resolution for the authentication handler
added a searchPaths parameter to the addSettingsFromFile method in XcconfigStack . java and updated related tests in XcconfigParserTest .
changed variables from ` binarizedTrees ` , ` parentMaps ` , ` parentMaps ` , and ` rootStates ` to
[ hotfix ] [ runtime ] disable unaligned checkpointing option until rescaling of unaligned checkpoint be complete
fix ( sql ) : do n ' t throw unsupportedoperationexception when query be not valid .
graal . compiletheworld . log should be enable by default .
added a check for LocalVariable type in LambdaRewriter . java to ensure that only LocalVariable instances are processed to prevent runtime errors
added support for handling ` ` timestamp ' ' column type in ` CreateTableGenerator . java ` to ensure correct NULL representation for timestamp columns in MySQL
added context class loader management in EnvConfiguration . java to ensure proper class loader management during thread execution
added a condition to set an ejection delay based on stageNr to ensure proper ejection delay is set when stageNr is zero
renamed the method ` runFunctionalCommandLineRunnersAndApplicationRunnersAndApplicationRunnersAndApplicationRunnersAndApplicationRunnersAndApplicationRunner
refactor TransactionUtil2 class to improve transaction handling logic to enhance performance and maintainability of transaction processing
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter and improved issuer resolution logic to enhance flexibility in
updated string concatenation and added null check for coll in ClusterState . java to improve error handling and prevent potential NullPointerExceptions
replaced calls to getStyle ( ) . setAlignment ( align ) with getAllStyles ( ) . setAlignment ( align ) to ensure consistent alignment settings across
added support for foreign database and schema names in ForeignKeyColumn and ForeignKeyColumnMutator classes to enhance database and schema management capabilities in the database management system
[ java ] throw a clusterexception when a leader can not be find .
replaced ` shadowOf ` with ` shadow . extract ` in ` ShadowActivity . java ` and ` ShadowBluetoothDevice . java ` to
added null and empty root checks and improved selection root handling in FileSelection . java and TestBugFixes . java to ensure robust error handling and
deprecate oninventorytick in iforgeitem and iforgeitem # oninventorytick
[ java ] write war resource in a zip file instead of a JAR file .
added null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to prevent potential NullPointerException when accessing the activity
refactor widget binding logic in AppsCustomizePagedView , Launcher , PendingAddItemInfo , and PendingAddItemInfo
added new constants for airPressure , airQuality , CO2 , and vocPPM in EcobeeSensorThingHandler . java to enhance
refactor code formatting and improve readability in OperationSetServerStoredContactInfoFacebookImpl . java to enhance code readability and maintainability
added environment variable for AAPT and AAPT2 in Genrule . java and updated related tests in GenruleTest . java to enhance environment variable
truffle : do n ' t dump access table if trufflecompileroptions . truffleinstrumentbranches = true
added null check before disposing of the message in Validator . java to avoid potential NullPointerException when message is null
added a @ Getter annotation and modified the ` init ` method in ` TxCacheDB ` , ` SnapshotManager ` , and ` TransactionCache `
updated log warning messages in CoreContainer . java to clarify that log watching is not yet implemented for log4j and logwatcher is disabled to improve
refactor exception handling in CategoryPlotTests . java to use return statements instead of printstacktrace to improve code readability and maintainability by reducing
replaced ` ByteArrayOutputStream ` with ` SmallByteArrayOutputStream ` and introduced a new ` SmallByteArrayOutputStream ` class for writing byte arrays to improve performance and
jsweet 2 catch - up http : / / github . com / jme3 / jsweet 2 catch - up http : /
changed the connection parameter from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java to ensure proper
fix npe in routeinfo when firstexchangecompletedtimestamp and lastexchangecompletedtimestamp be null
updated TestHtmlTag . java and TestUseOption . java to use a static final variable for default language and improved javadoc output checks to enhance code
modified the condition in CompletionProvider to check if the result is incomplete and has more than 10 items to ensure that completion items are only processed when
updated command - line argument from " -- llc " to " timeColumnName " and modified the logic for retrieving the time column name to improve clarity
refactor output format handling in SiteSnapshotVariationsTest and OutputOptions classes to ensure correct file extension is used based on the output format type
updated condition in DeviceProfile . java to check if the QSB is not enabled to ensure correct behavior when QSB is not enabled
added ` Objects . equals ` and ` Objects . hashCode ` methods to ` AnimationList ` and ` SceneKey ` classes to improve object
added a ` setDate ` method to ` AbstractGenerator ` , ` Generator ` , and ` Generator ` classes , and modified the ` HttpGenerator `
replaced ` Adler32 ` with ` CRC32 ` in the ` Store . java ` file to improve code clarity and maintainability by using a
disable xen . heartbeat . interval . any # of seconds for xen . xen . selffencing
added a new constant ` Warning . ZERO _ AREA _ FIN ` and updated warning handling in ` FinSetCalc . java ` to improve
refactor ElasticsearchIO serialization to use standard serialization for document metadata to improve code maintainability and reduce boilerplate code
hhh - 15586 add trunc ( ) function to h2dialect and oracledialect
added a check for " Memory Pool not found " in the ` MetricUtils ` class and updated error handling in ` MetricUtilsTest ` to improve
added a boolean flag ` useJavaScript ` to the ` ensureSignedUp ` method and modified return statements in ` UserTests . java ` and `
updated error messages in ValidationTask . java to include runtime object types with enclosing names to improve clarity and maintainability of type annotation errors
updated the BACKFILL constant from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils to
updated the return statement to include the latest proposal number in PrecompiledContracts . java to ensure the method returns the correct data with the latest proposal
refactor code to improve handling of child views in AllAppsContainerView to enhance code readability and maintainability by reducing redundancy
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated start ( ) method calls in ResourceService and ResourceHandlerTest to ensure correct behavior after ContextHandlerCollection is started
removed conditional check for WORKSPACE _ CUSTOM in Cling . java to simplify the logic for handling custom drawing scenarios
added a null assertion for lookupModule in TruffleJDKServices . java to ensure that lookupModule is not null to avoid potential NullPointerException
skip test that do n ' t make sense until call - through be turn on .
updated import statements in multiple demo classes to remove unnecessary dependencies to streamline code for better readability and maintainability
ww - 3905 use getvalue ( ) instead of getobject ( ) to get the value of the parameter
added private constructors to Utils , ApplicationUtils , and Whois classes to enforce singleton pattern to prevent instantiation
added try - with - resources for object input handling in RegionsApiUtil . java to ensure proper resource management and prevent potential memory leaks
replaced instances of ` o . getClass ( ) . getName ( ) ` with ` java . util . Vector ` and ` java . util . Hashtable
added tableNameWithType to the warning message in RetentionManager . java to provide more context about the retention time for better debugging
trim whitespace from the first element ' s length check in QueryExecutorImpl . java to ensure that the length of the first element is trimmed before processing
update resourcepackfilenotfoundexception to use modfile . getfilepath ( ) . tofile ( ) instead of path . tofile (
refactor transformer builder management and visibility handling in PartitionToolbar . java to improve code readability and maintainability by reducing redundancy
modified the condition in RecentsView . java to include a check for the task view ' s focus state to ensure that the task view is visible
replaced Map < String , String > with BMIViewObject in CalculatorEndpoint , CalculatorRestEndpoint , CalculatorService , CalculatorService
removed the Comparator . comparing method from the ThenComparing method in QueryCommand . java to simplify the comparison logic for better readability
fix the damage calculation for haybones . close # 152
updated environment variable handling in WindowsProcessAddressSpace and added support for OpenJ9 _ JAVA _ COMMAND _ LINE in multiple files to
added support for custom plugin properties in OptionsParser and corresponding unit tests in OptionsParserTest to enhance configuration flexibility and ensure correct handling of plugin properties
updated condition in HashJoinBatch to check for non - empty hashTable before proceeding to improve code clarity and prevent potential NullPointerExceptions
updated timestamp handling in Timestamp . java and added unit tests in TimestampTest . java to enhance timestamp validation and ensure correctness of timestamp representation
[ java ] do n ' t expose the archivecontext variable in the connect method .
added a condition to check if the method is not compiled before executing the compilation check to ensure that the method is only executed when the method is not
added test cases for image connectivity and joined processing in multiple test files to enhance testing coverage for various image types in the application
refactor TogglableFlag and related classes to improve default value handling and add property change listeners to enhance configurability and ensure correct default
updated log messages in DockerClientFactory to use placeholder placeholders instead of hardcoded strings to improve log readability and provide clearer error messages
added a conditional check to return early if the current platform is Android before proceeding to improve performance by avoiding unnecessary processing on Android
updated assertions in RoutesTest to use hamcrest assertions instead of asserting to improve readability and maintainability of the test code
added new interface ` BytePredicate ` , ` ByteToLongFunction ` , ` FloatToLongFunction ` , and ` ShortToLongFunction `
updated the ` getSubsColor ` method to return a string instead of an integer and adjusted bitrate setting logic accordingly to improve flexibility in handling different
added a condition to check if the future completes before deregistering the invocation to ensure that the deregister operation only occurs if the future is complete before
replaced the initialization of ControlFrameBytes with the output method in AbstractWebSocketConnection . java to streamline the connection handling process and improve code clarity
added a condition to check if the " redirected " flag is true before starting the welcome intent in LoginActivity to ensure that the welcome activity is
added a new ` ShadowCheckedTextView ` class and implemented it in ` Robolectric . java ` to enable testing of the ` CheckedTextView
added Serializable interface to the ParserState class and modified field serialization in AccessorProperty and Property classes to ensure serialization compatibility and prevent serialization issues
added " identrustdstx3 [ jdk ] " to the " identrustdstx3 [ jdk ] " list in VerifyCA
removed unnecessary attribute assignments for TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline code by eliminating redundancy
added a utility method to parse the occupant ' s nick from the presence ' s from resource to ensure that the occupant ' s nick is correctly parsed
updated QuicSession constructor to accept a context parameter and modified connection handling to enhance flexibility in connection management and improve connection handling
replaced direct calls to ` writer . setMergeScheduler ( ) ` with ` writer . getConfig ( ) . getMergeScheduler ( ) ` for better
refactor code to improve readability and maintainability to enhance code maintainability and reduce redundancy
added imports for ComputedDateValue , ComputedNumericValue , and ComputedNumericValue , and updated default value retrieval logic to improve error
refactor NbtScoreboardIoService to improve code structure to enhance maintainability and readability of the code
[ saml2 ] make sure serviceprovidermetadataresource exist before store metadata .
changed the visibility of the ` printer ` variable from private to protected and added a ` createPrinter ` method in ` GraphPrinterDumpHandler ` to
added calculations for average price in open orders in HuobiAdapters . java to ensure accurate pricing calculation in order processing
updated projections handling to use ` getTarget ( ) ` instead of ` getName ( ) ` in ` ProjectionOperation ` , ` TypeBasedAggregationOperationContext `
refactor viewer logic in FakePlayer . java to improve readability to enhance code clarity and maintainability by simplifying the logic for adding players
added constant state management in FolderAdaptiveIcon , FolderAdaptiveIcon , ShiftedBitmapDrawable , and ShiftedBitmapBitmapDrawable to
refactor connection management and session management in SPDYClient . java to improve code clarity and maintainability by consolidating connection and session management
fix ( protostuff ) : fix nullpointerexception when writeObject ( ) return null
pdfbox - 4892 : improve code readability
refactor BarrowmanCalculator class to improve calculation accuracy to enhance performance and maintainability of the calculations
added a conditional check to return early if the axes and axes numbers are not shown to improve performance by avoiding unnecessary processing when axes are not displayed
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` in ` Texture . java
[ ds - 4071 ] fix typo in xmlworkflowserviceimpl . returntoworkspace
updated SSL connection logic in CustomUrlJob . java and added SSL trust manager in CustomUrlTrustEverything . java to enhance security by allowing SSL
add getrealusedclockratestring ( ) method to mediaformat . getrealusedclockratestring ( ) .
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future modifications
updated the ` getProductNameForBuildTargetNode ` method to use ` getModuleName ` instead of ` getProductNameForBuildTargetNode `
[ hotfix ] [ runtime ] fix thread safety issue in testslot
# 184 - sqltreebuilder : support id _ list query ( # 185 )
updated WebSocketServletRFCTest to use ByteBuffer for read and parsing to improve readability and maintainability of the code
[ wasm ] fixed memory leak in wasmfunctioninstance and wasmfunctionnode .
[ hotfix ] [ log ] add ttl to be able to set it to be use by clickhouselogcollectclient
changed serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper , CustomPreconditionWrapper , and XMLChangeLogSerializer to
refactor DeploymentExceptionTest to use Jetty Server ' s Handler for thread pool management to improve test reliability and maintainability by utilizing a more
added error handling for initialization in CommonsApplication and NearbyController to improve robustness by catching exceptions during initialization
added a null and empty check for objectName before returning it to avoid potential NullPointerException when objectName is null or empty
updated error message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve clarity
[ hotfix ] [ table - planner - blink ] replace old plannerclass and executorclass with new one
updated variable names and improved null handling in X500Name initialization to enhance code clarity and prevent potential NullPointerExceptions
added an @ Deprecated annotation to RuntimeOptions . java to indicate that this class is outdated and will be removed in future versions
replaced ByteBuffer encoding with direct byte conversion in Utils . java to simplify code and improve performance by avoiding unnecessary byte array creation
added a new interface ` PermissionEvaluator ` to the ` org . springframework . security . expression ` package to provide a mechanism for evaluating permissions based
added a new option for ERASE _ LINE _ ON _ FINISH in LineReader and modified buffer handling in LineReaderImpl to
masterfilesystem : do n ' t check if the server be not online
replaced references to ` CALC _ MERKLE _ ROOT _ FAILED ` with ` BLOCK _ MERKLE _ ERROR ` in
expandwar : do n ' t try to expand a jar file if it do n ' t exist .
improve error handling in defaulthttpclient and fullnettyclienthttpclient
updated the center method of the container in the Picker class to ensure the spinner is centered relative to the spinner container
[ hotfix ] [ runtime ] fix memorybufferpool . requestmemorysegments ( ) in case of interrupt
refactor MBeanServer initialization and release management in TestJmxIntegration . java to improve code clarity and ensure proper resource cleanup
replaced ` RunWith ` with ` RetryTestRule ` in ` AbstractIT . java ` to improve test reliability by allowing retries on failures
refactor ` CallTask ` and ` QueryStateMachine ` to use ` transactionManager . getRequiredTransactionId ( ) ` instead of ` autoCommit
[ java ] add package - info . java for the csv test package .
added support for the " javax . net . ssl . DistinguishedNameParser " and " javax . microedition . khron
[ hotfix ] [ stream ] remove unnecessary processingtimecallback in streamtasktimertest
updated URI handling logic in Request . java and added a new test case in RequestTest . java to ensure correct URI retrieval based on HTTP CONNECT
updated the key from " lastSeenVersionCode " to " WhatsNewActivity . KEY _ LAST _ SEEN _ VERSION _ CODE "
added sessionavailable / sessionunavailable / sessionunavailable / sessionunavailable / sessionunavailable / sessionunavailable / sessionunavailable
added a package to scan " liquibase . pro " in the ServiceLocator class to enable scanning of the " liquibase . pro " package for Liqui
replaced the ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider . java ` to simplify
updated the ` loadWithNewGlobal ` method to accept an additional parameter for additional parameters to enhance functionality by allowing additional parameters for global context loading
refactor path parsing logic in FastPathResolver . java for improved clarity and efficiency to enhance readability and maintainability of the code
updated the weigher method to use ` getRetainedSize ( ) ` instead of ` length ( ) ` to ensure accurate representation of retained size
rename method ` hasExceedRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple files to improve clarity and consistency in naming
added support for the " LEAD " , " LAG " function in the UnsupportedOperatorsVisitor class and a corresponding test case in Test
added a call to clear the headers before processing a proxy request to ensure that the request headers are cleared before processing
added a check to skip SA attach tests in CompressedClassSpaceSizeInJmapHeap . java to skip tests that are not expected to work
added null check for bgColor in GraphicsDevice . java and created a new TranslucentWindow class to enhance robustness of background color handling and
added null checks for user info and improved error handling in UserInfoActivity . java to ensure that user information is present and provide clearer user feedback
added custom field serialization and deserialization methods for PrecompiledHeaderData and updated Preconditions in PreprocessorDelegate to ensure that leadingIncludePaths cannot be used on
[ hotfix ] [ table - common ] add update - mode property for kafka table source sink
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate behavior of named output groups in various scenarios to ensure that named outputs can
updated regex patterns in FileSettings . java for improved content handling and added a check for content equality to ensure that changes to the content do not affect
nifi - 10786 : fix flow versioning issue in stateless flow
replaced instances of ` new Object [ ] ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode for improved test performance
added new device status entries for leaving - dock , energy - save - mode , and energy - save - mode in DeviceStatus . java to enhance
make modelloader . loaditem ( ) more robust by catch blockstate exception .
added JUnit @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
do n ' t get current pixel scale for 2x graphics . getcurrentsurfacescale ( )
refactor RussianLowerCaseFilter class for improved readability to enhance maintainability and clarity of the filtering logic
updated CsvBulkLoadToolIT and QueryUtil classes to use PropertiesUtil for server and client properties to simplify configuration handling and improve clarity in test setup
replace File . separatorChar with File . pathSeparatorChar in displayName to ensure consistent file path formatting across different operating systems
[ jme3 ] allow wav to be seek to wav file with a time offset .
added a boolean parameter ` repeatFirstLineIndent ` and modified the indentation logic in ` ColumnText . java ` to allow dynamic adjustment of line indentation
changed the type casting of the equals method from Object to Object to ensure type safety and avoid potential ClassCastException
fix a bug where metrictrackerfactory and healthcheckregistry do n ' t have to be set .
loopex : fix checkstyle violation for controlflowanchornode
added a call to setFocusPainted ( false ) for buttons in WindowsPlacesBar . java to improve user interface responsiveness by preventing
added a condition to handle both UniqueConstraint and ForeignKey objects in DatabaseSnapshot . java to ensure proper handling of foreign key constraints in database snapshots
added a deprecated method ` getAccountLedgersWithParams ` in ` AccountServiceRaw ` and implemented it in ` AccountAPI ` to streamline
[ ds - 4071 ] add check for dc . title when create group in community admin group
[ java ] do n ' t throw exception if there be no word in insertion detector .
added unit test base on user forum issue
updated the thread count from ` getBackgroundThreads ( ) ` to ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and added
increased FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to improve user experience during fast scrolling
replace MetaUtil . toInternalName ( System . class . getName ( ) ) with Ljava / lang / System in HotSpotResolvedJavaField
hhh - 13644 fix npe in procedurecall . getresultstream ( )
added a null check for ` apiProperties ` before retrieving it to avoid potential NullPointerException when ` apiProperties ` is null
added new BinaryFrameGenerator and TextFrameGenerator classes for handling binary and text frames in WebSocket communication to enhance the WebSocket implementation by providing specific frame generation capabilities
simonstewart : use wait instead of localdriver . findelement ( by . id ( by . id ( by . id ) )
refactor random number generation logic in RandomGeo3dShapeGenerator . java to use multiplication for latitude and longitude calculations to improve code readability
added a keepAlive method to the ResourceBundle class to ensure a clean state for the ClassLoader during resource loading
change return value from false to true in SQLiteDatabase . java to correct the logic for database operations
add support for ljava / util / concurrent /
added MkdirStep for directory creation in multiple Java files to ensure the correct parent directory is used for generating output files
added detailed error messages for coordinate comparisons in MeshLeveler . java to improve debugging by providing more context in exception messages
[ drools - 6533 ] skip applypmmlmodelcommand execution if jpmml library be not available on classpath ( # 3353 )
updated the variable ` locationMode ` to ` thermalStatus ` in ` ShadowPowerManager . java ` to improve clarity by using a more descript
added support for macOS temporary directory creation in MountableFile . java to ensure compatibility with macOS and improve temp directory management
use memory mapped buffer if windows be not available
added a null check for the organization in the model in PluginManager . java to ensure that the Plugis model has an organization in the pom
updated license information in SepPostingsWriterImpl . java to clarify the purpose of the contributors in the NOTICE file
deleted the TerminateWebSessionListener . java file to remove unused session termination logic to streamline the codebase
updated the executeChildProcess method to use the system property ` java . class . path ` instead of an empty string to ensure the execution uses the
replace ArrayUtils with new byte arrays for cryptKeyInit , cryptKeyPriv , and md5Salt in KM200Device . java to improve
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` to ensure that the Javadoc change is correctly applied
changed the LAUNCHER3 _ PHYSICS flag from false to true in FeatureFlags . java to enable the launcher3 feature for
added a ` noPrint ` class to the ` writeln ` block in ` HtmlThreadInformationsReport . java ` to improve the visual output by
updated LUCENE _ MAIN _ VERSION from " 3.0 " to " 4.0 " and added new version constants in multiple files to reflect the
added private long variables for symbolicator and task in BsdDebuggerLocal . java and modified platform check condition in PlatformInfo . java to improve
fix memory leak by use weak reference instead of hardcoded one
log muted networkdispatcher exception in debug level instead of error
[ java ] make sure admin buffer be set in the context if it be not null .
added a break statement in TouchImageView . java to prevent fall - through behavior in a switch - case statement
chore ( proto ) : update protos for advancedsettingsproto to use v3 . AdvancedSettings . LoggingSettings and cx . v3 .
remove ssl handshake listener in feedablebodygenerator . flush ( ) .
added handling for " java . lang . Object " and " java . lang . GenericTypeVariable . Variance . CONTRAVARIANT " in Type
use concurrentset instead of nonblockingset for memtablespendingflush . patch by jbellis ; review by jbellis for cassandra -
added null check for ` tree . errs ` in ` MemberEnter . java ` and modified error handling in ` JavaCompiler . java ` to improve
changed the browser ' s background color from NO _ BACKGROUND to NONE in BugInfoView . java to improve the visual appearance by removing unnecessary background
updated the method call from ` finish ( ) ` to ` cancel ( ) ` in ` AboutActivity . java ` to ensure the dialog is canceled
updated calculations for newLowerBound and newDiv methods in IntegerStamp . java and added new test cases in IntegerStampTest . java to ensure correct
added a new method ` readStream ` to read a stream from an input stream in ` ITextUserAgent . java ` to improve image reading functionality
added local variable handling in CaseStmtToken and implemented local variable management in ExprGenerator to enhance the functionality of variable handling in switch statements
added error handling for SSL provider initialization in RSAClientKeyExchange . java to improve robustness by catching InvalidKeyException and unsupported JCE provider
updated the addition of additional dependencies from " AdditionalDependencies " to " psapi . lib " in WinGammaPlatformVC10 . java to ensure correct
updated line separator handling in StringUtils and StringUtilsTest classes to ensure consistent line separator handling across different operating systems
added support for UTF - 8 encoding in HTML alerts in TemplateEngineFreemarker . java and updated test cases in ApplicationController . java to improve
pdfbox - 4892 : use string instead of bytearrayinputstream for unmarshal test
remove the ' static ' modifier from the ` ` holdSamples ' ' and ` ` type ' ' property from ` ` sample sender ' '
added a conditional check for the ` testngEmailableReporter ` property before adding it to the ` EmailableReporter ` class to ensure that the reporter
added a boolean flag ` quoted ` in ` CommandLineBuilder ` and updated assertions in ` CommandLineBuilderTest ` to improve handling of quoted versions to ensure
removed the ` public ` modifier from multiple interfaces in the ` VendorDefined ` and ` VendorDefined ` classes to enhance encapsulation
set the number of reduce tasks in FreeGenerator to ensure the job uses the correct number of fetchers
fix nullpointerexception in schemageneratorhelper when use default value
bug 532077 : change the file version from 505365 to 532077
updated extension checks in FloatTextureData . java to include GL _ ARB _ texture _ float and GL _ RGBA32F for compatibility with
make fileserver . write ( ) and fileserver . close ( ) synchronized
added a null check for outputDirectory and jarStream before setting the output directory to ensure output directory is set correctly when both outputDirectory and jarStream
added performance measurement for SQLite futures in ShadowSQLiteConnection . java to improve performance monitoring for SQLite operations
updated the method for retrieving the JDK tool from ` getCurrentJDKTool ` to ` getTestJDKTool ` to ensure
added a new enum ResourceErrorHandling for handling specific resource errors in the org . geoserver . config package to improve error handling for unconfigured
modified the buffer position calculation in RAMInputStream . java and added a test for EOFException in TestRAMDirectory . java to ensure correct buffer position
added localization for missing resource error messages in DefaultServlet and JspServlet classes to improve error handling and provide clearer context for missing resources
modified ForkJoinPool and ForkJoinWorkerThread to accept an innocuous parameter and added AccessControlContext for permission testing to improve thread management and ensure proper access control
refactor memory checks in Caches . java for improved clarity and performance to enhance code readability and maintainability by reducing repetition
hbase - 26175 fix testsplittransaction . openhregion ( ) bug in hbase - testsplittransaction
added null check for currentSelectionArea before accessing its properties in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
added ParameterizedTest annotation and a test method to DemoModulesTests . java for testing Jetty Demos integration to ensure that the JAAS Demo
added conditional check for spanX and spanY in CellLayout . java to ensure correct folder creation based on span dimensions
refactor CacheOffHeap class implementation to improve performance and reduce memory usage
add a check to prevent the database from be re - opened if a table have a higher ID .
added error handling for extra XML gid values in TiledLoader . java to warn users about potential corrupting of the map
fix synchronization issue in inmemorytilecache . setworkingset ( )
added a new Java class with a solution that calculates the minimum and maximum steps for random numbers to implement functionality for determining the minimum and maximum steps
tracker : add a addresschecker interface to check if a tracker address be invalid .
fix rendertype . gettranslucent ( ) and rendertype . gettranslucent ( ) in multilayermodel
add tag removal functionality to GuiConfigEntries . java to improve tag management and provide clearer feedback on tag removal
[ netatmo ] use string instead of int for thingtypeversion in moduletype .
added null check for recieptents before sending messages to avoid potential NullPointerExceptions and ensure accurate time representation
refactor issingle logic into a separate method ` isSingle ` to improve code readability and maintainability
add failfast parameter to dockerclientfactory . getclient ( ) to make it possible to use profiler . start ( ) .
added a new parameter ` resourcesMode ` to the ` AndroidMetadata ` constructor and updated its usage in ` RobolectricTestRunner ` to include
[ jbrules - 2530 ] fix the issue of the query return wrong date in HistoricProcessInstanceQueryImpl . java
replaced ` gradleImporter . importProject ` with ` gradleImporter . importProjectCore ` in ` OpenAndroidModule . java ` to utilize the
added error handling for CommandFailedException in LiquibaseCommandLine . java to provide user feedback when a command execution fails
refactor TreeMap class to improve code readability to enhance maintainability and facilitate future updates
add support for enable async stack traces in the console
added a method to set the glow color in BubbleTextView and updated the folder item ' s glow color in Folder to enable customization of glow
added style classes for link and desc in LinkedFilesEditor . java to improve text visibility for links and descriptions in the user interface
added a new table for the " alltypes " column in ResultSetMetaDataTest . java and created a test for class matching in ResultSetMetaDataTest .
removed the try - finally block for file deletion in Lucene40LiveDocsFormat . java to simplify the code and improve resource management
added null check for ` _ info ` before checking if ` _ info ` is ` null ` to prevent potential NullPointerException when ` _ info `
added a constructor to the ShadowLocation class with a provider parameter to enable initialization of ShadowLocation with a specific provider
added a condition to check if the deviceRam is less than 2048 to ensure that maxRAM does not exceed 2048 for 32 - bit
add stats for map without data if map have no data
added logenabled to fileprofileactivator to check file existence / missing / missing file .
updated the error message from " noname1234 " to " invalid _ " in PdfWriter . java to improve clarity by using a more descript
changed the order of the ` roles ` map from a list to a set in the ` GuildImpl . java ` to ensure the ` roles `
updated the return value in ExpandableUploadListAdapter to use a constant for maximum number of uploaded items to improve code readability and maintainability by
added unit tests for delete operations in DashboardUserMapperTest . java to ensure the delete functionality behaves as expected
rename recipienttogivertoresponsespagedata to primaryparticipantidentifier for clarity
[ gr - 12278 ] add support for auto dereference handle .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for external use
added usagehelpautowidth = true and description = ` ` no graphics ' ' option to terasology . java
refactor case handling and update action bar title setting logic in DrawerActivity . java to improve readability and maintainability of the action bar title
refactor CommandLineParserTest . java for improved clarity to enhance maintainability and readability of the test code
added constants and interpolators for ALL _ APPS _ CONTENT _ FADE _ MAX _ CLAMPING _ THRESHOLD and PortraitStatesTouch
replaced the method ` toUnderscoreSeparated ` with ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to improve clarity
added native methods for setting , frame , and release in CWrapper . java to enhance functionality and provide native methods for frame management
added validation for constant values in Checker . java and created a new ValueTest . java file with constants and tests to ensure that constant values are
refactor MontgomeryMultiplyTest , TestMulAddTest , and TestSquareToLen classes to improve code organization and maintainability
[ hotfix ] [ core ] remove unnecessary null check for constructors
refactor JiraConfiguration class to improve configuration handling to enhance maintainability and readability of the code
updated error handling and coverage reporting in UploadBuild . java to improve clarity and consistency in error reporting
updated bounds calculations in DeviceProfile . java to account for search bar top offset to ensure correct positioning of the search bar based on the search bar
[ pulseaudio ] fix disconnect when idle timeout be 0 .
refactor OverviewCommandHelper to run tasks on the UI thread before starting the activity to improve responsiveness by ensuring tasks are launched on the
added a method to retrieve the source group in AppleSource . java to improve code clarity and ensure proper handling of optional values
updated await timeout values in TestSimTriggerIntegration . java to increase the waiting period to accommodate longer execution
updated RunLengthEncodedBlock instantiation to use ` positionCount ` instead of ` outputPositionCount ` to ensure consistency in data handling by using the correct
fix a nullpointerexception in abstractnodecostsearch . getbestsofar ( ) .
added a check to skip processing specific component types in ResourceEditorView . java to prevent processing of form and dialog components in the resource editor
replaced ` UiThreadHelper . getBackgroundLooper ( ) ` with ` LauncherModel . getWorkerLooper ( ) ` in ` DragView
added a null check for the commitPoint variable in ReplicationHandler . java to ensure the correct commit point is used when it is null
added unit tests for ` getImeiForSlot ` and ` setImei ` methods in ` ShadowTelephonyManager ` and implemented
added debug logging for ZUUL requests in SimpleHostRoutingFilter . java to enhance debugging capabilities for HTTP request processing
added ` destory ( ) ` method and ` close ( ) ` methods to multiple classes to ensure proper resource management and prevent memory leaks
[ rocketmq - 102 ] fix test failure in normalmessagesendandrecateit
updated Charset usage in OutputStreamWriter initialization to use StandardCharsets instead of Charset to improve code readability and maintainability
hbase - 26175 do n ' t swallow multiple ioexception when bulkload multi - hbase file be not in the table
added a commission parameter to the DefaultWithdrawFundsParams constructor and updated its usage in RippleWithdrawFundsParams to support
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and improve readability
removed unnecessary exception throwing for SolrServerException and SolrServerException in LoadSolrBuilder . java and SolrLocator . java to improve code readability and
added a check for abstract methods and improved error handling in Java2TypeScriptTranslator . java to ensure that overloaded methods cannot invoke abstract methods and
added StacklessLogging to manage stackless logging in TestFileSessions . java to improve logging clarity and maintainability by utilizing StacklessLogging
added Serializable interface to MutableColumnDataType and modified access modifiers in SqlDataType and Entities classes to enhance serialization capabilities and improve code readability
refactor SubExactLConstantTest and SubExactLNonConstantTest classes to improve code clarity and maintainability
added a null check for the claimRequestString before parsing to avoid potential NullPointerExceptions when the claimRequestString is empty
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory and added a static instance of HiveFilterSetOpTranspos
updated the ` processTypeHintForNestedDocuments ` method to handle null inputs and added unit tests for handling null values in ` UpdateMapperUnitTest
updated the ` getCoreStatus ` method to use ` CoreStatus ` instead of ` CoreAdminResponse ` to improve code clarity and maintainability by
make transformers and locators list non - static to reduce memory footprint .
no effective change - fix typo in error message
improve pegraphdecoder to show call stack trace instead of call stack trace
renamed methods from ` setOf ` to ` copiedSetOf ` for clarity to improve code readability and maintainability by using more descriptive
camel - 14263 : camel - mail : use identityhashcode instead of dumpmessage to get identity hash code .
http : / / issues . apache . org / jira / browse / amq - 4673 - fix npe in prefetch subscription
updated the return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure that getIdentifierName ( ) has a valid property name
added WaveGeneratorActivity to the InstrumentsFragment and updated InstrumentsFragment to use it to start WaveGeneratorActivity instead of Toast messages to
added logging for null pointer exceptions and improved null checks in KeyedProperties . java and SheetOverlaysManager . java to enhance error handling and
fix : add log and exec test for pod
added a test method to verify that the MockDirectoryFactory causes SolrCore . initIndex to detect no index and create a new one to prevent index
do n ' t call super . dispatchmethodkernelokra ( range , args ) when call super . dispatchmethodkernelokra
[ java ] sort mxrecords by priority to make it easy to sort .
refactor thread creation in XToolkit . java to use a privileged action for better encapsulation to improve code readability and maintainability by
added validation and selection logic in SelectBox . java and set the dropdown ' s selected value in UITest . java to ensure the SelectBox function
[ hotfix ] [ runtime ] use collector . printstacktrace instead of throw an exception
added a parentSplit parameter to the createState method and updated related logic in FlowBuilder and SplitState classes to enhance state management by associating Split
changed the connectionState variable from private to volatile in SSLSocketImpl . java to ensure thread safety when accessing connectionState
change default polling period from 10 to 1000 in AbstractPollingEndpoint . java and enable integration tests for the periodic trigger in EnableIntegrationTests . java to
refactor memory allocation and encoding methods in MemoryStack . java and MemoryUtil . java for improved readability to enhance performance and maintainability by reducing
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractDoclet classes to improve error handling and
[ java ] fix nullpointerexception in unusedmodifierrule .
refactor lambda expressions for cleaner syntax in various Java files to improve code readability and maintainability by using method references
updated the parameter name from " ssl = { 0 } " to " ssl = { 0 } " in AbstractHttpClientServerTest . java to improve
[ iotdb - 4063 ] improve error message when transformation fail .
updated variable name from ` userPermissions ` to ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve code readability by
replaced ` equals ` method with ` EqualsBuilder ` for equality checks in ` Point . java ` to improve performance and readability of the equality check
added a null check for outputRoot in the process method to handle cases where outputRoot may be null to improve robustness by preventing potential NullPointerException
pdfbox - 2576 : allow to filter annotation , a suggest by valerybokov
updated the StackTraceCleaner class to improve stack trace handling to enhance debugging capabilities and provide clearer error messages
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure correct content type is set based on file extension
hhh - 14178 - skip testliteralinselectexpressiontest . testliteralliteralinselectexpressiontest . testliteralinselectexpression
updated the ` upgrade ` method to use ` slotSize ` instead of ` version ` and adjusted the logic for managing the ` stats ` array to
added ` getStats ( ) ` method to multiple classes and updated statistics retrieval in ` Context ` , ` ContextImpl ` , and ` ContextImpl
added long polling functionality and configuration options for the kie client to improve resource management and control long - polling behavior
refactor gesture handling in PagedView , BaseOverview , and LauncherInstrumentation classes for improved scrolling functionality to enhance user experience by ensuring accurate gesture
refactor unlocks dialog initialization and add a button to the PausedDialog in PausedDialog to improve code clarity and functionality by allowing users to
added a call to clear the drops list in PlayerEventListener . java to ensure that the drops are cleared before processing new events
added a constant for the default input name in the StreamResult class to provide a default value for the input name parameter
updated the exception type in the test method from MalformedURLException to IOException in AttributeNormalizerTest . java to ensure proper handling of IOException in the normalization process
updated printlnBoth method to include chunk type and adjusted buffer handling in LocalTsFileSketchTool . java to improve output clarity by including chunk type
added a set of headers to exclude specific Swift . h files in UmbrellaHeader . java and updated tests in ProjectGeneratorTest . java
corrected the spelling of " onHttpError " to " onHttpHeaderError " in the GrizzlyAsyncHttpProvider class to improve
added a call to ` encode ( ) ` in ` RequestPlugin . java ` to ensure proper encoding of request parameters
mondrian : fix bug in mondrian - topcount . getexpression ( ) in mondrian
added null or blank password validation in LdapAuthenticationProviderImpl and created a new TestLdapAuthenticationProviderImpl class to ensure that a valid LDAP user is
pdfbox - 4892 : use integer . toString ( ) instead of long . tostring ( ) , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure that complexWriters are reset when a condition is met
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress serialization warnings and improve code clarity
changed the access modifier of the ClassGraphClassLoader class from public to package - private and modified the null check for classInfo to enhance encaps
added schema error parsing logic in ErrorResponseException . java to handle " _ errors " case and improve error message formatting
added a constructor to EventSourcingRepository that accepts an event store and a snapshot trigger definition to ensure that the event store is not null to
refactor variable declarations for clarity and consistency in binary node handling to improve code readability and maintainability
refactor search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle empty search text to improve user experience by
ninja : add support for standby mode in sendcommand ( )
change default planar configuration from TIFFExtension to TIFFBaseline in TIFFImageReader . java to improve image processing efficiency by using chunky
added a call to close the input stream in ItemListTag . java to ensure proper resource management and prevent memory leaks
add a utility class to calculate the average energy in the laser table .
added new classes ` SigInt ` , ` SigIntBarrier ` , and ` SigInt ` with methods to register and await tasks
refactor graph handling in ExporterGEXF . java to support hierarchical graph structures to improve flexibility and maintainability in edge processing based on graph
refactor string handling in TCTLSeparatedProtocol to use Text class instead of byte array to improve performance and reduce memory usage during string writing
added validation for sub question index in FeedbackRubricResponseDetails and updated related test cases in FeedbackRubricResponseDetails to ensure
updated condition in CatalogComparator to check for original case instead of DB2Database to ensure correct comparison of schema and catalog cases in the comparison logic
refactor BrowserMobProxyTest to improve test setup and teardown methods to enhance clarity and maintainability of the test code
updated formatting of criticalErrors in ModelRepositoryImpl . java to use Integer . toString for better readability to improve code clarity and prevent potential NullPointerException
removed redundant reset calls to mTextWatcher . reset ( ) in InPlaceEditView . java to ensure that the text watcher is properly reset before
refactor InternalByteArray , TruffleString , and TruffleString classes to improve code clarity and maintainability
[ hotfix ] [ table - common ] use tuple2 instead of tuple3 for edge
rename Java6AbstractBDDSoftAssertions , Java6JUnitBDDSoftAssertions , and Java6JUnitSoftAssertions to
removed the ` ClassA \ 314 \ 201 . java ` file and added a new ` DiacriticTest . java ` file
[ java ] make cluster membership test more robust to time issue .
[ mng - 5670 ] fix multi - module build with make - behavior and make - behavior request .
updated SSL detection logic in ServiceRegistryConfig and added new assertions in TestServiceRegistryConfig to improve SSL configuration validation and enhance test coverage for IP port
refactor Mockito class to improve readability to enhance maintainability and facilitate future updates
reformatted the constructor signature in Jdbc3Connection . java to improve code readability and maintain consistency
replaced the synchronized method ` ensureInstance ( ) ` with a synchronized method ` ensureInstance ( ) ` in ` ServletHolder . java ` to improve
added logging functionality for deltaServerTime and modified logic in BinanceExchange . java and BinanceBaseService . java to improve server time management and
added a condition to check if the binding starts with " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) Servlets For
added a null check for the component form before deregistering animated to ensure the animation is deregistered only when the component form is not initialized
updated the ` decodeResource ` method to accept an additional ` BitmapFactory . Options ` parameter and introduced a new ` BitmapFactory . Options ` parameter
[ java ] do n ' t execute aeron . run ( ) on aeron thread .
added linkifying functionality and improved emoji text handling in TimelineArrayAdapter . java to enhance user interaction by allowing links to emojis and
added " text " to the unmodifiable data types and updated related logic in PostgresDatabase , OracleDatabase , and NumberType classes to enhance data type
fix entryprocessorbouncingnodestest . testentryprocessorbouncingnodestest ( # 3683 )
updated component state checks in AmbariManagementControllerImpl . java and modified related test cases in AmbariManagementControllerTest . java to improve
added null check for the bridge UID before adding it to the inbox in CreateBridgeServlet . java and updated the test case in CreateBridgeServlet
refactor methods in CrawlServer to improve code readability and maintainability to enhance code clarity and ensure thread safety when checking robot expiration status
added null checks for the display name in multiple classes to avoid potential NullPointerExceptions when checking for " Teredo " to improve code robustness
added a default ShaderProgram parameter to the SpriteBatch constructor and updated shader creation logic to enhance flexibility in shader creation based on the default shader program
added synchronous commit option to properties in TestUtil . java to enable synchronous commits for testing purposes
added element type coercion functionality to ` SortedSetTypeCoercer ` and updated ` fillSortedSet ` method in ` TypeCo
refactor confirmation logic in RemoveFileDialogFragment and AddFilesDialogFragment to differentiate between folder and local files to improve clarity and functionality of file deletion actions based
added a condition to check if the character is less than or equal to 256 in URLPathEncoder . java to ensure that only valid characters are processed
updated the implementation of the ` registerFragmentStorage ` method to use a random port instead of a hardcoded value to improve code readability and
[ hotfix ] [ test ] fix test failure in hostresourceprovidertest
[ hotfix ] remove unused parameter in yarnentrypointutils . loadconfiguration
refactored the initialization logic in SIPCommFrame . java to improve code organization and maintainability by consolidating color initialization logic
deleted the ShadowHtml class and updated the TextTest class in RobolectricBase . java and HtmlTest . java to streamline the code
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface to provide a
updated logger references from ` logger ` to ` h3Logger ` and ` quicLogger ` in ` HttpClientLoadTest . java ` to improve
removed the private modifier from the addListeners method in MockSettingsImpl . java and added a new test for listener validation in MockSettingsImplTest .
[ hotfix ] [ state ] fix typo in statehandlestore
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . jetty . http . security .
[ # 8842 ] instructor : add team info to student section ( # 8842 )
fix resource leak by use try - with - resources instead of try - with - resources
camel - 1145 : fix camel - http : / / issues . apache . org / bugzilla / show _ bug . cgi ?
added a new ` BuildTarget ` parameter and refactored related methods in ` JarBuildStepsFactory ` and ` JarBuildStepsFactory ` to
do n ' t use an anchor in the message ( they change too often
cloudstack - 10226 : remove unused getpagesizeval ( ) method from listcapacitycmd
added a case CLOSED in the IteratingCallback class to handle closure scenarios gracefully
added a new boolean field ` isAuthorized ` and updated related methods in ` AccessControlContext ` and ` ProtectionDomain ` to ensure proper handling of authorization
refactor OSGi event sending logic in OSGiDeployer . java to improve robustness by ensuring only AbstractOSGiApp instances
added handling for " tiff " and " tiff " codecs in DLNAMediaInfo . java to ensure correct MIME type is set
replace ` result ` with ` types ` and ` assumption ` in ` OptimizedCallTarget . java ` to improve clarity and maintainability of
added a new file ` CubocDesktop . java ` and modified ` Map . java ` to use ` ImmediateModeRenderer20 ` to
updated directory paths in PolicyMonitorTest to use the target directory instead of the test resource directory to ensure proper directory structure is used for monitoring tests
added a call to removeAllFiles ( ) in TrashbinActivity . java to clean up the trashbin list to ensure a clean state for the
updated the method call from ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) ` to ` com . sun . jdi
make checkglobalvariablestoragenode return a boolean instead of a void .
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted its parameters to enhance event handling by associating component hash and
added a constant for the maximum burn amount and updated the return value to use it to improve code readability and maintainability by centralizing the maximum
refactor UniqueConstraintSnapshotGeneratorSnowflake to utilize H2Database for snapshotting unique constraints to improve code readability and maintainability
updated the item assignment logic in DMLTransformer to handle empty insert statements more gracefully to improve clarity and functionality of the insert statement logic
updated import statements and changed pgtUrl from " http : / / www . github . com " to " https : / / www . github
added a boolean parameter ` isStatement ` to the ` getDefaultValidFunctionName ` method and introduced a ` hideDefaultName ( ) ` method to handle
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated generic type declarations in multiple classes to use generics for better type safety to enhance code clarity and prevent potential ClassCastExceptions
[ java ] add miss hole punch packet to send hole punch packet .
added tests for updating date in PostgreSQL objects in ResultSetTest . java to ensure correct functionality of date updates in PostgreSQL
added checks for empty results in the password reset endpoint to return a UNPROCESSABLE _ ENTITY when the user has non - UAA origin to
replaced direct reference to ` getChildNodes ( ) . item ( 1 ) ` with ` getDocumentElement ( ) ` in ` XMLUtils . java ` to improve
refactor caching logic in Cache . java to improve performance and reduce memory usage
corrected the spelling of " timeInSec " to " timeMillis " in Isochrone . java and SPTResource . java
fix light relay not work if bindy be not valid
added a new ` Chainer ` class and refactored the ` contains ` method in ` CollectionSubject ` and ` CollectionTest ` classes to
refactor Model class to improve code readability to enhance maintainability and facilitate future updates
updated the calculation of recordedTime to use a fixed value of 619315200000L instead of adding a new value to ensure accurate time tracking
added a condition to call status . resize ( ) when the terminal type is Windows to ensure proper resizing behavior for Windows terminals
updated the ` UpdateDesiredStackAction ` to check if the ` hostVersion ` state is not required before setting the host version to ensure that the
[ java ] move jre _ bundle _ deploy . jar out of the package path for integrationtest .
use linkedhashset instead of hashset so we do n ' t have to rely on hashset .
remove unnecessary try - catch block in operationserviceimpl . toobject ( data )
[ hotfix ] [ knative ] fix checkstyle violation in knativeenvironment
updated the executor name from " commitlog _ archiver " to " CommitLogArchiver " to ensure consistency in naming conventions across the code
added connect ( ) method to ` CloudSolrClient ` and a test for uploading configurations in ` TestCloudSolrClientConnections ` to ensure
fix race condition in debuggersession . getallbindings ( ) .
added methods to clear files and cache in ShadowContext and refactored file handling in Robolectric tests to improve code readability and maintain
added LinkedHashSet and TreeMap imports in SecureXStream . java and added a test for adding styles in XStreamPersisterTest . java to ensure that
[ drools - 4036 ] allow kiehelper to pass kiemodulemodel to kiebuilder
update soil dry logic to handle newfarmland data to ensure soils are not dry if the new material be a Farmland instance
added a default method ` getLocalIp ( ) ` to the ` FinishedSpan ` class to provide a default implementation for retrieving the local IP address
updated ` JdbcStepExecutionDao ` to use ` SerializationUtils . deserialize ` for deserialized ` OBJECT _ VAL ` and added a new test for
updated the calculation of b0 and b1 in AbstractDictionary . java and modified comments in WordDictionary . java to improve code readability and maintain
added support for python37 and updated resource paths in python . java and added preloadresource in tensorflow . java to enhance compatibility with Python37 and
refactor plugins initialization and refresh functionality in PluginTab . java to improve code readability and maintainability by using a dedicated refresh method
change log level from info to warn in DefaultHistory . java to improve visibility of log messages for better debugging and monitoring
cloudstack - 10226 : do n ' t create a vm if it do n ' t exist
camel - 14263 : camel - aws2 - sftp should not stop the sshd instance
refactored the ExperimentalMockitoJUnitRunner class for improved clarity to enhance code maintainability and readability
added a new method ` GetBuildSerial ( ) ` in ` GpsSettingsActivity . java ` and updated related code in ` Session . java
refactor SwapGBuffers class to improve performance to optimize memory usage during data swap operations
added null checks for spatial and spatial before removing the skeleton control to ensure proper cleanup of skeleton controls when spatial is null
added methods to set smart replies in ShadowRanking and updated ReflectionHelpers in ShadowRanking to enhance functionality for managing smart replies in the ranking component
[ java ] do n ' t try to list archive segment by name if it do n ' t exist .
updated the initialization of the carrot2ResourcesDir variable in CarrotClusteringEngine . java to use initParams directly instead of resourceLoader . getConfig
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to ensure proper handling of null
updated variable names and API version from ASM7 to ASM9 in multiple files to ensure compatibility with the latest ASM API version
[ java ] throw a tasteexception when column vector can not be load from map file .
added client information retrieval and setup in SurrogateAuthenticationEventListenerTests . java to enhance test reliability by associating client information with the client object
added a boolean variable ` isUserView ` and initialized it to ` false ` in ` CardPresenter . java ` to reset the user view state
updated method names and imports in GraphvizExecutorUtility . java and GraphvizJavaExecutorUtility . java for improved clarity to enhance code
refactor histogram initialization to use a variable for constructBatch and syncLogTimePerRequestHistogram to improve code readability and maintainability
added a new module - info . java file for ` com . speedment . runtime . connector . sqlite ` to define module dependencies and exports for
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for " web . type " in permissionsManager initialization to simplify the code and improve readability
refactor DateParser and TestDateParser classes for improved readability to enhance maintainability and facilitate future updates
added a method ` getDepth ( Context ) ` to the ` SpringLoadedState ` class to define the depth of the state based on the context
replaced ` System . arraycopy ` with ` Arrays . copyOfRange ` in ` BinaryDecoder . java ` to improve code readability and maintainability by using
[ hotfix ] [ runtime ] fix typo in executiongraph javadoc
removed unnecessary swipe handling for notifications in NotificationActivity and added a click listener in NotificationRenderer to streamline notification management and improve UI responsiveness
updated exception handling in DefaultExceptionConverter and modified test cases in EndpointTest and ExceptionsTest to improve clarity of error messages when processing none exceptions
fix ( container ) : fix nullpointerexception in glowcontainer # setlock ( )
replaced the use of ` MethodHandle ` with ` java . lang . reflect . Method ` in ` ProxyMaker . java ` to improve compatibility with reflection
fix cast exception in mathtest . getbitand ( int , int )
updated the return statements in BaseEmailContentFormatter to remove unnecessary StringUtils . join for metrics and datasets to simplify the code and improve readability by
added a layout provided panel and a layout provided panel to manage its visibility based on the layout node ' s layout to improve user interface responsiveness
added null check for location in ServerCallable . java to ensure robustness by preventing potential NullPointerException when location is null
[ hotfix ] [ javadocs ] fix typo in javadoc
added null check for key parameters in PublicKey and modified the return statement in BasicChecker . java to ensure that the key parameters are not null before generating
refactor MediaTypeRequestMatcher to use a new method to check for ignored media types to improve code readability and maintainability by encapsulating
refactor task number retrieval and logging in LlapBaseInputFormat to improve clarity and consistency to enhance readability and maintainability of the code
added properties to the SpringBootTest annotation in EventServiceTests . java to allow bean definition overriding by default for testing purposes
added a null check before closing the indexReader to prevent potential NullPointerException when indexReader is null
updated package declarations and import statements for BTCMarketsStreamingService , BTCMarketsStreamingExchange , and BTCMarketsStreamingService to
added a test for rendering a code block with BRs or paragraphs in FencedCodeBlockParserTest . java to ensure that the rendering
added a new file ` CompatibilityTest . java ` to verify the compatibility of properties in XML to ensure proper handling of property keys and their values
added new utility classes ` PushUtils ` , ` SecurityUtils ` , and ` VariantComponentsModule ` , and ` VariantComponentsModule `
refactor replica count calculation in TableRebalancer to use Integer . MAX _ VALUE instead of Integer . MAX _ VALUE to ensure accurate replica count
update version numbers and constants in ExoPlayerLibraryInfo . java to reflect the latest release and improve version tracking
log4j2 - 1343 fixed line separator in test
added socket timeout handling in AjpAprProcessor . java to improve error handling for socket timeout scenarios
added default values for friction , density , and sensor in FixtureDef . java to ensure default values are set to zero to avoid null reference issues
updated method signatures to include ` fetchSaclingFactors ` and ` fetchScalingFactors ` across multiple classes to enhance functionality to support scaling
removed the broadcast idle command execution from LauncherInstrumentation . java to streamline the code by eliminating unnecessary command execution
added tests for font , link , and font tags in ResourcesTest . java and modified the span initialization in ResStringPool . java to ensure that
fix copy / paste error in guistatscomponent . java
added permission request handling for call phone calls in Launcher . java to ensure the application requests necessary permissions before starting a call
updated return values in SimulationPanel . java and modified status handling in FlightData . java to improve code clarity and enhance user experience by providing localized
changed access modifiers of BUF _ SIZE _ LONG and BUF _ SIZE _ LONG from public to private in GeoPointInBBoxQuery and
added a method ` isDockerAvailable ( ) ` to check if the Docker client is available to provide a mechanism to check if the Docker client is
added a constant for the VPX codec type " vpx " in CodecTypes . java to standardize the representation of the VPX
added a ` coordinatorAddress ` option to the ` DistBuildFactory ` and modified the ` getCoordinatorAddress ` method in ` DistBuild
added a new method ` match ` in ` FsUtils ` and refactored timer usage in ` WrapTimer ` to improve path matching and
added a check to ensure the value is non - negative before adding to the labelValues list to avoid adding empty entries to the list
fix npe in geoboolean . getboolean ( ) when result be null
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the code and improve readability
updated creation metadata handling in ObjectStore and added a test for updating materialization time in TestObjectStore to ensure that materialization time is correctly set
[ vosk ] fix speech recognition error when native dependency be miss .
fix a bug in jmssampler . browsequeuedetails ( ) and clearqueuedetails ( )
refactor break weight determination logic in GlyphView . java to improve clarity and maintainability to enhance readability and maintainability of the code
refactor synchronization logic and buffer management in RCFile . java to improve performance and efficiency by reducing the number of read operations
added @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 related to the test
added a list of unwound entries to the data structure in ToePool . java to improve the management of unwound entries for better
removed the ` keysToSortedDataFlavorArray ` parameter from ` ClipboardTransferable ` and refactored the ` DataTransferer ` class
hbase - 13347 testthriftservercmdline fail with ` ` - infoport ' ' when run on ci server
added a check to return false if the scanner is at the end of the stream to ensure proper handling of end - of - file scenarios
refactor conditional checks for enabling metrics , timers , and timer properties in Debug . java to improve code readability and maintainability by reducing redundancy
added null check for multiuserchat . getnickname ( ) in chatroomjabberimpl to avoid npe .
added null and empty checks for filename and improve error message formatting to ensure robustness and clarity of error messages for better debugging
refactor code to encapsulate token creation logic into a separate method to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve readability to enhance clarity of error reporting when transforming paths to SourcePath
[ hotfix ] [ yarn ] remove unnecessary locking in yarnflinkapplicationmasterrunner
added a synchronized method nativeGetHardwareBuffer in ShadowNativeImageReaderSurfaceImage . java to implement hardware buffer retrieval functionality
added SSL URI setting to BTCChinaMarketDataService initialization to ensure the service connects to the correct SSL endpoint
[ java ] use project ' s base directory instead of project ' s base directory .
added OauthController , GetMapping , and Oauth2PluginTest classes , and created a new OauthController and Oauth2PluginTest
[ java ] fix typo in semgrex pattern javadoc .
refactor ` AbstractStreamEx ` , ` EntryStreamEx ` , and ` EntryStreamEx ` methods in ` AbstractStreamEx ` , `
[ hotfix ] [ runtime ] improve error message in restcodec . convert ( )
added support for android projects with mixed scala \ java tests in RobolectricClassLoader to enable compatibility with Maven Surefire projects with mixed scala
[ java ] do n ' t check if sdp be not in transmittableaudioencodings .
updated type checks in CreateTableGenerator to use DatabaseFunction instead of SequenceNextValueFunction and added a new test for default values in CreateTableTest
[ geot - 6063 ] add test for geot - 322 measurements ( # 3863 )
added a volatile boolean field ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added a condition to check if the processor is not configured before expanding the regex mapping and modified return statements in ColumnarDataSource and RowProcessor to improve
updated ` splitIntoThirtyParts ` and ` splitIntoThirtySecondsParts ` methods to use ` SEEK _ LENGTH `
added new classes ` XLCDCommunicator ` and ` XLCDController ` , and modified ` GrblCommunicator ` and ` Firm
jbrules - 2605 : add support for kmodule . xsd in kie - api
added a check for ` retryTimes ` instead of ` true ` in multiple classes to ensure assertions validate that the ` retryTimes ` is greater than
refactor thread synchronization in WorkerProcessPoolTest to use a constant for WAIT _ FOR _ TEST _ THREADS _ TIMEOUT to improve
replaced ` equals ` and ` hashCode ` methods with ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test
updated FREEZE _ V2 and UNFREEZE _ V2 values from 20000 to 10000 in EnergyCost . java to improve
updated the ` command ` method signature and added exception handling in ` DownloadPlugins . java ` to ensure proper configuration management during the command execution
deleted the ` SpringTransactionHooks . java ` file and replaced it with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest . java `
refactor AbstractClassAssert class to improve code structure to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue . java ` to test the handling of an uninitialized string value to ensure that the application correctly
added dependency resolution for provided dependencies in AndroidLibraryDescription . java and updated related tests in GraphEnhancementQueryEnvironment . java to improve dependency handling and
added a new boolean flag ` ENABLE _ KEYBOARD _ TRANSITION _ SYNC ` to the ` FeatureFlags ` class to
replaced the system anomaly message saving logic with a static boolean variable ` sSavedBugreport ` to improve efficiency by avoiding redundant message saving
added a constant for " cinepack " in FormatConfiguration and modified LibMediaInfoParser to handle " cinepack " format to enhance media
added a camera bobbing feature and updated the poke method in the Player class to improve user experience by allowing customizable bobbing behavior based on
replace ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java ` to ensure
removed the HSQLDBServerFilesFilter class and modified the listFiles method in TestUtility to simplify the file filtering logic and improve code maintainability
added a null check for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure that restoreFromSeed and restoreFromKey
updated the method to use ` getApiDataSeriesVersion ( ) ` instead of ` getApiDataVideoVersion ( ) ` and added logging for
added a check for type existence in method invocations in HasTypes . java to ensure proper handling of method invocations with fully qualified class names
replaced hardcoded array sizes with constants from NUM _ VALUES in AmbientCubemap . java to improve code readability and maintainability by
profiler : show a dialog if the current mode be not set properly .
hive - 15564 : return masked number for zero in mask ( alexander pivovarov via ashutosh chauhan )
refactored file handling in BoundedOverheadBlockStoreTest and DerbyBlockStoreTest to use JUnit ' s TemporaryFolder instead of
add itemstack . isitemdamageable ( ) and itemlist . gethashassubtypes ( ) to allow itemstack .
fix mc - 167447 : linewidth should be set to 1 if it ' s less than 1 .
simonstewart : do n ' t set the browser . startup . page in the firefox driver
added condition to check for HTTP CONNECT and GET methods in Http1xClientConnection . java to ensure proper handling of HTTP connection status codes for
updated the task acceptance from " compile " to " process - classes " in JoobyMojo . java to improve clarity and specificity of the
replaced the shutdown method with a call to close idle connections in HTTPHC4Impl . java to improve connection management by allowing more time for idle connections
added a conditional check for aggregate function suffix in AmbariMetaInfo . java to ensure metrics are only added when the aggregate function suffix is not
added a method to set fullscreen parameters in TaskOverlayFactory and updated the corner radius retrieval in TaskThumbnailView to improve the handling of fullscreen
added a new Java file ` Solution . java ` that prints the number of occurrences of a given number of random numbers to provide a solution for
initialize SocketChannel to null in ClusteredAgentManagerImpl . java to ensure that ch1 is initialized before use to prevent potential NullPointerExceptions
rename MutisignOperationerGodicTest . java file to improve clarity and consistency in naming conventions
added exception handling for NoSuchElementException in StaxEventItemReader and created a new test for restart at the end of the file to improve robustness
updated import statements and added null check for qualifiedResourceName in ShadowTextView and TestAttributeSet classes to improve code robustness and prevent potential NullPointerExceptions
updated import statements from ` com . nimbus . jose . shaded . json ` to ` net . minidev . json . json
added support for " AIX " operating system family detection in OS . java to ensure compatibility with AIX operating systems
vpc : do n ' t return private ip address if it be n ' t set yet .
added a method ` invokeWithoutBlockingWithResultSync ` to ` Display . INSTANCE ` in ` CN . java ` to implement a non -
remove presencemessagecomboboxtests since it ' s no longer use
refactor calculations in PortraitPagedViewHandler . java to use Math . round instead of int to improve code readability and maintainability by
fix typo in testclusterdumper . run ( )
hbase - 14205 addendum patch by jun rao ; review by jbellis for cassandra - 1446
camel - 14263 : camel - spring - boot should wrap runtime camel exception so we do n ' t have to wrap it in a runtime
added support for handling conditional tasks in SparkCrossProductCheck . java to enhance the functionality for processing conditional tasks in Spark
removed redundant calls to ` getModel ( ) . forceReload ( ) ` in ` LauncherAppState . java ` and ` LauncherModel .
updated conditional logic in LoginInfoEndpoint and added unit tests in LoginInfoEndpointTests to ensure correct handling of account chooser and discovery scenarios
[ iotdb - 4071 ] add a todescriptivestring ( ) method to the assignmentmanager to provide a string representation of region
updated HuobiAccountInfo and HuobiAccountServiceRaw classes to include a new ` result ` parameter and updated related methods accordingly to improve
added support for the " PERIOD " keyword in the MariaDB database and created a test for it in AddColumnGeneratorTest to ensure proper SQL
[ beam - 10297 ] improve documentation for portablepipelineoptions ( # 11839 )
added descriptions for Android 7.1 - you have Launcher shortcuts and a few bug fixes to the version change logs to provide clearer
added import statement for NUM _ MILLIS _ IN _ DAY and changed access modifier of NUM _ MILLIS _ IN _ DAY from private to public
removed the System . out . println statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] use aeronclientinvoker instead of aeronclientinvoker . invoke ( ) .
updated validation logic in Attr . java and added a new class NoWarnOnImplicitParams . java with a new test class NoWarnOnImplicitParams
refactor menu item visibility and visibility methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by reducing duplication
added new entries for BTC _ deposit , BTC _ deposit , and BTC _ deposit in BTCETransHistoryResult . java to enhance
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and ensure uniqueness of series and exceptions
added a @ Deprecated annotation to the PluginLoader class to indicate that the class is outdated and should not be used in new code
updated condition in LastQueryExecutor and added a new test for handling unseq time larger than seq time in IoTDBLastIT to ensure correct
updated the append method call in HttpResponse . java to ensure proper formatting of the request string
added a static block to set the System . setProperty to " ERROR " in BuildImageMojo . java to ensure proper logging behavior during the build process
added a safe area to the title bar in the Sheet class to enhance UI security by ensuring the title bar is displayed in safe areas
updated loop condition in OverflowSeriesImpl . java to iterate over the last element from TimeSeriesChunkMetaDataList instead of iterating over the list to
added SQL parsing and deparsing logic in AlterTest . java to ensure SQL commands are correctly parsed and deparsed
make the copystate ( ) method public in abstracthikariconfig . copystate ( ) .
fixed - redissonexecutorservice . executecallable do n ' t call tocompletableFuture ( ) . tocompletableFuture ( ) . # 3363
add constant for suffix _ split _ file in filelister and filelister
[ hotfix ] [ doc ] fix typo in orcbatchreader and orctablesource
reformatted code for better readability in CompareFunctionsProcessor . java to improve code clarity and maintainability
make reducescopeforlimitedspace ( ) more robust in case of insufficient disk space for compaction .
removed redundant toString ( ) and getTermPositions ( int index ) methods from SegmentTermVector , TermFreqVector , and QueryTermVector classes to
added a check to return early if the handler is invalidated in AbsSwipeUpHandler . java and removed task stack listener in TaskAnimationManager .
refactor ` getLockTimestamp ` and ` setLockTimestamp ` methods in ` AppPreferences ` , ` PassCodeManager ` , and ` Pass
added a method to retrieve the artist from the general stream in MediaInfoParser . java to ensure the correct artist is used for audio tracks
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
nifi - 10254 : fix npe in splittext when no header be present
added support for Windows key store type in HttpsConnectorFactory to ensure compatibility with Windows key store configurations
updated the DEFAULT _ CHECK _ TIMEOUT constant from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to increase the
added a conditional check for FILE _ NOT _ FOUND in FileSyncAdapter . java to handle cases where a non - existent file is found
added animation functionality to the Slider class to enhance user experience by allowing customizable animation durations
updated assertions in LineSeparatorProcessorTest to check for line separator to ensure consistency in comparison between expected and actual line separators
increased the maximum width and height from 512 to 1024 in TexturePacker . java to improve texture packing performance and reduce memory usage
added a new test to verify that negated Ternary is not unwrapped in the UnnecessaryParentheses class to ensure
camel - 14263 : camel - hazelcast - queue consumer should check for null body before process it .
added TextFeedbackTest . java and created TextFeedbackTest . java to implement unit tests for text feedback functionality
replaced Math . round with Float . compare for score comparison to improve comparison accuracy for score comparisons
refactor case handling in AddAndScaleMultiImage and ResourceEditorApp to use try - with - resources for resource saving to improve resource management and
added a method to retrieve the array class element offset in HotSpotReplacementsUtil . java and updated ArrayCopySnippets . java to use it
added checks for first line of zero in DefaultLogPublisher . java to ensure accurate processing of measurements when the first line is zero
added support for remote SCM systems in the application to enable users to enable retrival for remote SCM systems
[ mieleappliance ] fix onoff state check ( # 10220 )
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to utilize the new
[ hotfix ] [ test ] fix checkstyle violation in localzookeeper
add test for projectgenerationevent . finished ( ) and projectgenerationevent . started ( )
ggb - 2200 add prerelease point to the selection so that we can select prerelease point .
refactor JavaCompiler class to improve code readability to enhance maintainability and facilitate future updates
added error handling for non - positive remaining time in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to provide clearer feedback to the
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added " gc - sections " and " nocopyreloc " flags to the ldflags list in NdkCxxPlatform . java to
updated URI expansion logic in SpringCloudCircuitBreakerFilterFactory and added a new test in HttpBinCompatibleController to improve URI handling and test coverage
simonstewart : fix some javadoc warning in the test suite
fix npe in readsharedstringstable when uri be null
added a new method ` getAccountNet ` to ` HttpMethed ` and a corresponding test case in ` HttpTestAccount001 ` to
modified text layout handling in SwingUtilities2 . java and added error handling in Test6635110 . java to improve robustness by avoiding unnecessary text
refactor FlatteningIterator to simplify iterator management and improve clarity to enhance code readability and maintainability by reducing redundancy
removed HTML characters from the title and body in NotificationUtils . java to ensure consistent HTML formatting for better user experience
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
add test for delete question in instructorfeedbackeditquestionsuitest
hssf : do n ' t return negative row number if there be only one row .
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and PackageManagerHelper classes to enhance security by ignoring malicious intents that are
[ java ] update sequenceragent to use clustersession . state . init instead of session . state . init .
refactor equals and hashCode methods in AbstractParquetMapInspector to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector to
added a check for remotelyClosed before flushing the buffer in HTTP3StreamConnection to ensure proper resource management when the remotely closed connection is
added AutoCloseable interface to the SplitReader interface to ensure proper resource management and prevent memory leaks
removed the deepCopy ( ) method from GsonBuilder . java to streamline the code by eliminating unnecessary duplication
replaced null return values with a static final NOT _ FOUND constant in LLScanner . java and added an assertion in LLSourceBuilder .
refactor file handling in RestClientRequestImpl to improve asynchronous file operations to enhance performance and readability of file operations
corrected formatting of the method call in GrblController . java to improve code readability and maintain consistency
updated class loader handling in MockFactory and added a new SearchingClassLoader class to improve class loading efficiency and facilitate easier testing of class loaders
added a new test class TestRefreshFlagBug to test the refresh behavior of the in - between node to ensure that the in - between node be
added support for LEFT _ SEMI _ JOIN in ConstantPropagateProcFactory to ensure proper handling of multiple join types in the query
replaced the boolean variable ` completed ` with a conditional check for HTTP status in ` HttpReceiver . java ` and ` HttpSender . java ` to
rename ` arrayLengthOffset ` to ` arrayOopDescLengthOffset ` across multiple classes to improve clarity and consistency in naming conventions
add default policy to brokertestsupport so it can be reuse
refactor multiple BadKdc classes to improve code organization to enhance maintainability and readability of the codebase
added a check to ensure the appCtx is not running before stopping it to prevent potential errors when the application is not running
changed the return type of the drawItem method from void to GlyphLayout in the drawItem method to improve method functionality by allowing the drawing of items
refactor SpringmvcClient to use MetricsPublisher instead of direct object retrieval to improve code maintainability and simplify metric retrieval process
removed the ` SAFE _ ACCOUNT _ AGE _ DATE ` constant and updated its usage in ` AccountAgeWitnessService . java ` to
reformatted code in StructureHeader and StructureReader classes for consistency and readability to improve maintainability and readability of the code
added support for ResourceUrlProviderExposingInterceptor in the CasWebflowContextConfiguration to enhance resource URL handling capabilities in the web flow
add a new dextransformer so that it can be use by dexpler .
fix ( core ) : add enriched rule to enrichedrule dto ( # 4212 )
updated directory retrieval method to remove LinkOption . NOFOLLOW _ LINKS and modified arguments in PathResource . java and AliasCheckerSymlinkTest .
[ hotfix ] [ sql client ] remove sql client dialect configuration from executionentry
replaced ` ImmutableSet < String > ` with ` Supplier < ImmutableSet < String > > ` for checking resource packages to improve flexibility in handling resource packages based
[ java ] add a test case to verify that the package name be correctly parse .
added configuration for the minimum cross compaction unseq file level in IoTDBDescriptor . java to allow dynamic configuration of the minimum cross compaction
[ hotfix ] [ runtime ] move active resource manager into active resource manager package
updated the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated URI creation logic in ZipResource . java and added a new test class ZipResourceTest . java to improve handling of URIs with spaces in
reformatted code for consistency and clarity in ExpandableUploadListAdapter . java to improve readability and maintainability of the code
refactor configuration handling in RobolectricTestRunner and add a test for merging parent and method configurations to improve compatibility with nested classes and ensure
filter block and item registry names before adding them to the list to ensure that only valid block and item registry entries are processed
refactor methods in ` AbstractDataChangedListener ` and ` WebsocketDataChangedListener ` for consistency and clarity to improve code readability and maintain
added support for enum values in JSONPojoConvertor and updated color handling in JSONPojoConvertorTest to enhance functionality to support enum values and improve
added a warning message to warn users about the deprecation of the ` -- view ` option to inform users that the option will be removed soon
refactor GWTRequestWrapper to use byte arrays instead of String for payload reading to improve memory efficiency and reduce memory overhead when reading payloads
added orientation correction functionality to GyroControl class to improve responsiveness to device orientation changes
update biome list size to use biomegenbase . getbiogenarray ( ) . length ( ) . length ( )
updated method calls in GetInterfaceTest . java to use print statements instead of print statements to ensure consistent output formatting across the codebase
refactor environment variable assignment in FileCompilerConfig . java to improve code readability and maintainability
added a new interface ByteToLongCollector for collecting Byte - to - long functions to provide a structured way to generate byte - to - long
added a preload option to the map directory in MMapDirectoryFactory to enable users to preload data based on user - defined settings
added custom metrics for various component configurations in BukkitPlatform . java to enhance monitoring capabilities based on component capabilities
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added aspect ratio setting and default card image retrieval in CardPresenter . java to ensure proper rendering of the default card image based on the device ' s
[ xmlui ] fix login redirect for implicit authentication .
updated array handling in VectorHashKeyWrapper to check for non - empty lengths before cloning arrays to improve robustness by avoiding unnecessary array creation when
added tests for ` System . nanoTime ( ) ` and ` testSystemNanoTimeJit ` phase in ` TimeChangeTest . java ` to
updated MultiPartFilter to trim whitespace before processing lines and added a null check for the line to improve robustness by preventing null pointer exceptions
add entity . living . experience . dropevent . dropexperiencedropevent . dropexperienceevent . dropexperiencedropevent
updated error messages in OpenUVBridgeHandler and updated status updates in OpenUVReportHandler to improve clarity and specificity of error messages related to API
[ beam - 12263 ] remove unsupportedoperationatorsvisitor from beamqueryplanner . validate ( )
added RdepsFunction to the ` GraphEnhancementQueryEnvironment ` class and updated its usage in ` GraphEnhancementQueryEnvironmentTest ` to
refactor Character class to improve code readability to enhance maintainability and facilitate future feature additions
added logic to scale an entire rocket if it is an AxialStage or ParallelStage in ScaleDialog . java to ensure that the selection option
replaced calls to Arrays . toString ( ) with Arrays . getBytes ( 4 ) in UpdateableResultTest . java to improve code readability and maintain
refactored time boundary handling in BaseBrokerRequestHandler for improved clarity and functionality to enhance code maintainability and prevent potential null pointer exceptions
camel - 14263 : camel - ajp should add a socket to the poller only if the endpoint be pause .
updated regex patterns and added logging for image downloads in EightmusesRipper . java to improve image loading accuracy and enhance logging for better debugging
replaced calls to ` mDevice . getDevice ( ) . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple files to
added a check for phone type in QuickstepLauncher . java to ensure proper layout handling for phone devices in non - landscape orientations
updated query handling in PartTreeJpaQueryIntegrationTests to use ` QueryImpl ` instead of ` getValue ( query , PROPERTY ) ` to ensure
modified the ` readAllLines ` method to use ` readMatchingLines ` instead of ` Files . readAllLines ` to improve security by
added a dynamic check for the JPA result stream method in JpaQueryExecution . java to ensure that the JPA query has the correct method
fix nullpointerexception in physicsprocess . getphysicprocess ( ) .
add test for entryprocessor that clear the map when value attribute be indexed .
add calltoolssipimpl . notifyjoinjitsimesetroom ( ) when the invite be invite .
updated color calculation in Utils . java and modified htmlMessage initialization in UtilsTest . java to ensure correct color calculation and improve message clarity
disable non - empty name in default menu ( # 4103 )
updated the scratch path in Aapt2Link . java to include a RmStep for improved link tree management to enhance the build process by
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and
ggb - 2275 fix for ggb - 224 , ggb - 224 , ggb - 224 ,
handle empty stack exception in ysldvalidator , not markedyamlexception .
added ` isCanceled ( ) ` method implementations across multiple classes to provide a standardized way to check if a call is canceled , enhancing
refactor ` isAnnotationPresent ` methods across multiple classes to use a default implementation across multiple classes to improve code consistency and maintainability by centralizing annotation
added a default implementation of the removeAllWidgets method in UILayout . java to indicate that the method is not yet implemented
[ hotfix ] [ test ] add log4j test appender to yarnsessionfifoitcase
opensslcipher . getoutputsizeforfinal ( ) return maximum output size to ensure output size does not exceed the expected value
added support for high - resolution content transcoding in PlaybackController to ensure proper handling of high - resolution content in Fire TV Stick devices
[ beam - 10226 ] fix readsourcetranslatorbatch and readsourcetranslatormockbatch .
updated import statements and added listener management logic in GpsLoggingService . java to improve code readability and manage celltower preference settings more effectively
updated the ` putString ` method to accept ` byte [ ] ` instead of ` boolean [ ] ` and added support for ` EastAsian
added support for BaseItemDragListener in FolderIcon . java to enhance drag - and - drop functionality for better user experience
added a new method ` createEmptyArtifact ` to ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` SignavioConnector ` to
corrected the spelling of " rabbitmq . exchange . server " and " rabbitmq . host " to " rabbitmq . exchange . type
removed redundant calendar checks for month and year checks in VideoViewerActivity . java to simplify code logic for better readability and maintainability
camel - 14263 : camel - sftp : ensure that camel - sftp do n ' t throw exception
camel - 14263 : camel - base - weather : use mock . assertissatisfied instead of mock . assertissatisfied ( )
updated variable name from ` groupSortStr ` to ` sortWithinGroupStr ` in ` QueryComponent . java ` to improve code readability and
update doubleplant . issolid and doubleplantspecies . islarge _ fern to doubleplantspecies . double _ tall
changed focus behavior from setFocusable ( false ) to setRequestFocusEnabled ( false ) in TranscodingTab . java to improve user experience by preventing
added exception handling in VirtualMachineManagerImpl . java to ensure that exceptions are properly propagated to the caller
removed the acceptLicense method from DB2TestSystem and added a check for DB2Database in DockerDatabaseWrapper to streamline license acceptance logic and
updated DoubleModel to allow for dynamic unit group assignment and added a method to set and update the optimization seek value unit to improve flexibility in handling unit
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading operations involving BTC and ZMW
added a check to set the number of samples in TestPBRLighting . java to ensure that the FPP object has the correct number of
updated tasklet references in StepWithSimpleTaskJobParserTests . java to improve clarity and consistency to enhance code readability and maintainability
changed variable declaration from ` final ` to ` final ` in ` CentralAuthenticationServiceImplTests . java ` to ensure immutability of the variable
[ fix ] ggbabs ( ) do n ' t work in java 8 .
refactor service output handling in DDLSemanticAnalyzer by introducing a new method ` addServiceOutput ( ) ` to improve task addition logic to ensure
[ jbrules - 2530 ] fix bigdecimal coercion for biginteger ( # 2529 )
hide the jdt used by Jetty in WebAppContext to prevent the use of jdt in jetty
changed the return value of the ` useAuthCache ( ) ` method from ` super . useAuthCache ( ) ` to ` false ` to
capitalize the namespace variable in PageTitle . java to ensure the namespace is properly capitalized for better usability
camel - 14263 : camel - direct should throw directconsumernotavailableexception instead of camelexchangeexception
added a null check for the zooKeeper before setting it to null to prevent potential NullPointerException when accessing the ZooKeeper state
updated the progress bar message formatting in Loader . java to improve readability of the log message
replaced direct calls to ` mVibrator . vibrate ( ) ` with ` runOnUiHelperThread ( Runnable ) ` in `
added a call to update the last remote stream ID in HTTP2Session . java to ensure the last remote stream ID is correctly updated during the session
added text anti - aliasing hint to Graphics2D in EditorHeader and EditorToolbar classes to improve text rendering quality for better user experience
[ java ] : improve handling of window size in driver publication .
refactor : remove static import of constant in ctannotationimpl . java ( # 2063 )
refactor ExoPlayer class to improve code structure to enhance maintainability and readability of the code
replaced the method ` getRGBPixelImpl ` with a call to ` getRGBPixels ( Rectangle ) [ 0 ] ` in ` WRobotPeer . java
added a new method ` newPrintStream ` to create a ` PrintStream ` with a specified encoding to allow customizable character encoding for output streams
increased the vibrate from 1 to 25 in TouchableMovementMethod . java to enhance the user experience by providing more intuitive feedback during
fix some findbugs findbugs findbugs findbugs findbugs warning
removed the ' executor ' parameter from the WebSocketClient constructor and added an empty constructor to simplify constructor signature and improve code readability
simonstewart : fix the issue that the i18n test fail on the ci server
refactored error handling in BytecodeParser and SharedGraphBuilderPhase to use loadConstantException instead of BootstrapMethodError to improve error handling consistency
[ zeppelin - 4071 ] restore auth system state after test in xmlworkflowserviceit
added a new ` LowercaseComparator ` class and refactored constructor calls in ` CoNLLUFeatures . java ` to improve comparison logic by
refactor JavadocTool to improve handling of duplicate source files and enhance clarity in warning messages for missing source files
simonstewart : fix a couple of test that fail on ie
added a check for the length of keys in HighestKvno . java to ensure that the number of keys is at least 9 to avoid
added error handling for retrieving attributes in HDF5BatchReader . java to improve robustness by logging a warning if the method fails to retrieve attributes
[ beam - 10717 ] use writeresult instead of pdone for bigquery and bigquery
updated the XmlRootElement name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added additional API parameters in ProcessGroupResource to enhance
added a new file TestMultiANewArray . java to test the behavior of a new array initialization in a Java class file to ensure that the
disable the usesecondarystoragevm configuration option for secondary storage
refactor block ID handling in SyncBlockChainMsgHandler . java to use a local variable for headNum to improve code readability and maintainability
set the theme for the preview tab content in PreviewTabView to ensure the UI reflects the user ' s preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added a test for idle time configuration in ConnectorTimeoutTest . java to ensure proper handling of idle timeouts in HTTP connections
add dcoref . dictlist , dcoref . dictpmi and dcoref . dictionary
renamed the method ` readIdentifier ( ) ` to ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve
removed unnecessary type casting in JpaPagingItemReaderIntegrationTests and updated parameter values in JobLaunchingGatewayParserTests to improve code readability
changed log level from warn to debug for child node found in DistributedQueue . java to reduce log verbosity and improve performance during debugging
refactor color extraction code to utilize a new method for retrieving hotseat palette to improve code maintainability and compatibility with newer Android versions
added setter methods for ` setDefaultDataTableEntryTransformer ` and ` setDefaultDataTableCellTransformer ` in ` TypeRegistry ` and ` TypeRegistry `
removed an assertion check for newAvailableShared in AtomicRemainder . java to ensure that newAvailableShared does not exceed initShared
doc : fix docstring formatting ( # 43 )
removed the ` projectGenerated ` boolean field and its getter method from ` ProjectGenerator ` and updated its value in ` WorkspaceAndProjectGenerator ` to
corrected a typo in the condition for checking the presence of the AUTH _ HEADER in the info to ensure proper validation of the authentication header
added a new route " contactForm " to the ApplicationController and updated the import statements in Routes . java and removed the Ognl import
guacamole - 102 : use objectpermission instead of permission in simpleuser . getpermissions ( )
update RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new release version
[ drools - 4071 ] fix typo in setmode ( ) method signature .
updated method signatures to use ` findWhereNameOrAliasLikeAndActive ` instead of ` findWhereNameLikeAndActive ` across multiple classes to
added IOUtils . closeSafely to close perDocConsumers in DocFieldProcessor . java to ensure proper resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in ExpansionViewHelper to enhance user interaction by allowing menu to be shown directly from the overflow button
updated error messages to use " is a non - null reference " instead of " is not null " in multiple classes to improve clarity and accuracy in
ggb - 224 update the line height of input tree item to improve user interface usability
move protobufferutilitiestest to core . util instead of network . p2p . network
fix issue with splitpane divider position not be set on the main thread
add crossref support to auxsubgenerator to support crossreferences
[ geos - 5131 ] use metadatamap instead of map in geoserverfeaturesource and geoserverfeaturestore
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity by using a more descriptive name
added event handling for updating the meta contact avatar in multiple classes to improve user experience by notifying listeners when the meta contact avatar changes
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . command . Command `
added a new test method ` testCleanUpAuditLogTablePostParametersByPosition ` to ` AuditLogTest . java ` to verify the cleanup
added @ SuppressWarnings ( " unchecked " ) annotation to the ` inject ` method in ` ComponentContext . java ` to ensure type safety and suppress
added regex patterns for handling empty , comment , and end line comments in ACLFileParser . java to improve code readability and maintainability by using
updated imports and method signatures in MapRDBFormatMatcher and MapRDBSubScan classes to include additional parameters to enhance functionality to support dynamic
added support for ancestor dimension values in StarTreeNodeImpl and updated logging statements in StarTreeNodeImpl to enhance dimension name handling and improve logging clarity
added a condition to check if the user is unlocked in TouchInteractionService and modified method calls in BaseQuickstepLauncher to improve user experience by
updated the condition from ` widthStr ` to ` positionStr ` in ` Photo . java ` to ensure the correct validation of the position string is
refactor certificate validation logic in PKIXValidator . java to improve clarity and structure to enhance maintainability and readability of certificate validation logic
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` org . apache . shenyu . integratedtest ` to ` org . apache . shenyu . integrated . test
vpc : do n ' t skip project network if it ' s recursive
[ hotfix ] [ runtimetypeadapterfactoryfunctional ] fix typo in runtimetypeadapterfactoryfunctionaltest
store undo info for property in order to make it easy to see how undo info be store
added a privileged action to retrieve the XR grad cache property using AccessController to enhance security by ensuring the property is accessed within a privileged context
updated StreamCloseTest to use Awaitility for blocking tests to improve test reliability by ensuring streams are fully closed before proceeding
replaced the ` doAfterFlush ( ) ` method with a ` doAfterFlush ( ) ` method across multiple classes to ensure proper initialization of `
added deserialization support for non - deprecated properties in ConfigurationMetadataGenerator and updated for loops in AbstractJpaProperties to improve handling of deprecated properties and
updated capacity and mask variables in BiInt2ObjectMap , Int2ObjectHashMap , and Int2ObjectHashMap classes to use length - 1 instead
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT configuration and refactored rename logic in Hive . java to improve file
improve exception handling in parallelniosender . send ( ) .
added a null check for the context in SchemeAndroidIDE . java to ensure that a valid SchemeAndroidIDE instance is returned when the context
[ gr - 32254 ] native - image - build - server : remove custom system class loader from native - image .
changed the return type of modifyGrantedAuthorities from void to List in SwitchUserAuthorityChanger and added a new test case in SwitchUserProcessingFilter
refactor JaxrsIntegrationTest to extend JaxrsIntegrationTestBase and add new test classes JaxrsIntegrationTestBase and JaxrsSpringMain
add query timeout support for isjdbc41compliant and setquerytimeout to poolutilities .
added XML , SupplementaryCharacters , and SupplementaryCharactersTestData data sources to XslSubstringTest . java to enhance test coverage
updated StaxEventItemWriter to use delegateEventWriter in StaxEventItemWriter and added close method in NoStartEndDocumentStreamWriter to ensure
added support for MariaDB sequences and updated sequence generation logic in CreateSequenceGenerator to improve sequence handling and support for MariaDB databases
[ hotfix ] [ javadocs ] fix typo in log message
added TableDataManagerProvider import and set server metrics in multiple test files to enable monitoring of server metrics for offline operations
added support for both " jsse . enableMFLNExtension " and " jsse . enableMFLExtension " properties in SSLExtension .
replaced ` ObjectIterator < T > ` with ` ObjectHashSetIterator ` and updated iterator initialization in ` ObjectHashSetIterator ` and ` ObjectHashSetInteger
updated character remaining text calculation in multiple classes to correct the length calculation for shortened URLs to ensure accurate character remaining text for improved user experience
added a new constant ` DATAPOINT _ TTL ` and updated related references in ` CassandraDatastore . java ` and ` WriteBuffer . java `
modified the ` ProjectCommand ` class to accept an ` enablePrompt ` parameter and adjusted prompt logic accordingly to allow users to disable the prompt if the
added a method ` getTerrainAtCell ` to the ` TerrainGrid ` class to retrieve tiles at a specified cell in the terrain grid
added default value printing in Pretty . java and created a new class T6665791 . java for annotation processing to improve default value representation and facilitate
added error handling for quest key loading in ResourceLoader . java to provide user feedback when quest keys are not found
modified the condition to check if push support is disabled to ensure that the request is only processed when pushing is not supported
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
removed the sign method from blockCapsule . sign in BlockUtil . java to streamline the process of signing block witness data
modified the method to return the first root in FileSystemView . java and added security checks in Win32ShellFolder2 . java to enhance robustness
updated method names and logic in ColumnText and PdfPRow classes for better clarity to improve code readability and maintainability by using more descript
refactor undo handling in ListFragment to use SparseArray for managing selected notes to improve performance and memory management during note removal operations
uploadbackupdata : fix issue with duplicate id for question and comment
removed null check for ` data ` in ` bug8024061 . java ` to improve error handling by throwing an exception when ` data `
no effective change - remove unused pstmtdelegate
refactor AppWidgetResizeFrame to use Rect instead of Padding for widget padding to simplify padding retrieval and improve code maintainability
refactor methods in NashornBeansLinker to use static lookups and add consStringFilter functionality to improve code readability and maintainability
refactor ClassGraph and ScanResult classes to improve code organization and readability
replaced ` CountDownLatch ` with ` CountDownLatch ` for better clarity to improve code readability and maintainability by using a more descriptive variable name
replaced calls to ` getFailure ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java `
replaced ThreadLocal with a single null assignment for Workbook . currentBook across multiple classes to ensure proper handling of null references to prevent potential NullPointerExceptions
added a method to check if the specified class type is supported in the ContactSecurityVoter class to enhance type support checks and improve error handling for
removed unused imports from DataLoader . java to clean up the code and improve readability
do n ' t print the affected row in the update message if there be an error .
ggb - 2275 set margin left and margintop for scaler , not just scaler .
set foregroundFPS and backgroundFPS to 60 and set it to 60 to ensure consistent frame rate across the application
added ObjectReleaseTracker tracking and release methods in HdfsTransactionLog and TransactionLog classes to improve transaction logging reliability by tracking and releasing object releases
replaced DefaultWebSocketFrame with ChannelFutureListener in DefaultHttpServer . java to streamline WebSocket connection handling
updated StateMachineErrorTests to use TestApplicationEventListener2 instead of TestApplicationEventListener1 and TestApplicationEventListener2 to improve error handling for state machine
replaced direct intent handling with a method to set the background color for the list to improve code readability and maintainability by centralizing background setting logic
updated imports in RMEThingHandler . java to use openhab . core . util . StringUtils and added null check for line to ensure proper
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count based on a weight based on
hbase - 16265 addendum fix typo in hbase - put javadoc
refactor RegExpFactory to use a Map instead of a Set for caching patterns to improve performance and memory efficiency by reusing RegExp instances
added a reset method to the GameThread class to provide a way to reset the game thread state
added a login method to the DigestAuthenticator class to check if the login service matches the login service ' s realm to ensure proper authentication handling based on
refactor parameter handling in SavedRequestAwareWrapper to improve parameter merging to enhance efficiency and maintainability of parameter management
updated logging messages in BasicConfigurator and added a toString method in LoggerContext to improve clarity of log messages and enhance logging output for better debugging
replaced ` waitPoint . countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog . java ` and ` HAService .
added a check for Android O in PhotoViewerActivity and modified AutoCompletePeopleAdapter in UserAutoCompleteHelper to ensure compatibility with devices running Android
updated SchemaInfoLevel from minimum ( ) to basic ( ) in SchemaCrawlerTest . java to ensure the schema info is displayed at the basic level
use bufferedoutputstream in savetask . writeendelement ( ) instead of writeendelement ( )
replaced ` bytesToString ` method with ` utf8ToString ` and updated assertions in ` TestPayloads . java ` to improve character encoding handling and
fix mc - 103516 ( fix mc - 103516 )
added Tomcat container adapters to the list in ProbeConfig . java to support additional Tomcat container adapters in the configuration
[ drools - 1032 ] add test for multi accumulate ( ) method in marshaller ( # 3357 )
refactor case statements in NowSearchTerm . java and SearchTermBuilder . java for consistency to improve code readability and maintainability
pdfbox - 4071 : remove the public modifier , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method and headers in RemoteEndpointServiceAccessStrategy . java to improve flexibility
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to provide a custom implementation of the ` newResponseBuilder ` method
added notification for command start in AsyncBackgroundTaskManagerTest to notify the manager when a command is initiated
refactor the ` recomputePreviewDrawingParams ` method in ` FolderIcon ` and ` PreviewItemManager ` to use a null reference drawable
refactor tokenizer and filter handling to use CharFilterFactory instead of TokenFilterChain to improve code clarity and maintainability by consolidating tokenizer and
replaced ` IllegalArgumentException ` with ` ParamChecks . nullNotPermitted ` for null checks in ` AbstractCategoryItemRenderer . java ` to improve
added verbosity support to the JavacStep class and modified the createSubContext method to accept an Optional < Verbosity > parameter to enhance verbosity
added schema handling for oracle database type in DbSqlSession . java to ensure consistent schema formatting for Oracle databases
[ log4j2 - 1342 ] log4j2 - 1343 add log4j2context . getcontext ( false ) .
added a new file TestShrinkToOneRegion . java that implements a main method for garbage collection to facilitate testing of shrink - to - one operations
replaced string splitting with Splitter for splitting custom packages to improve code readability and maintainability
updated context handling in AnalyzingInfixSuggester and added a new test method in AnalyzingInfixSuggesterTest to improve code
update pushsafermessagebuilder to use image / image / instead of image /
remove the showlabelstats ( ) command from stripprovenance and modelexplorance
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
removed the ' final static ' modifier from multiple test classes to simplify the code for better readability and maintainability
updated UDFRound . java to use BigDecimal and RoundingMode for rounding to improve precision in evaluation of numeric values and ensure proper rounding behavior
refactor injection and useIncludedLibrary retrieval to use ConfigParser ' s valueAsOrElse method to improve code readability and maintainability
changed class declarations from package - private to public in Test1 and Test2 classes to allow access to these classes from other packages
replace String . valueOf ( permission ) with String ( plot ) in TranslatableCaption . java and update plot handling in PlayerEventListener . java to
updated the ` getAdditional ` method to accept a session parameter and added a new ` getAdditional ` method in ` ConditionInConstantSet ` to
updated test cases to use ` NumericDocValuesField ` instead of ` LongProducer ` and ` LongProducer ` for consistency to ensure tests accurately reflect
added random box and circle transformations for box and circle creation in Box2DCharacterControllerTest . java to test dynamic box and circle transformations
added tests for memory size and numglobalbuffers options in TestBadOptionValues . java and modified test cases in TestMemoryOptions . java to
removed redundant assertions in ObjectAlignment . java and Options . java to improve code clarity and maintainability
added getTargetPackage ( ) method to AbstractAndroidInstrumentationTestJVMArgs , AbstractAndroidManifestReader , and DefaultAndroidManifestReader classes to support target
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the initialization of ` acceptableThrowawayItems ` to use ` ArrayList < > ` instead of ` List < Item > ` to ensure that the
refactor invokeexact method calls in Test6987555 . java for type safety to improve code readability and maintainability
reformatted code for improved readability in MessageHandler . java to enhance code clarity and maintainability
refactor Inflection class to improve code structure to enhance maintainability and readability of the code
simonstewart : add getlocale ( ) and setlocale ( ) method to evaluationcontext
removed unused import of ` Plugin ` in ` SummaryPrinter . java ` to clean up the code and improve readability
added a break statement in DrawerActivity . java to ensure proper flow control in the switch statement
updated import statements and modified debug log message formatting in MongoQueryCreator . java to enhance code readability and improve logging clarity
ww - 4100 allow to configure logger factory in xwork . loggerfactory and xwork . loggerfactory
renamed test methods in AdminAddPeerWithP2PDisabledAcceptanceTest and updated their names in AdminAddPeerWithP2PDisabledAcceptanceTest
ambari - 23939 . add bean to auto - configuration for availability state health indicator ( alejandro )
added a ConcurrentMap for local pstores and modified the return logic in LocalPStoreProvider . java to ensure thread - safe access to the local
refactor the ` deleteFiles ` method to be private in ` TestUtility . java ` to improve encapsulation and maintainability of the
refactor ServiceLoaderSpliterator to use ServiceProvider instead of Provider for service management to improve clarity and consistency in service provider handling
add try - catch block around javainteropreflect . findfield ( ) and setfield ( )
added logic to check if a toolchain is already created between ToolchainProvider and DefaultToolchainProvider classes to ensure that toolchains are correctly
do n ' t add context to engine if it ' s already add to the engine
updated string comparison from ` indexOf ` to ` contains ` in ` AbstractCheckDescriptor . java ` to improve code readability and maintainability by using
updated ` PrebuiltCxxLibraryBuilder ` to use ` exportedLinkerFlags ` instead of ` setLinkerFlags ` across multiple classes to
replaced internal method ` onConfigurationChangedInternal ( ) ` with ` updateRecentsRotation ( ) ` in ` AbsSwipeUpHandler . java `
updated generic type checks in multiple Java files to improve type safety and eliminate potential NullPointerExceptions
updated the method call in AbstractBlockChain to include the header ' s hash string to ensure the correct hash is used for the new block ' s
[ java ] use getstorepathcommitlog ( ) instead of getstorepathcommitlog ( ) .
remove unnecessary try - with - resources statement in MicrometerMetricManager . java to improve code readability and maintainability
( chore ) camel - http : / / issues . apache . org / activemq / browse / amq - 2835 - compaction
phoenix - 4893 - deprecate jpasubquery and jpacommonquery ( addendum )
added methods to check for system UI objects in AbstractLauncherUiTest . java to enable testing of status view functionality in the launcher
changed static modifier of logger and principals and sessionIds from static to final in SessionRegistryImpl . java to enforce immutability of logger and
added checks for empty cookieJar and removeAll method in InMemoryCookieStore and NullUriCookieTest to ensure that removeAll functionality behaves correctly when the store
added debug logging for BonsaiValue instances and improved null checks in BonsaiWorldStateUpdater and BonsaiWorldStateUpdater to enhance
updated method signatures in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to accept a CharSequence parameter instead of a String parameter
added a @ NotYetImplemented annotation to the AlertsTest class to mark the test as not yet implemented for a specific bug
added a try - finally block to handle IOException during connection return to ensure proper resource management and prevent connection leaks
rename ` CMD _ ESCAPER ` and ` CREATE _ PROCESS _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPE
added synchronization to the heartbeat executor service in DbTxnManager . java to ensure thread safety during concurrent access to the heartbeat executor
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored the submit logic in ` CachingBuild
added a method ` updateFirstLineShowing ( ) ` to handle text selection out of the TextArea ' s bounds to ensure that the first line
added file paths for temporary and staging directories in TestInformationSchemaWithPrivilege . java and updated configurations in TestInformationSchemaWithPrivilege . java to
refactor graphics configuration retrieval logic in Component . java to improve readability and maintainability of the code
[ tika - 4036 ] fix oom in test case in legacy mode .
refactor pipeline . doprocess ( ) to avoid duplicate code
refactor PrintTagList to accept a model file and improve tag handling to enhance flexibility in parsing tags by allowing users to specify a model file and
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test for SQL
added EOFException handling and improved message draining assertions in JournalCorruptionEofIndexRecoveryTest . java to enhance error handling and ensure proper message
[ hotfix ] [ test ] fix startfromtruncatedrecordinglogtest in startfromtruncatedrecordinglogtest
updated the calculation of the outer rectangle in LineBorder . java to use a factor of 2 instead of a fixed size to improve the accuracy of the
added null and empty check for galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to ensure that galleryImages is not empty before proceeding with
updated the deployment ID generation logic in StandardChangeLogHistoryService . java and created a new column in CreateDatabaseChangeLogTableGenerator . java to
pdfbox - 2576 : rename fdf and setfield to interactive . form
removed the ` moreColumnOk ` parameter from ` canUseIndex ` and related methods in ` AlterTableAddConstraint . java ` to simplify method
added a provisional engine map and updated its retrieval logic in QuickfixjComponent . java to improve management and retrieval of provisional engines in the application
added support for display zoom controls in RoboWebSettings . java to enhance functionality to control the display of zoom controls in the application
add corporea corporea block and add corporea corporea spark block
refactor ConnectionFactory to improve code structure to enhance maintainability and readability of the code
added a method ` EnableDisableMenuItems ( ) ` to disable menu items in ` GpsMainActivity . java ` to enhance user experience by
updated the message for empty lists in ExtendedListFragment to use filter list instead of headline server search to enhance user experience by providing a more relevant message
removed the ` @ ServiceRegistry . Setting ` annotation from the ` @ Setting ` annotation in ` EntityTests . java ` to streamline the configuration
added auto - resize mode and auto - create columns from the model in MotorMountConfigurationPanel . java and updated constructor in MotorConfigurationPanel . java
replace system . lineSeparator ( ) with system . getProperty ( " line . separator " ) for LINE _ SEPARATOR to improve compatibility with different
added getter and setter methods for creator , subject , and subject properties in POIXMLProperties . java and updated TestPOIXMLProperties . java
updated the method call from ` super . doStop ( ) ` to ` super . doStop ( ) ` in ` HandlerWrapper . java `
[ java ] do n ' t try to read empty cnc file if it do n ' t exist
rename the ` NonMarkedFoo ` interface to ` FooCommand ` and update related references accordingly to improve clarity and consistency in naming conventions related
added methods to determine and de - class file paths based on the presence of JMod files in the file system to improve compatibility with Java ' s
updated ` TreeBackedElement ` to replace ` canonicalizer ` with ` @ Nullable ` and modified constructor parameters in multiple classes to improve null safety
refactor token request initialization in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest instead of ClientId to
updated the method call from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure the correct
added synchronization methods in ZKAssign , ZooKeeperWatcher , and modified ZooKeeperWatcher to accept a path parameter to improve synchronization functionality for nodes and
added checkEglException calls for the current context in GlUtil . java to ensure proper error handling when the current context is not set
[ drools - 102 ] fix flow group activation when flow group be deactivate .
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the method execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added a failure assertion in IoTDBPipeIT . java to ensure proper
add cleanup to clientqueuedisruptiontest . init ( ) and clientqueuedisruptiontest . cleanup ( )
refactor : use defaultjavaprettyprinter in ctreferenceimpl . getsignature ( )
changed the visibility of the validateInstance method from public to protected to restrict access to the validateInstance method for better encapsulation
lucene - 6930 : Decorate GeoPointField and TermEnum from NumericType in GeoPointInPolygonQuery and GeoPointTokenStream classes to
added a new class FakeBuildable and updated OnDiskBuildInfoTest to use it to facilitate testing by providing a mock implementation of the Buildable
fix a nullpointerexception cause by itemstack . isempty ( )
renamed ` stream _ path ` and ` stream _ timeseries ` to ` stream _ timeseries ` in ` TSParser . java ` to
added a check for non - negative velocity in TubeCalc . java to ensure that the velocity is always non - negative to avoid potential errors
replaced calls to ` get ( gcsUri ) . create ( ) ` with ` _ storage . list ( ) ` in ` GcsPin
removed redundant calls to blockCloseVertxByName ( " transport " ) in TestHighwayTransport . java to ensure proper resource management and avoid potential
add support for create and replace history view in trigger based history
updated the test parameter from 2 to 3 in CarrotClusteringEngineTest . java to correct the test case for the clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored due to rewriting issues
added a new class ` ParserStateObjectInputStream ` and modified ` try - with - resources ` in ` ParserCacheCommand . java ` , and
added null checks for object quoting strategy in ChangeSet . java and updated DatabaseChangeLog . java to ensure proper initialization of object quoting strategy based on
updated MetainfoParser instantiation to use ` fromXmlStream ` instead of ` parse ` in ` SliderAppsViewControllerImpl . java ` to
deleted the CsrfControllerAdvice . java file to the CsrfControllerAdvice class was deemed unnecessary for the current implementation
added a method to quote path lists in AntCompiler . java to ensure proper handling of path separators in endorsed arguments
added scrim animation functionality in Launcher and updated drawable alpha handling in LauncherAnimUtils to enhance user experience by providing visual feedback during background transition
updated parsing logic in TypeInferenceUtils and added new test cases in TypeInferenceUtilsTest to improve accuracy in parsing long values and enhance test coverage for
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
added support for long path prefixes in WindowsPathParser and PathOps classes to ensure long path prefixes are only used with absolute and UNC paths to
refactor MulticastSocket initialization to use default port instead of hardcoded values to simplify resource management and improve code readability
removed redundant code in TestWildcard . java to ensure proper resource management and avoid potential resource leaks
modify return statement to clone the nBits array to ensure that the original nBits array is not modified externally
changed the visibility of the deriveCollectorName method from private to protected in ProfilerCollector . java and added a test for custom names in TestProfiler
datamongo - 2043 - omit type hint when write simple type
added performance measurement for creating a proxy factory in ProxyMaker . java to improve monitoring of proxy factory creation performance
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
added exception handling for connection exceptions in TCPConnection . java to improve error reporting by providing more context about connection issues
refactor the reinflateWidgetsIfNecessary method to use the Workspace class for widget management to improve code organization and maintainability by centralizing widget
added a new file ` DeleteInsideFileDialogTest . java ` to test the functionality of file deletion in a dialog to ensure that the right click
make sure display . processmessages ( ) be call only if renderable be true .
add test for update student profile picture in instructorstudentlistpageuitest
added methods and methods handling in TestIgnorance . java to manage test execution based on the " onlyrun " and " method " system
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature for better usability
added null check for pageable in QueryDslJpaRepository and a corresponding test in QueryDslJpaRepositoryTests to improve robustness
[ hotfix ] [ runtime ] add memorymanager . computememorysize ( fraction ) method with validation
camel - 15836 - camel - aws2 - jms : increase test timeout for camel - jms
refactor SnowballAnalyzer class to improve performance to enhance performance and accuracy of snowball analysis
updated index handling in StreamingAggTemplate . java to reset previousIndex to - 1 to improve clarity and efficiency of index management
refactor BytecodeParser to use a new method ` pluginErrorMessage ` for better error handling to improve code readability and maintainability by centralizing
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to provide a default
updated logging messages and added a retry mechanism for file renaming in MediaMonitor . java to improve clarity of log messages and enhance error handling during
refactor ` setAccessable ` method to ` newInstance ` in ` InjectorProxy ` , ` ReflectionUtil ` , and ` StandardInjectorTest
[ hotfix ] [ stream ] remove unnecessary close ( ) call from streamingcreatefunction
added unit tests for ` ShowStatementTest ` , ` CreateTableTest ` , ` CreateTableTest ` , and ` CreateTableTest ` to
return an empty list instead of null in AppleTest . java to ensure that an empty list is returned instead of null
updated the test message format in NamedSetTest . java to include Quality Distribution , Inc . to improve clarity and accuracy of test results
added a check for websocket reconnect and refactored connection state management in WebSocketConnection to improve connection handling and clarify connection state management
replaced setAttribute calls with removeAttribute calls for ACEGI _ SECURITY _ AUTHENTICATION _ KEY and ACEGI _ SECURITY _
hbase - 25836 testregionreplicareplicationendpoint . testregionreplicareplicaendpoint . testregionreplicareplicationendpoint . testregionreplicareplica
added PMS configuration initialization in FormatRecognitionTest . java to ensure proper initialization of the PMS configuration
cloudstack - 8137 : enable ova data disk template creation in templateservice and objectindatastoremanagerimpl
replaced CasCoreServicesConfiguration with JUnit4 in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to ensure compatibility with JUnit4 testing framework
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated SQL statements in AppendOnlySchemaIT . java to include additional parameters for metricVal1 and hostName to enhance functionality by allowing multiple values for
added a check for deleted documents in SegmentReader . java to throw a CorruptIndexException for document count mismatches to ensure data integrity by preventing
added a method to log exceptions in the SipLogger class and a method to log trace information to improve logging functionality and provide better context for debugging
updated the length calculation in FilamentFactory . java to include a comment to clarify the need for shorter staves w / no starting barline
set handleFileUploads to true in VertxPlatformHttpServerConfiguration . java and set it in VertxPlatformHttpEngineTest . java to
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests . java
refactor code to use a single instance of ` Fields ` for better readability to improve code clarity and maintainability by reducing redundancy
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in spell - checking functionality
replace Instant . now ( ) with Instant . now ( ) with Instant . now ( ) for better readability to improve code clarity and maintainability
fix the cte statement to not be reassigned in the copy ( ) method .
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData for improved query metadata handling
updated the library command in JsLibrary . java to include the project ' s root path to ensure the project ' s root directory is correctly referenced
updated the slider range from - 180 to - Math . PI in RailButtonConfig . java to correct the slider ' s range to ensure the slider
updated the position of drawEncloser and modified timer usage in Saves . java to improve visual alignment and enhance error handling during save operations
added expression language support to KerberosProperties . java to enable expression language functionality in the Kerberos properties
removed unnecessary null checks for remoteMountPointComponent in ThirdPersonRemoteClientSystem . java to simplify code and improve readability by eliminating unnecessary checks
updated setupViews method to include ScrimView in multiple classes to enhance animation behavior to improve visual effects during app state transitions
[ flink - 25835 ] [ state backend ] enable periodic materialization in changelog state backend changelog
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 490 .
added a new test method ` testChunkingWithHead ` to ` TestHttpServlet ` to verify the behavior of the ` ChunkingServlet `
[ java ] add checkrouteranswer . isbumped = true to checkrouteranswer .
added a Content - Type header in SwitchToPostInterceptor and updated SearchRequestUnitTest to set the Content - Type header in SearchRequestUnitTest to ensure
refactor EmbeddedClientConnector class to improve code structure to enhance maintainability and readability of the code
added logging for SQLFeatureNotSupportedException and modified exception handling in PhoenixResultSet . java to improve error handling and provide clearer logging for unsupported features
added AndroidNet initialization in AndroidDaydream . java to ensure proper initialization of the network object
[ bugfix ] remove unused parameter in log message
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify method calls by
hbase - 26175 remove hbase - prefix - tree codec from tablemapreduceutil
added a flag to handle back navigation in DesignerActivity and modified the root variable in XMLLayoutInflater to improve user experience by preventing unintended back navigation
refactor PushbackInputStream class for improved readability to enhance maintainability and readability of the code
make the loweringtool abstract , so that it can be use by the controlflow graph .
updated error message from ` download _ folder _ failed _ content ` to ` sync _ folder _ failed _ content ` in ` ErrorMessageAdapter .
updated scanners to use string literals instead of string literals and added a new NORMAL _ CHAR constant in Makefiles . java to improve
replaced the usage of ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( ) ` in ` ReadTask .
updated the refresh logic in SimpleBatchNode . java to include the RF _ TRANSFORM flag and added a bound refresh method to ensure proper refresh
use method . isuninterruptible ( ) instead of method . isguaranteedsafepoint ( ) .
added a callback to handle framebuffer size changes in the LwjglWindow class to improve handling of window size changes for better resource management
updated the translation logic in the LauncherAppTransitionManagerImpl class to use off - screen animations instead of the right - to - left translation to
changed the types of ` NodeLiteralNode ` from ` NodeLiteralNode ` to ` NullLiteralNode ` in ` LiteralNode . java ` to
added a method to set the file length in CompoundFileWriter and implemented it in FSDirectory and IndexOutput classes to ensure that the file length is correctly
updated the ` AntScriptGenerator ` and ` AntScriptGenerator ` classes to include a new ` memcpy _ wrap . c `
camel - 16171 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource
added permission handling for role " * " in authorization plugins and updated test cases in TestRuleBasedAuthorizationPlugin to improve authorization logic and enhance test coverage
refactor ZookeeperClientServerRegisterRepository to improve null checks and data handling to enhance code clarity and maintainability while addressing potential null pointer exceptions
refactor methods in ReturnsDeepStubs to improve clarity and functionality to enhance code readability and maintainability by using a more descriptive method
added a check for empty call value size in Runtime . java to ensure that an empty call value is returned to avoid potential null pointer exceptions when the
updated debug log message format in BibEntry . java to improve readability of date parsing error messages
updated mappings of cryptographic algorithms and modified the exception handling for key factories to ensure compatibility with updated standards and improve test
tiffreader : do n ' t throw an exception if the tiff value offset be too large .
added validation for job parameters in CommandLineJobRunner and a corresponding test in CommandLineJobRunnerTests to ensure that invalid input is provided and improve error handling
updated string comparison in SmtpTests and MailTests to use ` foo ` instead of ` \ r \ n ` to ensure consistency in string formatting
updated case statements to use lambda expressions in ExtendedConnectionDataSourceProxy . java to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater instead of synchronized methods for lastSequenceId and update lastSequenceId to improve performance by reducing contention on
added a new file Test . java with a static method ` sum ( ) ` and a main ( main ) method to calculate and print the sum
updated minSdk and maxSdk configurations in ShadowWifiManagerTest . java and changed access modifiers in WifiUsabilityStatsEntryBuilder .
added a new Java file ` Solution . java ` that implements a algorithm for sorting queries based on a specified number of queries to provide a solution for
patch by jbellis ; review by gdusbabek for cassandra - 141
refactor taskbar creation logic to use a boolean variable for orientation changes to improve readability and maintainability of the code
refactor SyncFutureCache class to improve cache management to enhance performance and reduce memory usage
update DUBBO protocol version from " 2.1 . 1 " to " 2.1 . 2 " and update LOWEST _ VERSION _ FOR _
pmd : fix uselessstringvalueof to check if a literal be not a string literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the functionality of el
added a default value for target max type shard size in the HollowProducer constructor and refactored related methods to allow configurable target max type shard size
added support for versions " 5.0 . 2 - cfs " and " 5.0 . 2 - nocfs " in TestBackwardsCompatibility
refactor CompilationTask class to improve code readability to enhance maintainability and facilitate future updates
updated assertions in TestSemanticAnalysis . java and modified database parameter handling in DDLTask . java to improve clarity in test mode and ensure correct database
added a call to ` ExecutorService . getInstance ( ) . execute ( new ClearDatabaseChangeLogTableStatement ) ` in ` AbstractJdbcDatabase . java
added version handling and improved path comparison logic in RestClient and CallPath classes to enhance version management and ensure accurate comparison of call paths
phoenix - 1076 make sure that the phoenix jdbc driver be close .
make sure we do n ' t get a nullpointerexception if the method be not support .
added ` @ ScreenshotTest ` to ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT
[ gr - 32233 ] fix convert deoptimization in dev mode .
added a check for length in StringHelper . java and a new test method in StringHelperTest . java to ensure that leading and ending quotes are
refactor type handling in JpaQueryCreator and add a method for NOT _ CONTAINING in UserRepository to improve code readability and
patch by jbellis ; review by brandonwilliams for cassandra - 151
added a call to dispatch a message in P25MessageFramer . java to ensure proper handling of message processing
added null checks for the handler in WebSocketImpl . java and created a test for clearing client handlers in WebSocketTest . java to ensure proper handling of
[ task ] refactored indexeventconsumer and indexeventconsumer to use type instead of string
updated widget padding retrieval to use default prefixes instead of resource references to improve clarity and maintainability of widget padding logic
added a ` hide ` method to ` LauncherTaskbarUIController ` and modified ` closeOverlay ` method in ` BaseActivityInterface ` to
removed synchronization from the launch method in CrawlJob . java to simplify the method signature and improve thread management
updated the calculation of ` Point ` in ` JavaSEPort . java ` to correctly calculate the point based on the canvas ' s x and y
replaced ` notificationManager . notify ` with ` startForeground ` in ` UploadService . java ` to improve code readability and maintainability by using
pmd : add a new test for static final class and add a test for static final class
hbase - 26486 set hbase . client . retries . number to 3 to prevent test failure on slow machine
change log level to debug : ` ` half offset { } have be committed / rolled back '
added exception handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve error handling
added a new ` BittrexTickersResponse ` class and integrated it into ` BittrexTickersResponse ` and ` Bittrex
refactored the retrieval of enum constants in EntityEntry . java to improve type safety and clarity to enhance code readability and maintainability by using
do n ' t use endpoint . getClass ( ) for register / unregistration of wssession .
updated character list initialization in FileUtils . java to include additional characters to ensure proper handling of Unicode characters in the character list
added stylesheet management functionality to ResourceService and updated related classes to utilize it to improve flexibility in stylesheet management within the application
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before processing new data
replaced ` ObjectParameterStrategy . class ` with ` PointerParameterStrategy . class ` in ` X86MethodGenerator . java ` to ensure the correct
updated the condition in CreateSequenceGenerator to check for CockroachDatabase instead of PostgresDatabase to ensure compatibility with CockroachDatabase
removed the isEnum check from the name comparison in ObjectStreamClass . java to simplify the condition for better readability and maintainability
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` and added a new class ` SymbolNotFoundError ` to improve error handling by providing a more
added conditional logic to create SolrDocument based on fnames and returnFields in BinaryResponseWriter . java to ensure that only pseudo fields are processed when
added handling for PING and PONG cases in WebSocketImplBase . java and implemented a test for WebSocket pauseping functionality in WebSocketTest . java
updated the NON _ IDENT _ ESCAPES string from " . ? " to " . ? - " in RegExpScanner . java to
refactor DnsResolverProvider to utilize DefaultDnsCache and add a new test for rotational server selection with cache option to improve code clarity and
added a conditional annotation for MessagingTracing class in TraceMessagingAutoConfiguration . java to ensure that MessagingTracing is only activated when the class is not already
mondrian : remove unnecessary check for db2 in sqlquery . quoteidentifier ( )
updated imports in IDELanguageClientImpl , IDEEditor , EditorTextActionMode , EditorTextActionWindow , and IDEEditor classes
added handling for XMLLightweightParser ' s VERIFY _ CLOSE _ TAG condition in XMLLightweightParser . java to ensure proper parsing of XML
removed the setVisibility ( GONE ) method from TouchCharInput . java to streamline the code by eliminating unnecessary visibility settings
added null check for the current user before comparing IDs to prevent potential NullPointerException when accessing the current user ' s ID
refactor JSObjectSlot and setSlot methods in JSObjectLinker for better handling of JSObject members to improve code clarity and maintainability by
updated DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator classes to improve flexibility in generating random string generators and enhance suffix handling
added @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should not be used in new code
mark multiple @ Deprecated annotations as deprecated in multiple Java files to indicate that these classes are no longer recommended for use
deleted the JoglDebugAdaptor . java file to the functionality is no longer needed in the project
added ` toString ` methods to ` ExtraFieldPropagation ` and corresponding tests in ` AWSPropagation ` to improve the string representation of ` ExtraFieldPropagation
added an import statement for PendingIntent in FileDownloader and FileUploader classes to ensure the PendingIntent is updated when the content intent is created
refactor the ` nextOrd ` method in ` Lucene80DocValuesProducer ` to use a dedicated ` set ( ) ` method to improve
refactor DateTimeFormatter class for improved readability to enhance maintainability and ease of understanding for future developers
removed unnecessary class loading for desktop properties in WToolkit . java to simplify the code and improve readability by eliminating unnecessary try - catch block
added validation for null , null , and empty principals in the setAdministratorCredentials method to ensure that a valid principal or keytab is provided to
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and adjusted the width used based on the device
[ fix ] pgl . render ( ) do n ' t render to the window color .
refactor Hashing class implementation to improve performance and maintainability of the hashing algorithm
updated the accept method in FileSenderFactory to use folderPath and fileFileName instead of a file to improve file sending logic by ensuring both file and
updated drawable resources and added string resources for user info items in UserInfoActivity . java to enhance clarity and usability of user info display
removed null check for the newType variable in J . java to streamline code by eliminating unnecessary null checks
increased ACTIVITY _ START _ DELAY from 500ms to 800ms in Launcher . java to improve user experience by allowing more time for activity
added a static variable ` WEBAPP _ HOME ` and updated its usage in ` JettyWebappTest . java ` to improve code
modified the diameter assignment logic in ThrustCurveMotorSelectionPanel . java to clear the selection state to improve code clarity and ensure the selected motor
added import for BufferUtil and used it in ByteBufferPool . java to clear the buffer before processing new data
fix ' device create ' notification when create alarm use rest api
updated configuration keys from " authorization . ldap . groupBase " to " authentication . ldap . groupObjectClass " and " authorization . ldap . group
[ java ] delete exchange and queue delete in durableontransient .
[ hotfix ] [ runtime ] fix bulkslotproviderimpltest . testbulkslotallocationfulfilledwithnewslots
refactor connection future handling in ServerInfoService to improve error handling for server connection failures
refactor CompositeHandlerAdapter class to improve code organization to enhance maintainability and readability of the code
refactor Quartz2Adapter to improve code structure to enhance maintainability and readability of the code
added error handling for IllegalStateException in the execute method in SulongLibrary . java to improve robustness by preventing application crashes due to IllegalStateException
updated schema version in ` SecurityNamespaceHandler . java ` and modified schema location in ` XsdDocumentedTests . java ` to reflect the
renamed ` newNameResolver ` to ` newNameResolver ` and updated ` newNameResolver ` to use ` Args ` instead of ` Helper `
updated annotation handling in JavacParser and added a new method for earlier position checking to ensure correct positioning of annotations and improve test coverage for non
added " com . sun . naming . internal . " package to CheckPackageAccess . java to enhance package access checks for internal packages
changed the ` strict ` variable from ` false ` to ` true ` in ` StaxEventItemReader . java ` to enable stricter validation
added an ` isExhausted ` flag to ` OfflineSorter ` and modified the ` readPartition ` method to handle it to improve performance
refactor ActionResetingPool class implementation to improve performance and maintainability of the code
added a null check for ` getXY ( ) ` before converting ` lightState ` to ` fromHSBType ( lightState ) ` to
refactor folder creation logic to use target cells instead of child views to improve folder creation logic and enhance folder reordering functionality
added a call to ` FileDisplayActivity ` in ` FileOperationsHelper . java ` and removed the ` activity . showLoadingDialog ( ) `
added null check for uigestureFile before initializing xmlLogs to avoid potential NullPointerExceptions during file loading
updated methods in FieldNamingPolicyTest to use Locale . getDefault ( ) for case - insensitivity to ensure consistent behavior across different locales
added listeners to the result object in XmlSuite . java to ensure the result has the correct listener configuration
added a new function ` loadWithNewGlobal ` for loading global variables in ` Global . java ` to enhance global context management by allowing dynamic loading
added JSON conversion methods to the ` StarTreeIndexSpec ` class and updated tests in ` TableConfigTest ` to improve data handling and ensure correct
added ObjectPostProcessorConfiguration import in HttpSecurity , HeadersConfigurer , and OAuth2Configurer classes to enable post - processing configuration for improved security configurations
updated string replacement methods to use single quotes instead of hardcoded strings to ensure consistent handling of backslashes in file paths
[ jbrules - 2423 ] fix npe when call equals ( ) on null parent ( # 2429 )
added commit ( ) and purgeFieldCache ( FieldCache . DEFAULT ) method to ensure there ' s only one segment and prevent FC insan
added unit test for message boundary event in multi - instance process
do n ' t resolve static method in pointeranalysisimpl . resolveinterfaceorvirtualcall ( ) .
http : / / issues . apache . org / jira / browse / amq - 5036 - add messagegrouphashbucketbucketcount to
refactor slot handling in Secmod to use constants instead of boolean parameters to improve code readability and maintainability by using named constants instead of
added alignment support and modified dialog group addition methods in Layout . java and GdxRenderer . java to enhance widget layout flexibility and improve mouse button functionality
[ hotfix ] [ test ] disable unalignedcheckpointitcase for now
added imports for JDK13Services and modified import statements in JDK13Services . java to ensure only relevant classes are processed to
added a condition to check if a keyword has already been seen before adding it to keywordToReference to improve efficiency by avoiding redundant keyword lookups when
added a check for the type of ` pairs ` in ` MulticastProcessor . java ` to ensure that the size is set correctly based on the
added a method to retrieve the size of the token list in the SegToken class and modified the findInTable method in WordDictionary to improve
[ micrometer ] escape telegrafs in metric name ( # 644 )
[ java ] add udp port support for member serialization .
rename OperatorMulticast class to OperationMulticast and update references accordingly to improve clarity and consistency in naming conventions
increased the timeout duration for sending messages in EventBusTracerTestBase to improve test reliability by allowing more time for messages to be sent
added a try - finally block around the latch in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
added a destroy method to the SessionFactoryServiceRegistryImpl class to ensure proper cleanup of cachedEventListenerRegistry to prevent memory leaks
[ java ] use local storage instead of home page .
[ pytorch ] fix ivalueutilstest . testtuplesyntax and testmapoftensor
added a listener for clearing task visibility in the RecentsView class to improve task visibility handling during animations
pdfbox - 2576 : improve test coverage of defaultsplitcharacterprofiler and checkdatepattern
camel - 14263 : camel - cxf should initialize the factory bean if it ' s null
refactor animation handling code into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added logging functionality and improved play time calculation in LauncherAnimationRunner . java to enhance debugging capabilities and ensure correct playback time is set based on device
added a check for BailoutOnException in C1XCompilation . java and modified the return statement in CiBailout . java to
removed default values for signup and passwd in Links . java and replaced them with null assertions in IdentityZoneConfigurationBootstrapTests . java to
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reservedallocations
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` format ` in ` TimeConverter . java ` to improve clarity and maintain
add gc _ nodata property to tiff reader and add test
llvm : handle null source section to avoid npe
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java ` and ` Default
updated the connection state listener handling in TestPathChildrenCache . java to ensure proper synchronization during connection state transitions
refactor ArrayTypeHandler to improve null handling for null arrays to enhance code readability and prevent potential NullPointerExceptions
refactor the ` RegexpTunnel ` class to use reflection for retrieving the prefix from ` REProgram ` to improve flexibility by allowing dynamic access to
updated application selection method to use Application class instead of null to ensure compatibility with the expected application type in the configuration
[ rhdm - 1186 ] fix npe on mutable global message in misc2test
updated AssetIssueActuator to use TransactionUtil for validating asset names , URLs , and descriptions in AssetIssueActuator to
fix copypaste for textfield that do n ' t contain a textfield
[ LGWebOS ] updated action description and property references in LGWebOSActions . java and LGWebOSUpnpHandler . java to improve
replaced setSeedNodes with setActiveNodes and getPassiveNodes methods in TronNetService . java to ensure all active and trust nodes are
added debugging information to assertions in BaseTokenStreamTestCase . java and modified thread management in BaseTokenStreamTestCase . java to improve debugging capabilities and ensure
log4j2 - 1343 fixed bug in calendar . add ( ) and cal . add ( ) .
refactor ` findItemContainingText ` methods in ` ShadowAdapterView ` , ` findItemContainingText ` , and ` clickFirstItemContaining
pdfbox - 4892 : fix typo , a suggest by valerybokov
graphdecoder : do n ' t return false if loopscope be null .
refactor HttpSessionDestroyedEvent to use ` getSession ( ) ` instead of ` getSource ( ) ` for retrieving ` SecurityContext ` to improve clarity and
added a test method to change the service name in ZipkinSpanReporterTest to ensure that the service name is correctly set to the manually provided one
added logging statements and modified spool mode handling in JavaInMemoryFileManager , JavacToJarStepFactory , and JavacToJarStep
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and reflect the purpose of the
increased the timeout duration from 4 seconds to 10 seconds in the tryLock method from 4 seconds to 10 seconds to allow more time for the lock to
updated the ` of ` method signatures in ` ConfluentSchemaRegistryDeserializerProvider ` to include a new ` schemaRegistryConfigs ` parameter to enhance
rename checkbox ` ` remind ' ' and ` ` checkatstartup ' ' to ` ` checkatstartup ' '
added method checks for " strongKeys " , " weakValues " , " weakValues " , and " weighed " in NodeGenerator . java to
hhh - 11713 - fix npe in istranslatable ( ) method in hibernate . istransient ( )
added methods for retrieving and setting proto properties in ScriptObject . java and modified object extensibility checks in ScriptObject . java to improve method invocation
updated the default read mode from " heap " to " mmap " and added logging for successful segment loading to improve clarity and traceability of the
added import for ByteArrayTemplate and implemented logic for retrieving byte array templates in ArrayTemplateBuilder to enable proper handling of byte data types in the template generation
added Hipchat support in SamlServiceProviderProperties and implemented it in CasSamlSPHipchatConfiguration to enable integration with Hipchat
updated commandRegistryUrls to use a Set instead of a List to ensure the commandRegistryUrls collection is unique and include tools . command .
updated the warning log message to include the current context and added debug logging for uncovered HTTP methods to improve clarity of log messages by including the current context
removed the checkLoggedIn ( ) method from SvnRepositoryConnector and added loggedIn flag in SftpRepositoryConnector to streamline the login process
camel - 12626 : camel - jms should not use transaction manager when transacting session
cloudstack - 10246 : fix checkstyle violation in vmwareresource . java
refactor Timers class to improve performance to enhance performance and maintainability of the timer functionality
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java `
removed deprecated class UAX29URLEmailTokenizer and related constructors from the UAX29URLEmailTokenizer class to eliminate redundancy and improve code maintain
changed the type of the ScriptObject class from ` Map < Object , Object > ` to ` ScriptObject ` and updated assertions accordingly to improve type
refactor EventBusMetrics class to improve event handling logic to enhance performance and maintainability of event bus metrics
do n ' t create a new locale if the eperson be not specify .
updated JaversTransactionalDecorator to implement InitializingBean and added ` ensureSchema ( ) ` method to ensure schema is set after property initialization to
removed null check for pgTypeName in TypeInfoCache . java to simplify code and improve readability
added server setup methods to ScopedHandlerTest . java to ensure consistent server setup across test cases
add log for calltimeoutexception during wait notify phase
updated the condition from ` isBlank ` to ` isEmpty ` in ` RestLoginProcessingFilter . java ` to ensure proper validation of username and password in
updated permission node check to exclude " * " from permission validation to improve permission validation logic for better user experience
rename ` encoding ` to ` sourceCharset ` in ` AbstractCompiler . java ` and update related methods in ` ICompiler . java ` to improve
changed the data type of postLogin from byte [ ] to String in HostBean and HostDatabase classes to simplify postLogin handling and improve code clarity
refactor simulation creation and modification logic in GeneralOptimizationDialog . java to improve code clarity and ensure proper handling of simulation modifications
camel - 14263 : camel - main - config - add contextreloadenabled to camel - spring - boot .
updated logging configurations for console appenders in CommonTestUtils . java to improve clarity and consistency to enhance the readability and maintainability of the
refactor PrologSizeSanityCheck class for improved readability to enhance maintainability and clarity of the codebase
refactor NearbyListFragment to improve code structure to enhance maintainability and readability of the code
added a condition to check if the nonCloseable is supported before invoking invokeSafely in RequestBody . java and added a test for non -
added a check for enabled embedded settings before processing beans in EmbeddedNeo4jServer . java and modified condition checks in DefaultBeanContext . java
update movement debug to use health component instead of default
updated the random method to include a total weight parameter and adjusted its logic accordingly to improve the randomness of the load balancer by adjusting the
refactor GsonParser to simplify cache string handling and remove unnecessary string concatenation to improve code readability and maintainability
updated parameter definitions for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to improve code readability and
replaced ` checkSynchStatus ( ) ` and ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` across multiple
pipe : refactor pipetaskcoordinatorlock to pipetaskcoordinatorlock ( # 11919 )
modified DefaultSdkProvider to conditionally use PreinstrumentedJars based on a system property to improve flexibility in dependency resolution based on a configuration option
changed the condition from ` ! isSilent ` to ` isSilent ` in ` ExecDriver . java ` to ensure the condition behaves correctly when
added checks for default and required fields in IndexSchema . java and a test case for unsupported attributes in BadIndexSchemaTest . java to ensure that
do n ' t randomly read the repair command if it ' s randomly read .
updated ` PrebuiltCxxLibrary ` to use ` Iterables ` instead of ` ImmutableSortedSet ` and modified ` addAllSystemIncludeRoots
updated AdaptableX509CertSelector to include ` isSKIDSensitive ` and ` isSNSensitive ` variables and added checks for subject key
log4j2 - 1343 nosqlappender should use abstractappender . parse instead of string . isempty
mark GuiScreenEvent a deprecated method in 1 . 16 to indicate that the class is outdated and should no longer be used
removed multiple methods from CategoryEditSearchRecyclerViewAdapter to streamline category management functionality to improve code clarity and maintainability
no effective change - add servercachetype parameter to create cache
added iteration over component elements in RocketComponent . java to handle multiple RocketComponent instances to improve performance by avoiding concurrent modification exceptions
refactored method names from ` doCompile ` to ` post ` and added a ` destroy ` method to ` SynchronizedTask ` to
refactor Task class to use a Supplier for task creation and improve null safety to enhance code readability and maintainability by encapsulating task
hbase - 26265 avoid a race condition in wanreplicationserviceimpl . execute ( stripedexecutor )
added null checks for table ' s sd and session state in Partition . java and modified driver instantiation in DDLSemanticAnalyzer . java to ensure robust
refactor code to use lambda expressions for thread creation in LocalServiceRegistryClientImpl and RemoteServiceRegistry to improve code readability and reduce boiler
added a new test class ` FilesTest ` to validate file deletion behavior to ensure that the delete method handles null and null input gracefully
removed exception handling for socket closing in ServerSocketAdaptor and SocketAdaptor classes to simplify code and improve readability by eliminating unnecessary try - catch blocks
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to ensure
replaced ` clear ( ) ` with ` addWorkingDir ( f . toString ( ) ) ` in ` Project . java ` to improve handling of
added null check for ` cn ` in ` ItemInfo . java ` and updated insets in ` Workspace . java ` to ensure proper handling of null
changed access modifier of the String constant from public to private in GeneratedEntityDecorator . java to enhance encapsulation and restrict access to the static
removed unnecessary URLs in SimplePostTool . java to streamline the code for better readability and maintainability
ggb - 248 fixed max / min / max / min / max / min / max / min / max / min / max /
refactor client container startup and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainerProvider to improve thread management and ensure proper
updated condition in Linux . java to check if the type is null or not present to ensure proper handling of the case when the type is null or
close the web application context after each test to prevent memory leak
added a method to retrieve a search string and updated resource retrieval logic in RemoteBrowseHandler . java to enhance user experience by providing quick access to resource
removed the visibility of the neutral button in SetupEncryptionDialogFragment to improve user interface responsiveness during encryption setup
[ ds - 3621 ] add support for includearchived , includeunarchived , and includeunarchived
updated string concatenation syntax in DDLTask . java for consistency to improve readability and maintainability of the code
added error handling for OAuth2 errors in CheckTokenEndpoint to improve error reporting and debugging capabilities
updated multiple Java files to implement the lookupSeriesPaint ( ) method across multiple classes to improve code readability and maintainability
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use parameterized URLs instead of serviceInstanceId to improve clarity and functionality of identity zone
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame . java and added tooltip text in SQLConsole . java to improve user experience by
added support for using Surefire 2 . 22 . 0 and JUnit 5 in ActionProviderImpl . java to enhance compatibility with different Surefire versions
replaced ` HumanReadableException ` with ` RuntimeException ` for error handling in ` WorkerShellStep . java ` to improve error handling by providing a
[ hotfix ] [ runtime ] add experimental annotation
refactor StreamCepstrumSource class to improve code structure to enhance maintainability and readability of the code
added a check to ensure the index is within bounds to prevent out - of - bounds errors when accessing the list
replaced instances of ` OrExpression ` with ` Parenthesis ` in ` CloneHelperTest . java ` to ensure that the test checks for parenthe
added a confirmation flag for the debug paste command in DebugPaste . java to ensure that the debug paste command is validated with required types
replaced calls to ` . get ( ) ` with ` orElseThrow ( ) ` in multiple configuration configuration classes to improve error handling by providing clearer
simonstewart : do n ' t focus the mathquill ggb if the new creation mode be enable .
replaced instances of ` Arg ` with ` GoBinaryDescriptionArg ` and updated imports and method signatures in ` GoBinaryDescription . java ` to
updated the application environment variable retrieval logic in Jooby . java to improve configuration handling and ensure proper logging of application settings
replaced ` RetryListenerSupport ` with ` RetryListener ` in ` SimpleRetryExceptionHandler ` and added a new ` SecondDummyRetryListener ` class to
fix # 498 in elasticmeterregistry # writecounter ( ) ( # 498 )
changed email and author variables from final to final in Contribution . java to enforce immutability and improve code readability
refactor the string formatting logic in JUnitFormatter to improve readability to enhance performance by reducing the number of characters displayed
modified the handling of the ` elements ` variable in ` Subject . java ` to ensure proper initialization of the ` elements ` list when it ' s
updated exception messages in StaxEventItemReader and added URL handling in StaxEventItemReaderTests to improve clarity of exception messages for better debugging
make testmultirendertarget more robust to time difference
added null check for the current profile in DelegatedAuthenticationClientLogoutAction . java to handle cases where the current profile is not found gracefully
updated the method to use ` newElement ` instead of ` target ` for adding namespace declarations to ensure the namespace declaration is added to the correct element
added BigInteger and BigInteger imports in KeyStoreManager . java to support additional cryptographic algorithms in KeyStoreManager . java to enhance security by utilizing
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` Mesh
set the engine version in the process definition in bpmndeployer
updated property keys in VelocityEngine to use " resource . loaders " and " resource . loader . file . class " instead of " class
updated thread verification logic in VMThreads . java and added new methods in VMThreads . java to improve clarity and functionality of thread verification process
added null check for the map object in GenericUDFMapValues . java and created a new TestGenericUDFMapValues . java file to
corrected the spelling of " handlerInterceptors " from " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests
added oil well generation rate and configuration properties in BCEnergyConfig . java and updated GenType enum in OilGenerator . java to allow dynamic control
[ hotfix ] [ runtime ] ensure . locking directory do n ' t collide with . locking directory
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49198 .
updated import statements in CRLDistributionPointRevocationCheckerTests . java to improve code clarity and maintainability
updated ZIP constants and import statements in ZipConstants . java and added a static import statement in ZipEntry . java to improve code organization and maintainability
refactor ZipFileSystemProvider to improve file existence checks and error handling to enhance robustness by ensuring only valid file systems are created
fix a bug in ifcontrollerpanel when the condition do n ' t have a condition .
updated connection initialization in FailoverUpdateURIsTest . java to improve code clarity and maintainability
added Gson serialization annotations for baseUrl , mirrorsList , and repoName in ServiceOsSpecific . java to enable proper serialization and deserialization of various
make sure we delete the db entry only if the file deletion succeed .
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
corrected the calculation of the buffer position in AbstractAjpProcessor . java to ensure correct buffer positioning and prevent potential off - by -
do n ' t try to start / stop the admin console if it fail to start .
removed the unregisterHandlers ( ) method and added synchronization for message consumers in WebSocketImplBase . java to improve code clarity and ensure proper handling of WebSocket
added properties for device ID transformation method , ID table , and log file configuration in IoTDBDescriptor . java to enable configuration of device ID transformation
updated the ` NUM _ DOCS _ PER _ TYPE ` from 2000 to 100 and added a new ` DelayingSearchComponent ` class
updated the condition to check if the access error is not null in TestSignatureInfo . java to ensure that the mockTsp condition accurately reflects the
transaction : use witnessscript instead of scriptcode for script generation .
updated the expression to include " / schema / types / fieldType " instead of " / schema / types / fieldtype " to enhance flexibility in type
added null completer checks in Completers . java and created a new test class OptionCompleterTest . java to ensure proper handling of null completion
camel - 14284 : camel - aws2 - s3 : fix typo in s3utils . listobjectsummary
[ iotdb - 4036 ] fix type of sourcepeerid in iotconsensus to be integer instead of string
refactor file handling in FtpHelper to use a unified method for file uploading to improve code clarity and maintainability by encapsulating
removed unused imports and added alpha settings for replyButton in TweetFragment . java to improve code cleanliness and enhance UI appearance
updated expected timestamp formatting in AccessLogSupportTest . java to improve test clarity and ensure accurate timestamp logging
test : use tmp / testfiles / testfiles - deleteme instead of testfiles / testfiles - deleteme
remove unnecessary null check for subscribers in SettingImpl . java to simplify code and improve readability
added a null check for the marshaller in AbstractSamlObjectBuilder and removed the static block in AbstractSaml10ResponseView to improve error handling by
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of stack traces
added a condition to check if the ` assetsDirInDevMode ` file exists before serving static assets in the ` AssetsController ` class to
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend . db
corrected the constant name from " value - tag - index " to " value - index " in CoreLabel . java to ensure consistency with naming
add request hint for douglas . minprecision and douglas . minprecision .
updated the timeout duration from 30 seconds to 60 seconds and changed native settings from false to true in multiple classes to allow more time for native operations to
rename ` DuclsSandboxTest ` to ` SandboxTest ` for consistency to improve code readability and maintainability
camel - 14263 : camel - cxf should use exchange . setexception ( ) instead of log a warning
changed the visibility of the forwardPropagateTree method from package - private to public to allow access to the method from other classes
updated SQL query in JDBCExample . java to include additional time groups to improve query accuracy by incorporating additional time intervals
add a warning for unsupported file location during profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future updates
added zoom functionality to ShareActivity to handle back navigation to improve user experience by allowing users to zoom out when the back key is pressed
added a check for deprecated fields in Json . java to skip processing of deprecated fields in the code
added animations for showing and hiding the send layout in LauncherFragment to enhance user experience by providing visual feedback during layout visibility changes
updated the method signature of ` readTokenStorageFileMethod ` in ` Utils . java ` to improve code readability and maintainability
added Progressable parameter to multiple methods in Utilities and related classes to enable better tracking of progress during sequence writing operations
[ hotfix ] [ connector ] fix typo in sourcecoordinatorprovider . java
added methods to remove contributions and update panel ordering and colors in ContributionListPanel to improve panel management and ensure color updates are applied correctly
renamed ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` for consistency to improve clarity and maintainability of the template adapter
added a check for empty dPath in RegularFileObject . java to ensure dPath defaults to the system ' s user directory if it is
[ java ] set default audio sink sample rate when format . no _ value be specify .
log4j2 - 1343 mapfilter should not use stringmap . getdata ( ) .
refactor VerificationInOrderWithCallsTest . java for improved clarity to enhance code maintainability and readability
updated the return statement from ` axis . z ` to ` axis . x ` in ` Quaternion . java ` to ensure the method returns the correct
corrected the spelling of " colelction . delim " to " collection . delim " in the COLLECTION _ DELIM constant to
curator - 132 : add a listener that connects to the client when the listener connects to the curator server .
modified type handling logic in DocRenderer . java and added new test cases in PHPCCDocumentationTest . java to improve clarity and functionality of type documentation
refactor one - handed mode handling in RecentsAnimationDeviceState to use a boolean variable for clarity to improve code readability and maintainability by
removed running tasks from the AppsCustomizePagedView in onDetachedFromWindow to ensure proper cleanup of resources when the view is detached
added a dictionary resource parameter to the MorfologikAnalyzer constructor and updated the stemmer initialization in MorfologikFilter to enable unified dictionary
refactor count and exception handling in ResultSetTest . java to use a boolean flag instead of a hardcoded value to improve clarity and maintainability
updated the initialization message from " debug " to " an empty string " in GradleBuildService . java to provide a clearer indication of the
replaced AtomicReference with AtomicBoolean for locking status and added MVCC prevention logic to enhance clarity and functionality in handling exceptions related to lock timeouts and MVCC
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by reducing redundancy
increased the timeout from 5 seconds to 10 seconds in the await ( ) method from 5 seconds to 10 seconds to allow more time for the zipkin
update deviantart ripper to allow configuration for deviantart login .
refactor ` PackageUtils ` to use constants for GOOGLE _ PLATFORM _ KEY and GOOGLE _ LEGACY _ KEY
use createsolutionbusiness ( ) in importdirsolveallturtletest . java
added a method to notify window state changes in WWindowPeer . java to improve handling of window state changes for better analytics
added email description to templateData in EntityGroupKeyEmailContentFormatter and set a test _ description in TestEntityGroupKeyEmailContentFormatter to enhance
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
updated language retrieval logic in Locale . java and added validation in LocaleTest . java to ensure correct language code is returned for different locales
refactor change log validation and validation logic in Liquibase . java to improve code readability and maintainability by reducing duplication
added a condition to return early if screen pinning is active to improve performance by avoiding unnecessary processing when screen pinning is not active
added a ` mNoDataText ` field and its associated setter methods to handle the case where no chart data is available to improve user experience by
refactor methods in Http1xServerResponse , Http2ServerResponse , and Http1xServerResponseImpl to improve thread safety to ensure thread
refactor chunk handling logic in NettyResponse . java to improve code readability and maintainability by consolidating related logic
updated test cases to include " : scheme " in Http2TestBase and TestHttp2Limits classes to ensure correct handling of HTTP / 2 header
fixed - redissonlocalcachedmap . getkey ( stringpattern , int ) and set ( string , int ) do n ' t return cached
camel - 14263 : camel - jpa - fix npe when use entity manager and transaction manager .
corrected the spelling of " jumpSpeed " to " jumpSpeed " in PhysicsCharacter . java to ensure consistency in variable naming conventions
added a condition to check if reparsedFunction is null before processing syntax extensions to ensure syntax extensions are only processed when reparsedFunction is not null
updated logging and order book creation methods in BitstampPusherService . java to improve clarity and functionality of order handling in the BitstampPusher
added deprecated methods for retrieving old upload segment URIs in FileUploadDownloadClient to indicate that these methods are outdated and should no longer be used
added a filter parameter to the findOne method in MongoDbTailTrackingManager to allow filtering of results based on specified criteria
camel - 16263 : camel - jbang - add a method to assertpredicatefails to improve test coverage
added a bound check for the alpha value in RecentsView . java to ensure the alpha value is within the valid range of 0 to 1
updated the formatting of the Import - Package attribute in ManifestReversion . java to ensure consistent formatting for the Import - Package attribute
refactor DataSyncConfiguration class for improved readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized JavaSnippetRepository in JavaLanguageServer . java to ensure snippet repository is properly initialized for improved functionality
added loop to update sums based on time bucket count in StarTreeRecordStoreCircularBufferImpl . java to ensure time bucket updates are performed only
[ java ] move chromedriver . storage . googleapis . com to chromedriver . storage . googleapis . com
camel - 16263 : fix pgeventconsumer and pgeventproducer to use sql statement instead of sql statement .
updated import statements in FeedParser . java to use the new package structure to ensure compatibility with the latest version of the library
added handling for " Content - Length " header in TransferCompletionHandler and updated the NettyTransferAdapter instantiation in NettyAsyncHttpProvider to improve
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
removed the constructor of EnhancedRuntimeException from the constructor to streamline the constructor for better maintainability
[ log4j2 - 1342 ] socketappendertest fail on slow ci server
camel - 14263 : camel - dsl - remove the eventadminendpointbuilder . eventadminendpointbuilder .
added exception handling for ` NoSuchMethodException ` and ` Exception ` in ` ByteArray . java ` and updated method signatures in ` compare ` and ` compare
added a method to disable input proxy for touch events in RecentsAnimationWrapper . java to ensure proper handling of motion events during touch events
camel - 6770 : disable restlet domain test due to camel - 6770
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method in ` HashTableTemplate . java ` to simplify the method
move modulepath to the test package so that it can be run in a different package .
added source directory information to the getCompiler method in JavaLanguageServer and improved logging in JavaServerConfiguration to enhance debugging capabilities by providing clearer source
updated menu item IDs for opening web pages and mute hashtags in TweetPager to improve user experience by disabling web page navigation
corrected the spelling of " nodeIsAncestorOfItself " and " nodeIsNotDescendantOfItself " to " nodeIsNotDescendantOf
make sure y - coordinate be non - negative in worldeditplayer . getblocky ( ) .
added PathNotExistException to the self - checkDataTypes method and modified the method signature to include a PathNotExistException for better error handling to improve
updated closing brace in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ runtime ] remove unused mailboxexecutor field from continuousfilereaderoperatorfactory
hbase - 26464 add test for settablestateinmeta and settablestateinmeta to ensure that user can set meta table state
updated method calls in GatewayMetricFilterTests to use ` Meter : : getId ` instead of ` meter . getId ( ) ` to improve clarity
updated BlockJUnit4ClassRunner to use JavaClass instead of TestClass to ensure compatibility with the current test class structure
updated the method call from ` remoteItems ` to ` lastTimeData ` in ` KieWatcher . java ` to correctly reference the last time data
updated the calculation of allAppsCellWidthPx and allAppsCellCellPaddingPx in DeviceProfile . java to improve layout consistency
[ hotfix ] [ core ] add an internal constant for parent - first - logging pattern in coreoptions
updated the method reference from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process for multi - phrases
added a Closeable interface to the Session interface and updated close ( ) method to return a void to enhance session closure functionality and improve code clarity
refactor GetLocations class to improve code organization to enhance maintainability and readability of the code
updated exception handling in SchemaValidatorTask . java to check for null values before printing stack trace to improve clarity and avoid unnecessary console output when exceptions are
replaced ` UncheckedIOException ` with ` IOException ` in ` Contents . java ` to simplify exception handling to improve code readability and maintainability
updated the class from Activity to AppCompatActivity in GeneratePubkeyActivity . java to ensure compatibility with the latest Android support library features
ruby flavor : use stringbuilder instead of stringbuilder for codepoint generation
updated logging level from warning to debug and added null checks for username and password in BaseLiquibaseTask . java to improve logging clarity and prevent
[ java ] remove the usecaches flag from nio2endpoint .
updated database handling in CasGeoLocationConfiguration to use Resource instead of MaxmindProperties to improve flexibility in database configuration management
[ fix ] instructorfeedbackresultspageuitest : fix typo in test
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to enhance functionality to support raw scans in qualifier list optimization
removed the ` public ` access modifier from multiple methods in ` ApprovalStore . java ` and ` ApprovalsControllerService . java ` to
added a boolean variable ` mStartedDownload ` and a delay to cancel the downloader if it hasn ' t already started to ensure that the download
updated the method ` getAnyView ` to use ` getAnyView ` instead of ` getOpenView ` in ` AbstractFloatingView `
updated project version from " 1.0 . 11 " to " 1.0 . 13 " and corrected a typo in the JFreeChartResources . java
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure thread - safe execution
refactor GsonBuilder to improve code structure to enhance maintainability and readability of the code
added null check for ` circleCenters ` before adding it to ` fixedPoints ` and added a null check for ` circleCenters ` to
remove espresso home option from espressoproperties .
doc ( regen ) : fix javadoc warning ( # 290 )
changed the access modifier of the DeleteSessionAction class from protected to private and simplified the session deletion logic to enhance encapsulation and improve code
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency in exception
updated logic in JoinQParserPlugin and modified result initialization in SolrIndexSearcher and TestJoin classes to improve handling of empty result sets and enhance test
updated triggerMediaScan method call to include a file parameter to enhance media scanning functionality by providing additional context for the file
removed conditional logic for postTestResults in TestRunning . java to simplify the code and improve readability
added custom G - code settings for custom G - codes in MainWindow . java to enhance functionality by allowing dynamic configuration of custom G - code settings
camel - 7999 : use utf - 8 encoding for outputstreamwriter in additionaljaxbmappingproducerimpl
refactor JsonElement class to improve code structure to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and implemented exception handling for " unset . sys . property " in TestBadConfig . java to ensure proper
added a method to remove fragments and action bar in GpsMainActivity to ensure proper cleanup of fragments and action bar to prevent memory leaks
fix punctuation in spanish tokenization test .
refactor remote range parsing to use ` Range . Byte ` instead of ` Range . String ` for content range handling to improve code clarity and maintain
updated G - code file paths and modified output formatting in VisualizerCanvas . java and GcodeViewParse . java to enhance test coverage and improve
added new versions " 8.1 . 0 - cfs " and " 8.1 . 0 - nocfs " and " 8.1 . 0
removed unnecessary whitespace in assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency
added a check to close the exchange client if the query is not finished and the output stage is null to ensure proper resource management and prevent resource leak
fix integritycheck . expandfilename ( ) to check for file directory .
removed the import of SolrClient from the ChaosMonkey class to streamline the code by eliminating unused dependencies
added null check for ` fas ` before accessing its private persistent file to prevent potential NullPointerException when ` fas ` is null
reformatted code for improved readability in NestedRepositoryTreePanel . java to enhance maintainability and clarity of the code structure
added validation for the extension type in the ExtensionTypeHeader constructor to ensure that the extension type is within - 128 to 127 to prevent runtime errors
pdfbox - 2576 : throw ioexception instead of throw exception
removed the ` pushOnShutdown ` boolean and updated related getter and setter methods in ` PrometheusProperties . java ` to simplify the initialization of
refactor ReactiveStateMachineExecutor to include a triggerCallback parameter and improve error handling to enhance error management and error management during event processing
added a test method to verify the use of multiple Python executables on the first path in BuckConfigTest . java to ensure correct functionality of the
added a default button to the initial account registration frame to enhance user experience by providing a default button for the sign - in process
added a new configuration variable ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN `
updated error logging format in RegistrationRestRepository . java to include exception details to improve error reporting for better debugging and traceability
move reflection utility to org . axonframework . util instead of org . axonframework . util . reflection
added a static method ` listableCollector ` in ` OidcIdTokenClaimCollector ` and created corresponding tests in ` OidcTests
removed the ' center ' field from multiple classes to streamline the code by eliminating unused variables
[ hotfix ] [ bundle ] fix nullpointerexception in registerandprocessbundleoperation
refactor SslContextFactory class to improve SSL context handling to enhance security and performance of SSL connections
camel - 14284 : camel - jbang - use default _ max _ expectations instead of maxexpectations .
change return value from " access _ confirmation " to " access _ confirmation _ error " in AccessController . java to provide a more specific error message
add a new class ` ConsumerClassLoaderFilter ` and implement it in ` ReferenceConfigTest ` to enable dynamic class loading based on the current thread '
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFSheet . java
updated rollover icons and rollover pressed icons in FontImage . java to improve clarity and functionality of icon management
refactor grid translation handling in TaskViewUtils and TaskViewSimulator classes to improve code clarity and maintainability by consolidating related functionality
refactor Assertions class to improve code readability to enhance maintainability and facilitate future modifications
added a null check for ` currentDateTimeFunction ` across multiple database classes to ensure that ` currentDateTimeFunction ` is returned when it is not null
[ scb - 2423 ] fix log4j config file path ( # 2424 )
added a new parameter ` contentDescription ` to the ` call ` method and updated its usage in ` DigitalWellBeingToast ` and
[ hotfix ] [ catalog ] increase wait time for metaavailable . getmetalocation
updated LineNumberTagAggregator , TestDominance , and TestDominance classes to improve code clarity and maintainability
updated genericitem to use stateconverterutil . defaultconversion ( state , typeclass ) instead of null
added new imports and a test method for fetching post and details projections in BidirectionalOneToOneNPlusOneTest . java to enhance testing
added a method to remove extra empty screens and adjusted the startSearchPageIndex assignment based on the presence of workspace screens to ensure that the search page
modified the initialization of ` baseDerivedRefs ` and ` HashSet ` in ` MarkBasePointersPhase . java ` and ` IndexedValueMap .
updated string formatting in GoogleLineChart , GooglePieChart , and GooglePieChart classes to use single quotes instead of single quotes to improve
fix a race condition in sendingaccountor . waitforbatches ( ) .
[ iotdb - 2423 ] add position to walprettyprinter to help with debugging .
updated the timeout parameter for the Transceiver initialization in TestNettyTransceiverWhenFailsToConnect . java to ensure the Transceiver
added sorting functionality to the event collection in SimpleReport . java and created a test for it in SimpleReportTest . java to ensure the report is
added a test method to verify the behavior of ` getCsvLine ` with double quotes in ` CSVFileLogger ` to ensure that CSV lines containing
add coref . doscore , coref . doscore , coref . useconstituencytree and coref . useconstituency
do n ' t try to send an iq message if the recipient do n ' t have a jid . jm - 144
removed the @ JniImpl annotation from VM . java to clean up the code and improve maintainability
updated configuration settings in Fetcher2 . java to use Protocol constants instead of hardcoded strings to improve code readability and maintainability by using
added a condition to check if the video HDR format is not " dolbyvision " and removed debug output statements in FFMp
updated the array reference from " other _ package " to " other _ package2 " in AstTests . java to correct the reference to the correct
fix worldborder . setworldborder ( ) and add integration test
hbase - 25828 hbasemaster do n ' t check if master can host user region ( addendum )
ggb - 260 do n ' t close the login dialog if the login event be an auto login .
refactor data resource online tests to use a method to generate instance configurations based on the " dataServer _ instance " parameter to improve code maintain
changed the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
add a test to verify if a project contain a reference to a non - existing project .
simplified the proto equality check in PropertyMap . java to improve code readability and maintainability
refactor getControllerId method to accept a configId parameter and streamline the logic for adding relays to improve code clarity and maintainability by
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper resource management
removed the conditional check for ` service . isGenerateRefreshToken ( ) ` in ` OidcConsentApprovalViewResolver . java ` to simplify the
removed debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
updated the BaggagePropagation class to use NoopGetter for retrieving null values to improve code clarity and maintainability by using a more descript
refactor ConditionalOnEnabledResourceChain class to improve code structure to enhance maintainability and readability of the code
added a check for child nodes in the BarrowmanCalculator class to ensure that the calculation only occurs when there are children available
corrected the reference from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in the JBIG2Filter class
updated logging messages in FacebookImpl . java and added a callback for restoring intent result listeners in FacebookImpl . java to improve logging clarity and ensure proper
replaced return values for " h : mm " with " skeleton " in ShadowICU . java and updated test cases in ShadowICUTest .
removed the dependency on KeyguardManager in TouchInteractionService . java to simplify the condition by directly checking if the device is locked
fix nullpointerexception when set disk offering id for a volume
replaced ` FileChannel ` with ` AsynchronousFileChannel ` for writing byte arrays in ` UtowBodyHandler . java ` to improve performance and
reformatted code for better readability in SigInt . java and SigIntTest . java to improve code readability and maintainability
ggb - 2275 use prepareboxresize instead of updatebyboundingboxresize ( updatebyboundingboxresize )
change return value from - 1 to 0 in Asset . java to ensure the method returns a valid value instead of a negative value
updated the calculation of benchmark functions in ComputeBenchmark . java to use dynamic size and mapping functions to improve code readability and maintainability by
added onRefreshListener method to refresh the UploadListFragment to notify the adapter when the data is refreshed
fix nullpointerexception in bibdatabasecontext . getfile ( ) and bibdatabasecontext . setdatabasefile ( path ) . ( #
replaced calls to ` emitters . get ( i ) ` with ` emitters . get ( i ) ` in ` ParticleEffect . java
refactor Tomcat service retrieval logic to use findServices ( ) instead of findChildren ( ) to improve efficiency by avoiding unnecessary service lookups and
updated string formatting in Console . java and Console . java files to improve consistency and readability of error messages
added a check to return early if the playback state is not PLAYING to prevent further processing when the playback state is not in a playing state
updated the method for retrieving the ServiceComponentDesiredStateEntity by using a direct ID instead of a primary key to improve code clarity and reduce dependency on
added a new class ` InnerClassFieldClash ` and created a new ` InnerClassFieldClash ` class in ` Java2TypeScript
added support for ` followRedirectFilter ` and ` followRedirectFilter ` configuration in ` DockerClientFactory ` and ` DockerClientProfile ` classes to
replaced direct locking mechanism with a locking mechanism in XToolkit . java to ensure thread safety during display changes
hhh - 10183 - fix flaky test in nationalizedscalarquerytest
[ pdfbox - 4071 ] fix npe in opcpackage . verifyzipheader ( )
changed the visibility of the storeClassFile method from private to public to allow access to the method from other classes
updated assertions in SingletonSortedSetDocValues . java and added a new TestSortedSetDocValues . java file with a new test class TestSorted
updated error messages in CGIHandler . java and added a new start method in JavaVM . java to improve clarity of error messages and enhance the
updated the condition to check for additional characters in the string to ensure compatibility with additional line ending formats
updated multiFetchSourceFiles method to use Set instead of List for hash codes to improve performance and ensure uniqueness of hash codes
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to avoid unnecessary processing when there are no vertices
added verification error handling and improved error messaging in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to
replaced ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root , menu
truffle - api : remove unused import that be no longer need .
refactor JsonObject class to improve code readability to enhance maintainability and facilitate future updates
updated the condition for maxIdleTime in SelectChannelEndPoint . java and added checks in HttpConnection . java to ensure proper handling of idle time limits
fix cansustainplant . cansustainplant ( ) in farmlandblock . cansustainplant ( )
added SQL CREATE TABLE SALTEDTABLE with a primary key and modified primary key retrieval logic in QueryDatabaseMetaDataIT and UpgradeUtil to enhance database
updated date formatting in HttpCookie . java and added a new class B6791927 . java to ensure consistent date formatting across different locales and validate
refactor database closing logic in DbHelper . java to improve code readability and maintainability by reducing redundancy
increase timeout from 1 second to 5 second in batchmessagelistenercontainerintegrationtests
make economyallocationstage configurable by default
add keybindings . save ( ) method to save the source when the keybinding be save .
added line separator to the ObjectMapper initialization in DrillTest . java to ensure consistent line endings across different operating systems
updated path handling in NativeEnvironmentRepository to ensure compatibility with Windows path conventions
refactor application handling in BaseTest and LiteFnQueryHttpFilterTest to use a static Application instance instead of a static Application instance to improve
[ java ] do n ' t validate record record if it already exist .
[ java ] use errorgroupserviceclient . getgroup ( errorgroupname ) instead of groupname in itsystemtest . java
testfutoptimizations : do n ' t sleep if mvstore be disabled
added a private boolean variable ` reverseImage ` and refactored the initialization of ` sharedPrefs ` in ` CameraManager . java ` to
updated string comparisons in multiple classes to use ` . equals ( ) ` for consistency to improve code readability and maintainability
fix terserutil . replacefields ( ) and terserutil . replacefieldsbypredicate ( ) - > replacefieldsbypredicate (
updated JUnit imports and method visibility from public to package - private in ` AuthenticationSuccessListenerTests . java ` to migrate to JUnit 5
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 490 : use array
refactor TypeUtil class for improved readability to enhance maintainability and ease of understanding for future developers
updated the ` triggerTime ` variable to include ` TimeZone . getDefault ( ) . toZoneId ( ) ` to ensure the ` triggerTime `
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle abstract method error throwing based on method modifiers to enhance error handling for abstract methods
camel - 14263 : camel - simple : do n ' t throw illegalsyntaxexception for invalid ognl expression .
removed the check for empty toExplore in AbstractParser . java to simplify the code by eliminating unnecessary checks
camel - 15836 - camel - aws2 - jclouds : use iohelper to copy input and output
camel - 14263 : camel - osgi - test should not fail if the bundle be not release yet .
added a check for ` Flags . DEFAULT ` in ` Check . java ` and created a new test class ` CheckACC _ STRICT _
[ java ] use drivertimeoutms in channelvalidationtest to avoid failure on slow machine .
added a new file ` FileExtensions . java ` that defines multiple file extension constants for language source and header to provide a centralized way to manage
replaced the ThreadLocal constructor with a custom implementation for ISO8601CanonicalDateFormat to simplify the code and improve performance by avoiding unnecessary object creation
removed deprecated experimental options " FastTLABRefill " , " DeferPollingPageLoopCount " , " DeferThrSuspendLoopCount
added a displayName field and modified DelegatedClientIdentityProviderConfiguration to support custom display configuration to enhance user experience by allowing customization of client display name in
throw earlyterminationexception instead of runtimeexception ( # 5363 )
reformatted the return statement in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
refactor response handling in HttpBindServlet and HttpSession classes to improve connection management and response consumption to enhance code clarity and maintainability by standardizing response
added a null parent check before creating the CapabilityDispatcher in ForgeEventFactory to prevent potential NullPointerExceptions when parent is null
wallettool : remove keycrypterexception from catch block
added @ Deprecated annotation to SubmitOrderedCompletionService . java to indicate that the service is outdated and should no longer be used
modified the handling of hyphenation lengths in HyphenationTree . java to ensure the correct length is used for hyphenation creation
added a sleep delay of 200ms in IQRegisterHandler . java to ensure proper synchronization during the registration process
fix a bug in simpleaccountregistration . getresources ( ) . getresources ( ) . getresources ( ) . getresources ( )
updated the description of PARAMETER _ NEEDS _ TO _ BE _ NAMED from " @ Param " to " @ Param " to clarify
added a new variable ` providersChanged ` to ` ConfigurationManager . java ` to track whether providers have changed in the configuration
added a method to quote identifier tokens in the SemanticAnalyzer to ensure that identifiers are correctly quoted in the token rewrite process
pdfbox - 4892 : skip font with no ' name ' entry , a suggest by valerybokov
added @ SuppressWarnings ( " unchecked " ) annotations to the AnalysisSPILoader initialization in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings
modified the boundary check in the Window class to include a loop for parent actors to ensure that the hit is only processed when the current window is not
added a null check for appManifest before retrieving target SDK version to avoid potential NullPointerExceptions when accessing appInfo
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to use a dedicated method for adjusting configuration metadata to improve code readability and maintainability
added a userName field and its getter / setter methods to Driver and related classes to enable the retrieval and setting of the user name in the Hive database
camel - 14284 : camel - jbang - allow to configure the xslt component in the xsltcomponent
added HadoopShim support to ContainerRunnerImpl and TaskRunnerCallable classes to enhance compatibility with Tez Hadoop configurations
removed redundant variable declarations in ShadowAssetManagerTest and ShadowDownloadManagerTest to simplify code and improve readability by eliminating unnecessary variable assignments
added null check for context before logging access in CoyoteAdapter . java to ensure logging only occurs when context is not null
[ java ] do n ' t log start time in throughputlogger if start time be zero .
refactor VM option validation to use Platform . isDebugBuild ( ) instead of System . getProperty to improve code readability and maintainability by central
[ scb - 2423 ] fix log publisher to use the metric metric metric ( # 2423 )
updated logback configuration handling in FrameworkLauncherExtended . java to ensure logback configuration file is resolved correctly based on system properties
updated method signatures to enforce non - null constraints in multiple manager classes to improve code robustness by ensuring mandatory parameters are enforced
replaced BASH _ ESCAPER with SHELL _ ESCAPER in ShellStep . java and added SHELL _ ESCAPER
refactored container handling in AbstractWaitStrategyTest and HttpWaitStrategyTest to use try - with - resources for better resource management to ensure proper
updated the TestLucene50FieldInfoFormat class name from " TestLucene50FieldInfoFormat " to " TestLucene
removed unnecessary closing brace in RelativeDateFormatTests . java to improve code readability and maintainability
added a method ` generateShieldAddress ( ) ` to the ` RpcApiService ` class to generate a shield address in the wallet to enable the
changed the return type of ` readConsoleInput ` methods from ` byte [ ] ` to ` String ` in multiple classes to improve type safety and
updated regex patterns for presubmit and postsubmit in TestStabilityRule . java to improve accuracy in matching presubmit and platform formats
updated SolrFragmentsBuilder initialization and added a note for multi - valued fields in HighlighterTest to ensure that multi - valued fields do not exceed
modified the ` tryToLogin ` method to accept a username and password parameters instead of a static return code to enhance security by allowing username and password
updated entity handling logic in HandlerSceneEntityDrownReq and modified entity management in PacketSceneEntityDrownRsp to improve entity management
camel - 14263 : camel - jms : fix typo in camel - jms
removed wrapCollection ( parameter ) from the update method call in DefaultSqlSession . java to simplify the method signature and improve readability
added logging for unknown currency exceptions in BTCEAdapters . java to improve error handling for unknown currency scenarios
[ java ] do n ' t add a demand subscription if the clientid be different than the clientid .
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a parameter ` useTenantIsolation ` to ` startController ` and modified ` startController ` method to accept a boolean parameter to control tenant isolation
replaced ImmutableMap . builder ( ) with direct casting of the response value to simplify the return statement and improve type safety
added a check for non - empty attributes in ProjectWorkspace . java to ensure that the attribute list is not empty before processing
added ` getProjectJdkName ` , ` getProjectJdkType ` , ` getProjectJdkType ` , ` getProjectJd
changed the term from " Experimenal " to " Experimental " in HiveSessionProperties . java to indicate that the optimization is now experimental and
added tests for resolving ACLs for Scott with user details in GrantedAuthorityEffectiveAclsResolverTests to ensure correct functionality of ACL resolution based
replace reflectionmodel . getsolvedjavalangobject ( ) with typesolver . getsolvedjavalangobject ( ) in javaparsertype
added a static variable ` numberOfButtons ` and a constant ` MAX _ BUTTONS _ SUPPORT ` in ` XToolkit . java ` to
updated import statement from ` jdk . testlibrary . Asserts . assertEquals ` to ` com . oracle . java . testlibrary . Asserts .
added a new ` MessagePackFactory ` class and refactored the ` newUnpacker ` method in ` MessagePack . java ` to
added new biome tags for IS _ DESERT , IS _ CAVE , IS _ UNDERWORLD , IS _ CAVE ,
rename the method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
updated layout initialization logic in ComponentGroup . java to conditionally set UIID based on the horizontal orientation to ensure correct UIID assignment based on the
replace regex pattern matching with matcher matching to improve code readability and maintainability
replaced ` touchHandler instanceof ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput . java ` to
[ java ] : make clusteredserviceagent . commitposition volatile and close the commit position counter if it be close .
no effective change - add example record for usersite and recordid class
refactor HttpConverterRegistrar to handle URL addresses more robustly and improve error handling for invalid URL formats to enhance robustness and provide clearer error
api : do n ' t check if the capacity type be all or storage when the host be already in the pool
replaced the method ` openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` fileLength ( fileName ) ` to improve
updated JavascriptCompiler to be final and modified method signatures in JavascriptCompiler . java for better immutability to improve code clarity and ensure imm
added synchronization to the UISettings class in the store method to ensure thread safety for UISettings class operations
fix the text field to not paint the string if currently the editing be do natively on the
fix spanner io exception when emulator only support one transaction .
no functional change - use diamond operator in compilertest
modified the type check in ObjectInputStream and added a new CloneArray class for cloning arrays to ensure correct handling of short array types during object cloning
replaced ` getClaim ( ) ` with ` getStringClaim ( ) ` and updated log messages for clarity to improve code readability and maintainability by
added a condition to check if a specific relationship field is a relationship field in DCInputSet . java to ensure proper handling of relationship fields in the
added server slogan functionality to the capabilities table and updated related methods to improve user experience by providing a visual representation of server slogans
updated conditional logic for tinting menu items in DrawerActivity . java to improve code readability and maintainability
updated test assertions in SolrRequestParserTest to use JUnit Assume for exception handling to ensure tests only work when a network connection is available
added a check for empty symbol events in MissingSymbolsHandler . java to prevent processing when there are no symbols to process
updated stringHelperTest . java to include new data structures in StringHelperTest . java to improve the readability and structure of the output output
added a warning check for an empty array or iterator in the DataProviderHolder variable to ensure that the test does not proceed if an empty array or
camel - 14263 : camel - jbang - use ` Collections . empty _ set ` instead of ` Collections . EMPTY _ MAP `
bug fix : selection style should be set to null if selection style do n ' t exist
corrected the spelling of ' mass ' to ' restitution ' in the setRestitution method to improve code readability and maintain
added a new file ` AutoFtpActivity . java ` for testing FTP operations to facilitate automated testing of FTP operations in the application
refactor conditional checks in BaseSemanticAnalyzer to improve readability to enhance code clarity and maintainability by reducing repetitive method calls
added getter and setter methods for component state in ImageViewer , OnOffSwitch , and GenericSpinner classes , and updated UIBuilder and UIBuilder to
added a new class ` RemoteExecutionEnabled ` and corresponding tests in ` BuildableSerializerTest ` to enable and test remote execution functionality in the modern
pdfbox - 4071 : fix typo in exception message
updated file reading methods to use UTF - 8 encoding instead of FileReader and LineNumberReader to improve character encoding handling and eliminate potential resource leaks
added an assertion to assertWorkingScoreFromScratch in AbstractScoreDirector . java to ensure that shadow variables are not stale during the scoring process
hive - 20586 : enable hive . optimize . semijoin . conversion to optimize hive . hive . optimize . semijoin . conversion ( a
added logging statements to various DatagramPacketDecoder , DatagramPacketDelimiterDecoder , and DatagramPacketEncoder classes to enhance debugging capabilities for non - byte buffer instances
refactor synchronization logic in SynchronizeFolderOperation and FileDisplayActivity to improve directory removal logic and enhance error handling in file management
added unit tests for transaction hash in PollingTransactionReceiptProcessorTest . java to ensure the transaction hash is present and is present before processing transactions
updated test methods in SchemaRegionBasicTest to replace ` testConstructSchemaBlackList ` and ` testDeleteTimeseries ` with ` testConstructSchema
added a null check for the sample MIME type in MediaCodecRenderer to ensure that a valid MIME type is provided to avoid runtime errors
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource `
updated the ` @ AllArgsConstructor ` annotation to include ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to ensure
added SQLFeatureNotSupportedException for unsupported index creation on views in MetaDataClient . java to indicate that creating an index on a view is not currently supported
added a new ` Website ` class and updated ` PopulatorImplTest ` to test the functionality of the ` PopulatorImpl ` class to
added a setup method to the BSFormatterTest class to set the default locale to ensure consistent test environment across different locales
added a FilenameFilter to detect and log badly downloaded jar files in the CoreModManager to inform users about potential issues with misplaced jar files
replaced ` containsString ` with ` equalToIgnoringCase ` in ` MultiPartParsingTest . java ` to improve readability and maintainability of the
added a condition to handle single parameter expressions in SimpleExprGenerator . java to ensure proper handling of variable expressions in the analysis process
added a volatile boolean field ` createdVertx ` and modified the conditional check in ` VertxComponent . java ` to ensure that the vertx is
added node parameter to writeAttributes method calls in NodeStyleBuilder . java to ensure proper serialization of NodeModel instances
updated log message formatting and null checks in SynchronizeFolderOperation . java and FileDisplayActivity . java to improve clarity and prevent potential NullPointerExceptions
added an API property to indicate if the unread flag was ignored in the request to ensure entries are returned regardless of their read status when keywords or tags
updated resource path resolution to use MavenPaths instead of MavenTestingUtils to improve code maintainability by centralizing path management
added validation logic for URIRegisterDTO and improved data validation in RegisterServerConsumerExecutor and URIRegisterExecutorSubscriber to enhance data validation and ensure valid data
updated isPlaying condition to check if the sound is paused before determining if it is playing to ensure playback only occurs when the sound is not paused
added a new permission ` PERMISSION _ ADMIN _ SUDO _ AREA ` to the ` Captions ` class to allow admin
refactor query option handling by introducing a new method ` updateQueryOptions ` to improve code readability and maintainability by encapsulating query
replaced calls to ` toUri ( ) . getPath ( ) . endsWith ( " / " ) ` with ` path . getFileName ( ) . toString
updated assertions in ResourcesTest . java to include a string for pureEmoji and mixEmojiAndText to improve clarity and accuracy of attribute assertions for null
added native methods for NMTOverflowHashBucket and NMTMallocWithPseudoStack in WhiteBox . java to enhance memory management capabilities by providing
[ flink - 30613 ] [ serializer ] use javaeitherserializersnapshot instead of javaeitherserializersnapshot
updated DEFAULT _ NDOTS and RESOLV _ OPTION constants and introduced ROTATE _ RESOLV _ OPTION in AddressResolver
added a call to ` super . associate ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplateTest ` to
pdfbox - 4892 : handle null value , a suggest by valerybokov
updated XML file paths from " liquibase / parser / core / xml / dbchangelog " to " www . liquibase . org / xml / ns
[ core ] move commonmimetypelocator from api to test package
changed the default value of ` repoState ` from ` INIT ` to ` NOT _ REQUIRED ` in multiple entities to ensure that the repository
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to enhance the comparison functionality to support additional schema comparisons
updated TestBackwardAnoamlyFunctionUtils to use TestNG annotations instead of JUnit tests to ensure compatibility with the TestNG testing framework
added a new file ` ProgressiveJPEGTest . java ` to implement a progressive JPEG rendering test to demonstrate the use of progressive JPEGs
update materialloader to use mat . setfloat ( ) instead of mat . setalphatest and mat . setfloat ( ) .
improve error message when target architecture be 32 - bit .
added a null and empty check for the text before setting the size of the label to avoid potential NullPointerException when the text is not provided
updated the method call from ` readVarInt ( ) ` to ` readVarInt ( ) % 1 _ 000 _ 000 ` to
changed class modifiers from public to private in PushUtils and updated constructors in ThumbnailsCacheManager , ThumbnailsCacheManager , ThumbnailsCacheManager
removed unnecessary bounds checking in RocketPanel . java to simplify the code and improve performance by directly accessing the length from the configuration
removed unnecessary casting of MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code and improve readability
updated the method call for loading presets in Startup . java to improve flexibility in loading preset files
added a condition to check if the application is in an app and modified the handling of temporary object arrays in multiple classes to improve accessibility handling and ensure
replaced instances of ` Node . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( ) ` in ` Node
add targetjdk13 and targetjdk15 to pmdtask to make it possible to target both jdk 1 . x and jdk
replaced PowerMock with MockitoJUnitRunner for mocking Mockito in QuotaResponseBuilderImplTest . java to improve test reliability and maintainability by
added static PrintStream variables and set default output and error streams in TestSchemaToolCatalogOps . java to ensure consistent error handling across the application
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper class and updated the SaslNegotiateHandler constructor
added RepositoryMetadata parameter to MongoQueryMethod and related classes to enhance the query resolution process by associating metadata with the query method
refactor digester to use a wrapper around the entityresolver2 implementation to improve flexibility in handling different types of entity resolvers
removed unused imports and added new constants for PhoenixDatabaseMetaData in MetaDataEndpointImpl . java to streamline code and improve readability
increase allowed _ repeated _ blocked _ deadlocks from 5 to 10 and add a retry interval in TxnHandler . java to improve deadlock handling and
refactor X - axis and Y - axis settings in BarChartActivity , LineChartActivity1 , and LineChartRenderer classes to improve clarity and
added utility methods for validating printable characters in the FsUtils class to enhance character validation and ensure proper handling of system names
rename selenide . in ( ) to selenide . using ( ) for consistency .
add process plugin configuration to the project build request so that we do n ' t have to add it to the result .
updated return values in ProxyConnectionManager , ProxyOutputStream , and ServerTrafficCounter in ProxyConnectionManager , ProxyConnectionManager , and ServerTrafficCounter to
updated resource path handling in ITSystemTest . java to ensure resources are correctly located based on the existence of the google - cloud - vision directory
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , ActiveConnectionRecord , ActiveConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser
do n ' t show admin button in community list servlet if it ' s admin
added AtomicInteger for long and short compaction thread counters in CompactSplit . java to ensure thread - safe incrementing of threads during compaction
updated the method to retrieve the package name from resources instead of the application ' s package name to ensure the application uses the correct resource package for wall
added a method to retrieve players in a plot visible to improve player visibility handling for plots in the plot
refactor AndroidManifest , ResName , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest . java for improved clarity to enhance maintainability and readability of the test code
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _
updated attribute name from " referencedContainer " to " referencedContainer " in ` SchemeGenerator . java ` and added a new test for the buildable
removed encryption checks for key and initialization vector in UploadFileOperation . java to simplify the key generation process and improve code readability
added @ Stability annotation to WorkProfileTest . java to address issue b / 243688989
added a conditional check for bucketing version in TezCompiler . java to ensure that only valid bucketing versions are processed in TezCompiler .
updated the cursor position setting method from ` setCursorPosition ( x , y ) ` to ` input . setCursorPosition ( x , y )
refactor ` LockFreeBucket ` class to extend ` AbstractBucket ` and add ` LockFreeBucket _ FinalFields _ CacheLinePadding ` class
add tpstats to nodeprobe . printthreadpoolstats ( ) . patch by jbellis ; review by jbellis for cassandra -
updated the method to retrieve the maximum bitrate from user preferences in ExternalPlayerActivity and PlaybackController to ensure the maximum bitrate is set from
added methods to check if a span ID is present and modified conditional logic in ZipkinHttpSpanExtractor to improve clarity and functionality of span debug handling
do n ' t set userpaymentaccounts in mutableofflinedatamodel . getuserpaymentaccounts ( )
refactor ( completion contributor ) : use right - aligned method instead of reflection
added a call to set the project in LauncherUtils . java to ensure the correct project is used for file operations
updated the ` JsBundle ` and ` JsLibraryBuilder ` classes to include ` ProjectFilesystem ` as the root path in the build process
refactor multiple Java files related to envelope and data binding functionality to improve code organization and maintainability across the application
[ hotfix ] [ connector ] fix typo in metricsdslcontext
refactor VersionBuckConfig to remove the interface versionConfig and simplify the code structure to improve code clarity and maintainability by eliminating unnecessary interface
added a try - catch block around the bindShadowClass method call in Robolectric . java to handle potential TypeNotPresentException when binding
changed the visibility of the validateTypes method from static to public and updated the error message format to improve accessibility of the validateTypes method and enhance clarity
chore ( bazel ) : update gapic - generator - java to 2.1 . 0 and update gapic - generator - java to 2.1 .
added SLF4J logger and LoggerFactory imports in SimulationStatus . java to enable better debugging and monitoring of simulation state changes
updated the version number from 138 to 150 and changed the font position from 138 to 150 to reflect the new version of the splash
added a call to ` runLater ( ) ` in ` UserInterfaceComponentImpl . java ` to ensure notifications are added on the main thread
added a mock method to return a list of return values in the AdditionalAnswers class to enhance test coverage and ensure correct behavior of the mock
corrected a typo in the error message for the non - string partition column to improve clarity and accuracy of the error message
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase . java ` to verify the functionality of LineFileDocs in
added a method to retrieve the version code from the MainApp package to improve code clarity and maintainability by centralizing version code retrieval
camel - 14263 : camel - bean - implicit method call should not throw an exception if the body parameter be a string or input stream
replace ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to ensure consistency in
added support for handling ByteBuffers in IndexBufferObject , VertexBufferObjectWithVAO , and VertexBufferObjectWithVAO classes to improve performance
added a transition for the " forgotPassword " transition to the login form in the password management web flow to ensure the user must change the password
rename JerseyClientConfiguration class to improve clarity to enhance maintainability and readability of the codebase
[ log4j2 - 1349 ] console inbound and outbound channel adapter should not use class reference
updated output statements in InstanceOfPatternMatchTest . java and removed redundant type checks in RemoveRedundantTypeCastTest . java to improve code
added methods to check if an array is empty in StringDict and implemented a method to check if an array is empty to improve data integrity by preventing
added a ` AutoCloseable ` interface to the ` GenericContainer ` class and modified ` GenericContainerRuleTest ` to support customization of container
updated log level from info to error in MediaInfo . java and added exception handling in RendererConfigurationTest . java to improve logging clarity and ensure proper
added support for the " schemapattern " option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to allow users to specify a schema pattern for
bcjsse : return empty id instead of null if tlssession be null .
refactor ratio calculation and bitmap creation logic in AndroidGraphics . java to improve readability and maintainability of bitmap creation logic
refactor Base64 class to improve code readability to enhance maintainability and facilitate future updates
[ gr - 16233 ] add miss fallback method to llvmglobalcontainer . getstackfromthreadnode ( ) .
simonstewart : ignore the webdriver test for iphone and ipad
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
changed the type of ` resName ` and ` resId ` from ` ResName ` to ` int ` in ` AttributeResource ` and `
refactor TLS file resolution logic in DefaultDockerClientConfig and DockerContextMetaFile classes to improve readability and maintainability of TLS verification logic
corrected the method name from ` tearDown ( ) ` to ` setUp ( ) ` in ` SimpleReactiveElasticsearchRepositoryTests . java ` to
modified the handling of type variables in the ` Attr . java ` file and added a new class ` T6450290 . java ` with
added configuration for logging levels in LoggingFlags and LoggingOptions classes to allow customizable logging levels based on configuration
added logging statements to LauncherModel , SecondaryDropTarget , and ModelWriter classes for better visibility into package removal processes to improve debugging capabilities and
added allFilesOption ( ) methods to FileActivity , FileDisplayActivity , and updated PreviewImageActivity to navigate to the root of all files
added methods ` forEachOperation ` , ` forEachOperation ` , ` hasMatching ` , and ` hasMatching ` to ` MutationOperationGroup ` to
updated the calculation of ` numPredictiveAppCols ` to use ` isPhone ( ) ` instead of ` Math . max ( numColumns
added UTF - 8 encoding to the String initialization in StringUtils . java to ensure proper handling of character encoding in string processing
added RequestMatchers class and corresponding tests in RequestMatchersTests to provide utility methods for matching request matchers in the security framework
mow - 169 fix for ggb - 136 , ggb - 136 , ggb - 136 , g
updated calculations for knob dimensions in ProgressBar . java to account for background height and width to ensure correct positioning of the knob
[ native ] use external _ functions . json instead of external _ functions . json
updated the ` permuteArgs ` method to include ` extra _ L0 ` and ` extra _ L4 ` in ` BruteArgumentMove
added a condition to check if the state handler is invalidated in the gesture state check to ensure proper handling of gestures when the handler is invalidate
updated layout calculations in DynamicGrid and Workspace classes to use constrained long and short edges instead of largestSize to improve layout responsiveness and ensure proper
added a condition to check if the redir file is a " / robots . txt " file in HttpRobotRulesParser . java to ensure
[ netbeans - 4028 ] remove unused import and add warning icon to jbrowsemodule .
updated widgets in AdvancedGameSetupScreen to use " createWorld " and " return " instead of " continue " to improve clarity and consistency in the
updated the null check condition in UDFOPDivide . java and added a new test class TestUDFOPDivide . java to ensure
reformatted code for improved readability and consistency to enhance maintainability and clarity of the code
added constructor argument for filterProcessesUrl and " requiresAuthenticationRequestMatcher " in FormLoginBeanDefinitionParser and LogoutFilter classes to enhance configuration flexibility for
added onDestroy method to ShareActivity and ContributionsActivity to ensure proper resource cleanup to prevent memory leaks
replaced ` thumbNail . getTag ( ) ` with ` thumbnail . getTag ( ) ` in ` WallpaperPickerActivity . java ` to ensure
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added request timeout configuration to RaftServerConfigKeys to ensure proper request timeout settings are applied based on the configuration
change logging level from error to debug in TsFileResourceManager and refactored resource degrade test in ResourceManagerTest to improve logging clarity and
added system properties to MavenModuleLoader in MavenModuleLoader . java to ensure proper initialization of model source and system properties
added readiness check metrics to the ServerMeter and updated related classes to enhance monitoring capabilities for readiness checks in the application
added custom model for animatedtorch to make it easy to see the animatedtorch block .
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when the writer is not initialized
added a method ` getHiveOnTezConfFromDir ` to retrieve the Hive configuration from a specified directory to improve code modularity
added a link to the Muting Users feature in FeaturesActivity to improve user experience by providing direct access to Muting Users
added a property to set " jdk . reflect . useDirectMethodHandle " to " false " in initializedProperties to disable direct method handle usage for
hbase - 25817 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] add the ` ` plugins ' ' directory to the ` ` lib ' ' and ` ` plugin ' '
use getword ( ) . getpronunciations ( ) instead of getpronunciations ( ) . getword ( )
updated JSON string formatting in JsonUtilsTest . java to improve consistency in JSON formatting
added ` id ` assignment in ` TimeLineCursorAdapter ` , ` TimelineArrayAdapter ` , and ` Compose ` adapters to handle
added a warning log statement to indicate that the underlying ring buffer data related to reliable topics is lost during topic termination
do n ' t throw an ioexception if there be no class to analyze
updated import statement from ` Key ` to ` PublicKey ` in ` KeyFetcher . java ` to ensure compatibility with the latest security library changes
changed the initialization of ` isIncompatible ` from false to true in ` DLNAResource . java ` to ensure that the resource is properly in
updated the method signature of ` createAccount ` from ` Account ` to ` AccountCreateContract ` in ` RpcApiService . java ` to ensure
pdfbox - 2576 : check for non - empty range array before use it
http : / / issues . apache . org / jira / browse / amq - 4671 - fix messagelistenerredeliverytest fail on
enable off - heap format by default ( # 113 )
modify title handling in FeedUpdateService to prevent truncation of title length to ensure title does not exceed 2048 characters
updated the handling of the preview panel in JColorChooser and added a new Test6977726 class to improve code clarity and ensure the preview panel
change log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity during extension checks
added a null check for reusable bitmap before setting it in the bitmapFactoryOptions to avoid potential NullPointerExceptions when retrieving a reusable
added layout parameters getter in FakeView . java to provide access to the layout parameters for better layout management
added a check to throw an IllegalStateException when a Cursor is already closed to ensure that IllegalStateException is thrown when attempting to access an already closed cursor
pdfbox - 2576 : do n ' t create a page tree if there be no parent
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private String field ` ts ` and its getter and setter methods to the ` Message ` class to provide access and modification capabilities for the
refactor error handling to use a separate utility class to improve code organization and maintainability
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the class from other packages
remove legacy parameter from request . gethints ( ) in isochroneresource
changed access modifiers of test classes from public to package - private in multiple test files to enhance encapsulation and improve code readability
refactor CSRF setting code into a separate method ` setCSRF ` to improve code readability and maintainability
added support for bootstrap classes in EclipseLoaderPatcherTransplants . java to ensure proper class loading behavior based on the bootstrap condition
add support for disable numeric feature in excel parser
hive - 13232 : hiveconf . defaultvalue ( ) should be debug level ( ashutosh chauhan via thejas n
added null checks for axes , buttons , and buttons in Lwjgl3Controller and Lwjgl3ControllerManager classes to improve error
updated import statements from ` cucumber . api . java ` to ` io . cucumber . core . backend . ObjectFactory ` in ` WeldFactoryTest
refactor port forward saving logic in PortForwardListActivity . java to improve code readability and maintainability by reducing redundancy
added a new configuration property ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter methods to control the behavior of snapshot data
refactor file handling in SyncedFolderObserver to check for null values before processing to improve robustness by preventing potential null pointer exceptions during file operations
refactor LocationMarshaller class to improve code structure to enhance maintainability and readability of the code
removed trackpadMotionEvent checks in StatusBarTouchController . java and updated conditions in TouchInteractionService . java to simplify gesture handling logic and improve
hive - 13232 : remove vectorreaderimpl from llap - io ( sergey shelukhin , review by ashutosh
updated import statements to use Matchers instead of ArgumentMatchers across multiple test files to ensure compatibility with the latest Mockito library version
replaced ` getRelativePathName ( ) ` with ` getRelativePath ( ) ` in ` AbstractPathSourcePath ` and ` AbstractPathSourcePath `
refactor SegmentMapper and CompositeTransformer to accept RecordReaderFileConfig as a parameter to enhance flexibility by allowing configuration of record readers during transformation
added a null check for the extractor variable in ControllerMethodInvoker . java and updated its usage in Params . java to ensure that the extractor is
volume : fix max max secondary storage limit calculation for unlimited volume
add guiscreenevent . potionshiftevent ( ) to the inventoryeffectrenderer to prevent the effect of the potionshiftevent . close #
added a deprecated constant for cold reads to omit in SizeTieredCompactionStrategyOptions to indicate that these options should no longer be used and may be
added a call to stop the leech thread in ClientTest . java to ensure proper resource management and prevent potential memory leaks
[ issue # 5963 ] fix the popmessageprocessor to handle retry message ( # 5963 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable the test until the underlying issue is resolved
renamed ` MongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and updated its usage in ` MongoReactiveAuto
added upgrade request and response handling in UpgradeConnection and implemented a test for the upgrade request in ClientConnectTest to ensure proper websocket connection handling and
added timeout functionality to AndroidImplementation to allow dynamic configuration of connection timeouts
refactor user and team access permissions retrieval in GitblitClient and RepositoriesPanel classes to improve permission management for repositories based on user and team
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing for quoted cast
updated assertions in Misc . java to check for the root directory and added a method to determine if the file is writable based on the operating system
refactor FixedThreadExecutor to use dynamic thread group and thread per group configurations instead of hardcoded values to improve flexibility and maintainability of
added null check for the field before checking if it contains " catalogname " to avoid potential NullPointerException when field is null
replaced CasEventListener with InitializingBean in multiple files to standardize event handling across the application
refactor the animation end logic into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by encapsulating
added a close method to the DeflaterOutputStream in RegionFile . java to ensure proper resource management by closing the DeflaterOutputStream
added a new file ` gsp001 . java ` that tests JVMTI GetSystemProperty can retrieve certain system properties at early phase Agent _ On
fix issue where bean bean can not be inject . patch provide by michael krugler .
[ jme3 ] export input and output capsules for camera control .
refactor PopupNotificationPanel to use SwingUtilities . getWindowAncestor for window disposal to improve code readability and maintainability by reducing code duplication
replaced NoInstanceException with InferenceException and updated related exceptions in the Infer class to improve clarity and specificity of exception handling during inference
added a method ` getFeatureValue ( ) ` to return the feature value in ` FeatureField . java ` to provide access to the ` featureValue
changed the parameter type of the ` after ` method from ` int ` to ` long ` in ` Mockito . java ` to allow for more precise
added ` OnBuild ` and ` ExecutionDriver ` fields to the ` ContainerConfig ` classes and corresponding getter and setter methods in ` Info ` to
updated icon setting logic in Toolbar . java and FlowLayout . java to handle right - to - left layouts more effectively to improve user interface consistency
added enablePositionIncrements configuration and modified the return statement in StopFilterFactory to allow configuration of position increments for the StopFilter
updated email test to use a new InternetAddress instance instead of a hardcoded value to improve email accuracy and clarity by using a new InternetAddress
set mTryShareAgain to false in FileActivity . java to ensure proper handling of file sharing behavior
added support for tty name detection in JansiNativePty . java to ensure the application uses the correct tty version based on the specified
refactor bandwidth calculation to use byteSize instead of bytes to improve code readability and maintainability by using a unified byte size variable
replaced ` Then ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to improve test reliability by ensuring
updated URLs in EaseeBindingConstants to use " https : / / easee . cloud / api / { siteId } / {
[ hotfix ] [ kafka ] increase kafkaioit startup attempt in kafkaioit
replaced ` allOf ` with ` is ( itemName ) ` in ` SearchResultMatcher . java ` to improve readability and maintainability of the
added SSL trust management functionality in OkHttp . java to ensure secure connections to the application
replaced ` mA11yLongClickListener ` with ` buttonView . setOnLongClickListener ` in ` NavbarNavButtonController . java ` to
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` and ` StringPtg . java ` to
added nullability checks for stdout and stderr in ShellStep . java to ensure that workingDirectory is not null to avoid potential NullPointerExceptions
[ log4j2 - 1342 ] increase asyncappendertest timeout to 10 second
updated methods in AbstractDatabase to use objectName instead of tableName for improved clarity to enhance code readability and maintainability by using more descriptive
added a boolean field ` inputChanged ` and modified input field validation logic in ` MaterialRenameDialog . java ` to improve input field validation and ensure
added methods to set display state in ShadowDisplay and corresponding test in ShadowDisplayTest for post - KitKat fields to ensure accurate state handling of displays in Doze mode from Lollipop onward
[ geos - 5131 ] add support for direct invocation service in dispatcher
added support for handling GWT keycodes KEY _ X and KEY _ Y in GlobalKeyDispatcherW . java to enhance key input handling for
updated SQL query conditions to include pg _ catalog . pg _ depend dep and pg _ class pkic to ensure compatibility with PostgreSQL versions
added @ Nullable annotation to message initialization in QueueChannel . java to improve code clarity and ensure message is always initialized
removed IOException from the ` getPathsFromResource ` method and replaced the ` jarPath ` and ` pathUri ` variable with ` pathUri `
added support for Jenkins nodes in remote collector based on the JENKI NODES _ SUFFIX suffix to enhance application monitoring capabilities based on the Jenkins
updated attribute resolution in HeadersBeanDefinitionParser to use resolveAttribute for resolving placeholders to improve code readability and maintainability by centralizing attribute resolution logic
hbase - 26219 log message should be log only if the file be at the end of the file .
added a destroy method to destroy registry and metadata reports in DefaultApplicationDeployer and NacosRegistry classes to ensure proper resource cleanup and prevent potential memory
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use a switch statement for handling status codes based on SPDY version to improve
refactor AuditEvent and AuditEventTests to improve code readability to enhance maintainability and ensure correct JSON output formatting
updated the return statement in Interpolation . java to include a check for FLOAT _ ROUNDING _ ERROR and adjusted the return value to zero to
corrected a typo in the path variable in ForgeWorldEdit . java to ensure the path starts with a leading slash instead of a leading
refactor the addition of the DxExecutable string in the builder to improve code readability and maintainability
added unit tests for PointRangeQuery equality and lower and upper point comparisons in TestPointQueries . java to ensure that the lower and upper bounds
hbase - 13347 testhfilecleaner should use mock archivedhfiledir instead of hfile _ archive _ directory
do n ' t show the file name in the receive file conversation if it do n ' t match
do n ' t throw jce when fail to connect to cluster
[ hotfix ] [ table - planner - blink ] set chainingstrategy to always
updated ` FilterInvocationDefinitionDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap `
added baseline and testHashMap methods to QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWriteBenchmark classes to enhance
added a new HashMap to the G _ SCH _ B variable in HybridPlotWorld . java to initialize the G _ SCH _ B
added null check for fields and modified identifier handling in GroovyEngine . java to improve robustness and maintainability of the identifier processing logic
set drawable to false for ggb - 260 ( fix for ggb - 260 )
added timeout and TCP keepalive configurations in HiveConf and updated TServerTransport instantiation in HiveServer to improve socket management by allowing configurable timeouts
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve clarity and consistency in method naming
no effective change - remove unused import
refactor RealtimeSegmentRelocator to use lambda expressions instead of Java ' s joda time library to improve code readability and reduce boilerplate
cloudstack - 2536 : fix vpc creation by admin
updated the calculation of window alpha in WindowTransformSwipeHandler . java and adjusted the condition in FloatingIconView . java to improve the accuracy of
updated the fatal error message in SecurityNamespaceHandler to include the latest version of Spring Security to ensure users are aware of the latest schema requirements for Spring
renamed multiple classes with ` IterableOfProtosFluentAssertion ` , ` MapWithProtoValuesSubject ` , and ` MultimapWithProtoValuesSubject
[ hotfix ] make field final in disruptorprovider and disruptorprovider
added a new file TestConfigureUDF . java and updated ExprNodeGenericFuncEvaluator . java for testing UDF configuration to enable testing of U
updated regex pattern matching in LogMessageWaitStrategy and added Parameterized class in LogMessageWaitStrategyTest to improve matching accuracy by matching explicit line endings
replaced ` logger . debug ` and ` logger . info ` calls with ` logger . warn ` and ` logger . info ` calls to simplify logger
rename ` updatePurgedShardNodes ` to ` deletePurgedShardNodes ` across multiple classes to improve clarity and consistency in method naming
add 17 - preview to the javalanguagemodule to make it work with java 17 .
add timeout to wait for compression job to finish in timebasedrollingpolicy
[ java ] make sure lastlocationaccess be not null before check for memory usage .
added a new method ` getSteps ( ) ` to ` SimpleJob ` to return an unmodifiable list of steps to enhance encapsulation and
removed the ` fromBase58 ` and ` toBase58 ` fields from multiple classes to streamline error handling and improve code clarity
refactor currency pair retrieval in BitstampAdapters . java to improve code readability and maintainability
fix duration conversion of longtasktimer ( # 2948
[ euphoria - core ] avoid use custom partitioner if it ' s not a hashpartitioner
refactor colorValue and pubkeyId retrieval to use CharSequence instead of String for better type safety to improve code readability and maintainability by reducing
refactored initializer to use the new databaseversionhandler instead of the new incompatibledatabasehandler
added a constant for MAX _ TWEETS _ IN _ CONVERSATION and modified the condition in ExpansionViewHelper . java to
increased the refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map refresh to become available
[ java ] ensure that the persistence of persisted byte size for deleted tail pages do n ' t exceed the capacity of deleted tail pages .
fix : use glowserver . class . getimplementationtitle ( ) instead of glowserver . class . getimplementationtitle ( ) .
added a ` grow ` method to handle large buffer sizes in ` DataIO . java ` to improve memory management by ensuring the buffer grows
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to retrieve the submitted file name to provide access to the
added markReadForLoad ( ) method to LauncherFragment . java to ensure proper marking of read items for loading
added ClassNotFoundException to the main method and modified the instrumentJar method to handle negative array size exceptions to improve error reporting for negative array size exceptions during
added a new method ` checkForSpillPossibility ` to check partition selection before flushing to ensure proper handling of out - of - memory
replaced direct calls to ` info . info . getDocStoreSegment ( ) ` with ` dsName ` in ` CodecDocStoreFiles ` to
added support for a default name ID format in SamlProfileSamlNameIdBuilder to ensure compatibility with SAML name format specifications
added redirect functionality and error message for password change aborted to improve user experience by providing feedback when password changes are aborted
removed unnecessary closing brace in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle time
deleted the FontScalingTest . java file to remove unused test class to streamline the codebase
refactor RRD4jPersistenceService to improve null checks for filterBeginDate and filterEndDate in RRD4jPersistenceService . java to
added a check to return early if ` numVectors ` is negative in ` GenericUDAFComputeStats . java ` to prevent potential errors
test : migrate executablereftest to junit 5 ( # 4549 )
added null checks before setting the view and glass pane in JLayer . java and created a new test class bug6994419 . java to
camel - 14284 : added support for wiretap expression in camel - spring - boot .
changed the visibility of the setAction method from public to protected to restrict access to the setAction method for better encapsulation
add topn option to planner . enable _ topn to allow planner . enable _ topn to be enable by default
[ java ] remove unnecessary ` . aerondirectoryname ( ) ` call from test .
fixed - rbatch . execute ( ) method do n ' t throw exception if connection be already shutdown . # 3811
refactor HiveConf to use FileOutputStream and FileOutputStream instead of ByteArrayInputStream for configuration variable retrieval to improve performance by reducing the number of byte array
updated the model creation method to use criteria . getDevice ( ) instead of Device . defaultDevice to ensure the model is created with the correct device
added onCreateOptionsMenu method in SimulationViewer . java and overridden onMenuItemSelected method in SimulationViewer . java to enhance menu functionality for better
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
fix issue with hawtio directory not be set by system property .
added a condition to return SINGLE _ SPACE when no comments are present to ensure correct handling of empty comments and improve code readability
changed ` mClosed ` to ` volatile ` in multiple dictionary classes to ensure visibility of changes to these variables across multiple threads
removed the printStackTrace ( ) method from Throwable in ContextHandler . java to eliminate unnecessary stack trace printing for better debugging
updated CustomItemDropTest to extend TestUtils and added unit tests for custom item drop functionality to improve test organization and ensure compatibility with regression testing framework
added a check for non - existent partitions in DDLTask and related classes to handle the case where a partition does not exist
patch by jbellis ; review by brandonwilliams for cassandra - 151
[ java ] remove unnecessary controlrequeststreamid call in echoservicenode and basicauctionclusteredservicenode
wfs : add support for spatial operator ( relate to http : / / wiki . geogebra . org / topic / geogebra
added import for LuceneTestCase and annotated BasicDistributedZkTest . java with @ AwaitsFix annotation to address issue SOLR - 2161
added a condition to check if the lastValid index is within client _ PREFACE _ START and modified the condition to handle preface matching to improve
[ java ] change isingressexclusive from true to false in aeroncluster . isingressexclusive
[ flink - 20536 ] [ hbase ] add hfile . block . cache . size to hfile . block . cache . job
updated record counting logic in JSONRecordReader to track the current running record count to improve accuracy of record processing by tracking the number of records processed
added filtering for year items in CategorizationFragment to exclude specific year variations from merged items
updated drawColor calls to use zero instead of 0x00000000 in CacheableTextView , CellLayout , CellLayout , and HolographicOutlineHelper classes
added a check for OpenGL ES 2.0 compatibility in Mesh . java to ensure compatibility with OpenGL ES 2.0
ww - 3511 set actioncontext to null in backgroundprocess
added a new method ` getUnescapedName ` and modified table name handling in ` BaseSemanticAnalyzer ` , ` SemanticAnalyzer ` , and
added connection timeout configuration and changed the ` count ` variable from static to static final in ` StubConnection ` to ensure that the count cannot be re
added test cases for querying the percentile function in TestHiveAggregationQueries . java to enhance testing coverage for percentile calculations in order queries
updated DEFAULT _ IDLE _ TIMEOUT from Duration . ZERO to Duration . ofSeconds and refactored timeout handling in WebSocketChannel . java to
updated the method to retrieve file shares based on the user ' s platform account to ensure the shares are retrieved for the correct user context
refactor import statements and improve type safety in Inet6Address . java to enhance code clarity and prevent potential ClassCastExceptions
refactor button management methods in PlaybackControlView to improve clarity and maintainability to enhance code readability and maintainability by using more descript
updated the session ID parameter in the ` isPresent ` method from ` this ` to ` id ` in ` Token . java ` to improve session handling
updated the method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary .
make useexceptionprobability configurable by default
updated the newlateColor assignment logic in PredictedAppIcon . java to differentiate between themed and non - themed icons to improve visual
guacamole - 102 : remove dependency on mysqluser . touserwithblobs ( )
added " center " to the list of aliases in the Middle class to ensure consistency in naming conventions across the application
added dependency injection for DirectUpload in CommonsApplicationComponent . java to enable dependency injection for direct uploads in the application
added space settings for left , right , and right ranges in BarChartActivity and BarLineChartBase classes to improve layout spacing and ensure correct spacing
added support for ` HasJavaAbi ` and ` VERIFIIFIED _ SOURCE _ ABI _ FLAVOR ` in ` Android
added operation event status type handling in OnlineHubService and changed the services list from final to non - final to allow dynamic initialization of the services list
added debugging output for method parameter annotations in DexAnnotation . java to improve debugging and ensure proper handling of visibility annotations
changed the ` startBundle ` method from ` @ StartBundle ` to ` @ Setup ` and added a teardown method to the ` JmsIO
updated the process creation in SortedArrayStringMapTest . java to include a classpath variable to improve clarity and maintainability of the test code
updated file loading logic in PackageResourceLoader to use " res " instead of " values " for Android to improve clarity and consistency in resource path handling
removed ` this . this ` references from method calls in ` DataSet . java ` and updated exception messages in ` DataSet . java ` to improve code
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
added escaping of percent in error messages in ShouldHaveMessage . java and updated related test methods in ShouldHaveMessage _ create _ Test . java to
fixed - jcache . getcachemanager ( ) . geturi ( ) do n ' t close cachemanager . getcachemanager ( ) .
set log level to info if exception be activititaskalreadyclaimedexception
refactored the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
update entitypropertiespacket to use instance . getBaseValue ( ) instead of instance . getValue ( ) to improve accuracy of entity property serialization
updated SonosAudioSink . java to use ThingHandlerHelper for better initialization checks to improve code clarity and ensure proper handling of non - initialized
increase countDownLatch . await ( 5 , TimeUnit . SECONDS ) from 500L to 5 seconds in ContextRegisterListenerTest and SpringMvcClientBeanPost
changed log level from info to debug for determining effect light type in LightThingHandler . java to improve logging granularity for troubleshooting
add database . properties to asyncjobmanagerimpl to reduce the number of concurrent execution .
updated method parameters and message formatting in Reporter . java and ReturnsSmartNulls . java to improve readability and maintainability of the code
updated the type parameter of the ` generate ` method in ` DataGenerator . java ` to ensure type safety and improve code clarity
updated module - info . java and package - info . java files across multiple packages to ensure consistent module dependencies across the application
added a check for non - empty physical column names in OrcPageSourceFactory . java and added a new test for Orc use with empty
added a call to ` mixPlay ` in the ` Engine . java ` method to enhance the functionality of the ` mixPlay ` method in the
updated JComponent , SynthTextPaneUI , and SynthTextPaneUI classes to improve code organization and maintainability
fix a bug in test that be cause the test to fail .
simplified the condition for checking leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability
refactor matrix vector multiplication logic into a separate method ` isVectorMatrixMultiplication ` to improve code readability and maintainability
add find and find methods to selenideelementproxy to allow search
[ java ] set default audio sink sample rate when format . no _ value be specify .
make xssfname . getreference ( ) and xssfname . setreference ( string ) final
updated the target value from 60000 to 90000 in HighDimensionsTest . java to accommodate larger scale factors
updated the condition in SimpleTypeGT . java and added a new test method in GMLParserTest . java to ensure correct parsing of XML documents
added a new test class ` ClassPathXmlJobRegistryContextTests ` to validate the functionality of the ` ClassPathXmlJobRegistry ` to ensure
[ java ] use long array instead of float in motionpausedetector .
camel - 12320 : camel - restlet : deprecate consumer parameter in favor of consumer - advanced
camel - 14263 : camel - log : remove the showout parameter from camel - core
refactor ChromeTraceBuildListener to use a separate method for writing ChromeTraceMetadataEvent to improve code readability and maintainability by reducing duplication
added a condition to check if the order status is canceled or rejected before adding it to limitOrders to ensure only valid limit orders are added to
added pixel offset calculations and validation for image layouts in LCMSImageLayout . java to improve image processing accuracy and ensure proper handling of pixel offsets
refactor timestamp handling in Event . java and JrubyEventExtLibrary . java to improve clarity and maintainability of timestamp management
added a condition to return the resource if the path ends with a slash and added a test for real path retrieval in WebAppContextTest to ensure
updated the function name from " TypeErrorThrower " to " TypeErrorThrower _ GETTER " in ScriptFunctionImpl . java to correct the
updated variable names from " amt " to " scrollAmount " for clarity to improve code readability and maintainability by using more descriptive
updated import statements and added a null check for callerScope before setting guardsStage and stageFlags in GraphDecoder . java to improve code readability and
test : migrate sniperjavaprettyprinterjavaxtest to junit 5
updated URLOutputStream initialization to use try - with - resources for resource management to ensure proper resource management and prevent resource leaks
added entity annotations to the Mail class to facilitate the persistence of entities in the database
updated default settings for tablespace and index in the application to enable or disable tablespace inclusion based on the " includeTablespace " parameter
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to the ` metaDataBuffer ` and ` valuesBuffer `
added a check to clear field vector map if a non - empty file is present in ScanBatch . java and a corresponding test case in TestJson
updated failure strategy to include custom name handling and improved assertion in StringSubject . java and StringTest . java to enhance error messages for better debugging and
added a regex pattern for matching library names in LibUtils . java to improve code readability and maintainability by avoiding hardcoded strings
updated exception handling from ClassNotFoundException to Exception and Error in JrtJavaBasePackages . java and PackageHelper . java to improve error handling robustness
hbase - 26486 ensure file system be in safe mode before write to hdfs
updated error message formatting in TranslatingJavacPhaseTracer . java to include the exception type and message to improve debugging by providing more context on
[ mng - 5670 ] remove duplicate clone ( ) method from defaultplugincache
do n ' t fire the contact status change event when the presence status change .
remove unused requestdetails . withresourceandparams ( ) method from restfulservlet
added a new integration test class AccountInfoFetchIntegration to verify the retrieval of account information from the BTCE exchange
added mouse wheel functionality in VDUInput , vt320 , and TerminalView classes , and modified mouse wheel handling in TerminalView to enhance
replaced direct calls to ` getExtractionDir ( ) . toString ( ) ` with a local variable ` libraryPath ` and added a conditional check for
ebean - 1339 : remove deprecated @ columnhstore annotation , it be no longer use
add skin _ skin _ flags to the metadata index to allow the player to have a skin .
updated LoadBalancerWithServiceTests to use SLF4J logging instead of RequestFieldMatcher for master URL handling to improve clarity and maintainability of test
refactored code to improve readability and maintainability to enhance code maintainability and reduce duplication
replaced ` System . getProperty ( " os . version " ) ` with ` AccessController . doPrivileged ( new GetPropertyAction ( ) ) ` for
added a new constant for the file suffix and updated its usage in TemplateEngineFreemarker . java to allow dynamic configuration of the file suffix based on
fix bug in selectmessagequeuebyhash and add test for polygenelubricants
added animationcallback to hide the toolbar panel so that it do n ' t cause a crash .
fix regression in styledtextareavisual when there be no caret
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to utilize CxxBuckConfig for platform
replaced SimpleParameterAccessor with ParameterAccessor in multiple classes to enhance parameter handling capabilities in the repository
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added support for handling array types in DataUtilities and a corresponding test case in DataUtilitiesTest to ensure correct instantiation of arrays and validate default value functionality
added host name verification logic in SslContextFactory . java to ensure correct host name verification when the address is null
hbase - 26219 fix testfstabledescriptors . testcachehits test failure
danielwagnerhall : do n ' t try to delete a cookie by path in internetexplorerdriver
added a boolean variable ` mHasEndedLauncherTransition ` and modified the condition in ` AbsSwipeUpHandler ` to check if the launcher transition
added a meta charset attribute to the HTML header in HTMLListWriter . java and HTMLWriter . java to ensure proper handling of character encoding in the
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated the maximum length of the stats prefix in HiveConf and added a method to append a path separator in FileSinkOperator , FileSinkOperator ,
added a new class ` bug6337518 ` and created a new test class ` bug6337518 ` to address the issue of
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and ease of future modifications
refactor UserInfoActivity to improve code structure to enhance maintainability and readability of the code
added notifications for the ` HomeContentProvider ` in multiple services to notify changes to the content provider when a content change occurs
added functionality to manage the state of pressed and focused backgrounds in the BubbleTextView class to improve user experience by allowing background transitions based on
added error parameter to getFallbackResponse methods across multiple classes to provide more detailed error handling for fallback policies
removed conditional check for ` env . _ compile _ only ` when ` env . _ dest _ dir ` is not null to simplify the condition for
added null checks for tags in ChannelUri . java to prevent potential NullPointerExceptions when accessing tags
updated REGEX _ SPECIALS from " [ ] ( ) " to " [ ] ( ) " in RegexpUtil . java and added
added functionality to set the title of the action bar in FileActivity and updated the action bar title in FileDisplayActivity to ensure the action bar title
replaced ` getOnlyElement ` with ` getLastElement ` in ` PythonDslProjectBuildFileParser . java ` and added a new test for
updated the scheduled time from " * " to " 0 " in the CleaningService class to simplify the scheduling configuration for cleaner tasks
updated TransactionalValidationListener to validate table partitioned tables and updated imports for better handling of partitioned tables to improve validation accuracy for partitioned tables
added a comment in the SnapPuller class to clarify the functionality of polling in the SnapPuller class
changed the type of ` generatedKey ` from ` int ` to ` long ` in ` ShadowSQLiteDatabase . java ` and added tests for
reformatted the return statement in SimpleReferenceCache . java to improve code readability and maintainability
updated error messages in TestInlineUnloaded , InliningBase , InliningBase , and InliningBase classes to improve clarity and accuracy of reason
camel - 14284 : camel - jbang - increase the thread pool size to 10 .
deleted the HttpTestAccount001 . java file to remove unused test code to streamline the project
do n ' t swallow exception from dispatcher . handlerequest ( )
camel - 14263 : camel - cxf - add support for xop and xop data format in defaultcxfbinding
added a case for ' ~ ' in the ClientUtils class to handle special characters in the application
camel - slack : allow the slack consumer to set a default delay of 10 second .
add fireblockharving event when drop a block . close # 1671
updated layout parameters in TranscodingTab . java and added a new spacing in encodedAudioPassthrough checkbox in TranscodingTab . java to improve layout
added a new Java file ` bug8057791 . java ` implementing a JList rendering with NimbusLookAndFeel to demonstrate the use of NimbusLookAndFeel for
updated the flags _ field logic in LambdaToMethod . java and added a new LambdaInterfaceStaticField . java file with a static field to improve
refactor subscription manager initialization in RunnerBuilder and add a new test for EthSubscribeAvailable to improve code clarity and ensure proper functionality of WebSocket
added a null check for the ` to ` variable in ` ComposeActivity . java ` to ensure robustness by preventing potential NullPointerExceptions
added support for dictionary reading in ParquetFixedWidthDictionaryReaders and added a new test for it in TestColumnReaderFactory to improve performance and
refactor layout calculations for landscape orientation in PortraitPagedViewHandler . java to improve clarity and maintainability to enhance code readability and ensure
added Log annotation and LogInterceptor class to enhance logging capabilities in the application
updated the format of the dump string in QueuedThreadPool . java to include trace information to ensure that empty traces are not included in the output
added a ` Implementation ` parameter to the ` combinations ` method and updated related logic in ` CacheGenerator ` and ` CacheProvider ` to enhance
added a totalFrameSize parameter to the createReferenceMap method call to ensure the reference map is created with the correct frame size
refactor TypesafeConfigurator class to improve code clarity to enhance maintainability and readability of the configuration logic
camel - 16263 : camel - karaf : add karaf test for camel - graphql
updated main method names and added two new test methods in RFE2891944 . java to improve clarity and functionality of test cases
removed URL encoding for key and value in HttpClientIntroductionAdvice . java to simplify code and improve readability by eliminating unnecessary URL encoding
replaced the ` unsupportedPlatformTool ` class with a new class ` UnsupportedPlatformTool ` to improve code organization and maintainability by separating unsupported platform tool
updated the calculation of loopCount to use an integer instead of a double to improve type safety and clarity in log messages
added a size ( ) method to FlightConfiguration and FlightConfigurationImpl classes to provide a way to retrieve the number of entries in the configuration
[ drools - 5639 ] fix kie - kie - kie - kie - kie - kie - kie -
fix a bug in the vlc video layout , which cause some form to grow too much .
updated references from " bisq / bitsquare / issues " to " bitsquare / bitsquare / bitsquare / bitsquare / bitsquare /
updated the AUTHORITY string from " talon . provider " to " twitter . provider " in HomeContentProvider . java to reflect the correct
[ mboot ] make sure user . xml file exist before parse it .
added a call to bind the GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to enable the binding of the buffer
refactor ServerHttpSecurity class to improve security handling to enhance security mechanisms for better security management
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers to the HttpClientProperties and CasCoreHttpConfiguration classes to enhance HTTP request handling by allowing default headers to be set
add a new exception handler to handle invalid passwords in the error response .
deleted the NoOpConfigPathGetter . java file to the functionality is no longer needed in the project
updated the signingKey initialization to use Bytes . fromHexString instead of Codec . base16Decode to improve clarity and maintainability of the code by
replaced ` CascadedStyle ` with ` CSSName . FLOAT ` and added handling for float properties in ` FloatUtil . java ` to improve
planner - 224 add miss import for planningfactproperty , planningscorecollectionproperty , planningfactproperty , planningfactproperty , planningfactproperty
replaced ` CaseInsensitiveHeaders ` with ` MultiMap ` in ` getDefaultHeaders ( ) ` and added a new ` defaultHeaders ( ) ` method
replaced ` String ` with ` Charset ` in ` ProxyServer ` , ` Realm ` , and ` Realm ` classes to improve type safety
added a method to retrieve the job ID from the StepContext to ensure that the StepContext correctly retrieves the job ID from its job instance
refactor comparison methods in ExpandableUploadListAdapter and FileStorageUtils to improve readability and consistency in comparison logic
replaced error logging with debug logging in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity and reduce unnecessary error
updated import statements in LegacyAuthenticationHandlerAdapter . java to reflect the new package structure to improve code clarity and maintainability by using specific authentication handler classes
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other
filtermanager : do n ' t remove invalid filter if the owner key be the same
relate to github # 1010 : remove redundant wrap ( inputstream ) method from pgpkeyring
updated MinimalLockingWriteAheadLog to use BufferedOutputStream and added exception handling to ensure proper resource management and prevent potential resource leaks
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 . java ` and modified the column qualifier handling in `
refactor FocusTransitionTest class to improve test coverage to enhance reliability of focus transition functionality
updated import statement for GWT in ShareControllerW . java to ensure compatibility with the latest GWT library version
added a check for MapRedTask before retrieving job instances and improved error handling in CounterStatsAggregator . java to enhance robustness by preventing potential NullPointer
updated the initialization of the readListener variable in HttpInput . java to ensure the readListener is not null to avoid potential NullPointerExceptions
refactor color selection handling in AppearancePanel to use a listener for state change events to improve code readability and maintainability by encaps
changed the constructor parameters from false to hidden in TaskHelper . java to allow the task to be hidden based on processing state
http : / / issues . apache . org / jira / browse / amq - 4673 - fix failovertimeouttest failovertimeout
pdfbox - 4071 : close resource in case of exception
added import statement for DefaultParameterHandler in LanguageDriver . java to enable the use of DefaultParameterHandler in scripting operations
lsra : do n ' t set spill state if the loop depth do n ' t match
[ micronaut ] add micronautastbuilder . compile ( string , CompilePhase , boolean ) method to compile a groovy script .
fix ( pgwire ) : do n ' t call closeinternally ( ) in preparedstatement . execute ( )
set the default value of ` serviceAdvisorType ` to ` PYTHON ` in ` ServiceInfo . java ` to ensure the service advisor type is
replaced static resolver initialization with a thread - local resolver in GenericDatumReader . java to improve thread safety and management of resolving decoders
use buffer . append instead of buffer . write , a suggest by valerybokov
replaced ` new byte [ ] ` with ` memo ` for generating random bytes in ` SendCoinShieldTest . java ` to ensure that the output
added a new method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to set personalisation based on a date and locale
removed redundant if statements in CodeGenerator . java to streamline code by eliminating unnecessary duplication
removed the ' percent ' parameter from the ` scroll ` method parameters in multiple classes to simplify the method signature and improve code readability
changed the access modifier of the pointer variable from private to public and added reset methods to allow external access to the pointer variable
renamed ` ContentDigestHistory ` class to ` BdbContentDigestHistory ` and updated related classes to reflect the new class name to improve clarity and
castexpression : do n ' t implicitly cast to boolean if it ' s a boolean .
refactor the handling of accepted media types in AbstractResource to improve clarity and efficiency to enhance code readability and maintainability by using a boolean flag
added a new boolean variable ` false ` to ` TaskView . java ` to indicate that the task should not be displayed in the UI
added a method to check if a column type is auto - increment in CreateTableChange . java and implemented a method in LiquibaseDataType .
set the error text to a default value of " Command failed due to Internal Server Error " to provide a clearer error message for debugging purposes
updated import statements and modified command - line arguments in LocalManagementTest . java to improve code clarity and leverage new utility methods for performance data handling
replaced ` add ( currentStatus ) ` with ` push ( boosterStatus ) ` in ` BasicEventSimulationEngine . java ` to streamline
added support for binding and disabling the AJP connector in the GitBlitServer class to enable users to configure the AJP
added a new class ` Intersection03 ` and created a new test class ` Intersection03 ` with assertions to verify type casting to ensure
renamed the class ` EmbeddingTest ` to ` EmbeddingITest ` to improve clarity and specificity of the test class
added a native method to check if the toolkit thread starts before starting it to improve thread management by avoiding unnecessary thread creation
add option to compress bundle in parallel
show / hide surface in applet on window ( issue # 599 )
updated the temporary directory name from " RecordTransformationTest " to " Class . getName ( ) " in AbstractRecordExtractorTest . java to improve clarity
added new configuration parameters for fullNodeHttp , solidityNodeHttpApiService , and solidityNodeHttpApiService to enable conditional addition of service
added a service property to GoogleCloudFirestoreTicketDocument and updated GoogleCloudFirestoreTicketRegistry to support service - specific ticket counting to enhance ticket
refactor Generate class to improve code readability to enhance maintainability and facilitate future feature additions
updated the ` jsonFormat ` annotation to handle null values in JSON format to ensure proper handling of null values in JSON functions
added a ` DOTS _ ONLY ` flag and modified conditional logic in ` BadgeRenderer ` , ` IconPalette ` , and ` Shadow
removed the ' final ' modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to allow for subclassing of the method
added a new test method ` testInvalidExcludedPackageNamePatterns ` to ` OgnlUtilTest . java ` to ensure proper error handling for invalid
updated device Udid retrieval logic in AppleTest . java and added SDKName parameter in IdbRunTestsStep . java to ensure compatibility with
updated log level from error to warn and modified response handling in DefaultHttpClientFilter . java and TestDefaultHttpClientFilter . java to improve logging clarity and
added null checks for mScript in AllAppsView . java and modified state management in AllAppsView . java to ensure proper execution of
added a boolean variable ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to conditionally set shadow layers based on the
added teardown methods to TestColumnAccess , TestReadEntityDirect , and TestReadEntityDirect classes to ensure proper cleanup of tables , views , and
camel - 14263 : camel - core - xml - security - namespacehandler should retrieve parser by name instead of name .
updated conditional logic in BoundedLocalCache and added new test cases in BoundedLocalCacheTest to enhance cache functionality and ensure correct behavior of fast
updated RawConnection interface to extend WebSocketConnection and added complete methods for frame bytes to enhance connection management and ensure proper flushing during frame processing
added new test methods for verifying all assertions in SoftAssertionsPerfTest . java to enhance test coverage for softly assertions functionality
added a new constant ` TEST _ FAILURES _ EXIT _ CODE ` and modified the ` assertExitCode ` method in ` PythonRunTests
refactor the calculation of xAdvances in GlyphLayout . java to include conditional logic based on markupEnabled to improve performance by optimizing the
refactor score assertions in TestBooleanRewrites to use Java Streams for improved readability and efficiency to enhance code readability and maintainability by
updated the class reference from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` in ` TypeHandlerRegistry . java ` to ensure the
remove unnecessary type casting in playerconnection . flush ( ) .
added a boolean variable ` mStarted ` and modified the listener removal logic in ` Launcher . java ` and ` LauncherAnimUtils . java
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated match status checks in ReplicaAssigner . java to include NOT _ APPLICABLE status to ensure proper handling of non - APPL
changed the default value of MEDIAPARSERV2 from false to true to enable media info parsing in the renderer configuration
add support for interceptor type in aop proxy . fix # 586 .
added assertions and verification for table truncation and partition creation in FolderPermissionBase . java to ensure proper permission management during table truncation operations
do n ' t publish the status if the provider be in the wrong state .
updated color calculation in PastelColor . java to use a fixed color base of 180 to improve color diversity for better user experience
refactor ScriptEngineFactory class to improve code organization to enhance maintainability and readability of the codebase
updated the handling of original and outline bitmaps in HolographicViewHelper . java to improve visual representation by using original and outline bitmaps for better
refactor request method handling in CloudClient . java to improve clarity and error logging for unsupported request methods to enhance code readability and maintainability by
add a ` ` containing ' ' phrase to the multiwordpreprocessor . gettags ( ) .
removed IOException import from IOChannelUtilsTest . java to clean up the code and improve readability
updated class loading logic to handle HivePassThroughOutputFormat based on class name to improve compatibility with Hive ' s pass - through output format handling
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated the boundary check in the if condition in DOMBuilder . java to ensure that the length does not exceed the bounds of the input stream
updated the logic for retrieving hierarchical undirected graphs in ClusteringCoefficient , EigenvectorCentrality , and HitsUI UI
camel - 18131 - camel - translate : add validation error for unsupported service in this region
added a new file ` TestClass ` with methods with static methods and default methods in ` PublicStaticInterfaceMethodHandling . java ` to demonstrate method handling
camel - 14263 : defaultkeyselector should use camelcontextaware instead of camelcontext . resolvepropertyplaceholders
removed unnecessary type checks for Throwable in LogResolverBean . java to simplify the code and improve readability by eliminating unnecessary type checks
updated several security - related Java classes with new implementations to enhance security features and maintain code
update JGit version from " 1.0 . 0 " to " 1.0 . 0 - r " and sort jars in Launcher to reflect the latest
camel - 14263 : camel - http - client - support path parameter in camel - http - client
added transformer namespace handler and test case for it .
updated BACK _ FACTOR and REWIND _ TIME constants in ResumeObj . java and added conditional checks in ResumeObj .
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and modified ` fireActionEvent ( x , y )
updated usage formatting in UtilityCommands . java and removed unnecessary checks in DocumentationPrinter . java to improve code clarity and ensure proper handling of empty usage
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in the attribute naming
refactor ` setSeqFiles ` and ` setUnseqFiles ` methods in ` CrossSpaceCompactionResource ` , ` RewriteCrossSpaceCompaction
removed redundant @ Override annotations in Observation . java to improve code clarity and maintainability
refactor synchronization logic in ProjectPropertiesModelImpl . java for clarity and consistency to improve code readability and maintainability
fix synchronization issue in abstractsootfieldref . getfieldunsafe ( )
add elastic naming convention ( fixes # 102 )
added new method ` addListener ` and ` currentUnits ` to the ` IController ` class and updated related imports in ` IController ` to
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify rendering behavior with a large horizontal rule
replaced System . out . println ( ) with TTY . println ( ) in TypeSystemTest . java and PartialEscapeAnalysisPhase . java
updated multiple Java files for consistency and clarity to improve code readability and maintainability
updated the condition from ` = = 0 ` to ` < = 0 ` in ` LogInspector . java ` to ensure that the condition correctly handles
updated methods in IntFloatMap , IntIntMap , and IntIntIntMap to return values instead of zeroValue to improve code clarity and ensure
refactor icon setting logic in ImageDownloadService to call the Display . getInstance ( ) . callSerially for improved performance to ensure icons are set
added a null check for the registered variable in HandlerRegistration . java to ensure proper handling of cases where the registration is not initialized
removed the ` hasNextSibling ( ) ` native method and updated return statements in ` HtmlNode . java ` and ` IeNavigator . java `
added null check for results in RedisDistributedMapCacheClientService . java to prevent potential NullPointerException when results is null
updated logging statements in MobFileCache . java to include cache configuration and eviction parameters to improve clarity of log messages for better debugging and monitoring
refactor ColConvCCMTest . java file to improve code readability and maintainability
refactor variables and methods in Check . java for improved clarity to enhance code readability and maintainability by reducing redundancy
pdfbox - 4071 : use generics for region and regioncharacters , a suggest by valerybokov
replaced Float . toString ( jsonData ) with String . asString ( ) in Json . java and added a main method in Json . java to
added a return statement in GenericFileConsumer . java to ensure proper termination of the method execution
added a Runnable to run the event dispatching on the Event Dispatch Thread to ensure the event dispatching occurs on the Event Dispatch Thread
updated the calculation of the maximum message size in CompressExtension . java to ensure the maximum message size does not exceed binary message size limits
corrected the addition and decrement logic in TestAttachDriver , TestFancyCar , TestFancyCar , and TestFancyCar classes to
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security comparison by using a more
added imports for LocalDate , LocalDateTime , and UTC , and modified date handling in JdbcSerDe . java to improve date - time representation and
updated version from 2 to 3 and modified metadata handling logic in ParseData . java to ensure compatibility with versions less than 3
added ConditionalOnBean annotation to FlywayAutoConfiguration and updated FlywayAutoConfiguration to include EntityManagerFactoryDependsOnPostProcessor to ensure
added sorting functionality to the ClassesImpl class to ensure the classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated the ` waitForLauncherCondition ` method in `
refactor SharedInformer class to improve code structure to enhance maintainability and readability of the code
updated MemoryScope and ResourceScope handling in TestCloseScope0 . java to improve compatibility with different JDK versions and ensure proper resource management
increased the test timeout from 500ms to 5000ms in AdaptServerSocket . java to allow more time for tests to complete successfully
refactor CaptchaChannelProcessorTests to improve test coverage to enhance reliability and maintainability of the code
added a conditional check to set the owner of a collection in MetadataImport . java to ensure that the owner of a collection is correctly associated with the
added retry logic for saving registry cache files in AbstractRegistry . java to improve reliability by allowing retries on cache file saving failures
updated the directory reference from ` mergeDirectory ` to ` directory ` in ` TrackingDirectoryWrapper . java ` to ensure the correct directory is tracked
[ java ] fix unusedimportsrule to work with java 15 and java 15 .
added validation for insert overwrite operations on bucket partitioned tables in HiveIcebergStorageHandler and corresponding utility methods in IcebergTableUtil to ensure
updated assertions in BootstrapTests to check for legacy SAML keys to ensure tests validate the presence of SAML keys in the default identity zone configuration
updated the ` isAnonymousOrLocal ` method to include ` isAnonymousOrNonStaticLocal ` and ` isAnonymousOrLocal ` to ensure that
do n ' t try to send an e - mail address if there be an unexpected e - mail address
removed multiple comments from CommentsParser . java to streamline comments parsing to improve code readability and maintainability
added IOException handling to lock release methods in IndexWriter and added a new LockReleaseFailedException class to improve error management and ensure proper resource cleanup during lock
updated package name from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to improve organization and clarity of the
added a conditional check for unary operations before transforming nodes in SpelExpressionTransformer . java and updated import statements in OperatorNode . java to improve
updated ByteBuddy instantiation to include TypeValidation . DISABLED to disable type validation during byte code generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` to simplify type handling and improve code clarity
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and modified lock execution timeout in MySQLTableLock
removed the ` logFile ` parameter from the ` setSystemProperties ` method in ` LoggingApplicationListener . java ` to simplify the method signature and
added a new method ` isRedirect ` and modified HTTP redirect handling in ` ServiceApiRequest . java ` to improve HTTP redirect handling and ensure proper
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants and modified microservice setting logic in
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the correct
updated database path regex to use static constants and improved database path validation to enhance code clarity and maintainability by centralizing database path management
updated return statement to retrieve unread count from HomeDataSource to ensure accurate unread count retrieval for the current account
updated the test method name from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method for the virtual thread pool
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule . java and modified its implementation in Wallet . java to
added null check for the user before retrieving its settings in HomePage . java to prevent potential NullPointerException when accessing user settings
updated file path retrieval in LocalFileSystem and added a new test for matching relative wildcard paths in LocalFileSystemTest to ensure correct handling of absolute paths in
added maximum width and height limits to the instance ' s rectangle size in ComponentBuilders . java to ensure that the instance does not exceed defined limits
added logging functionality and modified the request method signature in CommonsHttpSolrServer . java to enhance debugging capabilities and ensure proper connection management
added import statements for ExceptionHandler and modified error handling in PrintController . java to improve error handling clarity and maintainability of the code
refactor CrateType and RustBinaryIntegrationTest to use a map method instead of Optional . of to improve code readability and maintainability by
added checks for empty and non - empty strings in SpellChecker . java and a corresponding test in SpellCheckerTest . java to ensure correct handling of
corrected a typo in the constant name from " HelloWorld . message " to " HelloWorld . message " to improve code readability and
refactor file action handling in FileDisplayActivity by introducing a method to retrieve the OCFileListFragment from a fragment to improve code organization and
added a daemon flag to the puller in ReplicationHandler and improved error handling in SnapPuller to ensure proper resource management and prevent application crashes
updated the method call from ` e . update ( 2L , recid , Serializer . LONG ) ` to ` e . update ( 2L
updated the constructor of StreamerLoader to accept MaterialHolder as a parameter and removed it from the fileColumns list to ensure proper handling of MaterialHolder
added new dependencies for the Core Library for LibGDX and updated related files in DependencyBank . java to enhance the project ' s functionality and
added functionality to manage approx rows in the RecyclerView in AppsContainerRecyclerView to improve performance by optimizing the number of recycled views based
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest . java ` to ensure that binaries
add waypoint . getlocationsofblock ( ) to baritonecontrol . cancel ( ) when there ' s no waypoint .
added imports for ParsedNode , ParsedNodeException , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enable parsing and resource
added null handling functionality to FilterOperatorUtils and a corresponding test in NullHandlingEnabledQueriesTest to enable range filtering when null values are present in the
added validation for bootstrap method parameter types in JDynamicInvokeExpr . java to ensure correct argument types are used for method invocation
camel - 14263 : camel - jms - fix test that fail on slow ci server
added a call to clear the formatters list in CucumberInstrumentation . java to ensure the formatters are reset before execution
replaced ` RegisteredServiceContact ` with ` DefaultRegisteredServiceContact ` in ` AbstractRegisteredService ` , ` PrincipalAttributeRegisteredServiceUsernameProvider `
added a conditional check for workspace cell padding in DeviceProfile . java to ensure that workspace labels are only hidden when they exceed defined limits
updated assertion methods in ReplicationFactorTest to use a unified assertRf method for consistency and clarity to improve code readability and maintainability by standard
llvm : do n ' t call patchcontext if pre - initialization be enable .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to enable the tests to run
replaced ` RuntimeException ` with ` JsonIOException ` in ` Gson . java ` to provide a more specific exception type for better error handling
replaced ` Integer . valueOf ( ) ` with ` Integer . parseInt ( ) ` in ` VisualScoreTagTest . java ` to improve performance by
updated error messages in ` Copy . java ` and modified file tree traversal in ` Files . walkFileTree ` to improve clarity of error messages
[ hotfix ] [ segment ] fix segmentname . ishighlevelconsumersegmentname ( ) to return true for high - level consumer segment
added startActivity and startActivityForResult methods to ShadowFragment and corresponding tests in FragmentTest to enhance fragment functionality and ensure proper exception handling in tests
updated the return statement in DueDateBusinessCalendar to use the current time instead of the current time to ensure accurate date calculations based on the current time
updated the return statement to include the target CPU type in the TargetCpuType . java file to ensure compatibility with the Android target architecture
added a new method ` deleteAllFiles ( ) ` in ` FileDataStorageManager ` and implemented file deletion in ` ManageAccountsActivity
updated command line option for re - running SchemaCrawler from " - ? " to " - h " in SchemaCrawlerCommandLine . java to improve clarity
added a new method ` createSuiteDescription ` to handle null unique IDs in the ` Description ` class to enhance flexibility in comparing suite descriptions
[ java ] use multiformatreader instead of hardharder and purebarcode in snapshot thread .
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor to simplify the constructor and eliminate unnecessary dependencies
added unit tests for range calculations in GWCZoomContextFinderTest . java to ensure correct functionality of range retrieval in the zoom context finder
added a dependency tracking configuration key and modified dependency tracking logic in JRubyScriptEngineConfiguration and ScriptExtensionFactory to ensure dependency tracking is enabled only when
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
do n ' t try to create a keyspace if it already exist . patch by jbellis ; review by brandonwilliams for cassandra
refactor WelcomeWindow to use a cache image instead of a background image to improve performance by reducing the number of drawing operations
refactor tuner configuration handling to use a named string instead of a hardcoded value to improve clarity and maintainability of tuner configuration management
added HasTests interface to ` AbstractShBinaryDescriptionArg ` and implemented a test method in ` ShBinaryRuleIntegrationTest ` to enable testing of the
added a condition to set the includeString variable based on the presence of " db : hsqldb " in TestFilter . java to ensure the
removed unnecessary line breaks in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : only materialize host exception if there be no stack trace .
refactor service loading logic in CompilerConfigurationFactory . java to use Iterable < S > instead of ServiceLoader to improve code readability and maintainability by
add test for duplicate command resolver in aggregateannotationcommandhandlertest . testhandleupdateduplicate
[ flink - 20865 ] [ runtime ] allow fine - grained shuffle mode to be set to blocking when apply fine - grained
fix entity fire not be able to remove block from entityfishhook . close # 3905
camel - 20297 camel - ftp : fix javadocs for camel - ftp
rename method names from ` getCommandRunner ` to ` getStepRunner ` across multiple classes to improve clarity and consistency in naming conventions
renamed ` useShortNames ` to ` compressPackageNames ` and updated related methods in ` GangliaReporter ` and ` GangliaReporter ` to
added a check for empty items in AppsContainerRecyclerView to avoid unnecessary processing when there are no items to display
added a conditional annotation for missing the REPORTER _ BEAN _ NAME in the ZipkinAutoConfiguration class to ensure that the REPORTER
log4j2 - 1343 xmllayout . start ( ) do n ' t allow property to be set by default .
added a new parameter ` OMIT _ HEADER ` in multiple classes and implemented the ` remove ` method in multiple classes to control the removal of the
fix escherproperty . getpropertyname ( ) to return the property name instead of the id
updated method call to use Description . getBuildRuleType instead of Description . getBuildRuleType to improve code readability and maintainability
added a variable for the scene variable and modified the method numbering process in SootClass . java to improve code readability and maintainability by
added null checks for disputesPerTradeId and disputesPerDepositTxId in TradeDataValidation . java to improve robustness by preventing potential NullPointerException
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , and modified the ` retrieveColumns ` method
wallet : set confidencetype to not _ sent _ in _ chain to not _ sent _ in _ chain .
refactor HttpClientIntroductionAdvice to improve handling of body and header annotations to enhance code readability and maintainability by reducing redundancy
fix CraftingHelper . processconditions ( ) to skip file that start with ` ` _ ' '
hbase - 26165 fail to close hregion if open fail to close ( ) fails
refactor length comparison logic in Credential . java for improved readability to enhance code clarity and maintainability by reducing redundant checks
[ java ] do n ' t check if the subscription do n ' t have a correlationid .
modified the destroy method to throw an InterruptedException instead of a NoSuchMethodException and improved process destruction logic to enhance error handling and ensure the process is properly
added support for Oracle database in the test cases to ensure compatibility with Oracle databases in addition to MySQL
camel - 14263 : camel - mail - consumer should check if the mail store be connect to the mailstore if it be n ' t
added token handling logic in Parser . java to ensure proper parsing of query tokens to prevent parsing errors due to unconsumed tokens
camel - 16640 - camel - translate : add support for greek , greek , greek , and greek
added a method to retrieve the data file name in the Model class and updated the model initialization logic in Voice . java to improve data file handling and
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition , IdentityProviderDefinition , and IdentityProviderDefinition classes to enable configuration of email
added REQUEST _ READ _ TIMEOUT and REQUEST _ CONNECT _ TIMEOUT constants in Configuration . java and updated related methods in ViewRegistry . java
do n ' t call processdeferredconcepts ( ) if there be no concept to savelater
added RedisCategory annotation to RedisServiceRegistryTests . java to organize tests under a specific category to improve test organization and clarity by categorizing Redis
updated test cases in FindDeprecatedMethodsTest . java and modified the method signature in FindDeprecatedUses . java to enhance test coverage for deprecated methods
added a call to ` super . paintComponent ( g , mImageHeight ) ` in ` WaterfallPanel . java ` to ensure proper rendering
removed unused imports from multiple Java files to clean up the codebase and improve maintainability
updated event signature handling in ContractEventTrigger and LogEventWrapper classes to include full event signatures and added getter and setter methods in LogEventWrapper to
updated filtering logic in FileTestHelper to use endsWith for sessionId instead of contains to ensure that only valid file names are processed
updated graphical rendering to use background color instead of clear rectangle to improve visual consistency by using background color instead of clearing the rectangle
add rule compilation error if no rule can be compile for a rule
remove system . out . println statements from multiple Java files to clean up the code and improve readability
added a check for NaN values before assertions in TestFieldCacheSort . java to ensure that scoreDocs [ 0 ] and scoreDocs [ 1 ]
updated the initialization of oldKeys to use ` Set . copyOf ` instead of ` oldKeys ` to ensure that the original set remains unchanged to avoid
added a check for zero time in ColumnSnapshotGenerator and implemented a new test for date default values in MySQLIntegrationTest to ensure proper handling of date values
corrected the spelling of " multi - sig " and " takerMultiSig " to " btc " in the contract class to ensure
added generics to the ` FunctionAllGroupHeadsCollector ` , ` FunctionSecondPassGroupingCollector ` , and ` FunctionFirstPassGroup
[ rhdm - 241 ] fix the issue of multiplekiesessionmodel . getkiesessionmodel ( ) not return a sessionconfig
updated the instantiation of ` msClient ` to use ` this . conf ` instead of a hardcoded ` conf ` to ensure the client
added a condition to return early if modalness equals mModalness to prevent unnecessary processing when modalness equals
added unit tests for the ` createFromProfileLevel ` method in ` ShadowMediaCodecListTest ` and implemented native settings in ` ShadowMediaCodecList
added focus handling for the confirm button in EditOfferView to address issue # 5460 related to focus behavior when entering key
added validation for width and height in SunVolatileImage . java and introduced a new VolatileImageBug class in XRPMBlitLoops .
updated the separator in FormatData _ uk from " . " to " \ u00a0 " in FormatData _ uk . java to improve
replace int array with AtomicInteger for loops and improve thread safety in AsyncStressTest and StressTest classes to enhance thread safety and performance during
added visibility settings and menu visibility in AchievementsFragment and LeaderboardFragment to improve user experience by providing feedback when no images or features are available
added methods to retrieve access , name , and description from the context in SearchMethodVisitor to enhance the functionality of the Search class by incorpor
added sleep calls in IoTDBInsertWithoutTimeIT . java and interruptedException handling in IoTDBInsertWithoutTimeIT . java to improve
refactor code formatting in DLNAResource . java for consistency to improve readability and maintainability of the code
remove batch - config and stream - config from xml - resequencer
refactor transaction acquisition and release logic in TableReader . java for better clarity and efficiency to improve code maintainability and reduce redundancy in transaction management
refactor key manager type and trust manager type handling in ThriftSource and ThriftRpcClient classes to improve code readability and maintainability by centralizing
updated the ` getSingleSourceApplicableTest ` method to return an ` TreeVisitor < ? , ExecutionContext > ` instead of creating a new `
fix a bug in blockmania when the keyboard be press the tab .
change accessSpecifier from PACKAGE _ PRIVATE to NONE in multiple classes to standardize access specifier representation across the codebase
refactor ` unHandled ` and ` unhandled ` methods to use ` log . error ` instead of ` typeError ` to improve
updated stripe assignment logic in OrcInputFormat . java to improve clarity and maintainability of stripe retrieval logic
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
change myhentaicomics . com from http to https in myhentaicomics ripper
added functionality to show the current jar version in the application to improve user experience by providing visibility into the current jar version
replace PApplet . split ( appletList , " , " ) with PApplet . splitTokens ( appletList , string , string )
added rotation handling and improved input connection logic in ConsoleActivity and TerminalView classes to enhance user experience by ensuring correct rotation behavior based on keyboard settings
updated the type of ` hq ` from ` HitQueue ` to ` PriorityQueue < ScoreDoc > ` and added a suppression warning for unchecked
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when accessing ownerConnectionAddress
camel - 14263 : camel - jolokia - add headermapfactory class name to jmx mbean
updated closing brackets in JavaCompiler and Diagnostic classes to ensure consistent string formatting across the codebase
int - 1379 add support for jmsoutgoinggateway . setconnectionfactory ( ) and setoutputchannel ( ) in spring - integration - jms
updated the parameter from ' i + 1 ' to ' i 2 ' in ArrayFunctions . java to correct the indexing logic for array replacement
refactor script engine module class loader handling in AbstractScriptProcessor and invokeScriptedProcessor to improve error logging and ensure scriptEngine is only added if
added ` org . postgresql . PGStatement ` to the ` Proxy . newProxyInstance ` method calls in ` PooledConnectionImpl . java ` to
[ beam - 10297 ] fix test failure in cassandraiotest ( # 10220 )
changed log level from error to warn in AtomicRemainder . java to improve logging clarity and reduce noise in error logs
patch by jbellis ; review by brandonwilliams for cassandra - 1658
fixed - rblockingdeque . toseconds ( timeout ) method do n ' t return a long value . # 3353
updated printMap and printMap methods in JobInspectCommand . java to remove unnecessary string concatenation to improve code readability and maintainability
refactor Engine class to improve code structure to enhance maintainability and readability of the code
replace Stream . of ( children ) with entrySet ( ) . stream ( ) . sorted ( ) for sorting to improve performance and readability of the
[ issue # 4848 ] remove aclclient rpc hook ( # 4848 )
updated condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling
[ hotfix ] [ notebook ] do n ' t print stacktrace when interpretergroup be null
updated the variable name from funN to lt in the addListElement method call to improve clarity by using a more descriptive variable name
changed method visibility from public to package - private for verifyIdsAreStable and getNodeId methods to enhance encapsulation by restricting access
cloudstack - 10297 : fix error message when attach a volume to a vm before create a snapshot policy
removed the ' public ' modifier from the ` write ` and ` flush ` methods in ` ItemWriter . java ` to restrict access to the methods
updated the ` ThingImpl ` constructor parameter from " " to " test " in ` RoombaHandlerTest . java ` to provide a clear
added a ` toString ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest `
replaced FSDirectory with RAMDirectory in TestNorms . java to improve performance and reduce resource usage during test execution
added a static variable ` mLineHeight ` and modified the line height assignment logic in ` Utils . java ` to ensure that the line height is
updated WalletAppKit . java file to improve functionality and maintainability of the wallet application
remove hat . js and hat . nashorn from oqlengineimpl
[ java ] remove the transport option from the chat transport selector box instead of the menu .
added resolve and replaceTokens methods to AbstractDataImportHandlerTest , Context , ContextImpl , and ContextImpl classes to enhance functionality for token resolution and
fixed nullpointerexception when set bsqblockchainexplorer in proto proto ( # 12626 )
added attribute and attribute methods to StandardSession and Session classes to improve session management by allowing concurrent access to session attributes
added assertions to verify the correctness of the ` getPlainBean ( ) ` properties in ` TestDbJson _ List . java ` to ensure
[ java ] use initialpagecount instead of pageSize in monotonicappendinglongbuffer .
refactor BatchCommandLineLauncher to improve code structure to enhance maintainability and readability of the code
added EmbeddedDatabaseBuilder and JdbcTransactionManager beans to BatchMetricsApplication to enable database interaction with HSQL in the application
remove unauthenticated http service implementation from glowrootloghttpservice
pdfbox - 4892 : make sure graphics . getcompositecomposite ( ) do n ' t cause a nullpointerexception
removed ` notifyAll ( ) ` from ` close ( ) ` and added synchronization for ` deleter ` in ` DocumentsWriterPerThread ` to improve
added methods to retrieve and set multiple choice options and validation constraints in UiBinding . java to enhance functionality to support multiple choice options and validation constraints in
updated method calls to use ` . toString ( ) ` instead of ` . name ( ) ` across multiple files to ensure consistency and correctness in
added a fullSave flag to control whether to update the stored copy of a sub tree to ensure that the saved tree is only updated if it is
refactor Affix and Dictionary classes to use a map for condition and pattern management to improve code clarity and maintainability by centralizing pattern management
replaced generic type declarations with generics in KrakenAdaptersTest . java to improve code readability and maintainability
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class to improve code structure to enhance maintainability and readability of the code
removed unsupported data encoding check from VectorizedPrimitiveColumnReader . java to simplify error handling for unsupported data encodings
added slf4j import for MarkerFactory and improved log message formatting in HttpSolrCall . java to ensure consistent logging behavior and maintain gradlew check
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service proxies when instances are updated
fix infinite recursion in defaultentityqueryrepository when maxlevel > 10
added a null check for databaseChangeLog ' s changelog ID in HubChangeExecListener . java to provide clearer error messages when the change
make abstractblackboxtestcase more robust to try harder harder
updated the ` executeCompilation ` method to return a ` ProcessExecutor . Result ` instead of a ` int ` in ` CxxPreprocessAnd
replaced the variable ` numEvents ` with a variable ` setRange ( 0 , maxEvents ) ` for clarity to improve code readability and maintain
refactor validation logic in ValidatedLocalValidatorFactoryBean to simplify the condition checks to improve code readability and maintainability
fixed possible issue with cleanup of temporary entity where block be change in response
removed redundant type checks in IntrinsifyArrayCopyPhase . java to improve code clarity and maintainability
removed unused imports and set logging level to all in TestCoyoteAdapter . java to improve code cleanliness and reduce unnecessary logging overhead
removed the WantedAnywhereAfterFollowingInteraction class and updated stack trace assertions in multiple test files to streamline exception handling and improve clarity in
added null checks for owner and key accounts and updated address validation in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure
dspace : use sortedcommands instead of commandcomparator
chore ( proto ) : update workflowsproto . java to include new apis .
replaced ` addProperty ` calls with ` setProperty ` calls for ` _ metadataProperties ` in ` BaseSingleTreeBuilder . java ` to improve code read
updated the AsmLoader constructor to use the interface class loader to improve class loading flexibility by allowing the class loader to be instantiated
pdfbox - 4892 : do n ' t throw an exception if the current point be null , a suggest by valerybokov
updated the export statement to include a conditional check for definition scope in Java2TypeScriptTranslator . java to ensure correct exporting of namespaces based
replaced ` EmptyServerHandler ` with ` AbstractHandler ` for handling input streams in ` HttpClientTest . java ` to ensure proper handling of input streams
removed unnecessary array creation for actionListener and analogListener in HelloInput . java to simplify the listener configuration for better readability and maintainability
added a null check for the lhs variable in AbstractSqmPath . java to ensure a default value is used when lhs is null
updated package structure in CreateFolderTest , DeleteFolderTest , and RenameFileTest classes to improve organization and clarity of test structure
refactor the handling of BufferedImage types in AwtCanvas . java to improve code readability and maintainability to enhance clarity and maintainability of the
[ gr - 11486 ] add native image support for libgraal .
[ hotfix ] [ test ] fix typo in pardotest
replace ` remove ` with ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1Impl . java ` to improve
added serialVersionUID field to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log a warning if the max size configuration do not allow any data in the map .
corrected spelling from " AST " to " LST " in multiple Java files to improve clarity and accuracy of error messages related to AST processing
refactor scoreable job creation and iteration logic in ThreadedAcousticScorer . java to improve code readability and maintainability by
replaced AssertionError with null return in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated method calls in ApplicationControllerFluentLeniumTest to use window ( ) . title ( ) instead of getServerAddress ( ) to improve code read
added default implementations for ` makeString ` method across multiple classes to provide a standardized way to construct string strings across different collection implementations
replaced the constant Ordered . HIGHEST _ PRECEDENCE with a constant DEFAULT _ ORDER in OidcServicesManagerRegisteredServiceLocator to
added a ` weakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` class and updated related tests in ` WeakAssociationsCatalogLoader `
refactor Deflater class to improve code readability to enhance maintainability and reduce complexity
added exception handling for IOException in Font . java to improve robustness by providing a clearer error message when exceptions occur
added null and empty check for content in VersionTypeBinding . java to ensure that a valid version is returned when the content is null or empty
replaced the private variable ` places ` with a direct return statement in ` NearbyListFragment . java ` to improve encapsulation and
camel - 14263 : camel - mail : fix case sensitivity issue in mailconverters
added support for ` ` rsa ' ' and ` ` dss ' ' format in ` ` opensh ' ' key spec
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for updating suggested folder names based on the ` isBind ` flag
updated import statements and added JPA annotations in InheritanceCacheTest . java to improve code readability and maintainability by using wildcard imports and
updated import statements in ConnectOAuth2RequestFactory and added user approval request handling in TofuUserApprovalHandler to ensure compatibility with the latest OAuth2
fix # 645 influx naming convention ( # 645 )
add a dump method to oneproblemheart and twoproblemsheart .
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with new cookie handling requirements
replaced a static method ` classMetadataUnsupported ( ) ` with a static method ` Platform . classMetadataUnsupported ( ) ` across multiple files to improve
added functionality to clear all tasks in OverviewActionsView and RecentsView to enhance user experience by allowing users to enable or disable the clear all
ambari - 20297 . cluster stack version should not be create if it do n ' t exist . ( swagle )
remove memoryleaktest since it ' s no longer use .
updated the return statement to include a conditional check for localhost in ServletTester . java to enhance flexibility in port selection based on the localhost environment
added a condition to check if MVDWPlaceholderAPI is enabled in the plugin manager to ensure that the MVDWPlaceholderAPI is
fix cluster size assertion in abstractpartitionassignmentscorrectnesstest . testclustersizeeventually
added SingletonHolder to initialize FFIProvider instances and modified FFIProvider initialization logic to ensure proper instantiation of FFIProvider based on configuration
tika - 3626 - add test for hierarchical file list in batchprocesstest
added null checks and improved null handling in MongoTemplate and MongoTemplateTests to enhance code robustness and prevent potential NullPointerExceptions
updated Position initialization to use NODE _ LIST instead of 0 for directInputCount and directSuccessorCount to improve code readability and maintainability by
added accTradeValue field and associated getter / setter methods to the BithumbTicker class and modified trade service parameters to enhance trade data handling and improve
updated logging statements in RealtimeSegmentDataManager to include segmentName parameter to improve log readability and provide more context in log messages
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java `
fix thread - safety issue in fixedbytemvmutableforwardindex
fix typo , fix typo .
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions when destBuffer is null
camel - 16263 : camel - msv : add a sleep to wait for the test to complete .
updated the condition from ` = = ` to ` > ` in ` DelegationService . java ` to improve clarity and correctness of the cycle
updated RandomValueStringGenerator from 6 to 10 in JdbcExpiringCodeStore . java and updated assertions in CodeStoreEndpointsTests . java to
added a check for UniqueConstraint in StandardObjectChangeFilter to ensure proper matching of UniqueConstraint instances
refactor description parsing to improve code readability and maintainability to enhance code maintainability and ensure all language codes are included
log recoverableexception in case of arrayindexoutofboundsexception
added functionality to filter images by reference and values in ListImagesCmd and ListImagesCmdImpl classes to enhance image retrieval flexibility by allowing users to specify
camel - 14284 : camel - jms - add support for the bridgeerrorhandler property in camel - jms
added checks to exclude specific operations and print a message if no ops are found to ensure that all operations are set to true when no ops are found
added return statements for false in DatabaseCommand . java to ensure that the method returns a boolean value as expected
honestpopoliticianexample : fix typo in honestpotolitician example
camel - 14263 : camel - jbang - use stringutils . isstringstring ( ) instead of stringutils . isempty
camel - 14284 : camel - restlet should use the current port instead of the default one .
updated import statements and removed WALL _ SIGN block case in SchematicFormat . java to improve code readability and maintainability
added a system property " hive . query . max . length " to " hive . query . max . length " in QTestUtil . java
changed visibility of ` userName ` and ` securityMgr ` variables from public to private in ` WebServer . java ` to enhance encapsulation
[ hotfix ] [ connectors / kafka ] fix typo in sink name
updated the condition to check if the " spark . app . name " is not equal to " spark . app . name " in HiveConf and
corrected a typo in the variable name from ` whiteName ` to ` includedName ` in ` ManagedClassFactory . java ` to improve
simonstewart : add the ability to maximize the window to the remote server
refactor methods in ` AbstractEmbeddedCellBuckOutInfo ` to use ` getRootPath ( ) ` instead of ` getEmbeddedCellsBuck
added a null check for the exception message in TestXMLEntityExpansion . java to ensure that the exception message is correctly validated for entity expansions
added bitwise operations to set table offsets and length in TrueTypeFont . java to ensure that table offsets and lengths remain within the valid range
added a customize method to the DirectMethodHandle class to ensure that the form ' s customized state is validated to prevent potential null pointer exceptions
refactor LineChartRenderer to use a variable for number of floats instead of a fixed size to improve code readability and maintainability by reducing
refactor flavor validation logic in AndroidBinaryDescription . java for improved clarity and efficiency to enhance code readability and maintainability by consolidating flavor
updated buffer index assignment from ` offset ` to ` i ` in ` Lwjgl11 . java ` to ensure correct buffer indexing for
added new files Property . java , PropertySuper . java , and TestClassResolutionFail . java , and implemented a test class TestClassResolutionFail . java
make sure shutdown hook be only remove when group property be enable .
removed the ` url ` parameter from the ` VirtualFilterChainProxy ` constructor and updated related logging statements to simplify constructor parameters and improve logging clarity
[ hotfix ] [ table - common ] use array . sort instead of collections . sort
added checks to ensure the schema is loaded before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to avoid potential null pointer exceptions when
changed the initialization of ` baseType ` to null in ` DatabaseInfoRetriever . java ` and added literalPrefix and literalSuffix in ` MutableColumn
updated link formatting in multiple Java files to improve code readability and maintainability
changed instance creation of Evaluator instances from static to non - static in EvaluatorFactory . java to improve performance by reducing instance creation overhead
updated references from " osx _ x86 - 64 " to " osx _ config " across multiple integration tests to improve clarity and consistency in
added sound effect handling and playback functionality in AllAppsView . java to improve user experience by enabling sound feedback during interactions
changed the exception type from Exception to IOException in the main method from Exception to IOException to ensure proper exception handling for input / output operations
added granularity support to the left axis in BarChartActivitySinus . java to improve chart visualization for better data representation
refactor comparison logic in GdxSetup . java to use a dedicated compareVersions method to improve code readability and maintainability by reducing duplication
updated ContextHandlerGetResourceTest to use MavenTestingUtils and added OS _ ALIAS _ SUPPORTED flag in ContextHandlerGetResourceTest to
added a ` close ` method to multiple transport classes to ensure proper resource management and prevent potential resource leaks
[ log4j2 - 1342 ] make mockappender and socketserverfunctionaltest more robust
[ beam - 4142 ] check if the resource be a directory in HadoopResourceId . java to ensure that the resource is a directory and
updated import statements in IsometricStaggeredTiledMapRenderer . java to improve code readability and maintainability
removed duplicate calls to ` handleService . unbindHandle ( context , item ) ` in ` ItemServiceImpl . java ` to streamline code by
refactor configuration handling in Config . java and Attribute . java to improve code organization and maintainability
removed conditional check for ` mDownHitTarget ` in ` OtherActivityTouchConsumer . java ` to simplify the condition for better readability and maintain
updated the handling of navigation buttons based on the user ' s theme settings to improve UI consistency and maintainability based on the current theme settings
make polybench launcher throw an exception instead of throw an error
refactor method handling in ClassWriter to use byte types instead of short indices to improve clarity and maintainability of the code
added BlockFormattingContext parameter to findBox and findElementBox methods to utilize BlockFormattingContext to enhance rendering flexibility by allowing custom block formatting context
added error handling to the WorkerProcess class and improved error output retrieval in WorkerShellStep to enhance robustness by providing clear error messages during process execution
added null checks and improved error handling in CheckedListReplaceAll . java and CheckedListReplaceAll . java to enhance robustness by preventing NullPointerException
added a boolean variable ` _ testFill ` and ` _ writeCallback ` in ` SslConnectionTest . java ` and implemented a test for
added ` mListeners ` and ` mCurrentValue ` to ` DeviceFlag ` and ` FeatureFlags ` classes to ensure that the default value is
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable test due to issue 2 . 2 . 0 gh - 11
removed the import of MalformedURIException from StandardRequestHandler . java to clean up the code and improve readability
add focus ( ) method to instructorfeedbackeditpage to focus on the first argument
refactor synchronization for ownTradesObservable and userTradesObservable in KrakenStreamingTradeService . java to improve code readability and maintainability
changed the print statement from ` System . err ` to ` System . out ` in ` ChangeableUrls . java ` to standardize output
[ fix ] bug in sparserowmatrix to support random access
api : fix npe in delete usage event if the poolid be null
refactor file path retrieval logic in Utilities . java to handle local configuration correctly to improve flexibility in managing file paths based on job configuration
[ beam - 12297 ] upgrade guava library to v26 _ 0 _ jre
memorycallgraphbuilder : reset internal state before register memorycctprovider
added null check for multiUserChatOpSet in ConferenceChatManager . java to prevent potential NullPointerException when accessing multi - user chat operations
added error handling for file writing in Save . java to ensure that invalid user actions throw an IllegalUserActionException if the file cannot be written
added a new ` FolderSyncActivity ` class and integrated it into ` DrawerActivity ` to enhance user navigation by allowing users to navigate to folder
[ hotfix ] [ test ] close networkbufferpool in sequentialchannelstatereaderimpltest
spanishtreenormalizer : fix typo in spanishtreenormalizer
replace pointReader with heapPointWriter ' s getPackedValueSlice method in SimpleTextBKDWriter . java to simplify the code and improve
added a new ` LocaleRandomizer ` class and a corresponding test class ` LocaleRandomizer ` in ` InternalRandomizerRegistry ` to provide random locale generation functionality
pdfbox - 4892 : add test for font printer and font printer ( a suggest by valerybokov )
Updated version strings in Installer . java and AutoUpgrade . java to include a new version number in Installer . java to ensure compatibility with
reformatted code for improved readability in TCPTransport . java to enhance code clarity and maintainability
added a block parameter to the socketWrapper ' s read method in Http2AsyncParser . java to ensure a default read timeout is set based on
increased the initial delay from 120 to 600 milliseconds in TimelineMetricConfiguration to allow for a longer wait time for metrics configuration
corrected a typo in the primary key constraint message in SelectStatement . java to improve code readability and maintain consistency in naming conventions
added support for handling date and time formats in ThirdEyeJiraClient . java to enhance date handling capabilities in the application
refactor priority generation in HeadersGenerator and PriorityGenerator classes to improve priority handling to enhance code clarity and maintainability by centralizing priority generation logic
added a maximum size limit to scalar replacement logic in ClassTransformer . java to ensure scalar replacement only occurs when the entire class length is less than 2
add date _ taken and date _ taken to projection test
updated drawImage calls in TexturePacker2 . java to adjust parameter values to improve rendering accuracy by adjusting the rectangle boundaries
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to use a context handler instead of FilterHolder to improve the handling of WebSocket upgrade
added shutdown call to validateSignService and trxHandlePool in Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper resource
added RawJsonRequestBodyAnnotationProcessor to handle raw JSON requests in the Swagger generator context to enable the processing of raw JSON strings in the Swagger
added a new method ` newTarget ` to create ` Target ` instances with specific target types and extensions to facilitate the creation of new targets based on
updated the return statement to use ` ArrayList < > ` instead of ` ArrayList < > ` and added a new test class ` BeanContainerTests `
hbase - 25836 testmetricsregionserver should use blockcachecounthitpercent instead of blockcounthitpercent
camel - 16263 : camel - jbang - clean up temp file when exchange be complete .
fix teltonika decoder to correctly set the deviceid .
replaced ` Files . readFirstLine ` with ` asCharSource ` for reading the first line in ` HybridProjectBuildFileParser .
added a null check for the operator in the visitAssignop method and created a new test class FailOver15 to ensure proper initialization of the operator
added enableAccountHandling to control account handling behavior in BaseActivity to ensure that the onCreate method is only called when accountHandling is enabled
[ geot - 6036 ] fix the heuristic for find the main connected component of a polygon
updated DrillViewTable to accept a path parameter and updated related methods to use it to improve flexibility in view path management and enhance test coverage for
added additional configuration parameters for the PooledByteBufAllocator in PooledByteBufAllocatorL . java to enhance performance by allowing configurable cache sizes
modified the type check in ObjectInputStream and added a new CloneArray class for cloning arrays to ensure correct handling of short array types during object cloning
added a new configuration variable ` LLAP _ IO _ THREADPOOL _ SIZE ` and updated the executor initialization in ` LlapIoImpl
added support for sun . security . ssl . debug and sun . security . ssllogger in SecurityServicesFeature . java to ensure compatibility with different Java
modified latitudeRange and longitudeRange checks in LatLonGrid . java and added a test for growing a regular polygon in TestLatLonGrid . java to
simonstewart : implement invisibilityofelementwithtext in the expectedconditions class
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method in ` Hive . java ` and modified its implementation in ` Hive .
added a test method ` getOuterClass ` in ` ReflectorTest . java ` to verify the behavior of the ` getEnclosingObject ` method
added " auto _ generate _ android _ facet _ sources " configuration to ConfigIgnoredByDaemon and updated its usage in IjProjectBuckConfig
updated the message formatting in ` updateHub ` , ` updateForRollback ` , and ` updateHubForRollback ` methods to include the author information
added properties support to the Link class and its corresponding getter and setter methods in QuickLinksConfigurationModuleTest to enable overriding of properties in QuickLinksConfiguration
updated ` @ EqualsAndHashCode ` and ` @ ToString ` annotations in ` YamlConfigFileDTO ` and added a ` toString ` method in ` Yaml
updated generic type parameters in SimpleForwardingServerClientCallConfiguration to improve type safety and clarity to enhance code readability and maintainability
refactor ` forName ` methods to include ` callerClassLoader ` and introduce ` forNameHelper ` for better handling of caller - sensitive class loading to improve
updated authentication checks in RequestItemRepositoryIT to use IsEmptyString instead of Matchers to improve accuracy of token validation based on email and password
replaced instances of ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management by using a more specific
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
updated TimeStepdefs to utilize Jchronic ' s options and refactored HumanTimeConverter to improve code organization and enhance readability
add spark _ isolated , recessive , and sis pattern to the banner . close # 1339
updated methods in BitstampPollingAccountService , BitstampPollingMarketDataService , and CampBXPollingMarketDataService to use URI instead of ExchangeSpecification
removed multiple debug print statements in RecordGenerator . java to clean up the code and improve readability
camel - 14263 : camel - kafka : do n ' t commit offset when autocommit be enable .
removed lock release and output statement calls in Liquibase . java and added database change log lock table state management in StandardLockService . java to
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and added deprecation warnings in AuthorizeTagCustomGrantedAuthorityTests . java to improve code
no effective change - code cleanup - remove unnecessary synchronized block
refactor nested property resolution logic in SpringBootAutoConfigurationMojo . java to improve code readability and maintainability by reducing redundancy
updated the method call from ` getBaseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to correctly reference the counter
[ java ] fix typo in messagehelpertest . java .
replace UUID generation with system property retrieval in HoneycombJdbcInterceptor to allow dynamic retrieval of the test ID from system properties
added synchronized block around date parsing and setting properties in DefaultJobParametersConverter . java to ensure thread safety when accessing shared properties
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
updated the heightmap setting from 256 to heightScale in FractalHeightMapGrid . java to ensure consistent scaling behavior for the heightmap
replaced ` equals ` method with ` assertNotSame ` in ` SecurityConfig . java ` and updated test assertions in ` SecurityConfigTests . java `
set default value of dumpPartitionId to false in StdoutSink . java to ensure default value is used when dumpPartitionId is not specified
added tests for TronTXOutput and TronTXOutputs in UTXOSetTest . java to ensure correct handling of TTXOutput
[ java ] added util class to check for explicit unused variable name before java 9 .
pdfbox - 4892 : avoid npe when add a null object to a list
added a test for overriding job parameters in JsrJobOperator to ensure correct handling of job restart properties during job execution
added a private boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform
refactor principal retrieval logic in JaasAuthenticationHandler . java to improve code readability and maintainability
refactor SolrCores shutdown process to use a submitable executor for core closure to improve resource management and avoid blocking the shutdown of the core
added a null check for mActionsView before displaying fullscreen progress in RecentsView . java to ensure actions view is only visible when fullscreen
refactor parameter handling in RunIdIncrementer . java to improve code readability and maintainability
refactor BasicEntity , TestEntity , and TestUtil classes to improve code organization and maintainability
added assertions to verify the expected number of matched devices in SchemaRegionTestUtil . getMatchedDevices method to ensure correct functionality of device matching in the
add a tryinvoke ( Runnable ) method to handle metric event invocation to improve error handling and logging for metric event invocations
updated the calculation of mCentralities in EigenvectorCentrality . java and added a new EigenvectorC
updated registry creation to use a random port instead of a hardcoded registry port to improve flexibility and maintainability by allowing dynamic port assignment
geometrygenerator : use unsignedbytes for set type , index , color , and color
change the ambient value of the ambient beacon from 2 to 0 in BlockEntityBeacon . java to ensure the ambient beacon
refactor TubeCalc class to improve code readability to enhance maintainability and facilitate future updates
set enabled to false in HttpClientConfiguration . java and simplify task scheduling in ServiceHttpClientFactory . java to disable the HttpClient functionality and improve code readability
added sanity check for class and interfaces in DefaultValidator . java to ensure only valid class and interface classes are processed to prevent runtime errors
added a key to the ` @ key ` annotation and modified the ` @ run main ` annotation in ` bug8057791 . java `
allow speedment application to exit via main method completion ( # 322 )
update version string parsing in ItemLexicon . java to improve code readability and maintainability
added ReflectionCheckLinker . checkReflectionAccess ( type ) to JavaAdapterFactory . java to ensure proper access control for reflection methods
camel - 14263 : camel - amqp and camel - mina : add support for lazy session creation in camel - mina
added initialization logic for block pointer and record reader in CombineHiveRecordReader , HiveContextAwareRecordReader , and RCFileRecordReader to
deleted the ClassLoaderHolder . java and LoaderManager . java files to remove unused classes to streamline the codebase
added configurationChanged method to FileStore and modified file handling logic in JavaLanguageServer and ScanClassPath classes to improve configuration management and ensure proper file
added exception handling for registering and unregistering session callbacks in PackageInstallerCompatVL . java to improve robustness by preventing application crashes due to
removed ` org / apache / lucene / index / src / org / apache / lucene / index / org / apache / lucene / index / index
refactor AkkaRpcServiceUtils to use BiFunction for creating a new AkkaRpcService to improve flexibility and maintainability of the service creation process
hbase - 26258 testexportsnapshot fail on slow ci server due to flaky test
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
added a new test class ` SslConnectionTest ` to validate SSL connection handling to ensure that the SSL connection is properly closed before a connection is
added validation for IPv4 and IPv6 address types in InetAddress . java and NetworkInterface . java to improve error handling for invalid address types and ensure
added a new test method ` testDateSerializationInCollection ` to validate date serialization in ` DefaultTypeAdaptersTest . java ` to ensure correct
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
added debug logging for generated SQL in PutDatabaseRecord . java and modified conditional logic in PutDatabaseRecord . java to improve traceability of SQL generation
updated the loop condition in TableOutput . java to adjust the loop position to ensure correct iteration based on the current width of the running width
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
do n ' t use high priority for format string argument in formatstringchecker .
pmd : add property to ignore non - final loop variable in for - each statement
updated PDFExporter and PDFExporterTest to use Java . gexf instead of Les Miserables . gexf and modified test files accordingly to
added a new test class ` LdapUserDetailsMapperTests ` to validate role attribute mapping to ensure correct functionality of the ` LdapUserDetailsMapper `
add ldap . read . timeout configuration to the ldapcontextfactory .
updated TestDescription and TestDescription classes to improve code organization to enhance maintainability and readability of the test suite
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
renamed ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the ` shouldAvoidAllocation ` flag
added a condition to check if the state handler is invalidated in the gesture state check to ensure proper handling of gestures when the handler is invalidate
updated mMaxDistanceForFolderCreation and mOldRotationYs variables to increase the maximum distance for folder creation to improve user experience by providing a
updated OciConfigSource to use ConfigProviderResolver instead of ConfigProvider to improve configuration handling and streamline assertions
updated Testjsig . java file to improve functionality to enhance performance and maintainability of the code
fix mana and terra mana to be more intuitive .
regenerate client with updated copyright year ( # 4382 )
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress serialization warnings related to the serialVersionUID
refactor tsFile validation logic in DataRegion . java for clarity and consistency to improve readability and maintainability of the code
added new classes ` Switch21 ` , ` Switch19 ` , ` Switch19 ` , and ` Switch19 ` to implement pattern matching and guard
updated error message formatting in ComparableSubjectTest . java for clarity to improve readability and accuracy of error reporting
[ ooxml ] fix standalone flag in streamhelper ( fixes bug )
updated the calculation for ` numSets ` and improved exception messages in ` Int2ObjectCache . java ` to ensure proper array size validation and enhance
updated sorting logic in WebSecurityConfiguration and added a new test for ordering security filter chains to ensure that the filter chain is processed in the correct order
removed the TimeInForce . GTC parameter from the order type parameter in BinanceTradeService . java to simplify the order processing by removing unnecessary
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and add validation for min and max values to improve code maintainability and ensure minimum and maximum values
updated the key separator from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure consistency with the expected
camel - 14263 : camel - jms should return the documentation for the jms component .
added a try - catch block for handling NoSuchFieldError in SourceUtils . java and created a new TestGetBound class to improve robustness of
refactor the code to utilize a new method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability by
added a condition to check if the original artifact name starts with the SCOPED _ TARGET _ BEAN _ PREFIX before extracting its
added logging for the serial number of the downloaded certificate in HttpsSegmentFetcher . java to provide insights into the source of the certificate ' s
refactor default value retrieval logic to use String instead of boolean and add DnsFallback class for testing to improve code readability and maintainability while ensuring
ww - 3942 add exception to the exception when write a tag
changed the data type of the ` success ` field from ` boolean ` to ` String ` for ` url ` in the ` DepositAddress ` class
replaced ` new Privilege ( ) ` with ` LocalFree ( pLuid ) ` in ` WindowsSecurity . java ` to ensure proper resource management
removed the " phone " from the scope parameters in CommonOAuth2Provider . java and updated related tests in CommonOAuth2ProviderTests . java to
added a new Start class and updated the ManagedSelector to manage the starting state to ensure proper synchronization and synchronization during selector updates
added BIG _ DECIMAL _ 182 _ 04 and BIG _ DECIMAL _ 182 _ 04 constants in WLed
replaced the method ` isValidCaller ` with a static final Set ` VALID _ CALLERS ` to improve code readability and maintainability
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to handle JavaScript instance handling in the code
added transaction management to the SubscriptionActivatingSubscriber class to ensure that the subscription is activated in a transactional context when a message is received
refactor SQL query and update statement handling in DBMSProcessor . java to improve clarity and error handling to enhance code readability and maintainability by
added elevation setting logic in ContactItemInflater . java to ensure compatibility with devices running Lollipop and above
rename ` typeInformation ` to ` identifier ` in ` J . java ` to improve code readability and maintainability by using more descriptive
added AccessController to access control for file reading and writing operations in SandboxFileManager . java to enhance security by ensuring file operations are performed within
updated GroovyParserVisitor and GroovyPrinter to handle " [ " and " Access " binary operations to improve clarity and functionality of binary operator handling
updated logging message to include the class name instead of the exception message to improve clarity and debugging by providing more context in warning messages
updated character conversion from ` char ` to ` short ` in ` RecordInputStream ` , ` UnicodeString ` , and ` UnicodeWorkbook ` classes to
added a test to verify the download functionality for files with no orway characters in the name to ensure that the download process correctly handles file names containing
replaced ` RuntimeException ` with ` CancellationException ` in ` AsyncResource ` and added ` isCancelled ` method in ` FingerprintScannerSample
added a null check for statistics before executing handleCache to avoid potential NullPointerExceptions when statistics are not provided
added a new test method ` removesObjectFromExplicitCollection ` in ` MongoTemplateTests . java ` to ensure that the ` removesObjectFromExplicit
fix typo and fix typo in javadoc
[ hotfix ] [ table - common ] fix typo in coder error message
added a boolean field ` mIsClearAllButtonFullyRevealed ` and modified scroll logic in ` RecentsView ` and ` Paged
added a static final COMMON _ HMS _ PROPERTIES map and refactored parameter handling in HiveIcebergMetaHook to improve
replaced instances of ` BindException ` with ` Server . isAddressInUse ` for better error handling to improve code clarity and maintainability by centralizing
added a system property " test . class . path " to the argument list in TestNestmateAttr . java to enable the execution of the
updated schema text detail type from ` VERBOSE ` to ` verbose _ schema ` to maintain consistency with naming conventions in the
[ java ] add miss @ override annotation and fix some javadoc warning .
fix : add support for use of savepoint in nested transaction
replaced ` int ` with ` ThreadLocal ` for fetchSize in ` QueryProcessExecutor ` and updated related methods in ` MemIntQpExecutor `
replaced ` BackoffIdleStrategy ` with ` NoOpIdleStrategy ` in ` EmbeddedPingPong . java ` to streamline idle strategy
refactor HttpClientIntroductionAdvice to use a Supplier for better readability to improve code maintainability and reduce duplication
added system property setting for HDP _ VERSION in SliderAppsViewControllerImpl . java to enable dynamic configuration of the HDP version in the
added a new variable ` loaderClass ` and modified the ` close ` method in ` JavacProcessingEnvironment ` to improve resource management by ensuring ServiceLoader
added DeepCloner class and implemented deep cloning functionality in Robolectric tests to enhance the testing capabilities by allowing deep clones of parameters and
added a binding for JETTY _ SHOW _ STACKTRACE to Boolean . FALSE in ResourceBase . java to enhance debugging capabilities by providing
added a check to return null if the object is an instance of JSType . OBJECT to improve robustness by handling cases where the object is not
updated OopField references from ` sun . jvm . hotspot . types . OopField ` to ` sun . jvm . hotspot . types .
added support for RSAPublicKey and ECPublicKey in JwkKeyListView . java and updated serialization logic in JsonWebKeyEndpoint . java to enhance security
make nativebootimage . spawnisolates optional and use onlywritablebootimageheap .
updated MBeanServerMXBeanUnsupportedTest . java to improve test coverage to enhance reliability of MBeanServerMXBean functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and reduce unnecessary dependencies
added getOwnerAddress ( ) method to multiple classes and implemented it in CreateAccountActuator , TransferWitnessActuator , and VoteWitnessAct
add a main . java file to make it easy to run the demo of a broker
do n ' t send - inf command if min or max be double . max _ value .
proto proto serializer : fix serialization of edge with empty index .
[ java ] remove unnecessary contains ( ) call from asynccommandidset . remove ( ) .
added conflicts handling in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure that conflicts are properly managed during file operations
refactor ExecutionContext and related classes to use generics for better type safety to improve code clarity and reduce the risk of runtime type errors
replaced ` StrUtils . splitFileNames ` with ` splitFileNames ` across multiple classes to simplify code and eliminate dependency on ` StrUtils `
added driver properties for oracle , MySQL , and MySQL based on driver type to ensure compatibility with Oracle , MySQL , and MySQL databases
added a handler parameter to the MockMethodInterceptor in SignedSupportingClassProxyFactory and updated its usage in PartialMockingWithEasyMockTest
updated time calculations in FileChangedExclusiveReadLockStrategy to use System . currentTimeMillis ( ) instead of Date . getTime ( ) for better accuracy to improve
[ hotfix ] [ table - planner - blink ] wrap class loader in executioncontext
added a UI thread to run the UI thread in TerminalView and adjusted the buffer height in TerminalTextViewOverlay to ensure the UI updates correctly when the
reformatted code for improved readability in ConfigDispatcher . java to enhance code clarity and maintainability
refactor freeze operation handling in OperationRegistry for improved clarity to enhance code readability and maintainability by consolidating freeze operation logic
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 586 . add insecure
refactor the path retrieval logic in JavadocTool . java and introduce a new class T7091528 . java to improve code readability
updated attribute comparison from ` nodeColumns ` to ` edgeColumns ` and added a new edge ID column in ` ExporterGDF . java `
added CascadeType to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the target entity is marked as CascadeType . ALL
refactor equals and hashCode methods in Message class to use Arrays . equals instead of getMessageId to improve equality and hashing functionality for message objects
fix unicode encode issue in asyncproviderbasictest . java
removed the ` isKeySerializerTypeVariableSized ` method from ` RocksDBSerializedCompositeKeyBuilder ` to streamline the code by eliminating
added a method to check static permissions in ProtectionDomain and updated subjectPd initialization logic in SubjectDomainCombiner to ensure proper handling of static permissions in
added null check for recipe in recipehandler to avoid npe .
refactor parsing logic in Parser . java to use a variable for parsing index to improve readability and maintainability of the parsing process
added a ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaDetailsContract ` to improve
added a new file ` Issue596 . java ` and a test method for handling unsupported requests in ` HttpHandlerImpl . java ` to ensure
change bitmask & ~ ( 1L ) to ~ ( 1L ) in NodeBitMap . java to ensure proper bit manipulation by using long
updated import layout styles in ImportLayoutStyle . java to improve layout management functionality
refactor ConsoleUIService to improve input handling based on headless environment configuration to enhance user experience by allowing input input from environments without a system
refactor ShadowAccountManagerTest to use a new TestAccountManagerCallback instance instead of mocking it to improve test readability and maintainability by
[ java ] remove unused field in analysistype . getenclosingtype ( ) .
rename method names from ` getProperty0 ( ) ` to ` getProperty1 ( ) ` and ` concatSeparator ( ) ` and ` concatSuffix (
[ hotfix ] [ network ] remove timeout from set ( ) call
[ rocketmq ] fix npe in mqclientinstance when consumer name be empty or not
[ java ] do n ' t generate source identity for driver .
added a new class ` TopTabAction ` to handle toolbar actions in the ` org . gephi . desktop ` package to provide a structure for
camel - 14284 : dynamicrouter processor should be run in the same thread to avoid race condition .
updated imports and annotations in AggregateItemReaderTests . java to use JUnit ' s @ Before annotation instead of JUnit ' s TestCase to
added generic type parameter to the Procedure constructor in AbstractObjectValueTypeMap . java to enhance type safety by specifying the generic type of the
updated AchievementsActivity to handle user - specific wiki data edits more effectively to improve user experience by providing accurate insights into edit counts for
added a validation check for the length parameter in OfflineSorter . java to ensure that the input length does not exceed Short . MAX _ VALUE to
do n ' t clear accumulated bugs when load of min value
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
ambari - 20586 . add more information to the error message when a credential type be invalid . ( dlysnichenko
updated random number generation for vector elements in TestVectorUtil . java to improve the range of values used in random number generation
changed the return type of the compareBy method from int to long in DateUtil . java and modified the comparison logic in DateUtil . java to
added support for SSL configuration in TestUtil . java and updated assertions in PGPropertyTest . java to allow dynamic retrieval of the SSL property from system
added support for safe browsing in ChromeDriver and related tests in FileDownloadToFolderTest and FileDownloadViaProxyTest to enhance file download
fix potential npe in motormount . setflightconfiguration ( )
added a condition to disable transcoding in DLNAResource based on configuration settings to ensure transcoding functionality is disabled when transcoding is disabled
updated the method to return an empty list instead of an empty list in DataTable . java and added a new test in TableDifferTest . java
added a custom ignore tag to the RobustJavaMethodParser class to handle cases where CustomIgnoreTag is not present in the native code
camel - 14263 : jdbcaggregationrepository should throw optimisticlockingexception instead of a runtimeexception
fix ( config ) : add parent config property for parent method
replaced IDEActivity with LimitlessIDEActivity and refactored PreferencesActivity to extend LimitlessIDEActivity to improve UI responsiveness
deleted the ClusterNodeInfo . java file to remove unused or redundant code from the project
updated return value in ShieldedTransferActuator . java to ensure consistency in return value formatting
added debug output for standard and legacy cipher suite selection in ServerHandshaker . java to improve visibility into cipher suite selection during the handshake process
refactor template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to improve UI responsiveness based on the presence of
added functionality to track duplicate node labels in ImportContainerImpl to improve error handling and provide clearer logging for duplicated node IDs
added a new file R2303044ListSelection . java that implements list selection functionality to test and validate the selection of an item in a
[ java ] : do n ' t check if the correlation id be already in use .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when accessing mWorkspace
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests . java ` to verify compound property behavior in
updated the calculation of the new row count in StatsRulesProcFactory to use a list of row counts to improve clarity and efficiency of row counting logic
added functionality to manage API method documentation paths and query parameters in SpringBootDocBuildTemplate . java to improve code clarity and maintainability by simplifying
[ java ] make logger non - final in notificationserviceimpl and notificationserviceimpl .
renamed ` DistBuildCachingEngineDelegate ` to ` CachingBuildConfig ` and adjusted related logic to improve clarity and functionality based on remote configuration
updated the RuntimeException message to include more detailed error information to improve debugging by providing clearer error messages when parsing fails
added a debug flag to log messages in WidgetsModel . java to ensure logging is only logged when DEBUG is enabled
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a new test for discount overlaps in TestSimilarityBase . java to ensure
added null checks for the send method in SimpleMailMessage and MimeMessageItemWriterTests to ensure that sent items are only sent if the sender
added ` exit ` and ` quit ` functions to ` Global ` with non - enumerable properties and removed existing ` quit ` implementation from ` ScriptingFunctions ` to standardize the exit functionality and improve code
refactored application context management in LoanBrokerSharkDetectorDemo and LoanBrokerSharkDetectorDemo to improve code readability and maintainability
rename methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple classes to improve clarity and consistency in naming conventions
refactor cookie handling in VmwareContext . java to use CookieJar instead of String and add error logging for missing cookies to improve error handling
reformatted assertions in ResinAcegiAuthenticatorTests for consistency to improve readability and maintainability of the code
updated bigIntegerToBytes method calls in ECKey . java to include a 32 byte parameter to ensure data integrity during byte conversion operations
updated the property name from " fml . disabledMods " to " fml . modStates " to improve clarity by reflecting the purpose of the property
refactor account selection handling in ReceiveExternalFilesActivity to use a new method ` showAccountChooserDialog ` to improve code readability and maintainability
[ java ] include host and port in exception message when attempt to send a stream .
added error handling for unexpected empty simulation results in the ValidatorContractController to ensure that an exception is thrown when an empty result is encountered during the contract
updated TexturePackerFileProcessor to handle null root file and added null check for the settings file to improve robustness by preventing null pointer exceptions when
added a null check for the datasource and JNDI in the PooledConnection class to ensure proper handling of connection configurations when the datasource is not
updated TARGET _ MB , WINDOW , and WINDOW constants in TestRefprocSanity . java to increase memory allocation and improve
added null checks for ` currentConsole ` before writing to ` systemErr ` and ` systemOut ` when ` currentConsole ` is not initialized to
set the credentials refresh delay to 100 milliseconds in KinesisConfigUtil . java to improve performance by allowing more time for credentials refresh
replaced ` AlertDialog . Builder ` with ` showInfoAlert ` in ` SingleUploadFragment . java ` to improve code readability and maintainability by
modified the ` test ` method to include a ` pack ` parameter in the ` test ` method calls to enhance functionality by allowing package - specific testing
updated Jetty version numbers and error messages in ModulesTest . java and TestBadUseCases . java to ensure compatibility with the latest Jet
fix pluginbundlemanager dependency for opensourcebim and opensourcebim
added stream management for ZipFileInputStream in ZipFile . java to ensure proper resource management and prevent memory leaks
corrected the spelling of " DATA _ MATRIX " to " DATA _ MATRIX " in multiple files to improve code readability
added methods for running active and idle sequences in SequenceGeneratorSource . java to ensure proper handling of idle state when keyRanges are present
updated method name from ` getCurrentyConnections ( ) ` to ` getCurrentActiveConnections ( ) ` in ` BlobServerGetTest . java ` to
refactor ` AnnotatedDelegate ` and ` SyntheticAnnotated ` classes to use ` findFirst ( ) ` instead of ` findAny ( ) ` to
added support for ppc64le architecture in Bits . java and ByteArrayAccess . java to ensure compatibility with additional CPU architectures
updated the error message in RoboMonitoringInstrumentation . java to include a link to the documentation to provide more information about the issue for debugging purposes
replace COMMIT _ TIMEOUT _ MINUTES and ROLLBACK _ TIMEOUT _ MINUTES with Long . MAX _ VALUE in
replaced instances of ` OffsetDateTime . now ( ) ` with ` OffsetDateTime . ofInstant ( ) ` in ` DateUtilTest . java `
refactor BytesRef class to improve code structure to enhance maintainability and readability of the code
added a toast message to indicate that YouTube Player does not work on Lollipop to inform users that YouTube Player does not work on Loll
added validation for unterminated dollar , string literal , and block quotes in SQL parsing classes to ensure proper error handling for unterminated dollar quotes
added a null check for mVibrator before proceeding with vibration duration to ensure that the vibrator is available before proceeding
updated table borders , cellspacing , cellpadding , cellspacing , and unique index handling in DotRenderer . java to improve table rendering clarity and ensure
added a method ` isEncodedPar ` to check for encoded parameters in ` HiveConf ` and updated output handling in ` SetProcessor ` to improve
pdfbox - 2576 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve certificate handling to enhance security and maintainability of certificate validation logic
[ micrometer ] fix uri implementation for proxy uri ( # 3903 )
replaced BitmapLruCache with NetworkedCacheableImageView and added image loading functionality to enhance image loading efficiency and improve image loading efficiency
removed the ' child ' parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature and improve code readability
added a new constant for the controllers version in DependencyBank . java and updated dependency checks in DependencyBank . java to ensure compatibility with the latest controllers
refactor LaunchedURLClassLoader class to improve class loading logic to enhance performance and maintainability of the code
updated the query method in DataSourceHealthIndicator to use requiredSingleResult instead of queryForObject to ensure that the query returns a single result based on
add no - cache header to layout tag , and add no - cache header
[ zeppelin - 4071 ] fix the warning message to be in the english locale .
added an ` Analyzer ` parameter to the ` SolrQueryParser ` constructor and modified the constructor signature to accept an ` Analyzer ` parameter to
updated copyright year in multiple Java files to reflect the correct year to ensure compliance with copyright regulations and improve code clarity
removed redundant code in MainTest . java to improve code clarity and maintainability
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to return a default size of VoidColumnVector to ensure proper initialization of the vectorized row
updated the method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct request name
removed the isTypeMatch method from AbstractConfig . java to simplify the code and improve readability
[ java ] : add a method to offer a publication with correlationid , correlationid , and timestamp .
rename ` trustAllXForwardedRemoteAddressResolver ` and ` trustAllXForwardedRemoteAddressResolver ` methods to ` trustAll ` and
added a new annotation ` NoBootstrap ` to the ` BootstrapInserter ` class and modified ` BootstrapInserter ` to check for the presence of
refactor maxFileSize and flushSize retrieval to use TableDescriptorBuilder ' s getValue method to improve code readability and maintainability by reducing redundancy
updated variable name from ` maxCommits ` to ` requestedCommits ` in ` BranchGraphServlet . java ` to improve clarity and consistency in
added InvocationTargetException to the main method in bug6794831 . java and modified SwingUtilities . invokeAndWait in bug6794831 . java
added a new constant ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method in ` CachingBuildEngine
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to streamline the code by eliminating unnecessary dependencies
removed redundant call to markAsDone ( future , channel ) in HttpProtocol . java to streamline code by eliminating unnecessary duplication
added import for TezConfiguration and a default configuration instance in TezConfigurationFactory to enable the use of TezConfiguration for configuration management
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional check for mIsVisible in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a forget method to the recent sounds array in OpenALAudio . java and implemented it in OpenALSound . java to ensure safe handling of
update simplebaseplayer to report discontinuity only once when first frame be discontinuated
added new DecimalFormat formats for positive and negative number units in NumberAxis . java to enhance precision of number units for better readability in calculations
refactor TargetGraphAndBuildTargets to use ` TargetGraphAndBuildTargets . of ` instead of ` TargetGraphAndBuilder ` to improve code
removed the IndexFileNameFilter implementation and simplified the condition in IndexWriter and SegmentInfo classes to improve code readability and maintainability by eliminating unnecessary dependency
disable the texture stitched file saving and add a check for the entire entity ' s collision bounding box for ladder
added a compressionLevel parameter to multiple constructors in ApkBuilder , SignedJarBuilder , and SignedJarBuilder to allow customizable compression levels for
added a test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify static field inclusion to ensure that static fields are correctly
added support for BYTES data type in MetricFieldSpec , Schema , and SingleValueSet classes to enhance metrics capabilities for byte data processing in the
updated string construction in AssertJMultipleFailuresError , AssertJMultipleFailuresError , and Test classes to improve message formatting to enhance readability
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( ) ` in ` Trade . java ` and removed super ( ) `
added caching functionality to the forum service in SpringDataJPAJoinFetchPaginationTest . java and updated import statements in ForumService . java to enhance
fix pronunciation file to use locale prefix instead of german . pronunciation . featuredefinition .
added a check for empty postBody in SimpleHttp . java and updated test cases in TestHttpPlugin . java and TestHttpPlugin . java to
added dispatcher configuration and shutdownNow method to ClientSideSlb and ClientSideSlbTest to ensure proper resource management by closing the client thread pool when
added conditional logic to setV2 based on flipY state in TextureRegion . java to ensure correct positioning of textures based on flipY
improve error message when no property be map on discovery strategy
added null check for contextPath and initialized it to " NA " to ensure contextPath defaults to " NA " when it is null
[ drools - 4023 ] fix npe when reinitializing type in projectclassloader . reinittypes ( )
added a new constant B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and modified serialization header handling in SerializationHeader .
added validation for ` prefix _ header ` and ` precompiled _ header ` in ` AppleDescriptions ` and ` AbstractCxxSourceRuleFactory
added a new ` AccWeakReference ` class and modified references in ` ImageWatched . java ` to utilize privileged actions to enhance security by
added ` findNextIndex ( ) ` method to ` ObjectMap ` , ` ObjectSet ` , and ` OrderedSet ` classes , and
updated the ` isDirect ` variable from ` true ` to ` false ` in ` VertexBufferObject . java ` to correct the logic for determining
do n ' t call audioeffecthelptextsmap . get ( effectname ) on audioeffecthelptextsmap . get ( effectname
changed the return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to allow retrieval of local coordinates
pdfbox - 5764 : fix a bug in randomaccessreadbuffer . read ( )
added a null check for the context before removing the close hook to avoid potential NullPointerExceptions when context is null
added folderCellLayoutBorderSpacingPx field and updated border spacing logic in CellLayout and DeviceProfile classes to improve layout handling for folder - specific
refactor Numeric parsing to use a new ValueNumeric class to improve code clarity and maintainability by consolidating numeric parsing logic
added a condition to check if the response is not deferred before returning Authentication . NOT _ CHECKED to ensure proper handling of deferred authentication scenarios
updated argument checks in StartArgs . java from " -- module - startd - ini " to " -- add - to - start " to
added a default partition value to DynamicPartitionFileRecordWriterContainer and modified the logic for adding the default partition value to ensure a default partition value is
[ hotfix ] [ stream ] fix nullability of streamoperatorfactory
updated return statements to include classifier checks in DefaultArtifact . java to improve clarity and consistency in artifact identifier formatting
camel - 14263 : camel - kafka : fix the issue that kafka consumer do n ' t call offsetgetstate twice
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve user feedback when a dependency cannot be found
fix a typo in the jabber account registration wizard .
refactor CryptoKey and CryptoKeyOrBuilder classes to improve code organization and readability
added Isolated annotation and increased expected message count in LumberjackMultiThreadTest . java to improve test performance by reducing expected message count during
fix nullpointerexception when player . isdead ( ) be call .
refactor Exchange class to improve code structure to enhance maintainability and readability of the code
api : updateuser : change apikey / secretkey to apikey / apikey / secretkey / apikey / secretkey / updateuser
refactor switch statements to use a constant for provider type instead of switch statements to improve readability and maintainability of the code
refactor AbstractMetaDataExportMojo class to improve code organization to enhance maintainability and readability of the code
added SQLIntegrityConstraintViolationException handling in Hive . java to ensure users are informed when a table is used by at least one materialized view definition
corrected the spelling of " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency with naming conventions
added a new class RoboExecutorService that extends org . robolectric . util . concurrent . RoboExecutorService to indicate that the class should no longer be
added menu items for root groups in GroupTreeView to enhance user experience by allowing subgroups to be added based on the group ' s root status
camel - 14284 : camel - aws2 - buildserviceandspanname should use ` ` / ' ' instead of ` ` / '
updated the process builder creation and verification logic in TestDynamicNumberOfGCThreads . java to improve test reliability and ensure correct handling of additional garbage collection options
replaced ` ImmutableMap < ImmutableFlavor > ` with ` Flavor ` in ` getHostFlavorMap ` and ` getAllPossibleHostFlavors ` methods to
updated SQL creation logic in CreateTable . java and CreateTableDeParser . java , and added parameter handling in CreateTableDeParser . java to
refactor background setting in ChatViewerFragment to improve code readability and maintainability
test : migrate ctiteratortest to junit 5 ( # 4529 )
added a call to ` token . clear ( ) ` in ` Tokenizer ` , ` KeywordTokenizer ` , and ` StandardTokenizer ` to ensure
added a new test class ASTInitializerTest to ensure that the parser does not crash on block statements
updated StateMachineConfiguration and StateMachineFactoryConfiguration classes to use ` StateMachineConfigurerAdapter ` instead of ` Enum < S > ` to ensure proper
simonstewart : do n ' t try to find link in the selenium test suite
[ java ] fix float to string format for pi and double . max _ value .
do n ' t try to get the managed aggregate instance if it be already start .
updated touchable inset handling in TaskbarDragLayerController to use a region instead of a content region to improve user experience by providing more control
removed conditional check for ' ~ ' in FencedCodeBlockParser . java to simplify code by eliminating unnecessary checks
added a socketTimeout property to manage socket read operations in multiple classes to allow users to specify a timeout value for socket read operations
added a sleep delay in ElementAttributeTest . java to handle potential interruptions during test execution
updated BufferedReader initialization to use UTF - 8 encoding to ensure proper handling of character encoding in input stream
refactor List class to improve code readability to enhance maintainability and facilitate future updates
added URI and Path parameters to AsyncFileImpl and created a new test class AsyncFileImplTest for handling write stream errors to improve code clarity and
added API annotation to CucumberEngineExecutionContext and added it to CucumberTestEngine to indicate that the class is stable and should not be
cloudstack - 10164 : allow user to create a vpc through the ui . ( # 2345
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadList
updated version handling in ConstantPoolTagTests to use classFileVersionJava9 instead of getJavaVersion ( ) to ensure compatibility with newer Java versions
do n ' t try to compile with - xlint : do n ' t compile with - xlint .
added a method ` removeAllHeaders ( ) ` to the ` AsyncHttpClient ` class to clear the client header map to provide a way to clear the
replaced ` Vector ` with ` ArrayList ` for storing input and output files in ` Main . java ` to improve performance and readability by using a
updated the default grid column from 4.0f to 3f in AppPreferencesImpl . java to improve the user interface by adjusting the grid
added a condition to check if the view creation is disabled in the planner to ensure that the planner only executes for view creation scenarios
updated date pattern and assertion logic in TestHS2HttpServer . java to improve accuracy of date formatting in assertions
added exception handling to the asObject method in GraphPrinter . java to improve robustness by preventing application crashes due to potential runtime exceptions
simonstewart : fix the issue that ie do n ' t support an insecure ssl certificate
updated byteOffset calculation in ByteBlockPool . java and added a test for excessive allocations in TestByteBlockPool . java to ensure byteOffset
updated the ` firstEncoder ` and ` secondEncoder ` fields to use ` Locale . ENGLISH ` for string formatting to ensure consistent formatting across different locales
added exception handling for unexpected exceptions in TcpTransport . java to improve error management and ensure proper cleanup of stoppedLatch
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress serialization warnings in the code
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from the ` OcamlDebugLauncher
add option to discard / discard change and return to jabref
added checks for response types and registered service access in OAuth20DeviceCodeResponseTypeRequestValidator and updated error messages in NexmoSmsSender to
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to invoke the ` chk ( index , 1
added a new parameter ` inputFormatClass ` to the ` initTableMapperJob ` method in ` TableMapReduceUtil . java ` to allow
removed duplicate calls to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to streamline code by eliminating redundancy
[ gr - 32244 ] polyglot eval should throw polyglotexception if no language be present .
added deprecated reserve configuration and improved logging for reserved commits in ReplicationHandler . java to ensure compatibility with newer Solr versions and provide clear guidance on
updated cache variable names from cacheVariableName to cacheForeignKey in DIHCacheSupport . java and related tests in AbstractDataImportHandlerTestCase . java
changed the type of ` handles ` and ` keyBytes ` from ` long [ ] ` to ` Object [ ] ` in ` ECKeyPairGenerator .
[ flink - 21818 ] [ runtime ] support jobstatus . suspended in restarting
refactor RotationTouchHelper initialization to use a direct constructor instead of a static instance to improve flexibility by allowing instantiation of RotationTouchHelper
refactor code to use flatMap for better readability to improve code maintainability and reduce boilerplate code
updated method parameters from ` lwp _ id ` to ` unique _ thread _ id ` and added a new method ` getThreadForIdentifierAddress
[ java ] avoid duplicate offer in the list when there be multiple offer with the same id .
test : use constant instead of hardcoded value for tlsv13 .
updated MockitoMethodInvocationControl to handle Class instances and modified import statements in SystemClassUserTest and SystemClassUserTests to improve interception handling for class types
updated NotLoadedException to include the ` this ` parameter in multiple classes to provide more context about the context of the exception thrown
replaced the import of DisplayUtils with an intent assignment to set the EXTRA _ FILE to null to simplify the code and ensure the EXTRA _ FILE is
added error handling and file closure logic in StoreDirect . java and StoreWAL . java to improve robustness by ensuring old compaction files are closed
refactor swipe - to - home gesture handling to use a dedicated executor for task snapshot retrieval to improve code readability and maintainability by reducing redundancy
added a ` isHidden ( ) ` method to ` CommandArgumentDefinition ` and a ` hidden ( ) ` method in ` LiquibaseCommandLine
updated the remote address in LoggingKafkaPluginTest . java from 8090 to 9092 to ensure the test connects to the correct server
[ geos - 5131 ] use geoserver . geoserver . extensions . bean instead of geoserverdatadirectory . getresourcepool ( )
added permission checks and improved intent handling in InstallShortcutReceiver , Launcher , and Launcher classes to enhance security by ignoring malicious intents and ensure
added getId ( ) and setId ( ) methods to TiledMapTile , TiledMapTile , AnimatedTile , TmxMapLoader ,
refactor Manager class to improve code readability to enhance maintainability and facilitate future updates
updated JDBC connection to use version = v _ 0 _ 13 in JDBCExample . java and modified Session . Builder to use Version . V _ 0
added properties for schemas and includeSchema in LiquibaseGenerateChangeLogMojo . java to improve flexibility in generating change log files based on specified
replaced ` putIfAbsent ` with ` put ` in ` registryCache . get ( channel . getName ( ) ) ` in ` JmxRegistry . java
[ flink - 11818 ] [ benchmarking ] use logger . warn instead of logger . error
removed the ' final ' modifier from the ` doPutRecord ` method signature in ` AbstractCacheRecordStore . java ` to allow subclassing of
updated the return statement in Tools . java and FileSelectorFragment . java to ensure correct concatenation of game directory paths and improve code readability
added new test methods for handling large and slow response content in FastCGIProxyServletTest . java to enhance test coverage for different sizes and
added a new service to start ReadInteractionsService in MarkReadService . java to enable handling of read interactions functionality in the application
added a conditional check for lintClassfile in ClassReader . java to ensure warnings are logged only when lintClassfile is present
added configuration for the SMTP port in Email . java to allow dynamic configuration of the SMTP server port
fix the multiple file concurrent write issue when reload sslfactory ( # 12384
updated the date format from " yyyy - MM - dd ' T ' HH : mm - dd ' T ' HH : mm : ss
updated the expected message in SpyingOnRealObjectsTest from " private class " to " mocking a private class " to improve clarity of the
added an ` isEndsOnNL ` flag and modified conditional logic in ` LineBox ` and ` LineBox ` classes to improve line ending
updated filePathString assignment to handle null parent paths gracefully to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to clean up the code and improve readability
refactor ServletInputStream initialization and add a new test for handling Windows - 1250 multipart content type and boundary in NinjaServletContextTest to improve
added a property " management . endpoints . web . exposure . include = * " to the AbstractCasEndpointTests class to allow exclusion of specific endpoints
added a check to ensure the current graph is a dynamic graph to prevent runtime errors caused by invalid graph types
allow scopeone . value ( ) to be use with @ scopeone . value ( ) . default ( ) default value ( ) . fix #
camel - 14284 : camel - jsonpath - add option to suppress exception in jsonpath expression
removed redundant calls to ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter . java to streamline the startup process
updated usage messages for CLHSDB , HSDB , and HSDB in CLHSDB . java and HSDB . java to
updated FaultTolerantChunkProvider initialization in FaultTolerantStepFactoryBean and removed redundant code in SimpleStepFactoryBean to improve
[ beam - 10717 ] remove deprecate write ( ) class from writesinkitcase and write sink itcase
refactor ` ShadowAccessibilityManagerTest ` to use ` AccessibilityManager ` instance instead of direct calls to ` getAccessibilityManager ( ) ` to
update flutter usage statistics display id ( # 4296 )
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` across multiple classes to simplify the class hierarchy by removing unnecessary dependency on SourcePath
refactored the ` EnumDataTypeHelper ` initialization and added a new ` PostgreSQLEnumDataTypeHelper ` class to improve code organization and
updated log path comparison to use file separator character to ensure compatibility across different operating systems
rename ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to improve clarity by using a more
added error handling for unsupported index tables in HiveMetaStoreClient to ensure proper management of unsupported operations when dropping index tables
added a condition to update disabled flags when the visibility is not VISIBLE in RecentsView . java to ensure that the actions view disables scrolling
added conditional highlighting for non - Windows platforms in Repl . java to improve syntax highlighting for non - Windows environments
fix for http : / / bugs . eclipse . org / bugzilla / show _ bug . cgi ? id = 49437
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java ` to
removed unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency
changed the initialization of ` _ metaDataComplete ` from ` true ` to ` false ` in ` MetaData . java ` to ensure that the metadata is
refactor removeTaskTarget method to use THREAD _ POOL _ EXECUTOR for asynchronous task removal to improve thread safety and prevent potential
added support for the " RELEASE " environment variable in the JsBundleGenrule to enhance the handling of release flavors in the build process
updated variable type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test
added test to ensure that newline characters in comments are correctly crlfed to improve code readability and maintain consistent coding standards
added support for setting the Liquibase hub mode in AbstractLiquibaseChangeLogMojo to enable dynamic configuration of the Liquibase hub mode
removed unnecessary null check for item in JsrFaultTolerantStepBuilder and simplified conditional checks in JsrChunkProcessor to enhance code
added error handling for missing linkDb in the indexing process to improve robustness by handling cases where linkDb does not exist
refactor the method retrieval for setting the indexer thread pool in LuceneTestCase . java to improve code readability and maintainability by reducing complexity in
updated the address string to use a default value of 5000 instead of a hardcoded value to simplify the code and improve readability
refactor MapJobExecutionDao to use a copy method for job executions to improve code readability and maintainability by encapsulating the copy
added a new file ` DownloadTest . java ` for testing image upload functionality to facilitate testing of image uploads in the application
[ java ] fix typo in format . language and format . language
updated exception handling for primitive types in GenericUDFRound . java to include a new argument type exception to improve clarity and maintainability of exception handling
added null check for selectedVersion before processing tag versions in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
updated the matchers collection in SecurityConfig . java to include multiple AntPathRequestMatchers to enhance request matching capabilities for improved security
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a check for ` concreteClass ` before processing ` constructors in ` BeanDefinitionInjectProcessor . java ` to ensure that only valid concrete classes are
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] use fixed delay instead of scheduleAtFixedRate for the notification schedule .
removed unnecessary security checks for socket status in AprEndpoint . java to simplify the code and improve readability
deleted the ` SunToolkitSubclass . java ` file containing a method for flushing pending events in the ` SunToolkitSubclass ` class to remove unused
replaced ` MathUtils ` with ` Matrix4 ` for translation handling in ` DefaultRenderableSorter . java ` and added a method to check rotation and
added unit tests for registering wrapper handlers before primitive type handlers in TypeHandlerRegistryTest . java to address issue # 165 and address issue #
pdfbox - 4892 : add support for alternate color space ( a suggest by valerybokov )
updated URLs in CommonsApplication , PageTitle , and Utils classes to use BuildConfig instead of CommonsApplication to improve maintainability by centralizing configuration
camel - 16263 : camel - health - add a fake health check for camel - platform - http .
added null check for blockPos in EntityThornChakram . java to prevent potential NullPointerException when accessing block state
added a test for altering a table with indexes extend primary key in AlterTableWithViewsIT . java to ensure that the index functionality works correctly
updated offset initialization in FileFloatSource . java and added conditional assertions in TestFunctionQuery . java to improve document handling and test coverage based on random
remove DrillMongoConstants . ID from MongoRecordReader to clean up unused fields in MongoRecordReader
added disconnect methods to YeelightHandlerBase and updated connection state management in DeviceBase to ensure proper resource cleanup and state management during connection termination
added auto _ increment functionality to the Parser class and a test for compatibility to ensure proper handling of the " AUTO _ INCREMENT " keyword
fix ( kubernetes - client - api ) : add resync _ period to sharedinInformerfactory
cloudstack - 10254 : fix npe in templatemanagerimpl when uservm be null
updated image handling in ShadowBitmapFactory to use RobolectricBufferedImage for improved performance and clarity to enhance code readability and maintainability by
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up the code and improve maintainability
[ jbrules - 2423 ] add example broker . drl and broker . data / stocktickstream . drl to the broker
added a new variable ` legendTop ` and updated its assignment in ` PieChart . java ` to improve clarity and ensure correct positioning of legend
added a check to return early if the world transform is zero in BaseShader . java to avoid unnecessary processing when the world transform is zero
add a new file ` ` . txt ' ' that create a script file that can be read from a file .
nifi - 1042 add restlistener . remote . source . ip attribute to listenhttpservlet . this close #
[ iotdb - 4021 ] fix compaction log file leak in levelcompactiontsfilemanagement
updated the attribute name from " xlink : href " to " href " in ComponentDescription . java to ensure the correct link format is used for
camel - 15836 - camel - aws2 - s3 : use a constant for timeout checker in camel - aws2 - s3
hbase - 26486 addendum add log for regionserver state transition when cluster be shut down
updated log message formatting and improved null checks in Slf4jSpanLogger and DefaultTracer classes to enhance code readability and prevent potential NullPointerException
trim whitespace from the ` addActiveOption ` method call in ` Main . java ` to ensure the option is properly formatted by removing leading and trailing
added depth effect preference and updated wallpaper zoom out logic based on user preferences to improve user experience by allowing dynamic adjustment of wallpaper depth based on
added a assertion to verify the success count of the overseer ' s state in the OverseerTest class to ensure that the overseer correctly
removed the method ` getKernelVersion ( ) ` from ` LinuxFileStore . java ` to simplify the code and improve readability by eliminating unnecessary
refactor ExecConstants class to improve code readability to enhance maintainability and facilitate future updates
removed the ScreenRecordRule import and annotation from ThemeIconsTest . java to eliminate unused imports and improve code clarity
added a method ` setScanAttributeForPaging ` to ` TableSnapshotResultIterator ` and introduced a static method ` setScanAttributeForPaging `
added a check for ` lowRange ` before setting it in ` Request . java ` and updated the condition in ` RequestV2 . java `
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and adjusted cache size estimation
updated the zone ID assignment from ` getUuid ( ) ` to ` getZoneUuid ( ) ` in ` HostJoinDaoImpl . java `
updated content type header from " application / json " to " application / utf8 _ value " in BaseLivyInterpreter and LivyInterpreterIT
refactor filesystem removal logic in ZipFileSystemProvider . java to improve clarity to enhance code readability and maintainability by reducing redundant checks
replaced ` toJson ( ) ` with ` json ` in ` HttpRequestBuilder . java ` to improve clarity and consistency in JSON handling
updated the polling mechanism for hard commits in SoftAutoCommitTest . java to increase the timeout from 2 to 5 seconds to allow more time for
[ selenide ] fix exception in listener . beforeevent ( ) and afterevent ( ) .
refactor multiple dial - related classes for consistency and clarity to improve code maintainability and readability across the dial - related components
updated error logging format in SyncQueue . java to improve clarity and consistency to enhance code readability and maintainability
updated the version of the Ryuk container from 0.1 . 0 to 0.1 . 1 to incorporate the latest features and improvements in the container
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a new
refactored the path resolution logic in FMLClientLaunchProvider . java to improve code readability and maintainability
[ hotfix ] [ yarn ] use createyarnclusterdescriptor directly in yarnitcase
make localmapstatsprovider . getstatspermap ( ) return empty map stats per map if no data include map
deleted the AllTests . java file to remove unused test suites to streamline the codebase
added new Unicode characters for non - breaking hyphens and zero - width spaces in AbstractWordConverter . java to improve string formatting for better readability
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations do not star
updated the method call in ` createRowKeyForMappedProperties ` to use ` getResultMappingsForRowKey ` instead of ` getResultMappings ( )
added a boolean flag ` eventHandled ` to ` UIText . java ` to enable event handling for better event management
deleted the Controller . java file and replaced it with Weldby . Weldby . Weldby . Weldby . Weldby
ruby flavor : fix bug in tregexbacktrackingnfaexecutornode . monitorcapturegroupsinemptycheck
added a protected variable ` liquibaseProLicenseKey ` and removed it from ` AbstractLiquibaseMojo . java ` to streamline license key management
use setmeasureshierarchymemberreader instead of setmembershierarchymembershierarchieshierarchymemberreader
add - g option to generate debug info for node source position
mondrian : fix typo in javadoc .
added support for handling custom Kotlin friend paths in Kotlin library steps to enhance Kotlin library integration by allowing customizable friend paths
added aliases for BATK , BRAHMI , and MAND in Character . java and modified the main method in CheckScript . java to
refactor equality checks in ExecutionCommand and add a new method to convert JSON strings to ExecutionCommand objects to improve readability and facilitate easier comparison of
refactor Mockito class to improve readability to enhance maintainability and facilitate future updates
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope object
updated the handling of CSSPrimitiveValue types and added validation checks for the cmyk ( ) function to improve the accuracy of number and percentage processing
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` in ` LocalIndexIT . java ` to verify the behavior of
replaced InstrumentationRegistry with ApplicationProvider and updated test context retrieval in BaseAndroidTestCase . java and BackupHelperTest . java to ensure compatibility with the latest
updated message formatting in ItemListActivity , ItemListActivity , and LiveTvGuideActivity to include the item name in the message to improve clarity
updated condition in RendererUtilities and added a new test case in RendererUtilitiesTests to improve code readability and maintainability
refactor ` ask ` and ` bid ` methods in ` KrakenStreamingAdapters ` to use ` ArrayNode ` instead of ` Iterator `
added a try - catch block around database column addition in FileContentProvider . java to handle potential SQLite exceptions during the upgrading process
removed System . err . println ( line ) from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor and refactored data size computation in ConvertJoinMapJoin . java to improve performance by optimizing data size calculation
updated the ` buildView ` method to accept a ` Context ` parameter and added background resource configurations to improve context handling and ensure consistent background resource
added an ` assertAuthentication ` consumer to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests `
vpc : do n ' t set vpcid to null ( vpcid = = null )
[ flink - 10955 ] [ test ] disable flink savepoint test on version 1.11
corrected the spelling of ' @ ' in multiple Java files to improve code readability and maintain consistency in naming conventions
modified the loop condition to check if the index is within the bounds of the actions array to ensure that the loop only executes when the index is
updated the BitmexStreamingExchange class to extend the BitmexExchange instead of BaseExchange to ensure compatibility with the correct Bitmex exchange
[ cst - 15835 ] add unit test for relationship with orgunit and orgunitrelationshipvirtualmetadata
added null check for spatial before accessing its properties to avoid potential NullPointerExceptions when spatial is null
updated conditional token filtering logic and added position increment logic in multiple filter classes to ensure correct handling of token positions and improve test coverage
do n ' t use graph . unique ( ) in unsafestorenode . add ( ) .
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure
added a test to verify that the event repository is empty to ensure that the event repository behaves correctly when no events are found
alexeibarantsev : remove unused parameter from authenticationattributeprocessor . getattributetemplatename ( )
added null check for the key in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that a null key is not thrown
added a method ` setTypeface ` to the ` CodenameOneTextPaint ` class that throws a RuntimeException if ` setTypeface ` cannot be
added ` open ` method to ` AzurePinotFS ` , ` LocalPinotFS ` , and ` PinotFSFactoryTest ` classes
removed the deprecated fail method from WebDriverRunner . java to clean up the code and improve maintainability
simplified the conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use a single boolean flag instead of a static class to improve code readability and maintainability by encapsulating
updated SQL string format in CreateTableGeneratorTest . java to ensure compatibility with SQL syntax requirements
added support for filtering mode in VectorizationContext to ensure proper handling of filter modes in the vectorization process
updated the type of ` moveSelectorConfig ` from ` MoveSelectorConfig ` to ` MoveSelectorConfig ` to improve type safety by specifying the type
replaced ReorganizeTableStatement with modifyDataTypeStatement in ModifyDataTypeChange . java to improve code readability and maintainability by using a more de
updated cluster name handling to use constant values instead of hardcoded values to improve maintainability and readability of the code
peergroup : do n ' t try to connect to a peer that do n ' t try to connect .
nano . style ( string , string , string ) : fix issue with style string .
update schematic fixer to use AdventureNBTConverter . frombinarytag ( ) instead of fixup ( )
updated return statement from " Use ` String ` to " No # toString ( ) on String " in NoToStringOnStringType . java to improve
updated memory allocation from 64m to 32m in TestThreadFailure . java to improve memory management for thread failures
refactor ` retryFailed ` method to return ` FailureContext ` instead of ` int ` and add a new ` DataProviderRetryAnalyzer ` class
updated the return value from ` tokens [ 0 ] ` to ` tokens [ bandwidth ] ` in ` BucketStateIEEE754 . java `
simonstewart : implement selectpopup , deselectpopup , capturenetworktraffic , and capturenetworktraffic
refactor ` doPrintEntry ` method to remove the ` printWarning ` parameter and simplify its usage to enhance code readability and maintainability by
[ hotfix ] [ test ] fix typo in taskasynccalltest
added checks for dialog decoration and shape , shape , and background color in Dialog and Frame classes to ensure proper component behavior and prevent illegal state exceptions
changed the ` state ` variable from private to final in ` DefaultProjectFilesystem . java ` to enforce immutability of the ` state ` variable
refactor RedisObjectFactory to utilize sentinel configuration and standalone configuration to improve clarity and maintainability of Redis connection setup
add lastseendelayedmessage property to chat room jabber implementation .
replaced ` new Callback . Adapter ( ) ` with ` NOOP ` in ` notifyContent ( listeners , response , ByteBuffer . wrap ( ) `
replaced CreateShareOperation with OperationsService and refactored related operations handling to improve code organization and enhance functionality for managing share operations
simplified the condition in BeanDefinitionInjectProcessor . java and added @ Inject annotation in FieldPropertyInject . java to improve code readability and maintainability by
replaced direct calls to ` getBuildHeight ( ) ` with ` yStart ` in ` ClassicPlotManager . java ` to improve code readability
added a check for NullPointerException in SmackIntegrationTestFramework . java to ensure proper handling of NullPointerExceptions
added a boolean parameter ` readLinked ` to the ` readDirectory ` method in ` EXIFReader . java ` to control the behavior of directory
added support for ` ENABLED _ LS ` mode in ` VersionedTargetGraphMode ` and modified executor assignment logic in ` VersionedTarget
added a check for video format before processing media types in DLNAResource . java to ensure proper handling of video formats in the media processing logic
refactor AutoMlClient to improve code structure to enhance maintainability and readability of the codebase
[ lwjgl ] make lwjglnativesloader loadable by default
added support for customizable escape characters in CSV strategy to enhance flexibility in handling special characters in CSV processing
updated grant type validation logic in ClientRegistrations and updated corresponding test cases in ClientRegistrationsTests to improve clarity and functionality of grant type validation in
updated exception messages in Throwable . java and added initCausePlumbing functionality in SuppressedExceptions . java to improve error handling and provide
added a SQL query in DerivedTableIT . java and updated the iterator initialization in ClientAggregatePlan . java to improve query validation and ensure correct
[ hotfix ] [ table - planner - blink ] fix regressionevaluator . rsquare ( ) in streamexpressiontest
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 560 .
updated type casting from MapWork to MapWork in SparkPlanGenerator . java to improve code readability and maintainability by reducing type casting
add support for country image in pdfjndi report , a suggest by valerybokov
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusting issuers in JwtIssuerAuthenticationManagerResolver
updated resource check in AbstractScriptDatabaseInitializer to use isReadable ( ) instead of exists ( ) and added a new test for database initialization failures to
llvminteroptype : do n ' t cache interop function if it ' s a method
replace MILLISECONDS . sleep ( 500 ) with MILLISECONDS . sleep ( 500 ) in AbstractBasicMockingIntegrationTest to improve test reliability by allowing more time for
added a new file KernCrash . java that implements a font rendering model using a kerning font to demonstrate the use of a kern
added a failure call to the fail ( ) method in LinkedHashTreeMapTest . java to ensure that the test fails gracefully during execution
added a new method ` getInterfaceAddresses ( boolean addPrefix = true ) ` to retrieve network interface addresses to enhance network connectivity by allowing users to
close the housekeeper executor if it ' s not in use .
updated the condition check from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to ensure
refactor assertion methods in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` to validate the functionality of the ` getTreeMap ` method in ` org . mapdb
changed the type of ` results ` from ` Set < CategoryItem > ` to ` ArrayList < String > ` and modified the ` doInBackground
updated the validation logic in ValidatorTest . java to check for today and birth years and improved error handling to ensure that the person is over the maximum
added constants for alarm , error , and error codes in GrblController . java and updated command completion handling in GrblController . java to improve
updated the scroll format string retrieval logic in Workspace . java to handle cases where no screens are available to improve user experience by providing a clearer string
removed the ` count ` parameter from the ` getTrades ` method signature in ` BittrexMarketDataService ` to simplify the method signature and
updated return statements and logic in ConsoleReader . java and MemoryHistory . java to improve code readability and ensure proper handling of null prompts
removed the " . jdk " suffix from the jdkPath initialization in JavaBuild . java to simplify the path construction for better readability
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` across multiple classes to improve code readability
added a ` Consumer < String > ` parameter to the ` JFCModel ` constructor and updated related methods to include a ` Logger ` parameter to
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is non - negative to prevent runtime errors
added methods to create and drop views in TestUtil and a test for view privileges in DatabaseMetaDataTest to enhance functionality for creating and dropping views
added support for stable float and double tests in NanTest . java to ensure tests are only executed on supported platforms and improve error handling
added a new file DesktopTaskbarUIController . java to implement a DesktopTaskbarUIController for managing taskbar icons to enhance user experience by
added task count tracking and improved button state management in the SearchModFragment and ModItemAdapter classes to enhance user experience by tracking the number of tasks
updated file handling methods in Files . java to improve performance and maintainability of the code
refactor methods in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to use Collection instead of Set to improve code readability and maintain
updated the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and removed the ` @ FunctionalInterface ` annotation to simplify the interface
add more logging to resourcepackloader . getmodinfos ( ) . getmodinfos ( ) . modfile ( )
chore : update gapic - generator - java version to 2.1 . 0 ( # 51 )
added grow ( ) and growX ( ) and growY ( ) methods to the Cell class to enhance functionality by allowing dynamic resizing of the
refactored the code to simplify the binding structure and improve readability to enhance code maintainability and reduce boilerplate code
add try - catch block to fix test failure
replaced long array with byte array for memory allocation in MetricsMemoryTester . java and added a memory fail count check in TestDockerMemoryMetrics . java
deleted the JobParametersPrototype . java file to remove unused prototype class to streamline the codebase
added a security configuration option to the MappingsTable class and updated related classes to support it to enhance security management in the mapping process
renamed ` APPLE _ SWIFT _ OBJC _ CXX HEADERS ` to ` APPLE _ SWIFT _
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable dumping of files by default
[ mediacodec ] workaround for eos codec on some device .
[ java ] do n ' t set publisher limit if there be no spy .
added a check for ` outputOptions . isNoInfo ( ) ` in ` BaseFormatter . java ` to ensure that ` dbInfo ` is
updated the SSL configuration in ConnectionProperties and adjusted the useSecureConnection logic in PrestoDriverUri to enhance flexibility in connection configurations by allowing
added DOMOutputOptions to set error output options for the latex element in the buildDOMSubtree method to improve error handling by providing custom error output options
refactor assertion methods in Assert . java to improve code readability and maintainability
[ java ] add retain option to publish event .
added ` testCaseName ` to ` EventSerializationTest . java ` and modified ` EventSerializationTest . java ` to include ` testCaseName ` to
[ hotfix ] [ table - planner - blink ] fix typo in sqlgroupedwindowfunction
removed the import of ` Parsed ` from ` LatexToUnicodeAdapter . java ` to streamline dependencies and improve code clarity
added read - write locks and modified session context timeout handling in AbstractSessionContext . java to enhance thread safety and improve session context management
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` AppModule . java ` and refactored the `
[ calcite - 2576 ] use ansi in sqlnodeconvertcontext instead of calcitesqldialect
changed log level from debug to trace for firmware update handler messages to improve logging granularity for better debugging
added unit tests for handling null dates and timestamps in GetObjectTest . java to ensure proper handling of null values for date , date , and
refactor string concatenation logic in StringSubject . java and add a new test for named string value in Subject . java to improve code readability and
added a test method to verify repository permissions for multiple teams in UserModelTest . java to ensure correct permission handling for multiple team permissions in the user
added a new Java file ` Test7088020 . java ` that implements a method handle that throws a ` WrongMethodTypeException `
refactor audience restriction validation in Saml2ResponseValidator to improve audience URI validation to enhance clarity and maintainability of audience validation logic
refactor ` afterAppAuthChanged ` method implementations in ` AbstractDataChangedListener ` and ` HttpLongPollingDataChangedListener ` classes to
replaced direct calls to ` _ stderr ` with null checks for ` _ stderr ` in ` StdErrLog . java ` to ensure safe handling of
added a new warning constant ` SEPARATION _ ORDER ` and checked the number of active stages below the current stage in the simulation engine to ensure
updated the parameter from offlineTableConfig to realtimeTableConfig in the query optimizer to ensure the query is optimized for real - time tables
updated the CREATE _ METRICS _ AGGREGATE _ TABLE _ SQL statement to include a hostMinuteAggregrateSql variable and added
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added functionality to set and get BluetoothClass in ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enable testing of BluetoothClass functionality in
updated method name from ` contains ` to ` containsProfile ` in ` GlowOfflinePlayer . java ` and ` UuidListFile . java
[ drools - 4071 ] fix sum function to return an empty list instead of null
replaced graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) in DataBridge . java to simplify
updated coreNodeName assignment to use nodeProps . getCoreName ( ) instead of nodeProps . getNodeName ( ) to ensure correct core name is
add backpressure update to chat activity to make it easy to update the toolbar and status bar
refactor TaggerParserPosTagCompatibilityITest . java for improved clarity to enhance code maintainability and readability
added @ LuceneTestCase . SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase to suppress the use of SimpleText codec in tests
updated condition in ` elemtype ( t ) . tag < = lastBaseTag ` and added a new class ` T7005671 ` with
updated tangent calculations in DelaunayTriangulator and added a seed in DelaunayTriangulatorTest to improve triangle
added @ Override annotation to multiple ArrayList , HashSet , and TreeSet classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet to use Builder for building JWT claims set to improve code readability and maintainability by reducing boilerplate
refactor state handling in StackOverflowCheckImpl . java to improve clarity and functionality to ensure accurate state changes during overflow checks
added shadow methods for SQLiteDatabase , SQLiteDatabase , and ContentValues in Robolectric and removed deprecated methods from ShadowSQLiteDatabase and ShadowContentValues
replaced direct calls to ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglGraphics . java ` to
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` in ` BKDWriter . java ` to utilize ` ArrayUtil
updated locale initialization to include a new script parameter and modified default locale retrieval logic to enhance locale properties management and ensure proper initialization of default locale settings
updated the method call from ` mCurrentTextAlpha ` to ` mIconLastSetTextAlpha ` to ensure the correct alpha value is returned for
corrected a typo in the warning message from " Confimap " to " ConfigMap " to improve clarity and accuracy of the warning message
replaced instances of ` LimitedModeLoginMockMvcTests ` with ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` in ` Default
trim whitespace from string inputs in GzipFilter . java and GzipFilterDefaultTest . java to ensure consistent handling of URLs and paths with
updated the output type assignment from ` _ outputType ` to ` _ outputType . WRITER ` in ` Response . java ` to ensure
updated the default regexp implementation from JDK to JONI in RegExpFactory . java to ensure compatibility with the latest RegExpFactory features and improve
replaced ` LooperExecutor ` with ` Executor ` and refactored task execution handling in ` ViewCapture . java ` to improve task management and
do n ' t ignore unknown style for dfki pavoque voice
fix rename a repository into a new subfolder fail ( issue 33 )
updated the default node discovery IP from " 0.0 . 0.0 . 0 " to " 127.0 . 0.0 . 1 " in the warning log to
camel - 14263 : camel - jbpm - use the default workitem handler in camel - in - only mode
pdfbox - 4892 : make jpegutil constructor private , a suggest by valerybokov
rename workmodetogglecontainer and workfootercontainer to workmodetogglecontainer to workfootercontainer
updated multiple Java classes for consistency and clarity to improve code maintainability and readability across the project
refactor ( prettyprinter ) : improve handling of implicit type parameter .
[ java ] free memory in operatorcontext to prevent memory leak .
updated error messages in QueryByExamplePredicateBuilder and simplified query string replacement logic in StringQuery to improve readability and maintainability of the code
replaced ` evictionCounter ` with ` AtomicLong ` and updated related methods in ` ConcurrentLRUCache ` , ` FastLRUCache ` , and
added a new method ` runAndWaitInJavaFXThread ` to ` DefaultTaskExecutor ` and introduced a ` runAndWaitInJavaFXThread `
do n ' t use localhost if it ' s not an instance of Inet4Address .
[ java ] set the root of the database in MainFrame to ensure the application uses the correct database root for database operations
added logging for the ` markedclientenabled ` and ` markedserverenabled ` configurations in ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrap
[ hotfix ] [ table - api ] fix typo in tableenvironment javadoc
updated statement timeout handling in MapperBuilderAssistant and MappedStatement classes to ensure consistent timeout configuration across the codebase
removed unnecessary ` int ` parameter from ` setHangingTscTimeout ` and simplified method signatures across multiple classes to streamline the timeout handling
added GeoLocationRequest and GeoLocationResponse classes to the serialization plan in CasCoreAuthenticationComponentSerializationConfiguration . java to enable the serialization of location
updated preconditions in ArtifactFilesystem and related tests in ArtifactFilesystemTest to ensure that only BuildArtifact instances are processed to improve code reliability and clarity in
tika - 349 : excel parser should not throw an exception if the document be not a HPSF document
apps - 2418 avoid concurrent modification of the conditional list
do n ' t wait for the input stream to be write to the pipe when write to the connection .
added equality check for ` actual ` and ` expected ` values in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest
updated visibility logic for RECENTS _ CLEAR _ ALL _ BUTTON to include VERTICAL _ SWIPE _ INDICATOR and
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions when nav is not initialized
make sure we do n ' t need to check if the image be absolute
refactor ErrorOccuredInOnExceptionRoute class to improve error handling logic to enhance clarity and maintainability of error handling logic
[ astro ] use schedulewithfixeddelay instead of scheduleAtFixedRate in astrodiscoveryservice
remove unnecessary initialization of irrunit in singlepassandimagebasedlightinglogic
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang due
added import statements for AbstractModule , AbstractModule , and Stage in GuiceFactoryTest . java to improve clarity and maintainability of the code by
added system feature management methods to ` RobolectricPackageManager ` and corresponding tests in ` RobolectricPackageManagerTest ` to enable tracking of
added a new property ` PROP _ PATH _ POSTFIX ` to the ` RCAFrameworkLoader ` class and created a new ` RCAFramework
removed the logging statement for the cancellation watch dog to streamline the logging process and reduce unnecessary log clutter
added null and empty check for enumerationValues in RADProperty . java to prevent potential NullPointerException when enumerationValues is empty
renamed variable ` needInline ` to ` needStartText ` and ` needEndText ` for clarity to improve code readability and maintainability by
updated the ` collectAndSendTelemetryData ` method to use ` asynch ` for asynchronous data sending to improve performance by avoiding blocking the data collection
removed conditional logic for altering the UPGRADE _ ITEM _ TABLE column type in UpgradeCatalog260 . java to simplify the column
updated error messages in BaseTableDataManager . java to include space and write permissions to improve clarity of error messages related to directory creation and permissions
refactor DatasetUtilities class to improve code structure to enhance maintainability and readability of the code
added a key to append the selector ID in the matcher ' s output to improve the clarity of selector identification in the output
updated debug logging format and transformation logic in GouraudShadingContext . java to improve readability and maintain consistency in color formatting
updated ALPHA _ CHANNELS from 3 to 4 and added ALPHA _ INDEX _ HIDDEN _ WHILE _ DRE
updated KeyExchange . java to include a new list of algorithms and algorithms to improve code organization and maintainability
refactor CockroachDatabase to check if the connection is an instance of JdbcConnection before attempting to query the version of the Cockr
refactor file index handling in ServerMainTest . java to improve clarity and maintainability to enhance code readability and maintainability by using a consistent
added getMediaRecorderingMimeType ( ) methods to CodenameOneImplementation , MediaManager , and Display classes to retrieve the media recording mime type to
make shaderhelper . useshaders public to allow customization
[ calcite - 2576 ] bindablefilter should return 13500 instead of 6588
removed unnecessary whitespace in ZkStateReader instantiation to improve code readability and maintainability
pdfbox - 4892 : disable xml feature for xmp meta parsing , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` to the ` org . springframework . security . oauth2 . client . registration ` package to
modified the condition to check for multiple < script > elements in the result to ensure all occurrences of " < script > " are processed correctly
updated variable name from ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and added a new test class for
refactor border property retrieval to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by centralizing border
updated logging level from info to debug in WatchConnectionManager . java and WatchHTTPManager . java to reduce log verbosity and improve performance during reconnect backoff
updated the ` register ` method to include ` HubRegisterResponse ` in ` InternalDropAllCommandStep . java ` and ` HubUpdater . java
replaced bitwise operations with byte . toUnsignedInt and byte . toUnsignedInt methods across multiple files to improve code clarity and maintainability by using
updated string concatenation in OpenTracingTransactionProducer . java to improve code readability and maintain consistency
updated the default value of ` CachingBuildEngine . DepFiles . ENABLED ` from ` CachingBuildEngine . DepFiles .
changed the default value of rangePannable from true to false in CategoryPlot . java to disable rangePannable functionality for better user experience
updated the logic for managing the work mode switch in AllAppsContainerView . java to improve handling of work mode switching based on the current active
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` in ` Visualizer2TopComponent . java ` to
[ test ] - allow cancellationexception in timeout test for generate and
changed constructors from ` JarFileResource ` to ` protected ` in ` JarResource ` and ` JarFileResource ` classes to enhance encapsulation
refactor DefaultTrackSelector class to improve code readability to enhance maintainability and facilitate future updates
added a sleep loop to wait for unseqMerging before proceeding to ensure proper synchronization during unseqMerging process
updated fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to reflect the correct currency type being used in
updated SQL query to use ` @ Table ( name = " post " ) ` instead of ` @ Table ( name = " post " ) `
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
ambari - 11713 . update hive view config settings ( dlysnichenko , review by szehon )
updated onComplete ( ) method call in SendHeadersFirstPublisher . java to improve code readability and maintain consistency
camel - 15836 - camel - aws2 - aws : use jsonpojobuilder instead of deserializer
added support for BIG _ DECIMAL type in RangePredicateEvaluatorFactory to improve error handling and provide clearer context for unsupported value types
replaced instances of ` inner . inner ` with ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper ` and ` TreeBackedProcessor
removed redundant print statements for annotations in ParameterInfo . java to clean up the code and reduce unnecessary console output
added support for Ac3 streaming in PlaybackController and updated related code in PlaybackController . java to enhance playback functionality and improve error handling
added a new HashMap to return the content of a HttpResponse instead of creating a new HttpResponse to provide a clearer representation of the response content
added @ SuppressWarnings ( " deprecation " ) annotation to DelegatingStatement , DiskFileItem , and DiskFileItem classes to address deprecation
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT . java ` to verify the functionality of SQL inserting
refactor RTimerTree class to improve performance to enhance performance and efficiency of timer operations
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graph
[ jme3 ] fix gap x calculation and add test for issue # 358
updated the executor initialization and scheduler configuration in ClientConnector . java to include a unique identifier for the client pool to improve debugging and traceability of thread
refactored ViewResultsFullVisualizer to remove protected fields and added error checkbox handling to improve encapsulation and enhance user interface responsiveness
added ` phoneNumbersListDescription ` and ` phoneNumbers ` fields in ` ScimUserEndpointDocs . java ` to support user - specific phone
added private constructors to DeleteFiles , IndexFiles , and SearchFiles classes , and modified method signatures in IndexFiles , IndexHTML , and Search
added null checks for responseMap and improved error logging in JsonHttpPropertyRequest and URLStreamProvider to enhance error handling and provide clearer logging for
refactor SolrRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if the parallel parameter is not DEFAULT _ PARALLEL before proceeding with further operations to ensure that the parallel option
fix checkstyle issue in testvmwaremo and testvmwareutil
added a condition to check for SMARTCARD exceptions in CardImpl . java to enhance error handling for smart card scenarios
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary sysout checks during test execution
camel - 16263 : camel - bindy : fix camel - bindy test to work with camel - bindy
set default value of useowner and usetimestamp to false instead of true .
changed the parameter type of the ` runAndCheckException ` method from ` Runnable ` to ` ThrowingRunnable ` in ` Utils . java `
added null checks for via , context , and pathFromSeed in CrawlURI . java to improve robustness by preventing potential NullPointerExceptions
camel - 15836 - camel - aws2 - sdb : use context . getcomponent ( ) in camel - aws2 - sdb
added support for liquibase file format ( thanks to achimgrie )
bug 52265 - default certificate validity to 90
added smoothDelta and lastDeltaUpdate variables for frame , frame , frame , frame , and smoothDelta in ThreadHandler . java to improve frame handling
added pagination support in the ` HttpBatchReader ` , ` HttpScanBatchCreator ` , and ` TestPagination ` classes to enhance functionality to support
added null check for CompactionInfo client in Worker . java and a corresponding test in TestWorker . java to ensure robust handling of cases where the
updated fragment state management in ShadowFragmentActivity and added tests in FragmentActivityTest to ensure that fragment states are saved correctly during instance state changes
refactor jobIdentifier retrieval and improve code readability by formatting to enhance maintainability and clarity of the code
added a test for parsing simple Android color references in ColorResourceLoaderTest . java to ensure proper functionality of color resource loading for Android color resources
added error handling for NoResultException in AbstractJPAQuery . java and added a test for null unique result in AbstractStandardTest . java to
do n ' t add new community to the collection if there be no owner .
updated the reference to LawnchairApp in DepthController . java to ensure compatibility with the LawnchairApp class for wallpaper depth effect
removed the import of ProcessTools from LocalManagementTest . java to streamline the code by eliminating unnecessary dependencies
removed the ` updateTotalEnergyAverageUsage ` method signature from the ` updateTotalEnergyAverageUsage ` method to simplify the method signature and improve code
updated ExtensionStack to handle null extensions and added a null check for null values to improve robustness and prevent potential NullPointerExceptions
[ java ] close innersubscribers in flatmap . flatMap ( ) when the main error be cancel .
updated connection timeout handling in MultiGetRequest and added connection timeout logging in ControllerStarter and ServerTableSizeReader to improve error handling and provide clear
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to utilize the correct model
updated event fetchers in EdgeSyncCursor , EdgeSyncCursor , TenantResourcesEdgeEventFetcher , and BaseImageService to include a boolean parameter to
updated conditional logic in CachingBuildEngine and added a new test for output hash calculation in CachingBuildEngineTest to ensure output hash is computed
camel - 14263 : camel - netty - add option to use bytebuffer in camel - netty
updated the alterPartitions method call to use the table ' s qualified name instead of the old name to ensure the correct table name is used for
added a clearer error message when the preferNativeTransport option is set to true to ensure that the Vertx instance is created with the preferred native
chore ( typehandler ) : move enumtypehandlerserializertest to extensiontypes
refactor StreamEx class for improved readability to enhance maintainability and clarity of the codebase
removed redundant setHint calls for specQueryTimeout and specLockTimeout in SessionImpl . java to improve code clarity and maintainability by reducing redundancy
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` to define a singleton instance of ` NOPLoggerFactory `
hbase - 13305 fix a bug in the familymap . put ( family , list ) method in hbase - hbase - addendum
added orientation check for window configuration changes in TaskbarManager . java to ensure proper handling of orientation comparisons
unescape xml in chatroomjabberimpl . getnick ( ) to ensure that xml be properly unescaped .
updated the method call in ` StoreDirect . java ` and added a new test class ` Issue265Test . java ` for compacting the
added @ SuppressWarnings ( " mutable " ) and @ SuppressWarnings ( " ImmutableEnumChecker " ) annotations to multiple Java files to suppress specific warnings
[ jbrules - 2789 ] add a Holder class to encapsulate the value and outcome of executionflowcontroltest
updated conditional statements in DLNAMediaInfo , FFMpegVideo , FFMpegVideo , and FFMp
added an unlimited parameter to the NBWriteServlet constructor and modified the TestWriteListener constructor to accept an unlimited parameter to allow for more flexibility in
blockchainimpl . updatetotaldifficulty ( ) should not call updatetotaldifficulty ( ) .
modified the handling of window seekability in DefaultPlaybackController . java to simplify actions calculation to improve code readability and maintainability
replace synchronized lists with CopyOnWriteArrayList for knownLibraries in NativeLibrarySupport and SecurityServicesFeature classes to improve thread safety and performance in concurrent scenarios
added uniform allocation for width and height in AllAppsView . java and adjusted bendAngle and bendDistance calculations in AllAppsView
updated the condition in HttpURLConnection to check for the presence of a colon in the key to ensure proper handling of keys with multiple colons in the
added PrincipalResolver dependency to the authentication metadata populator in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable dependency injection for the principal resolver
replaced jackson with noggit JSON parsing in DelegationTokenResponse . java to improve compatibility with the noggit library and enhance error handling
added a method ` removeTrailingSlashes ` to ` IoUtil ` to remove trailing slashes from a ` StringBuilder ` to improve code readability
added methods to match any pattern in PatternsMatcher and corresponding tests in PatternsMatcherTest to enhance functionality for pattern matching in the PatternsMatcher
hbase - 16219 addendum fix error message for loadincrementalhfiles
fix fire fire not fire when the potion be a potion . close # 152
removed unnecessary whitespace in beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintain consistency
updated calculations in ContractStateCapsule and ReceiptCapsule to improve clarity and consistency to enhance code readability and maintainability
refactor AsyncContentProducer to improve state handling and logging in AsyncContentProducer and BlockingContentProducer classes to enhance clarity of readiness checks and ensure
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that a valid weightField is provided to avoid runtime errors
added functionality to substitute plist variables in AppleBundle and added a test for infoPlistVariableSubstitution to improve the handling of plist variables in
updated bullet bullet and lancer lengths in TurretBullets . java and modified length calculation in Damage . java and Damage .
refactor order adaptation logic to use OrderCreateApiRequest for improved type safety to enhance code clarity and prevent potential ClassCastExceptions
added a new file ` PreParseGrammarTest . java ` to test XML grammar preparing to verify the functionality of the XMLGrammarPreparser
added " doclint : missing " to multiple @ SuppressWarnings annotations across multiple Java files to indicate that the ` doclint : missing ` annotation is
added FontManager import and overrideFont method calls in ExtendedEditText . java to ensure consistent font handling across the application
added null check for currentUser in AuthorizeTag . java and a new test case in AuthorizeTagTests . java to ensure that no user
camel - 14263 : camel - cxf : fix issue with unsafe character in uri
added a method ` setUpData ` to the ` JDBCGeometryTestSetup ` class to initialize the data setup in the ` JDBCGeometryTestSetup `
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ table - planner - blink ] make backendrestorerprocedure stop restore attempts for already cancelled task
add option to create rmi registry in remotejmeterengineimpl to enable server . rmi . create = true
replace string . join with StringUtils . join for anticompactRanges in CompactionManager . java to improve code readability and maintainability
added display metrics handling and updated qualifiers tests in multiple test files to ensure accurate display metrics are retrieved and improve test coverage for default qualifiers
[ java ] : add cluster member id to service heartbeat counter .
added conditional logic to store total thread allocated bytes based on version check to ensure compatibility with versions greater than 21 and above
added handling for NaN and POSITIVE _ INFINITY values in CustomExpression . java to ensure correct evaluation of double values and improve hash code generation
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 490 . improve log message
added authentication routes to the AuthenticityController and created a new AuthenticityFormTest class to enhance authentication functionality and ensure its correctness through
added assertion to assert nextnode . isAlive ( ) in LoweringPhase . java and refactored code in SnippetTemplate . java to improve
updated the logger reference from ConnectionManager to HttpClientRequestImpl in HttpClientRequestImpl . java to ensure the correct logger is used for HTTP request handling
refactor comparison logic in DefaultTrackSelector to improve clarity and efficiency to enhance readability and maintainability of the selection logic
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the code
added cropping functionality to the DrawImage class to ensure the image is only processed when the crop is active
refactor UnitOfWorkFactory to improve code organization to enhance maintainability and readability of the codebase
updated the method name from ` iconSizePx ` to ` allAppsCellWidthPx ` in ` DeviceProfile . java ` and
[ tika - 3666 ] add content - type - name property to mail content - type . xml .
updated URI construction in ThumbnailsCacheManager . java to improve clarity to enhance code readability and maintainability by using more descriptive parameters
added mark support and reset logic for input input if supported to ensure input streams are properly marked and resetted when supported
added @ SuppressWarnings ( " deprecation " ) annotations to multiple classes in the AsyncProcessor , BehaviorProcessor , and SerializedSubject classes to suppress
added configuration to show or hide error stacks on the error page in the error page to enhance user experience by allowing toggling of error stack
cloudstack - 6239 : do n ' t fail to cleanup template when delete a domain
remove unnecessary null check for foreign call in sparcarithmarclirgenerator
jbrules - 2532 : implement addruletemplateconfiguration and getruletemplateconfigurations ( ) for legacy drools 5 . x API
added a ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to call ` Display . getInstance ( ) . callSerial
increased the DEFAULT _ TIMEOUT _ MILLIS from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow more time for
updated import statements and modified parent string handling in ShadowAssetManager . java to improve clarity and correctness of resource name qualification logic
deleted multiple files related to MrefStat and MrefStat1 classes to remove unused or redundant files to streamline the codebase
updated dependency insight to handle blank scope cases to ensure proper handling of empty scope values in dependency resolution
added constants for no trades and bad status in BTCETradeServiceRaw . java and updated error handling in BTCETradeServiceRaw . java
use hamcrest assertion instead of junit in test
added a method ` getPaymentRequestUrls ( ) ` to ` BitcoinURI ` and corresponding tests in ` BitcoinURITest ` to
[ planner - 383 ] improve error message for non - collection annotated property .
removed redundant call to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundant calls to setFolderInfo
[ jfr ] fix buffer leak in jdk11 +
refactor null handling in BasicAbstractTuple . java to use a for - each loop for null values to improve code readability and maintainability by
refactor LintUtility to use InputResourceUtility for reading linter configurations to improve resource management and error handling for linter configurations
added a Runnable to run updateBackgrounds ( ) and updatePaddings ( ) in AppsContainerView . java to ensure background and padding updates
added a new patch for the onInventoryTick method in the Inventory class to ensure the correct index is used for inventory tick events
added a case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY events in the game
[ hotfix ] add miss @ publicevolving annotation to statettlconfig
added null handling in PreparedStatement and Array classes to handle null values gracefully to ensure proper handling of null values and prevent potential null pointer exceptions
updated descriptions for recording describe messages in ArchiveTool . java to improve clarity of descriptions for valid and invalidated recordings in the catalog
corrected a typo in the append0 method call in StringBuilder . java to improve code readability and maintainability
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class to verify the functionality of JSON snapshots in the
added a new method ` removeTheTxAndBlock ` to manage transaction cache invalidation to improve test clarity and maintainability by encapsulating
added functionality to set the camera mode based on LeLensMask values in AmcrestHandler . java and DahuaHandler . java to
removed ` NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to simplify method signatures
refactor ChangeLogIterator to accept a List of ChangeSetFilters as a parameter to improve flexibility by allowing multiple change set filters to be passed
do n ' t print stacktrace for guest exception in polyglot launcher
updated the environment variable retrieval from ` getenv ` to ` getEnvOrSystemProperty ` in ` Ec2Utils . java ` to ensure correct retrieval of
added serialVersionUID field to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization processes
refactor space handling logic in SpacesVisitor . java to improve readability and maintainability to enhance code clarity and maintainability by consolidating
# 829 - add nearcache option to servercacheoptions . copy ( ) ( # 829 )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to address the issue of border visibility on float elements with
replaced ` ActionGraph ` with ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and updated related methods in ` ProjectCommand . java
rename ` LIVE _ URI ` to ` PROD _ URI ` and add error logging for host exceptions in ` KucoinExchange . java `
refactor resource loading and search path handling in SpringResourceAccessor . java to improve code readability and maintainability
updated SmartHomeUnitsTest . java and added new test methods for microwatt per square metre and microwatt per square metre conversions to
replace getMask ( ) with getMaskWithSizePacked ( ) in DefaultShader . java to improve mask handling by using a more efficient method for
deleted the Tls12SocketFactory . java file to remove unused SSLSocketFactory class to streamline the codebase
fix texbibentriesresolver to return a set of new citations instead of a set
added a method to check if Robolectric is running in RobolectricLegacyMode to ensure compatibility with Robolectric ' s
added a check to return a DatabaseDataType for FirebirdDatabase in DoubleType . java to ensure proper handling of double precision for Firebird databases
added null checks for dataSource and transactionManager in DefaultBatchConfigurer . java to ensure proper initialization of data source and transaction manager
add an @ api annotation to the module - info . java file to provide access to the API for testing purposes
updated the test command from " www . google . com " to " 127 . 0 . 0.1 " and added timeout annotations to improve test reliability and
no effective change - add try - with - resources to saveall test
updated the ` TermScorer ` instantiation to include a ` scoreMode . needsScores ( ) ` parameter based on the scoreMode ' s
[ beam - 12233 ] fix npe in dataflowmetrics . getmetrics ( )
cloudstack - 2576 : fix npe in uservmdaoimpl . getvmsvm ( )
refactor ObjectInspector initialization in DynamicPartitionPruner . java to use a new method for finding target object inspectors to improve code clarity and maintainability
added a method ` removeBuildArtifacts ` to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` and ` ActionExecutionStepTest
added row selection logic in ThrustCurveMotorSelectionPanel . java to ensure the table correctly reflects its current selection state
replace assertthrowsarraystoreexception with assertarraystoreexception .
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added environment name and user agent handling in HttpClientBuilder and HttpClientConfiguration classes to enhance configurability by allowing custom client user agent configuration
refactor session restoration logic into a separate method ` restore ` to improve code readability and maintainability by encapsulating session restoration logic
added a message to indicate expected 5 distinct test instances in IssueTest . java and changed the result set from HashSet to Set < Object > to improve
camel - 14284 : camel - aws2 - consume - ews should default to text / plain if content - type be null
fix the activationrequestenied event so that it can be send to the character system .
refactor graph rendering logic in GraphApplet . java to improve readability and maintainability to enhance code clarity and adhere to coding standards
added a method ` updateTaskViewsSnapshotRadius ( ) ` to update snapshot radius in ` RecentsView ` and ` TaskView ` to ensure
added logging functionality and updated schema generation logic in StaticMicroserviceVersions . java to improve traceability of swagger generation for different service versions
changed the return type of put methods from void to int in ArrayMap . java to allow the put method to return an integer value instead of void
[ hotfix ] [ kafka ] make kafkacontainercluster startup timeout configurable
http : / / issues . apache . org / jira / browse / amq - 4671 - add retry option to send back as normal
updated header addition logic in StaticServerHttpHeadersWriter to check for non - existing header names to improve header management by preventing duplicate header additions
added package access checks and modified the listener type handling in EventListenerList . java to enhance security by ensuring proper package access before adding listeners
added a custom adapter to the application list in the ApplicationsFragment and created a new CustomAdapter class to enhance user experience by allowing customization of
added null checks for both mIcon1 and mIcon2 and mIcon2 in applyIcon method to ensure proper handling of null tasks in the
refactor DownloadTracker and DownloadManager to use try - with - resources for resource management to ensure proper resource management and prevent potential memory leaks
fix a bug in the basesqmtosqlastconverter where clause . insert do n ' t exist .
updated HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to use JUnit ' s @ Test annotation to improve test
do n ' t poll the slip message queue if the inputstream do n ' t exist .
added support for ` ENABLED _ TS ` in ` VersionTargetGraphMode . java ` and implemented ` ToposortBasedDepsAwareExecutor
refactor UpgradeCatalog150 class to improve code readability to enhance maintainability and facilitate future updates
remove networkparameters . testnet3 ( ) and networkparameters . testnet ( ) from networkparameters
do n ' t update the selected geo when it ' s a single geo
updated onboarding preferences handling in AppsDividerView . java and added null check for onboardingPrefs in ActivityContext . java to
updated HdfsIndexOutput to extend BufferedIndexOutput and modified flush and flushBuffer methods in HdfsDirectory . java to improve resource management
pdfbox - 4071 : do n ' t draw a rectangle if the clippingpath be not complete
removed synchronization from the local address assignment logic in SocketChannelImpl . java to simplify the code and improve readability
refactor the template transformation logic to use a dedicated method for adding values to improve code readability and maintainability by encapsulating value addition
added a static method ` Utils . isWindows ( ) ` to check if the operating system is Windows and refactored file renaming logic
replace ` ALPHABET ` with ` CHECK _ DIGIT _ STRING ` in ` Code39Reader . java ` and ` Code39Writer
refactor the execution handling logic in NodeGenFactory to improve clarity and correctness to ensure proper type casting and type casting for executed types
refactored the handling of stored fields in IndexingChain . java to improve code readability and maintainability
fix ( sql ) : fix timestamp _ sequence ( t ) with nanos in where clause
removed unnecessary null check for postedRunnableStacktraces in LwjglCanvas . java to simplify code logic and improve readability
updated descriptions in AbstractGCSProcessor . java to include " HTTP Host " to improve clarity and consistency in documentation regarding Storage API URL configuration
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve synchronization handling for initialized connections to ensure proper
updated method calls to use " single " instead of null in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistency in directory retrieval
refactor ` FaultTolerantChunkProcessor ` to use ` incrementFilterCount ( ) ` instead of ` size ( ) ` for better
updated method declaration and modified import statements in FileWithTabs . java and T4994049 . java to improve code readability and enhance exception
replaced conditional checks for instance checks with a static assumeTrue method in ConsoleReaderTest . java to improve code readability and reduce boilerplate code
remove admin check from getfeedbacksessionsaction . checkforstudent
updated the logic for determining the new selection in the AllAppsView . java file and adjusted the condition in the return condition for velocity and position
bugfix # 210618 , remove unnecessary trackresultsavailability check
added encryption functionality and improved handling of connection lists in DataModelManagerDialog , DbConnectionDialog , and ExportPanel classes to enhance security and ensure proper
replaced hardcoded write buffer size with a static constant in multiple classes to improve maintainability and readability of the code
updated segment size calculation in DocumentsWriter and added a new test method in TestIndexWriter to improve segment size calculation and ensure correct behavior when no documents
blender : do n ' t validate dvert if it ' s null
refactor FileDisplayActivity to improve code structure to enhance maintainability and readability of the code
added a new UnsupportedOperationException to avoid filling in the stack trace in ApplySpecialization . java to improve error handling by avoiding unnecessary stack trace filling
updated the method to calculate the average line height using stream operations to improve accuracy in label rendering by using average line heights
updated the constructor of RotationTouchHelper to accept a DisplayHolder parameter to improve flexibility by allowing the RotationTouchHelper to be instantiated directly
added a check for double quotes in valStr and modified the loop logic in AVA . java to ensure proper handling of quoted strings in the output
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ( s ) ` instead of ` Long . valueOf ( s ) ` for
updated test methods in ServerDatagramConnectorTest from ` name ` to ` testSmall ` and ` testBig ` in ` ServerDatagramConnector
updated the substring method call in TestSqlEntityProcessorDelta . java to use an array instead of a string to ensure the substring method retrieves the
refactor caching logic in Cache . java to improve performance and reduce memory usage
updated variable names from ` e ` to ` ev ` and modified scope settings in ` ResourceSetRegistrationEndpoint . java ` to improve code clarity and
removed IOException from the doBefore method and modified the IndexSearcher initialization in TestUnifiedHighlighterTermVec . java to improve code clarity and prevent unnecessary
added a new Java file that displays a Persistent JTable with a row number and a checkbox to demonstrate the functionality of the Persistent JTable by allowing users to
updated the WEBAPP _ CONNECT _ TIMEOUT constant to use cfg . getConnectTimeout ( ) instead of a hardcoded constant to improve
updated variable declarations and improved error logging in multiple classes to enhance code clarity and ensure proper encoding of query strings
refactor TestMediaService class for improved readability to enhance maintainability and facilitate future updates
removed the static String HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK from Messages . java to streamline the help
add MarketsPrintTool class for printing market currencies in the desktop to improve currency printing functionality for better user experience
added hostname validation and validation for component names in EndpointAddressInterceptor to ensure that only valid hostnames and underscores are accepted to prevent errors
added multiple ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods in ` AccountProxy ` , ` HttpAccount ` , and `
refactor ServerSpanThreadBinder class to improve thread management to enhance performance and maintainability of the code
use userData instead of userpointer in bulletphysics . fix a bug in bullet physics .
added new fields " the _ geom " and " the _ geom " to the Csv2Shape builder in Csv2Shape . java to enhance the
updated variable name from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve clarity and maintain
refactor parameters class to improve code readability to enhance maintainability and facilitate future updates
added a method to set ignoreNullValues to true in MultiplePiePlot . java to ensure that null values are ignored during pie plot rendering
refactor the loading process in ` ResourceBundle . java ` to improve code readability and maintainability by reducing complexity in the loading process
updated the character variable ' c ' from ' _ ' to ' - ' in TaggedPdfReaderTool . java to ensure consistent formatting for PDF files
add @ allowedduringediting to allow action to be execute during editing .
added a userModified property to the LoginSamlAuthenticationProvider class to indicate that the user has been modified during authentication
added a new file TestSealedObjectNull . java to test the behavior of SealedObject with null encryption to ensure that the SealedObject behave
renamed ` onOpen ` and ` setResponse ` methods to ` setResponse ` in ` ConnectPromise ` and ` WebSocketClientConnection ` classes to
added a static final set for ` SNOW ` and modified conditional checks for ` Tag . SNOW ` in ` BlockEventListener . java ` to
added an ` id ` parameter to the ` CryptsyPublicTrade ` class and updated related methods to include trade IDs to enhance trade
added a try - catch block to close the HMS connection in HiveStreamingConnection . java to ensure proper resource management and avoid potential memory leaks
use random . nextLong ( ) instead of system . currentTimeMillis ( ) for generate random seed .
added a new device profile for " Nexus 5 " in DynamicGrid . java and added it in DeviceProfiles . java to support additional device profiles
fix flowablerefcount . resetif ( ) to handle disconnectbeforeconnect ( )
replaced type . newInstance ( ) with ReflectUtil . newInstance ( type ) in SynthContext . java to improve compatibility with ReflectUtil ' s instance creation
added support for ` WHITESPACE _ AROUND _ TEXTUAL _ OP ` in ` FormatToken ` and corresponding tests in ` TokenFormatter ` to
added checks for file existence and length in SaveTask . java and implemented tests for empty project files in SaveAndLoadTaskTest . java to ensure
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety for concurrent access to these methods
log4j2 - 1343 smtpmanager should serialize mutablelogevent instead of log4jlogevent
updated the ` PADDING ` constant from ` LengthLike ` to ` NonNegativeLengthLike ` in ` PrimitivePropertyBuilders . java ` to
replaced calls to ` getUser ( headers ) ` with ` createContext ( ) ` across multiple resource classes to simplify context creation by using a single method
make sure we do n ' t generate exception entry for jimple catch .
updated JUnitRunner and AndroidPlatformTarget to use Joiner for string concatenation and improved error message formatting to enhance code readability and provide clearer
updated the cacheSize calculation from maxMemory / 16 to maxMemory / 8 in OmniNotes . java to optimize memory usage for better performance
added a condition to check for ` finish ` and ` start ` in the ` InvocationStageTrace . java ` and modified the ` TestInvocationPublish
added error handling for null KeyStore instantiation in ProvKeyManagerFactorySpi . java to ensure a default KeyStore is used when the password is not provided
updated the port assignment in UpstreamCheckUtilsTest to use a dynamic port instead of a hardcoded value to improve flexibility and avoid port conflicts
make the layout size computation a bit less wrong on file
add gl _ ARB _ compute _ shader and gl _ ARB _ tessellation _ shader to glrenderer . max _ tess _
refactor PopulatorContext class to improve code structure to enhance maintainability and readability of the code
do n ' t try to save all event if project do n ' t exist
updated ZQLJobManager to use IOUtils for character encoding and improved JSON writing to ensure consistent character encoding handling and improve code readability
added a check to ensure the args array is not empty before processing to avoid potential ArrayIndexOutOfBoundsException when args length is less than zero
replaced hardcoded headers and headers with constants from the FakeOSSOHeaderDecoder class to improve maintainability and readability by avoiding hardcoded
camel - 14263 : camel - jbang - deprecate the suffix - strategy option
updated debug logging statements in Apache DerbyDatabase . java to include exception details to improve clarity of error messages for debugging purposes
added a timeout parameter to the CepEspTest and modified assertions in CepJavaTypeTest and CepEspTest to ensure tests have
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance and readability of
updated operation type checks and logging messages in HubUpdater . java to improve clarity and error handling for liquibase hub mode updates
added constants for version success and failure keys for IBM and OpenJ9 VMs in Constants . java and TestDDRExtensionGeneral . java to
updated the logging message for font additions in FontFamily . java and added a new DebugFonts class in DebugFonts . java to improve
updated import statements in ALPNNegotiationTest . java and added a check for HTTP _ 1 _ 1 in NegotiatingServerConnectionFactory .
added import for HTTP2 RateControl and set it in MaxConcurrentStreamsTest . java to disable rate control for HTTP / 2 requests
added a new file Test6741426 . java that implements JComboBox rendering with NimbusLookAndFeel to demonstrate the use of NimbusLookAndFeel for JComboBox rendering
updated error message in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of error messages for better debugging
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure that both madeManagedDir and madeManaged
added package for S3CopyObjectRequest in the s3 - related package to improve organization and clarity of the code structure
removed accentColor parameter from setup methods and simplified category setup in SettingsActivity . java to simplify method signatures and improve code maintainability
updated the expected message in TemporaryFolderUsageTest to include the fileAtRoot parameter to improve clarity of the error message for better debugging
replaced instances of ` MAP _ TYPE _ INFORMATION ` with ` CLASS _ TYPE _ INFORMATION ` and ` LIST _ TYPE _ INFORMATION `
add validation to clientnetworkconfig . addaddress ( ) to ensure that the address be not empty or null
added " keynectisrootca [ jdk ] " to the " keynectisrootca [ jdk ] " list in VerifyCA
[ java ] change compute method return type to return int instead of void to improve efficiency by allowing the compute method to return an int instead of void
updated menu mode setting logic in ModeToggleMenu . java to conditionally set menu mode based on popup status to ensure menu mode is only set when
pdfbox - 4892 : avoid arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added a new file ` FinalizerInfoTest . java ` that tests finalization info for objects to ensure proper functionality and cleanup of finalized objects
use doonnext ( ) instead of map ( ) in cacheroutedefinitionlocator
refactor handling of custom and decaying man receiver addresses in BurningManService . java to improve clarity and maintainability of the code
refactor StringSubject class for improved readability to enhance maintainability and ease of understanding for future developers
updated the longData array size from 1000000 to 1000 in BatchValidateSignContractTest . java to optimize memory usage for testing purposes
corrected a typo in the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve code readability
removed " from : " from : " from : " from : " from : " from : " from : " from : " from : "
removed a conditional check for forRebalance in SimulatorDiscoverer . java to improve code clarity and maintainability
added JSON import functionality to the YubiKeyAccountRegistryEndpoint to handle account imports and save them to the registry to enable users to register and
updated shader program additions in ShaderManagerLwjgl and modified material data retrieval in FontMaterialProducer and AbstractNode classes to improve material handling
added null check for ` cnt ` in ` paintOnTopLoop ` and updated conditional logic in ` SideMenuBar ` and ` SideMenuBar ` to
refactor AbiWriterProtocol to improve code structure to enhance maintainability and readability of the code
added null check for subName in HierarchyBase . java to ensure caption is set correctly when subName is null
updated data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to enhance the
added null check for ` sim ` and modified conditional statements in ` CustomExpression . java ` to enhance code robustness by preventing potential NullPointerExceptions
replaced the method ` requestBlindVoteListFromNetwork ` with ` missingDataRequestService . sendRepublishRequest ( ) ` in ` Vote
add a test case for the postgres driver . patch by jbellis ; review by gdusbabek for cassandra - 1496
updated string indexing in SubtitleUtils , RemoteUtil , and RemoteUtil classes to use single quotes instead of single quotes to improve code readability
added LINE _ SEPARATORS _ RE constant and modified line splitting logic in DefaultJavaPrettyPrinter . java and CommentTest . java to improve
make singleimplementorsnapshot non - final and use atomicupdater for snapshot update .
added null check for filters in SimpleFacets . java and modified query addition logic in SimpleFacetsTest . java to enhance robustness by preventing
updated thingbuilder to handle Bridge and BridgeImpl correctly in ThingHelper . java to ensure proper merging of Thing objects based on their type
updated help and error messages in Ktab . java to improve user feedback by providing clearer error messages
added a check for the existence of the output file before returning it to ensure that the output file is only processed when it is available
camel - 14263 : camel - jbang - add support for parse date string in dateconverter . tocalendar
added functionality to find posts by their slug in the PostRepository class to enhance the functionality for managing posts by their slugs
changed the ` canAccessDbaRecycleBin ` variable from ` boolean ` to ` Boolean ` and added a check for ` OfflineConnection
added a static method ` setConnectTimeout ( ) ` and ` setReadTimeout ( ) ` to ` ClientRegistrations . java ` to set connection parameters for
[ java ] add test for non - cannonical source .
[ java ] remove graalvm . version property from home finder .
added validity checks for access token and refresh token in ClientAdminBootstrap . java to ensure proper handling of token and refresh token validity configurations
updated the logic for determining the android API version in the Scene class to ensure the correct version is returned based on the Android API version configuration
( chore ) camel - core : remove unnecessary ' this ' keyword
updated the string representation of the SHA1 and SHA256 fields in the Resources . java file to improve clarity and accuracy of the certificate fingerprints output
refactor ZkSolrClientTest to improve collection management and synchronization to enhance test reliability by ensuring all collections are processed in parallel
added BigInteger import to the simpleTypes list in MongoMappingContext . java to ensure proper handling of BigInteger types in database mapping
added a condition to check if the buttonText matches the buttonText in HomeFragment . java to ensure that the toast message is only displayed when the
added a condition to check if MEncoder is not in sync and disableMc0AndNoskip to ensure that MEncoder videos are only processed
reduce the number of event loop thread to reduce the number of event loop .
updated access modifiers of class members and methods in CountMin4 and related classes to improve encapsulation and maintainability of the code
added sorting functionality for external file fields in ExternalFileField . java and created a new test class ExternalFileFieldSortTest . java to improve sorting
updated exception message from " Invalid URL " to " Connection error " in DoiFetcher . java to improve clarity of error reporting for better debugging
added functionality to format event time and source information in OpenRocketSaver and modified event handling in FlightDataBranchHandler to enhance event data representation
changed the visibility of the check method from private to protected to allow subclasses to access the check method for better extensibility
added synchronization logic to handle file synchronization in FileActivity to improve user experience by providing feedback when file synchronization fails
updated the URI generation in ThumbnailsCacheManager . java to use URLEncoder for file paths to enhance security by preventing URL injection vulnerabilities
added a null check for the ` cn1 $ infinite ` property in ` InfiniteContainer . java ` to prevent potential null pointer exceptions when the
updated the initial value of ` total ` from ` 0 ` to ` 1 ` and adjusted the calculation for the ` total ` variable to ensure the
added a lock check before updating feed entries in FeedRefreshUpdater . java to ensure that updates are only performed when the feed is locked
refactor ACE handling logic in SolarisAclFileAttributeView . java to improve readability and maintainability to enhance code clarity and ensure proper
refactor LatLonTree to use an array for edges instead of a shuffled list to improve performance and readability of the code
added IOUtils to close the input stream in ZkCLI . java to ensure proper resource management and prevent memory leaks
fix bibtex parser to parse comment with \ x0d \ \ x0a instead of \ n
added strict property handling in Main . java and a corresponding test in MainTest . java to ensure unknown arguments are handled correctly when strict mode is false
fix validation for ` ` always invalid ' ' constraint
camel - 14263 : camel - http component verifier should use http4 instead of http
added a wait time of 30 seconds to the TestCloudPivotFacet class to provide a mechanism to wait for things to become available before proceeding
removed unnecessary conditional checks for length in UBJsonWriter . java to simplify code logic and improve readability
refactor ApplicationTest class for improved clarity to enhance maintainability and readability of the test code
replaced String with StringBuffer for storing details in ConnectionFactoryImpl . java to improve performance by reducing string concatenation overhead
rename ` Type ` to ` RoboType ` across multiple files to improve code clarity and maintainability by using a more descriptive name
[ java ] do n ' t wait for dispatch complete in recorddescriptorpoller . abort ( ) .
added cache key and lookup variable handling in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor . java to improve cache management
added a new file PutfieldError . java that tests the throwing of IncompatibleClassChangeError to ensure that the ` PutfieldError ` class
camel - 14263 : camel - aws2 - aws - aws - client should return only the public address if the host be already in the
add log when memtable flush after mins be reach . patch by jbellis ; review by brandonwilliams for cassandra - 16
replaced instances of ` Space . build ( string ) ` with ` Space . SINGLE _ SPACE ` across multiple files to improve code readability
removed redundant method ` encodedLength ( ) ` from ` Flyweight . java ` to streamline code by eliminating unnecessary duplication
rename TestMethodResultMapBuilder . java file to improve clarity and consistency in naming conventions
added error handling for Integer method invocation in FindNullDeref . java to ensure proper exception handling for invalid method invocations
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated return statements in Utils . java to include leading and trailing spaces to improve readability and maintainability of the code
updated conditions for handling DeepShortcutView in Utilities . java and FloatingIconView . java to improve compatibility with DeepShortcutView and enhance drawable retrieval
updated the ` JwtIssuerValidator ` class to use ` Predicate < Object > ` instead of ` String ` for better flexibility to enhance flexibility in
renamed ` buyQuickRate ` and ` sellQuickRate ` methods to ` getBuyQuickRate ` and ` getSellQuickRate ` , and
added a new configuration class ` CoverageConfig ` and modified ` CoverageController ` to use a constant for the project data class name to improve
added a check to ensure the event bus registration is only registered when it is not already registered to prevent potential race conditions when the event bus is not
added support for ascii - only normalization in NormalizerBase . java to ensure normalization occurs only when the input string length is less than 80
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordininationservice
added error handling and assertions for SQL update statements in SpillableGroupByIT . java and NoOpStatsCollectorIT . java to ensure that
camel - 14263 : camel - spring - kafka - use junit4 in camel - kafka and camel - kafka .
updated HR and attrs calls in HtmlTag . java to include ' OK ' and ' OK ' attributes in 5.01 to ensure compatibility with
added a new line to the output in HtmlCoreReport . java to improve the readability of the output in the report
updated RAM usage calculation in DocSlice . java to handle null scores to ensure robustness by avoiding potential NullPointerException when scores is null
added a new StringHolder class to handle string parts and their serialization in CustomTypeAdaptersTest . java to improve type handling and ensure proper serialization
added extraData handling in MergeCoordinator and a corresponding test in MergeCoordinatorTest to ensure correct processing of mining parameters during merge operations
added a static final map ` numArgs ` and modified the ` argsToProperties ` method to include a ` numArgs ` key to control the
refactor PathParamServerEndpointConfig class for improved clarity to enhance maintainability and readability of the code
[ hotfix ] [ table - common ] make migration rule listener shutdown on shutdown
renamed the parameter ` part ` to ` partOrList ` in the ` attach ` method in ` RestClientRequest ` and ` RestClientRequest
jbrules - 2530 : move bootstrap - responsive and bootstrap - responsive to twitterbootstrap / css
[ spanishtreebanklanguagepack ] remove the basiccategory method from spanishtreebanklanguagepack
hhh - 11823 - deprecate abstractentityloader . load by uniquekeyloader ( )
hbase - 13232 regionserversnapshotmanager should not remove cancelled element from futures in regionserverflushtableproceduremanager and regionserversnapshot
added a check to set the size if width and height are zero in PGraphicsJava2D . java to ensure that the superclass initializes correctly when
fix a typo in hikaripool . fillpool ( ) .
updated the ` assureMatchVersion ( ) ` method in multiple filter factory classes to ensure the Lucene match version is correctly set to version . LATEST
fix ( aop ) : add support for the default method in aop proxy .
fix ( lexer ) : do n ' t attempt to parse a single character with a space .
renamed GuavaOptionalSubject , IterableOfProtosSubject , and IterableOfProtoValuesSubject classes to improve clarity and consistency in naming conventions
added a check for negative payload length in WsFrameBase . java to throw an exception if the payload length is negative
move publishsubscribechannel and publishsubscribechannel to dispatcher - based package instead of channel - based namespace .
updated execution ID handling to use Long instead of String across multiple classes to improve consistency and flexibility in handling execution IDs across the code
added checksum updates for width and height in ImageProcessor . java to ensure accurate representation of width and height values during image processing
removed log statement for overlay version and added necessary imports in SolrConfigHandler . java to streamline logging and improve code clarity
updated the delay duration in mSyncResult . delayUntil from 24 hours to 3 minutes to avoid unnecessary automatic synchronizations
[ hotfix ] [ test ] fix checkstyle violation in segmentv1tov3formatconvertertest
refactor ` addPathToMTree ` method to use ` Path ` instead of ` fullPath ` for improved clarity to enhance code readability and
added URI handling for URLs in DefaultPackageScanClassResolver and updated related tests in DefaultPackageScanClassResolverTest to improve URL processing and ensure
[ hotfix ] [ table ] add tsextractorutils class to retrieve accessed field
added a new class SpringSecurityAuthenticationSource to handle authentication sources in Spring Security to facilitate LDAP - based authentication handling in the security framework
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest Android features
updated the custom file suggestion dialog to use SimpleFormDialog instead of Dialogs . autoSuggestDialog to improve user experience by allowing users to suggest custom
added a new test method ` testNewput ` to ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest . java
removed unnecessary whitespace in the stream method signature in MongoTemplate . java to improve code readability and maintain consistency
[ map overview ] fix zoom in map overview
added similarity parameter to KNearestNeighborClassifier and updated related tests to use LMDirichletSimilarity to enhance classification accuracy by allowing customizable similarity
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing and improve performance
updated the method of retrieving the reason from ` lowResourceCheck . toString ( ) ` to ` lowResourceCheck . getReason ( ) ` to
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
updated the ` requestMtu ` method in ` ShadowBluetoothGattTest ` and ` ShadowBluetoothGatt ` classes to
refactor the return statement in TestPayloadNameRequestWrapper to use a new method ` createServletOutputStream ` to improve code readability and maintainability
[ vosk ] log warning if a vosk link can not be find .
replace HashMap with ConcurrentHashMap for mProcessingChains in ChannelProcessingManager . java to improve thread safety for concurrent access to the processing chains
updated resource strings in Japanese resource files for clarity to improve user understanding of grouped and summary information
updated conditional check from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping ` and modified test assertions in ` JDBCType
changed the ` addPlayer ` and ` removePlayer ` methods from ` addPlayer ` and ` removePlayer ` to ` synchronized ` to ensure thread
refactor accessibility handling in TerminalView . java to improve accessibility state management to enhance performance and maintainability of the application
added support for side navigation button in MenuBar . java and updated condition checks in SideMenuBar . java to enhance command behavior handling for better navigation control
removed unnecessary ` Disposable ` declaration in ` PoloniexManualExample . java ` and added debug logging in ` WampStreamingService . java `
added validation for the energy limit type in UpdateSettingForEnergyLimitContractActuator . java and updated the condition in UpdateSettingForEnergyLimit
updated variable names and added protocol handling in PostmanJsonBuilder . java and UrlBean . java to improve code readability and ensure proper protocol assignment
camel - 14284 : camel - soap - jaxb - add getter and setter for namespaceprefixref in soapjaxbdataformat
refactor assertions in TestRange to use a new method isSameDay to improve code readability and maintainability by reducing redundancy
added logic to restart Jetty Solr servers in BasicAuthIntegrationTest . java and updated security configuration in ZkStateReader . java to ensure proper server
added a PriceFeed parameter to TradesChartsViewModel constructor and modified constructor parameters to include it to enhance functionality by allowing users to customize the price
replaced direct calls to ` ConfigUtil . getConfiguration ( ) ` with a local variable ` conf ` in ` PhoenixHBaseStorerIT `
updated the logic for determining the end index in NativeString . java to improve clarity and correctness when searching for strings with negative lengths
added file downloading functionality to FileDataStorageManager in FileDownloader . java to enable file downloading functionality for improved user experience
updated the initialization of the RandomAccessFile and added a setLength method to set the log length to ensure the log file is properly closed after use
added a method ` checkIfRegistryRunning ` to ` TestLibrary ` and a ` FileUtils ` method to check if a registry is running and delete
added a call to ` componentPresetDao . startLoading ( ) ` in multiple Java files to start the component preset loading process to ensure that the
removed unused private variables and added @ SuppressWarnings ( " rawtypes " ) annotations in multiple Java files to improve code clarity and suppress unchecked warnings related
added a null check for the instances variable in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
phoenix - 1084 add transaction _ must _ be _ enabled _ to _ set _ isolation _ level option to allow to disable transaction
added transaction attribute handling in AbstractStepFactoryBean and removed noRollbackForExceptionClasses method in ItemOrientedStep and SkipLimitStepFactoryBean
refactor CasManagementSecurityInterceptor to use DirectCasClient instead of CasClient to improve integration with the pac4j library for better
removed the ` addCategory ` menu item handling in ` ListFragment . java ` to streamline the category addition process and improve user experience
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated its usage in ` FileDisplayActivity
pdfbox - 4071 : do n ' t cast cosdictionary to cosnumber , a suggest by valerybokov
updated the ` onFontSizeChanged ` method to use ` unusedSizeDp ` instead of ` getFontSize ( ) ` and modified the text size
[ fix ] bug in constantanalysis when the fact be invalid .
refactor multiple Java files related to DistBuildTargetGraphCodec , ConvertingPipeline , and VisibilityPatternParser to improve code organization and maintainability
replace return statement with a new ArrayList < > in ArrayListSpanAccumulator . java to ensure that the returned list is a new instance of ArrayList
refactor lock handling and validate method calls in Liquibase . java to improve code readability and maintainability
added a method to set the revision in MicroserviceVersions and updated related methods in InstanceCacheChecker , TestInstanceCacheChecker , and TestInstanceCache
updated foreignKeyName and indexName initialization in AbstractRetriever and TableRetriever classes to include unique identifiers to improve uniqueness of foreign key and index names for better
camel - 15836 - camel - aws2 - s3 - add unit test for it
removed the ` currencyPair ` parameter from the ` getBitstampUserTransactions ` method in ` BitstampAccountService ` and added error handling in
added a try - catch block around the ` getComponentInstance ` method in ` BlueprintContainerRegistry . java ` to handle potential ` NoSuchComponentException
changed the return type of push ( ) from void to boolean in ApplicationPushBuilder and Stream classes to allow the push method to return a boolean value
refactor legacyaddresstest to use a BufferedReader for reading lines from the file instead of a hardcoded string to improve flexibility and maintainability of
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from other classes
added a new method ` setupPushWarning ( ) ` to ` NotificationsActivity ` and refactored push notification handling in ` NotificationsActivity
added logging and improved error handling in NettyAsyncHttpProvider . java to ensure proper resource management and prevent potential resource leaks
updated null checks and method names in LdapPasswordPolicyEnforcer . java to improve code readability and consistency to enhance code clarity and maintainability by using
refactor DefaultAnnotationEngine and Stubber classes to improve code readability and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to a known issue ( PHOENIX - 2840 )
nifi - 132 : add timezone property to aboutdto and flowresource to allow to configure the timezone of the nifi instance
patch by jbellis ; review by brandonwilliams for cassandra - 141
removed unnecessary try - catch blocks for child initialization in BeanContextSupport . java to simplify code and improve readability by eliminating unnecessary exception handling
fix concurrentmodificationexception when add a circuit to the active circuit list .
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling for uncompiled shader fetching
flume - 202 : add sink and source to pollablesourcerunner so they can be reuse by other runner .
updated error logging in FastBindLdapAuthenticationHandler to include user authentication error messages to improve clarity of authentication failure messages for better debugging
refactor ContainerOrderFocusTraversalPolicy class for improved clarity to enhance maintainability and readability of the code
make getpointlength ( ) return int instead of double for freehand function
reformatted the constructor declaration in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve code readability and maintain consistency
refactor connection handling in SchemaCrawlerMain and Executable classes to improve resource management and error handling to enhance resource management and ensure proper database connection closure
http : / / issues . apache . org / jira / browse / amq - 5036 - add support for fallback and fallback tls
corrected a typo in the exception message in CountersManager . java to improve clarity and consistency in error reporting
updated the stopAudio ( ) method to include a false parameter and adjusted the calculation for mCurrentAudioQueuePosition to ensure proper handling of audio queue
updated debug logging statements in HttpConnection . java to include additional context to improve logging clarity and provide more detailed context during connection upgrades
added a ` @ Transient ` annotation to ` JpaPersistentPropertyImpl ` and a corresponding test in ` JpaPersistentPropertyImplUnitTests
updated version assertions in UpgradeResourceProviderTest from " HDP - 2.0 . 1 " to " HDP - 2.0 . 0 " and added
trufflevm : allow eval to return object instead of symbol .
allow sampleresult . isbinarytype ( ) to be set to true if it ' s binary
updated the maximum data size configuration for dynamic partition pruning in HiveConf . java to ensure proper configuration for dynamic partition pruning settings
removed unused imports and added priority constants in JavaProblem . java to improve code clarity and maintainability by eliminating redundancy
updated the ` read ` method to use ` DEFAULT _ OFFHEAP ` instead of ` DEFAULT _ OFFHEAP ` in ` Dictionary
updated line separator handling in TableWriterTest to use a configurable LINE _ SEPARATOR to improve flexibility in line separation across different operating systems
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added texture ownership check in ParticleEffect and ParticleEffect classes to ensure proper handling of texture access in particle effects
added additional configuration parameters for LDAP authentication in HiveConf . java to enhance authentication options for LDAP authentication in the application
chore ( deps ) : upgrade gapic - generator - java to 2.1 . 0 and update gax - java to 2.16 . 0 (
updated input method visibility and visibility settings in DetailActivity . java to improve user experience by allowing more control over keyboard visibility during note updates
added a new test method ` convert ` to ` MAP OF STRING _ TO _ MAP _ OF _ STRING _ TO _ MAP _ OF _ STRING
updated the size calculation from 500ms to 50ms in TestFileSystem . java to optimize memory usage and improve performance during testing
updated error message in ContentTypeManager . java to include additional information about resource management prior to filing a bug report to improve clarity of error messages related to
changed the ` dropSequences ` method implementation from protected to abstract and added a ` dropSequences ` method across multiple database classes to implement sequence
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions when status is null
replaced a local variable ` f ` with a local variable ` f ` to improve code readability and maintainability
HierarchicalIcons . java : do n ' t ignore icon if it ' s not an active map
added a test method ` findOneAfterUpsertForNonExistingObject ` to ` MongoTemplateTests ` to verify the functionality of ` findOneAfterUpsert `
hbase - 13386 fix the issue of concurrentmodificationexception in hbase - 333 .
added recordLaunch method to AppsCustomizePagedView , Launcher , and Stats classes , and modified broadcast intent handling in Launcher to
added graphical rendering functionality to the JavaSEPort class to improve rendering performance and resource management
update instructorfeedbackresultspagedata to use bundle . getteammembersfromroster ( ) instead of bundle . getteammembersfromroster (
added a check for zero inventory IDs in the Inventory class and added a test for inventory ID generation to ensure that zero inventory IDs are generated
added a conditional check for the presence of a value before exiting the loop to ensure that the loop only proceeds when a valid value is found
updated method calls to remove null checks for returnType in multiple parser visitors to simplify code and improve readability by eliminating unnecessary null checks
added null check and initialization for blended tiles in TileMapRenderer . java to improve robustness by handling potential null values for blended tiles
removed multiple javax . crypto . sunClasses annotations from the Probe class annotations to streamline class loading and improve code maintainability
[ fix ] bug in ifctools2d . getarea ( ) and ifctools2d . getarea ( )
refactor lockOnSync initialization to use the current instance instead of null to improve clarity and maintainability of the code
pipe : fix npe in eventbus . gethandlers ( ) .
updated ZkController instantiation to use TIMEOUT instead of 1000 to improve test reliability by allowing more time for the ZkController instantiation
added a test method to verify the passcode functionality with client parameters in TokenMvcMockTests . java to ensure that the passcode functionality works correctly
added imports for KeepWordFilter , LengthFilter , and CharArraySet in TestRandomChains . java to enable testing of broken offset constructor
removed the JUnit Ignore import from RandomPlaneTest . java to clean up the code and improve readability
fix llvmx86 _ 64BitVAStart . java to use tounsignedlong instead of integer . tounsignedlong
replaced instances of ` btCollisionObject . getInstance ( ) ` with ` btCollisionObject . getInstance ( ) ` in multiple files to improve
added copyright information to the BuildProperties class and updated the AboutDialog to include a copyright year to ensure the application reflects the correct copyright year and improve
added getDistributedObjects method to JetClientInstanceImpl and created a corresponding test class JetClientInstanceImplTest to enhance functionality for retrieving distributed object information
added debug output for finCount , finCount , inertia , and inertia values in MassCalculatorTest . java to improve clarity of
change the variable name from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to reflect the actual maximum memory
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and modified method signatures in CreateAlignedTimeSeriesPlan . java to improve
use bisq cofounder instead of co - founder for delayed payout tx
updated the initialization of ` input ` in ` JsonLoaderTest . java ` and added exception handling for ` big _ integer _ t ` to ensure
updated the capacity check from a minimum of 1 to a maximum of 0x40000000 in ObjectSet . java to ensure that the required capacity is
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and prevent potential null pointer exceptions
removed @ AddToRuleKey annotations from field declarations in AppleTest . java to simplify code by removing unnecessary @ AddToRuleKey annotations
added security exception handling and modified content limit logic in FileHelper , TextHelper , and TextHelper classes to enhance error handling and improve content limit handling
added functionality to resolve and resolve attributes with multiple attributes in ShadowTheme to enhance attribute resolution capabilities for themes with multiple attributes
updated sheet name check in HSSFWorkbook . java and added new sheets in TestHSSFWorkbook . java to ensure correct handling of sheet names
updated the tint variable from primaryColor to elementColor in ManageAccountsActivity . java to ensure the correct color is applied to the current
updated the initialization of the ` wrapped ` variable in ` DefaultEventBus . java ` and modified the path resolution in ` DefaultPlatformManager . java `
added support for the " binaryCollationName " configuration in MariaDbDbmsType , MySqlDbmsType , and FilterSortedSkipOptimizer to enhance
added a new method ` whenType ` to check if a tree type is a subclass of ` Tree ` to enhance type safety by providing a default
refactor navigation logic by introducing a new method ` getUserViewDestination ( BaseItemDtoDto baseItem ) ` to improve code readability and maintain
replaced ` Response . ok ( Status . OK ) ` with ` Response . temporaryRedirect ( ) ` for redirecting to the public URL to improve
[ flink - 25836 ] [ kinesis ] improve error message when deserializer be not serializable
camel - 16263 : camel - jbang - fix typo in javadoc
replaced Thread . sleep ( 2000 ) with a try - finally block to ensure the ZkClient is closed after instantiation to improve resource management and prevent
rename methods and variables related to icon and dimensions from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` to improve
refactor the ` read ` method in ` ProxyHandler ` to use a dedicated ` read ` method to improve code readability and maintainability by
replaced BufferUtil ' s allocate method with ByteBuffer ' s allocate method for memory allocation to standardize memory allocation to improve code consistency and clarity
refactor prepareStreamsToUpload method to return a boolean instead of a void to improve clarity and functionality of the method ' s logic
updated order comparison to use Integer . compare instead of Integer . compare for consistency in AbstractConfigLoader and TestMicroserviceConfigLoader to ensure consistent ordering
added a new file ` PicOfDayAppWidget . java ` that implements an app widget for displaying image URLs to enhance user experience by providing
cloudstack - 2530 : change the default value of _ internallbvmserviceofferingid to 0
replaced ` RelOptUtil ` with ` HiveRelOptUtil ` and updated join condition handling in ` HiveParserCalcitePlanner . java ` to
[ hotfix ] [ runtime ] deprecate savepoint and windowreader class in preparation for release
added user and password options for remote jmx access in NodeToolCmd . java to enhance security by allowing user credentials for remote jmx access
removed redundant bytesref initialization in Stemmer . java to streamline code by eliminating unnecessary duplication
updated widget resolution logic in AppsCustomizePagedView . java to include a new parameter for numPages to improve code clarity and maintainability
ggb - 310 fix for 3d thumbnail in ggbapiw
updated rotation calculations in GcodeRenderer . java to ensure rotation does not exceed 180 degrees to improve rendering accuracy by preventing negative rotation values
added a new option ` WORKSPACE ` to the ` DAEMON ` and ` WORKSPACE ` configuration in ` TerminalClient ` to
change test file name from ` ` apt ' ' to ` ` html ' '
updated ScimUtilsTest to use JUnit 5 annotations and improved test assertions to enhance test structure and ensure compatibility with JUnit 5 features
refactor OAuthConfirmationController to use model attributes instead of model attributes to improve code clarity and maintainability by simplifying session attribute handling
refactor HibernateIT to clear the session and increment the second level cache hit count to improve test reliability by ensuring that the stats are cleared before
refactor EventBusHook class for improved event handling to enhance event management functionality and maintainability
updated MultiPaintEventTest . java file to improve test coverage for multipaint events
removed the ' final ' modifier from the ` mNewScale ` assignment in ` WorkspaceStateTransitionAnimation . java ` to allow the variable to be
refactor SyncFactory to improve code structure to enhance maintainability and readability of the code
added uniqueKey field handling in LukeRequestHandler to ensure uniqueKey is correctly associated with the schema
added support for rounded border colors in BorderEditor and updated color retrieval in EditableResources to enhance the visual appearance by providing a rounded border color option
make binaryparserexception . neverpartofcompilation not part of compilation .
[ hotfix ] [ test ] rename slotpoolimpl to slotpoolpoolbridgebuilder in defaultschedulerbatchschedulingtest
added logging statements for pending requests and adjusted sleep duration in GatewaySocketAcceptor and PingPongApp classes to enhance debugging capabilities and improve pong
added Toolbar . OnMenuItemClickListener to RecentChatFragment to show a toast message when an under - construction action is clicked to enhance user experience by
updated the ` InfoDropTarget ` class to extend ` UninstallDropTarget ` and modified the ` startDetailsActivityForInfo ` method to return
replaced calls to ` getTail ( ) ` with ` push ( ) ` in multiple files to improve code clarity and maintainability by using a more
updated API and image URLs from " test . wikipedia . org " to " commons . wikimedia . org " and " commons . wiki
refactor index handling by introducing a new method ` setIndex ` and ` updateIndex ` to improve code readability and maintainability by reducing du
replaced usage of ` Collections . sort ( ) ` with ` Collections . sort ( ) ` across multiple classes to simplify code and improve readability by
added a new ` DateTimePatterns ` format in ` FormatData _ hr _ HR . java ` to support formatted date patterns in the application
added a call to clearFocus ( ) in DetailFragment . java to ensure the clicked view does not lose focus during interactions
updated the selection logic in DescriptionsAdapter and removed null check for savedLanguageValue in SpinnerLanguagesAdapter to improve clarity and functionality of the language
updated time zone names from " West Samoa Summer Time " to " WSDT " across multiple languages to ensure accurate representation of time zone representation in the
added native methods ` registerGlobal ` , ` registerWeak ` , and ` accessFieldsViaHandle ` to the ` FastGetField ` class for
added default value handling for UNION and NULL schemas in ReflectData . java and updated tests in TestReflect . java to ensure correct behavior of
updated the timeout value in the blockWhenFullTest . java file from 300 to 1000 to improve test reliability by allowing more time for the block when
added null check before remapping resource class in ResourceMerger . java to avoid potential NullPointerException when resourcePath is null
[ hhh - 11895 ] fix the issue that mysql and hapifhirsqldialect do n ' t have a dependency
added a connection close header to the http producer to allow the endpoint to close the connection .
increased the timeout duration from 60000ms to 120000ms in BasicDistributedZkTest . java to improve test stability by allowing more time for
added a test to verify the count ( * ) method of tickets in BaseReservationFlowTest . java to ensure that the count ( * ) method
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class to improve code organization to enhance maintainability and readability of the code
use getfirstelementchild ( ) . getchildren ( ) instead of thymeleaf . dom . getchildren ( ) . getchildren (
planner - 253 do n ' t add an immutable look - up strategy if the object be an enum
added a waitingToShutDown method to ClusterEnvBase and implemented a waitToShutDown method in ClusterNode to wait for nodes to
updated logging level from warn to info for non - existent field javax . el . BeanELResolver . properties in ELContextCleaner . java to
added a default content type of " application / octet - stream " in WebdavEntry . java to ensure proper handling of binary data in Web
added ` getQueueSize ( ) ` method to ` LazyTraceThreadPoolTaskExecutor ` and created ` LazyTraceThreadPoolTaskExecutorTests ` class to
[ geot - 5239 ] avoid infinite loop in distanceop . comparepolygon ( coord0 , coord1 )
change the label from ` required ` to ` requiredlabel ` in ` AbstractUITag . java ` to improve clarity and consistency in the UI component
removed the ` updateProgress ( ) ` method and its implementation in the ` PurgingPartitionIterator ` class to streamline the iteration process by eliminating unnecessary
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated ` VectorUtil ` to use it to improve
added abstract methods ` getHeight ( ) ` , ` getWidth ( ) ` , and ` getHeight ( ) ` to ` BaseMonochromeBitmapSource `
added validation to ensure polygons contain at least 3 points and improved localVertices assignment logic to ensure that the polygons contain at least 6 points and
replaced instances of ` ObjectMapper ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` in multiple files to improve code maintainability and consistency
fix potential nullpointerexception in implicitcurve . evaluatedouble ( ) .
updated ExternalNameRecord to handle multi - byte characters correctly and added a new test case for bug 47384 to ensure correct handling of UTF - 8
camel - 14263 : camel - jms : fix typo in description
added a boolean flag ` returnLoginPrompts ` to control login prompts based on the ` returnLoginPrompts ` flag in ` LoginInfo
replaced ` remove ` with ` removeIf ` for removing listeners to improve code readability and maintainability by using a lambda expression
added a switch statement for the ` actionToggleSpin ` button in ` PieChartActivity . java ` to allow users to toggle the spin animation
cloudstack - 10213 : do n ' t kill the vhd process when the vhd be null
hbase - 26385 ignore table state if the namespace have quota ( # 4811 )
updated import statements in AndroidInput . java and added a resize method in AndroidInput . java to improve code organization and ensure proper resizing of arrays
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class to provide a way to retrieve property values from multiple target objects
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to prevent test failures due to blocking PRs
fix the hopperhock not be able to place the hopperhock in the correct position
added authentication dialog functionality to SsoWebViewClient for user authentication to enhance user experience by providing prompts for authentication requirements
refactor document deletion and deletion methods in TestStressIndexing2 . java to improve code readability and enhance document management functionality
[ flink - 22559 ] disable upsertkafkatableitcase due to flink - 22559
replaced ` pg . types . get ( j ) ` with ` pg . types . computeIfAbsent ( j ) ` in ` ResTable
added DeserializationFeature . ACCEPT _ SINGLE _ VALUE _ AS _ ARRAY to DefaultEntityMapper to enable handling of single values as arrays
updated localization update message to include both BE , UK , UK , and SL to enhance localization support for users
[ hotfix ] [ configuration ] use resourceutils . getString ( ' cl . app . categories ' ) for shortcut category
updated ASTBuilderVisitor to accept RelExpressionInstanceOfContext instead of ExpressionInstanceOfContext and added a new test for instance checking in FEELParser to
nifi - 113 : add content - type attribute to gethttp . get ( ) and add content - type attribute to gethttp . get (
fix a bug in resourcehistorytable . toprovenanceentity ( ) when the same resource be delete and update
renamed ` exitButton ` to ` doneButton ` in ` HelpActivity . java ` and added a new ` doneButton ` listener in ` Search
[ hotfix ] [ network ] fix typo in natsconfiguration javadoc
updated the ` invalidateStalePartitions ` method to accept a ` MetastoreContext ` parameter and refactored partition cache invalidation logic to improve
bug 66432 : use a circularfifobuffer instead of boundedfifobuffer for sample result tree
replaced ` ic _ group ` icon with ` ic _ chat _ bubble ` in multiple classes to improve clarity and consistency in the user interface
updated method calls from ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver . java ` and ` BroadcastReceiverTest . java ` to ensure
updated test method names and import statements in MocksCreationTest . java to improve readability and consistency to enhance code readability and maintainability by
added a constant for the data source name in CSVThirdEyeDataSource and changed the visibility modifier of generateDetectionConfig method in YamlDetectionConfig
increased the timeout duration from 10 seconds to 30 seconds and added a sleep delay in awaiter calls to improve responsiveness by allowing more time for
removed the ` BuildSlaveFinishedEvent ` class and related events from ` DistBuildRunCommand . java ` and removed the ` BuildSlaveFinished
cloudstack - 10297 : fix utf - 8 encode issue in vmwarestoragemanagerimpl . java
add test for depositing workspaceitem without a workflow
added a distinct iteration for classpath files in ClassLoaderSupportImpl . java to ensure unique classpath files are processed to avoid duplicates
removed the isBoxedPrimitive method from Unbox . java to streamline the code by eliminating unnecessary method
refactor argument handling in SpecificCompilerTool to use contains method instead of equals for argument counting to improve code readability and maintainability by using
added a condition to check if a table is not an external table before deleting the directory to ensure that the directory is only deleted when it is not
updated asynchronous execution configuration settings and improved exception messaging in HiveServer2 to enhance the flexibility and clarity of asynchronous execution management in the Hive server
added a try - catch block around dismissDialog call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for task service and component names instead of hardcoded strings to improve code readability and maintain
[ operationsettelephonyconferencingsip ] do n ' t store currentconfinfo if it ' s change .
add a clearentries ( ) method to flutterlogtree and flutterlogview . clearentries ( ) . close # 1339
added a check for output and input shutdown status in ChannelEndPoint . java to ensure proper handling of shutdown scenarios when the channel is closed
refactor SetNullableGenerator class to improve code readability to enhance maintainability and facilitate future updates
camel - 14263 : camel - example - reportincident / webservices / reportincident / http : / / http : / /
updated import statements and modified the handling of APPLICATION _ FORM _ URLENCODED content type in NettyRoutingFilter . java and FormIntegrationTests
added a new ` hello ` method to ` AbstractBaseService ` , ` IBaseService ` , and ` MyEndpointWithInterface ` classes to
replaced the ` update ` method with a direct call to ` lifecycleListeners ` in ` Lwjgl3Window . java ` to ensure proper
updated the FG _ FK color from 90 to 200 to improve the visual appearance of the FK color
make mp3 mp3 audio format optional in soundmanager
refactor secondaryindexmanagertest to use getbuiltindexes ( ) instead of execute ( )
pmd plugin : add version and eclipse version to the about section of the plugin
[ hotfix ] [ test ] fix checkstyle violation in customserializationitcase
refactor MediaFormatUtil class to improve code readability to enhance maintainability and facilitate future feature additions
added a method ` isCellEditable ` to the ` GeneralTab ` class to provide a default implementation for the ` isCellEditable ` method
added a new method ` isUnusedDependenciesOnlyPrintCommands ` to control command printing based on the ` isUnusedDependenciesOnlyPrintCommands ` setting to
added a static variable ` tmpCount ` and updated the value of ` vscales ` in ` VocalTractModifier . java ` to
updated import statements for BaseScalarUdfTest and TestGenericUdfConcat classes to ensure compatibility with the latest Hive testing utilities
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthenticationDetails
update testskinningcontrolrefresh to use mesh . xml instead of skeleton . j3o
rename ` NodeFilter ` to ` NodeCountFilter ` in multiple files to improve clarity and consistency in naming conventions
updated the condition in NodeImpl . java to check if the size is less than or equal to SYNC _ FETCH _ BATCH _ NUM to
updated debug expression parser to use ` setState ( 366 ) ` instead of ` setState ( 365 ) ` and updated the ` DebugExpressionParser
updated the condition for determining dependencies in ExcludeDependency . java to improve dependency resolution by ensuring only relevant dependencies are included in classpath
replaced ` tmp ( ) ` with ` dst2 ( t v ) ` and updated the ` lerp ( t v ) ` method signature to
initialize the args array to an empty array instead of null to ensure the args array is always initialized to avoid null reference issues
refactor RustBinaryDescription to use ImmutableList for linkerFlags instead of List to improve linker flag handling by allowing linker flags to be
[ java ] fix test failure on travis and appveyor
added DAG name handling and improved logging in GenericUDTFGetSplits and GenericUDTFGetSplits classes to enhance the logging
removed unused import of java . io . File in TileAtlas . java to clean up the code and improve readability
do n ' t flush the output stream if it ' s already close .
updated the ` validateQuery ` method to include an additional ` Object . . . arguments ` parameter to improve error handling by providing more context in the
updated the index version from 1 to 2 and refactored the getTree method in LuceneExecutor . java to improve indexing efficiency and readability
[ hotfix ] [ kryo ] add unit test for kryo registration
added null check before removing properties in BlueprintConfigurationProcessor and updated test cases in BlueprintConfigurationProcessorTest to ensure that properties are only removed if
refactor boolean handling in MetaStoreDirectSql . java to use Apache Commons Lang ' s BooleanUtils to improve code readability and maintainability by
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user experience by hiding the customization drawer when necessary
refactor ` TermVectorComponent ` to use a constant for ` warnings ` and simplify the handling of ` warnings ` to improve code readability and
added optimistic type check and improved log message formatting in Compiler . java to enhance clarity in log messages and ensure logging only occurs when optimistic types are enabled
refactor Expect . java to improve code clarity to enhance maintainability and understanding of the
added UnixSocketConfigurationStrategy to DockerClientFactory and created UnixSocketConfigurationStrategy class to support Unix socket communication in Docker operations
added JUnit flaky test methods to CloseableDoSFilterTest and overridden them in CloseableDoSFilterTest to enhance test coverage for
camel - 14263 : camel - reactivestreams - add a reactivestreamsnoactivesubscriptionsexception in camel - core
refactor validation and conversion logic in Vectorizer to utilize TezWork instead of MapRedTask to improve code readability and maintainability by
added a boolean parameter to the super constructor in StringAppender , LogDivertAppender , and LogDivertAppender classes to ensure proper initialization of the
fix npe in jmetertreemodel when guipackage be null
[ gr - 32233 ] reduce the number of weak link in llvm parser .
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
no effective change - add unit test for ebeantransactionThreadLocal
added a check for invalid operation handles in HiveStatement . java to improve error handling and logging for invalid and non - existent operations
renamed ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ ALTER _
camel - 15836 - camel - aws : add unit test for secret manager component
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
updated the email sending error message format in UserREST . java to improve clarity of error reporting when sending an email
added a parameter ` subTree ` to the ` fromContent ` method and modified the ` fromContent ` method to include a ` subTree `
updated column width calculation in Sheet . java and added a new test for column width in TestHSSFSheet . java to ensure accurate column width
added a configPath parameter to the Commands . less method call in Builtins . java to provide additional configuration options for command execution
updated method signatures from ` Set ` to ` Collection ` in ` DotWriter ` , ` GraphExecutable ` , and ` GraphExecutable ` classes to
updated the SSHD container image from a sha256 to a new version in TestcontainersConfiguration to ensure compatibility with the latest SSHD standards
added an assertion to check if the hostId is not null in AgentManagerImpl . java to ensure that the assertion does not fail if the host
refactor group key generation logic in DefaultGroupKeyGenerator . java to improve clarity and functionality to enhance code readability and maintainability by reducing complexity
updated test methods in TestMultiMMap . java to include exception handling for seek operations to improve clarity of error messages during file seek operations
fix bug where ingredients stack be not be create for the plug gate .
change the method name from ` put ` to ` putObject ` in ` GraphHopperConfigMixIn . java ` to improve clarity by indicating
updated visibility logic in CellLayout and modified drag exit methods in DragController and Workspace classes to improve drag - and - drop functionality to enhance user experience by
updated the ` flatMap ` method to use ` originalBody ` instead of ` o ` in ` ModifyRequestBodyGatewayFilterFactory ` and added a test
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure only accessible types are processed to enhance security by restricting access
change log level from warn to trace for logging messages in LoggingHandler . java to improve logging granularity and reduce log verbosity
fix whiteblacklist . whitelistpathsnonrecursive ( ) and whitelistjars ( issue # 348 )
added new imports and modified gallery menu handling in GalleryActivity . java to improve code organization and enhance user interaction with gallery images
refactor MongoDBServiceFactory to manage service instances more effectively to improve resource management by ensuring MongoDBService is instantiated before use
added methods to replace boolean values with boolean values in InlineConstantMutatorTest . java to ensure correct behavior of inline constant mutant substitutions
added a Blackhole parameter to the ` decode ` method in ` RecordTest . java ` to enhance the functionality of the ` decode ` method by
chore ( bazel ) : update gapic - generator - java to 2.2 . 0 and update gapic - generator - java to 2.1 .
[ knx ] skip dpt unit if not according to group notation ( # 10297 )
removed the call to dbManager . getWitnesses ( ) . clear ( ) from dbManager . getWitnesses ( ) to clean up the
http : / / code . google . com / p / mybatis / issues / detail ? id = 560 : jdbcpagesink
updated stack property handling in NativeError . java to use new functions for stack management to improve clarity and maintainability of stack property management in the
removed redundant check for path names starting with " . " in DrillPathFilter . java to simplify the code and improve readability by eliminating unnecessary
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration ` to
test : fix failure due to other method use same id space
updated the boldweight constant from 190 to 0x190 in HSSFFont . java to improve the font ' s normal weight for better
modified the ` fThreadGroup ` variable to be volatile and added a new ` fLookForStuckThread ` constructor to enhance thread safety and
removed the ' final ' modifier from the ` getValue ( ) ` and ` setValue ( Object value ) ` methods in ` ValueResultData . java
updated the hashCode ( ) method in FuzzyQuery . java to use the superclass ' s hashCode ( ) method to ensure proper hash code generation for
removed unnecessary System . err . println statements from PushedResourcesTest . java to clean up the code and improve readability
replaced the ` removeFile ` and ` removeDirectory ` methods with ` removeFile ` and ` removeFile ` and ` removeDirectory ` methods to
updated the product version from " 2.1 . 1 " to " 2.1 . 0 " in JdbcDriverInfoRetrieverTest . java and SchemaCrawlerCoverageTest
updated the principal retrieval logic and modified the principal resolution process to improve principal handling and ensure proper resolution of principals
updated logging level from info to warn for ZigBee USB Gateway connection issues to improve visibility of configuration issues for better debugging
replaced ` Hashing . intHash ` and ` Hashing . longHash ` methods with ` Hashing . hash ` across multiple classes to improve
added a constructor to ` ThumbnailsCacheManager ` and a null check for ` mCurrentAccount ` in ` FileUploader ` to ensure that
updated the loop condition from ` nrFound = 0 ` to ` nrFound < count && tries < 5 ` in ` GroupSelectionQuery . java
added a new file ` Bug1933922 . java ` implementing program and program management methods to address bug 1933922 related to recursive
updated conditional statements in MultipleSeriesProvider , Tokenizer , and AjaxDecoratorMapper classes to improve code readability and maintainability
updated the condition for handling control characters in FileResolver . java to clarify that control characters 0 - 31 are invalid and space characters 32 are valid
added a call to requestFocus ( ) in the Display class to ensure the component receives focus for user interaction
add new test data to the instructor home page ui test .
rename JsonParserAsync to JsonStreamParser across multiple files to improve clarity and consistency in naming conventions related to JSON parsing
refactor Crouton cancellation logic in DetailFragment and MainActivity to improve clarity and functionality to enhance user experience by providing feedback when a note
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT . java ` to verify
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
replaced the call to ` Runtime . getRuntime ( ) . exec ( args ) ` with a ProcessBuilder instance using ` ProcessBuilder ` to simplify process execution by
updated the method for tracking the past window in HintedHandOffTest . java to use a dynamic hostname instead of a hardcoded value
refactor the case handling for controller names in Metrics . java to improve code readability and maintainability by consolidating multiple switch statements
added assumption checks for Apple platform support in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
make jvmciversioncheck and jvmciversioncheck more robust to check for required property
refactor Mockito class to improve readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] fix typo in testlargepageuseforauxmemory
updated the ` readAllBytes ` method to use ` getSource ( ctx ) ` instead of ` getSource ( ) ` in ` BinaryParser ` and
added support for LEGACY and RFC7578 in HttpConfiguration and implemented a new MultiPartFormDataCompliance enum to enhance flexibility in handling multipart
added GradleVersion . version ( " 7.2 " ) to GradleDistributionManager . java to ensure compatibility with JDK 17
refactored type addition logic in DatabaseSnapshot and SnapshotControl classes to improve code readability and maintainability by encapsulating type addition logic
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
updated the return statement to handle null or empty runWith cases to ensure that a valid runWith is returned to avoid potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4073 - add test for the same RM resource
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
pdfbox - 4071 : fix testblackboxcountingresults ( boolean assertonfailure ) and add testblackboxtestcase ( boolean )
refactor tinting logic in TaskView . java to use mTintAmount instead of mSnapshotView . dimAlpha to improve clarity and
added a new class ` SumZeroFunctions ` to handle the sum of zero aggregation functions to provide functionality for aggregating zero sums in
updated string concatenation syntax in FirstValueFunctionIT and NthValueFunctionIT classes to ensure consistency in data type formatting across test cases
hbase - 26119 addendum : improve bucketcache . getallocationfailwarningmessage ( ) method to include bucketallocatorexception
added a null check before updating role properties in JDBCRoleService . java to avoid potential NullPointerException when propName is null
added @ VisibleForTesting annotation and modified method visibility in StatusBarTouchController and RecentsView classes to improve testability and ensure immutability of
added methods to log container streams in DockerClient to maintain stream open indefinitely for improved resource management
mvstore : disable the file system cache by default ( test case
updated LONG ( " Long " , " L " , " J " ) from " L " to " J " in PrimitiveType . java to
changed the visibility of the ` delegatingApplicationListener ` method from instance to static to allow the class to be accessed without an instance of the
set the message body to null in RestBindingAdvice . java to ensure that the message body is cleared before processing
added new files ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` to manage file deletion in batch processing
mow - 169 update size keep drawables on the companion view .
[ java ] add javadoc for lgtm index out - of - bounds check .
updated ` sendEventToTest ` method to accept an ` int ` parameter for ` fromState ` and ` targetState ` in multiple classes to
added handling for video thumbnail requests in multiple classes to ensure proper handling of video thumbnail requests based on user agent
[ java ] do n ' t show error message when there be no line to highlight .
added conditional logic to layout the open button based on the theme constant to ensure the correct positioning of the button based on the user ' s theme
updated multiple values in Skia . java and added preload variable in Skia . java to enhance functionality by allowing preloading of the Skia library
add unittest support to networkparameters . getunittests ( ) .
added validation to ensure format arguments are not empty and throw a human - readable exception for invalid queries to improve error handling and provide clearer feedback when
changed the variable ' capacity ' and ' mask ' from ' capacity ' to ' length - 1 ' in IntIterator . java to improve clarity and
added a new parameter ` srcTarget ` to the ` walkRuleAndAdd ` method in ` Project . java ` and modified the ` walkRule
add support for override module path in patchmodulefilemanager
[ java ] remove unnecessary check for protocol version in election .
added conditional logic to set the default policy for SAML authentication in OwnCloudClientManagerFactory to ensure proper handling of client creation based on authentication status
added null checks for mappedTableResource in ReadBatch , WriteBatch , and ReadBatch classes to ensure that the ` mappedTableResource ` is not
remove unnecessary try - with - resources call in onmessagesubscriber , onmessagesubscriber , onmessagesubscriber , onmessagesubscriber ,
refactor anonymous authentication handling to utilize a Supplier for deferred context retrieval to improve flexibility and maintainability of the authentication process
added an ` unfocus ` parameter to the ` removeActor ` method in ` Actor . java ` and modified the ` removeActor ` method to
refactor cloudConfig initialization to use a valid string instead of a hardcoded string to improve code readability and maintainability by reducing redundancy
added logging functionality to NettyHttpServer and RoutingInBoundHandler to enhance server performance by allowing logging of HTTP responses based on server configuration
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
replaced the call to ` update ( ) ` with a SwingUtilities . invokeLater ( update ( ) ) in ` CodeDependenciesPanel . java ` to ensure
camel - 14284 : groovy expression now use groovy language to load script from cache .
[ mng - 7170 ] remove dependency from pluginmanager . getmanagedversionmap ( )
changed access modifiers of ARGS _ OPTION from static to public in CliFrontendParser , ProgramOptionsUtils , and ProgramOptionsUtils classes to allow
renamed ` ShadowSharedPreferences ` class to ` TestSharedPreferences ` and added a new ` TestSharedPreferencesTest ` class for unit testing to improve
removed unused aliases and certificate chain retrieval from HttpsMessenger . java to streamline the code and improve maintainability
do n ' t throw exception if the response be not a jsontobeanconverter
changed the visibility of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow subclasses
fix block . dropresources ( ) not work for serverlevels . close # 2866
added native methods for handling SpatialLocationCalculatorConfig in DataOutputQueue and depthai classes to enhance functionality for retrieving and retrieving spatial location calculator configurations
refactor multiple Java files related to community detection and page ranking to improve code organization and maintainability
refactor the ` isEmpty ` method in ` TreeTrie ` to use a dedicated method for checking empty nodes to improve code readability and maintainability
updated foreground and background color calculations in AttributedStringBuilder . java to improve rendering consistency by using color parameters
added conditional check for ` solr . disableFingerprint ` system property in ` PeerSync . java ` and updated ` PeerSyncTest . java ` to
changed the visibility of the moveFunds method from private to public in GDAXAccountService . java to allow external access to the move
added support for UUIDs in MongoTemplate and updated test cases in MongoTemplateTests to enhance functionality to support UUIDs in database operations
use hazelcastinstancefactory instead of static instance to make sure we do n ' t use it .
add a null check and close the input stream if it be not null .
updated the exception handling from ` ApiBag . ExceptionWithErrObject ` to ` ApiException ` in ` TestCollectionAPIs . java ` to improve
removed unnecessary whitespace in the configuration loading process to improve code readability and maintainability
[ java ] remove longFsName from teammatesLogMessage initialization to improve code readability and maintain consistency in formatting
[ hotfix ] [ runtime ] fix checkstyle violation in externalworkerservice
[ homematic ] remove the step parameter from displaytextvirtualdatapoint .
added logging statements for acquiring and releasing shared locks and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve
removed redundant call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline the code by eliminating unnecessary duplication
simonstewart : fix typo in testgettextcontent . java
refactor Logger class to use a ThreadLocal for managing logger instances to improve thread safety and maintainability of logger management
refactor ` convertToCompilationUnit ` method to use ` @ VisibleForTesting ` and update mockit imports in ` FunctionInitializerTest ` to improve test
added a new method ` boxedTypeOrType ` in ` Types . java ` and updated the ` compound ` method in ` Types . java
updated the handling of focused task view orientation in RecentsView . java and removed the initialization of mDigitalWellBeingToast .
hbase - 26265 use getregions ( ) instead of liveregionserverthreads ( ) . getregions ( ) . getregion
added contract handling and storage saving for new contract addresses in TransactionExecutor . java to ensure proper cleanup of contract details during transaction execution
updated the TOKEN _ ISSUE _ FEE constant and adjusted its calculations in TokenIssueProcessor and Program classes to utilize dynamic properties for
replaced ` apMap ` and ` texCache ` with a boolean flag for clearing texture caches to improve cache management and ensure proper resource cleanup
refactor Blit and add a new test class Bug7049339 to improve code clarity and implement a new test case for bug 7049
added support for unselected style in Component and Label classes and updated string width calculations in DefaultLookAndFeel and DefaultLookAndFeel classes to improve string width calculations for
updated the initialization of ` mappings ` , ` mappings ` , and ` actions ` lists in multiple classes to improve performance and memory allocation efficiency
removed flags parameter from queryImplicitIntent methods in ShadowApplicationPackageManager . java to simplify method signatures and improve code readability
refactor PingRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
remove unsupported mp4 asset with increasing timestamps from transformation test .
[ tradfri ] fix firmware version check in tradfrigatewayhandler
refactor AjaxElementLocator class to improve code organization to enhance maintainability and readability of the code
updated display check from InlineLayout to DefaultLayout in BoxLayout . java and added support for " table - cell " display in DefaultLayout . java to
updated JsonDecoder to handle both START _ ARRAY and END _ ARRAY modes and added a new test for reordering fields in JsonDecoder to
blockcache : use blockcache . removalcause instead of notification . getvalue ( ) to release location
added @ Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added @ Test annotations to DroolsMvelParserTest . java to enhance test coverage for the parser functionality
changed fields from private to final in ContextRegisterListener . java to enforce immutability and improve code safety
added a cacheIterator parameter to the ObjectHashSet class and modified iterator initialization in ObjectHashSet to improve performance by avoiding unnecessary object creation when the iterator is
added validation for batchBytes in SparkReduceRecordHandler , ReduceRecordSource , and ReduceRecordSource classes to ensure that batchBytes does not
change context . MODE _ WORLD _ READABLE to Context . MODE _ PRIVATE in AppSettings . java and UpdateUtils . java to
updated logging messages in JdbcProxyGenerator to include additional conditions for aborting connections to improve clarity of log messages and enhance error handling for connection management
updated the method call in Workspace . java to use mState instead of mState for accessibility to improve accessibility handling based on the current state of the
hbase - 26185 change log level from warn to debug for malformed edits in protobuf log reader
updated scope handling in UaaTokenServices and added a test for persisting revocable tokens in UaaTokenServicesTests to ensure that the
updated import statements and added a toString method to AvailableJDBCDrivers class to improve clarity and functionality of the logging system
added a new interface ExecutableCommand to the org . kie . api . command package to provide a standardized way to execute commands in the
camel - 15836 : camel - jms - to - jdbc - to - jdbc - remove unused jdbctableservice
added padding retrieval methods in CellLayout . java and modified bitmap creation in Launcher . java to improve padding handling and optimize bitmap scaling for portrait mode
modified the filtering logic in LineReaderImpl . java to handle empty string scenarios to improve robustness by avoiding unnecessary processing when the string is empty
refactor SamlMetadataUIParserAction to use Action instead of SamlMetadataUIAction in multiple classes to improve code clarity and maintainability by
added a method to check if a specified port is open and checked for processes using a specified port to improve test reliability by verifying if a specified
log4j2 - 1349 set the executorservice shutdown timeout to 0 instead of - 1
refactor redirect handling in Fetcher and HTMLMetaProcessor to improve clarity and logging for content redirects and protocol redirects to enhance code readability
updated SolrQuery to use " name : samsang " instead of " * : * " in TestSpellCheckResponse . java to improve
karaf : use old karaf console api if available
changed the access modifier of the getVerticesColors method from public to private and modified the initialization of the mCol list to ensure compatibility with BMesh
added file filtering for timestamped reports in HTMLReportGenerator and updated related test cases in HTMLReportGeneratorTest to enhance file copying functionality and improve test
update datavalidatortest to use parameterized test instead of test device name validation
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to provide clearer error messages when binding errors in expressions
removed debug print statement from JoglInput . java to clean up the code and improve readability
added support for allowing extracting private fields in FieldSupport and updated field handling in FieldSupport _ fieldValues _ Test to support this feature to enhance
replace ` { name } ` with ` device . getName ( ) ` in ` WebDataHandler . java ` to ensure the correct device name is
added support for MethodHandles . lookup ( Class < Lookup > ) in Platform . java to improve compatibility with Java 8 by allowing the Lookup class to
updated the ` weights ` method in ` ZParams ` to use ` weightsByDouble ` instead of ` weights ` in ` SortedSetCommandsTest `
added a Database parameter to the writeCustomHTML and writeCustomHTML methods across multiple writer classes to incorporate database - specific functionality within the methods
added assertions and refactored key deserialization in BTreeMap . java to improve code clarity and ensure proper handling of null values
replaced Exception handling with BalanceInsufficientException in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and TransactionTrace
disable heap zero file by default if profiler . heap . zerofile be true
replaced print statements with messages in the UI for better clarity to enhance user experience by providing clearer feedback on command execution errors
updated the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and modified the generic record handling in HortonworksEncodedSchemaReference
added ChunkListener import and ItemWriteListener to multiple Java files to enable handling of chunk processing and item processing events in batch processing
refactor code for improved readability and maintainability to enhance code maintainability and clarity
replaced ` doc . get ( " title " ) ` with ` title ` in ` SearchFiles . java ` and removed ` getLiveDocs (
updated Test7005594 . java file to improve test coverage and maintainability
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
updated TopKRollupPhaseOneJob . java file to improve performance and maintainability of the code
server : do n ' t try to map virtual ip address if it be n ' t find
replaced ` mModifierDigitalTriggers ` with ` supportAnalogTriggers ` and replaced ` mModifierDigitalTriggers ` with
refactor ` iteratesOverSequence ` and ` iteratesOver ` methods to use ` Iterable < T > ` instead of ` Arrays . asList
camel - 14284 : camel - http - client should not apply filter to external http header if there be more than 2 header
added unit tests for SQL query results in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the database queries return the expected results for accurate
updated value formatting in BarChartActivityMultiDataset to use a new LargeValueFormatter and updated related imports in Chart and BarLineChartBase to
refactor character handling in CommentsParser to use a constant for the INNOCUOS character to improve code maintainability and readability by using
removed @ SuppressWarnings ( " argument . type . incompatible " ) from Platform . java to clean up the code and improve readability
[ fix ] tracelinearscanlifecycleanalysisphase print lir before register
added a new Auto - generated method stub in NullAssertionValidator . java to enable future development and testing of the NullAssertionValidator class
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enhance rule key generation for better integration with Buck
added systemProfileDirectory initialization and modified test setup and teardown methods in DLNAMediaInfoTest and SearchRequestHandlerTest to ensure proper directory structure and
refactor the creation of the ` createThreadFactory ( ) ` method in ` TestcontainersDockerCmdExecFactory ` to improve code readability
refactor message counting logic in HttpChannelOverHTTP and HttpReceiverOverHTTP classes to improve code readability and maintainability by encapsulating
added a accept attribute to the element in ImageFileInputDialog . java to enhance user interaction by allowing multiple images to be displayed
refactor ` ElasticIndexWriter ` to use ` PreBuiltTransportClient ` instead of ` NodeBuilder ` and update related imports to improve
added detailed witness class and class names in ForkController . java to improve debugging and traceability of witnesses
added a new test class ` NullPointerAndEmptyArrayTest ` to validate handling of null and empty arrays to ensure that the ` CustomURLClassLoader `
deleted the method ` findConfiguredGeneratedSourcePathsUsingDeps ( targetNode ) ` and modified the ` getDepToGeneratedSourcesMap ( ) `
updated UaaStringUtils to replace the wildcard pattern with an optional character delimiter to enhance flexibility in wildcard creation by allowing dynamic character delimiters
added validation checks for map work aliases in Vectorizer . java to ensure that only one TableScanOperator can work with aliases to prevent validation errors
updated import statements and exception handling in WeatherQueryTest . java to improve readability and maintainability of the test code
added error handling for setting setting values in TinyGFirmwareSettings . java to improve robustness by logging errors when setting values cannot be
refactor ` getLangs ` method to return a ` Set < String > ` instead of an array to improve the efficiency of retrieving languages from
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency and clarity to improve code readability and maintainability
hbase - 26464 make sure snapshot creation and takesnapshothandler do n ' t fail if snapshot creation fails
[ j2kt ] make runtimemethods . createplatformisnullcall consistent with javaemul .
added a test for explorer ' s HTTP RPC endpoint modification in DockerQuickstartTest . java to ensure that the explorer ' s HTTP RPC endpoint is
added a volatile boolean flag ` isSuspended ` and modified thread state handling in ` Thread . java ` to improve thread state management and ensure proper
renamed ` Javadoc . Author ` , ` Javadoc . Since ` , ` Javadoc . SerialData ` , and ` ReloadableJava
camel - 14284 : fixed npe in camel - spring and camel - spring - produce
removed multiple @ Override annotations from multiple security - related classes to improve code clarity and ensure proper method overriding
added module import handling in Java2TypeScriptAdapter and updated eval method in EnumTests to improve module handling and ensure correctness in enum tests
updated the language variable from ` W3C _ XML _ SCHEMA _ NS _ URI ` to ` http : / / www . w3
added content description handling for badged app labels in BubbleTextView . java to enhance user experience by providing contextual information for badged apps
added MouseWheelListener to handle wheel movement events in TestMouseWheelScroll . java to improve mouse wheel functionality for better user experience
added resource closure in VisualTester and added a test for positioning absolute in VisualRegressionTest to ensure proper resource management and prevent memory leaks
updated currency pairs from BTC / BTC to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to ensure consistency in
updated VacuumController , VacuumView , and VacuumView classes to use String instead of Object for location to improve type safety
removed currency checks for " DSH " , " DASH " , and " QTM " in BitfinexAdapters . java to simplify
updated JsonFormat . java to use ImmutableSet and added functionality to output default fields based on message types to improve code clarity and maintainability by reducing complexity
added handling for array and enum types in JacksonXmlFormatMapper to ensure correct serialization of byte arrays and enum types
added PARKED _ SUSPENDED constants and modified thread handling logic in VirtualThread . java to enhance thread state management and improve
updated ` DirectoryTaxonomyWriter ` and ` NameIntCacheLRU ` classes to use ` catTerm ` instead of ` NoOpCache ` to
refactor VetoableChangeSupport class to improve code organization to enhance maintainability and readability of the code
corrected the calculation of the height calculation in BrowserContentPane . java to ensure correct positioning of the content pane based on its height
pdfbox - 4071 : remove unnecessarily throw invalidpasswordexception , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure proper security
refactor button and menu handling in InputBarHelpPanelW . java to improve code readability and maintainability
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
updated ` Thread . sleep ` and ` ThreadHelper . waitUntil ` in ` BackendInitializerHelper . java ` , ` TerminalClient . java `
updated version check logic in SwingStartup . java to use ReleaseStatus . OLDER instead of BuildProperties . getVersion ( ) to improve clarity and
added support for include generated file comment in migration xml
updated command descriptions to include " < player | * > " instead of " < player > " in multiple classes to enhance command functionality by allowing
deleted BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused or redundant threads to streamline the codebase
[ java ] correct the spelling of " optionname " in OptionProcessor . java to improve code clarity and maintainability
added conditional check for PARALLEL _ CLASSES in TestNGContentHandler . java to ensure proper handling of parallel class scenarios in XML processing
camel - 14263 : camel - spring - boot - enable - acting - master should set enableactivemaster to false if the old version be
refactor ( ctmethodimpl ) : remove static import from ctmethodimpl . java ( # 2063 )
added serialVersionUID fields to multiple exception classes to ensure compatibility during serialization and deserialization processes
updated DeadLetterEntry , JpaSequencedDeadLetterQueue , and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated shaBase64 method to accept a separator parameter and added a new test for it in ShibbolethCompatiblePersistentIdGeneratorTests to enhance
updated the return statement to handle null parameters and adjusted the condition for system actions to improve robustness by preventing potential NullPointerExceptions
added a new class Person with a name field in the org . apache . maven . it0074 package to facilitate the creation of a Person class
patch by jbellis ; review by jbellis for cassandra - 151
updated string comparison from ` indexOf ` to ` indexOf ` in ` AbstractClient . java ` to ensure case - insensitive comparison for time strings
added assertions for " timeColumn " , " timeUnit " , " totalDocs " , and " timeUnit " in SegmentMetadataImplTest to
updated color imports and set the foreground color to DARK _ RED in SimulationPlotPanel . java to improve the visual appearance of the
added disconnectEmitters . onNext ( new Object ( ) ) to NettyStreamingService . java to ensure proper handling of disconnection events
camel - 14263 : camel - core - do n ' t use string for scope hierarchy .
simonstewart : add a test to verify that click on an element hidden due to double overflow
added a try - catch block around dismissDialog call to handle potential exceptions when dismissing the dialog
added support for dynamic JNDI lookup in JTATransactionManager to enhance flexibility in JNDI configuration and improve error handling
changed the visibility of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to streamline the code by eliminating unnecessary functionality
renamed variable ` enabledCiphers ` and ` result ` to ` result ` for clarity to improve code readability and maintainability by using more de
fix bug in bigqueryutils . totimestamp ( ) to be compatible with java . time . temporal
replaced ` throw new IllegalArgumentException ( " No buffer provided " ) ` with ` requireNonNull ( ) ` in ` Identifiers . java ` to improve
use inputmap . getdefaultvalue ( ) instead of inputmap . getdefaultvalue ( ) instead of input . get ( ) .
added bounds checking for row and column in FlightConfigurablePanel . java to ensure that the row and column indices do not exceed the table ' s
added a call to ` scrollSelectionVisible ( ) ` in ` ThrustCurveMotorSelectionPanel . java ` to ensure the selection is visible
[ java ] avoid unnecessary local before return if there be no memberselector .
refactored script engine retrieval logic in AbstractScriptExecutor to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
[ geot - 6071 ] euclideandistancesimilarity : remove unnecessary double . isNaN ( ) check
patch by jbellis ; review by brandonwilliams for cassandra - 142
added a new method ` relativize ` to handle both ` baseDir ` and ` path2 ` in ` MorePaths . java ` to
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure correct behavior when columnSize or decimalDigits are null
[ hotfix ] [ test ] skip deadletterqueuewritertest . java test
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure correct conversion of
renamed ` ErrorHandlerController ` and ` Error404Controller ` to ` Error403Controller ` and added a new ` Error403Controller `
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in ` UnixTerminal . java `
updated Tiny . java imports and modified trigger patterns in Tiny . java to enhance functionality and ensure compatibility with new collection types
refactor connection acquisition logic in ConnectionPool . java to improve code readability and maintainability by reducing redundancy
rename ` getDateConverter ( ) ` and ` setLdapDateConverter ( ) ` to ` getLdapDateConverter ( ) ` across multiple classes to
pdfbox - 4892 : do n ' t try to create a tree if there be an id _ tree
[ javassist ] improve error message when attempt to create a class .
[ hotfix ] [ test ] make largestreamlettest more robust to time issue
updated the page selection logic in HomeFragment to use shared preferences to ensure the correct number of extra pages is displayed based on the current account settings
added error handling for broken Gaussian image processing in AndroidImplementation . java to improve robustness by preventing crashes due to broken Gaussian image processing
added @ suppresssubnodes to the return statement in BaseParser . java and updated the return statement in ImplicitActionsConverter . java to improve code
[ iotdb - 4071 ] fix resource leak in loader . load ( )
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed in the project
added a shell command to execute the key event 82 in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to ensure
added ObjectMapper to generate filenames for output file paths in FileDumper . java to facilitate the mapping of output file names to URLs for better
bugfix # 210618 , profilerserver . resetresultsnotifiedflag ( ) should be call by profilerserver . resetresultsnot
blendercontext . gettexturefromimage ( ) and blendercontext . addloadedfeatures ( ) to texturehelper . loadimage ( )
updated the context ID assertion from " application : " to " application " in multiple test files to ensure consistency in the context ID format
updated the ISBN random number from " 9781797745008 " to " 9781797845005 " to reflect the
updated notification sound setting to use a dynamic ringtone from preferences to enhance user experience by providing a clearer and more informative notification sound
added a method ` reportLoopCount ` to the ` RootNode ` class to handle loop count reporting to ensure that the correct loop count is reported
added logic to finalize the version finalization based on repository type in FinalizeUpgradeAction . java and modified cluster entity merging in ClusterImpl . java
fixed typo in query by regionid and regionid
removed redundant calls to streamManager . open ( stepExecution . getExecutionContext ( ) ) in ItemOrientedStep . java to streamManager .
added a new file CountedLoopProblem . java that implements a test for counting loop results to demonstrate the usage of a random number generator in a
removed the metaspaceMethod parameter from multiple methods in CompilerToVM and CompilerToVMImpl classes to streamline method invocation by eliminating unnecessary metaspace
[ gr - 12233 ] fix issue with javathread : : _ pending _ failed _ speculation with javalong .
refactor KafkaStreamsTracing to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve the tracing mechanism for value transformations
FeedbackConstantSumQuestionDetails and FeedbackSessionsLogicTest classes to include received points in the list of points to enhance clarity and usability of
removed DynamicColors . applyToActivitiesIfAvailable call from BaseApplication . java to streamline color application process and enhance user experience
added a method to dump all thread stack traces and improved error handling in CloseRace . java to enhance debugging capabilities and ensure proper thread termination
updated return statement in IntPointField to use intValue ( ) instead of val . intValue ( ) and added tests in TestPointFields to ensure correct
updated the arc size calculation in MyButton . java to use a fraction instead of a fixed value to improve the accuracy of the arc size based on
[ fix ] imagebordercuttingwizard width should be 640 instead of 720 .
rename ` ` minifySqlEnabled ' ' to ` ` shrinkWhitespacesInSql ' ' in ` ` SqlSourceBuilder ` and ` ` Sql
removed the ` waitForStateTransitionToEnd ` method and refactored state transition checks in ` AbstractLauncherUiTest ` and ` WorkProfileTest
added new imports for CasCoreAuthenticationPrincipalConfiguration , CasCoreTicketsConfiguration , and CasPersonDirectoryConfiguration in multiple test classes
updated volume reading methods in Volume . java to use byte array reading instead of raf . readLong ( ) to improve performance and efficiency in reading long values
camel - 14263 : camel - http - echo should log the response code even if it be not in debug mode .
refactor ClasspathInfo creation to use a local variable for boot path and set the module boot path to improve code readability and maintainability by
automation : add script scope provider for audio and voice
added a method to get and set the layer manager in the AnimComposer class and updated related methods in AnimEvent and TestJaime
added a check for empty queue in DeferredHandler . java and removed the showDefaultScreen method in Workspace . java to improve performance by avoiding unnecessary processing
added null checks and improved exception handling in MapRecordProcessor and TezProcessor to enhance code stability and prevent potential runtime
refactor CylinderRegion to use a more descriptive variable name and update center calculation logic to improve clarity and maintainability of the center
updated TestBadUseCases to use JUnit ' s ExpectedException rule instead of a static import to improve code readability and maintainability by
added null check for subparameters before sending queries in QueryExecutorImpl . java and added a test for multi - execution in StatementTest . java to
do n ' t log customized security environment for VisualVM - Security .
updated the ` @ GET ` endpoint in ` ReviewInterface . java ` to include the ` rctag ` parameter to enhance the API endpoint ' s
updated test cases in Test . java to improve test coverage and reliability
updated PBEKeySpec to use keyLength instead of blkSize to ensure correct key length is used for the PBE key generation
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
add a call to writesectiondefinition ( ) in rtfdocumentheader . writesectiondefinition ( )
added a speed check for large jumps in the GPS logging service to prevent excessively large jumps from being logged
removed debug print statements from TableCellLayout , TableLayout2 , and TableLayout classes to clean up the code and improve readability
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
InsightFilter : use weakreference for rootnamefn and sourcefilterfn to prevent memory leak
refactor binary search logic in AllAppsList . java to simplify the data and added additions to enhance code readability and maintainability by
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and refactored theme handling in ` SettingsActivity ` to simplify the activity hierarchy and
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeGenerator . generateValueClass to clarify the purpose of the
corrected a typo in the assertion in FST . java to improve code readability and maintain consistency in assertion style
added assertion to check if the security policy exists and is a file to ensure that the security policy is valid before proceeding with tests
camel - 15836 - camel - olingo2 : camel - olingo2 - add default configuration to olingo2 component
increase sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution to complete before proceeding
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging output for better readability
added publishxmppimagebyhttp ( ) and publishxmppimagebyhttp ( ) to publish an image by http using xmpp .
camel - 14263 : camel - netty should not use channellocal if it ' s already in the pool .
updated URL regex pattern in BalancedClickhouseDataSource and added a new test for invalid host names in BalancedClickhouseDataSourceTest to
added a system property to disable JSR 199 compiler in FragmentActivator to ensure compatibility with the latest JR199 compiler settings
added support for null string handling in CSVRecordReader and its configurations to improve CSV data processing by allowing null values to be processed
added ` @ LiquibaseService ` annotation to multiple connection classes to disable Liquibase service loading for improved performance
updated method signatures to use JavaSourceFile instead of J . CompilationUnit to improve compatibility with Java source file types
add / command / command / command / item / command / item / command / command / itemstatetriggerhandler # itemcommand / itemstatetrigger
updated exception handling from ` BeanCurrentlyInCreationException ` to ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to ensure
updated case for " zkCredientialsProvider " to " zkCredentialsProvider " in SolrXmlConfig . java and TestSolrXml . java
fix mana tablet mana bar not show the mana bar
added a method to set the identifier collection in the current call event to ensure the current call event has the correct identifier collection
removed unused imports for HyphenationCompoundWordTokenFilter and HyphenationCompoundWordTokenFilter in TestRandomChains . java to stream
updated the thread pool name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to ensure consistent naming convention
refactor GeneratedCode class to improve code readability to enhance maintainability and facilitate future updates
typedefinitionregistry : fix usage of assertnotnull ( # 1556 )
removed the shareWithMeIcon button from the view in LocalFileListAdapter . java to hide the UI when sharing with a user icon
updated URLs in DefaultLogoutPageGeneratingFilter and LogoutPageGeneratingFilter to use HTTPS instead of HTTP to enhance security by allowing secure connections
updated header handling to enforce non - null and empty constraints in RouterFilter and RouterServerListFilter classes to improve code robustness by ensuring headers are
added additional debug information to the assertion in TestIndexWriterMergePolicy . java to improve debugging by providing context for assertion failures
[ java ] deprecate multilayerperceptron and multilayerperceptron in favor of multilayerperceptron .
added context awareness check and a new test for multiple contexts in CrawlerSessionManagerValve and TestCrawlerSessionManagerValve to enhance functionality
added security check before retrieving JspApplicationContext in JspFactoryImpl . java to enhance security by ensuring access control when the context is accessed
updated the logic for determining the length of a component based on its position and length in RocketComponentConfig . java to improve accuracy of component length
updated NonceService binding to use Scopes . SINGLETON instead of Singleton in OpenIDAuthenticationProviderModule to improve dependency injection flexibility and ensure
update child link in filewrapper . updatechildlinks ( ) to ensure that child link be update in the parent .
refactored method signatures and improved error handling in SpringCloudPlugin . java to enhance code readability and maintainability
[ hotfix ] [ test ] increase publishwithdelay for retrievalblockingmessagestoretests
added a boolean flag ` mShiftCodesAlways ` to control the behavior of ` Character . SHIFT _ SPACING _ MARK ` to
refactor leader election check logic in ` AbstractHeartbeatMonitor ` , ` NodeClusterCoordinator ` , and ` CuratorLeaderElectionManager ` classes
corrected formatting of the if statement in NearbyActivity . java to improve code readability and maintain consistency
updated the filtering logic in AbstractKerberosDescriptorContainer to use isReference ( ) instead of isReference ( ) to improve clarity and correctness of identity
updated the ` newInstance ` method to accept a ` noop ` parameter in multiple classes to simplify the constructor signature by removing unnecessary parameters
added a sleep delay to the exception handling in TestListenTCPRecord . java to allow for additional time for exceptions to complete before proceeding
refactor argument handling in PatchExtensionMethod . java to ensure original arguments are preserved before reassigning to the method call to improve code clarity and
refactor ` RawNativeLibraries ` to use ` Set < RawNativeLibraryImpl > ` instead of ` Map < String , String > ` for
added support for the " apply - sequence " attribute and " ignore - send - failures " attribute in DefaultRouterParser and AbstractChannelNameReso
added support for x509 certificate publishing in ClientKeyPublisher and JwkViewResolver classes to enhance security by allowing the publishing of X.509 certificates
updated the logic for retrieving the first SolrIndexReader in QueryComponent . java to ensure the correct subReader is assigned when there is a single reader
updated ValueSourceParser to use Double2Parser for maximum and min functions instead of ValueSourceParser to improve accuracy in handling numeric values for maximum
removed conditional check for focus and pointer events in the return statement to simplify the return statement for better readability and maintainability
removed unused variables and removed IOException declaration from TokenSources . java to simplify code and improve readability by eliminating unnecessary exception handling
cloudstack - 10254 : change user _ id to uuid so that it do n ' t have to create a new vm
added @ ConditionalOnWebApplication annotation to ` CasMultifactorAuthenticationWebflowConfiguration ` and modified ` CompositeProviderSelectionMultifactorWebflowConfigurer
added SQL commands and improved connection management in WriteJdbcPTest . java to enhance performance and maintainability of database connection management
removed the null or empty check for the " editor . laf " setting in DefaultPlatform . java to simplify the code and improve readability by
replaced calls to ` getStateEntity ( ) . getDesiredState ( ) ` with direct calls to ` stateEntity . getDesiredState ( ) `
removed conditional logic for setting margin start in FloatingTaskView . java to simplify the code for better readability and maintainability
added a condition to check if the application is not running and updated the status line setting in NavigationShareTab . java to improve code clarity and ensure
bugfix # 269 , use the threadid directly instead of a hardcoded value
ggb - 2275 fix for ggb - 222 , use default toolbar instead of default toolbar
added NetworkAddressChangeListener interface and updated warning messages in HomekitImpl . java to enhance network address handling and improve logging clarity
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use getLeaseRenewalTime instead of LeaseManager to improve
replaced ` Optional < SourcePath > ` with ` Optional . absent ( ) ` for setting ` arg . prefixHeader ` and ` arg . link
added null check for the exception message in ExceptionHandlerRegistryFactory and added a test for fatal IO handling in ExceptionHandlerRegistryTest to improve robustness
changed the ` nextID ` variable from ` this . nextID ` to ` nextID ` and updated the ` getSize ( ) ` method to
make test more robust by wait for all message to be receive
implemented HasSourcePath interface in AbstractThinArchiveArg , FileListableLinkerInputArg , FileListableLinkerInputArg , and
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify exception handling for better readability and performance
added a custom index field name for " $ tags " in OrdinalMappingAtomicReader and updated related tests in TestOrdinalMappingAtomicReader to enhance
updated the ` toEpochMilli ` method to handle negative seconds and positive nanoseconds correctly to improve handling of negative values in the ` Instant ` class
[ fix ] openglesrenderer . getattribute ( buffertype . name ( ) ) should return the attribute name .
added a boolean variable to track if scripts are blocked in the application to ensure the application does not block scripts when necessary
added a new file TestCMoveLimitType . java to implement a test class for CharBuffer manipulation to ensure correct handling of underflow scenarios in
refactor methods in RecordConfiguration , RecordConfiguration , AudioPacketWaveRecorder , and OverflowableTransferQueue to improve code readability and maintainability
fix for camel - 14263 : camel - sql - parser should use token image for scale token .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java and AudioSystem . java to reflect
refactor console creation and version printing logic in Main . java and VersionCommand . java to improve code organization and maintainability by encapsulating
updated token validation logic in InputStreamBinder and NextcloudRequest classes to use a new hashing algorithm to enhance security by validating the token ' s
added EOFException handling in Http11InputBuffer . java to improve error handling for EOF conditions
added unit tests for deleting members and non - existent groups in DefaultGroupProviderTest . java to ensure that the DefaultGroupProvider correctly handles exceptions
camel - 14263 : remove unnecessary array creation in camel - irc
deleted the V2ReplicationProtocol . java file to the class is no longer needed for the current implementation
updated the ` ImmutableSortedSet ` to use ` SourcePath ` instead of ` BuildRule ` for compilation paths to improve clarity and consistency in handling
added new classes ConstructorArgsDemo , ConstructorArgsDemo , and StrictDemo , and updated the class name from StupidFinal to FinalDemo
[ geot - 6011 ] directtemplatefeaturecollectionfactory : close iterator on close
updated the assertion to check if responseCount is less than 2 * DatabaseDescriptor . getReplicationFactor ( ) to ensure that the responseCount does not
added null check for item index number in ItemRowAdapter . java to avoid potential NullPointerException when accessing item properties
renamed ` areAnchestors ` to ` areAncestorsShown ` and updated related methods in ` Filter ` , ` MapView ` ,
added a check to return early if the application width is less than 12 to prevent errors when the application width is less than 12 characters
updated equality check in ChangeLogParameters and added a new test for handling different properties in H2 inner files to ensure correct comparison of change log parameters
changed loggers from static to final in LogFactory . java to ensure loggers cannot be reassigned after initialization
updated return statement to use ` p . getBasePlot ( false ) ` instead of ` p . getBasePlot ( false ) ` to ensure the
camel - 14263 : camel - rest - server : do n ' t log when the upload directory be create .
added support for sending HTTP status 200 in ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnection classes to enable control over HTTP response
added a check for ` comment . length ( ) > 0 ` before processing a comment to ensure that the comment is not empty before proceeding
added file type management and association removal logic in BuckModule . java to ensure proper handling of file types based on the default file extension extension
replaced specific imports with wildcard imports in the multiply method in ComposedUtil . java to simplify import statements and improve code readability
added error handling for unsupported RTM options in RTMGenericCommandLineOptionTest and improved error messaging in TestUseRTMLockingOptionOnUnsupported
reformatted code for consistency and readability in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added a method to import the ChannelTypeUID class in AbstractModbusOSGiTest . java to facilitate the import of the ChannelTypeUID
corrected the index check for guest - to - host reflective calls in PolyglotExceptionImpl . java to ensure proper index validation for guest
added a reset method to reset the system context in AndroidTestEnvironment and implemented a reset method in ShadowFontsContract to ensure proper context management during
added a method to convert a long to milliseconds in TimeGranularity . java and modified time handling in PinotDataSourceMaxTime . java
added recursive transfer and continue flow analysis in ControlFlow . java to improve control flow analysis to enhance robustness by ensuring proper handling of null final blocks
updated assertion logic and improved error messages in ArrayEqualityAssertTest for better clarity to enhance debugging by providing clearer error messages when arrays do not match
fix a bug in window click logic when the slot item be not a slot item .
corrected the bitwise operation in the index calculation in MeshBuilder . java to ensure correct indexing by removing unnecessary bitwise operations
nifi - 10226 : remove the controllerserviceprovider from standardprocessscheduler
added support for KAPT3 plugin processor properties in KotlincToJarStepFactory and created a test for KotlinLibraryIntegrationTest to
updated RESCROLL _ DELAY value from 750 to PagedView . PAGE _ SNAP _ ANIMATION _ DURATION and simplified conditional
added permission check and refresh shortcuts in Launcher and related classes to ensure shortcuts are only refreshed when the user has the necessary permission
added case HISTORY _ SEARCH _ BACKWARD and HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to
added null check for core name and improved error handling in CoreAdminHandler . java and CoreAdminTest . java to ensure robust handling of null core
added functionality to deselect markers in the NearbyMapFragment to improve user experience by ensuring markers are deselected when needed
added error handling for Throwable in FileSyncAdapter . java to improve error visibility during file sync operations
refactor docker run Java output validation to use OutputAnalyzer for better error handling to improve reliability by catching potential runtime exceptions during docker execution
removed unnecessary lambda expressions from feed processing in FeedQueues . java to improve performance by reducing unnecessary processing during heavy load scenarios
fix npe in defaultdrmsessionmanager when setplayer ( ) be call on the wrong thread .
updated ` AndroidBinaryDescription ` to use ` Locale . US ` for string conversions and added a test for turkish case rules to ensure
changed the MIME type from " text / xml " to " application / xml " across multiple test files to ensure the correct MIME type is used for
updated configuration file initialization to use INSTANCE . confFile instead of INSTANCE . confFile to ensure consistency in configuration handling across the application
updated the waitUntilReadyAndTimeout method call from " sleep 5 " to " exit 1 " in HostPortWaitStrategyTest . java to improve
updated number of distinct values from int to long in HiveExpandDistinctAggregatesRule . java to accommodate larger number of distinct values and ensure correct handling
added headless check for graphical operations in the Toolkit class to ensure proper handling of graphical environments in headless mode
fix ExoflameFurnaceHandler to check if the recipe matches the current world before attempting to smelting the furnace
add option to move thread count when create defaultsolver
fix ( searchbuilder ) : use pathsplitforresourcetype ( restype ) instead of pathsplit ( ) for revinclude ( )
added a new test class ` Issue582Test ` to validate sorting of feature pairs in the map database to ensure that the sorting functionality works correctly
[ native ] improve error message for decimal overflow
refactor LoadingCache class to improve performance to optimize resource usage and reduce memory usage
added a rule to prevent non - constructor methods with class names in the NamingRulesTest to ensure proper handling of non - constructor methods in the naming
simonstewart : handle staleelementreferenceexception in the expectedconditions class
added a method to check if a view exists in the database snapshot generator to improve error handling and provide clearer feedback when a view does not exist
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added translation and full - screen scaling functionality to TaskViewUtils and Utilities classes to enhance user experience by providing visual feedback during task transitions
change the default value of ` FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM ` from ` true ` to ` false `
added a ` walk ` method to ` TempFSTTermsReader ` and updated output handling in ` TempTermOutputs ` to improve arc processing
added SolrQueryRequest parameter to create methods in multiple augmenters to include SolrQueryRequest for improved query handling in Solr
added SQL statements for handling null values and updated test cases in SingleTableMySQLTriggerTest . java to ensure proper handling of null values and validate
refactor comparator assignment in FieldValueHitQueue and TopFieldCollector to use a dedicated setComparator method to improve code clarity and maintainability by central
updated query prefix strings in PhoenixQueryBuilderTest to use double quotes for consistency to improve readability and maintainability of query formatting
added Spark dependency to the init method in RequesterTest . java to ensure proper initialization before proceeding with tests
added methods to retrieve and save total storage pool and limit in DynamicPropertiesStore to improve data management and error handling for storage operations
added support for dev mode streaming file URLs in AssetsController and updated related tests to enhance resource loading functionality and improve error handling during development
updated the key retrieval method in MapMarksManager to use getMapMarkKey ( ) instead of getMapMarkPosition ( ) to ensure the
added a TokenRewriteStream parameter to the getDefaultValue method in BaseSemanticAnalyzer and related classes to enhance the handling of token rewrite streams during default value
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to simplify method signatures
updated file path handling in JxBrowserManager . java and added exception handling in FileUtils . java to improve clarity of log messages and enhance error handling
added AppVersion property retrieval and simplified format checks in IOSImplementation . java to improve code readability and maintainability by using string comparison
[ somfytahoma ] remove the bridgeuid from the debug log message
[ ci ] disable flaky test on github
refactor OpenWireConnectionTimeoutTest to use static constants for trust stores and server and client keystores to improve code readability and maintainability by
updated ` WarnThenDebugLogger ` to include ` nanGaugeWarnThenDebugLogger ` and added handling for NaN values in ` DynatraceExporter
added a call to remove a session ID from the sessionInfo map to ensure that the session ID is properly removed from session information
added host name setting to alerts in HeartBeatHandler and updated alert received listener formatting in AlertReceivedListener to ensure alerts have a valid
refactor the flushing logic in ChannelEndPoint . java to simplify the logic for determining if all buffers are empty to improve code readability and maintain
kmodulexsdtest : fix kie / api / kmodulexsdtest
added a test for seeking a media player in ShadowMediaPlayerTest and modified the seekTo method in ShadowMediaPlayer to enhance media playback functionality and ensure correct
updated method names from ` createTask ` to ` createThrowingTask ` across multiple executor classes to clarify the purpose of the task being created
added a border set for the ` tabCloseButton ` if ` IS _ AQUA _ LAF ` is set to improve the visual appearance of
added HTTP method and timeout settings in TSPTimeStampService . java and modified test assertions in TestSignatureInfo . java to improve HTTP request handling and
added security permission to the xstream . createxstream ( ) method to allow customization of xstreams
added error logging for non - generic class types in Attr . java and created a new class Neg12 . java with a new DiamondRaw class
[ hotfix ] [ table - common ] fix typo in reloptutil
updated the validation conditions for setting ID and value in Http2Settings . java to ensure that the value is greater than or equal to 0 to avoid
deleted the file ` Issue664Test . java ` to remove unused test file to clean up the codebase
removed exception handling for disposingd sessions in SessionsPoolTest . java to ensure proper functionality of session management in disposed sessions
fix geojsonwmsbuilder to use object ( ) instead of object ( ) in geojson
replaced ` setIndex ( int mode ) ` with ` selectedIndex . intValue ( ) ` in ` PopupMenuButton . java ` to improve code
added a method ` canCurrentlyManuallyUnstash ( ) ` to check if the current state can be manually unstashed to
camel - 14263 : camel - jbang - remove the customid attribute from the route coverage check
modified the getEventMismatchMessage method to accept a boolean parameter for better control over event mismatch handling to improve flexibility in event mismatch reporting based on expected count
added a new file ` HeaderFixer . java ` that implements a file processor that handles header files to ensure that the header file is correctly processed
added an ACTION _ FIRST _ LOAD _ COMPLETE constant and updated broadcast logic in Launcher . java and LauncherProvider . java to
deleted the ` SuperJumperAndroid . java ` file to the class was deemed unnecessary for the Android application
update systemtablescan . isDistributed ( ) to return true when table . isDistributed ( ) be false .
removed multiple interfaces KeyValuesProviderAware and ObservationConventionAware from the Observation class to streamline the code by eliminating unused components
add missing item to the processidrematches method so that it do n ' t interfere with the remapping process .
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to return long values instead of additions to ensure correct handling of large integer values in
added caching logic for format string retrieval in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated the URL query in RemoteAuthenticationEndpointTests to include a filter parameter to improve query flexibility by allowing usernames to be filtered
updated condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure proper handling of the
updated the logging method in Launcher . java to include container information to enhance logging functionality for app exit events
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
deleted the deadlocktest . java file to no longer needed for the current codebase
fix npe in bugcontentprovider when marker do n ' t exist .
added an " Reopen in the Browser " menu item and modified print statements in JavaScriptEditor . java to enhance user experience by allowing users to open
added a new error message for specify multiple output times in error messages and improved code readability to enhance error handling and provide clearer context for potential
updated the ` addEntryListener ` method to include a ` EqualPredicate ` parameter to ensure that the ` addEntryListener ` method correctly handles null
fix coordinatearrays . reverse ( ) to return an empty array when the length of the coordinate array be less than 1 .
updated the method call from ` setOpen ( ! isOpen ( ) ` to ` setOpen ( ! isOpen ( ) ) ` to ensure the toolbar
added a boolean variable ` first ` to the variable ` first ` in ` TestPayloads . java ` to initialize the variable ' first ' to
refactor overview mode handling to use showOverviewMode ( true ) method to improve code readability and maintainability
[ java ] set the destination of the message dispatch in networkroutetest to ensure the destination is correctly set for testing purposes
change default return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of message
removed unnecessary parameters from the ` i3 ` variable and modified the ` normalFloatValue ` initialization in ` NestedArithmeticTest . java ` to simplify
replaced pending components with direct components in HttpClientRequestImpl . java and updated buffer handling in HttpTest . java to improve performance and correctness of buffer
updated artifact handling in GetMavenDependenciesTask . java to replace " solr - analysis - " with " solr - " to ensure compatibility with Solr '
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
removed unnecessary print statements in ReferenceUtil . java to streamline code and improve readability
add querytype to visiblefieldpredicate to allow visibility of field .
added support for the ` solidityJsonRpcHttpPort ` and ` solidityNodeHttpJsonRpcEnable ` configuration in multiple classes to allow configuration
added a type check for ` folder ` before removing it from ` mDragController . removeDropTarget ` to ensure that only instances of ` DropTarget
refactor stub jar generation logic into a separate method to improve code readability and maintainability
added new Feature instances for Setup wizard , Probe module , and Workflow helper in StartPageTopComponent . java to enhance functionality and provide users with
do n ' t schedule metered flusher in cassandra daemon . patch by brandonwilliams , review by jbellis
removed unnecessary type casting for Boolean in OnlineTestCase . java to simplify the code and improve readability
change return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to allow retrieval of all users instead of none
refactor onIdleTimeout handling in HttpChannelState . java and add failure listener in HttpChannelTest . java to improve code clarity and ensure proper
modified the CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to simplify the class structure and improve resource management
updated TABLE _ HEADER _ SEPARATOR regex and added a new test for handling one - column head and body in TablesTest to improve parsing accuracy
updated the return value from 32.0f to 31.5f in Camera . java to improve the accuracy of the camera ' s intrinsic values
added a preference for " startonbootup " in GpsSettingsActivity . java and modified return statements in Utilities . java to improve user experience
updated the size of the client secret from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to optimize the storage of the client secret
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to use ParameterRegistration # enablePassingNulls ( true ) instead
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily skip tests due to race conditions
refactor ` getInputPinotFS ` , ` getOutputPinotFS ` , and ` getInputPinotFS ` methods to return ` null `
added locale - specific date formatting logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is applied only to non - English locales
added import for MetalLookAndFeel and set the UIManager ' s look and feel to enhance the user interface by providing a dark mode for the user interface
refactor pingAtRegularIntervals method to improve resource management and ensure proper shutdown of scheduled executors to enhance thread safety and prevent potential memory leak
removed the ` throwable . getMessage ( ) ` parameter from the ` error ` method call in ` GlobalErrorHandler . java ` to streamline error handling
renamed parameter ' module ' to ' from ' in multiple classes for clarity to improve code readability and maintainability by using a more descriptive
catch CmdLineException in PinotAdministrator . java and log the exception
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added ` hashCode ( ) ` methods in ` Subject . java
updated conditional statements and improved readability in CustomPlaybackOverlayFragment and ImageButton classes to enhance code clarity and maintainability by standardizing variable declarations
updated zoom level minimum and maximum values from 10 to 24 in BasicMapViewer . java to improve map display responsiveness and user experience
refactor adminUsers and adminUserGroups initialization to use ImpersonationUtil for process user and group names to improve code readability and maintainability
replaced ` AccessController . class ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider ` , ` WindowsFileSystemProvider ` ,
added ArgumentExtractor support to DelegatedClientAuthenticationAction and updated related classes to enhance argument extraction capabilities in the authentication process
changed the defaultGroup variable from private to final in NacosServerRegisterRepository . java to ensure that the defaultGroup variable cannot be modified after initialization
update tile size changer to use createtilecaches ( ) instead of destroytilecaches ( )
removed redundant calls to ` InfoLayoutHelper . addInfoRow ( mActivity , mGuideInfoRow , false , false ) ` in ` Custom
refactor ` cleanEntriesForFeedsWithoutSubscriptions ` method to use a separate method for managing entries to improve code readability and maintainability
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to streamline
nifi - 10205 : make filebasedclusternodefwtest more resilient to concurrent test failure
conic fonic point : use e1 / e2 / e1 / e2 / e2 / e1 / e2 instead of
reformatted conditional statements in RandomAccessReader . java for improved readability to enhance code clarity and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations in Fields . java and MockitoBeforeTestNGMethod . java
refactor ` createFromImage ` and ` createFromImages ` methods to accept a list of images instead of a single array to improve flexibility and maintainability
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to ensure compatibility with the latest HBase
renamed annotations from ` runtimeVisibleOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in multiple files to improve clarity and consistency in naming
replaced null checks with ` Objects . equals ` in multiple Java files to improve code readability and reduce boilerplate code
refactor resolveclassfromcanonicalname to use binary name instead of canonical name .
added verification for default view configurations in NinjaDefaultTest . java to ensure correct retrieval of HTML view properties in the application
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
updated padding logic in DetailFragment and ListFragment classes and adjusted list view position offsets in ListFragment to improve layout responsiveness and ensure proper
refactor exception handling to use Thread . currentThread ( ) . interrupt ( ) in ZkStateReader . java to improve thread interruption handling and
added null checks for HTTP fields and implemented a test for empty headers to improve validation of HTTP requests and ensure proper handling of undefined header values
cloudstack - 10297 : check if staticnat service be support in the specified network id
added calls to resetHeaderScrollingState ( false ) and setFabVisible ( false ) in OCFileListFragment . java to ensure
added functionality to remove extra empty screens in the workspace to improve user experience by reducing unnecessary screen clutter
added fixedWidth property and modified glyph positioning logic in BitmapFont . java to improve glyph rendering accuracy based on fixed width settings
removed the ` showTitle ` parameter from the ` ChangeLogFragment ` and refactored the ` ChangeLogFragment ` class to utilize a
added preEvent , preTransition , postTransition , and error methods to AbstractStateMachineFactory to enhance state machine functionality for better state management
refactor ConfigDescriptionProvider to improve code structure to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase to support Windows - specific configurations to enhance role
added a boolean variable ` countSorted ` and modified the conditional logic in ` FacetComponent . java ` to improve code readability and maintainability
updated CheckstyleReport . java to utilize overridden properties and set the cache file path dynamically based on the build model ' s configuration
added logic to stop multiple active replicas in DeleteInactiveReplicaTest . java to ensure proper cleanup of active shards and improve error reporting
added a new parameter ` FILE _ NAME ` to the ` newInstance ` method in ` FileActionsDialogFragment ` to allow users to specify a file name
added a constant for INVALID _ DIRECTION and modified conditional checks in CellLayout . java to ensure proper handling of reorder modes and improve code clarity
updated fields in InnerTransferRequest . java and updated path annotations in AccountAPI . java to streamline data structure and improve API versioning
add jobexecutionservice . getexecutionidforjobid ( ) and jobexecutionservice . getexecutionidforjobid ( ) . ( #
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to provide
refactor import statements and implement visitIdentifier method in FindTypes . java to improve code readability and maintainability by using wildcard imports
added action text color to AuthenticatorActivity to improve visibility and aesthetics of action action text
added a new method ` find ` to ` StreamSupplierComponent ` and updated related components to utilize it to enhance functionality for finding entities based on
rename method ` addTestStepsForPickleSteps ` to ` createTestStepsForBeforeHooks ` and ` createTestStepsForAfterHooks `
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests . java `
added a method to cancel a client ' s connection before connecting back in SparkClientImpl . java and implemented a cancelClient method in RpcServer .
added ` getImplicitPreCoercionValue ( ) ` method in ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller `
initialize lastDisplayedUser to an empty Optional to ensure lastDisplayedUser has a default value to avoid null reference issues
added a new method ` findAll ` in ` QueryDslMongoRepository ` to return ordered results for querydsl order specifiers to enhance query
added null checks before calling stop ( ) on SchemaRegionConsensusImpl to avoid potential NullPointerExceptions when stopping the SchemaRegionCons
added a break statement in DefaultPlannerBenchmark . java to exit the warm - up loop in case of failures
added ` xread ` and ` xreadGroup ` methods to ` MultiKeyPipelineBase ` and ` MultiKeyBinaryRedisPipeline ` classes to
refactored LinkedBufferInput and StreamInput classes to improve clarity and consistency to enhance code readability and maintainability
added ` @ EnableWebSecurity ` annotation and updated ` CasWebAppSecurityCustomizer ` to use ` @ EnableWebSecurity ` instead of `
added a new file TestJdbcWithDBTokenStoreNoDoAs . java and created a new class TestJdbcWithDBTokenStoreNoDoAs
added a method to register content providers in ShadowContentResolver and refactored ContentProviderController to handle provider registration to improve content provider management and ensure proper
updated the version parameter from ` Version ` to ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure compatibility with the updated ClassFile version
added keep - alive configuration to SingleConnectionManager to ensure connection remains alive based on configuration settings
[ java ] rename method to be more generic in driver .
added a null check for the current point in DrawLocus . java and modified the conditional check in GBasicStrokeD . java to ensure that
added concurrency support in ChannelEndPoint and improved error handling in WebSocketConnectionD13 and WebSocketGeneratorD13 to enhance thread safety and ensure proper flushing
simonstewart : make selenium . driver configurable and take screenshots from the webdriver .
updated assertions in multiple test files to use assertThat instead of junit to improve readability and maintainability of test assertions
trufflelanguage : remove deprecate getcontextreference ( ) from trufflelanguage .
refactor exception handling in StubberImpl . java and add unit tests for uninstantiable throwables to improve error management and ensure proper
updated condition in Actor . java to return local coordinates and improved error handling in Group . java to ensure that the actor is an ascendant and improve
added location permission handling and dialogs to the getCenter method in LocationPickerActivity to enhance user experience by allowing users to ask for location access and
http : / / issues . apache . org / jira / browse / amq - 4671 - add a countermdb example for the
added import for CookieSpecs and set it in requestConfigBuilder in GetHTTP . java to enable custom cookie handling for HTTP requests
replaced a conditional check for overlaps in the Intersector class to simplify the comparison logic for better readability and maintainability
replaced DeemphasisFilter with NonClippingGain and replaced DeemphasisFilter with NonClippingGain in P25Audio
added a monitoring URL parameter to the ScrollingPanel constructor and modified the ScrollingPanel constructor to include it to enhance user experience by allowing access to
added a config option for the service creation timeout in KubernetesConfigOptions . java to specify the timeout value for the service creation process
added handling for " landmark " , " city " , and " empty " places in NearbyListFragment and NearbyPlaces to
added a null check for the type package before retrieving its package name in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions when type
added a new file PrintInlining . java that prints the result of the printInlining functionality to provide a demonstration of the printInlining
fix ( javadoc ) : handle nested brace in javadoc tag .
[ java ] remove unnecessary assignment of publicationinitialtermid and publicationstarttermid from test .
updated the EdgeDataTableModel to use getEdgesAndMetaEdges instead of graph . getEdges ( ) and setEdges ( ) to improve edge data
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve readability
updated logging messages to use decimal places instead of decimal places to improve readability of log messages for better debugging
added a cluster task to handle room removal events in MUCRoomController to ensure proper handling of room removal events during clustering
updated the ` minimize ` variable from ` replicas ` to ` cores ` in the ` AutoScalingHandlerTest . java ` file to ensure
added key flipping and generating methods to TextureHelper to enhance texture management functionality
refactor projectBuildFileParser to use ` CloseRecordingProjectBuildFileParserDecorator ` instead of ` PythonDslProjectBuildFileParser `
[ j2kt ] add normalizationpass to support normalization pass .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and added a test for delegation in ` Java
[ hotfix ] [ runtime ] remove unnecessary check for free segment in memorymanager
added @ Temporal annotation for Timestamp in ConsoleSessionVO . java to ensure proper handling of timestamp values in database operations
added new files Hbs . java and HbsTest . java to implement Handlebars and provide a template engine for rendering ModelAndViews
added null and empty hint handling in ChatMessageAdapter . java and refactored message initialization logic in ChatMessageAdapter . java to improve UI
[ java ] use values instead of keySet ( ) in importcsv . tostring ( ) .
add a confirm test to ensure that the confirm dialog appear
added a check to return null for distinct column indices in ReduceSinkDeDuplication . java to ensure that the code does not attempt to
refactor MiscUtils to improve file path handling and error logging to enhance code readability and maintainability by using more descriptive variable names
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
updated the package names from " jetty - websocket - server " to " jetty - websocket - client " in TestOSGiUtil . java to
updated return statement to return an unmodifiable map instead of an unmodifiable map to enhance immutability and prevent modifications to the identity attributes
[ scene2d . ui ] do n ' t repaint the header if the saved program be not change
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with ` bytes ` in multiple classes to simplify code and
updated date retrieval from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure accurate
updated class name handling in HtmlJndiTreeReport to include a check for " javax . naming . Context " to ensure compatibility with additional context
updated database options handling in StorageUtils . java and improved logging message formatting in Manager . java to enhance clarity and maintainability of database options management
change edge type from " double " to " mutual " in ImporterGEXF . java to align edge type handling with the new mutual edge
removed the unused FLAG _ SLIPPERY constant from StatusBarTouchController . java to streamline the code by eliminating unnecessary constants
fix for truffleconstantfieldprovider . getarraydimensions ( ) when the field be an array
added a new ` GOOGLE _ DRIVE _ FOLDER _ PATH ` preference and updated ` GoogleDriveJob ` and ` GoogleDrive
added shufflesuggesters ( boolean down ) method to RadioButtonTreeItem and DrawEquationWeb classes to enhance user experience by allowing users to
added @ Nullable annotations to methods and methods in Truth . java to improve null safety and clarity in method signatures
updated the calculation of the new size in ArrayUtil . java to improve the accuracy of size calculations
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check if a ` ctorCanBeInstrumented ` method is
added synchronization to the waitingForAnticompaction map in StreamInManager , StreamInitiateVerbHandler , and StreamOutManager classes to manage
added ` isKeyguardSecure ` and ` setIsKeyguardSecure ` methods to ` ShadowKeyguardManager ` and updated tests in ` Shadow
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization processes
modify the split method to replace ' > ' with ' > ' in the status string and add a conditional check for the number of override parts to
updated the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureException
added a test to verify that the drain handler is not called after closing a file to ensure that the file is not called after the file is closed
updated LIGHTS _ NUM and LIGHT _ INTESITY from 4 to 8 and modified timer settings in HybridLightTest . java to
replaced the use of FakeProjectFilesystem with a direct call to getProjectFileSystem in multiple integration tests to improve code reliability by utilizing the workspace ' s
updated variable types from ` String ` to ` PathWithLines ` in ` RuntimeOptions . java ` and ` CucumberFeature . java `
refactor Gson and JsonArray classes to improve code organization to enhance maintainability and readability of the codebase
removed @ NotNull annotation from TEST _ DIRS and added a comment to the TEST _ DIRS array to address issue 2022 . 1
added a call to close the ParcelFileDescriptor object to ensure proper resource management and prevent memory leaks
refactor prefix index handling in BasisLibrary to use a ThreadLocal for resetting the prefix index to improve thread safety and prevent potential race conditions during
added import statement for LogLevel and annotated HttpConnection with DEBUG logging to enhance debugging capability for HTTP connection
added a call to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that modifications to the list are immutable
added nullability annotations to the onApplicationEvent method in GrpcServerRunner and modified the ManagedChannelBuilder instantiation in GrpcClientBuilder to ensure
refactored code to use Supplier for workDir instead of DefaultParser . Bracket to improve code readability and maintainability
[ gr - 36464 ] ensure that insight . keysunchanged ( ) be call only once per context .
added platform - specific handling for manifest file generation on Windows to ensure consistent line endings for manifest files across different operating systems
fix for rfe3531161 : ignore non null check for non null value
added ` @ Nullable ` annotation to ` getConfigDescription ` methods in ` ConfigDescriptionRegistry ` and modified null checks in ` ThingResource ` to
change masterjobcontext . createcancellationexception to throw runtimeexception instead of throwable
pdfbox - 4071 : initialize the stream if the crop box be not find .
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to provide a debug flag for
refactor FragmentTestUtil to use Robolectric ' s ActivityController for fragment activity creation to improve code maintainability and leverage Robolec
renamed method ` getFileCoordinates ` to ` processFileCoordinates ` and added a method ` getDecimalCoords ` in ` ShareActivity . java ` to
updated class names from ` ABCase1 _ 1 ` to ` TestABCase1 _ 2 ` and ` ABCase4 ` across multiple files
updated the parameter name from ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` method and added a null check for the black
refactor the handling of RocketChangedEventHandler to use a local variable for SimsChanged to improve code readability and maintainability by encap
added a new file ChangeDependencyGroupIdAndArtifactId . java to implement functionality for changing Maven dependency group and artifact IDs to enhance dependency management by
added a check for non - indexable directories in IndexingJob . java and added a check for segment paths in SegmentChecker . java to ensure
updated comparison from ' lt ' to ' lte ' in GCObjectHeapIteratorAddressOrderedList _ V1 . java to correct the logic for
added memoization for replacement paths and pathToSourcePathMap in PreprocessorDelegate . java to improve performance by reducing redundant computations for path replacement and
renamed the class ` JsonExamples ` to ` Examples ` and updated package - info . java to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java for various operations in ViewExtractor . java to improve traceability and debugging capabilities during file operations
refactor FindsByLinkText class to improve code readability to enhance maintainability and facilitate future updates
added a new Main class that prints the java oop entry point to provide a demonstration of the Java oop entry point functionality
[ jain ] fix synchronization issue in operationsetbasicinstantmessipimpl and sipaccountregistrationwizard
removed redundant continue statements in NativeScanner . java to improve code clarity and maintainability
changed the package from ` net . pms . test ` to ` net . pms . configuration ` in ` RendererConfigurationTest . java `
refactor dependency handling in AndroidLibraryDescription to use memoization for better performance to improve performance by caching the results of dependency resolution
replaced stream ( ) . count ( ) with stream ( ) . size ( ) in DistBuildArtifactCacheImpl . java to improve performance by
added charset extraction for content stream metadata in ExtractingDocumentLoader . java to ensure proper handling of character encoding based on content type
cloudstack - 10254 : fix databaseconfig . createaccount ( ) to return null instead of string
added a check to return early if slot is - 1 in PlayerInventory . java to prevent potential errors when slot is not available
add option to ignore transitive repository in maven execution request
removed the @ Inject annotation from ContactsPreferenceActivity . java to streamline the dependency injection process for the BackgroundJobManager
replaced Activity with AppCompatActivity in ColorsActivity . java to ensure compatibility with newer Android support libraries
added null check before closing selection in NIOTransport . java to avoid potential NullPointerException when closing selection
added a check to break if the string index is equal to the string length before proceeding to improve performance by avoiding unnecessary iterations when the matcher is
added server . port = 0 to the @ IntegrationTest annotation in MvcITest . java to configure the server ' s port for the integration test
added a new function ` UDFReverse ` to handle the reverse operator in Hive queries to enable users to perform a reverse operation on input strings
updated method calls to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` for context path retrieval to improve clarity and
refactor Tracer class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase for now
replaced multiple wildcard imports with a wildcard import in XMLChangeLogParserTest . java to simplify import statements and improve code readability
added synchronization and buffer clearing functionality in StarTreeRecordStoreCircularBufferImpl . java and a corresponding test in TestStarTreeRecordStoreCircularBufferImpl
fix ( openweathermaponecallhandler ) : set openweathermaponecallhandler # forecastminutes and # forecasthours and # forecast
updated test timeouts and modified lastFetchTime and previousFetchRequestTime variables in AbstractPageOperationTemplateTest . java to ensure tests have a longer
added functionality to animate all apps content animations in FloatingHeaderView and implemented suggestion mode in FloatingHeaderView to improve user experience by providing smooth
refactor ` parseRerunFile ` method to return a flat stream instead of a collection to improve efficiency and clarity in handling feature rerun files
add some more mana and chisel in the creative tab to make it easy to use them .
updated assertions in TestRadioButtons . java for consistency to improve readability and maintainability of the test code
added a file - sizes option to handle uncompressed and compressed file sizes in RCFileCat . java to enable users to specify the number
refactor multiple classes related to local clustering and triangle listing to improve code organization and maintainability
added checkNDArray methods to check MXNet NDArrays in JnaUtils . java to ensure that the MXNet N
refactor BlobServer class to improve code structure to enhance maintainability and readability of the code
added a new test for the unused private method in UnusedPrivateMethodRuleTest . java to verify that unused private constructors are correctly identified and
reformatted variable names for consistency and clarity to improve code readability and maintainability
added a new test method ` testAutoStartup ` in ` InboundChannelAdapterParserTests . java ` to verify the auto - startup functionality of
added getters and setters for child and item boundables in Node , QuadtreeNode , and AbstractNode classes , and updated STRtree
updated version parsing logic to handle minor and minor digits correctly to ensure correct parsing of version strings for minor and minor versions
added a check for empty tags before adding them to the active item to avoid unnecessary tag addition when there are no tags available
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` , ` DateTimeFunctions ` , and a corresponding test case
hhh - 17100 refactored disassembly method to use a dedicated disassembleForCache method to improve code clarity and maintainability by central
refactor Log4j2ConfiguratorServlet class to improve logging functionality to enhance performance and maintainability of logging functionality
refactored exception handling in StorageBasedAuthorizationProvider to directly return HiveException and AuthorizationException to improve code readability and reduce unnecessary variable declarations
updated the format of the ` CC ` key in ` CGoCompileStep . java ` and added a new ` GoBinaryIntegrationTest . java `
added @ Buildable annotation to CustomResource . java to enable editable builders for the kubernetes API builder
removed the @ Override annotation from the Only class to clean up the code and improve readability
added timeout settings for HTTP connection parameters in HttpClientFactory . java to improve connection handling by allowing more time for timeouts
added a new attribute " nonresolving _ raw _ target _ node _ parse _ pipeline " to PerBuildStateFactoryWithConfigurableAttributes
simonstewart : add support for the ` ` disable ' ' and ` ` enable other ' ' constraint to the selenium server
removed the @ Singleton annotation from the ApplicationController class to ensure that the ApplicationController cannot be instantiated multiple times
updated the username retrieval logic in ShareActivity to check for OwnCloudAccount ' s display name before retrieving the username to improve user experience by providing
added BatchStatus import and a test method for resuming paused jobs in JobLauncherTests to ensure proper job execution handling and testing for paused instances
added null check for cacheConfig before processing parameters in HttpSyncDataService . java and refactored data refresh logic in DataRefreshFactory . java
[ grid ] make dockersession public so that it can be reuse
[ java ] use the default package name in the typesolver .
pdfbox - 4892 : add support for non - sequential pdf parser , a suggest by valerybokov
mahout - 118 : remove unnecessary line break in testdistributedlanczossolver cli
refactor HttpServerTestBase class for improved readability to enhance maintainability and clarity of test cases
phoenix - 4084 change test to use map . getkey ( ) instead of map . entrySet ( )
add support for dynamodbignorenulls in nestedbeanignorenulls
feature - add customization option to redissonautoconfiguration ( regression since 3.16 . 0 )
[ ta4j ] fix the todouble ( ) method of indicator . todouble ( )
added methods to execInContainerWithUser in ContainerState , ExecInContainerPattern , and ExecInContainerPattern classes to enhance functionality to support user
refactored condition checks for interested in byte and text listeners in NettyWebSocket . java to improve clarity and maintainability of the code
add test case for negated attribute in semgrex
added a broadcast intent for the CLEAR _ PULL _ UNREAD feature in HomeFragment . java to enable users to clear the unread unread
removed the conditional check for Gingerbread in TouchImageView . java to simplify the code for better readability and maintainability
added a destroy method to DefaultProfileValidationSupport in BaseDstu21Config and updated related classes to implement a flush method to ensure proper resource management
camel - 16263 : camel - core - do n ' t stop the veto if it ' s not in use .
added functionality to open and close the main FAB and maps menu in ShareActivity to enhance user interaction by allowing navigation to the main FAB and
added InlineParslet support and updated empty list handling in ToDateTokenizer to enhance token parsing capabilities and improve code readability
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated error messages in SVErrorResources for consistency and clarity to improve user understanding by using a more accurate terminology
added a condition to check if the server is checked before binding the operations service to ensure that the operation is only binded when the server is not
updated Position constructor to use getBeginLine ( ) and getBeginColumn ( ) instead of getBeginColumn ( ) and getBeginLine ( )
added ` waitFor ( ) ` methods to ` CxxPreprocessAndCompileStep ` and ` OutputProcessor ` in ` CxxPreprocessAnd
added a new boolean field ` requireAllRepositorySources ` and implemented a new test class ` PrincipalAttributeRepositoryFetcherTests ` in ` CoreAuthenticationUtils
fix memory leak in mapstoreevictiontest ( # 11823 )
added support for SSL protocol configuration in NettyWebServer and related classes to enhance SSL context management by allowing configurable SSL protocols
refactor SetOnce to use AtomicReference instead of AtomicBoolean for atomic operations to improve thread safety and performance in concurrent environments
updated the return statement in QueryDslMongoRepository to handle null property cases to ensure that a default value is returned when no path expression is provided
updated assertNotEqual calls in RoundRectBorderTest . java to remove default border settings and update border equality message in RoundRectBorderTest . java to
[ ibft ] add check for empty genesis configuration before create a new cluster
remove confirmtest . java and remove paralleltest . java
updated CountDownLatch initialization and added validation for the length of the sign array in PrecompiledContracts . java to ensure proper handling of the minimum number of
updated conditional check from ` if ( windows ) ` to ` if ( ! windows ) ` in ` ProcessInformationsPanel . java ` to ensure
refactor the ` MoreCollectors ` class methods for better readability and consistency to improve code readability and maintainability by standardizing method names
added null checks and improved WebSocket client extension handling in BitmexStreamingExchange , BitmexStreamingService , and BitmexManualExample to
added validation checks for latitude and longitude in GeoPointField . java to ensure that invalid latitude and longitude values are handled correctly to prevent runtime errors
updated method names and logic in OozieProxyImpersonator , WorkflowFilesService , WorkflowFilesService , WorkflowFilesService , and WorkflowFiles
refactor ResponderId class to improve code readability to enhance maintainability and facilitate future updates
added a boolean parameter ` withDependents ` to the ` getTableDocument ` method in ` CompactCatalogUtility ` and modified related methods in `
added support for handling consecutive uploads without coordinates in UploadActivity to improve user experience by providing feedback when multiple uploads are submitted without coordinates
added caching functionality for profile data retrieval in ProfileResources . java to improve performance by reducing redundant serialization and deserialization of profile data
refactor property setting logic in JpaMetamodelEntityInformation to improve the handling of nested entity information to enhance the robustness and maintainability of
added index creation and index creation logic in UpgradeUtil and updated method names in ConnectionQueryServicesImpl , ConnectionQueryServicesImpl , and ConnectionQuery
dropwizard : add option to register default exception mappers ( # 1065 )
added a boolean parameter to the method ` storeFieldAction ` in ` EntryEditor . java ` to control the behavior of the ` storeFieldAction
added owner pointer to nativeCreateNSWindow method and updated nativeCreateNSWindow method to include owner pointer to enhance memory management by associating native window
updated SQL table name from ` FILE _ REMOTE _ ID ` to ` FILE _ TABLE _ NAME ` in ` FileContentProvider . java `
added a new tile type " Stock " and updated event handling in the Tile class to support additional tile skin configurations and improve event handling
fixed - rbuckets . get ( ) return null if codec be null ( regression since 3.16 . 0 )
[ java ] add findunrelatedtypesingenericcontainer annotation to typeframemodelingvisitor .
added a BackProgressAnimator class and refactored back animation handling in LauncherBackAnimationController . java to improve the management of back progress animations
removed the ' final ' modifier from the ` _ initialPageNo ` variable and added a check for pageNo before adding a new content limit to
fix bug in crc16 . getcrc16 ( ) and increment totaloperations from 100000000 to 100000000 .
added comment matching functionality to the FormattedSqlChangeLogParser class and a corresponding test case in FormattedSqlChangeLogParserTest to enhance the
use the archiver instance instead of create a new one in maven - maven - plugin
replaced ` HumanReadableException ` with ` BuckUncheckedExecutionException ` in ` DefaultClassUsageFileReader . java ` to provide more specific error handling for
modified conditional checks in TSServiceImpl . java and added multiAggregationTest ( ) method in DaemonTest . java to improve aggregation handling and
added validation for UNSIGNED _ BYTE and RGBA format in GwtGL20 . java to ensure only UNSIGNED _ BYTE and RGBA
updated test method names and modified method invocation in OutputMemoryTest . java and VarDump . java to improve clarity and functionality to enhance debugging capabilities by
added exception handling for unmodifiableClassException in InlineBytecodeGenerator . java to improve error reporting when instrumentation fails for Javac - compiled classes
add trace for class initialization trace by the substrate option
fix typo in basebrokerrequesthandler
refactor TopicRouteService to use Caffeine instead of Google Guava ' s cache implementation to improve performance and maintainability by utilizing a
added a read - only parameter to the createDataSource method in MBTilesDataStoreFactory and modified the connection pool configuration in MBTiles
updated the invalid source target regex pattern in FindBuildToolFailures . java and added a fatal error message in FailureLogAnalyzerTest . java to
updated the URI string construction and added a location intent check in DetailFragment . java to ensure that the location is available before constructing the URI
added a null check for inheritedParameterContexts before collecting referencedIds to avoid potential NullPointerException when accessing inheritedParameterContexts
refactor ClassLoader class to improve code organization to enhance maintainability and readability of the code
added origin response header handling in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure correct handling of origin response headers in the request
added a new ProfileSettingDrawerItem instance to the GpsMainActivity class to enhance the user interface by providing a navigation drawer item
added XML validation handling to multiple classes to enable conditional validation based on the specified attribute to improve XML validation flexibility in the application context
simonstewart : add a test to verify that javascript string handling work as expected
added support for maxRows in IoTDBStatement . java and updated SQL exceptions in IoTDBStatement . java to ensure fetchSize does not
updated method names and logic in SqlStreamTerminator . java to improve clarity and consistency to enhance code readability and maintainability by using more descript
added event handling for node selection and mouse click events in StandardVizEventManager . java to improve user interaction responsiveness when clicking on
refactor memory handling in ManyToOneRingBuffer by introducing a new method ` zeroBuffer ` to improve code readability and maintainability by reducing
refactor xorgroup handling to use memory object instead of instance variable to improve code clarity and maintainability by centralizing xorgroup assignment
removed unused methods ` getHeight ( ) ` , ` getWidth ( ) ` , and ` getHeight ( ) ` from ` LCDUIImageMonochromeBitmap
refactor SourcePathResolver to utilize getPathPrivateImpl and getPathPrivateImpl for improved path resolution to enhance code readability and maintainability by consol
fix ( parser ) : fix bug in xmlparser . encoderesourcetostring ( ) for dstu2
updated the ` changeSchemeIfIsWebSocketUpgrade ` method to include an encoded URL check and modified the URI construction logic to handle encoded URLs to
llvmpaths : move llvm and llvm test suite configs to correct location .
added a new method ` getCxxPlatform ` to retrieve the CxxPlatform from ` BuildTarget ` and ` HaskellBinaryDescriptionArg ` to improve
added imports for ` IndexReader ` , ` IndexReader ` , ` IndexReader ` , ` IndexReader ` , and ` Similarity `
updated the ` peek ` and ` pop ` methods in ` ConcurrentLinkedStack ` and added new test methods in ` ConcurrentLinkedStackTest ` to
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes
added a null check for mDirectories before initializing mDirs to avoid potential NullPointerException when mDirectories is null
added a condition to check if mOverviewStateEnabled and mFirstLayout is not enabled to ensure that gesture handling only occurs when the first layout is
added new package - info . java files for various codec packages to improve organization and clarity of package documentation for the codecs
added localization to the visibleAutoLeveler text in AutoLevelerTopComponent . java to provide user - friendly text for the visible panel
added post - optimization callbacks to DirectUpdateHandler , DirectUpdateHandler2 , and UpdateHandler2 classes , and implemented event listener handling in UpdateHandler
updated decompressor initialization to use a padded byte array and adjusted compression initialization to ensure proper handling of compressed lengths and avoid potential ArrayIndexOutOfBoundsException
removed the check for user _ data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to check if the meta store is a local meta store before retrying retries to ensure retries are only attempted for local metastores
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 490 .
refactor Subject class to improve code readability to enhance maintainability and facilitate future updates
make abstractserializationservice use concurrentreferencehashmap ( referencetype . weak ) instead of concurrentreferencehashmap ( referencetype . weak )
updated color distance calculation and added a new test for finding similar colors in HSSFPalette . java to improve accuracy of color distance calculations and ensure
doc ( regen ) : fix typo in javadoc
simonstewart : fix a bug in the elementfindingtest . java
added a flags parameter to the ` registerReceiver ` method in ` ShadowApplication ` , ` ShadowContextImpl ` , and ` ShadowInstrumentation ` classes
[ hotfix ] [ test ] fix flaky test for ffmpeg
added a previous reference to the input stream in OggInputStream and modified the loop method in OpenALMusic to ensure proper resource management and prevent memory
added a static final constant for the response ' s null status in AssertionResult . java to improve code readability and maintainability by using a defined
[ te ] remove unnecessary check for anomaly failure and anomaly warning
replaced ` Toast . makeText ` with ` showToast ` in ` BaseActivity . java ` and added a new ` showToast `
updated the request creation method in TracingFeignClient to include the request template to enhance request handling by incorporating the request template
added name validation and referral handling in LDAPCertStore . java to improve validation and error handling for LDAP names to enhance robustness and provide clearer
refactor retain logic to use a dedicated retain method to improve code readability and maintainability
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for the ` performItemClick ` method in ` AdapterViewTest `
[ hotfix ] [ test ] remove unnecessary setup in checkpointfailuremanageritcase
deleted the GenericItemUIProvider . java file to the functionality is no longer needed in the project
added a ` selectedObject ` field to the ` SIPCommSelectorBox ` class and updated the ` setSelected ` method to accept a ` Object `
added JUnit ' s Isolated annotation to MetaInfConfigurationTest . java to enable static access to FileSystemPool in tests
set the server connector host to HTTP _ INFO . bindAddress in HttpServer . java to ensure the server connects to the correct bind address for the
added conditional logic to set token validity seconds based on client grant types in DynamicClientRegistrationEndpoint . java to improve flexibility in token management based on heart
added CloverInstrumentationFilter to the TestInterfaceAudienceAnnotations class and modified the Filter usage in SplitLogCounters to enhance class filtering capabilities and improve
added support for Smartmi Evaporative Humidifier in MiIoDevices . java to enable Smartmi Evaporative Hu
fix a few bug in the detection of plausible to break .
changed the visibility of the setScrollRangeDelta method from package - private to public in AllAppsTransitionController . java to allow external access to
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider classes to ensure that Ambari does not manage
updated the condition to check for missing values in the IntHashSet class to simplify the logic for better readability and maintainability
added Serializable interface to RuleAdministratorImpl class to enable serialization support for the RuleAdministrator instance
refactored crossoriginfilter to use a set for allowed origins and timing origin patterns to improve performance and maintain uniqueness of allowed origins
updated G3D test files in BaseG3dHudTest . java and NewModelTest . java to include new g3d files
added error handling for solidifiedPosition in numHashCache . putData and added a check for negative solidifiedPosition in WitnessService . java
hbase - 13315 fix nullpointerexception in execresult and testservercustomprotocol ( pengcheng xiong )
added a method to check user access in the HttpServer class and updated error handling in the HttpServer class to improve security by ensuring only authorized users can access
replaced the method ` writeTo ` with ` getByteSource . getStubClassBytes ` in ` ClassMirror . java ` and refactored the stub
added functionality to display the internal link text based on the file type to improve user experience by providing clearer link text based on file type
updated assertions in PredictionTest . java to use Locale . ENGLISH instead of String . format to ensure consistent formatting across different locales
change condition from ` = = ` to ` ! = ` for SATURDAY ` in ` ModelZooTest . java ` to improve
removed the ` hideIme ` method and updated its implementation in ` AllAppsContainerView ` and ` LauncherAllAppsContainerView
add inmemory event storage engine to eventhandlingtest and sagaconfigurationtest
refactor BsdFileStore and BsdNativeDispatcher classes to improve path handling and resource management to enhance code readability and maintainability
add test case for issue # 1599 ( fixes # 1599 )
added a new command ` ` x , y , z ' ' , and ` ` z ' ' in the ` spawnCommand ` class to enhance
added a new constant for minimum content dimensions and refactored content area width calculation to improve code readability and maintainability by centralizing content area
make graph . copy ( ) final and add debug scope to test .
updated the directory instantiation to use a mock directory to ensure compatibility with Windows environments
added pluginCheckClassNames to pluginChecks in UpgradeCatalog280 . java and modified addColumnsToUpgradeTable method in UpgradeCatalog2
refactor Environment class to improve code organization to enhance maintainability and readability of the code
added import statement for LuceneTestCase and a BadApple annotation in RecoveryAfterSoftCommitTest . java to address issue SOLR - 7421 related
updated home concatenation logic in CodenameOneImplementation . java and removed warning handling in HashtableContent . java to improve code clarity and reduce unnecessary warning messages
updated FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AU
updated import statements and modified resource accessor initialization in LiquibaseEntityResolver . java and XMLChangeLogSAXParser . java to improve resource handling and
added security property for " jdk . tls . disabledAlgorithms " in ComHostnameVerifier , JavaxHostnameVerifier , and JavaxHostnameVerifier to
updated the Immutable annotation in AbstractCxxDeps and changed the EMPTY constant from CxxDeps . EMPTY to CxxDeps . of ( ) to
renamed ` expectedDirectory ` and ` actualDirectory ` to ` actualStubDirectory ` for clarity and consistency to improve code readability and maintainability by
updated the ` resizeThreshold ` annotation in ` Int2ObjectHashMap . java ` to improve code readability and maintainability
updated folder name suggestion logic to handle empty folder names to improve user experience by providing clearer hints when the title is empty
updated the client ID parameter in UaaResetPasswordServiceTests to include " uaa " in the loadClientByClientId method calls to ensure
changed access modifiers of these methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated logging statements in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to handle isClosed cases to improve error logging clarity and prevent potential null
refactor MimetypeIconUtil to improve code structure to enhance maintainability and readability of the code
rename method names from " supportsViewFor " to " supportsViewsFor " across multiple view provider classes to improve consistency and clarity in naming conventions
added a new test for negated instanceof in UnnecessaryParenthesesTest . java and updated the logic in Unnecessary
added a new boolean flag ` built ` and ` o ` to the ` Location ` class and implemented a teleport method for the ` Location `
replaced Base64 encoding methods with Base64Utils for encoding strings in TokenKeyEndpoint and related tests to enhance security by preventing URL - safe encoding issues
refactor TranslatorManagerHelper to use ProjectComponent instead of Statistics . onGenerate for statistics reporting to improve code organization and enhance statistics reporting functionality
rename the interface ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and specificity of the annotation ' s purpose
added a null check for the result in the getId ( ) method to ensure that the getId ( ) method returns a non - null value to prevent
refactor the setUpRevampedTweet method to handle muffled tweets more effectively to improve code clarity and ensure correct behavior when retweet
updated UserProfileActivity to conditionally display verified text based on theme settings to ensure verified text displays correctly based on the application ' s theme settings
[ abucoins ] remove static instance variable from abucoinsdigest .
camel - 14284 : add autowired metadata to mongodbcomponent so it can be autowired .
added a ` sourceIndex ` parameter to the ` AttributeMapping ` class and updated related classes to utilize it to improve attribute mapping functionality by allowing
added error handling for CORRUPTED _ COLUMN _ STATISTICS in SemiTransactionalHiveMetastore . java to improve
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to check if security is enabled in
refactor ConnectivityReceiver , TerminalKeyListener , and EastAsianWidth classes to improve code organization and maintainability
geoserver home page : do n ' t escape email in geoserver email
fix ( modulemanager ) : enrich module reflections with subsystems in terasology engine
added a check for the number of features in the JoinModeller class to ensure that the number of features is consistent across the model
check for non - empty command string in algebraprocessor to avoid nullpointerexception
[ hotfix ] make singlenodekafkarestartstrategy debug log non - trace .
replaced hardcoded ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat . ACTION _ SET _ PLAYBACK _ SP
added functionality to set auto - separation settings in MotorMountHandler , MotorMountHandler , and IgnitionEvent classes to improve handling of launch stages
tika - 351 : fix issue where ascii name length should be greater than or equal to the unicode length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as non - deterministic on JDK
refactor MavenDependencyResolver to use a dedicated createLockFile method to improve code readability and maintainability by centralizing lock file creation logic
updated version checks to include new sync intervals for " 5 3 " and " 5 3 _ 3 " to enhance user experience by providing more responsive
added a check to return null for FEDERATION _ USER in AuthenticationManager . java to prevent unauthorized access to FEDERATION _ USER
ignore truffleobject in executemethodnode if it be not an instance of truffleobject .
removed the ` @ Disabled ` annotation from ` JakartaClientShutdownWithServerWebAppTest ` and ` JakartaWebSocketShutdownWithServerWebAppTest
add filterattachable to logbackvalve so that it do n ' t fail if the filter chain be deny .
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed the import of ` org . apache . lucene . util . Version ` from ` CreateIndexTask . java ` to clean up the code and
added logic to handle missing primary key changes in OracleDatabase , AbstractDb2Database , and AbstractDb2Database to ensure correct schema settings are applied
added MetastoreException to the ` execute ` method and updated exception handling in ` MsckOperation . java ` and ` MsckTest . java
[ hotfix ] [ kafka ] retry committransactions in kafkacommitter
[ rocketmq ] remove receipt handle from forwardmessagetodlqactivity when it ' s not need .
added a service list to DockerComposeContainer and a corresponding test case in DockerComposeServiceTest to improve flexibility in service configuration and ensure proper testing of
[ recaf ] copy class entry set to avoid concurrentmodificationexception
removed unnecessary HtmlCleaner imports and simplified XML processing in FeedParser . java to improve code readability and reduce unnecessary complexity
removed conditional check for ` mAppsCustomizeContent . DISABLE _ ALL _ APPS ` in ` Launcher . java ` and updated
changed the data type of these fields from int to double in MeterRealtimeBodyDataDTO . java to ensure precision in calculations by using double
added a new file ` bug4150029 . java ` that implements a application that manages a temporary directory to ensure the BackSpace keyboard does not
added a boolean field ` isSparkConfigUpdated ` and its getter and setter methods in ` HiveConf ` , ` SparkClient ` , and
added a ` getLongPressIndicator ( ) ` method to ` AppIcon ` , ` AppIconMenuItem ` , and ` Launchable ` classes to
added check for empty polygons in WKBWriter and updated test methods in WKBWriterTest to improve handling of empty polygons and enhance test
refactor UnflavoredBuildTarget to use a builder pattern for building unflavored targets to improve code readability and maintainability by
added a new file ` MultiplyByMaxInt . java ` implementing a method to calculate the maximum value of an integer multiple times to provide functionality
added functionality to enable drawer indicator based on the current file ' s state to improve user experience by ensuring the drawer indicator is enabled when the current file
updated package structure and import statements in TestRAMDirectory . java to improve organization and clarity of the code structure
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify code and improve performance
drools - 3550 dmn evaluator compiler : add a message for no expression define for name on node
updated annotations to use ` @ Repeatable ( AC ) ` instead of ` @ ContainedBy ( AC ) ` in multiple test files to improve
updated console message formatting in AbstractController . java to include the send duration in milliseconds to enhance clarity of the output for better user understanding of file sending
added package access validation in OpenMBeanAttributeInfoSupport . java to ensure proper package access verification during class loading
patch by jbellis ; review by gdusbabek for cassandra - 151
added a calculation for freeSize in StoreDirect . java to adjust freeSize based on the size of the input stream
refactor touch event handling in ` AnyKeyboardView ` and ` AnyKeyboardViewBase ` classes to include a ` MotionEvent ` parameter to enhance touch
hbase - 25836 addendum fix for sslcontextfactory . server ( # 2540 )
removed the PrivilegedSocket class and refactored connection initialization in PG _ Stream . java to simplify the code and improve readability by eliminating unnecessary
refactor InputTest class for improved readability to enhance maintainability and ease of understanding for future developers
added support for pause blur functionality in DepthController and updated method signatures in AbsSwipeUpHandler to improve user experience by controlling blur behavior during animations
added null check for the current location marker before adding it to the map to prevent potential NullPointerException when the current location marker is not found
updated the method to retrieve client details instead of a client ID to improve accuracy in secret removal by associating clients with their details
updated SQL query formatting and test initialization in SqlSourceBuilderTest . java to improve readability and maintainability of the test code
fix for http : / / issues . apache . org / activemq / browse / amq - 2835 - add timeout to wait for the
added a new test method ` testKeys ` to ` SlidingGanttCategoryDatasetTest . java ` to verify the handling of keys in
[ type : refactor ] fix npe in shenyuTrieRuleListener and shenyutrichesyncdataservice
[ lightcontrol ] use cloner instead of spatial . getworldtranslation ( ) for light .
updated the conditional checks for ` _ hideStacks ` in ` StdErrLog . java ` to ensure that ` stacks ` is not null
added null check for ApplicationContext in HttpSessionEventPublisher to ensure ApplicationContext is not null to prevent NullPointerExceptions during event publishing
removed semantic exception for CREATE CQ statement change from v0 . 14 to ensure compatibility with the latest syntax changes in CREATE CQ statement
[ hotfix ] [ iotdb ] fix typo in iotdbsink javadocs
canonicalizer : add a counter for the custom simplifiable node in the canonicalization phase
updated the fileIcon setImageDrawable method to include the context parameter to ensure the correct context is used for icon rendering
updated indexOrConstraintName assignment to use schema . getName ( ) instead of schema . getName ( ) to ensure compatibility with schema naming conventions
[ beam - 12233 ] fix bigquery table row iterator with time field ( # 12265 )
added ` findViewWithTag ` method to ` ShadowView ` , ` ShadowViewGroup ` , and corresponding unit tests in ` ViewTest `
pdfbox - 3017 : use generic instead of type inference in for - each loop
updated import statements in IndexTool , IndexToolForDeleteBeforeRebuildIT , and MetaDataClient classes to improve code clarity and reduce unnecessary dependencies
added constants for JSON value and JSON creator in DocAnnotationConstants . java and modified the value retrieval logic in JavaClassUtil . java to improve clarity and
svm : fix classpath file not be a jar
updated CUDA _ R _ 16F and CUDA _ C _ 8I to CUDA _ R _ 32F and
added FileFilter to the ResourceLoader class to filter resources based on layout directories to improve resource loading flexibility for different layout configurations
refactorRedstoneTorch to use SimpleAttachableMaterialData for retrieving attached faces to improve type safety and maintainability of the code
[ hotfix ] [ table - common ] add support for varbinary in reltostageconverter
removed unused import of DateHelper in NoteAdapter . java to clean up the code and improve readability
added support for saving and restoring backups in the Backup class to improve user experience by providing clearer feedback on backup loading failures
ggb - 260 fixed positioning of simple panel in web
simplify file creation and deletion logic in ShadowParcelFileDescriptor . java to improve code readability and maintainability
replaced ` offer ( ) ` with ` addFirst ( ) ` in ` StackBasedSecurityContextHolderStrategy . java ` to ensure proper ordering of security
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to improve clarity and specificity of the rule
added unit tests for xor neutral and symbolic reference in IntegerEqualsCanonicalizerTest . java and updated IntegerEqualsNode . java to
removed the static final STRING _ ARRAY constant from TypeFactory . java to simplify the code and improve maintainability
refactor hideIme method to use a dedicated method for hiding the IME window to improve code readability and maintainability by centralizing the
fix bit density issue in blockstatecontainer # setbits ( int )
updated assertions in TimelineMetricCacheSizingTest and TimelineMetricCachePrecisionUpdates classes to improve readability and maintainability of test code
add a patch for the texture size calculation in Minecraft . java to improve performance by reducing unnecessary texture size calculations
[ java ] : fix typo in trystoplogrecording ( ) call .
added a condition to reset startPosn when the transformation is in progress to ensure correct positioning when the transformation is in progress
refactor ` isStarTreeDisabled ` method to use ` QueryContext . isSkipStarTree ( ) ` instead of ` StarTreeUtils .
added a ` lockNearbyView ` variable and modified related methods in ` NearbyActivity ` to improve clarity and control over nearby places refresh
added methods for creating MapTransformer instances using ImmutableBiMap and ImmutableBiMap in MapTransformer . java to enhance the functionality and flexibility of map transformation
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for loading launcher widget span information in the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to improve widget management and accessibility in the launcher
updated imports and method signatures in StageSelector and StageAction classes to implement StateChangeListener instead of ChangeEvent to improve compatibility with Openrocket ' s
added methods to manage and reset the calling process IDs and process UIDs in ShadowBinder to enable testing and resetting of the Binder ' s
updated the ` ExpectationFailure ` class to use ` Objects . equals ` and ` Objects . equals ` for message and cause fields to
added a warning log for deserializing messages without support in BitcoinSerializer to provide users with the option to deserializing messages without support
[ fix ] imagereplacedelement . resize ( ) do n ' t work when there be no target .
added handling for special characters in Markdown output in CoreMarkdownNodeRenderer , MarkdownWriter , and SpecMarkdownRendererTest to ensure proper rendering of HTML entities
added a new button ` setPassword ` to the ` SharePasswordDialogFragment ` class and refactored password handling logic to improve clarity and maintainability
refactor file channel method retrieval to use a dedicated class for better encapsulation to improve code maintainability and reduce boilerplate code
changed access modifiers from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to enhance encap
added new options for setting default keytab settings for Slider AM keytab on HDFS to enhance keytab configuration flexibility for better user experience
updated the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation control in ` ExtractionModelFrame ` to
added functionality to manage shortcut binding in the LauncherModel class to ensure shortcuts are added only when the loader is running to optimize performance by avoiding
refactor NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator classes to improve clarity and enforce immutability of the
added a new parameter ` type ` to the ` add ` methods in ` IssueInterface ` , ` ValidationReport ` , and updated the ` Validation
added a method to safe provider name retrieval in RSAClientKeyExchange . java to improve error handling and debugging output for cipher provider retrieval
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration
change log level from WARNING to OFF in CCJSqlParserUtil . java to improve logging clarity by reducing log verbosity
remove duplicate code in AggregateLifeCycle . java to streamline output formatting for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static to public static in DefaultMapScaleBar . java to allow
added a @ Ignore annotation to the CovariantOverrideTest class to enable the implementation of the covariant override functionality
refactor curly and curly methods to use a new Qtype method to improve code readability and maintainability by reducing redundancy
camel - 14263 : camel - spring - boot - spring - boot support for xml resource . thanks to daniel .
added space minimum and maximum settings for the X - axis in ScatterChart . java to improve visual spacing of scatter data in the chart
updated string concatenation for consistency in SQL syntax to improve readability and maintainability of the code
implement the ` shouldPreserveDataStateOnReapply ` method in ` SplitScreenSelectState ` , ` RecentsView ` , and ` State
added error handling for missing UTF8 key in CheckEncodingPropertiesFile . java to ensure that a valid UTF8 key is provided to avoid runtime errors
lucene - 3995 : fix testreproducemessage and add random value to test .
added long - pressed event logging for AllApps items in StatsLogManager to enhance user interaction tracking for AllApps items
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null log
added a null check for the preset property in the showSectorLandInfo condition to ensure that sector laser information is displayed only when preset is not
updated type casting from ` CompositeType ` to ` CompositeType < ? > ` across multiple classes to enhance type safety and eliminate unchecked warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
added a randomSelection parameter to the ` buildNearbyRandom ` method in ` NearbySelectionConfig ` and ` NearbyValueSelector
remove temporarycache . removescheduledexecutorservice . shutdown ( )
do n ' t hide layer import container if storeinfo be not a storeinfo
set the default value of Availability _ availability to UNAVAILABLE in ContextHandler . java to ensure the Availability _ availability is set to unava
updated synchronization logic in FetchInvDataMsgHandler and modified PBFTCommitMessage processing across multiple classes to improve synchronization handling and ensure correct epoch retrieval
fix ( regen ) : update phishingprotectionservicev1beta1stubsettings to use no _ retry _ 1 _ code (
changed the type of ` _ freeSpaceReclaimDisabled ` and ` _ freeSpaceReclaimQ ` from ` boolean ` to ` int `
changed visibility of constants from public to static in KDCOptions and added a new KDCDefaultOptions class to enhance encapsulation and improve
updated the initialization of the writer variable in Json . java to ensure that the writer is properly initialized before use to prevent potential null pointer exceptions
reformatted code for consistency and readability in ProfilePager . java to improve code readability and maintainability
renamed the paintBackground method from ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in
added a new method ` valueFromClassConstant ` to retrieve object value constants from a class constant to improve property validation for object value constants in the
camel - 14263 : camel - kafka : log error when initialize kafka service
updated the RESOURCES _ TO _ ALWAYS _ ACQUIRE set to include " usr / share / zoneinfo / tzdata " to
do n ' t auto - create channel if it ' s a default output channel .
added keywords property handling in HTMLDocument and implemented a test for index keywords in TestDemo to enhance document indexing functionality and ensure correct behavior with keywords
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added a conditional check for ` _ addresses ` before adding to ` _ addresses ` in ` MemcachedSessionDataMapFactory . java ` to ensure that
replaced the instantiation of ` CorrespondenceSubclassToFactoryCall ` with a direct reference to ` CorrespondenceSubclassToFactoryCall ` to improve
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
make isbntobibtex fetcher work with ebook . de instead of manas . tungare . name
increase keepalivetime to 10 second for polyglot and polyglot limit
added null check for text before fireDataChanged and adjusted cursor position handling to prevent potential NullPointerExceptions when text is null
add option to simplify the model , so that it can be use by rnnutils
trim whitespace from the line in SuffixURLFilter . java to ensure consistent formatting by removing leading and trailing whitespace
added a check to return early if the player is inGodmode to prevent further actions when the player is in Godmode mode
ggb - 2275 checkbox and text dialog should register / unregister the popup only if the flag be enable .
removed the maximumSize parameter from the LinkedHashMapCache constructor and modified constructor parameters in several classes to simplify constructor parameters and improve code readability
removed unnecessary ` _ channel . close ( ) ` calls from ` ChannelEndPoint . java ` to improve code readability and maintainability
added null check for keyIndex in FixAcidKeyIndex and refactored KeyIndexBuilder initialization in multiple classes to improve validation logic and
updated exception handling to use Locale . ROOT in DirectUpdateHandler2 . java to ensure consistent exception reporting across different locales
make storecheckguard optional in writenode . setstorecheckguard ( ) .
do n ' t check if exceptiondispatchblock . handle . startbci and handler . getjsrentryblock . handle . endb
add getclassificationdisagreement ( ) method to dbcloud so it can be use in test .
replaced ` BuildTarget . copyOf ( ) ` with ` BuildTarget . copyOf ( buildTarget ) ` in multiple classes to simplify the code and improve
refactor SqlRunner class for improved readability to enhance maintainability and ease of understanding for future developers
changed the type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and modified the
updated the implementation of ` knownSdks ` to use ` Set < Sdk > ` instead of ` SortedMap < Integer , Sdk > `
replace progress indicator with confidenceprogressindicator in createofferview
updated user agent header from " Cling / " to " UMS / " in RequestHandlerV2 and modified UPNPService initialization in UP
add a forceiterate parameter to blockbuilder . iteratebpt ( ) to allow bpt to be set to false if it do n ' t
added view type constants for message and noflex view in CrowdfundingChatAdapter . java to improve code readability and maintainability by using
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL . java
make sure sbar and sbar do n ' t fail if the root do n ' t exist .
removed the canvas parameter from the insert and insert methods in TexturePacker . java and updated image handling in TexturePacker . java to simplify image
refactor RefactorModule to use a default method for applying source visitors to improve code readability and maintainability by consolidating refactoring
added methods to retrieve child elements by name and recursive name in Xml . java to improve functionality for retrieving and retrieving child elements by name and name
updated the Content - Charset header in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of UTF - 8 in HTTP requests
added SystemUiControllerFlags annotation and modified UI state updates in TaskThumbnailView and AllAppsTransitionController to enhance UI state management by integ
removed the private ClientConfigurationService field from the IntrospectingTokenService class to streamline the code by eliminating unnecessary dependencies
updated the exception message in HiveRecordSet . java to include additional context to improve debugging by providing more context about the error encountered during the Hive split
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unnecessary field
corrected the spelling of " BackupSnapshotAferTakingSnapshot " to " BackupSnapshotAfterTakingSnapshot " in the configuration
added score calculation to the merge method in TextFragment . java to ensure the score does not exceed the score when merging text fragments
removed the private Digester field from Md4PasswordEncoder . java to improve encapsulation and maintainability of the code
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure that maximumUnimprovedStep
added a check to return early if no currently opened editors are available to optimize performance by avoiding unnecessary processing when no editors are open
added methods to verify mocks in BDDMockito . java and corresponding tests in BDDMockitoTest . java to enhance mock verification functionality
updated the classloader retrieval from ` Thread . currentThread ( ) . getContextClassLoader ( ) ` to ` PathScanner . class . getClassLoader ( ) ` to
added a check for the type of codeFirst in CodeFirstPojoClientIntf and modified the ` sayHi2 ` method in ` CodeFirst
add log to abstractsplitbrainprotectiontest to make it easy to run abstractsplitbrainprotectiontest
added null checks for logoutConfigurer in DefaultLoginPageConfigurer and updated related tests in ServerHttpSecurity to ensure logout functionality is only added when logout is
do n ' t use degree ( ) in gbasis ( ) .
added log consumer functionality to DockerComposeContainer and created a new test class DockerComposeLogConsumerTest to enhance log handling and improve testability of Docker
updated the type parameter of the testMapping method in StandardJavaTypeMappingTest . java to improve type safety and clarity in the method signature
removed unused imports from AmbariMetaInfoTest . java to streamline the code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a convenient way to create a ` ThrowingSupplier `
replaced a break statement with a return statement in ConsoleActivity . java to ensure the method returns a boolean value as expected
camel - 14263 : camel - platform - http : handle buffer body in response . end ( buffer )
added platform - specific path separator handling in MorePaths and updated related tests in CopyStep and AarWithLibsIntegrationTest to ensure compatibility with Windows
added a null check for ` authorizationContext . getParams ( ) ` before processing parameters to avoid potential NullPointerExceptions when ` authorizationContext . getParameters
added a new method ` throwExceptionIfFail ( ) ` to handle exceptions when loading a library to improve error handling by throwing an exception if the
updated SDK version from " 4611349 " to " 4514284 " and added tests for stopping the text to speech functionality to ensure
[ log4j2 - 1342 ] queuetransactionlog . getitemid and queuelogkey . getname ( ) do n ' t
added support for enabling SQL without profiles in JdbcEnvironmentProperties and JdbcEnvironmentRepository classes to improve environment configuration flexibility
added a try - finally block around the write method in ConnectHandler . java to ensure the data is set to null after writing to improve resource management
fix ambiguity in modloadingstage # createcreateregiments ( )
updated date formatting from ` date ` to ` calendar ` in ` DateUtils . java ` and removed the assertion in ` FontParsersTest .
updated the ` loadValue ` method to use ` super . getThreadInfo ( ) ` instead of ` threadMXBean . getAllThreadIds ( )
added a ` prevTlogOnPrecommit ` property and modified the sleep duration in ` LeaderTragicEventTest ` to improve transaction handling
updated the version of FastAsyncWorldEdit in BukkitPlatform . java to use the latest version of the FastAsyncWorldEdit library
added null check for outputDirectory and modified file existence checks in SegmentGeneratorConfig . java to ensure the output directory is created if it does not exist
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored normal calculation in ` TriangulationHelper ` to
updated the ` find ` method to include ` IdentityZoneHolder . get ( ) . getId ( ) ` in the ` JdbcAuditService ` class
refactor SpanCollector class to improve code organization to enhance maintainability and readability of the code
added a null check for the current session before accessing its info to prevent potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class to improve transaction isolation handling to enhance performance and reliability of transaction management
updated method names from " printLVgroups " to " printLogicalVolumegroups " for consistency to improve code readability and maintainability
added thread name logging for the current thread in TestSession . java to improve debugging and traceability of the current thread
refactor CookieManager class to improve code readability to enhance maintainability and facilitate future updates
simplified the return statement in LauncherExtension . java to improve code readability and efficiency
added a new OverviewToAllAppsTouchController to the list of OverviewToAllAppsTouchController to enhance user experience by providing
refactor hotseat scaling and translation handling in LauncherState and WorkspaceStateTransitionAnimation classes to improve code clarity and maintainability by consolidating
added a check for JUnitRule in DefaultStackTraceCleaner . java and a corresponding test in StackTraceFilterTest . java to ensure only relevant elements
[ java ] refactored buffer handling in MappedResizeableBuffer . java for improved clarity and efficiency to enhance code readability and maintainability
added a ` balanceListener ` variable and updated its usage in ` DepositListItem . java ` to improve code clarity and maintainability by encaps
added conditional logic to convert color values based on the edge mode in RealisticRenderer . java to ensure correct color conversion based on the edge mode for
added null check for httpClientResponse in HttpClientBeanPostProcessor and removed redundant LogFactory calls in multiple test files to improve code readability and reduce unnecessary logging
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 420 .
refactor condition checks for last playback time in FullDetailsActivity . java to improve readability and maintainability of the code
spanishxmltreereader : add a method to check if a node have an elliptic lemma
added a condition to clear the language if the item value is empty in InstallItem . java to ensure that the item is cleared when the value is
updated the ` ReactiveLoadBalancerClientFilter ` to correctly override the scheme based on the server ' s secure status to ensure the client correctly overrides the
do n ' t duplicate the bytebuffer in batchdispatchrequest so it do n ' t create a duplicate .
make nativeimagedebuginfoprovider . fullfilepathfromclass non - final to allow override
replaced the custom Correspondence class with a lambda expression in ShadowBackupManagerTest . java to improve code readability and reduce boilerplate
rename ` isUSLangSupported ` to ` isNonENLocales ` and update related references from ` USLocales ` to ` EN
simplify null check for redeemData in LocalTransactionSigner . java to improve code readability and maintainability
add a new client class to make it easy to render block in the forge client .
added a return statement in TxCacheDB . java to prevent premature termination of the method execution
updated import statements from ` com . sun . xml . internal . ws ` to ` jdk . internal . org ` in ` BoundMethodHandle .
refactor FastDictionary class to improve performance to optimize data processing efficiency
do n ' t close the iosession if it ' s already close . jm - 133
updated FlightEvent instances to include new TUMBLE and SIMULATION _ END values and modified epsilon logic in FlightEventsTest . java to
chore : move protobuf from v1p0 to v1p0 in favor of v1p0 .
updated the method to use ` newElement ` instead of ` target ` for adding namespace declarations to ensure the namespace declaration is added to the correct element
instructor : add courseid to the profile picture link in the instructor feedback result page
added a shortRules list and modified rules initialization in DefaultPasswordValidator to allow alphabetic and numeric sequences in long passwords to enhance password validation flexibility
simonstewart : add a command to capture screenshot to string in the selenium server
removed the JUnit @ Test annotation from ProxyClassSerializationTest . java to clean up the code and improve readability
updated parameters in DLNAMediaInfo . java to use " thumbnailRatio " instead of " thumbnailRatio " to improve clarity and maintainability of
[ gr - 32266 ] remove speculativeguardmovementphase from test .
added a condition to check if ` AUTHENTICATION _ MANAGER ` is not aliased in ` AuthenticationManagerBeanDefinitionParser ` to ensure
updated ForwardedRequestCustomizer to handle both host and server attributes correctly to improve flexibility in handling different forwarded server configurations
added a call to sb . setLength ( 0 ) in ConsoleReader . java to reset the string buffer to avoid potential null pointer exceptions
changed visibility of allowedRoles and disallowedRoles from private to protected in RolesInterceptor . java to allow subclass access to these lists for better ext
updated OpenIDE Module - Specification - Version constants and versions in the project to ensure compatibility with the latest versions of the Module - Specification
hbase - 26386 add support for hbase . server . netty . tls . wrapsize in x509util and hbasenettyrpcserver
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to use JUnit assertions instead of JUnit ' s TestCase and add new test cases for tokenization to improve test
added validation for the protocol binding in OpenSamlAuthenticationRequestFactory and created a corresponding test class to ensure that the protocol binding is validated for authentication requests
refactor DepthController to use AttachedSurfaceControl for transaction handling to improve code clarity and ensure proper rendering of surface controls
updated version handling in AsciidoctorConventions to use " 2.1 . x " instead of " main " to ensure compatibility with the latest version
updated permissions from WRITE to CREATE in AccessController . java for prePrepareBulkLoad and preCleanupBulkLoad to ensure data integrity by using a
[ iotdb - 4071 ] fix unseqmergelist list index out of range in tsfilemanagement
camel - 14263 : camel - file - converter should convert to inputstream instead of file .
added a ` login ` parameter to the ` DefaultShardManager ` and modified the ` build ` method in ` ShardManagerBuilder ` to allow login
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " in AbstractRegisteredService . java
added a conditional check before retrieving the response completion in HttpSender . java to ensure that the response is only processed if it is marked as completed
added a condition to check if the student is a user student before comparing the giver team in the feedback response logic to ensure correct handling of student
added security checks and modified color space handling in BMPImageReader . java to enhance security by restricting access to linked profiles based on system properties
updated the calculation of simple bubbles in ClassicPlotManager . java to correct the width and height parameters to ensure proper rendering of plots with appropriate
[ java ] wait for the file check in the open tool to wait for the file check .
refactor grid size handling in StdGridFragment to use a separate method for setting grid sizes to improve code readability and maintainability by reducing
change return values from false to true in ContributionsListFragment . java to correct the logic for determining the contribution status
added a new test skip range test and modified filtering logic in DistinctPrefixFilterIT . java and BaseResultIterators . java to enhance filtering
added unit tests for the CheckboxGroup property in PDButtonTest . java to ensure correct behavior of checkbox properties in the acrobat form
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to provide functionality for retrieving the last modified timestamp of a file
added a condition to check for " metaTable " in table properties in HiveIcebergStorageHandler . java to ensure proper handling of metadata tables
refactor cash deposit form to use a combobox for select the default currency
catch Throwable instead of IOException in WriteFlusher . java to handle a broader range of error scenarios
added a boolean variable ` mStartedEnterAnimation ` and modified animation logic in ` IconRecentsView . java ` to improve control over animation state
added a new property ` activeKeyId ` to the UaaConfiguration class to track the active key ID for better key management
updated action definitions and method signatures in ` SendMailActions . java ` and ` SendMailActions . java ` to improve clarity and organization of action
changed the ` isActive ` variable from private to volatile to ensure visibility of changes to the ` isActive ` variable across multiple threads
remove isdesc ( ) and isacc ( ) from orderbyexpressioncontext # getorderedby ( )
fix classcastexception when use stringbuilder . append ( )
added a check for the ` OWNCLOUD _ APP _ NAME ` in ` DisplayUtils . java ` to ensure that the application name
hbase - 26486 make sure rootdir permission be set in hbase . rootdir . perms for kerberos and restart master
updated the method call from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in ` JakartaServletWebExchange .
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
updated state format handling in ` CollectionsHandler . java ` and ` ExternalCollectionsTest . java ` to use ` String ` instead of ` int
refactor logging statements in CentralAuthenticationServiceImpl . java for clarity and consistency to improve code readability and maintainability
pdfbox - 4892 : include illegalargumentexception in the exception check , a suggest by valerybokov
updated condition in AbstractFileResourceSet . java to improve code readability to enhance code clarity and maintainability
[ mng - 4975 ] align file path to base directory when find a plugin parameter .
[ beam - 10297 ] move protobuf coder to protobuf extension package .
updated JpaQueryParsingToken to include a boolean parameter and added a new test for handling signed numeric literals in HqlQueryRendererTests to
updated the ` generateLaunchLugFromSAeroRailGuide ` method to include a ` parentLength ` parameter and adjusted the instance count and separation
added a method ` getNonceFactory ( ) ` to the ` BitmexStreamingExchange ` class to provide a default implementation for the nonce factory
camel - 14263 : camel - jbang - use placeholder instead of string concatenation .
[ java ] make driver conductor test more robust .
changed initializeLoadedClasses from true to false in ScanSpec . java to disable loading of loaded classes in the application
added focus handling to the search field in FullTextSearchPanel to improve user experience by ensuring the search field is properly focused
refactor NIO parameters initialization in TlsConnectionLogging . java to improve code readability and maintainability
updated assertions in StatementTest . java to check for the return value of getDouble ( 4 ) to ensure the test accurately reflects the expected behavior of the
updated assertions in TestSolrConfigHandler to include server base URL to improve clarity of error messages for better debugging
replaced ` MockServerHttpRequest ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests . java ` to
updated the string construction for density handling in FilterResourcesStep . java to improve clarity and maintainability of the code
refactor button UI ID handling to use a custom element prefix for better clarity to improve maintainability and readability of the code
removed densityDpi check from the rotation condition in RecentsAnimationDeviceState . java to simplify the condition for rotation based on densityDpi and
added two new files TestCloneArrayWithDifferentLengthConstness and TestArrayCopyWithLargeObjectAlignment , and TestArrayCopyWithLargeObjectAlignment
added import for LuceneTestCase and annotation for SOLR - 6157 in ReplicationFactorTest . java to indicate that the test is awaiting a fix for
fixed - npe in rexecutorservice . schedule ( ) and rscheduledservice . schedule ( ) method return null if nextstartdate be null
simplified the condition for determining if credentials need to be updated in FileDownloader and FileUploader classes to improve code readability and maintainability by reducing
added null check for StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
( chore ) camel - net : replace get ( ) and get ( ) with getOrDefault ( ) . doubleValue ( ) . doubleValue ( )
added nonce parameter to token claims in TokenMvcMockTests . java to ensure that the nonce is correctly retrieved from the token claims
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
set the width and height of the layer layer layer layer layer layer layer layer layer layer layer layer layer layer layer layer layer layer layer layer layer layer
updated import statements and added a method to calculate the maximum height based on the owner ' s height to improve code clarity and ensure proper height calculation for
added a boolean variable ` connected ` and modified the ` openDatabase ( ) ` method to return a boolean indicating whether the database connection has been opened
updated DockerCommand execution to use Platform . DOCKER _ COMMAND instead of a static final string to improve code maintainability by centralizing platform
added a null check for the input stream before initializing the initializeParameters method in TestIsartorValidationFromClasspath . java to improve robustness by
added a new color attribute and modified the drawLeaveBehind method in TaskbarView and CellLayout classes to allow customization of the folder
added a method to report compatibility issues with Canary versions of Android Studio to improve error handling for compatibility issues with Canary versions of Android Studio
do n ' t log an error if an invalid identityproxy table name be find .
added modulePersistEnable and modulePersistDisable lists to the StartArgs class to ensure proper handling of module persist settings during command execution
updated argument validation and error message formatting in GeminiMarketDataService . java to ensure correct handling of arguments and improve clarity in error reporting
replace HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure consistent iteration order of questions in the flow scope
[ java ] add unit test to make sure we do n ' t have to commit the response .
updated exclusions in AuthCheckFilter to include specific setup files to improve configuration management by excluding specific setup files
refactor runnable execution logic to use a separate method for sorting to improve code readability and maintainability by encapsulating logic in a separate
updated method signatures in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and ` CommandRunner ` to accept a variable number of arguments to
refactor character reading logic in XMLParser . java to improve readability to enhance code clarity and prevent potential null pointer exceptions
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address issues with overflow pages
updated the pivot positioning of the arrow based on the icon state to ensure the arrow is positioned correctly based on the icon ' s position
( chore ) camel - bibtex : remove unused printstacktrace
updated the updateThumbnail method to include a refreshView parameter to enhance thumbnail updates based on the refresh state to improve user experience by allowing thumbnail updates
pdfbox - 4071 : use class . getName ( ) instead of org . apache . pdfbox . extractttffonts .
added validation for InternetAddress in HostnameFormatSpecifier and updated validation logic in EmailFormatSpecifier and HostnameFormatSpecifier to ensure that the hostname is
replaced instances of ` AuthenticatorActivity . this ` with ` this ` across multiple activities for consistency to improve code readability and maintainability by standard
refactor SizeBasedDocIdSet and related classes to improve document ID handling to enhance code clarity and maintainability by using descriptive variable names
added methods to prompt to open files with specified filenames in FileDialoger and FilePanelEntry classes to enhance file selection functionality by allowing users to specify
updated widget span and min widget span values in AppsCustomizePagedView and modified page count updates in AppsCustomizePagedView
refactor FlightConfiguration to improve handling of FinSet , AxialStage , and PodSet instances to improve the accuracy of component bounds and transform
[ micrometer ] fix typo in micrometer message history test
updated DateTimeFormatter initialization to use Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3941 ] allow to filter out hidden metadata in rest object converter .
added a new test method ` testMissingRequired ` to ` TestStarTreeConfig ` to ensure that the ` StarTreeConfig ` builder correctly handles
camel - 14284 : camel - spring - dsl - add support for dynamic and static recipient list
refactor InlineLayoutBox and HoverListener classes to improve layout handling and repaint behavior to enhance code readability and maintainability while ensuring proper repaint
refactor AuthenticatorActivity to utilize the OperationsService for authentication method detection and service binding to improve code organization and maintainability by encaps
