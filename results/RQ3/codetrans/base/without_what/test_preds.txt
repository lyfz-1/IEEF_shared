[ java ] set the remote host and port on the socketappender so it can be reuse .
refactor header handling in BasicAuthPlugin by extracting it into a separate method to improve code readability and maintainability by reducing duplication
removed unnecessary call to RecordDescriptor . msgLengthOffset in ManyToOneRingBuffer . java to streamline code by eliminating unnecessary dependency on RecordDescriptor
cloudstack - 7702 : do n ' t use float for cpu / ram / ram overcommit ratio if there be no detail on
added flags field and getFlags method to ShadowPaint class and updated related tests to support anti - alias functionality in the paint class
updated the title of MassSetFieldsDialog to use a localized string to improve user experience by providing more descriptive titles
make test more robust for eclipse project
do n ' t use the realm ' s nonce if the realm do n ' t have a scheme
added a new interface ` RemoteInputListener ` and implemented the ` onConnected ` and ` onDisconnected ` methods in ` RemoteInput ` to allow
reformatted conditional statements in OrcEncodedDataReader . java for improved readability to enhance code clarity and maintainability
updated filtering condition in HomeConnectBridgeHandler to check if the thing is enabled before processing to ensure that only enabled items are processed in the handler
added null check before calling removeAll and addPolicies methods in AuthorizeAdminServlet . java to avoid potential NullPointerExceptions when bs is null
replaced ` isEqualTo ` with ` matches ` for JSON formatting in ` DefaultTypeAdaptersTest . java ` and ` ObjectTest . java ` to
added JSON serialization and logging for DAG information in TezTask . java to enhance debugging capabilities by providing context and description for the DAG
added methods to retrieve and store heap time in HprofHeap . java and updated ComputedSummary . java to utilize this new method to improve
updated upload count retrieval method in ContributionsActivity and removed RxJava2Tasks class from ApacheHttpClientMediaWikiApi to streamline code and
removed unnecessary conditional checks for database lock mode in MVTable . java to simplify locking logic and improve code readability
[ issue # 625 ] fix max message size calculation in defaultmessagestore
added a check to log a warning if a folder is not open when it is not marked as open to improve debugging by preventing null pointer exceptions when
added a test method to verify sorting of PGProperty names in ascending order to ensure proper ordering of PGProperty names in ascending order
added a constant for HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in Common . java to provide a description
changed the parameter type of ` supportsDrop ` and ` getUninstallTarget ` from ` Object ` to ` ItemInfo ` to improve type safety and
updated assertion in RequestBuilderTest to check for message equality instead of hasMessage to improve clarity and accuracy of error messages in tests
replace " RetainedFragment " with " NearbyListFragment " and update related constants and methods to improve clarity and consistency in fragment management
renamed the parameter from ' status ' to ' sessionStatus ' in the FlatProfileContainerFree constructor to improve clarity by using a more descriptive
added a new column ` send _ zero _ anomaly _ email ` to the ` EmailConfiguration ` class and updated the ` EmailReportJob
[ hotfix ] [ kafka ] fix open method call in kafkaconsumerbase
added methods to retrieve users and geofences from the database to enhance data retrieval capabilities for users and geofences
added a constructor to BlockingResponseListener that accepts a maximum size of 2 MB to enhance flexibility in handling large requests
update mcastservice . memberbroadcastsreceived to handle byte [ ] instead of channeldata [ ]
[ hotfix ] [ runtime ] fix resource leak in multileaderserverimpl
updated URL formatting in assertions in LoginSAMLAuthenticationFailureHandlerTest . java to ensure consistent formatting and consistency in URL formatting
refactor ConfigMetadataProviderTest . java for improved readability to enhance maintainability and facilitate future updates
updated imports in ListFragment . java and SnoozeActivity . java to improve code clarity and consistency to enhance code readability and maintainability by
added a private static class AcceptAllFilter and refactored directory stream filtering in Files . java and WindowsDirectoryStream . java to improve code
refactor JdbcTestDataSet class for improved readability to enhance maintainability and clarity of the codebase
throw noclassdeffounderror instead of noclassdeffounderror when class not find .
added DockerImageName validation and corresponding test cases in GenericContainer and DockerImageNameTest classes to ensure valid Docker image names and improve error handling for
updated login error messages to use " wrong _ credentials " instead of " username " and " password " to provide a more descriptive error message
added autofocus functionality to multiple form classes to enhance user experience by allowing dynamic focus changes
added unit tests for SAML configuration and zone properties in SamlIDPRefreshMockMvcTests . java to ensure proper functionality and validation of SAML configuration
add list handling for non - empty or non - empty lists in ComparableVersion . java and update test cases in ComparableVersionTest . java to ensure
updated mode settings and return values in Sheet . java and added padding and margin properties in UIManager . java to ensure that preferred dimensions do not exceed
refactor Robolectric test and test classes to move ParallelUniverse to the internal package to improve organization and organization of ParallelUniverse functionality within the
refactor constructor invocation in LocalCacheFactory and NodeFactory to use a new FACTORY _ CALL variable to improve code readability and maintainability
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in the FrillsAndFills class to
added functionality to draw self - loops in the ProcessingPreview class to enhance the visual representation of self - loops in the graph
updated configurations from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOL
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in naming conventions
set the drag handle indicator ' s translation Y value to zero in AllAppsTransitionController . java to ensure proper positioning of the drag handle
remove log statement that do n ' t need to be print out
updated the configuration for pushing filters down in the operator tree during query optimization to provide clearer guidance on how filters are pushed down during query optimization
added an assumption to skip ScanningAppProviderRuntimeUpdatesTest on non - OSX builds to address issues with finding itself in non - OS
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser to enhance compatibility with Jetty ALPN
act - 132 : fix npe when try to update process instance lock time in asynchronous mode
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
replaced @ CustomFieldBehavior with @ ExcludeFromRuleKey in GenruleBuildable . java to exclude Genrule execution from rule key caching to
simonstewart : make the firefox custom profile launcher work on window
phoenix - 4892 avoid duplicate entry in columnfamilytodynamiccolumnsmapping ( addendum )
[ hotfix ] [ runtime ] fix checkstyle violation in flink - core
added logic to retrieve derived columns and indexes from a table if the client version is less than MIN _ SPLITTABLE _ SYSTEM _ CATA
update student cascade when a student be add to the course
replaced the import of TestCellReference from org . apache . poi . xssf . util with org . apache . poi . ss
added a block hardness check to the block ' s hardness condition in the LensPiston . java file to ensure block hardness
added a new file LongPointerPressTest3049 . java to implement a test case for long pointer press functionality to ensure proper handling of network errors
truffle : remove the use of trufflefunctioninlining from partialevaluator .
refactor conditional statements to use a ternary operator for improved readability in BaseBuilder , XMLConfigBuilder , and XMLConfigBuilder classes to
modified the indentation condition in ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to ensure correct rendering of deeply indent
added a new abstract abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to remove duplicate class definitions to improve code organization and
disable webflux test until github issue 1070 be fix
remove use of jsinterop ' s nativestring . tojsstring ( ) in testcaselogger
updated the closing brace formatting in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the format is a video before executing the conditional statement to ensure that video formats are only processed when the format is a
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS verification for improved security
cloudstack - 5223 : do n ' t allow to create vms in zone - controlled environment
updated logging statements in Driver and QueryResultsCache to include cache entry details to improve traceability and debugging by providing more context in log messages
add an option to skip update the model after manage dependency
added a test for ` lastIntentSenderRequest ` and implemented intent sending functionality in ` ShadowActivity ` and ` ShadowPendingIntent ` to ensure proper
refactor RocketFigure3d to utilize GraphicsConfiguration for enabling and disabling FBOs and improve graphics configuration handling to enhance performance
add dispose method to accounthandler and hydrawisecontrollerhandler to ensure thread safety
solr - 9893 : disable testcoreadminapis on java 9 because EasyMock do n ' t work with java 9
updated year calculation in TimestampUtils and refactored date formatting in SetObject310Test to improve date handling and ensure accurate local time representation
do n ' t attempt to disconnect a jabber connection if it ' s already close .
added " cur _ ws _ commit _ id " to the list of commit IDs in TxnHandler . java to ensure consistency in naming convention
replaced ByteChunk with ByteBuffer for buffer management in BufferedInputFilter to improve memory efficiency and handle BufferOverflowException more effectively
added a new method ` toSync ` in ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to convert asynchronous tasks to
added ` ActionGraphBuilder ` import and updated method parameters across multiple compiler factory classes to utilize the new ` ActionGraphBuilder ` functionality across multiple
simonstewart : add a test for hidden file upload
removed redundant try - catch block for creating tables in SQLManager . java to streamline code and improve error handling during table creation
added a check to return the local maven directory if the file does not exist to ensure that the local maven directory is returned when the file does not
ggb - 2121 hide the hidden label if the new label start with the hidden prefix
fix : if ctelementimpl . getmetadata ( ) return null , return null instead
replaced ` setFlags ( ) ` with ` addFlag ( ) ` in ` DefaultTrackOutput . java ` to ensure buffer flags are properly added
added a check to ensure the cached entity is not sorted by ID before proceeding with the reordering logic to avoid unnecessary reordering when the cache
updated error message from " not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to provide clearer
added a null check for the backupFolder before logging its details to avoid potential NullPointerExceptions when accessing the backup folder
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the creation of an array using ` java . lang . reflect . Array `
added @ AddToRuleKey annotation to the toolType field in ClangCompiler . java and GccCompiler . java to indicate that these fields
replaced hardcoded timeout value with a constant PINCODE _ TIMEOUT to improve readability and maintainability of the code
add issampled ( ) method that always return true .
removed the @ Ignore annotation from multiple test classes to enable the test to run without a specific mongodb server requirement
( chore ) camel - jms : fix the test error of consumeuncompressedcompressedmessagetest
updated the condition to check if the mdTable is an artistic table instead of a generic name to improve clarity and correctness of the code logic
modified file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
refactor session attribute handling in MongoSessionManager to improve clarity and consistency to enhance code readability and maintainability by standardizing attribute naming conventions
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java ` to
refactor the handling of the CountDownLatch to use a local variable for the stopping flag to improve code readability and prevent potential null pointer exceptions
removed unnecessary whitespace in the method signature of HuobiStreamingService . java to improve code readability and maintainability
camel - 14136 : camel - history - use system . currenttimemillis ( ) instead of stopwatch ( ) in defaultmessagehistory
[ hotfix ] [ test ] fix flaky test delayedmonopublishertest
modify assertion to check if the error is an instance of WebSocketHandshakeException before proceeding to improve error handling by throwing an AssertionError when the error is
added implementation of View . OnLayoutChangeListener to AllAppsTransitionController to enhance the functionality of the AllAppsTransitionController
rename variable ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability by using a more descriptive variable name
int - 1736 : xpathrouter parser now set the default output channel if it ' s not set .
updated cacheSeconds from an integer to a DurationCapable string and modified related configurations in MessageBundleProperties and CasCoreWebConfiguration to allow
update openapi version from 3.0 . 0 - rc1 to 3.0 . 0 in multiple Java files to ensure compatibility with the latest API version and improve code
removed the call to append ( buffer , true ) in ByteBufferPool . java to streamline buffer appending logic for improved performance
added a check for the existence of the " alt - rt . jar " jar in the boot class path to skip tests if it ' s detected
updated username and email handling in JdbcScimUserProvisioningTests . java to ensure consistency and correct email representation for users
replaced ` Arrays . asList ` with ` ArrayList ` for command - line options and modified the return statement in ` FlightRecorderProfiler . java ` to
add isstreamempty ( ) method to webcaminputpanel and check for null in webcaminputdialog
added a condition to check if the content view does not exist in the HttpParser and implemented a chunked put test in ProxyServletTest to ensure
[ hotfix ] fix typo in atmosendpoint javadoc
added additional method checks for " printf " and " print " in Java2TypeScriptAdapter . java to enhance functionality to support additional method names
added a new test class ` TestCapacityUntilGCWrapAround ` and native methods for managing ` metaspaceCapacityUntilGC ` to ensure proper
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added logic to update the endTime based on the start time of the resource to ensure the endTime is calculated correctly when the start time is calculated
added unit test base on user forum issue
[ fix ] [ icc ] do n ' t throw iioexception on invalid icc single chunk sequence .
use itemstack . getitemstate ( ) instead of y - world . getsealevel ( ) - > y - world . gets
added conditional registration for Config and Environment classes in JoobyModule and SpringModule classes to ensure beans are registered only when the Environment class is not
do n ' t use getparentclassloader ( ) in favor of getparentclassloader ( ) . getparentclassloader ( )
[ jmeter ] add support for additional nameupdater . properties file .
added initialization of the ` started ` variable in ` EllipsoidRegionSelector . java ` to track the state of the ellipsoid
updated URLs from " http " to " https " in JavaSEPort . java to utilize a secure protocol instead of a hardcoded
wms : validate sortby attribute in wfs getfeature request to avoid npe
changed the condition for determining the grantor variable from ` . equals ( null ) ` to ` = = null ` to ensure proper handling of null
added graphics configuration and updated image creation logic in DiagramGenerationTest . java to ensure compatibility with the expected and compatible images are processed correctly
throw a RuntimeException if the sidedDelegate is null in FMLCommonHandler . java to ensure proper error handling when the Minecraft class is not
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
fix flaky test locktest . testislocked ( )
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for tokenizing and joining tokens to improve tokenization functionality and
use response . senderror ( ) instead of setstatus ( ) and setresponse ( ) to return true .
refactor command parsing logic and improve command highlighting logic in SystemHighlighter . java to enhance readability and maintainability of command highlighting logic
update version to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING " to reflect a new snapshot version and prepare for
updated buffer position assignment to use dimensionSize instead of idx to ensure correct buffer position based on the specified dimension size
added support for IDragAndDrop functionality in multiple classes to enhance drag - and - drop functionality in the application
[ java ] add assume for socket and securesocketappendersocketoptionstest . testsockettrafficclass ( ) .
added a new cipher suite " PSK - AES256 - GCM - SHA384 + TLSv1.3 " to the TestCipher class to
updated the method to retrieve the long description from the place object to ensure accurate display of the place ' s long description
added ` @ JsonProperty ( " value " ) ` annotation to ` ScimGroupMember ` class to enable JSON serialization of the ` value ` property
refactor HqlQueryRenderer to process reserved words and add schema scoping tests for function names to enhance query functionality and ensure proper schema s
[ hotfix ] [ runtime ] fix checkstyle violation in subscriptionhelper
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
updated the ` offsetStreamIndex ` method signature to include a ` indexStartsAtOne ` parameter and adjusted its logic accordingly to enhance functionality by
updated byte array conversion logic and modified MIME type assertions for various files to improve code readability and maintainability
[ hotfix ] [ table - planner - blink ] remove unused method from flinkoperatortable # getmonolinguality
added inheritance inheritance support to the OneTimeTokenAccount and OneTimeTokenAccount classes to enhance the functionality and maintainability of the OneTimeTokenAccount
added a condition to check if the assistant is not launched when flinging to ensure proper handling of touch events when the assistant is not launched
added a new file SolarisShortDSA . java that generates a DSA signature using a DSAPrivateKey to test the use of a DSA key
added toggleSearchLabel ( false ) method call to ListFragment . java to toggle search label functionality in the application
cloudstack - 5253 : lock volume before create a snapshot in snapshotmanagerimpl . java
changed the implementation of the ` mConnection ` variable to a ` DetailsServiceConnection ` class and added a null check before unbinding it to improve
refactor SSLPeerUnverifiedException handling in HttpClientTLSTest to use AtomicReference for error handling to improve clarity and maintainability of exception handling in the
removed the equals method from ConjunctionScorer . java to streamline the comparison logic for better readability and maintainability
added a null check for the item before binding to prevent potential null pointer exceptions during item binding operations
make cpmemberaddremovetest more flaky by commit the group id
updated cache size calculation to use a consistent desired size and added logging for full cache shrink operations to improve cache management efficiency and ensure proper logging when the
updated API version from v2 to v3 and modified related methods in CryptoFacilities classes to ensure compatibility with newer API versions and
added a method ` empty ( ) ` to check if the size is zero in ` freenect2 ` to provide a way to check if
added optional handling for page data retrieval in AsyncPageReader and created a new test for empty dict pages in TestDrillParquetReader to ensure
updated argument handling and validation in SerumStreamingService . java to improve input validation and ensure correct subscription type is provided
add a config option to disable the charge animation when an item be charge on top of a mana pool
[ java ] make cluster node restart test more tolerant to timeout exception .
[ hotfix ] [ runtime ] log exception in waithelper . waitfor ( )
replace filesystem . ensuredirexists ( wackyDir ) with JUnit . assumeTrue ( dir . mkdirs ( ) ) for directory creation to
removed duplicate calls to ` openScreenStyle ( ) ` and ` dialogStylesScss ( ) ` in ` ResourcesInjectorFull . java ` to
refactor ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` for change log
replace direct field access with getter methods in BlockWorldVector . java to improve code readability and maintainability by using getter methods
removed unnecessary TODO comments and made CacheEntry fields final in LongConcurrentLRUMap . java to improve code readability and enforce immutability for better
added regex escaping for resource configuration in ReflectionProcessor . java to ensure proper handling of string literals in resource configuration
updated FileCredentialsCache to retrieve the KRB5CCNAME environment variable and modified EmptyCC to accept command - line arguments for the credentials cache to
updated the database path in ValidateMultiSignContractTest . java from " output _ PrecompiledContracts _ test " to " output _ ValidateMulti
make sure we do n ' t wait a very long for the peer count of the eth peer , so we do n ' t have to
[ java ] fix checkstyle violation in webdriverservlet . java
do n ' t expand ' AreEqual [ segment [ x , y ] , segment [ z , y ] ] ' format expression for geo segment
added a check to clear pending rendering operations if the application is minimized and is minimized to ensure that rendering operations are only cleared when the application
added a condition to check if the deadline has passed before sleeping in HazelcastTestSupport . java to ensure that sleepMillis is only executed when the
fix the writebehind writedelay time window bug in imap . writebehind ( )
added a line to set the icon to null in GroupTreeCellRenderer to prevent unnecessary icons from being displayed
updated testRedirectMatches methods to set strict match default and non - strict to improve clarity and functionality of redirect resolution tests
added new imports and refactored test methods in ShutdownMonitor and ShutdownMonitorTest classes to improve code organization and enhance test coverage for
optimize randomaccessstore . writechunks ( ) by use 2 instead of 1
refactor field retrieval to use a more descriptive variable name and add a new readFields method to improve code readability and maintainability by
[ hotfix ] [ runtime ] use futureutils . ortimeout for componentcloseutils
server : destroy volume when the vm be in error state
server : fix findbugs warn in cloudstack - api - java . util . vlan _ address _ field _ for _ ipv6 _ address
rename ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeUserDetailsBeanManagerConfigurer ` and ` InitializeUserDetailsBeanManagerConfigurer
increased the timeout duration from 15000 to 30000 in the getLeaderRetry method call to allow more time for the leader to recover after a certain
refactor error message handling to remove the parameter name parameter from the error message methods across multiple parameter classes to simplify error message formatting and improve readability
updated drawing coordinates in URLImage . java from positive to negative coordinates to correct positioning of images in the graphical context
update condition check from ` solrDocument1 ` to ` solrDocument2 ` in SolrTestCaseJ4 . java to ensure accurate comparison of field names
removed exception handling for IndexOutOfBoundsException and added a method to check if an item is zero high card dimension to improve code readability and maintainability
[ hotfix ] [ stream ] add exception to streamtaskexception
refactor tag processing logic in Preprocess . java to improve readability and efficiency to enhance code maintainability and reduce duplication
reformatted the read method in MessagePack . java for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a mechanism for specifying a default value
do n ' t encode empty ` ` { } ' ' extension list in jsonparser
allow external meta to be use in the library manager , so that external meta do n ' t break the build .
added alias " node _ popup _ scripting " to the menu entry in ScriptingMenuEntryVisitor . java to enhance the menu entry functionality for script
updated constants and logic for task visibility in OverviewActionsView and RecentsView to improve clarity and functionality of task visibility based on device profile settings
camel - 13636 : camel - jms - use getout ( ) instead of getout ( ) in camel - jms
removed unnecessary ` throws IOException ` declarations from multiple Java files to improve code readability and maintainability
deleted deprecated classes AbstractDelegatedVerb and FailureContext to remove obsolete code to streamline the codebase
updated GzipHandlerTest to use ` final ` modifier for string literals and added a new MicroServlet class for handling micro - encoded content to
[ java ] use backpressureutils . getandaddrequest ( consumercapacity , n ) instead of consumercapacity . getandadd ( consumercapacity
added logging functionality and refactored code formatting in SpeedmentImpl . java to enhance debugging capabilities and improve code readability
[ ds - 241 ] load config from servlet context if it be set .
updated matcher logic in StoreScanner . java and modified test cases in TestWideScanner . java to improve handling of null values and enhance test reliability
camel - 14146 : camel - test - infra - enable jmx by default
replaced hardcoded ' / ' with a constant for the canonical package separator to improve code readability and maintainability by using a consistent constant
added YARN binary search functionality and app ID printing functionality to HiveConf and RemoteSparkJobMonitor classes to enhance application status reporting for YARN
added support for " maria " database names in DbConnectionManager to enhance database connection handling for Maria Maria databases
[ hotfix ] [ runtime ] fix log message format in splitlogmanager
added a new file ` ExecuteAndReturnStringTest . java ` that implements a UI test for handling network errors to ensure that the application correctly handles
added a new file InvokespecialInterface . java implementing an interface and dynamic method to demonstrate the invocation of a specific method in a dynamic interface
refactor EvictingBoundedList class for improved performance to enhance performance and maintainability of the code
do n ' t use edge base dir if turn cost support be enable .
added a null check for backgroundDisabled and improved selection validation in SelectBox . java to ensure proper handling of selection values and prevent illegal argument exceptions
hbase - 20254 rpcserver . getmetadata ( ) should throw unsupportedoperationexception instead of nullpointerexception
updated the calculation of hotseatCellSize and hotseatIconCenter in TaskbarViewController . java to improve layout spacing and ensure proper icon centering
updated the logic for constructing the ` valString ` variable from ` values . get ( partitionColumnIndex ) ` to ` values . get (
add versioned interface to namedtaskdecorator and taskdefinition to avoid serialization issue
updated the directory retrieval method from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
changed the ` equal ` variable from ` false ` to ` true ` and updated the comparison logic to ensure that the comparison logic correctly determines if the
update unicodetolatexformatter to handle high codepoints correctly .
added handling for ISO control characters in OAIDCCrosswalk . java and updated dcv . value assignment in Item . java to ensure proper handling
simonstewart : do n ' t select the last frame of the selenium server if it ' s the last one .
added a clear button to the DataBrowser and modified the BookmarksPanel to check if the name does not match the BOOKMARKFILE _
refactor OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for constructing the base URL to improve code readability and maintainability by utilizing
updated date assertions and assertions in SoftAssertionsTest . java to use parseDatetime instead of java . sql . Date to improve accuracy of date comparison
modified the ` adaptOrders ` method to include a ` reverse ` parameter for better order handling to allow for a reverse ordering of orders based on
added null and position checks for variable type in PrettyPrinter and created a new Java11Var class with a test method to ensure proper handling of null
simonstewart : remove unused import , a suggest by valerybokov
updated Configuration initialization to use a default value of false and removed redundant configuration check to simplify configuration initialization and improve logging clarity
removed the call to drawChildren from the draw method in WidgetGroup . java to simplify the method signature for better readability and maintainability
added unit test base on user forum issue
remove the use of system . getproperty ( globals . catalina . base _ prop ) and use the engine . getcatalina
added tests for determining the best date time pattern for " jmm " in the ShadowICUTest class and modified the ShadowICU class to
updated the ` object ` map size and added new color values to the ` PlotSquared ` class to enhance the visual representation of color codes and improve
added ZuulProperties support to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance configuration flexibility by allowing ZuulProperties to be
tika - 436 -- add test for tika - font - metadata in tika - core
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use ` getBuildTime ( ) ` instead
updated the calculation of ` xDist ` in ` PagedView . java ` to use ` Math . abs ` instead of ` Math . abs
remove guirwtester since it ' s no longer use
removed nullability annotations from method parameters in LazyMessage and StandardSubjectBuilder classes to simplify code and improve readability
updated the error message format in TestStream . java to include a placeholder to improve readability of the error message for better debugging
thymeleaf - templateparser : move abstractmarkuptemplateparser and abstracthtmltemplateparser to org . thymeleaf . templateparser .
added a new test method ` testXPathString ` in ` XPathTest . java ` to validate the evaluation of a string using ` XPathFactory ` to
added @ Nullable annotation import in FutureUtils . java to indicate that the field can be null to improve code robustness by preventing null pointer exceptions
add warn when dynamicinvokeexpr be not resolve during call - graph construction
updated email addresses from " @ gmail . com " to " @ example . com " in ContextTest . java to align with the new email
updated HTTP response formatting in HttpConnectionTest . java and modified URIUtil . decodePath method in URIUtil . java to improve code readability and
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` and ` ResultTableResultSet ` classes to provide a way to retrieve column data types
add default implementation for dynamodbclientconfig . serviceclientconfiguration ( ) to throw unsupportedoperationexception .
refactor HSSFPictureData class implementation to improve code readability and maintainability
replaced ` long ` and ` long ` with ` Instant ` and updated time logging methods to use ` Duration ` and ` Instant ` to improve time
added version handling for MediaInfoLib options in LibMediaInfoParser . java to enhance compatibility with newer MediaInfoLib versions
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enhance dependency management capabilities for the Gradle plugins
added a new class SerialHeap and updated collected heap mapping to use it to enhance garbage collection functionality by integrating serial heap names
added multiple @ SuppressWarnings ( " serial " ) annotations in GsonTypes . java to suppress serialization warnings related to serialization issues
add mouseposition to mousewheelevent to allow tooltips to be place at the same time
updated MongoQueryCreator to handle null parameters and added a new test for findByFirstNameIgnoreCase with null values to improve robustness by preventing potential NullPointer
[ hotfix ] [ common ] add multisettypeinfo to support multi - element type information
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for retrieving identity providers by issuer to improve error handling and provide clearer
fix parsing of nasty cmap file with some whitespace . patch by jbellis
refactor ContactsBackupJob to use a dedicated OperationsServiceConnection for managing service connections to improve code organization and maintainability by consolidating operations
refactored type constraint handling in ` Attr ` and ` Infer ` classes and added a new class ` T6938454a ` with
add ` ` isconfighidden ( ) ' ' property to accountlist .
added error logging for inconsistent supported display sizes in DisplayController . java to improve debugging by providing clearer diagnostics when the number of supported displays
updated schema removal logic in PMetaDataImpl . java and added a test case in PMetaDataImplTest . java to ensure proper schema removal and validate
ggb - 2121 do n ' t fire passive login when user click on it
added a new ` Box2DTest ` class and modified ` GDXTester ` and ` Box2DTest ` to include it to
add some more debug information to help debugging . patch by jbellis ; review by valerybokov
updated the default request timeout from milliseconds to minutes in HybridShuffleConfiguration . java to allow for longer request timeouts for improved performance
added default generator names and version in SpeechSettings . java and updated SpeechClient . java and MockSpeech . java files to ensure consistent generation
added a help button to the OpenOfficePanel to enhance user experience by providing access to the OpenOffice integration help page
[ java ] rename option ( ) to childoption ( ) for clarity .
removed unnecessary imports and simplified method signatures in Binance classes to enhance code readability and maintainability
added a transient field ` classRef ` and modified class loading logic in ` ScanResultObject . java ` to ensure proper handling of ` Class <
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43353 -
added a method to convert Sort . NullHandling to QueryDslNullHandling and created a new integration test class to ensure proper handling of null handling
added null check for actor in ParallelAction and modified index handling in SequenceAction to improve robustness by preventing potential NullPointerExceptions during action processing
reformatted lambda expressions in CtTypeTest . java for consistency to improve code readability and maintainability
added synchronization around closing sfWriters in HDFSEventSink . java to ensure thread safety during concurrent operations
added a new file ` Issue888 _ JavaI . java ` implementing ` Issue888 _ JavaI ` and implemented ` JJ ` and `
added a new command to revoke existing SSL certificates and updated test cases for certificate revocation to enhance certificate management functionality and ensure proper handling of existing
added a check for no body responses in AbstractHttpTest and implemented a corresponding test in HttpServerTestBase to ensure proper handling of responses that do not have
added null check for script text and language in ScriptTransformer . java to improve error handling and provide clearer context for script evaluation failures
updated connection pooling type from " BONECP " to " DBCP " and added support for HikariCP in connection handling to enhance
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to standardize
added file lock and unlock functionality in FileMenuFilter and integrated it into OCFileListFragment to enhance file locking functionality and improve user experience
updated version handling in mmm Version . java and ppp Version . java files to improve code clarity and maintainability
clear endpoint cache when update a keyspace . patch by jbellis
refactored synchronization logic into a separate method ` waitForState ` to improve code readability and maintainability by reducing duplication
refactor ` getCoercedAttrValues ` method to return ` SkylarkRuleContextAttr ` and update related references to improve clarity
simonstewart : move the storage interface to a separate interface so that it can be use by other interface .
fix npe when use unnecessary or replace option in create view statement
updated exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error messaging by providing more informative
added a check for the query string before retrieving it in SpellCheckComponent . java to ensure that the query string is not null before retrieving it from
added validation for header values and improved error handling in mmm Headers . java and ppp Headers . java to ensure header values are valid and provide clearer
add offset to hostedinstanceclass and hybridlayout to account for the after - fields offset .
move abstractpexcommentcontainernode . setcontainscomment ( boolean ) to abstractapexcommentcontainernode
hhh - 13397 log warn when association with fetchmode . join and fetchtype . lazy be set to false
refactored NoGetOperationsFilter and NoUserOperationsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter to simplify the filter implementation
added assertions to verify database and table names in TestCompactionTxnHandler and updated TxnHandler to set their values from the result set to ensure correct
camel - 16305 : added test case for graceful shutdown of the timer component .
added a conditional check before adding the start trace in TraceBuilder . java to ensure that only processed blocks are added to the traces list
updated ProviderManager to use CollectionUtils for checking providers and added tests for null elements to ensure proper handling of null elements and prevent potential NullPointerExceptions
simplified the database type check logic in InsertOrUpdateGeneratorPostgres . java to simplify the logic for determining if the database is a PostgresDatabase instance
added assertions and a new constant for local index limit in LocalIndexIT . java and modified PageFilter handling in BaseResultIterators . java to
added validation to prevent adding collections with the same name in the same collection type to ensure that collection with the same name does not collide with the same
updated cursor positioning logic in VDUBuffer and refactored cursor handling in vt320 to improve cursor positioning accuracy and ensure proper
removed the constant USE _ RETRIES from HttpShardHandlerFactory . java to eliminate redundancy and improve code readability
fix javaversion . parse ( ` ` 11.0 . 7 . 0 ' ' ) for version > = 11.0 . 0
[ hotfix ] [ runtime ] do n ' t run task on empty input gate
added a JUnit test method to the TestReceivingMessageSourceParserTests class to facilitate unit testing of message parsing functionality
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when properties are null
modify IOException handling in FileSystemBlobStrategy to store the cause of the IOException to improve error handling by storing the cause of the IOException
corrected a typo in the error message from " rolling upgrade to fail . " to " stack upgrade will cause stack upgrade to fail . "
txidtextfield : remove txconfidencelistener from walletservice and add it to txidtextfield
added a constant G1 _ PERM _ GEN and updated its usage in JmxSupport . java to support G1 Perm Gen functionality
removed unused imports and simplified return statements in NearbyController . java to streamline code and improve readability by eliminating unnecessary dependencies
pdfbox - 4892 : make class public , add generic to avoid unchecked warning .
added activity type checks for tasks in BaseSwipeUpHandlerV2 . java to ensure proper handling of home activity in swipe up gestures
renamed DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and updated related constants to improve clarity and consistency in naming conventions
updated methods in ShadowTelephonyManagerTest to include lowercase country ISOs and modified return values in ShadowTelephonyManager to ensure
added a method to set the unfreeze amount in the UnfreezeBalanceV2Actuator class to ensure the correct unfreeze amount is set
update conferenceschedulingxlsx to use ` ` per match ' ' instead of ` ` per minute ' '
use common fileutils . copydirectory instead of com . google . common . io . files . copy
refactor multiple assertion classes including AbstractListAssert , AbstractUriAssert , AbstractUrlAssert , AbstractUrlAssert , ArraySortedAssert , Lists , and
refactor Observable class to improve code readability to enhance maintainability and clarity of the codebase
replaced direct DBObject handling with a multi - field operation in the Update class and added tests for multiple collections in MongoTemplateTests to enhance functionality and
added null check for randomUUID before setting it in MockHubService to avoid potential NullPointerException when randomUUID is null
added support for hover events in InputConsumer classes to enhance touch event handling for better user interaction
added a delay before initializing the boostrap configuration in CoreContainer . java to ensure that the bootstrap configuration is only executed when necessary and the configuration is
[ hotfix ] [ netty ] add label to http header size configuration
hbase - 26144 increase hbase client retries from 5 to 15 in hbase - testing - cluster auto start
replaced the method of obtaining the file path in SourceSnippetHelper . java to improve clarity and maintainability of file path resolution
fix flaky test encodedgraphcachetest . testcachedgraphcache
updated query command in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new test
added functionality to adapt KrakenAsset codes and store currency metadata to enhance currency handling capabilities in the KrakenAdapters class
added a ` toString ( ) ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test `
replaced direct calls to entry . getKey ( ) with a dimension map and updated email name formatting to improve code readability and maintainability by using a
[ influxdb ] do n ' t publish in case of miss influxdb database property .
renamed ` doTransform ` methods to ` downcast ` across multiple converter classes and added null - checking functionality in ` ConverterWithFormat ` to improve
[ java ] do n ' t use 127.0 . x . x . x . x . x . x . x . x . x
added a method to quote column names and updated the writeRowHeader call to use this method to improve code readability and maintainability by encap
added methods for setting and retrieving system properties in WrapSystem . java and StrUtils . java , and modified method name retrieval in CompileMethodEntity .
added a constructor to UpdateRequest that accepts a URL parameter to initialize UpdateRequest with the POST method for better request handling
updated enum declaration from static to non - static in ProtoTypeAdapter . java to improve code readability and maintainability
removed the ` addExperimentalFormatWarning ` method from ` RequestHandlerUtils ` and invoked it in ` DataImportHandler ` and ` ReplicationHandler
refactor logging of module names to use a formatted string to improve readability and maintainability of logging output
add a method to get the default label font and adjust row height based on its size in multiple classes to improve code readability and maintainability by
reformatted code for improved readability in DefaultBrokerHeartbeatManager . java to enhance code readability and maintainability
added meanPartitionSize , partitionCount , and splitCount variables to CqlInputFormat . java to initialize variables for partition and split counts to ensure accurate
removed the check for " Test " from the conditional statement in JUnitTestsShouldIncludeAssertRule . java to simplify the conditional logic for better read
added equals and hashCode methods to RuleTerminalNodeLeftTuple class to ensure proper object comparison and hashing for the rule automaton item
added StageIDsRearranger for handling stage ID rearranger configuration in TezCompiler . java to ensure proper resolution of stage IDs during
[ hotfix ] [ runtime ] fix wrong mbean name for messagingservice
refactor memory check logic in LotsOfOutput . java to use a variable for total memory to improve readability and maintainability of memory usage
added imports for Document and DimConfig in multiple Java files to enhance documentation clarity and maintain consistency in the codebase
renamed ` anonymousReadOnly ` to ` anonymousReadOnly ` and updated related methods in ` LdapProperties ` , ` LdapAutoConfiguration ` , ` LdapProperties
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] fix checkstyle violation in exampleechopipelinetest
added finishMocking method to MockitoSession and modified its implementation in DefaultMockitoSession to handle exceptions more effectively to improve error handling and ensure proper
removed ` extraDeps ` from the parameters in ` GoTestDescription . java ` and added new test cases in ` GoTestIntegrationTest . java `
refactor SPDYAsyncConnection to replace ' buffer ' with ' readBuffer ' and ' writeBuffer ' for clarity to improve code readability
change blockliquidwrapper . getstaticblock ( ) to blockliquid . getflowingblock ( )
updated intent data handling in AndroidLocationPlayServiceManager and modified BackgroundLocationHandler to retrieve the background location class from a URL instead of an extra string
fix typo find by codespell on fossies . org
[ hotfix ] [ runtime ] support streamingplan in clifrontend
make craftingmanager # getcraftedrecipes ( ) more efficient .
flume - 132 . add a retry to wait for checkpoint to complete before restart the test .
refactor conditional checks in TabsAndIndentsVisitor . java for consistency to improve readability and maintainability of the code
added a pattern compilation for " pg _ temp _ " in NeuteredLinesFilter . java to enhance filtering capabilities for temporary files
chore ( regen ) : update sample code to set total timeout , add api client header test
added conditional logic to initialize ` liquibaseDataType ` based on the presence of " INTERVAL " in ` DataTypeFactory . java ` and modified type checks
[ wavefront ] add histogram metric if publish histogram
added warmup parameters to the DivideUpstream builder in DivideUpstreamUtils . java and modified upstream host configuration in ShenyuClientRegisterSpring
added a new method ` registerListener ` to ` ShadowSensorManager ` that accepts a ` SensorEventListener ` and a ` maxLatency ` parameter to
added SSL connection logging for overtook 400 responses in SelectChannelServerSslTest . java to improve error handling and provide clearer logging for HTTP
camel - 14146 : camel - ignite - upgrade to apache 5.0 . 0 . final and camel - osgi - karaf
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43535 -
pdfbox - 4892 : catch unsupportedflavorexception and return false instead of throw
added tests for ` setDisplayHdrCapabilities ` and implemented methods to retrieve and set display Hdr capabilities in ` ShadowDisplayTest ` to ensure correct
added nullification of classLoader in JavacInMemoryStep . java to ensure proper resource management and prevent memory leaks
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve debugging and provide more context in error messages
added a default constructor to the Message class to ensure proper initialization of the Message class
do n ' t report classnotfoundexception for non - gui class
updated the constructor of ` PhoenixDecimalObjectInspector ` to accept ` PrimitiveTypeInfo ` and adjusted precision handling for ` BigDecimal ` to enhance type safety and
changed the type of ` gzipstream ` from ` GZIPOutputStream ` to ` OutputStream ` in ` CompressionResponseStream ` to ensure proper handling of committed
corrected a typo in the method parameter name from ` WWWWAuthenticate ` to ` authenticateHeader ` to improve code readability and
removed conditional checks for specific path prefixes in DCD . java to simplify the code and improve readability
refactor thread group retrieval in ThreadLeakTest to use a helper method to improve code readability and maintainability by using a dedicated method for
added logging functionality to the ` afterPropertiesSet ` method in ` MethodInvocationPrivilegeEvaluator . java ` to improve logging detail for unauthorized requests
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools
removed the import of lombok . ToString in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to stream
cloudstack - 5292 : fix migration of user vms when upgrade from vr to vr
refactor signal handling logic in SigInt . java and SigIntTest . java to improve clarity and functionality of signal handler management
replaced the static import of ArrayUtils with a direct call to ArrayUtils . isEmpty in NodeTool . java to improve code readability and maintainability
updated imports and annotations in AxonAutoConfigurationWithSpringCloudTest . java to utilize Spring Boot ' s auto configuration to improve test
added multiple @ Override annotations in ColorRGBA . java to enhance method overrides and improve code clarity
remove deprecate planningentityselector . resetinitializedplanningentities ( )
added a build time parameter to multiple classes to set the artifact cache ' s build time to ensure that the build process reflects the correct build time for
replaced ` getFields ( ) ` with ` getDeclaredFields ( ) ` in ` GroupByOperator . java ` and updated the condition for hash table size
added null check before calling addBlockAppearance in Wallet . java to avoid potential NullPointerException when the block is null
added CNC _ BTC currency pair to multiple currency pairs in BTCEUtils . java and Currencies . java to support the Chinese currency
updated the ` skewAllowance ` value from ` 5 ` to ` 15 ` and modified related methods to use ` CasConfigurationProperties ` to
added a new import for ItemSortBy and modified sorting logic in SongListActivity and Utils to enable sorting by name instead of null for songs
removed unused imports and refactored the readBodyToBytesIfNecessary method in Utils . java to streamline the code and improve readability by eliminating
deprecate baseblock in favor of legacybaseblockwrapper
[ iceberg ] do n ' t try to create a branch if the tag do n ' t exist
replaced ` newArrayList ` with ` Collections . singletonList ` in ` setExternalGroupsWhitelist ` method to improve code readability and maintainability by using a
refactor : remove duplicate code in photonmappingdemo and hybriddemossboinstancing
updated the condition to check for password change and added logging for invalid payloads in identity provider endpoints to ensure proper handling of password change requirements and provide
added a line to remove reflective fields from the notInitializedInConstructors collection to ensure that reflective fields are not initialized in constructors
modify JdbcExecutor to set the URL based on the connection state to " CLOSED CONNECTION " to ensure correct error handling for closed connections
add test case for require body in springmvcclient
updated regex patterns for user and password patterns in CredentialInjector . java and corrected variable name in jdbcUrl in CredentialInjectorTest . java
added a new menu item " Item4 " and a key binding for the " Enter " key in ActionListenerCalledTwiceTest . java to
updated print statements to include query type and canonical name in TestCoreParser . java to improve clarity of test output and ensure results are only produced when
updated equality checks in SimpleNode . java to use ' id ' instead of ' children ' to ensure correct equality comparison for node IDs
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encaps
updated the method for retrieving document count in MoreLikeThis . java and added a new test method in TestMoreLikeThis . java for small sample
refactor code formatting for better readability in QuestManager . java to improve code readability and maintainability
[ hotfix ] [ test ] make networkbufferpooltest a testlogger
modified the query construction in MongoSessionDataStore . java to include the " $ gt " and " $ lt " parameters to ensure the correct sorting of
added a new macro substitution for ` unsafeGetLong ` in ` CompilerDirectivesSubstitutions . java ` to enhance the functionality of ` unsafeGet
updated time zone for " Asia / Amman " from ARAST to EET across multiple language - specific TimeZoneNames files to standardize time zone
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the new location of the class
hhh - 14388 - handle jdbcexception in case of rollbackonly = true
fix downloadexternalfile . getexternalfiletype ( ) for file with no extension
set menubar to use screen menu bar on macos
[ ca ] add test for piecewise integration of ca
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods from private to protected
added configWhiteListPattern assignment in HiveConf and implemented a test for modifying Hive metastore URIs in TestJdbcWithSQLAuthorization to ensure
updated the handling of invalid classes in EntryLoader . java to ensure proper initialization of invalid classes
use player . team ( ) instead of team . sharded ( ) in mobileinput . findclosest ( )
update cookie domain from " comp1 " to " domainHelper . getHostName ( ) " in CookieImplementationTest . java to ensure the cookie domain is
added nullable validation logic in MissingColumnChangeGenerator and MissingTableChangeGenerator , and modified column validation logic in ColumnSnapshotGenerator to enhance validation control based
refactor multiple security - related classes to improve consistency and organization to enhance maintainability and readability of the codebase
added deleteByQuery and query functionality in CustomCollectionTest , refactored CompositeIdRouter to use static final fields to improve code readability and
added snapshot scratch handling functionality in ExecutablePreparedStatementBase and updated dependenciesChangeLog initialization in PostgreSQLIntegrationTest to improve compatibility with Postgre
added checks for max _ cache _ size and max _ cached _ file _ size in DefaultServlet . java to ensure that cache conditions do not exceed
added drag event handling for tabs with content and bib files in JabRefFrame . java to enhance user interaction by allowing drag - and -
updated description creation and assertions in ExecutionUnitRunner , CucumberTest , and CucumberTestTest classes to improve clarity and consistency in description
replaced ` myVersion . isEmpty ( ) ` and ` myBuildTimeString . isEmpty ( ) ` with ` StringUtils . isNotEmpty ( ) ` for
changed access modifiers of methods in TimeUtils from public to package - private to enhance encapsulation and improve code organization
removed the initialization of " jdk . reflect . useDirectMethodHandle " and refactored the class name check logic in RefectionMHTests
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure that only valid JPEG files are
fix debug info provider for nativeimage . tojavaname ( ) .
added a new ` getIcon ( ) ` method to multiple data files and updated the ` classDisplayed ` value from ` NONE ` to ` NODE `
added a check for the last occurrence of a dot in the request name before returning it to avoid potential null pointer exceptions when extracting the request name
fix $ { dollarignsowed } tolerable in findandreplace .
do n ' t use xmppconnection a a type of connection in smack - debug .
refactor SchemaExtractionProcessor to improve code readability to enhance maintainability and facilitate future updates
added a new method ` copyDir ` to copy directories from a directory to a specified destination directory to enhance file copying functionality by allowing users to copy
added exception handling for unknown datum classes in JacksonUtils to improve error reporting for unknown datum types
refactor ABI handling in DefaultJavaLibraryBuilder to use GetJavaAbi and GetJavaAbiJar methods to improve clarity and maintainability
removed background padding calculations in SelectBox . java to simplify height calculation for better readability and maintainability
normalize identifiers for dbName and tableName in ObjectStore . java to ensure consistent naming conventions for database and table names
added schema handling for oracle databases in DbSqlSession . java to ensure default schema is used when the database type is not " postgres "
removed the logout functionality from the HomeFragment to simplify the activity termination process by directly handling the logout response
[ hotfix ] [ test ] fix test that fail on slow ci server
added null check for candidates before retrieving the priviledged list to avoid potential NullPointerExceptions when candidates are null
updated the condition in ContainerLifeCycle to use a boolean variable for managed state to improve code readability and maintainability by using a more descriptive
rename iexecutionattributesdialect to iexecutionattributedialect
added metadata . clearUnsafe ( ) to AlterTest . java to ensure proper cleanup of unsafe metadata during tests
[ java ] fix npe in gettime ( )
added null check for measurement in TabletInsertionDataContainer and introduced a custom exception handler in DisruptorQueueExceptionHandler to improve error handling and provide
deleted the Session2Token . java file to the class is no longer needed in the media package
added volume deletion and expunge handling in VolumeServiceImpl . java to ensure that the destination volume can be removed when the operation fails
added a new ` Install ` class and integrated it into ` SystemShortcut ` and ` InstantAppResolver ` to enable system shortcut installation for instant apps
added a constructor to LdapAuthenticationProvider that initializes with a NullAuthoritiesPopulator and implemented a test for it to ensure that the LdapAuthenticationProvider correctly handles
use system property ` ` retrolambdajarpath ' ' instead of hardcoded ` ` retrolambda . jar ' '
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the code and improve readability
refactor the ` sortLiveDocs ` method to use ` Bits liveDocs ` instead of ` FixedBitSet ` to improve code readability and
added handlenullresult ( ) to jmespathextractor so it do n ' t throw npe
updated import statements in AuthorizeTag . java and added null and length checks for currentUser to improve code robustness and prevent potential NullPointerExceptions
updated assertions in multiple test files for consistency and clarity to improve code readability and maintainability
[ vmware ] fix typo in error message for vm snapshot
updated RobolectricTestRunner to use classConfig and testClassConfig instead of classConfig and changed ArrayList to Set in Config . java to improve
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to utilize a more flexible socket connector implementation
refactor partition key comparison logic in HiveAlterHandler to use a dedicated method to improve code readability and maintainability by reducing redundancy
added a new BooleanFlag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to enable the icon in the text header
added an extra space before the if statement in SimulationStatus . java to improve code readability and maintain consistency in formatting
replaced ` SharedBlockingCallback ` with ` Callback . Completable ` in multiple Java files to simplify code and improve readability by using a more
added workspace listener functionality to PreviewControllerImpl and removed it from PreviewUIController to improve workspace management during the initialization process
added a check for VM anonymous classes in ReflectionFactory and modified class name retrieval in ReflectUtil to ensure proper handling of anonymous classes and improve class name
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated file path formatting in CatalinaAcegiUserRealm . java to ensure consistent file path formatting across the application
updated logging messages in AmbariServer . java to indicate initialization of the server and the ActionManager to improve clarity and traceability of server and
added null checks for ` forNode ` initialization , modification , and modify methods in ` JSONWriter . java ` to ensure robust handling of null values
modified the ` run ` and ` invokeHDFSClientRunnable ` methods to accept a ` FileSystem ` parameter instead of a ` FileSystem ` parameter to
added a check to ensure the backgroundManager is attached before attaching it to prevent potential memory leaks when the background is not already attached
set the current tab in AllAppsTabbed and update page positioning in PagedView and Workspace classes to improve tab management and ensure proper
added null check for the URL parameter in BaseDataSource and a corresponding test case in SimpleDataSourceTest to ensure proper error handling for invalid URLs and
[ hotfix ] disable pebble module test on non - java java version
added EditNameDialog functionality to FileDisplayActivity to handle directory creation and deletion to improve user experience by allowing the creation of a new directory in a
added functionality to toggle bar border widths in multiple chart activities to enhance user experience by allowing customizable bar border widths
corrected the domain name from " okcoin " to " okex " in the OkCoinExchange class to ensure consistency and correctness in the
jbrules - 13636 : add naturalscorecomparator to the stepscope in acceptedforagertest
replaced FileChannel with SeekableByteChannel for input stream handling in Files . java and added bytes comparison in BytesAndLines . java to improve resource management and
refactor getFlattenFieldTransferPair method to accept a FieldReference parameter and improve variable naming for clarity to enhance code readability and maintainability by
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
refactor condition checks in SerializationConfigurationParser to simplify the logic to improve readability and maintainability of the code
added imports and set a memory limit for ActivityManager in QuickstepProcessInitializer . java to enhance memory monitoring capabilities for debug devices
refactor sumWithCompensation logic to store the value in a variable before incrementing it to improve code readability and maintainability by reducing redundancy
[ log4j2 - 1375 ] abstractloadbundletest should throw when the bundle can not be load .
refactor the serialization logic in PrecompactedRow . java to include a check for the top - level deletion status to ensure that the serialized data
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new InvalidRenderIntentTest class for testing to ensure correct rendering intent
add auto - config for auto - configuration of meterregistry
change log level from warn to info for missing config center
added error handling for generating a certificate with byte arrays in CertificateFactoryTest . java to ensure that the certificate is properly validated before proceeding with operations
camel - 14136 : camel - simple : fix issue with ambiguous binary operator in simple language .
removed the ` onTabUnselected ` method from ` EditorActivity ` and added a null check for ` gainFocus ` in ` IDEEditor
added user name to the error message when accesslogvalve open fail
updated SkeletonModelGpuSkinningTest and OgreXmlLoader to handle submesh names and adjusted animTime calculation in SkeletonModel
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should not be used in future development
added support for specifying the output directory for generated D . ts files in the JSweet transpiler and transpiler classes to enable
[ hotfix ] [ stream ] make kinesis stream fetch timeout configurable
updated timestamp handling in StreamingDataflowWorker . java to include a file extension to enhance readability and maintainability of the code
increased the maximum number of metastore server threads from 100 , 000 to 1000 to improve performance by reducing the number of concurrent threads
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` and added a return statement to indicate that the snapshot
updated shadow radius parameter from ` mMaxShadowRadius ` to ` shadowRadius ` in ` SwipeUpAnimationLogic . java ` to improve clarity
added unit test for chain nesting and aggregation in ChainParserTests . java to ensure proper functionality and validation of message aggregation functionality
updated the loop condition in MarketSellAssetActuatorTest from ' limit ' to ' end ' and added a failure message to ensure the
fix ( context ) : use source . isinteractive instead of source . isinternal ( )
updated condition to check for null previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure proper handling of cases where previousCachedFilePath is
added DisplayController import and modified WindowManagerProxy initialization in LauncherPreviewRenderer . java to include DisplayController for better display management in the launcher
updated toolTipText assignment in MetalFileChooserUI . java and SynthFileChooserUIImpl . java to include " Desktop " for root directories to
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize ( ) ` to
changed the return type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > to simplify the
added new test methods for inserting and removing entities in JPASQLBase to improve test coverage and ensure correctness of entity fetching functionality
removed debug print statement related to drag index and point removal in FreeformFinSetConfig . java to streamline code by eliminating unnecessary debug output
updated the moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to reflect the latest release version and
updated error message in Runtime . java and added program . spendAllGas ( ) method call to improve clarity and functionality of the error message
updated error message formatting in multiple classes to include a newline character to improve readability and consistency of error messages
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should no longer be used
refactor unsafe plugin registration to use a dedicated method to improve code readability and maintainability
added ` @ Hint ( isDep = false ) ` annotations to ` AndroidAppModularityDescription ` and ` AndroidGraphEnhancerArgs
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable vertical page alignment for better user experience
[ hotfix ] [ runtime ] remove redundant call to migrationinfo . doneprocessing ( ) in migrationrequestoperation
[ konnected ] use baseurl from test config instead of ipaddress
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy `
updated database handling in TestJdbcWithMiniLlap and LlapBaseInputFormat to use a configurable database to improve flexibility and maintainability of database
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate SQL parsing and deparsing to ensure
refactor copy mode handling in ConsoleActivity to use a dedicated method to improve code readability and maintainability by encapsulating copy mode functionality
updated XML output handling in TestCommand . java to use DocumentBuilder and Element to improve flexibility and maintainability of XML output generation
camel - 13636 : fixed npe in abstractaggregationstrategy when use aggregation strategy with empty body .
camel - 14136 : camel - jbang - use the same method a camelexchangeexception . createexceptionmessage . createexceptionmessage .
move basicconfigurator from logback - classic to logback - classic
added a check for the presence of the target ' s PHI _ NODE flag in the TypeQualifierDataflowAnalysis class to ensure that the target
remove unused import in testxssfrichtextstring . java
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with additional parameters
refactor BoxAndWhiskerCalculator , BoxAndWhiskerCategoryDataset , HistogramBin , HistogramDataset , Histogram
[ hotfix ] [ test ] migrate parameterized test to junit 5
updated equality checks in ` NormUpdate ` and ` MemoryIndex ` classes to use ` . equals ( ) ` instead of ` = = `
changed access modifiers of the singleton instance and constructor in IndexFileNameFilter from public to private to enhance encapsulation and restrict access to the singleton
refactor ifstatementtest to use testgraph ( ) to improve code readability and maintainability
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
removed the custom nullSafe method from TypeAdapter classes to simplify the method signatures for better readability and performance
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected value for the test
added a new file EXIFReader . java to read and process EXIF metadata to facilitate image processing and metadata processing in the upload package
update cloudwatchmeterregistry . tostandardunit to return none instead of unknown _ to _ sdk _ version
[ danielwagnerhall ] fix pmml4datafactory . newinstance ( ) to throw an exception when apply pmml model
add newlines to the message when receiving a non - expected message in FluentProtocol . java to improve readability and provide clearer context for
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 14497 ] catch branchtargetoutofboundsexception in decomposeaarch64backend . emitforemittingcode
added a try - finally block to ensure initialization of the JDKLogManager in JDKXRLogger . java to ensure proper resource
added a new method ` find ` to ` TicketCatalog ` and updated logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry
refactor SSL connection string construction for clarity and consistency to improve readability and maintainability of the code
[ flink - 24136 ] [ runtime ] make resultpartition read buffer pool in batchshuffleresultpartition thread - safe
updated the constructors of Read and Write in JmsIO . java to include additional parameters to enhance functionality by allowing the Read and Write methods to
updated the ` queryAllPluginHandlesByPluginId ` and ` queryAllPluginHandlesByPluginId ` methods to include ` type ` and `
replaced ` start ( ) ` method calls with ` start ( ) ` in ` DefaultSpanCreator . java ` and ` SleuthAdvisor
added GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , and GLKViewDrawableMultisample to IOSApplicationConfiguration and IO
refactored loginit to use attemptlogin ( ) instead of click ( ) .
[ pytorch ] support real ( ) and complex ( ) in pytorch library .
modified loop conditions in SynchronizationStatistics . java to use a do - while loop instead of a while loop to improve performance by avoiding unnecessary interruption
refactor implementations of ShadowPicker and Implements classes to improve code readability and maintainability
refactored HttpClientOptions to use a dedicated method and updated TransportClientConfig properties to improve code readability and maintainability by centralizing HTTP / 2
added support for DynamicArray in DynamicStruct . java and improved type name handling in SolidityFunctionWrapper . java to enhance type safety and prevent
updated method calls to include a default value of true for ` text _ align ` and ` font - size ` in ` InlineLayout ` and `
added constructors for ` CopyStep ` with a ` shouldRecurse ` parameter and a corresponding test in ` CopyStepTest ` to allow
fixed - rsemaphore . addpermits ( ) method throw concurrentmodificationexception if acquirepermit ( ) return false .
camel - 14237 : camel - jbang - fix the test error of camel - jbang
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it to improve code readability and maintainability
updated data types from String to ByteString in WitnessScheduleStore methods to enhance type safety and compatibility with ByteString for address types
added a check for non - empty resultsMeta before printing it to avoid unnecessary output when resultsMeta is empty
refactor ConcurrentLinkedQueue to improve item removal logic and add a new RemoveLeak class for testing to enhance performance and maintainability of the ConcurrentLinkedQueue
added skiptoken ( ) method to huggingfacetokenizer . decode ( long [ ] ids , int [ ] ids , boolean addspecialtokens
[ hotfix ] [ runtime ] replace arraylist with list . ncopy ( ) in taskmanagerservices
refactor chunk handling in LoadSingleTsFileNode to use AlignedChunkData for improved clarity to enhance code readability and maintainability
added session storage context constants and updated view state management in DuoSecurityMultifactorWebflowConfigurer to enhance session storage functionality and improve flow management
added a test for XML schema validation in TestJspDocumentParser . java to ensure that the SAX parser correctly handles XML errors during XML parsing
added a default constructor to the TypeAdapter class and disabled the test due to record support in Java 17 to disable the test until the record support is
added handling for KillException and modified event dispatching logic in Debugger . java and SuspendedEvent . java to improve error management and ensure proper
refactor AntPathRequestMatcher to improve code readability to enhance maintainability and facilitate future updates
remove unused parameter from createresourcepolicy ( )
added null check before releasing the deflater entry in GzipHttpOutputInterceptor . java and improved assertions in BlockingTest . java to enhance robust
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure tests are executed after each test execution
updated the checksum computation in CheckSum . java to normalize unicode characters to ensure proper handling of unknown Unicode characters in checksums
refactor command handling to check for existence before executing commands to improve code readability and prevent potential null pointer exceptions
fix checkstyle issue in util / profiler / profilerstate / basicprofilerstate . java and add @ override annotation .
changed the type of ` objectToSave ` from ` T ` to ` DBDoc ` and added a new test for saving JSON strings to ensure
added functionality to check if an IP address contains multiple remote addresses in RequestUtils to ensure proper handling of multiple remote addresses in the request processing
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` and updated related method signatures to enhance type safety and improve
added proxy handling and modified host address retrieval in CookieManagerTest . java and UnmodifiableMaps . java to improve proxy management and provide clearer
refactor glyph wrapping logic in GlyphLayout . java and add text testing in BitmapFontTest . java to improve handling of whitespace wrapping scenarios and
added pauseOrResumeSplits and resumeSplits methods to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to
added a new environment variable for the Hive script operator ID in HiveConf . java and ScriptOperator . java to enable the handling of the operator ID
refactor the ` getListedTermCounts ` method to use ` Stream < SimpleImmutableEntry < String , Integer > > ` instead of a
added a new action class ` UseSeparateStepSizeAction ` to manage the use of separate step sizes in JOG to enhance user experience by
added user ID handling and refactored unlock logic in FileMenuFilter . java to enhance code readability and maintainability by using user - specific
hbase - 14499 fix the bug in roundrobintableinputformat . getsplits ( ) when region server be empty
updated HTTP header values from " false " to " 0 " and " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest to reflect the correct
pdfbox - 4892 : use ioutils . closeall instead of manual null check
added fullscreen functionality and modified DisplayMode methods in GwtGraphics and GwtApplication to enhance rendering capabilities and support fullscreen functionality
http : / / issues . apache . org / jira / browse / amq - 4237 - fix webfingerissuerservice to
added a new test class ` SoulApacheDubboClientConfigurationTest ` for the ` SoulApacheDubbo
replaced Gdx . files . internal ( fileName ) with resolve ( fileName ) for assetDescriptor and texturePath to improve code clarity and maintainability by
added trace logging for attributes in ChainingAttributeReleasePolicy and changed log level from warn to info in OidcDefaultJsonWebKeystoreCache
replaced calls to ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple files to ensure proper locking behavior in concurrent scenarios
updated package declaration for Compiler . java to improve organization and clarity of package structure
do n ' t report nulldereferenceandredundantcomparison if the catch block be a try - with - resources method .
use defaulthttpdatasource in dashrendererbuilder . onmanifest ( ) and onsinglemanifest ( )
added a configuration property for the maximum number of prepared statements per database connection in the execution scheduler to allow dynamic configuration of the maximum number of prepared statements
change return type of set method from WritableConfig to Configuration across multiple classes to ensure consistency and correctness in method naming conventions
added error handling to the checkErr method in AutoScalingHandler . java to improve error reporting for command execution errors
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future updates
updated variable name from ` buf ` to ` b ` in ` InflateIn _ DeflateOut . java ` to improve clarity and consistency in
added methods to remove cryptography restrictions in Utilities . java and updated permission handling in JceSecurity . java to enhance security by restricting access to
refactor entity position handling to include cancellation and teleportation logic to improve responsiveness and ensure proper chunk teleportation during entity interactions
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure that page margins long
added null check for vectorizationContext before assigning it to avoid redundant calls to getVectorizationContext
fix wialon speed value ( fix # 539957 )
hbase - 11613 addendum add a configuration option to disable the metric user aggregate
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to ensure that the ` JsonObject
updated mVisible , mVisible , and mAttached variables to be new flags and conditionally unregister the receiver to ensure the receiver is only unregistered
refactor multiple HttpClient and HttpServer classes to improve code organization to enhance maintainability and readability of the codebase
added a parameter to the zadd method in PipelineBase . java to enhance the pipeline ' s functionality by including additional parameters
add miss @ override and fix checkstyle warning
[ test ] rename testasyncmessages to testasyncmessagesperformance
added a method to retrieve a Optional for a specific BuildTarget in VersionedTargetGraphBuilder and updated tests handling in VersionPropagatorBuilder to
updated EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW constants to use new constants to improve code readability and
fix a bug in escherbliprecord and add a unit test for ole2 embedding
removed redundant initialization of row and column variables in JSONParser . java to streamline code and improve readability
refactor type matching to use a regex pattern instead of a single FullyQualified instance to improve flexibility and maintainability of type matching logic
updated thumbnail height and added support for playing trailers in BaseItemDetailsFragment to enhance user experience by allowing multiple trailers for playback
added a method to remove glyph information from the cache in CStrike . java and implemented it in CStrikeDisposer . java to improve
added test case and fix for endevent in actionmanagerimpl
camel - 10237 : camel - core - add support for @ xmlelementtype to be use in the name strategy .
updated the endpoint in SimpleHttpClientTests from " http : / / apereo . org / scottb . html " to " https :
add ` ` prdef ' ' option to reset all preference to default value
hbase - 12613 make thriftmetrics protect so subclass can override .
removed deprecated manual fan speed channel and its associated logic from Channel . java and ChannelGroup . java to clean up unused channel handling and improve code clarity
use hamcrest assertion instead of junit in tests / integrations / cdi / jupiter / testendpoint . java
removed duplicate code for stopping the expansion helper in TweetActivity . java to streamline code by eliminating redundancy
added equals and hashCode methods to PartitionPanel and PartitionFactory classes to ensure proper comparison and hashing of PartImpl objects
cloudstack - 6121 : set vm _ root _ disk _ size in custom parameter if it be not already set
updated visibility logic in PredictionRowView to conditionally show suggested apps in the drawer based on user preferences to enhance user experience by ensuring suggested apps
apibboxparser : add support for bboxcrs parameter and add test
added validation methods for value and position parameters in LibrustzcashParam . java and updated the corresponding test case in LibrustzcashTest .
deprecate ithrowableentity in favor of ithrowableentity
added a random position to the x and y variables in NodeDataImpl . java to ensure a random position is created within a specified time frame
added a new test method ` validateRefreshToken _ happycase ` and a new test method ` validateRefreshToken _ should _ fail _ when _ missing _
refactor JavacStep to initialize declaredDepsBuildResult , firstOrderStdout , and returnedStderr with try - with - resources to improve
update version string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release version
added a condition to check for DEEP _ SHORTCUT item type in LoaderCursor . java to ensure compatibility with DEEP _ SHORT
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent hash code generation for type and column names
changed access modifiers of classes BooleanWeight and DisjunctionMaxWeight from private to protected and added a new similarity field to enhance encapsulation
added a boolean flag to control proxy response code handling in HttpURLConnection to ensure proper handling of NTLM proxy scenarios based on response code
aarch64move : use the scratch register from aarch64 . sp instead of aarch64 . sp
server : do n ' t calculate reserved memory for a host if it be n ' t in use
added a null check for the maximum score in JSONResponseWriter and updated the query in TestDistributedSearch to ensure that the included score is only included
updated the audio recoder parameter from 22050 to 44100 in AudioRecorderTest . java to adjust the audio recoding threshold for improved audio
modify the calculation of ` newOriginX ` to include ` subjectBounds _ m . getMinX ( ) * scale ` to ensure proper positioning of
added null and empty checks for the ` dataSource ` parameter and initialized ` intervals ` with ` DruidStorageHandlerUtils . DEFAULT _ INTERVAL `
added ORIGINAL _ TYPE constant and updated regex pattern in CustomProperty . java , and added corresponding test cases in CustomPropertyTest . java to
added a static factory method ` create ` in the ` Index ` class to create an instance of ` Index ` with specified parent and data to enhance
simplified the return statement by removing unnecessary variable to improve code readability and maintainability
updated compatibility handling in SchemaCompatibility . java and added new test cases in TestSchemaCompatibility . java and TestSchemaCompatibilityTypeMismatch . java to ensure
[ jbrules - 2486 ] fix collection with multiple association in the same table . ( # 2486 )
added synchronization to manage concurrent access to the spans list to ensure thread safety during concurrent access to spans
change the return type of getText method from List < Object > to List < ? > in multiple classes to allow for more flexible argument handling in the
updated exception handling and logging in ViewContextImpl . java to improve error reporting and provide more informative messages during authentication failures
refactor OAuth2AccessTokenEntity class to improve code organization to enhance maintainability and readability of the code
updated error messages to indicate that the service cannot process requests due to status changes to improve clarity and accuracy of status handling in the request processing process
added new project files for Default - 1024w - 1366h and Default - 1024w - 1366h in GdxSetup . java to
added a ConcurrentMergeScheduler to the MockAnalyzer in TestSearcherManager . java to enable concurrent merging during the test execution
added a null and empty check for the response code in QTestUtil . java , modified list handling in GenericUDTFInline . java to
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
fix issue with spreadsheet key listener not fire on touch up
hhh - 14499 - fix osgi bundle stop when bundle be stop
[ hotfix ] [ runtime ] fix calculation of timeout in hikaripool . close ( )
add a non - packaged resource to the voice compiler so that we do n ' t have to package the component . xml
updated file name handling in Compat . java and FileOpener . java to use File . separatorChar instead of File . getFile ( ) to
changed the return type of the row ( ) method from Cell < T > to void to simplify the method signature for better readability and maintainability
improve error message when port be specify multiple time .
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 to use FixedMaskGen to improve flexibility in generating WebSocket connections based on null mask
refactor ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of directly assigning it
added stats tracking for selected and non - selected nodes in NodeScheduler , NodeSelectionStats , and TopologyAwareNodeSelector classes to track and track
add a new class ` Person ` with methods for setting and getting a name in the ` Person ` class to facilitate the creation and retrieval of a
added a boolean variable ` hasOwnerPtr ` to track the presence of the owner pointer before executing the ` executeGet ` method to improve code clarity
added clock animation functionality to the PlaybackOverlayFragment to enhance user experience by allowing fade - in and fade - out animations
fix comparator output not update properly in some case .
changed the IMPL variable from final to non - final and added a fallback mechanism for loading the default SegmentReader class to improve flexibility in class loading
added SwingUtilities . invokeLater to fire cell update events in SudokuGridEvent to ensure thread safety during event firing
removed the DefaultInetAddressAdapter class and updated related type adapters to use Class < T > instead of TypeToken < T > to simplify
added methods to retrieve double , long , boolean , and string values in the Series class and created corresponding test cases in DataFrameTest to ensure proper handling
updated option name from " -- no - audio - time - stretch " to " -- audio - time - stretch " to improve clarity and consistency in
updated boundary conditions in GeoRelationUtils and modified GeoUtils to use Math . min and Max _ LAT _ INCL for polygon queries to improve
vmware : fix findbydiskoffering to return diskofferingid instead of diskofferingid
added cleanup method to shut down the hazelcast instance after each test .
add some more test for aes - 2 and aes - 9 cipher mode that do n ' t exist .
added filters for printing operations logs in QFileClient . java to enhance logging functionality for better user experience
fix ( core ) : fix type argument processing in aop proxy
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43351 - initialize the
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` for demand calculation to simplify code and improve readability by using a more
refactor image output stream handling to use try - with - resources for better resource management to improve code readability and maintainability by using a try
replaced the call to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct intent creation in ` BaseActivity ` and `
updated the initialization of SchemaCrawlerOptions and GrepOptions classes to remove unnecessary ' this ' keyword to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4892 - add support for osgi in web console
added a @ Autowired annotation for PersonRepository in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for PersonRepository in tests
updated exception type in stop method from Exception to InterruptedException and corrected log message formatting in TestVertxUIManual to ensure proper exception handling and
added new case statements for various block types in BlockCactus . java to enhance functionality by integrating additional block types
refactor mouse event handling in ThemeSelector to use MouseMotionAdapter to improve mouse event responsiveness and maintainability by encapsulating mouse
[ java ] remove unnecessary padding from abstractminmulticastflowcontrol .
added vertical alignment parameter to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance text editing functionality by allowing
improve error message when a tokenization model be not specify in a file .
added a check for distinct queries in ClusterIntegrationTestUtils and modified query generation logic in QueryGenerator to ensure that distinct queries are handled correctly and improve query
[ gr - 26135 ] add a new option to score score , a suggest by valerybokov
fix checkstyle issue in javax / swing / jradiobutton / jsyntaxtextarea . java
added null check for children before processing in PartitionPruner . java to avoid potential NullPointerException when children are null
added token position and currentPosition variables and updated JsonLocation return logic in MessagePackParser . java to enhance parsing context management and improve test coverage for
added locale management and cleanup in AbstractSolrMorphlineTestBase to ensure consistent locale settings during test execution
removed conditional checks for ` isLauncher ( ) ` in ` LauncherFragment . java ` to simplify size calculation for better readability and maintainability
add a new test class ` MetricsReporterTest ` to validate metric reporting functionality to ensure the MetricsReporter correctly handles and registers different metric types
camel - 14237 : camel - osgi - remove unused code from osgiserviceregistry
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class to ensure proper comparison and hashing for the ` Rectangle ` class
[ hotfix ] [ test ] fix test failure in kafkaptest
refactor DSAParameterGenerator to use BigInteger . ONE instead of a static constant ONE for strength validation to improve code readability and maintainability by
added configuration to control the use of the FQDN of the AM machine in LLAP and updated related classes to utilize this new configuration
fix clientoutofmemoryhandlertest failure on slow ci server
refactored shape object ID setting to use a new method ` getCmoObjectId ` across multiple shapes to improve code readability and maintainability
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest ` for querying distinct posts with a scalar query to ensure
refactor multiple Java classes related to task loading and loading to improve code organization and maintainability
remove extensionadapter reference from managedkubernetesclient # registerextensionadapter and # unbindextensionadapter
refactor subtitle display logic to use a utility method for better readability and maintainability to improve code clarity and maintainability by centralizing rating display
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot , TestRSAProviderTokenManager , and Test
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43737 -
removed parameters from the reset method calls for intPool and bytePool to simplify the code by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated ShadowWindowManagerGlobal to support TIRAMISU API level and added a new WindowSessionDelegateU class to enhance compatibility with newer
fix urlhelper . forceaddschemehostandport to work with non - standard port
added support for MSSQLDatabase in the foreign key constraint generation logic to ensure compatibility with MSSQL - specific constraints
reformatted lambda expressions in HStore and StoreEngine classes for consistency to improve code readability and maintainability
fix emzuli pipe not filter item on neptuned pipe .
simonstewart : remove html content rule for debug mode
updated method calls from ` getProducedTableSchema ( ) . getFieldDataTypes ( ) ` to ` getTableSchema ( ) . getFieldNames (
add thread check to player . release ( ) so that it do n ' t crash the app .
added CatalogAndSchema import and modified schema name filtering in SequenceSnapshotGenerator to enhance schema name handling and improve flexibility in schema name management
updated color calculations in SpriteBatch and SpriteCache , modified color configuration in LwjglDebugStarter , and modified pixmap rendering
fixed - batch completablefuture . join ( ) method throw classcastexception . # 118
added logic to retrieve and store the base core URL in SolrLoggerServiceImpl . java to ensure that only relevant Solr cores are processed
refactor ` launchTask ` method to ` launchTaskFromView ` and update its implementation to accept ` Task ` objects instead of ` TaskHolder
updated MorfologikFilter to use specific imports and modified the constructor to load the dictionary resource dynamically to improve code readability and maintainability
updated sorting options for community rating and critic rating from " lbl _ stars " and " lbl _ critic _ rating " to " lbl _ community _
added imports for ViewKt and ListRow , and set visibility for non - null header items in CustomListRowPresenter to ensure proper visibility
added a try - finally block to handle clientType switch cases in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced calls to ` isCaseSensitive ( ) ` with ` instanceof instanceof ` for ` accordingTo ` and ` DB2Database ` to improve type
update jsr310 serializer to support jsr310
updated import statement from org . apache . log4j . MDC to org . slf4j . MDC in LogUtils . java to ensure compatibility
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve code clarity
removed unnecessary import statements and formatted code for consistency to improve code readability and maintainability
added functionality to retrieve a list of build targets in BuckConfig and updated ProjectCommand to include a condition for forcing builds based on the passed targets
removed the old BusySpinIdleStrategy instantiation and added a call to System . gc ( ) to ensure proper resource management and avoid potential memory
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` constructors and updated log statements to use ` OCFile `
removed unnecessary conditional checks for state change events in ReportPanel . java to simplify code and improve readability by eliminating unnecessary checks
[ hotfix ] [ test ] use non - null slotowner in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` to implement a recipe for removing calls to ` System . gc ( ) `
removed calls to ` super ( ) ` in multiple exception classes to streamline exception handling and improve code clarity
added a method to set the UIID in ScaleImageLabel to use the icon from the superclass to ensure the correct icon is used when setting the
replaced instances of ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve clarity and consistency in variable naming
added support for " - cp " argument in the argument parsing logic to ensure compatibility with both " - classpath " and " - cp " options
[ hotfix ] [ avro ] update avroutil to use compiler instead of options
updated initialization flag in StorageService . java to ensure consistent initialization state
updated Test7196045 . java file to improve test coverage and maintainability
updated density and decay values in ShaderParametersLightShaft . java to improve light density and decay functionality
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and modified ` OidcRedirectActionBuilder ` to
add not - null constraint to alter table add unique constraint
added file sharing checks for federated share in UsersAndGroupsSearchProvider and EditShareFragment to enhance sharing control based on federated share status
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy ` to ensure proper handling of document values for
refactor BufferAlignmentAgent and BufferAlignmentInterceptor for improved error handling and formatting in BufferAlignmentException to enhance code clarity and maintainability by standardizing
added a new method ` intForEach ` in ` Int2ObjectHashMap ` and modified the interface declaration in ` IntObjConsumer ` to improve
fix scoreboards not be share with the worldservermulti map storage .
changed return type of count ( ) methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository
refactor MManager to simplify MTree snapshot creation logic to improve readability and maintainability of logging messages
refactor the dot product score calculation in VectorUtil and update corresponding test assertions in TestVectorUtil to improve accuracy of the dot product score calculation and
added a new parameter ` IRREVERSIBLE _ THRESHOLD ` and methods to manage and retrieve the latest confirmed block number to enhance the functionality
replaced locale setting logic in GpsMainActivity and MainPreferenceActivity with a call to Systems . setLocale across multiple classes to streamline locale
added a check for new database creation in the LauncherClings and LauncherProvider classes to ensure proper handling of database creation state during the
refactor the BasicAclEntryAfterInvocationCollectionFilteringProvider class to improve code readability and maintainability to enhance code clarity and maintainability by
added a null check for the data model before determining if it is 64 - bit to improve code readability and maintainability
added a check for the current thread before proceeding in TestIndexWriterDelete . java to avoid unnecessary processing when the current thread is different
changed the access modifier of the closeDatabase method from private to protected to allow access to the closeDatabase method from other classes
updated imports and references from ` apiclient ` to ` sdk ` in ` FullDetailsActivity . java ` and ` BaseRowItem . java
added attribute handling for SVG elements in BatikSVGDrawer . java to ensure correct processing of SVG attributes in the XML document
added try - catch block for handling IllegalArgumentException in ConsoleKeys . java to improve error logging for user configuration parsing failures
added a check for the presence of " WaitForResult " in the intent and modified the waitingForResult assignment logic in CodenameOneActivity to ensure
refactor ` PriorityQueue ` and related classes to use a ` Supplier < T > ` for sending sentinel objects instead of a boolean flag to
refactor WidgetCell to use a private TextView for widget description instead of a generic TextView to improve code readability and maintainability by reducing redundancy in
added a maximum attribute count check for attribute registration in mmm Attribute . java and ppp Attribute . java to ensure that maximum registered attribute count does not exceed
move predicatestest to impl . predicates and move it to predicatestest . java
camel - 14237 : camel - core - add caseinsensitive option to defaultheaderfilterstrategy to allow filter to be case insensitive
updated inline layout logic and variable names in InlineLayout and Breaker classes to improve clarity and functionality of break handling logic
added null safety checks and improved layout inflation in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
updated the ` shouldInstrument ` method to include additional Android packages and modified the instrumenting logic to include Android SDK checks to ensure compatibility with different Android
added a check to return the last column in the table if the association is the destination before the source to ensure the correct index is returned when the
updated the method for retrieving the memory limit file in CmdModifierTest . java to handle different Cgroup versions to ensure compatibility with different Cgroup versions
replaced instances of ` CxxDeps . of ( ) ` with a static final ` CxxDeps . EMPTY _ INSTANCE ` in multiple files to
added a null check for the rule in JavaTestRule . java to provide a clearer error message when the specified source is not among its dependencies
refactored proxy loading logic to use a map instead of hardcoded value
added a check to set atIndex to 0 if it is negative to ensure that atIndex is non - negative to avoid potential null pointer exceptions
increased the timeout duration in the BuckBlockJUnit4ClassRunner from 100 milliseconds to 500 milliseconds and increased sleep duration from 1000 milliseconds to 5000 milliseconds
refactor TaskOverlayFactoryGo to accept a custom AssistContentRequester instance to improve flexibility and maintainability of assist content requests
votewitnessprocessor : use encode58check instead of createreadablestring
refactor DefaultMethodRegressionTests . java for improved readability to enhance maintainability and facilitate future development
refactor WorkloadManagerMxBean to improve code readability to enhance maintainability and facilitate future updates
updated import statement and exception type in KafkaOutboundAdapterParserTests from KafkaProducerException to KafkaException to align with the latest Kubernetes API
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a ` clear ( ) ` method to ` ExceptionThrowingTaskletStub ` and corresponding test cases in ` FaultTolerantException
add beamjobcoordinatorrunner and beamcontainerrunner to the error message
added ` Map < String , String > extraProperties ` parameter to multiple ` applyTunerConfigs ` and ` applyTunerConfig `
added logic to track in - progress segment instances in PinotRealtimeSegmentsManager to ensure that only valid segment names are added to the list of
added a check to return null if the touchable is disabled to ensure proper handling of disabled touchable instances
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` to ensure that precompiled headers
throw retryablehazelcastexception when cache config do n ' t exist
refactor JSweetTranspiler and ProcessUtil to improve npm installation logging to enhance code readability and maintainability by consolidating module
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enable management of MBean components in the application
change conditional check from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in LongClickableSpan . java to ensure
updated string comparisons in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` . equals ( ) ` instead of
modified the condition in isReifiable and added new classes T6558559a and T6558559b to improve type safety and
update position set message to include the current position and the size of the player to improve debugging information for better debugging and debugging
[ flink - 24124 ] [ kafka ] shutdown the consumer executor when the consumer be shut down .
removed the examples ( ) method from the Schema class to simplify the code and improve readability
modified thread interruption logic and added break statements in AgentRunner . java to improve loop handling and ensure proper termination of the agent
added logic to remove the time column from dimensions in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of time columns in data source
simplified the condition checking the shard length in FacetComponent . java to improve code readability and maintainability
replace linker retrieval with CxxPlatforms . getParseTimeDeps in RustBinaryDescription . java and RustLibraryDescription . java to
added ` name ` property with getter and setter methods in ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` NtlmProperties
do n ' t call system . exit ( - 1 ) if the printer be null
refactor scan range handling in BaseQueryPlan , QueryServices , and QueryServicesOptions classes , and add a new test for small scan threshold in
added " routeId " to the filter ' s string representation in RetryGatewayFilterFactory . java to include the route ID in the output for better
replaced multiple calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java ` to improve
replaced the ` onOverviewShown ` method with ` DiscoveryBounce . showForOverviewIfNeeded ` and modified its implementation in ` ActivityControlHelper `
refactor conditional checks in CheckIndex . java and add a new test method in TestPointValues . java to improve code readability and ensure correct
updated the publish method parameter from ` true ` to ` updateLastState ` in ` ZkController . java ` to improve the clarity of the
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper formatting of string list values
added a null element to the exp list in SpliteratorCollisions . java to ensure proper handling of null values in the iterator
simonstewart : add the ability to condition . text ( ) to be case - insensitive
replaced multiple instances of ` do ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code readability
# 118 - add queryengine . forwardonlyfetchsize ( ) for mysql
added a check to handle ClosedChannelException before sending a 404 response to improve error handling and provide clearer feedback when the channel is already closed
pdfbox - 4892 : initialize the arraylist with the size of beads . size ( )
updated window radius initialization to support rounded corners in QuickstepAppTransitionManagerImpl to enhance user experience by allowing rounded corners for windows
refactor background handling in DesktopTaskView to use a View for better layout management to improve code readability and maintainability by using a dedicated view
added initialization of ` UpstreamCheckService ` in ` UpstreamCheckServiceTest . java ` to ensure that the ` UpstreamCheckService `
replaced warn log statements with debug log statements for immortal sessions in AbstractSession and AbstractSessionManager to improve log readability and maintainability by
updated ZooKeeperHiveLockManager to return the number of locks instead of throwing an exception to improve error handling and provide a clearer return
[ hotfix ] [ javadoc ] fix typo in javadoc
added a boolean flag ` containsCustomData ` to control mipmap generation based on its value to ensure mipmap generation only occurs when custom
replace double quotes with single quotes in key value assertions in DefaultMaskingFormatterTest . java to improve consistency and readability of the test cases
added methods to manage the selectability state and updated touch event handling in the List class to improve user experience by allowing selection when no items are selected
removed redundant check for empty field vectors in LlapArrowBatchRecordReader . java to simplify the code and improve readability
added file separator property and improved logging in PolicyContext to ensure consistent file separator handling and improve debugging output
replaced HashSet with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance by using a more efficient collection type
refactor TLSRestrictions class for improved readability to enhance maintainability and facilitate future updates
replace direct closing of Kafka with a Runnable that executes it to ensure proper resource management and handle potential exceptions when closing the Kafka producer
added an " freedisk " parameter to the assertNodeStateProvider method and modified its implementation to include an ignorableNodeValues parameter to enhance node state
added functionality to delete the " LOCK " file if it exists to ensure the workspace is cleaned up before use
hbase - 24497 MiniZooKeeperCluster and TestHQuorumPeer to use InetSocketAddress for the client port to ensure the correct port is
added logging functionality to the getResponse method in RestClient . java to improve error handling and logging for web service connections
updated the method call to use ` toArray ( new String [ 0 ] ) ` instead of an array of ` segmentTarURIs ` to
updated loginStudent calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to
added a null check for the item ID in EnhancedBrowseFragment . java and StdBrowseFragment . java to prevent potential NullPointerExceptions when
increased the number of strings from 500 to 100 in TestSpecialOperations . java to reduce the number of strings from 500 to 100
remove unused ` hexbytes ` from ` wkbattributeio `
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in naming conventions
added a check for direct submachine states in AbstractStateMachine to prevent processing of transitions that are direct submachine states
added order checking and equality checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding unit tests in MultimapTest . java to
added JoinOperation interface to the PostJoinOperation class to allow the PostJoinOperation to be implemented as a join operation
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to validate PostgreSQL
fix intermittent test failure on amq - 5035
refactor AvaticaDatabaseMetaData to improve code structure to enhance maintainability and readability of the database metadata
updated MongoDbConnectionPoolProperties to use DurationCapable and changed lifeTime , idleTime , and maxWaitTime from int to String to enhance flexibility
[ sip ] fix npe in sdputils when create a medium medium format
refactored filter handling methods in FacetProcessor to return a boolean indicating applied filters to improve code readability and maintainability by consolidating
( chore ) camel - core - shuffle : add option to disable timeout handler
refactor mQuickStepStartingRotation initialization to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code readability
camel - 13636 : camel - saxon - camel - xpath - add more log to camel - saxon - exchange
updated resource loading in NNDataSet . java to use DataResource class instead of a hardcoded path to improve code readability and maintainability
add a new test file EdgeCasesTokenizerTest . java to verify handling of escaped back - slash characters in Go tokens
added a check for the presence of the " atlas " property in the map and threw an exception if it is missing to ensure that the "
camel - 14136 : camel - core - remove propertyplaceholdershelper , since it be no longer use .
removed unused ReceiveSource and added levelDbDataSource . closeDB ( ) in BlockchainTest . java and removed unnecessary ReceiveSource instantiation in KafkaTest
refactor line processing in CoreMarkdownNodeRenderer to use a new method getLines to improve code readability and maintainability by using a dedicated method
updated import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code readability and maintainability
replaced ` ImmutableList . Builder < Object > ` with ` List < Object > ` in ` ProjectableSQLQuery ` , ` SQLBindings ` ,
added support for checking the " OpenJDK " JVM vendor in the VirtualMachine class to enhance compatibility with OpenJDK environments
added keepAlive ( true ) to the base URL setting in ReactorClient . java to ensure proper resource management and prevent potential memory leaks
replaced string literals with constants from ShaderProgram in MD5Renderer , ObjLoader , and ObjLoader to improve code readability and maintain
camel - 14237 : camel - spring - boot - allow to configure a custom camel property component . thanks to jbellis for the patch
refactor account retrieval logic in UnfreezeBalanceActuator . java to improve null safety by checking for null before accessing the account
update version number to 8.0 . 1 - alpha - > 8.0 . 0
updated return statements in Types . java to return unannotatedType ( ) instead of the t variable to ensure correct type handling for wildcards
refactor assertions in StorageGroupProcessorTest for clarity and consistency to improve readability and maintainability of the test code
updated various classes to include an Environment instance and modified class names for consistency to enhance environment management and ensure consistent naming conventions across the application
added a parameter ` waitbeforestart ` set to ` params . waitbeforestart ` in ` FFMpegVideo . java ` to
removed the ` _ skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructors to simplify the constructor and eliminate unnecessary dependency on
updated JUnit import statements and modified listIndex test methods in AccessorsTest . java to enhance test coverage and ensure correct behavior of list index
move framemap to lirgenerator so it can be use by other compiler .
updated imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and RunningContinuousIntegrationCondition to
fix the petal apothecary ' s petal apothecary do n ' t have water in it . close #
updated the ` toString ( ) ` and ` getLockID ( ) ` methods in ` Directory ` and ` RAMDirectory ` classes to improve
removed the method ` allowExperimentalOptions ( ) ` and simplified the condition in the ` if ` statement to simplify the code and improve readability
added overloaded methods for path assertions in BDDAssertions . java to improve flexibility and usability of BDDAssertions
refactor variable name from ` hp ` to ` hostField ` for clarity and consistency to improve code readability and maintainability by using a
change the log level from debug to warn for Kubernetes configuration files to provide a warning message when using multiple Kubernetes configuration files
added file upload handling logic and imports in FileUploadListActivity . java to enhance upload management and improve code maintainability
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to use it to improve code organization and maintainability by centralizing
replaced Span references with TraceMessageHeaders in StreamEnvironmentPostProcessor and its tests to improve code clarity and maintainability by using a more descriptive
updated the SelectFromDatabaseChangeLogStatement to use a computed column configuration instead of hardcoded strings to improve readability and maintainability of the
added ` getCurrentSchemaCommand ` method implementations for ` PostgreSQL10Dialect ` and ` getCurrentSchemaCommand ` in ` Postgre
added check for non - negative datamemberssize in internalpartitionserviceimpl . getpartitionspermember ( )
added error handling and scheduler state checks in ExecutionScheduleManager , ExecutionScheduler , and ExecutionSchedulerImpl classes to improve robustness by handling scheduler state transition
refactor InlineBox instantiation and conditional checks in BoxBuilder . java to improve code readability and maintainability
reformatted checkArgument calls in StatisticMap . java for improved readability to enhance code readability and maintainability
updated the method ` getStagedRectSlideEnd ` from ` 383 ` to ` 500 ` in ` TabletSplitToConfirmTimings
replaced hardcoded strings with key - based strings in WaveInfoDialog and PlacementFragment to improve maintainability and readability of the code by
updated the condition for KILL _ ROAD _ ITEMS to include plotArea and getOwnedPlotAbs to ensure road items are
added TouchExplorationStateChangeListener functionality to ShadowAccessibilityManagerTest and updated TouchExplorationStateChangeListener handling in ShadowAccessibilityManager to improve compatibility
pdfbox - 5328 : improve the performance of cmapsubtable . getsubtable ( )
replace usage of getPropertyAsString ( ) with getName ( ) in multiple classes to simplify code and improve readability
pdfbox - 4892 : use poifs . create ( ) instead of create a new one , a suggest by valerybokov
added imports for PS and PlotArea , and modified plot retrieval logic in Move . java to enhance functionality to retrieve plot objects based on specified arguments
updated regex pattern in TestWebHCatE2e . java to allow additional characters in version matching to ensure compatibility with newer versions and improve
updated the boundary check for count from 0 to 1 in the Filters . java file to ensure that the count does not exceed the expected range to
fix a bug in camel - kafka that cause the consumer to fail to start
replaced ` IsolatedClassLoader ` import with ` IsolatedClassLoader ` and added a check for the ` ok ` status in ` Javac
do n ' t repaint the view if the select item do n ' t change
fix checkstyle issue in generator / jms / springbatchproducer . java
added a method ` isAnimationFinished ` to check if an animation has finished based on the current frame number to improve animation handling by accurately determining if
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` in ` LoginMockMvcTests . java ` to verify
added null check for ` otherUrl ` in ` TimeLineCursorAdapter ` and modified the refreshing text in ` HomeFragment ` to enhance null
change parameter name from ` newValue ` to ` newValue0 ` and replace spaces with spaces in ` stopEditing ` method to improve code readability and
refactor ObjectHashSet class for improved performance to enhance performance and maintainability of the code
refactor equality checks in DataUtilities to use Arrays . equals for null checks to improve code readability and maintainability by utilizing Arrays . equals
fix # 12770 , allow for deletion of enchanted book . close # 12770
add unit tests for asynchronous resource operations in the microprofile server to ensure proper functionality of asynchronous operations in the application
renamed ` targetFlatHeaderMap ` to ` targetUserHeaderMap ` and updated related references to improve clarity and consistency in naming conventions related to
added debug log for sendfailedexception in order to make debug more verbose .
replaced ` resetTaskItemView ( ) ` method with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` TaskItemView
added tests for retrieving partitions with multiple batch size batches in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct behavior of partition retrieval
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed ArrayList to List in OCFile and OCFileListAdapter classes to improve performance by using a more generic collection type
corrected the index used in the removeViewInLayout method from 1 to 2 to ensure the correct view is removed from the correct position
removed unnecessary package imports from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to simplify the configuration by eliminating unnecessary dependencies
modified the S3Request constructor to use the ' false ' parameter instead of ' true ' for the ' expiresSeconds ' parameter to ensure that the
fix the issue that jfxradiobuttonskin do n ' t update the animation when the animation be n ' t start
updated the condition for parsing the Dewey number and added an exception throw for invalid dewey numbers to improve error handling and provide clearer
added a static string variable ` categorySetString ` and modified the return logic in ` MwVolleyApi . java ` to remove the "
corrected a typo in the assertion message from " close control status code 1111 " to " close code 1111 " to ensure consistency in
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader and TestVirtualWebappClassLoaderWeaving to ensure robust
refactor : remove redundant code in persistentattributetransformer . apply patch by jbellis
pdfbox - 4892 : do n ' t ignore non - numeric page label
added a new file TestPorterStemFilter . java to implement a test for PorterStemFilter functionality to ensure the PorterStemFilter functions correctly
add index . postbatchmutateindispensably to write index update if the mini batch operation be successful
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch .
fix concurrentmodificationexception in chatwindowmanager . close
removed redundant touch calls in multiple Java files to streamline code by eliminating redundant touch operations
updated HgCmdLineInterface to include " - mardu " for untracked files and modified untrackedFiles method implementations to enhance
camel - 10715 : camel - netty - add timer to the producer so we can reuse the timer .
made fields ` intensity ` and ` color ` final in ` DirectionalLight ` , ` PointLight ` , and ` SpotLight ` classes
added calculations for width and height in X11GraphicsConfig and WGLGraphicsConfig classes to ensure minimum width and height values are at least 1 to
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes and corresponding tests to ensure
added a new ` AnnoFilterTreeSet ` class and methods to handle inner classes in the ` ClassFinder ` class to enhance the functionality to
modified the logic for determining newLength in BytesColumnVector . java to handle integer overflow more gracefully to ensure proper handling of overflow scenarios and
fix flaky writebehindmapstorewithevictiontest
updated the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and
ggb - 2121 add isequal ( polyfunction ) to check if two function be the same
added a null check for the table before retrieving the column class to avoid potential NullPointerExceptions when the table is not initialized
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException when instantiating the class
added new methods to ` DistBuildConfig ` and refactored related classes to use ` DistBuildConfig ` instead of ` ConfigPath
change default value of isdoubleentryenabled to false , add warning and qif to export dialog
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable the test due to a broken state
change joinstatus to boolean and fix bug in mergejoinbatch
removed the method ` getAutodeps ( ) ` from the ` JavaLibraryDescription ` class to streamline the code by eliminating unnecessary dependencies
added FLAG _ ACTIVITY _ NEW _ TASK flag to Intent flags in LauncherTimelineCursorAdapter . java to ensure proper intent handling during task
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide functionality for filtering results based on pagination order
updated repository index assertions from 0 to 3 in RepositoryConventionPluginTests to reflect the correct number of repositories in the test
add a new task to handle the creation of an affiliate node in the pubsub cluster .
do n ' t use requestutil for uri normalization in taglibraryinfoimpl
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to ` buildUserProfileByClassComplete
refactor CacheKey class to use Array . get for array manipulation and standardize formatting to enhance performance and readability of cache key updates
refactor file type detector implementations across multiple filesystem providers for improved functionality to enhance the functionality of file type detection across different operating systems
added wsSession . close ( ) method to TestWsWebSocketContainer . java to ensure proper resource management and prevent potential memory leaks
updated ShadowVirtualDeviceManagerTest to use getVirtualSensorCallback ( ) instead of getParams ( ) and added new methods for VirtualSensorCallback and
added a condition to check if the context is not equal to the specified context before execution in HttpSessionSecurityContextRepository to ensure that the session does not
http : / / issues . apache . org / jira / browse / amq - 4892 - improve address lookup logic in netutil .
renamed the constant ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` and updated references accordingly to improve code readability and maintain
updated references in KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and XMLSignatureInput classes , and improved error handling in XMLSecurityRuntimeException
added a flag to track if the icon change listener has already been installed and updated icon change listener behavior to ensure icon change listeners are only added when
added Russian language support to the Language class to support Russian language support in the application
hhh - 14136 use nanosecond instead of second for duration in sqm query
disable frame state verification in substrategraphkit . java
added teardown method and utility methods for resetting system properties in RobolectricTestRunnerTest and TestUtil to ensure proper cleanup of test environments
added support for loading " org . slf4j . " in ViewClassLoader and corresponding test cases to ensure proper class loading and validation of SLF
added a check for " jar " packaging in ChangePackaging . java and implemented a test for it in ChangePackagingTest . java to ensure
fix flaky test in filedownloadviahttpgettest and filedownloadviaproxytest
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer
refactor default units handling in JogService and related classes to use preferredUnits instead of defaultUnits to simplify unit management and improve code readability
updated date formatting in DatePatternConverterTest to use UTC timezone and adjusted expected date formatting to ensure accurate date representation based on the UTC timezone setting
removed unnecessary return statement in Terminator . java to improve code readability and maintainability
improve error message when file system can not be resolve due to invalid uri .
replace scheduledexecutorservice with executorservice . newsinglethread ( ) for show tracking notification
fix ftp test failure on slow ci server
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve thread - safety and performance in concurrent scenarios
added an ` ignore ` method to multiple log classes and implemented it in ` LoggerLog ` , ` Slf4jLog ` , and `
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary casting of damage values to byte in BukkitWorld . java to simplify code by removing unnecessary type casting
added a call to ` GraphicsUtil . cleanImage ( img ) ` in ` PanelManager . java ` to ensure that the image is properly cleaned
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for directory management in Solr to enable support for MMap and SimpleFS directories in Solr
added null check for ` ic ` before creating a ` cleanUpColor ` instance to avoid potential NullPointerExceptions when ` ic ` is null
updated the assertion message in QueryEqualityTest to reference " graphTerms _ s " instead of " field1 " to ensure the test correctly reflects the
refactor ExtendedOperatingSystemMXBeanImpl to improve code structure to enhance maintainability and readability of the code
added functionality to install left commands in the SideMenuBar based on the command ' s properties to enhance the functionality of the SideMenuBar by allowing users to
added a new boolean variable ` advanceWindowed ` and modified ` setUpWindow ( ) ` calls in ` TweetActivity ` and ` UserProfile
added SybaseDatabase support to the primary key generation logic to support Sybase databases in the database cleanup process
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] reset the lastrecordingposition when the leader be ready .
replaced invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and implemented shouldDelayChildPressedState (
added a return statement in NearCachedClientMapProxy . java to ensure proper handling of client - related operations
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
[ java ] gracefully shutdown http server in listenhttp . stop ( ) .
camel - 16258 : camel - aws2 - s3 stream upload : fix the npe of the s3streamuploadproducer
[ hotfix ] [ runtime ] remove unused parameter _ tm _ id from taskmanagermetricshandler
drop network _ offerings unique _ name from 226 to 227 db upgrade
added a new test class ` TestThriftCLIServiceSecurity ` and refactored password handling in ` TOpenSessionReq ` to improve security checks
added a new private variable ` maxEnergyLimit ` and updated its assignment logic in ` VMActuator . java ` to allow dynamic adjustment of
added maxInMemorySize property and its getter / setter in HttpClientProperties . java and modified webClientPlugin method signature in HttpClientPluginConfiguration . java
refactor Cache class to improve performance to optimize performance and reduce memory usage
added two new Cucumber test classes , RunCucumberTest , StepDefinitions , and StepDefinitions , to the com . example package to
added error handling for parsing double values in TypeJsonUtils and corresponding test cases in TestArrayOperators to ensure proper handling of NaN and infinity values
removed test cases for hex strings in Utf8StringBuilderTest . java to streamline test cases for better readability and maintainability
added a check for parameter sets before appending them to the string buffer and introduced a new method to check if parameters are set before appending them
camel - 14146 : validate maximum number of output on loadbalance to avoid illegalargumentexception
updated the assertion in TestIndexWriterExceptions to ensure that the maximum number of buffered documents does not exceed a specified limit to ensure that the test
replaced ` putUnencodedChars ` and ` putUnencodedChars ` methods with ` update ` methods for resource APK , primaryDex ,
added static methods for enum value , integer , and long in AsmRuntime . java to enhance flexibility and maintainability of enum handling methods
add new is _ * / is _ * / is _ * tag to forgebiometagsprovider . java ( # 1076 )
use an executorservice to request image , instead of create a new asyncimageloader .
refactor BaseTableUpsertMetadataManager to use protected access modifiers and update preloadSegments method signatures to improve encapsulation and simplify the preloading
updated "              
replaced instances of ` vid . getImage ( ) . equals ( vid ) ` with ` vid . hasImageEqualTo ( vid )
camel - jbang - run should use -- repos a part of the run command .
added handling for NaN scores in CrawlDbReader . java to improve robustness by preventing errors when the score is NaN
added a cleanup method in OnStartupTriggeringPolicyTest to set the last modified timestamp for the target file to ensure the test accurately reflects the last
use focusinwindow ( ) instead of focusinput ( ) in filterconditioneditor and fix focus issue in findaction
[ hotfix ] [ core ] implement autocloseableasync in checkpoint cleaner
added a new file ` XPathWhiteSpaceTest . java ` that tests XML schema validation to ensure proper validation of whitespace characters in XML schemas
fix ( bonsai ) : do n ' t persist trie log if rollback be enable
refactored the FilledNewArrayInstruction class implementation to improve code readability and maintainability
added a timeout of 60 seconds to the SimpleNetworkTest methods in SimpleNetworkTest . java to allow more time for tests to complete before running tests
modified the return statement in OCFile . java to check if parentPath ends with a slash instead of substring to improve clarity and correctness of
added a failure message for loading the skin file in JavaSEPort . java to improve debugging by providing feedback on failure to load the skin file
added a ` markDirty ( ) ` method and a ` isValid ( ) ` method to the ` LgoGroupedLevel2Update ` class
added a new constant ` UNDEFINED ` in the ` Result ` class and updated the return statement in ` TestStep ` to use it to improve
updated assertion to check for NullPointerException instead of PersistenceException in TestTransactionCallback . java to ensure proper exception handling for null pointer exceptions
change uploadjobmultipartoperation to implement serializabledataserializable
[ hotfix ] [ runtime ] do n ' t swallow ioexception when recover data from the job journal .
do n ' t show summary level for folded node in verticalnodeviewlayoutstrategy
removed the volatile keyword from the ` pos ` variable and added a new ` sizeMask ` variable and modified the ` ensureAvail ` method
added @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to mark these tests as ignored due to
modified the calculation of endpoints and messages array in StorageProxy . java to ensure proper handling of endpoints and prevent potential ArrayIndexOutOfBoundsException
removed unnecessary whitespace in FileManager . java to improve code readability and maintain consistency
updated TransformFunctionType to include string literals for various mathematical operations to enhance clarity and maintain consistency in naming conventions
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` to the ` Element ` class to provide access to the ` getSimpleName (
updated RFC3280 to RFC5280 in multiple Java files to ensure consistent formatting across the codebase
[ java ] fix type cast exception in searchannotationvisitor .
replace HashMap with SparseBooleanArray for selected items in ListActivity and NoteAdapter to improve performance and performance of item retrieval in the list
refactor conditional statements for time upper bound checks in DirectUpdateHandler2 . java to improve code readability and maintainability
updated ConfigFileApplicationListener to use ResourceUtils for URL handling and added a new test for absolute resource paths to ensure proper handling of file paths and
updated ` PreviewPositionHelper ` initialization to accept a ` Context ` parameter and modified its usage in ` TaskThumbnailView ` to improve flexibility in
[ java ] do n ' t publish new leadership term if it ' s the last one .
fix pmdcoveragetest by use assertequals instead of assertfalse
refactor ByteArrayInputStream logic and add a new Skip class for testing to improve readability and maintainability of the code
refactor conditional check for promptUpdate in UpdaterTask . java to improve readability and maintainability of the code
peer : do n ' t download chain download if there be too many header .
added " rt . jar " to the list of standard libraries in ModClassLoader . java to support additional libraries related to the lwjgl jar
do n ' t send hello message if local node be n ' t ready
[ geot - 5582 ] use new configs instead of hard - coded string in granule catalog
added a check to ensure the response is committed before sending an error to improve error handling by logging warnings when the response is already committed
refactor conditional checks in HttpSession . java to improve readability and maintainability to enhance code clarity and maintainability by simplifying conditions
modified fade - out behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorialController to improve user
log prefab name instead of error for unknown prefab
updated ScimGroupExternalMembershipManager initialization and bootstrap setup in LdapMockMvcTests . java to ensure proper configuration of external groups for users
updated thirtyDays calculation in FreezeBalanceActuator and added validation in TransferActuator to ensure minimum amount is at least 1 TRX
replaced ` lastIndexOf ( ' / ' ) ` with ` lastIndexOf ( File . separator ) ` in ` FileResolverTestBase . java ` to ensure consistent
ggb - 260 do n ' t show input help panel if there be no error .
updated GpsMainActivity to retrieve session description instead of an empty string and modified service intent handling in AnnotationViewFragment to enhance user experience by providing
added a conditional check for the number of pages in the document to ensure that the pdf file is saved and displayed when the number of pages is not
add androidnativebufferallocator , deprecate androidbufferallocator
added checks for flag names starting with " ! " in Main . java and PrimaryItem . java to ensure proper handling of flag names and their corresponding
added a NOPMD comment to the ResultSet initialization in JDBCHistoryCache . java to improve code readability and maintainability
updated comparison from string " ITEM _ USE _ GRANT _ SELECT _ REWARD " to ItemUseOp . ITEM _ USE _
refactor QueuePriorityTest to use a list for expected tasks and update the toString method in PriorityElement to improve clarity and maintainability of the test
fix unit test for createaffinitygroup and createaffinitygroup
added a null check for the main command in Main . java and updated the argument check to include the HELP option to ensure proper handling of help
increased the initial capacity of LightOutputStream in multiple classes from 7 to 4 to optimize memory usage for better performance and performance
changed the visibility of the Scanned class from static to public to allow access to the Scanned class from other packages
added ` showBlank ` option to ` ClassWriter ` and created a new class ` T8032819 ` with various test methods to enhance
removed an assertion check for the length of sn in the Person class to streamline code by eliminating unnecessary assertions
added null check for file extensions in VirtualFile . java to ensure robustness by avoiding potential NullPointerExceptions
replaced return statement with continue statement in ContactRightButtonMenu . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in simpleslot and slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver . java to improve code readability and maintainability
refactor PlainSocketImpl to use a delegate object for FileDescriptor and ensure proper resource management to improve code clarity and ensure proper resource management during socket binding operations
added functionality to manage and remove removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve media management by managing removed items effectively
updated log message from " the center of element " to " the element ' s in - view center point " to clarify the purpose of the log
added a new file ` bug4865918 . java ` implementing a GUI test for a scrollbar to address bug 4865918 related to
replaced the instantiation of ` VelocityEngine ` with direct usage of ` Velocity ` to simplify the code and improve readability
replaced specific imports with a wildcard import and added a new case for group triggers in QuestCommand . java to enhance code readability and
add file chooser for select gnucash account file in account activity
added Lombok ' s @ ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enable the use of Lombok ' s @
updated CloudService to use a constant CONFIG _ URI instead of a hardcoded value to improve maintainability and readability of the service configuration
removed setViewportComponent and setJScrollPane methods from BrowserPanel . java to streamline the code by eliminating unnecessary method calls
added KEYCODE _ FORWARD _ DEL key handling and updated event processing in LwjglInput , ParticleEditor , and TW
updated MoreIndexingFilter to conditionally retrieve MIME type parts based on configuration to enhance flexibility in indexing based on user - defined settings
added regex pattern to extract author information from comment text to improve code readability and maintainability
added new constants for creating and deleting tables in MetricsConstant . java and updated corresponding test cases in TestMetaStoreMetrics . java to improve clarity and
updated HiveDatabaseSchema and HiveSchemaFactory to incorporate DrillHiveMetaStoreClient and SchemaConfig to improve database access handling and error logging for
updated ` oauth2LoginLinks ` method to accept ` queryParams ` as a parameter and added error handling in ` oauth2LoginLinks ` to improve
updated Hijrah calendar name from " Hijrah - umalqura " to " Hijrah - umm al - Qura
added support for Firefox in the WebAudioWrapper to ensure compatibility with non - Firefox browsers
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the empty constructor in ` InterceptorConstants ` to enhance functionality by
added a condition to read the " DEFAULT " table in Parser . java and updated TestCompatibility . java to specify default charset to ensure compatibility with the
updated method calls in WriterRecordBatch and StreamingAggTemplate for consistency to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in executiongraph
added a boolean field ` hasFrom ` and its getter / setter in the ` Delete ` class and modified ` DeleteDeParser ` to conditionally
replaced success status checks with multi - status checks in SynchronizeFolderOperation . java to improve handling of multi - status files and enhance error logging
refactor RecipeScheduler to use a new utility method for checking applicable tests to improve code readability and maintainability by centralizing test filtering logic
updated regex pattern for parsing logLine in LogAnalyser . java to allow colons in timestamps to enhance accuracy in parsing log entries
add integration test for google cloud
fixed - rsearch . range ( ) method in redissonsearch . range ( ) method do n ' t support inclusive / exclusive score . #
add ` ` no ' ' and ` ` select change ' ' option to ` ` cc ' ' select list
added a null check before adding the global ID in IfcModel . java to avoid potential NullPointerException when global ID is null
replaced ` equals ` method with ` areEqual ` for comparison in ` OptionalAssert . java ` to improve comparison accuracy by using a custom comparison strategy
modified memory management in NoNewLineParagraphCssApplier and ParagraphCssApplier to conditionally set the last margin based on the presence of 
added a new file TestArrayCopyToFromObject . java that implements a test method for array copy operations to ensure that ArrayStoreException is thrown
removed quotes from the path strings in the BuckPythonProgram . java file to standardize the output format for better readability and maintainability
fix checkstyle issue in io / protocol / ajp / ajpprotocol . java and ajpprotocol . java
make craftinghelper . findfiles ( modcontainer , processor , visitallfiles ) return success instead of false .
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test case due to unstable test case
added null check before calling client . doRequest ( ) in TestInternalInputBuffer . java to avoid potential NullPointerException when the client is not initialized
refactor autoloadCall method to accept a lowerName parameter and update lock management logic to enhance class loading flexibility by allowing multiple locks to be
added server version comparison logic in CustomPlaybackOverlayFragment and updated HLS support check in PlaybackController to ensure compatibility with updated server versions and improve
replaced direct calls to ` new OneKDC ( etype ) . writeJAASConf ( ) ` with direct calls to ` new One
added a boolean variable ` jsr250AttributeFound ` and updated the return logic in ` Jsr250Voter . java `
updated import statements in MP4Parser . java to include specific boxes and removed unused imports to streamline dependencies and improve code clarity
added a new constant HS2 _ PROXY _ USER and modified session parameter handling in ConnectionFactory . java to include the proxy user to enhance
camel - 14156 : camel - hdfs - add snappy codec to camel - hdfs
added a 1 - second sleep in the HttpClientTest . java file to ensure proper synchronization during test execution
fix bug # 48537 - remove empty cell from xssf formula
updated glyph positioning logic and improved text formatting in GlyphLayout . java and BitmapFontTest . java to enhance glyph rendering accuracy and improve test coverage
removed hardcoded paths and constants in Fabric8IstioIT . java and updated container initialization in Commons . java to streamline code
replaced ` ReportPlaybackStartAsync ` with ` reportPlaybackStart ` and ` ReportPlaybackProgressAsync ` in both PlaybackController . java and Utils
fix potential resource leak in simpleauthority . patch by jbellis
check if a key exist in the recordstore before try to evict it .
change bitwise operation from bitwise AND to bitwise OR in ResponseFlag . java to ensure correct behavior of length bit handling
add read policy to print out the list of community , not the collection .
added a SoftReference to cache CompositeFont instances using a ConcurrentHashMap to improve memory efficiency by caching CompositeFont instances in a concurrent environment
initialize prefHeight to 0 and adjust the calculation of the node ' s height to ensure that the node ' s height is correctly adjusted based on the
drools - 118 : dmn feel should provide more informative error message
removed unused import statements from multiple Java files to clean up the code and improve readability
changed method visibility of finishRunningRecentsAnimation from private to public to allow access to finishRunningRecentsAnimation from other classes
added null checks for node ID and type in ElementFactoryImpl , modified node value handling in ImportContainerImpl , and updated ImporterGDF to
add warn log when drop unknown response
nifi - 13636 : ensure that we do n ' t create a 2 - bit flowfile that be large than the bin limit
replace Geometry . findClosest with a loop to find the closest CoreBuild by its destination coordinates to improve accuracy in finding the closest enemy core
added handling for CONTENT _ LENGTH header in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateTestTest to skip content - length
added handling for CLASS and CHAR cases in Java2TypeScriptTranslator and updated tests in SyntaxTests and Literals to improve translation functionality and ensure correct
updated parameters and sample sizes in FilterFactory , ChannelizerViewer , and PolyphaseChannelManager classes , and modified sample sizes in Channelizer
hbase - 26144 canary : add - allregions option to run all region on a regionserver
[ hotfix ] [ cassandra ] remove unused nodemodule from cassandraconnectorfactory
added a call to reset the cursor position in KahaDBStore . java to ensure proper handling of cursor position in the order index
bugfix : set minimum size of the call dialog to the minimum size of the call window .
fix blockfalling to not lose the state of the world gen .
refactor testhttpmirrorserver to be static and make it static
added dependency injection and refactored entity removal logic in KerberosPrincipalDAO to improve data management and ensure proper cleanup of entity entities
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method call by removing unnecessary parameters
do n ' t increment maintain in aprendpoint . poll ( ) if the poller throw an exception .
updated the BuildException message in AndroidGradleBuilder . java to include a note about the installation of the Monetization setup key to enhance clarity
updated ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and modified ` isInsideTranscode
[ drools - 141 ] add support for spring - boot - inf . classes .
added an assumption to check for the Android version in CheckIndexTest to ensure compatibility with versions 19 or higher
removed the context parameter from the assignTargetsForSplitScreen method and refactored related code to simplify the assignment logic by eliminating unnecessary context parameter
refactor LeaderLatch class to improve code organization to enhance maintainability and readability of the code
added methods to initialize Kerberos NOKNARK parameters in SolidityNodeHttpApiService to ensure proper initialization of zk parameters for S
make transactionconfidence . getdepthinblocks ( ) thread - safe and add getdepthfuture ( int )
refactor variable and method names from ` longtitude ` to ` longitude ` for consistency and clarity to improve code readability and maintainability by
set default platformName to " ios " in JavaSEPort . java to ensure compatibility with iOS in the application
refactor PageEditClient class to improve code readability to enhance maintainability and facilitate future updates
make sure mozDash and webkitLineDash do n ' t appear in the same line as mozDash and webkitLineDash
refactor CreateVisibleSignature class for improved clarity to enhance maintainability and readability of the code
added error handling around the nextOutgoingFrame method in AbstractExtension . java to improve robustness by handling potential exceptions during frame processing
refactor classloader retrieval to use AccessController and PrivilegedAction for improved security to enhance security and maintainability of the code
added logic to update the parent of feed categories based on the user ' s category ID to ensure that the parent category is removed when it does not
add miss title for update , mode , library , and library contrib dialog
added a vwap field to the Ticker class and its associated getter and setter methods to enhance the Ticker class by including the vwa
added support for a no widgets view in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes to improve user experience by providing a clear
added rendergraphapi class to provide a way to add tint to the render graph .
added primary color setting for messaging in NCFirebaseMessagingService to enhance visual consistency by using the primary color theme
refactor ShadowUsbManagerTest . java for improved readability to enhance maintainability and clarity of the test code
add extra logging to track the number of evaluation per - user
added a call to ` this . selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is updated correctly
updated the calculation of ` bounds2 ` to use ` Math . max ( 1 , 1 ) ` instead of casting to ` int ` to
replaced instances of HashMap with LinkedHashMap in multiple Java files to maintain insertion order for consistent iteration order
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to utilize a more efficient closure management mechanism
migrate camel - core to junit5 - api for unit test base on user forum issue
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , to implement a WebSocket integration test for
[ dsm ] remove obsolete dspacemetadatasourceservice # getservicebyname test
refactor authentication comparison logic in AbstractCasWebflowEventResolver . java to use a new method to improve code readability and maintainability by reducing
added a check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to ensure
replaced calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` to improve code readability and maintainability by reducing
added a new annotation ` @ Insecure ` and modified the ` MessageBuffer ` constructor to use it to enhance security by restricting access to secure
added new Hive configuration variables to HiveConf . java to support additional Hive configuration options
initialize scopes and policies with a new HashSet instance in ResourceSet . java and add null check for policies in DefaultResourceSetService . java to ensure
made the ` decrefOnClose ` variable final and modified the constructor of ` MultiReader ` to accept a collection of ` ReaderFinishedListener `
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 classes to
simonstewart : refactor the selenium test to use setvalue ( ) instead of clear ( ) and sendkeys ( )
replaced the static method ` $ Gson $ Types . getFirstTypeArgument ` with a direct method call to ` getFirstTypeArgument ` across multiple classes to
changed return types of keySet ( ) and values ( ) methods in Int2IntHashMap from Set < Integer > to KeySet and Collection < Integer
added a duration parameter to the FlipTransition constructor and updated related methods to allow dynamic adjustment of the background color based on its value
removed trace logging for the condition checking subsAreValidForStreaming in DLNAResource . java to clean up the code and improve readability
bump version to 9.10 . 0 and bump version number to 10 .
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages related to multi - release JARs to
[ java ] add support for java 16 and java 17 validator .
updated padding settings for the background view based on replies size and index to improve visual spacing for better user experience
fix partitionbackupreplicaantientropytask to call the callback if there be no namespace
added metadata field and getter / setter methods to SeedUrl and SeedResource classes , and implemented metadata handling in SeedUrl and Seed
added a null check for the declaration before cloning the Pattern object to ensure that the Pattern object is only cloned when the declaration is not null
updated TestCoprocessorWhitelistMasterObserver . java file to improve test coverage for whitelisting functionality
ww - 4071 add package name to action name in validator manager
added type casting for null values and updated assertions in IterableTest . java to ensure type safety and correct type casting for null values
added ` stream ( ) ` methods to ` MapIterable ` and ` PrimitiveObjectMap ` classes and implemented a corresponding test in ` MapIterableTestCase
return a cloned version of notifInfo instead of the original to ensure that the original notifInfo is not mutated
update key handling in AppW . java to use commandConstants instead of commandConstants to improve readability and maintainability of command key checks
refactor AEADBlockCipher class for improved readability to enhance maintainability and clarity of the codebase
added a new method ` isVariableLocal ` to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap
added a null check for the resource ID in PackageResourceTable . java and changed the default resource mode in RobolectricTestRunner . java to
added a check for ` ulSize ` and ` ulPos ` before retrieving and setting underline metrics in TrueTypeFont . java to ensure proper handling
refactor SignPlugin to accept a List of HttpMessageReaders instead of a static final list to improve flexibility and maintainability of the SignPlugin
refactor Int2ObjectCache . java for improved performance to enhance performance and maintainability of the code
added validation check for MavenDeployer in StandardMavenAuthenticationProvider . java to ensure that MavenDeployer instances are validated before proceeding
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
added SSL context initialization and modified HTTP cookie handling in LinkyHandlerFactory and EnedisHttpApi to improve SSL error handling and streamline cookie
refactor HiveFunctionRegistry to use Streams for function name replacement to improve performance and readability of the function registry
corrected the casing of the ` ` xid ' ' and ` ` service ' ' to ` ` service ' ' and ` ` instance
modified the ` getBuildTargetForAlias ` method to include a potentiallyFlavoredAlias parameter and adjusted the return logic accordingly to improve alias handling and
camel - 13636 : camel - olingo2 : do not process empty odatafeeds in camel - olingo2
added a map for equivalent versions and modified version retrieval logic in MetaStoreSchemaInfo . java to enhance version handling by associating versions with their respective
server : fix npe when expunge a vm that do n ' t exist
added @ Deprecated annotations to multiple methods in AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
refactor ONDashClockExtension and AlarmReceiver to utilize a new method for obtaining note titles to improve code readability and maintainability by
renamed GoogleAuthUserConfigTable class to GoogleAuthUserConfigTableTest and updated test assertions accordingly to improve clarity and consistency in naming conventions and
replaced ` commit ( ) ` with ` apply ( ) ` in multiple classes and updated method names for clarity to improve code readability and maintainability
added TestIdleListener to the StandardSession constructor in AsyncTimeoutTest . java to enable tracking of idle state during tests
[ hotfix ] [ test ] fix bigqueryio integration test
set the icon background resource and reset the background in HotseatPredictionController . java and BubbleTextView . java to improve the visual appearance of the
mondrian : fix typo : ` ` flushafterquery ' ' should be ` ` flushafterquery ' '
[ native ] add native system test for nativeworker
fix the logic of getactivefeatures ( ) in LIMEExplanation . java to handle both ALL _ OUTPUTS and ALL _ OUTPUTS keys correctly
added support for passing arguments in the AppleSimulatorController and InstallCommand classes to enhance functionality by allowing command - line options for running tests
refactor code to use a local variable for the area instance instead of directly accessing the current paragraph to improve code readability and maintainability by
added a check for the state of the manager in both ContainerBase . java and StandardContext . java to ensure that the manager is only available when
added clipping to outline to the background view in QsbWidgetHostView to enhance visual appearance of the widget in the UI
added flag conversion tracking and logging functionality in SQLManager and PlotArea classes to track conversion progress during flag processing and improve flag handling in plots
updated import statements and modified depth handling logic in FloatingTextRenderer . java to improve rendering accuracy based on whether the floating text is occupied
fix typo in class name for linux backend
added getter and setter methods for propagationBehavior in JdbcAggregationRepository . java to allow customizable propagation behavior for transaction templates
add support for l1 and l2 regularization in the base layer validation
added exception handling for read and write operations in AbstractChecker . java to improve error logging and ensure proper resource management when exceptions occur
changed the visibility of the colorStack array from static to instance variable to allow access to the colorStack variable from other classes
updated method calls from ` getMappedStatement ` and ` hasStatement ` to ` true ` in ` getMappedStatement ` and ` hasStatement `
convert the identifier and currency to lowercase for the BTCEDepth retrieval to ensure consistent handling of case - insensitivity in depth retrieval
updated the channel state assertions in ChannelStateTests from 0.0312716 and 0.00 to 0.0322700 and 0.03000 to enhance test
remove the ` versionedhashes ` field from the ` enginepayload ` parameter
set trigger price to an empty string and call ontriggerpricetextchanged ( )
do n ' t redirect to home page when edit student feedback submission
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 24499 fix a bug in hstore . getallpartitions ( ) when the result be null
fix : savemanybeans . setmanyproperty ( ) do n ' t set loaded property for new or dirty bean
added a new boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` , and modified the session
added new static methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to implement functionality for
replaced specific imports with wildcard imports for java . awt and javax . swing , and added firePopupMenuWillBecomeVisible method to manage
updated the initialization of the ` insert ` variable in ` StressProfile . java ` to use ` HashMap ` instead of ` HashMap ` to ensure
replace scala . collection . collection . java . asscalaiterable with scala . collection . collectionasscalaiterable in javatestwrapper
add more logging to help debug test failure
added a warning log for missing properties file in DefaultEnvironment . java to improve error handling and provide clearer feedback when properties file cannot be loaded
add try - with - resources to avoid resource leak
added a condition to check if the network interface supports multicast and is up before proceeding to ensure that only active network interfaces are processed
updated sqlCommand initialization to include a length parameter to ensure correct handling of SQL commands with specific lengths
updated methods in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to set the latest consume time and free time for energy to
added a method to set an invalid session strategy and refactored related logic to improve clarity and maintainability of session management configuration
add more detail to failedserializationerror message in case of empty index
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the correctness of the ` containsKeys ` assertion method to ensure
updated JdbcProxyGenerator to use a delegatorGenerator and added JDBC4TemporaryPreparedStatementMethods interface to enhance code readability and maintainability by
added a new method ` ensure ` to ` ServerWebSocketContainer ` and updated related tests in ` DirectUpgradeTest ` to improve WebSocket container management and
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to simplify the code and improve performance by using a more
pdfbox - 4892 : use point2d instead of point2d . float , a suggest by valerybokov
replaced the instantiation of an empty array with a static final EMPTY array in Method . java to improve code readability and maintainability by using a static
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the ` MockAuthenticationManager ` to conditionally return the
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to allow the listener to receive specific job execution details
updated the file permission check in SharedLibraryLoader . java to ensure both writable and executable files are checked
chore ( regen ) : update protoc to v3.15 . 3 ( # 43 )
jmeter - 13636 : use sampleevent instead of sampleresult to save the event
added new constants for battery level , annotation , time with offset , and profile name in BundleConstants . java and updated CustomUrlManager . java to
use map instead of hashtable in searchexpression . applyrule ( )
ggb - 260 move widget and audio from euclidiancontroller to euclidiancontroller
updated texture filtering and texture dimensions in ProjectiveTextureTest . java and modified texture dimensions in JoglGraphics . java to enhance texture rendering capabilities and
refactor ` setResourceToDelegate ` method to return a ` File ` object instead of void to improve code clarity and ensure the output resource is
camel - 14136 : fixed the issue that camel property component intercept from property placeholder be not resolve in the uri .
updated the condition from ` > ` to ` > = ` in ` ActionScheduler . java ` and modified the assertion in ` TestActionScheduler .
updated the initialization of the dbg _ zip file to use a temporary directory and added a null check for the debug _ log before replacing it to
change renderingdebugconfig to use nui . config . hidden instead of worldrendererimpl .
added pipe . resetgate ( ) to allow gate to be reset
refactor TestSupplementary class to use a try - finally block for locale management to ensure locale is reset before running tests
updated the random color value in the Team constructor from 0.5 to 0.4 to enhance the randomness of the team ' s color representation
changed the type of ` activeMatchedStates ` from ` HashSet ` to ` ArrayList ` and added logging checks for logging level to improve code efficiency and
updated the condition for checking the expected exceptions annotation in SoftAsserts . java to improve clarity and correctness of exception handling logic
updated JSON return message to include the exception message and added error logging for plugin saving errors to improve error handling and provide more informative logging for plugin
[ hotfix ] [ test ] improve call tree csv format for test
added null checks and refactored note handling in DetailFragment . java to improve code robustness and prevent potential NullPointerExceptions
added peakTasks tracking and adjusted load calculation logic in AssetManager . java to ensure accurate loading based on the number of loaded tasks
simonstewart : enable native event on window for the firefox driver
added metadata handling for nutch score and fetch interval in Injector . java to improve flexibility and maintainability of the score injection process
updated imports from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in ScimExternalGroups
updated the condition in CoreContainer to check if the zkController is null and added a method to retrieve schema sharing status to improve code clarity and ensure
updated method calls from ` sizeInBytes ( ) ` to ` sizeInBytes ( true ) ` across multiple classes to ensure accurate representation of segment
updated assertions in VersioningTest . java to check for null version1 _ 2 to ensure that the version1 _ 2 object is not null before
updated SQL queries to include additional types for domain columns and added new test cases for domain column validation to ensure correct handling of non - null domain columns
[ java ] do n ' t set the result of appendnewleadershiptermevent when the leaderheartbeatinterval be n ' t set .
removed the buildMediaType method from WebClientPlugin . java to streamline the code by eliminating unused imports
refactor method names from ` fillUsingLengthPrefix ` and ` fillUsingLengthPrefix2 ` to ` fillSlice ` and ` fillSlice `
fix ( iow ) : cleanup after iow and major table compaction
ptableimpl : fix npe when set immutablestoragescheme and qualifierencodingscheme be null
added new classes PojoProducersCustomized and RestProducersCutomized to implement customized components for Pojo and Rest services
replaced hardcoded string " cache " with a constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability
add miss register ( ) call to aesgcmsivkeymanager
add wooden slab to the ore dictionary , fixes # 322
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the session management components
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from the ` UndefinedSymbolsLinker
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14397 fix test failure on oracle and mariadb
updated the coordinate calculation in the spriteBatch draw method to correct the positioning of the sprite batch
refactor plot positioning logic in PlayerFunctions . java and update string concatenation in PlotId . java and WorldGuardListener . java to improve clarity
added a deprecated static final version constant LUCENE _ 8 _ 5 _ 0 to indicate that the version is outdated and should no longer be
updated print statement formatting in SSLSocketImpl . java to improve code readability and maintain consistency
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing functionality for
refactor dependency type handling from String to SemanticGraphCoreAnnotations for improved type safety to enhance code readability and maintainability by using an enum for
refactor methods in NoSuchBuildTargetException and ParseContext for improved clarity to enhance maintainability and readability of build target descriptions
replaced the method call from ` testFromMain ( ) ` to ` test ( ) ` in ` MyChild ` initialization to simplify the test execution
updated the initialization of ` configBlocks ` from the length of ` Block . blocksList ` to ` 256 ` and modified the loop iteration logic to
updated logging statements and improved version handling in BukkitMain . java and PlotSquared . java to enhance code readability and maintainability while ensuring compatibility with
updated SQL statement escaping logic for PostgresDatabase in AbstractSQLChange . java and added a corresponding test in AbstractSQLChangeTest . java to ensure
added methods ` ofAll ( Iterable < ? extends T > items ) ` and ` withAll ( Iterable < ? extends T > items ) `
updated the ` BuildNavAndPDFBody ` class to handle documents and improved attribute checks for shortname and permalink to enhance error handling and ensure
updated MqttBrokerConnection constructor to include a new boolean parameter to enhance flexibility in connection management
updated the method to retrieve a change set using the root change log if it is null to ensure a valid change set is retrieved when it is null
refactor method calls to use methodResult directly instead of creating a new MethodResult object to improve code readability and maintainability by reducing duplication
added HiveMetaStoreClient to drop a database in TestHiveMetaStorePartitionSpecs and enhanced logging in TestObjectStore to improve database management
added a new parameter " order _ currency " to the BithumbAuthenticated class and updated its usage in BithumbAccountServiceRaw to include the order
remove ssefluxwebconfig since it be no longer use
refactor JsonBuildHelper and related classes to use method . getReturns ( ) . isVoid ( ) instead of method . getFullyQualifiedName (
refactor YamlResource to replace static final variable YAML _ READER with static final YAML and add a new REST endpoint to list YAMLs to improve
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to restrict access to package -
refactor thread factory to use lambda expression instead of anonymous inner class to improve readability and maintainability of the code
added unit tests for adding items to a list with simple and mapping converters in MongoTemplateTests . java and created a new PersonWithAList
ggb - 244 sync applet panel size to the correct size
replaced direct visibility setting of the toolbar with a delayed visibility update using a Handler to ensure toolbar remains visible after a delay to improve UI responsiveness
refactor SeriesReader to encapsulate the handling of overlapping pages into separate methods to improve code readability and maintainability by encapsulating logic for
do n ' t save vm password if it be n ' t run a vm
set ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` to false in ` Response . java ` to ensure proper
added a warning check for assignment side effects in GroupDialog . java to ensure that only relevant entries are processed in the group dialog
refactor JSON and JSONObjectConvertor classes to improve code organization and maintainability
updated icon width check from maxHeight to maxWidthWithMargin in FileUploadApiController . java to ensure that the icon does not exceed the maximum size limit
refactor methods in RegisteredServiceProperty and JwtTokenCipherSigningPublicKeyEndpoint for improved clarity and functionality to enhance code readability and maintainability
added functionality to check the content type of user and etc MIME types in Basic . java to enhance compatibility with different operating systems and enhance error handling
disable jzlib compression by default
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and removed it from ` Class . java ` and ` MethodHandle
removed the ` doConnect ` method from the ` ChannelProvider ` and ` ProxyChannelProvider ` classes to streamline the connection process by eliminating unnecessary
drill - 164 : add test for empty final column in csv header
added compass gravity and margin settings to NearbyMapFragment to enhance the visual appearance of the compass in the UI
added a new test method ` testInterpolation ` to ` GeoPathTest ` to validate the interpolation behavior of ` GeoPath ` to ensure correct distance
updated method signatures to throw HiveException and improved exception handling in ParquetFilterPredicateConverter to enhance error handling and provide clearer diagnostics for unsupported
added logic to set the language for video streams in LibMediaInfoParser to ensure correct language handling for video streams
added a warning log for schema versions less than the old version in MicroserviceRegisterTask . java to inform users that the schemas in new version
replaced ` System . arraycopy ` calls with ` addAll ` method for ` T ` , ` FloatArray ` , ` LongArray ` , and `
added closing braces for the database connection in DataSourceProxy . java to ensure proper resource management and prevent potential memory leaks
added constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository , and improved null checks for registrations in InMemoryClientRegistrationRepository to
added a method to reset the UI state in SchemaUpgradeHelper to ensure the UI state is correctly reset during schema upgrades
added handling for failed steps in JUnitReporter and new test cases for strict and non - strict scenarios to improve reporting of test failures and ensure
add a playerselector class to allow . in entity selector . close # 823
implement Closeable interface in Selector class to ensure proper resource management and prevent memory leaks
added a MultiplexConnectionPool implementation and modified connection pool settings in MaxConcurrentStreamsTest . java to enhance connection management and improve test reliability
added multiple calls to ` stringType ( ) ` in ` CoreOptions . java ` to ensure proper handling of string types in the application
added null checks for character and parameter in HqlQueryRenderer and updated configuration paths in EclipseLinkUserRepositoryFinderTests to ensure proper handling of
updated HTTP status handling to use HttpStatus constants instead of hardcoded values to improve code readability and maintainability by using a more descriptive
pdfbox - 4892 : simplify code , a suggest by valerybokov
fix unit test so that it do n ' t break the build .
updated ParquetFormatPlugin and ParquetGroupScan to include metadata handling and improved file selection logic to enhance code readability and maintainability by central
updated the ` isSuccess ` variable and refactored the compilation process in ` Jsr199Javac . java ` to improve error
added a BaseTableModelListener to handle table changes in DefaultSortedTableModel to enhance the event handling by notifying listeners when the table changes
updated the range constraint in ServerConfig from 49152 to 65535 to ensure that the server number is less than or equal to 65535
updated AuthenticatorActivity and AccountRemovalJob to notify changes for document providers on KitKat and above to ensure compatibility with newer Android versions and
added a call to ` Log _ OC . startLogging ( getAppContext ( ) ) ` in ` MainApp . java ` to start
refactor error handling in FilterChainProxy to utilize ThrowableAnalyzer for better error reporting to improve robustness by handling wrapped RequestRejectedExceptions more
updated the calculation of newSize and length in StringBuilder . java to use ' this . length ' instead of ' length ' to improve code clarity and
pdfbox - 4892 : throw illegalargumentexception if filter . decode ( null , null , cosdictionary ) be call with an empty filterlist
added tbstopwatch . java so that it can be use by spring .
pdfbox - 4892 : fix checkstyle issue in pliststore
mark multiple continuation classes as deprecated to indicate that these classes are outdated and should no longer be used in future development
added a thread context class loader to the current thread in RemoteInterpreterServer . java to ensure proper context class loading for the current thread
fix incorrect usage of player . getentity ( ) in commandsourcestack .
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with
corrected a typo in the parameter name from ` indexInTickArray ` to ` tickArrayIndex ` in the ` timerIdForSlot
# 118 - add queryplan . getsimplename ( ) for beandescriptor and beandescriptorelement . getelementdescriptor ( ) . getsimple
updated JavaScript and CSS header references from " wro / all . js " and " wro / all . css " to " static / all
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` for verifying the latest timeseries status
rename ` ` appcontextlocation ' ' parameter to ` ` contextconfiglocation ' '
modified exception handling in OCSPChecker to check for CertPathValidatorException before throwing it to improve error handling clarity and maintain consistency in exception management
add writeoutputsolution to benchmark and make it configurable
chore : set default maxinboundmessagesize to max int ( # 606 )
added a new test file ` Issue _ 815 . java ` for testing the ` SliceSize _ reopen ` functionality to address issue # 815
added a shapeless recipe to the crafting registry in BuildCraftTransport . java to enhance the crafting capabilities by providing a shapeless recipe for
[ mahout - 148 ] fix arrayindexoutofboundsexception in sequentialaccesssparsevector . iterators ( ) .
added entity metadata handling for Shulker and SHULKER entities in BukkitMain and EntitySpawnListener to ensure proper ownership of plots
added a method ` getDebugLogger ( ) ` to both ` DIHWriter ` and ` SolrWriter ` classes to provide access to the debug
added imports for ` java . io . File ` , ` java . io . File ` , and ` java . io . File ` ,
added a check for the presence of a tag in UpToTagChangeSetFilter and implemented the isSeenTag method in UpToTagChangeSetFilter to
( chore ) camel - dofn : use arraylist instead of guava linkedlists to improve performance
[ hotfix ] [ javadoc ] fix typo in brokerroutingmanager
updated volumePaint and upPaint from Color . gray and Color . green to Color . GRAY and Color . GREEN to improve visual consistency and
replaced ` FrameLayout . LayoutParams ` with ` LayoutParams ` for layout parameters in ` InsettableFrameLayout ` to simplify layout parameter handling and allow
added a new parameter ` duration ` and updated related methods in ` BuildTargetDurationListener ` and tests in ` BuildTargetDurationListenerTest ` to
replaced ` @ Profile ( " profile " ) ` annotation with ` assumeTrue ( " expected " to be enabled " ) ` in multiple integration test
added a null check for the user before processing claims in OAuthConfirmationController to prevent potential NullPointerExceptions when the user is null
added support for replace a route from endpoint in camel - test - support . thanks to jbellis for the patch .
use a non - blocking hash set instead of a concurrent set for the statement set .
api : add networkid parameter to listpublicipaddresses api command
added tests and implementation for ignoring battery optimizations in ShadowPowerManager to ensure correct behavior of battery optimizations across different Android versions
updated the version retrieval to use ` __ buildProperties . getProperty ( ) ` instead of a hardcoded value to ensure the version is retrieved from
added tests for verifying invocation order in the NumberOfInvocationsInOrderVerifierTest class to ensure correct verification behavior for different invocation order scenarios
updated debug debug logic for regex results in TRegexExecNode . java to ensure proper evaluation of regex results during execution
updated startProfile method to include an additional parameter " - foreground " to specify the foreground mode for profile processing
replaced ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve resource management and ensure
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and simplified its usage to
updated logging statement to use the file name instead of the file object and added logic to remove the actions list in the editor text action window to improve
updated skippedEntries to include exception messages in ClassFileReader . java and modified warning message in JdepsTask . java to improve error reporting for better
replaced LogStorage with LuceneStorage and updated FetcherMain and FetcherTask to utilize link storage to improve performance and maintainability of document storage
updated the populateBubble method to include an existingBubble parameter and adjusted related logic to ensure that the bubble is populated only when it already exists
route policy : do n ' t log route that do n ' t have start / stop / suspend time
removed the ` methods ` parameter from the ` buildRpcExt ` and ` buildRpcExtJson ` methods across multiple classes to simplify the method signature
[ java ] add default delay generator for multicast message .
added new properties for client ID , client secret , issued at , and registration access token in ClientInformationResponseView . java to enhance the JSON response
added a condition to check if the open order ' s field amount is greater than zero before setting the average price to ensure that the average price is
refactor execution report subscription logic in BinanceStreamingMarketDataService . java to improve code readability and maintainability
added a fail method to handle exceptions and modified the timing logic in LdapTimeoutTest . java to improve error handling and provide clearer logging for test
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43535 -
added logic to fetch the alias / file name before updating the password in AmbariServerConfigurationHandler to ensure that the alias / file name is
added a check for already parsed segments in ParseSegment . java and implemented the isParsed method in SegmentChecker . java to ensure that segments are not
[ hotfix ] [ yarn ] add yarn . application - attempt - failures - validity - interval configuration option
do n ' t crash if the h2 driver be n ' t include
hbase - 11620 add readtype option to scan in snapshot - based inputformat ( sergey shelukhin , review by s
added fixed height and width options to InstanceLoginInfo in LoginInstanceRequest . java to allow users to specify customizable sizes for login options
added a corner radius parameter to the update methods in multiple classes to allow dynamic adjustment of the corner radius during animations
added multiple command conditions to the COMMANDS _ TO _ REMOVE array and updated filter conditions for jobtracker addresses to enhance command removal logic and
added a retry mechanism for connection handling in TxnHandler to enable retries when a connection pool is available
txn cleanup : add backup operation to backup queue
added a private final char [ ] [ ] field named ' strings ' to the FirstOfStringsMatcher class to store strings as a final field for
updated DELETE statements in CostBasedDecisionIT and DeleteCompiler to use " CLIENT SELECT " instead of " ROWS " and added ExplainPlan
added handling for SocketException in BaseServiceException and corresponding tests in BaseServiceExceptionTest to ensure that SocketTimeoutException and IOException are retryable when insufficient
added a new parameter ` rapidInstallTypes ` to several classes and updated related classes to support this new parameter to enhance functionality by allowing users to specify
updated the seed pattern regex in SortTest . java to allow hyphens in seed values to improve the accuracy of seed matching in the application
refactor MultimapSubject to use a Factory for creating IterableValuesForKey instances and update related methods to improve clarity and maintainability of the code
modified the return statement in Workspace . java to adjust the display size calculation to ensure correct display positioning based on device orientation
added support for a transmux flag in the Transformer and TransformerInternal classes to enable or disable transcoding based on media item counts
added localized string handling in the Picker class to ensure consistent localization of strings in the picker
camel - 18197 : camel - cxfrs - fix the issue of camel - cxf fail when the exception be not present on the
hhh - 13397 fix postgresql dialect throw wrong sqlexception
added assertions and modified query ID retrieval in TestJdbcDriver2 . java , and updated HiveStatement . java to use LimitedPrivate annotation to improve test
add usesunboundedpcollections category to pardotest . java
updated HTML formatting in GpsSimpleViewFragment to remove unnecessary em tags to improve readability and maintainability of the code
[ java ] remove unused leadershiptermid from joinlogasfollower method .
replaced direct calls to getHttpExchange ( ) with a private instance variable for better encapsulation to improve code readability and maintainability by
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and its corresponding test case
added null check for the tree object and modified marker retrieval logic in Recipe and Markers classes to improve robustness and prevent potential NullPointerExceptions
change characterrun . getfontsize ( ) to return double instead of float ; use bigdecimal instead of bigdecimal
changed the type of the ` email ` variable from ` String ` to ` String [ ] ` and updated its usage in the ` maybeWrap `
refactor exclusion handling in RawMavenResolver to use a set instead of stream to improve code readability and maintainability by reducing duplication
added null checks and new currency pair handling in DSXAdapters and DSXPairInfo classes to enhance error handling and improve currency pair management in
refactor multiple test classes to improve code organization to enhance maintainability and readability of the test suite
[ drools - 90 ] do n ' t fail incremental build if a kiemodule pom be invalid
updated the initialization of ` copy ` and added a conditional check for ` sobj . has ( k ) ` before accessing its properties to ensure
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
do n ' t use methodhandles . findstaticgetter / findset / unreflect getter / setter in hostfielddesc .
added a new method parameter ` completedStage ` to the ` CompletableFuture ` database to support handling of completion stages in the database
updated the calculation of mFreezeCheckpoint from 9000 to 10000 to adjust the freeze checkpoint duration based on the playback duration
removed redundant imports and added Whitebox internal state setting in AbstractCommonPowerMockRunner and PowerMockRunner to streamline code and improve maintainability by
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshalIn ` to ensure the correct
refactor the indent handling logic in TabsAndIndentsVisitor . java to improve clarity and correctness to enhance code readability and maintainability
replaced LuceneTestCase with TestCase in TestSingleTokenTokenFilter . java to simplify the class hierarchy and improve code readability
updated HTML table cell wrapping in HtmlProcessInformationsReport . java to improve the visual appearance of the column in the report
refactor JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository to utilize JdbcExecutionContextDao for managing execution contexts to improve
added a condition to check if the new media folder should be hidden before adding a child to prevent unnecessary child addition when the new media folder is hidden
added null checks and logic to set widgets for both first and second widgets in SplitPane . java to ensure proper handling of null actors and prevent runtime
added handling for Parameterized types in RemoveUnusedImports . java to ensure proper handling of parameterized types and their parameters
updated the method to retrieve the first mod version and improved null and empty check conditions in UniqueModListBuilder . java to enhance code readability and
changed the logger variable from instance of this class to static final in TicketGrantingTicketImpl . java to ensure the logger is only initialized once
updated the SQL string in PhysicalPlanTest . java to include a new version of SNAPPY . 81 + 12 to ensure compatibility with the latest
added a new method ` isValue ` in ` AttrData ` and updated ` Converter ` to accept enum ordinal values in ` R . java `
added checks for character modifiers in the US International PC locale in CPlatformResponder . java and LWCToolkit . java to ensure proper handling of
[ java ] set aeron _ publication _ connection _ timeout for the c medium driver test .
added a check to return false if the request URI starts with " / css " , " / images " , and " / favicon " to
added an assertion to verify the failure of the wellbeing test apk to ensure that the device is rooted when installing the wellbeing test AP
# 241 - disable oracle ansi sql limiter for oracle
added a MultiMap mock for request headers in TestSimpleBodyHandler and updated assertions in TestVertxTLSBuilder to reflect the expected number of transport
update test paths in DiffRuleKeysScriptIntegrationTest . java to use a more accurate Java version to ensure compatibility with newer Java versions
added a new boolean variable ` mIsDismissHapticRunning ` and modified the condition for dismissing the haptic to ensure that the
add projectile source support to explosion event ( # 1077 )
removed unused import and implemented getItemId method in SymbolInputAdapter to improve code clarity and maintainability by eliminating unused imports
updated API endpoint parameters in Bitfinex . java and BitfinexPollingMarketDataService . java to remove unnecessary parameters to streamline API request handling
added a check to replace double quotes in the result string to ensure proper handling of double quotes in output
[ hotfix ] [ runtime ] implement tostring ( ) for kubernetesleaderelectiondriver
refactor SqlSessionFactoryBean to improve code structure to enhance maintainability and readability of the code
refactor method descriptor retrieval logic in TripleInvoker . java to improve clarity and efficiency to enhance code readability and maintainability by reducing complexity
replace Gdx . app . error with GdxRuntimeException for error handling in PolygonRegionLoader . java to improve error handling by providing a clearer
added a method to check if a timer is started in Deadline . java and integrated it into RawStoreProxy . java to improve timer management and
add more context to the exception message when the channel be close
updated the handling of genres in ItemListActivity to check for null before joining to improve robustness by preventing potential NullPointerException when no genre is
[ hotfix ] [ checkpointing ] add test to verify that reset be call in region recovery .
[ entitysystem ] fix json format for prefab with collection of mapped container
[ flink - 24124 ] [ checkpoint ] fix walnode . getoldestunpinnedmemtable ( ) to return cost
added a new test method ` testRetrySameHostOnCallbackFailure ` in ` HttpTest . java ` to retry the same host on callback failure
move ` ` background ' ' from ` ` tutorial ' ' to ` ` tutorial ' '
added a new test class SQLServerEscapeQuestionCharacterTest for testing SQL server escape character handling to ensure proper functionality and correctness of character escaping in
fix potential npe in camel - spring and camel - jooby
replaced synchronized block with a utility method for waiting on input streams to improve code readability and maintainability by using a centralized utility method
updated package declaration for ParameterFlags to reflect its new location in the provider package to ensure proper organization of the ParameterFlags class within the provider package
do n ' t call requestLayout ( ) if the image object be not a regiondecoder / bitmap
removed the appName parameter from the InputRC constructor and related methods to simplify method signatures and improve code readability
add unit test for ignore deps in install and uninstall command
[ java ] do n ' t use setheadless on the headless option by default .
replaced ` value ` assignment with ` value . intern ( ) ` in ` VersionedValue . java ` to ensure that the value is properly intern
added support for " MOVE " status in the connection logic to ensure proper handling of move operations in the database
updated date format constants for ISO8601 _ MONTH _ YEAR2 _ TIME , ISO8601 _ PERIOD _ MICROS , and ISO
replaced the import of ` org . apache . curator . shaded ` with ` com . google . common . collect ` in multiple test files to
[ hotfix ] [ runtime ] fix race condition in hsbuffercontext # startspilling
added permission checks for untrusted visits in the Visit class to ensure proper permission handling for untrusted visits
do n ' t try to send jabber message if not register yet .
update BasicURLNormalizer to handle curly braces correctly to ensure proper normalization of URLs with curly braces
changed access modifiers of methods ` addRemoteAnimations ` and ` unregisterRemoteAnimations ` from protected to private to enhance encapsulation and
added a check to compare clock rates if they are zero to ensure that the correct clock rate comparison is applied when both values are equal
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and modified ` SeparatedProjectsGenerator ` to return ` ImmutableSet < Path
removed the check for native calendar ID before setting the zero digit in HostLocaleProviderImpl . java to simplify the code and improve readability by ensuring
added a new file MSwingUtilities . java to implement utility methods for image scaling and rendering to improve user experience by providing a simpler way to
camel - 7999 : camel - mail - should be async so we do n ' t have to wait for the callback to complete .
added @ RefreshScope annotation to CasCoreWebConfiguration . java and PasswordlessAuthenticationConfiguration . java to enhance configuration flexibility by allowing refresh scope for
added unit test base on user forum issue
added two new Java files , Main . java and ScriptRenderer . java , to implement integration scripting functionality in the schema crawler
added a condition to check if ` _ inputState ` is ` _ NONE ` in the request condition and implemented a new test for querying after
added checks for glyph dimensions and implemented isDescendant method in Group , FlickScrollPane , and SelectBox classes to ensure proper handling of child actors
replaced ` reportFailure ` calls with ` runCloseHooks ` in ` DeploymentManager . java ` and added a new test in ` DeploymentTest .
make lexiconrecipemapping . stacktostring ( ) a bit easy to read
updated sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to allow for a longer wait time after interruption
lloinc : fix display name check for non - blank short name .
use classloader . getclasspath ( ) instead of classpathstream . getclasspath ( ) . getclasspath ( ) .
added a new file FieldUtils . java to utility methods for reflection - based field access to provide utility methods for reflection - based field access in the
removed conditional check for speculative type mode in DeferredAttr . java and added DoubleStaticImport . java with a test method in DoubleStaticImport . java
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added default padding for widgets to improve layout consistency and ensure
update xabber account settings when an invalid token be load .
added a new method ` setvar ` to handle command - line argument usage to enhance help functionality by providing user - friendly help instructions
fire catentity . onanimaltapame ( ) for all cat entity , not only cat entity .
fix : fix handling of null value in windowframe . sortvalues ( )
pdfbox - 4892 : add test for helv font
added a line to set the app ' s mode to the current app ' s mode to ensure the application correctly reflects the current app ' s mode
added support for optional Docker file path in ImageFromDockerfile and created a new DockerfileBuildTest class to improve configuration flexibility and test coverage for
added a null check before initializing threadInfos in ThreadInfos . java to avoid potential NullPointerExceptions when accessing threadInfos
updated the condition in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of a fixed value to improve code readability and maintainability
[ hotfix ] [ checkpointing ] add more log to singleinputgate and singlecheckpointbarrierhandler
added new schema constants to the mmm Schema . java file to enhance schema management by including additional table types
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors , and updated related tests to accommodate this requirement to enhance flexibility in fuzzy
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java ` to improve clarity
add warn message if ` ` immediateflush ' ' be set outside of the enclosing appender .
added new auto - configuration dependencies for RabbitRabbitAutoConfiguration and KafkaAutoConfiguration in ZipkinAutoConfiguration . java to enhance the auto - configuration
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to ensure
replaced imports of ` avro . shaded ` with direct ` com . google . common . base ` in multiple Java files to standardize import
do n ' t process return and unwind block in graphbuilderphase when there be only one block in the blockmap .
added getter and setter methods for legacyRenderer and modified conditional checks in Label . java to improve code readability and maintainability by reducing duplication
replaced the ` intToFourBytes ` method with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJ
added null check for mObserver before calling isHomeAndOverviewSame ( ) to prevent potential NullPointerException when mObserver is null
updated the return type of the ` thenComparing ` method from ` Comparable < ? super U > ` to ` Comparable < U > `
refactor DocIdSet class to improve code readability to enhance maintainability and facilitate future updates
update end time handling in UserRuleAnomalyFunction to use currentKey and bucketMillis to ensure correct end time is set for user anoma
added a try - catch block around the parsing of values [ 0 ] and values [ 1 ] to handle NumberFormatException to ensure proper error handling and
added a classloader setting to the MockFactory class to ensure the correct class loader is set for mocking classes
added a new OriginalFormat class to the ConverterWithEnumFormat class to enable custom formatting of enum values based on their source type
replaced hardcoded date format strings with a constant PATTERN _ YYYY _ MM to improve maintainability and readability of date formatting
refactor JAWTRenderer class for improved performance to enhance rendering efficiency and maintainability
camel - 14226 - camel - aws2 - lambda : enable autowire on the aws lambda component - aws2 - * component
cloudstack - 7702 : validate mac address for nic in the network . ( # 560 )
added a condition to check for " Authorization " in the header name to ensure proper handling of authorization headers in the proxy servlet
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService . java ` to ensure that the delegate executes the command instead of
added ` getDetails ( ) ` and ` setDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` Username
updated the initialization of ` randUsePoints ` to use a probability of 0 or 5 instead of a random boolean to improve the accuracy of the random
rename method ` ` appenddot ( ) ' ' to ` ` endsentence ( ) ' '
updated the ` formatForConsole ` method to include ` Locale ` as a parameter for better locale handling to ensure consistent output formatting across different locales
updated import statements in GroovyParserVisitor . java and added sorting logic for named arguments in GroovyPrinter . java to improve argument parsing accuracy and maintain consistency
added boundary checks for top and right inset sizes in Border . java to ensure that border dimensions do not exceed bounded boundaries
refactor GestureState initialization to use a static constant instead of creating a new instance to improve code readability and maintainability by centralizing default
replaced Joda - Time ' s DateTime with Java ' s Instant and DateTimeFormatter for version formatting to improve compatibility with Java ' s date - time
refactored openblas and openblas _ nolapack classes to improve code readability and maintainability
replace IOUtils with java . io . IOException in TorrentsStorage . java to ensure proper resource management and prevent potential memory leaks
added synchronized keyword to the initTxnMgr method to ensure thread safety when accessing the transaction manager
updated timeout values in AbstractDistribZkTestBase and increased SO _ TIMEOUT in AbstractFullDistribZkTestBase from 120 to 480
added a new class ` SearchResults ` to handle search results using a ` Hits ` object to provide functionality for managing search results based on hits
refactored the initialization of threadCPUView to use a separate Refresher instance to improve code readability and maintainability by reducing duplication
refactor primitives retrieval to use a temporary variable and initialize the body if it is null to ensure that the primitives array is initialized only once
added new version strings " 8.1 . 0 - cfs " and " 8.1 . 0 - nocfs " to TestBackwardsCompatibility
changed the feature flag for enabling two line labels from DISABLED to TEAMFOOD and modified the text search method in AppIcon to improve
added a new API endpoint to retrieve tenant pools from the instance to provide users with information about tenant pools for the current instance
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods to improve clarity and functionality to
updated InlineBytecodeGenerator and InlineByteBuddyMockMakerTest to include new methods for mocking interfaces and strings to enhance test coverage and ensure
added logging statements to CxxCompileStep and CxxPreprocessStep for better error handling to improve debugging and error reporting during compilation and preprocessing
add a utility method to remove character from a string and use it to improve code readability and maintainability
fix ( service ) : add tri protocol to metadata service config
[ drools - 561 ] add datatransformer interface for compile expression , transform parameters .
updated the type of ` values ` and ` objval ` arrays in ` DistributionGraph . java ` to use ` Number [ ] [ ] `
removed unnecessary conditional check for ' interesting ' in FormatStringChecker . java to simplify the code logic and improve readability
removed unnecessary whitespace in ElectionContext . java to improve code readability and maintain consistency
refactor ITestDbTxnManager class implementation to improve code readability and maintainability
refactor connection handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
added tests for MapModel functionality in CodeFirstPojoClient and CodeFirstPojoIntf to ensure correct functionality and functionality of the MapModel integration
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated selection handling in ScaleDialog to ensure the selection state reflects the current state of scaleOffsets to improve user experience by ensuring the selection state reflects
rename the method ` updatePlayerStepStatus ` to ` tickBelt ` and update its logic accordingly to improve code readability and maintainability by
pdfbox - 4892 : do n ' t throw exception when widget have no rectangle .
replaced SortedSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to ensure uniqueness of keys in order to prevent concurrent modification issues
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 in CancelEventTimer . java
updated the preload libraries in dc1394 . java from " libdc1394 - 22 " to " libdc1394 - 25 " to
added conditional logic to set all constructors to public in MainMockTransformer and created new test classes for mocking static methods with private constructors to
pdfbox - 4071 : do n ' t try to decrypt already exist string / dictionary / array
set window title to use xtoolkit . getclassname ( ) instead of getclassname ( )
modified the depth calculation logic in XRSurfaceData . java to handle both 32 and 64 pixel sizes to ensure correct depth representation based on the
added errorResponseBody variable and updated InvalidResponseCodeException to include it as a cause to improve error handling and provide clearer context for invalid HTTP data
added a static method ` exit ` in ` TopLogging ` and modified the ` exit ` method in ` TopThreadGroup ` to accept a Throwable
modified the initialization of the ' start ' variable based on the regexp ' s global state to ensure that the correct index is used when the regexp is
ignore flaky test when upgrade to optaplanner 6.5 . 1
corrected variable name from lowIndex to highIndex in DefaultAllocator . java to ensure correct assignment of highAllocation based on available allocations
added a method ` cleanEntriesWithoutFeeds ` to ` DatabaseCleaner ` and ` FeedEntryDAO ` classes to manage and delete feed entries without
changed the return type of the appendToLabel method from void to AtomicCounter and added a return statement to ensure the method returns the current instance instead of
[ java ] add noidlestrategy to make it easy to use .
added handling for not modified responses in CacheControlHeadersWriter and corresponding tests to ensure proper handling of not - modified responses in the application
instrumentationpartialevaluationtest : rename instrumentationpartialevaluationtest node listener to toolevalnodefactory
removed unused insets and overridden the paintTabArea method in SynthTabbedPaneUI to streamline the rendering process by eliminating unnecessary code
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional argument for orderbook size to
added methods to retrieve file separator and absolute path in FileEndpoint , GenericFile , RemoteFile , and RemoteFile classes to ensure consistent handling of file
added a new method ` build ` in ` JavaProvenance ` and updated imports in ` MavenProjectParser ` to utilize it to
added trace logging for registered Hive UDFs , GenericUDFs , and nonDeterministic UDFs in HiveFunctionRegistry . java and
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test reliability by reducing the number of iterations
do n ' t replay delete hint for deleted columnfamily . patch by jbellis . patch by jbellis ; review by jbellis
added a check for writable output files in NativeErrors . java to ensure that the output file is only writable when the test is run as root
added package info checks and error logging in LauncherModel . java to ensure proper handling of application - specific package information
cloudstack - 11420 : do n ' t try to upgrade the database if the upgrade fails
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test for non - skippable exceptions to
replaced ` startsWith ( completed ) ` with ` regionMatches ( left . toString ( ) . regionMatches ( ) ` in ` LineReaderImpl . java `
added global data tables and updated return logic in Recipe . java to include global data tables to enhance global data table handling and improve code readability
added import for Overview and implemented task dismissal logic in TaplTestsTaskbar . java to ensure that all tasks are dismissed when the workspace is
cloudstack - 47500 : db upgrade from 4.1 . x - > 4.2 . x - > 4.1 . x - > 4.1 . x - >
removed unnecessary null checks for the connection object in LdapClient . java to simplify the code and improve readability
refactor index handling in SequenceAction to use a local variable for clarity to improve code readability and maintainability
make sure we do n ' t try to login if a keyspace do n ' t already exist . patch by jbellis
added a check to skip synthetic fields in ReflectUtils to ensure proper handling of synthetic fields in reflection
added LoggerProvider to manage SLF4J logging in the application to enhance logging capabilities by allowing users to access SLF4J loggers
changed the type of the ` ImmutableMap . Builder ` from ` ImmutableMap . Builder < String , String > ` to ` ImmutableMap . Builder < String ,
added a deprecation warning message when multiple glue classes configure the spring context to provide clearer feedback to users regarding the deprecation of spring context configuration
added a new method ` deepStart ` that accepts multiple ` Startable ` objects to enhance functionality by allowing deep starting of multiple startables
remove shape . reserveprimitiveextensionarray , deprecate since 20.2
make laser table implement leasertargetblock , close # 1020
modified the condition for determining if the object name contains a parentheses or a parentheses in AbstractJdbcDatabase . java to simplify
removed unused imports for CachingTokenFilter , TokenStream , and MemoryIndex in TestSolr4Spatial2 . java to streamline the code
set expiremessagesperiod to zero in MemoryLimitTest . java to ensure tests do not exceed the maximum size limit limit
removed null check for ` norm ` and improved conditional logic in ` RequestHandlers . java ` to enhance code readability and prevent potential null pointer exceptions
replace hyphens with dots in servlet names in ProxyServlet . java to ensure consistent naming conventions for servlet names
refactor python environment handling in ProjectBuildFileParser to use a constant for the PYTHONPATH environment variable name to improve code readability and maintain
updated audio handling logic to use frame size directly instead of format to ensure correct frame size handling and prevent potential memory leaks
add null check for enums in ElasticSearchStringLookupService to ensure safe handling of null values and avoid potential NullPointerExceptions
updated string formatting in CommitLogReader to include timestamps to improve clarity of error reporting for better debugging
added initialization of policy using containerScope ' s getPolicy ( ) method to ensure the WebSocket session uses the correct policy from the container scope
removed the check for static fields of a variable and simplified the initialization logic to simplify the logic and improve readability of the code
added a webroot argument to the createContext method in UserService . java to allow dynamic configuration of the web root for the server context
test : migrate camel - core to camel - jbang - api module
fix for profile point toggle not work on netbeans 10
updated method names from ` printHeaderObject ` to ` createHeader ` in multiple formatter classes to improve clarity and consistency in formatting helper methods
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and implement
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure proper resource management and prevent potential memory leaks
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground or mOriginalBackground are
updated boundary condition checks for decimal exponent in FloatingDecimal . java and added a new ToString . java file with main method in ToString . java to
updated property type comparison from ` ! = ` to ` ! . isAssignableFrom ` in ` PropertyDescriptor . java ` and added a new test class
removed maxVersion parameter from getVersions method call in RealTimeGetComponent . java to simplify version retrieval by removing unnecessary maxVersion parameter
do n ' t set the origin header if it ' s already set .
updated animations in RecentsView and TaskView to incorporate modal animations to enhance user experience by providing smoother transitions for task overlays
updated error messages and method calls in ORCRecordReader to include the field parameter to improve debugging by providing more context in error messages
added two new sample files , " TearsOfSteel . m3u8 " and " Bipbop _ 4x3 .
removed unnecessary imports and modified string assignments for Hibernate entity manager and JPA meta model types in PersistenceProvider . java to streamline code and
updated log initialization to include " org . apache . hadoop . ipc . RPCEngine " instead of " ExecRPCInvoker " in ExecRPCInvoker
added logging for diagnostic diagnostics in TestSpecificCompiler and implemented a test for union and fixed fields in UnionAndFixedFields to improve error reporting and
refactor WebSocket session handling in ` WebSocketEndpoint ` and add a new test for session closure in ` WebSocketIT ` to improve session management and ensure
[ hotfix ] increase delay for daostateblockchainchanged event in batch processing
updated XML configuration mappings to use " Apache Struts " instead of " OpenSymphony Group " and " OpenSymphony Group "
added conditional calls to ` stream . stop ( ) ` in ` WebCamInputPanel . java ` to ensure proper handling of stream termination based
changed the return type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
update geotools example to use jts instead of geotools
replaced ` substream ( ) ` method with ` skip ( ) ` method in ` TargetType58 . java ` to streamline the code by
hhh - 10956 - add support for composite identifier in entity tuplizer
rename ` ` find full text ' ' to ` ` download full text ' '
updated URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl to handle URI registration with host and port to improve the handling of registered URI
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for a blank OSDB hash before retrieving the information from the OSDB hash to avoid potential NullPointerExceptions when the OSDB hash
added functionality to transfer tokens based on call token value and token ID in RuntimeImpl . java and MUtil . java to enhance security by ensuring tokens
camel - 10237 : camel - ftp - do not change the current directory when the operation be stepwise
updated parameter name from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to ensure consistency in
added a check for empty result set in MapJoinOperator and modified join logic in HybridHashTableContainer to ensure proper handling of join results and
updated the HTTPSPDYAsyncEndPoint constructor to accept an AsyncEndPoint parameter and modified related methods accordingly to enhance flexibility in handling local and remote IP
added ` tweetId ` to intent extra in multiple adapters and adapters to ensure proper handling of the tweet ID in the intent
added proxy authorization handling and refactored disconnect logic in HttpURLConnection to improve security and ensure proper response termination based on user authentication
updated ` _ numChildren ` from an ` int ` to an ` AtomicInteger ` for thread - safe incrementing of children in ` TraceContext `
removed the final modifier from JWT and RESPONSE constants in PluginEnum . java to streamline code by eliminating unnecessary ' final ' modifier
disable test that fail on slow ci server
resolve split - packages : move everything from kie - internal under org . kie . api : move org . kie . internal : move
replace occurrences of " IN " with " NOT _ IN " in multiple predicate classes to standardize the term " NOT _ IN " across multiple predicate
replaced specific exception handling with a general Exception catch in multiple activities to improve error handling robustness and provide more informative display of account details
added null check for witnessService before validating witness permission to avoid potential NullPointerException when witnessService is null
updated the construction of the taggedCol string to use getExprString ( ) method to improve code readability and maintainability by using getExprString
added a check to ensure the item ' s Javadoc is not present before setting it to avoid setting a default value when no Javadoc is present
rename ` holderMethod ` to ` holderMetadata ` and update related methods in ` CompiledICHolder . java ` to improve clarity and consistency in
do n ' t call revalidate ( ) every time we do n ' t need it .
[ hotfix ] [ connector / flink ] return unregisteredmetricsgroup instead of throw unsupportedoperationexception
replaced the variable ` x ` with ` oldX ` and updated the y calculation to use the old value to improve code readability and maintainability
added type casting to the cacheManager ' s createCache method to ensure proper type handling for cache creation
added a length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a
refactor ShadowCookieManager to improve code structure to enhance maintainability and readability of the code
added authorization check for external tables in Hive configuration to ensure proper permissions are granted before dropping external tables
added braces to conditional statements in Stage . java and adjusted drawing position in ProgressBar . java to improve code readability and correct rendering behavior
add getplatformbyteorder ( ) method that return the native byte order of the platform capability .
updated PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " windowsprovider . timeout
updated ` initWebViewLogin ` method to accept a base URL parameter and added support for dynamic web view initialization to enhance user experience by allowing dynamic web
corrected a typo in the exception message from " Paramter " to " Parameter " in CallableStatementHandler . java to improve clarity and consistency
added a default date parameter of " after " in the AuditEventsMvcEndpoint and updated test cases to ensure proper handling of the " after " parameter
renamed ` ExponentialTimer ` to ` PreciseThroughputTimer ` and updated related references to improve clarity and consistency in naming conventions
added functionality to remove a soft body from the world and reset it to null in SoftBodyTest . java to ensure that the soft body is properly
added public access modifier to interfaces in SinkFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider to allow access to these
[ zeppelin - 2436 ] fix log message to be more descriptive
add a test case to show that the jingle element do not have a redundant namespace .
fix a crash when use redplasma , and add a null check for redplasma
added support for HTTP / 2 request headers in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
updated method calls from ` getTrusted ( ) ` and ` removeMember ( ) ` to ` getTrusted ( ) ` and ` removeMember (
updated delimiters in SimpleReport . java from ` count ` to ` count + 1 ` and modified string formatting in SimpleReport . java to improve
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and added a new class ` T68637
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and deleted the ` TickerDemo . java ` file to simplify the class name
refactor contract validation logic in Runtime . java to improve error handling and add null checks for contract properties to enhance robustness and provide clearer error
app3d : do n ' t create input3d for applets that do n ' t support it
added an @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw exception in scripttagpayloadreader . parsepayload ( ) , just return false
added an overridden method ` getRepositoryFactoryBeanClassName ` to the ` JpaRepositoryConfigExtension ` class to ensure compatibility with the latest JPA repository
changed the return type of the ` getExecutableCommand ` method from ` String ` to ` List < String > ` across multiple classes to enhance type
changed the assignment of ` this ` and ` width ` to ` IOSGLES20 ` in ` IOSGLES20 . java `
deleted the UploadPathActivity . java file to remove unused code to streamline the codebase
modify return statements in SimpleTextFieldsReader to return - 1 when indexOptions is DOCS _ ONLY to ensure that total and sum term frequency
fix ( jdt ) : implicit constructor should not be add to the constructor
updated the ` populateValidateNullableIfNeeded ` and ` populateForeignKeyIfNeeded ` methods to include a ` Database ` parameter to ensure compatibility with Oracle databases
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code organization to enhance maintainability and readability of the code
removed the ` indexOptions ` field from ` DefaultIndexingChain ` and updated the iterator assignment in ` PointInSetQuery ` to improve code
removed a substring operation from the rawName map in SchematicHandler . java to ensure proper handling of names without leading spaces
added a switch statement to handle specific collections in AbstractCollectionAssert . java and updated CollectionAssert _ isUnmodifiable _ Test . java to include
removed static modifier from the Option enum in ProcessExecutor . java to improve code readability and maintainability
added a confirmation dialog for twitlonger characters in Compose . java and removed it from ComposeActivity . java to improve user experience by
replaced the toggleKeepInSync ( ) method with a CheckBox and updated its usage in FileDetailFragment . java to streamline file synchronization logic and
updated ImageUtil to use Java ' s built - in Base64 encoding instead of Java ' s DatatypeConverter to improve compatibility with Java ' s
added ControllerCounter and DBCallback classes with their respective getters and setters to provide a framework for MongoDB - related functionality in the application
changed the parameter type of the deleteTicket method from ` String ` to ` final String ` to enforce immutability of the parameter
added a new file FlywayMigrationRunner . java that implements a Spring application context to facilitate the migration of flyway data sources in the application
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in ` HashMap ` and added a new class ` NotEmptyHashMap `
update version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest release version
added @ Nullable annotation to the modify method parameters in CompressionCodec and ZlibCodec classes to indicate missing orc compression modifiers to improve null safety and
added null check for mainClass attribute in LauncherHelper . java and improved jar creation handling in TestHelper . java to ensure proper error handling and
rename test classes for consistency and clarity to improve code readability and maintainability by standardizing naming conventions
rename methoddata . compiledgraphsize to methoddata . compiledirsize and make it thread - safe
remove clone ( ) method from cellcopypolicy and use it in xssfsheet
added a method to reset the icon load result in FloatingIconView . java and invoked it in FloatingIconView . java to ensure proper
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java `
updated the way outRect is set for landscape orientation in IconRecentsView . java to improve layout responsiveness based on device orientation
deleted the AddAdapter . java file to remove unused adapter class to streamline the codebase
[ java ] fix a bug in nonstaticlifter when there be no constructor code .
added a new parameter ` processSortCols ` to the method ` OpTraitsRulesProcFactory ` and modified the logic for processing column names to
refactor TestLogWatcher to use a looper method for message validation to improve code readability and maintainability by reducing duplication
added a print statement to display the " < any > " type in Java2TypeScriptTranslator . java to improve the formatting of typescript output
updated SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with newer
added a check to set the SPRING _ AOP _ PROXY _ TARGET _ CLASS property to " true " to ensure that the
removed the singletonLock configuration in TypeCachingBytecodeGenerator . java to simplify the code by directly using the classLoader
add example for different callback class in action example to make it easy to understand .
add a method to write a table to an output file with an optional ` ` append ' ' flag .
updated MavenExecutionContextView and MavenRepositoryMirror classes to improve handling of maven settings and repository mirrors to ensure accurate retrieval of maven mirrors and improve
added a ` name ` field and modified constructors in ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePath `
updated the service client comparison logic in OAuth20CallbackAuthorizeEndpointController . java to use ` matches ` instead of ` equals ` to improve accuracy in
replace direct calls to values ( ) . toArray ( EMPTY _ ANNOTATIONS _ ARRAY ) with a new method AnnotationParser . toArray ( )
updated method calls in UserManagerCompatVL to use getBadgedIconForUser instead of getBadgedDrawableForUser to improve clarity and
change default line separator from OS default to LF or CRLF for output to ensure consistent line separator handling across different operating systems
fix configurationmanagerutils . isimplementinginterface ( ) to check if it be a derived class
thymeleaf - sanitize input in the model so that it do n ' t lead to nullpointerexception
chore : update java and python dependency ( # 431 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include exception handling and created a new project workspace setup to enhance test coverage for
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
update container type assignments in AllAppsRecyclerView and modify logDeepShortcutsOpen method to accept a View instead of an integer to improve clarity and
hbase - 24420 deprecate the config key hbase . ipc . server . reservoir . initial . max and hbase . ipc .
[ native ] add support for non - null user in window query .
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types to improve code readability and maintainability by centralizing the
refactor TestFSTs class for improved readability to enhance maintainability and facilitate future updates
add height calculation for input box label ( for latex text )
hbase - 24413 increase increasingtoupperboundregionsplitpolicy to account for the initial size of the region .
removed unnecessary model state reset and loader calls from LauncherClings . java to streamline the code and improve maintainability
refactor variable initialization for keys and updates in ManagedSelector . java to improve code readability and maintainability by reducing duplication
added functionality to set excluded datasources in SpringDataSourceBeanPostProcessor to enhance flexibility by allowing dynamic exclusion of datasources
added undo info storage in TableValuesView and simplified conditional statement in TableValuesPanel to improve code readability and maintainability by reducing unnecessary null checks
( chore ) camel - aws2 - kinesis : allow kinesis proxy to use custom amazonaws client
refactor channel handling in VelbusSensorHandler to use bitwise operations for channel changes to improve code readability and maintainability by consolidating
disabled tests due to unfavorable benchmarks and adjusted delayable logic in BoundedLocalCache and BoundedLocalCacheTest to disable tests
added unit tests for illegal database names in IoTDBSessionSimpleIT and improved error handling in PartialPath to ensure proper database creation and deletion
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure proper cleanup of files during garbage collection operations
replace ` desiredWorkspaceLeftRightRightRightPx ` and ` desiredWorkspaceLeftRightRightRightPx ` with ` desiredWorkspaceHorizontalMarginP
refactor code formatting and improve readability in CharTokenizer . java to enhance code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 57 )
api : fix typo find by codespell on fossies . org
updated libGDX versions from " 1.5 . 5 " and " 1.5 . 6 - SNAPSHOT " to " 1.5 . 6 " and "
removed the metricNames field and its getter method from SolrCore . java to streamline the code and improve readability
fix mavenmanifestfactory to use path . fromurl ( ) instead of uri . create ( )
replaced direct property check for Mac OS with a static final boolean variable to improve code readability and maintainability by centralizing OS detection logic
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the code
clear and add slots to the slotList in the Frame class to ensure the slotList reflects the other object ' s slots
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the variable ' m _ predCount ' to - 1 to
added imports and overridden the mergeProperties method in ConfigurationSpringInitializer to ensure proper merging of configuration properties for better configuration management
refactored command line log setup so that it do n ' t throw an exception .
replaced instances of HashMap with LinkedHashMap in multiple Java files to maintain insertion order for better performance and performance
added logic to retrieve the jdbcHandlerMap from the superclass of a type if it is null to ensure proper handling of class hierarchy in TypeHandlerRegistry
added debug logging statements to HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter classes to improve trace
updated LocaleUtils to remove trailing semicolons from the well - formed string to ensure proper parsing of the locale range based on the last semicol
refactor handler handling in VertxHttp2Handler and add context assertions in Http2Test to improve code clarity and ensure proper context management during server
add cache for xssftable in xssfevaluationworkbook to improve performance
updated SchemaTextDetailType from VERBOSE to BASIC and refactored conditional statements in BaseSchemaTextFormatter . java to improve clarity and maintain
replaced instances of ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to improve clarity and
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order for better performance and performance
[ hotfix ] [ table ] check if the operator tree be clone before use it .
added a null check for the client ID in the DynamicRegistrationClientConfigurationService and updated the ClientDetailsEntityJsonProcessor in JsonFileRegisteredClientService
added a call to clear the AchievementList field ' e ' in the StatList class to ensure that the AchievementList properly resets the
initialize userName , productName , and driverName with empty strings in MutableDatabaseInfo . java and MutableJdbcDriverInfo . java to ensure default values
corrected the spelling of " link _ share _ read _ only " to " link _ share _ view _ only " in multiple files to
added support for reading and writing long buffers in ByteBuffersDataInput . java to enhance data handling capabilities and ensure proper buffer management
renamed variable ` st _ * ` to ` st _ * _ sec ` and introduced a new ` toFileTime _ * _ * ` method
added a new file TestNoEagerReclaimOfHumongousRegions . java that implements a large object class with a large reference to
added search visibility functionality based on user preference to control the visibility of the search container based on search bar visibility
updated the method call from ` router ( ) ` to ` routes ( ) ` in ` EnvRouterFeature . java ` to ensure consistency in the
added null checks for cur and next in LineChartRenderer to prevent potential NullPointerExceptions during rendering
added a new " ReloadPage " action to the Eeze class to provide functionality for reloading the displayed page in the menu
change log level from info to warn for non - existent entries in SQLManager to improve logging clarity for non - existent entries in plots
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE in SpringSecurityCoreVersion . java to ensure compatibility with
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type does not exist before proceeding
use serviceloader to load extension from the serviceloader instead of factoryregistry .
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent potential memory leaks
added a ` stopStatementExecutor ( ) ` method to both ` JdbcConnector ` and ` HiveViewImpl ` , and logging in ` HiveView
updated feature settings and improved type safety in DocumentFactory , XMLSAXHandler , and ElementHandlerFactory classes to enhance code readability and maintainability
updated JdbStopThreadidTest to use ` jdb . contToExit ( 1 ) ` instead of ` jdb . command ( )
added a method ` getType ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enable the retrieval of the type of a
updated variable names from ` runnable ` to ` entry ` for clarity to improve code readability and maintainability by using a more descriptive variable
updated the default HTTP port property from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the default HTTP port is
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to improve clarity and consistency in listener management
( chore ) camel - jbang - newsessionqueueoptions : increase default batch size to 3
[ hotfix ] log error when taskexecutor fail to establish resource manager connection
initialize classFile to null and modify dynamic expression handling in LambdaRewriter . java to improve null safety and ensure proper handling of dynamic expressions when class
updated the exception message format in ProgressBar . java to include min and max parameters to improve clarity of error messages for better debugging
updated message handling methods to include an owner parameter and modified log messages for delayed telegrams to enhance state management and improve logging clarity for better debugging
added new interfaces ` Cursor ` , ` Database ` , ` Database ` , and ` Row ` , along with an abstract class ` Database ` to
refactor multiple assertion classes including AbstractIterableAssert , AbstractPathAssert , AbstractPathAssert , AtomicReferenceArrayAssert , and InstanceOfAssertFactories to improve
beanserver : add setbeanid ( bean , object id ) method that accept setbeanid ( bean , object )
updated the XSLT file transformation method in RuleSetToDocs . java to use a dedicated method to improve code readability and maintainability by centralizing
added a private list of RequestMatchers and modified the way requestMatchers are added to the matchers list to improve handling of multiple request matcher
add equal ( ) and hashcode ( ) to the contactresource class , so that it do n ' t have to implement hashcode ( )
move request and response from abstractprocessor to abstracthttp11processor so that it can be use by other processor
updated log messages for better clarity and error handling in FileManager . java to improve readability and clarity of error messages for better debugging
added resetting of mockControl in TestJdbcDataSource and implemented tearDown method in TestIndexSearcher to ensure proper resource management and prevent memory leaks during
updated test cases in SyntaxTests . java to include imports for LambdasWithInterfaces and modified assertions in Assert . assertEquals to ensure correct source
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
remove parserdecorator . emptyparser , use fallbackparser instead
add security manager check for dedicatedserver and fmlserver
refactor variable declarations in AccountUtils , IndexedForest , and CustomPopup classes for consistency to improve code readability and maintainability
updated the parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
[ j2kt ] improve dumping of jsx comment token .
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for debugging purposes
added tests to verify error handling when the Buck configuration is missing to ensure proper error reporting when the Buck configuration is missing
added physical memory checks and logging for test execution in TestStringBufferAndBuilderGrowth . java to ensure test execution does not exceed the configured limit
refactor MapToLocalDateConverter to use a custom ConversionService instance instead of the deprecated ConversionService class to improve code clarity and maintainability by
added a success flag set to true in HiveMetaStoreClient . java to indicate successful execution of the HiveMetaStoreClient
updated string comparison from ` = = ` to ` . equals ( ) ` in ` ResourceReferenceInfo . java ` and changed the type of `
updated tweet URL checks to include " amp . twimg . com / v / " alongside " vine . co / v / " and modified
mark the AreaReference class as deprecated to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes to improve code readability and maintainability
added assertions and modified reference kind handling in MemberName . java to improve assertion checks and ensure correct reference kind modifications
updated the default value of ` __ submitKeyUpdates ` from ` false ` to ` true ` and added synchronization around the ` runChange ` method
do n ' t show the mouse event in the text field if it ' s a mouse event .
camel - 14237 : camel - core - add support for static method in bean expression . thanks to stu hood for patch .
[ java ] update copyright year for file in src / test / java / net / www / benchmark / benchmark / benchmark . java
added a final modifier to the exception variable and added a suppression warning for unchecked exceptions in AgentRunnerTest . java to improve code readability and
added implementations of ` getDescription ( ) ` methods in multiple classes to provide consistent descriptions for dependencies , plugins , and properties
refactored the handling of faces in the ObjLoader class to improve clarity and logic flow to enhance code readability and maintainability by reducing
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future modifications
corrected the spelling of " reentrantLock " to " lock " across multiple Java files to improve code readability and maintainability by
updated the ` PrintMavenAsCycloneDxBom ` and ` PrintMavenAsCycloneDxBomTest ` classes
updated back ( ) method to include the event ' s component to enhance functionality by passing the event ' s component
remove redundant if statement in saslauthentication . verifycertificates ( )
updated generic type annotations in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to improve type safety and clarity of type parameters
updated method calls from ` NutchConf . get ( ) ` to ` getConf ( ) ` for consistency to improve code readability and maintain
bug fix : sheet sheet should be deselected
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` variable
added null checks before setting time interval for node and edge in ImportContainerImpl . java and created corresponding test assertions in GEXF2Test
updated command syntax in MockServerContainer . java to streamline server port configuration to improve code readability and maintainability
updated error logging to include the exception message to improve debugging by providing more context in error messages
refactor robotshonoringpolicy to crawlmetadata , remove dependency on robotshonoringpolicy
ignore itsystemtest until we fix it
fix unit test by use java . io . file . separator instead of / /
added imports and implemented an alternative path method in ExpectNewDemo . java to provide a fallback method for reading input streams and handle potential runtime exceptions
log4j2 - 1356 fix bug in logparserparsertestcase where filter be not initialize properly .
[ java ] add protectiondomain to the bufferalignmentagent .
added dispose ( ) method to clean up resources in WaterRipples to ensure proper resource management and avoid memory leaks
added configuration for disabling unsafe external table optimizations and implemented semi - join optimization logic in DynamicPartitionPruningOptimization . java to enhance
updated the description of the Authorization header description from " Uses basic authorization with ` base64 ( resource _ server : shared _ secret ) ` to
updated wallpaper offsets in Workspace . java from - 30 to 0 to adjust the wallpaper offset based on scroll range
modified SybaseASADatabase to return true instead of false and added a check for SybaseASADatabase in SequenceSnapshotGenerator to ensure correct
[ flink - 24124 ] [ connector / jdbc ] do n ' t commit / rollback if autocommit = false
added directory creation checks and test assertions for master and slave xsl files in SnapPuller and TestReplicationHandler to ensure proper error handling and validation
updated the AppTarget ID from " id : launcher " to " launcher : launcher " in AppEventProducer . java to align the app target identifier
updated frame methods to include an output buffer parameter across multiple classes to enhance the frame processing by allowing more flexible output handling
removed unnecessary parameters from constructors in OAuth2AuthorizationRequestRedirectFilter and OAuth2AuthorizationRequestRedirectFilter classes to simplify method signatures and improve code read
added an " extended " parameter to the description of the delimiter in the GenericUDFStringToMap . java file to enhance the flexibility of the
updated ` PlainFormatter ` to use ` Instant . now ( ) . truncatedTo ( ChronoUnit . MILLIS ) ` instead of a static final
updated timeout constant from 1000ms to 3000ms and refactored the close method to use join with a retry timeout to improve resource management and
refactor ClassLoadingStrategyHelper to use MethodHandles . privateLookupIn for improved method invocation handling to enhance code readability and maintainability by reducing
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
updated debug log message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify the purpose of the log message for
ignore samplingnamingtest until we fix it .
updated the error message for IllegalArgumentException in GridLayout . java to improve clarity of the error message for better debugging
updated string concatenation methods and improved error handling in DecisionNode and WagonCART classes to enhance code readability and maintainability by standardizing string
added sorting and printing functionality for BoundSheetRecords in XLS2CSVmra . java and BoundSheetRecord . java to ensure consistent ordering of
updated thrust calculation logic in ThrustCurveMotor . java to include start and end thrust variables to improve clarity and accuracy of thrust calculations based on
fix niftyjmedisplay to pass the inputmanager to the inputsystem
added an assert statement to ensure the offset is non - negative before setting the hashCode field offset in UniverseBuilder . java to ensure that the offset
remove deprecate block . getmesh ( ) - remove deprecate
[ hotfix ] [ yarn ] fix checkstyle violation in yarntaskmanagerrunner
added support for EMPTY _ WORD _ OPTIONS in multiple classes and modified matcher logic in LineReaderImpl to enhance flexibility in matching words based on
do n ' t write replica to commit log if writecommitlog be false
added a default button ID and modified clipboard handling in CaptureActivity to enhance user experience by allowing dynamic selection of web content
added a test method ` testBatching ` to ` JoinedTableTest ` to validate batching behavior for Post objects to ensure proper handling of
added handling for EntityExistsException in JpaPersistenceService to improve error logging and provide clearer context for duplicate timestamps
removed the deprecated format option and updated its usage in the CucumberOptions and RuntimeOptions classes to ensure compatibility with the newer Cucumber
removed the save ( ) method call from the PMS class to streamline the code by eliminating unnecessary operations
simplified the back key handling logic in ExtendedEditText . java to improve code readability and maintainability
added a new class ` Capacity ` and modified ` AbstractStringBuilder ` for improved capacity management to enhance functionality and ensure proper handling of string buffer capacity
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to handle note saving
fix xwpfwordextractor to extract endnotes from xwpfdocument
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager . java and updated method calls in CasEventsReportEndpointTests .
added a new test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify the correct version of the OGR library
added a new file ` Lifecycle . java ` implementing a GUI component with network error handling to facilitate network error management and improve user experience by logging network
update deviantart ripper to handle http 404 error
removed unused imports and modified loop structure in BodyTubeShapes and RocketFigure classes to streamline code and improve readability by
added support for scaling and scaling of surfaces in PJOGL based on a new configuration option to allow dynamic scaling of surfaces based on
create project : auto - select offline if dartlang be not available .
replaced ` PackedInts . FormatAndBits ` with ` BlockPackedWriter ` and refactored disk value writing logic to improve performance and
refactor DefaultStatusRoute class to use SortedSet instead of ArrayList for routing by status to improve performance and maintainability of the code
removed redundant data handling logic in GoAwayTest . java to streamline code and improve readability
added property handling for Map and FluentSetterBean in ReflectionUtils and created FluentSetterBean class for testing to ensure fluent setter functionality is correctly populated for
updated the return type of the post method in BlockingHttpEndpoint from ListenableFuture < ? > to ListenableFuture < HttpResponse > and added a new
test : fix flaky test : filesortbyexpressiontest and filesortbyignorecaseexpressiontest
updated logging statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity by providing more descriptive output
added support for image scaling functionality in the RtfDocumentSettings class to enhance user experience by providing detailed image scaling options
added support for aggregate function name in TSServiceImpl . java to enhance functionality by allowing customizable aggregate function names
updated test classes to extend WithNestedTests . AbstractNestedTest instead of LuceneTestCase to improve test structure and ensure proper cleanup after tests are executed
add x - Cap - Enable functionality to the PresencePanel based on registration state and server URI to enhance user experience by allowing access to X -
add the ability to handle exception in the web application . this allow the dispatcher to decide if an exception can be handle .
added methods to stop text and text editing in CodenameOneImplementation , Display , and AndroidImplementation to enhance user experience by allowing asynchronous execution of text
nifi - 13636 : allow to set a non - existing group attribute on a flowfile when there be no group .
added a new parameter ` isNewComponent ` to the ` showDialog ` method and modified its logic to conditionally select presets based on component
added websocket error handling and log message send to client
added a check to skip HTMLDataFlavorTest on non - Windows OS to ensure tests are only run on Windows
added SQL _ SERVER _ SNAPSHOT isolation level to the TransactionIsolationLevel class to enhance transaction isolation by supporting SQL server snapshots
replaced the direct insertion of a new record ID with a loop that waits for a new record to be available to improve resource management and prevent potential
remove usage of jrecompat . getinstance ( ) . jarfilenewinstance ( ) in favor of java . util . zipfile
added a null check for the command class before creating the service instance to avoid potential NullPointerExceptions when accessing the command class
make disk _ failure _ policy default to ignore . patch by jbellis
removed public access modifier from RipperInterface and RipStatusHandler classes to allow external access to these methods from outside the class
[ java ] filter out non - public ip address in peerdiscoveryagent .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to streamline the code by eliminating unused method
updated import statements in PinotSegmentRebalancer . java and modified computePartitionAssignment method to include ClusterDataCache to ensure compatibility with the new
simonstewart : remove the deletecontainer ( ) method from the docker api
refactor ` DefaultSeleneseCommand ` to use ` Assert . assertIsTrue ` for parsing input and add unit tests for it to improve
added multiple attempts rule to the CreateGlossaryTests class to enhance test reliability by allowing retries during tests
updated references to ` allOfRef ` , ` anyOfRef ` , and ` oneOfItem ` to use ` Components . COMPONENT
refactor EntityDeletedEvent to use JsonUtils for JSON serialization instead of direct access to the deleted state to improve code readability and maintainability by
added regex pattern matching for " gop " values in FormatConfiguration . java and updated related imports in DLNAMediaInfo . java and
added a new file TestProfileReturnTypePrinting . java that implements a test for method return types to ensure that the method prints the return values
added locking mechanisms to manage concurrent access in ParseConfigUtils . java to improve thread safety and ensure thread safety during configuration updates
added acquireReleaseColumnsSegmentOperator handling for AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator . java to ensure proper resource
simonstewart : unignoring a couple of test in the firefox profile test
added return statements for display density and bar properties in HasAndroidDeviceDetails . java and updated generic type in getSystemBars ( ) method to improve
remove unnecessary call to stats . addbug ( ) from projectstats
added a disabled color based on the look and feel of the GTK look and feel to improve user experience by providing a clearer visual representation of
removed multiple redundant @ Override annotations in CacheControlImpl . java to clean up the code and improve readability
added logic to return a date in the future if the recurrence has an empty byDays list to ensure the action correctly reflects the current date when no
replaced the upload button with an action menu item for multi - upload functionality to improve user experience by allowing users to access the upload task directly from the
refactor multiple classes related to message security to improve code organization and maintainability
added a method to load exchange metadata from InputStream in MeXBTExchange and RippleExchange classes to enable loading of exchange metadata from the input stream
added a custom serializer for Hadoop Writable types in CrawlDbReader to enhance JSON serialization for Hadoop data types
remove unused testerrequest in testjaspicbasicauthenticator . java
added configuration pid to the mdns discovery service to allow dynamic configuration of the mdns service
added null check for messageitem in chatviewerfragment to avoid crash
updated ForkJoinPool initialization in TestBPIndexReorderer . java to include ForkJoinWorkerThread and randomness to enhance thread management and improve performance in concurrent processing
removed assertions to check for dependencies contain blocker roles for DATANODE and NAMENODE to streamline the test by eliminating unnecessary checks
added a method ` restoreLocalInfoFromTableInfo ` and modified the ` writeObject ` method to call ` dedupWithTableInfo ` to
standardized spacing in multiple Java files to improve code readability and maintain consistency
added translation and scaling functionality to BitmapFontTest . java and modified logoSprite ' s flip behavior to ensure the logo sprite reflects the correct graphical
[ hotfix ] [ python ] ignore non - built - in aggregate in group window aggregate rule
http : / / issues . apache . org / jira / browse / amq - 4892 - fix race condition in server . send (
add getunreachabletokenowners ( ) method to gossiper and fix typo in storageproxy
fix coordmultiply ( ) to not change to multiplication in geogebra
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43535 -
changed variable declarations from ` _ display ` to ` private static final ` and added null checks for ` localEnv ` and ` device ` to ensure
refactor RecommenderJob , AbstractJob , and RecommenderJob classes to improve code organization and maintainability
[ hotfix ] [ runtime ] replace synchronized with readwritelock and writelock in environmentimpl
added unit tests for reading identity providers in different zones using OAuth2 tokens to ensure correct functionality of identity providers in different zones and access tokens
[ hotfix ] [ runtime ] fix npe in pointintimetrigger
removed unused import of Service class in SendTicketGrantingTicketActionTests . java to streamline dependencies and improve code clarity
update subscription version after rebalance
make cairo . detached . mkdir . mode configurable
[ java ] add a test to ensure that cluster . sendmessagetoslowdownservice ( ) will be call when there be a follower
updated default label pattern from " [ authors3 ] [ year ] " to " [ auth ] [ year ] " in JabRefPreferences .
refactor DBinaryDescription and DLibraryDescription to utilize CxxPlatforms for parsing time dependencies to improve dependency resolution and maintainability by central
added dispose method and refactored initialization logic in GoogleCloudAPI . java and GoogleTTSService . java to improve resource management and ensure proper
camel - 14265 : file component : consume do file with dynamic file name , fix the issue of file completion not work for dynamic file name
added a new configuration option ` reopenReaders ` in ` SolrConfig ` and updated the condition in ` SolrCore ` to check for reader reopen
[ java ] add dialect attribute to mapwriter . writemap ( ) .
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding test cases in ` UpdateTests ` to enhance functionality
added a new method ` dup ` in ` mmm Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition to an interface and simplify its implementation in multiple test files to improve code readability and maintainability by using lambda expressions
replaced TermQuery with ConstantScoreQuery and adjusted expected value calculation in TestFacetsCollector . java to improve query performance and simplify the expected value type
removed several unused Java class imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
added a new method ` providesDirectNearbyUploadPreferences ` and modified the existing ` providesUploadController ` method to accept it as a parameter to
added support for ` sysDummy1 ` mode in the ` Mode ` class and updated ` Parser ` and ` Parser ` classes to support it to
refactor logging in TraceGatewayEnvironmentPostProcessor and add conditional properties in SamplerAutoConfiguration and SamplerAutoConfigurationTests to enhance logging clarity and
add a test to ensure that the last property be add to the poixmlproperties , not the last one .
[ geotiff ] handle negative infinity in geotiffreader . read ( )
updated ` CliDriver ` and ` SessionState ` to use ` UUID ` instead of ` Date ` and ` System . getProperty ( " user .
update mockrestadapter to use rx . schedulers . from ( ) instead of mockrestadapter . httpexecutor . execute ( ) .
added a default implementation for the method ` selectByRuleIdSet ` using a partitioned list to enhance flexibility in selecting rule conditions based on
added a method ` addExitDescription ` to ` ExitStatus ` and refactored usage in ` AbstractJob ` and ` AbstractStep ` to
fix multiblock click not work if the player be the minerplayer
rename columnfamily to columnfamilycolumn in slicereadcommand
removed unnecessary import of Collections and corrected the range length comparison in the Math . min method to improve code readability and maintainability
refactor DefaultIOSInput to use UIAlertController instead of UIAlertViewDelegate to improve clarity and functionality of alert handling in the application
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java `
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method of ` Value ` class to improve clarity and consistency in
added assertion to verify that the service ' s message is not null to ensure that the service ' s message is not null before proceeding
refactor key handling in MappingMongoConverter to improve clarity and efficiency to enhance readability and maintainability of key conversion logic
updated Timber logging statements for place descriptions in NearbyMapFragment . java to improve code readability and consistency in logging output
camel - 13636 : camel - core - optimize to avoid use javatype instead of deprecated javatype .
added null check for terms in FuzzyLikeThisQuery and implemented a test for non - existing fields in FuzzyLikeThisQueryTest to ensure
modified the ` writeApplicationsLinks ` method to accept a boolean parameter for tabular display to enhance user experience by providing a more user - friendly
[ ds - 241 ] use new identifierservicefactory for createmissingidentifiers instead of create a new one
updated the parameter of ` assignBytes ` method to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure compatibility with
changed the return type of the getDisplayScript method from abstract to non - abstract and added a default implementation to provide a default implementation for the method
simonstewart : fix the order of sequence use in the remote webdriver
pdfbox - 4892 : initialize cosobjects list with the size of the list .
added a wait mechanism to wait for active interfaces before proceeding in NetworkConfigurationWatcher . java and null checks in NetworkManagerListenerImpl . java to
fix bug # 45538 - handle nested object in hssfworkbook . getallembeddedobjects ( )
removed the import of ` jogamp . common . os . elf . Shdr ` from ` ShaderNodeLoaderDelegate . java ` to
replaced ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve code readability and maintainability
pdfbox - 4892 : do n ' t show symbol in font , a suggest by valerybokov
use gl11 . glpopattribute ( ) instead of glstatemanager . popattrib ( ) in hourglass
refactor LiveTvGuideActivity to use a private variable for current guide start and update related methods to improve code readability and maintainability by
updated method invocation in MockGateway . java and added new test classes CommonParentTest . java , ChildA . java , ChildB . java ,
added libfreetype . so and libfontmanager . so to open libfontmanager . so
refactor function parsing to use a dummy argument replacer for multi - variable functions to improve code readability and maintainability by standardizing variable
[ gr - 24137 ] loop safepoint elimination : add guard for unsigned range .
refactor type checking logic in TypeFrameModelingVisitor . java for improved readability and maintainability to enhance code clarity and maintainability by reducing
added a new ` LocalizedString ` class and refactored method calls in ` Attr ` and ` Resolve ` to use it to improve localization
added a boolean property ` disableClasspathSearch ` and its getter / setter methods in ` ServerConfig . java ` , and modified the condition in `
dataline : make field final and use arrays . copyof ( ) .
updated default retries from 0 to 2 and adjusted retries from 2 to 1 in Reference . java and AnnotationPropertyValuesAdapterTest . java to align retries
added functionality to read and process settings from a file and updated usage messages to include settingsFileName to enhance functionality by allowing users to specify additional settings for
added text views for uploaded images and wiki textview in AchievementsFragment . java to improve user experience by providing clearer feedback on uploaded images
added annotation processing logger calls in TranslatingJavacPhaseTracerTest . java to enhance testing capabilities for annotation processing processes
added a new ` CategoryInfo ` class and updated ` MwQueryPage ` to include ` prop = categoryinfo ` in the query parameters to
reformatted assertions for username and password in AuthzAuthenticationRequest . java to improve code readability and maintainability
added accessibility support to the TaskbarStashController by introducing a method to retrieve the recommended timeout for the taskbar to enhance user experience by allowing
added handling for the regex character ' ^ ' in the GenericSignatureParser to ensure NoSuchElementException is thrown only once to prevent NoSuchElementException
updated access flag handling in ClassVisitorDriverFromElement and added multiple test cases for stubbing various Java classes to ensure correct behavior of stubbed jar
added null checks using ` Objects . requireNonNull ` in ` IntervalFilter ` and improved null handling in ` LowpassIntervalsSource ` to ensure
added two test methods ` testEntrySetIteratorLastHashNext ` and ` testEntrySetIteratorLastNext ` to ` MapInterfaceTest ` to
added a serialVersionUID field to TreeMap class to ensure proper serialization and deserialization of the TreeMap class
updated the timestamp from milliseconds to seconds in ImageData . java to ensure accurate representation of the created time for image data
updated the singular web service to support additional grobcov libraries and added a new method to retrieve the locus command to enhance functionality and improve the
added imports for EncryptionUtils and modified key deletion logic in AccountRemovalJob . java to ensure proper cleanup of private and public keys for accounts
refactor connection header setting to use a dedicated utility method to improve code readability and maintainability by centralizing header setting logic
fix npe in postjoinmapoperation when there be no interceptor and lite member join
no effective change - remove unused processor in standarddialect . java
removed the spillEnabled parameter from several constructors in multiple hash table classes to simplify the code by eliminating unnecessary parameters
refactor environment variable handling to use Optional for better null safety to improve code readability and maintainability by centralizing environment variable retrieval logic
fix checkstyle issue in util / xwork / defaultactionmapper . java
added SerializableMode import to Mockito . java and adjusted formatting in PluginSwitch . java to enhance mocking functionality and improve code readability
added nullability check for field injection point in AbstractBeanDefinition . java to ensure proper handling of null field values in dependency injection
added support for parsing isolation levels in select statements in the database mode to enhance compatibility with different database modes
added constants for Hive server2 transport and HTTP path in HiveConnection . java to improve code readability and maintainability by using predefined constants
added a method ` isCacheable ` to ` GlobalOrdinalsWithScoreQuery ` that always returns false to ensure that the query is not cached
added a new file TestStrangeControl . java that implements a threaded test for StrangeControl to facilitate testing of the StrangeControl functionality
updated file extension from " . json " to " . jsfile " and " . jslib " in JsFile . java and Js
added selectionStart and selectionEnd fields with their respective setters and getters in ShadowEditText . java to enable dynamic selection behavior in the ShadowEditText
refactor GRPC server handling to use Closeable for better resource management to improve resource management and ensure proper shutdown of the GRPC server
added a new method ` use ( String path , Class < ? > routeClass ) ` and improved null checks for the ` path ` parameter in
added a null check for the fst variable in FreeTextSuggester . java to ensure that lookup is not supported at this time to prevent runtime
updated line separator handling in T4975569 . java and improved URL verification in T6729471 . java to ensure consistent newline formatting
added ABIWriter class loading logic to JavacInMemoryStep . java to enable dynamic processing of ABI writers from the ABI writer protocol
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to boolean method
added a check for the shutdown state of the scheduled executor service before executing a pull request and logging a warning if the service is not stopped to improve
refactor EnergyEndpointer class to improve code organization to enhance maintainability and readability of the code
refactor component preset handling in ComponentPresetChooserDialog to use a list of displayed columns instead of an array to improve code readability and maintainability
remove unused import of java . io . bufferedinputstream and org . opensolaris . opengrok . util . IOUtils .
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated ` CxxLibraryMetadataFactory `
deleted the files Constants . java and DistanceUtils . java to remove unused code to streamline the codebase
replaced diskDelimiter parsing with substring extraction for key to improve readability and maintainability of the code
[ gr - 26135 ] fix build - time initialization of native - image .
added a new test method ` testCreateInline ` to ` RoleBindingTest ` and refactored the ` create ` method in ` RoleBinding
added logging statements to configure session cookie configuration in UaaSessionCookieConfig . java to improve debugging capabilities for session cookie configurations
updated the calculation of ` fName ` to use ` cal . get ( Calendar . DAY _ OF _ YEAR ) ` instead of ` LOG
update variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve clarity and consistency in variable naming
added error handling for invalid options in JavapTask and created T8033711 class for testing to improve robustness by providing clearer error
replaced calls to ` Collectors . toList ( ) ` with direct calls to ` toList ( ) ` in multiple Java files to simplify code and
updated logging level from error to warn and modified error handling logic in TaskDriver . java to improve error visibility and handle shutdown scenarios gracefully
[ flink - 24136 ] [ network ] add enabletieredstorage parameter to inputgatespecutils # getmaxrequiredbuffersper
add helper method to check if a service return a non - success status
added useGL20 configuration to Cuboc and modified LwjglApplication initialization to enable GL20 support for the Cubocy application
remove unnecessary check for voidtype in jimplebody . checkreturntype
refactor OutputMacroExpander to replace DefaultSourcePathResolver with a new Arg class for command - line argument handling to improve code readability and
[ hotfix ] [ test ] rename assertnojobslefteventually to assertnolightjobslefteventually
added additional checks for file paths containing " \ \ build \ " in MergeWordsListTask . java to ensure that only valid file paths are processed
change return type of getresponsecomments ( ) to be a map < string , list < feedbackresponseattributes > > >
removed unnecessary whitespace in the Container class to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java implementing a class A with methods for saving and checking object escapes to facilitate testing of object escape
replaced direct stream skip calls with IOUtils . skip for reading bytes to improve code readability and maintainability by utilizing Apache Commons IO
added interceptor functionality to manage pool start in ConnectionPool and improved error logging in JdbcInterceptor to enhance error handling and provide clearer diagnostics during connection
changed the catch block from Exception to Throwable in CoreContainer . java to handle a broader range of error scenarios
added checks for block removal in LruBlockCache and implemented new test methods in TestLruBlockCache to improve error handling and ensure correct eviction
removed null check for taskCount in RecentsView . java to simplify code and improve readability
added instance config change listener to HelixBrokerStarter and increased sleep duration from 1000ms to 5000ms in HelixServerStarter to ensure
added CoinmateMetadataServiceRaw and CoinmateStatic methods for fetching exchange metadata to enable dynamic retrieval of exchange metadata from the Coinmate exchange
add warn message for $ { basedir } / $ { project . basedir } / $ { basedir } / $ { project . basedir } / $
pdfbox - 4892 : do n ' t overwrite the key if the key do n ' t match
add a setdisplaydata ( ) method to ptransform to allow the transformation of displaydata
replaced instances of ` DefaultSubject ` with ` assertThat ` for null checks in ` SubjectTest . java ` to improve type safety and clarity in assertions
added a security property to disable MD2 , RSA keySize , and RSA keySize in ClientJSSEServerJSSE . java to enhance security
added checks for subcommand types in OptionData . java to ensure proper usage of sub - commands and sub - command groups with OptionData
updated module - info . java files for mmm and ppp modules to improve module documentation clarity and maintainability
added error handling and improved exception management in the ensureConnection method to ensure proper exception management and provide a clearer error message for unknown server errors
set ` sCheckingEvents ` to true in ` LauncherInstrumentation . java ` and reset ` mFinished ` in ` LogEventChecker . java
added exception handling and improved exception logging in FileSinkOperator . java to enhance error management and ensure proper resource management during file closing
added diagnostic output and modified return statement in SchemaGenerator . java to include diagnostics to enhance debugging capabilities by displaying diagnostic information during task execution
replaced instances of ` RuntimeException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using ` Opt
refactor DataSourceMonitorTests to improve test coverage to enhance maintainability and readability of the test code
added a ` loadedResourcePaths ` set to track loaded resource paths and updated the resource scanning logic to ensure that only unique resource paths are scanned
updated variable name from ` o ` to ` testInstance ` and added null check for ` testInstance ` to improve clarity and error logging for service
added null check and improved response handling in RoutingInBoundHandler . java to ensure robust error handling and prevent potential null pointer exceptions
fix nullpointerexception when config . natip be not set
updated memory allocation classes in AsyncTaskCopyLocalJars . java and modified ArrowBuf imports in WritableByteChannelAdapter . java and Serializer .
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP parser headers and body buffers in HttpConnection . java and implemented a new test case in RFC2616BaseTest . java to ensure
[ java ] ensure that timeoutsubscriber do n ' t cancel subscription on timeout .
improve leveledmanifest compaction performance by reduce the number of compaction
added a test annotation to the TestOrcTimezone1 . java file to enable testing of timezone - related functionalities
[ java ] add support for substrings in debug . getenabledmetrics ( ) .
added error handling for JSON parsing in PinotSegmentRestletResource and simplified return statements in TraceContext and TraceContextTest to improve error handling and
modified the default renderer retrieval logic in JTable . java and added a new test class Test6888156 . java to ensure proper handling of null
added conditional shell command to the argument list based on the existence of the environment to ensure proper execution of shell commands based on the existence of the shell
updated the parameter of deleteWithoutSubscriptions from 10 to 1 in DatabaseCleaningService . java to increase the number of subscriptions removed from 10 to
replaced List with LinkedHashSet for testInstances in MockitoExtension . java and added dependency injection in JUnitJupiterTest . java to improve performance and
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
removed redundant calls to deleteFilesAfterClose ( ) and fileMmapEnableIfSupported ( ) in BTreeMapTest . java to streamline
modified the iterator initialization and added a reset method in SortedIntList . java , and created a new test class SortedIntListTest .
added unregistering of jmx object in DefaultRemoteProxy and modified exception handling in JMXHelper to improve jmx management and improve error handling clarity
change the default writebuffer size from 4MB to 64MB in RocksDBConfigurableOptions . java to adjust the default writebuffer size for
removed the ' true ' parameter from the constructor call in Style . java to simplify the constructor by removing unnecessary parameters
replace ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure that the request uses the correct encoding for
added JSON graph rendering functionality in SamzaRunner . java to enable portable pipelines to run JSON graphs in the application
update helloaudio to use mouseinput instead of vector3f
refactor LoopRotateBadNodeBudget class for improved efficiency to enhance performance and maintainability of the code
added ` convertToMongoType ` method to ` AbstractMongoConverter ` , ` MappingMongoConverter ` , ` MongoWriter ` , ` MongoOperationsUnitTest
[ geogebra ] fix inputbox renderer for imaginary unit inputbox
[ java ] remove unnecessary array . tostring ( ) call in sendkeytoactiveelement . tostring ( ) .
added methods to create a scaled image instance and reduce dimensions in AddAndScaleMultiImage . java to improve image scaling efficiency and ensure proper handling of
removed the extendArgumentCheck and extendWrapStore methods from DBMaker . java to streamline the code by eliminating unused methods
added a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to ensure the shift state is updated immediately after a key press
removed the ` DETECTED _ ACTIVITY ` constant from ` BundleConstants ` , modified ` CSVFileLogger ` , ` CustomUrlManager
updated import statements to reference the protocol . ExtensionConfig instead of the extensions package to reflect the new package structure for better organization and clarity
removed import of Buildable from AaptPackageResources . java to streamline dependencies and improve code clarity
added comments to identify unused variables in CodeException , ConstantInvokeDynamic , ConstantMethodHandle , and ConstantMethodType classes to improve code readability and
updated error message in WebSocketUpgradeHandler to include the status code of the response to improve clarity of the error message for better debugging
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintainability
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
removed redundant permission checks for plot ownership in the Merge . java file to streamline the merge logic for better readability and maintainability
deprecated the ` getConversationID ( ) ` method across multiple classes in ` HttpContentResponse ` , ` HttpResponse ` , and ` Response ` classes
replaced imports from com . sun . speech . freetts with de . dfki . lt . mary . unitselection . featureprocessor
refactor ` stripQuotes ` method to use ` PlanUtils . stripQuotes ` instead of ` HashMap ` and ` HashMap ` to improve
refactor ` DLNAResource ` to simplify the ` updateRendering ` method and improve player context handling to enhance code readability and maintainability
defaultpluginmanager : add repository from resolutiongroup and remote artifact to the list of repository .
fixed unit test failure of cxfrsproducerclientfactorycachetest
refactor PhysicsClient class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failure
added a new File instance with the specified name in ZipFile . java to ensure the file is properly initialized with the specified name
added a deprecated method handleAll in TryType . java to indicate that the method should no longer be used in the future
add @ nonnullbydefault annotation to channel . getuid ( ) so it can be use by default .
added logging functionality for call stack traces in GenericDAOImpl and created StackTraceUtils class for better traceability to enhance debugging capabilities and improve code
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the test code and improve readability
refactor argument parsing logic in FunDefBase and ParenthesesFunDef classes to handle single parentheses correctly to improve flexibility in
updated SQL query for selecting configurations to include cluster names and improved error logging for cluster - specific configurations to enhance clarity and maintainability of
add ` jdk . internal . misc . innocuousthread ` to suppress warning on jdk 11
updated JsonTreeReader to handle additional JSON token types and added corresponding tests to improve error handling and ensure proper functionality of JSON element parsing
added support for handling unexpected arguments in the internal runner in TestCommand . java and implemented a test for extra arguments in ExternalTestRunnerIntegrationTest . java to
added ` dedup ` and ` indexSolr ` methods to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance Solr functionality
[ flink - 20527 ] [ table - planner ] add support for blink planner in example
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure proper database management during integration tests
updated progress handling in Progress . java and RSSReader . java to introduce a showPercentage parameter and modify progress display logic to improve user experience by
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added overloaded methods for writing multiple POI documents and closing streams to improve resource management and ensure proper closure of the POIDocument object
replaced multiple println statements with print statements in JavaBuild . java to improve readability and maintainability of output formatting
replaced ` Box ` with ` BlockBox ` and added getter methods for ` _ root ` and ` getDotsPerPoint ` to improve type safety
updated the ` apply ` method in ` CustomQueryFilterFactory ` to handle generic user searches and improved test cases in ` TestLdapAtnProvider
add default port to the router so that the router do n ' t depend on the default port .
updated ` SnmpTargetHandler ` , ` AbstractSnmpTargetHandlerTest ` , ` StringChannelTest ` , and ` SnmpTargetHandlerTest
fix instructorfeedbackeditpageaction to only allow submit session on instructor that have submit privilege
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should no longer be used
refactor FileResolverImpl to separate jar and war file extraction logic into a single loop to improve code readability and maintainability by consolidating
updated the format of ` newFlushedSize ` to include ` docstores ` in the output to enhance clarity of the logging output for better
fix ` ` dirt ' ' output to use ` ` unlocalized name ' '
updated conditional checks for whitespace settings from ` settings . stripWhitespaceX ` and ` settings . stripWhitespaceY ` to ` settings . stripWhitespaceY
updated the calculation of locks in FeedRefreshUpdater . java to use milliseconds instead of a fixed value of threads to ensure accurate locking time for
updated the ` deserializeFrom ` method to include ` exactSearch ` parameter and added a test for the ` getMeasurementChunkMetadataListMapIterator `
removed the DateFormat parameter from the makeResultFromDelimitedString method in CSVSaveService . java to simplify the method signature and improve readability
added import for Dimension and adjusted pane ' s preferred size in NavigationShareTab . java to improve layout responsiveness by adjusting pane ' s
refactor BeiderMorseFilter to use a State object for state management instead of OffsetAttribute to improve code readability and maintainability by
rename UpnpAudioSinkReg , UpnpHandler , UpnpHandler , UpnpEntryQueue , and UpnpEntryQueue classes to improve clarity
fix the waul lens waul be able to place the burst in the wrong place .
added a new test method ` toJson ` and updated import statements in ` JsonTest . java ` to improve test coverage and ensure proper handling of
[ hotfix ] [ runtime ] fix typo in mutablecontextdatasupplier javadoc
change catch block from Exception to Throwable and log a warning instead of throwing a specific exception to improve error handling and provide more informative logging when the
added a HTTPS parameter to the KubernetesMockServer constructor to allow the KubernetesMockServer to use a specified HTTPS
add stamp to foreigncallnode so that it do n ' t depend on intrinsics .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 405 - allow OPTIONS
tika - 132 : use us locale for decimalformat in tika - tika - extractor
updated error handling in ShowFileRequestHandler to return 404 instead of BAD _ REQUEST and added a new test case in ShowFileRequestHandlerTest to improve error
added a new ` TryCatch ` class to handle exceptions in a try - catch block to improve exception handling in the codebase
added a clamp method to the Vector and Vector2 classes to enable clamping between min and max values in vector operations
added client details handling and modified access token creation logic in ChainedTokenGranter . java to ensure requested scopes are correctly set based on the client
refactor BC _ instanceof class to improve type checking logic to enhance code readability and maintainability
added a logger instance to EditorBottomSheetBehavior and removed the setSaveFlags method to streamline logging and improve performance by reducing unnecessary method calls
updated UaaUrlUtilsTest to use JUnit 5 annotations and modified test class visibility to enhance test structure and ensure compatibility with the newer J
hhh - 13636 nativequery . addscalar ( ) now return basicdomaintype instead of basicdomaintype . getname ( )
added caching for font AAT status in SunLayoutEngine . java to improve performance by avoiding redundant calculations on existing fonts
[ java ] use intarraylist instead of intbigarray for the typedset instance size calculation .
simonstewart : re - enable the remote webdriver test for the ie driver
[ hotfix ] fix checkstyle violation in brokerrequestutils
refactor the instance management in InjectorBuilderImpl to use a map for better order management to improve code readability and maintainability by using a
updated method calls in RawTargetToRawTargetNodeTransformer to use getBasePath ( ) instead of getAbsolutePathToBuildFile ( ) to simplify path handling
added a null check for the ` val ` before parsing it in ` EchoMessage . java ` to avoid potential ` NullPointerException ` when ` val
fix a problem with jabber connection not be close when the connection be close .
removed the trailing ' F ' from the DEFAULT _ LOAD _ FACTOR constant in IntHashSet . java to ensure the constant is consistent with the
added a method to retrieve all data types physical variations in VectorizationContext and updated related classes to utilize this method to improve data handling efficiency
updated package declarations for HtmlAssetTranslator and StringsResourceTranslator from ` com . google . zxing ` to ` com . google . z
refactor conditional logic for handling overview actions in OverviewState . java to improve readability and maintainability of the code
added JPA entity annotation to BaseActivityEventEntity . java to enable entity - related functionality in the database
added tracing for TouchInt interactions in NavBarSwipeInteractionHandler and TouchInteractionService to improve debugging and visibility of touch event events
added a new file ` InvalidOptions . java ` that implements a test class for validating Java options to ensure that the Java program behaves as
added error logging for inconsistent supported display sizes in DisplayController . java to improve debugging by providing clearer diagnostics when the number of supported displays
refactored OAuth20UsernamePasswordAuthenticator and OAuth20Utils to use a unified method for retrieving client ID and client secret to improve code organization and
updated the ` _ unwrapServletException ` boolean value from ` false ` to ` true ` in ` ErrorPageErrorHandler ` and ` AsyncContextTest `
updated status handling in PackageUpdatedTask to set default status to ShortcutInfo . DEFAULT to ensure proper status updates when the task is completed
camel - 14197 : fixed the issue of seda default unbounded queue size
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App . java and integrated them into Kernel . java and Kernel . java to
added HttpClient support to ThirdEyeApplication by implementing HttpClientBuilder and HttpClientConfiguration to enhance HTTP client configuration flexibility
added sorting functionality to the job instance fetch request in JpaJobPersistenceImpl . java and JobInstanceFetchRequest . java to enhance data retrieval capabilities
updated the ` cancelCryptoFacilitiesOrder ` method to return a specific currency pair instead of throwing an exception to improve order cancellation handling and
ggb - 2019 hide the keyboard when click on av
use nfi . memcpy instead of a manual memcpy .
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve readability and maintainability of the code
added a boolean flag ` blockToolTip ` to the ` ToolTipManagerW ` class and modified its usage in ` ModeToggleMenu ` to block tooltips
updated DefaultDateTypeAdapter to use DateFormat . getDateTimeInstance ( ) instead of DateFormat . DEFAULT and added a dateStyle parameter to GsonBuilder to
updated playerSet string formatting in ListCommand . java to improve readability and maintainability of the code
added a check for an empty list in the List class to ensure proper handling of empty lists
do n ' t wrap commandexception in a wrappedcommandexception in a commandexception
updated getLikeExpression method to accept a boolean parameter for regexp expression handling to enhance flexibility in expression processing based on regexp type
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to provide access to start and stop methods for
updated locale handling in the runChild method of LuceneTestCase to ensure proper locale management during test execution
refactor multiple Java classes to improve consistency and organization to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating context handler
camel - 14197 : camel - osgi - add camel - osgi - test - route - builder support for camel - osgi - blueprint
nifi - 13636 : fix testexecutestreamcommand to use contains instead of substring .
refactor the ` returnTypeSubstitutable ` method to remove the ` r1 ` parameter and simplify its implementation to enhance code readability
added ThrottleType enum and modified processThrottled method to handle CHARS and BYTES differently to improve performance control during template processing based on 
removed unnecessary variable assignment for pixel in ColorBleedEffect . java and added conditional checks in SpriteBatch . java to streamline code and
refactor methods in Annotation and AnnotatedElement classes to improve code readability and maintainability
added a new interface Model in the org . apache . poi . hssf . model package and modified Sheet and Workbook classes to implement
camel - 13636 : use constant instead of hardcoded string in camel - http
added a ` clearEntityManager ` property and its setter in ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control entity
added null checks for the ShortcutInfo object in multiple classes to prevent potential NullPointerExceptions and improve error handling
updated TwoDimensionalCollectionValuedMap instantiation to include a boolean parameter to enable the functionality of the MapNodePatternTrigger
updated exchange specifications from " btc - e " to " wex " and changed the host and exchange name from " BTC - e
added null checks in OrcEncodedDataConsumer and improved null safety in EncodedTreeReaderFactory to enhance code robustness and prevent potential NullPointerException
added null check for files in SegmentInfos . java and a test for opening the IndexReader after deletion in TestIndexReader . java to ensure robust
( chore ) camel - elasticsearch : fix test for hsearchsorthelperimpl and elasticsearchsorthelperimpl .
added a check for negative values before returning them in DeviceHandler . java to ensure proper handling of negative values and prevent potential overflow issues
updated boundary checks from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java ` to
camel - 14146 : camel - jbang - add a debug log to track the time take of route from the registry .
[ hl ] fix timing issue in hl medium playlist
refactor ` NumericRangeFilterBuilderTestCase ` and ` NumericRangeQueryBuilderTestCase ` classes to extend ` LuceneTestCase ` instead of ` TestCase ` to
added a new ` StatefulMapper2 ` class and updated ` StatefulOperatorTest ` to utilize it to improve state management and ensure correct
removed null check for fill and stroke in Area . java and set bitmap shader shift in Line . java to streamline code by eliminating unnecessary null check
removed the dbExists method and adjusted related imports in Blockchain and BlockchainTest classes to streamline the code and improve maintainability by eliminating
trim whitespace from the group value in SQLPlusSupport . java to ensure that the value is trimmed before processing to avoid potential errors
disables async connection for the apr socket so that we do n ' t have to re - connect
removed the calculation for divider location in DockSplitPaneW . java to streamline the code by eliminating unnecessary calculations
added health check metrics and implemented legacy health check endpoint to enhance monitoring capabilities for the controller ' s health status
set visibility of shared avatars view to GONE in LocalFileListAdapter to hide shared avatars when not needed
fix typo in mebis resource file name
updated comparison operators for argument lengths from ` > = ` to ` < = ` in multiple Java files to ensure that the argument length is within
added logging level checks in LogInterceptor . java to ensure command execution is only executed when the logging level is fine
replaced the awaitLatch method with an assertion to check if the finished spans are equal to expected values to improve test reliability by ensuring the latch is
replaced the use of a static locale variable with a setter method and added getter and setter methods for locale to simplify code and improve encapsulation
use linkedhashset instead of linkedhashset in entrycustomizationdialog to avoid concurrentmodificationexception
jbrules - 2423 : fix bug in builder . attachcolumn ( ) when constraint be a betanodeconstraint
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` to handle the " UNAUTHORIZED "
added serverState variable and modified sleep duration in SSL . java to improve server state management and ensure proper exception handling
added a new ` COUNTER _ OPEN _ CONNECTION _ COUNT ` constant and its getter / setter methods to track the number of active connections
add executionstrategy . builder . fields ( list < GraphQLFieldDefinition > field ) and make executionstrategy . execute ( list < GraphQLFieldDefinition >
refactor ` createDefaultJavaPackageFinder ` to return a method for retrieving source roots to improve code readability and maintainability by encaps
replaced the direct writer instantiation with PrintWriter in ScriptExecutable . java to improve performance by utilizing PrintWriter for output options
[ hotfix ] [ test ] fix filesourcetextlinesitcase to use unique name
added support for DataTable in JRubyStepDefinition to enhance functionality to support DataTable - related arguments
updated visibility settings for author and modified API query parameters in SearchImagesRenderer and ApacheHttpClientMediaWikiApi to enhance functionality and improve querying capabilities
refactor ReadSentimentDataset class to improve code readability to enhance maintainability and facilitate future updates
added detailed error message to FormulaParseException for better debugging to provide clearer context for parsing errors related to specific formulas
added bindAddress getter and setter methods to WebSocketClient and changed visibility of WebSocketFuture to private to enhance encapsulation and improve websocket connection management
[ java ] make sure we do n ' t close the clustered media driver in consensusmoduleharness .
refactor width and height setting logic in WidgetGroup . java to use a dedicated setSize method to improve code readability and maintainability by consolid
updated sessionFixationAttribute comparison to use Boolean . valueOf for consistency to improve readability and maintainability of the code
update logic fragment to use edge option instead of hardcoded value
simonstewart : add a backoff method to the chromebinary to increase the amount of time we wait for it to complete .
added HttpMethod and URI template attributes to ClientResponseWrapper and updated related methods to support HTTP method and route configurations
do n ' t use integer . min _ value in precompactedrow # removedeleted ( )
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new InvalidRenderIntentTest class for testing to ensure correct rendering intent
add ` ` not sure ' ' option to the contribution question
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
( chore ) camel - kafka : suppress findbugs warn about rec _ catch _ exception
added PGConnection import and modified connection invocation in PooledConnectionImpl . java , and added a test for PGConnection in BaseDataSourceTest . java to
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
change log level from warn to info when no token encryption secret define for a service
removed the @ Deprecated annotation from Hazelcast . java to indicate that the method is outdated and should no longer be used in future development
added topology update event handling in the kerberos server actions to ensure the kerberos system is updated correctly when enabling the ker
added support for reading and writing iterables in NamedListCodec and implemented a test for the iterator functionality to improve performance and maintainability of the codec
added null check for state before assign completely miss partition owner
added a new InclusionRule for schema processing in ApiExample . java to enhance schema inclusion options for better user experience
updated the expected value in the assertion from 30.0 to 70.0 in StreamExpressionTest . java to correct the expected value for the mean and var
make sure coordseq be valid for sdo . getpolygon ( ) and getpolygonwithsinglepoint ( )
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to retrieve the base name and dimension count
add a setdebugevaluationoutputfornexteval method to the formulaevaluator interface
test : disable test that fail on jdk 8
removed the ` isLiveTv ` parameter from the ` ExoPlayerProfile ` constructor and adjusted the condition for ` isLiveTvDirect
added a return statement to DynamicStyleBar . java to ensure that the method exits early if an error occurs
added logging statements for setting and resetting the REPL DUMP property in Utils . java to facilitate debugging and monitoring of replication properties in the database
refactor ReactiveAuthorizationManager to improve authorization handling to enhance code maintainability and readability
added a check for boolean types in MethodEmitter to promote strings to objects as well as boolean types
rename llvmobjectnuller to llvmaddressnuller to avoid confusion .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add a new test suite for the ` CaffeineCacheDefaultConfiguration ` class to verify transaction - aware cache proxy configuration to ensure proper functionality and
added a method ` calculateBoundingBox ` to calculate the bounding box of a mesh to provide a calculation of the mesh ' s bounding box based on the
add -- target - hash - function option to use murmur3 _ 128
refactor DefaultConfigurationProperties to improve configuration handling to enhance maintainability and readability of the code
added high light color and alpha settings for chart components in ListViewMultiChartActivity and adjusted the highlight paint in BarChart to enhance visual consistency and improve
added a new entry for ` pgSgPathPlanMap ` to the ` pgSgPathPlanMap ` to ensure the correct mapping of
updated the version number in InfinispanRemoteProducerIT . java from 2 to - 1 to ensure compatibility with newer versions of Inf
added file locking mechanism and improved artifact fetching logic in MavenArtifactFetcher and MavenDependencyResolver to ensure that artifacts are fetched only once to prevent
added GL _ ES precision specification to the fragment shader string in SpriteBatch . java to ensure compatibility with OpenGL GL standards
updated parameter types from SortedSet to Set in RSGroupInfo and related classes to enhance type safety and improve code clarity
added a try - catch block to load the JspPage class and changed log level from warn to debug for tld processing to improve error handling
removed the use of defaultMatchVersion in CustomAnalyzer and added a test for version - aware filters in TestCustomAnalyzer to streamline version handling and
added a test method to verify the functionality of setting and retrieving package archive info in ShadowPackageManager to ensure correct functionality of package archive information handling in the
replaced direct method invocation with MethodUtil . invoke across multiple classes to check package access to enhance security and prevent package access issues during method invocation
added imports for ProjectConfigurationStartEvent and TaskStartEvent , and modified progress update handling in GradleBuildService , Main , and ProjectReader
removed synchronized block from AndroidWebDriver . java to simplify synchronization by eliminating unnecessary synchronization
refactor initialization fail fast logic into a single boolean variable and simplify error handling in HikariPool to improve code readability and maintainability by
removed the timeout parameter from the getResult method and added an error method to simplify the method signature and improve code readability
changed the ` isNative ` variable to be transient and modified its usage in the ` addEntry ` method to set the ` isNative ` flag
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ` ` ruleenable ' ' handler to ` ` ruleenablementactionhandler ' '
fix some javadoc warning and code style issue
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity and detail of authentication request processing
updated method names from ` getBasicSourceOptions ( ) ` to ` getBasicSinkOptions ( ) ` and ` getFullSourceOptions ( )
added null check for the registrant repository before checking its ownership to improve error handling and provide clearer feedback when the repository is not found
added support for file extensions . otf and . OTF in Font . java and SunFontManager . java to support additional font file formats in
refactor AnnotationMatcher to improve type comparison logic to enhance readability and maintainability of the code
updated error message from " OFF " to " SEVERE " in Grep . java to provide a more informative error message for better debugging
added conditional checks before logging debug messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when debug logging is disabled
replaced the ` includes ` list with ` excludes ` in the ` SurefirePlugin ` class to streamline the initialization process by eliminating redundant entries
added a condition to check if the home activity should be moved to the default screen and implemented the onHomeIntent method to enhance user experience by allowing
updated the maximum bitrate configuration from " 110 " to " 30 " to adjust the bitrate for improved performance
removed the getOptions ( ) method from the CommandLineParser class to simplify the code by eliminating unnecessary duplicate entries
trim whitespace from the description returned in MutableDatabaseProperty to ensure consistent formatting of the returned description
updated the output filename format in XOMParserTest . java to ensure the correct filename is used for output file handling
removed the pid from the error log message in ProcessBesuNodeRunner . java to simplify the error logging for better readability and maintainability
added protected methods getLoadedMusic ( ) and getLoadedSound ( ) to MusicLoader and SoundLoader classes to provide access to loaded music and sound
removed unnecessary imports and simplified type casting in OnBeanCondition . java to improve code readability and maintainability by removing unnecessary dependencies
added ScreenRecord annotations to RequestPinItemTest . java to track test execution for debugging purposes
set the ` lrPauseButton ` to false if it is not null in both CPUFeature . java and MemoryFeature . java to ensure the button
replaced direct preference handling with a dedicated method for adding accounts in Preferences . java to improve code readability and maintainability by consolidating preference management
do n ' t send unavailable presence to the server if it ' s not available .
replaced the initialization of StringBuilder with a conditional initialization based on utflen to ensure a minimum capacity is used when utflen is greater than or equal to
add spring . metrics . export . statsd . enabled = false property to webendpointtestapplicationcontextrunner
refactor InterruptedException handling in the codebase to improve error handling clarity and maintainability
refactor ServiceTicket class to improve code readability to enhance maintainability and facilitate future updates
refactor SSL connection result handling in ConnectionCheckOperation . java to improve readability and maintainability of the code
refactor argument type conversion logic in ArgumentArrayMessageMapper . java to improve clarity and maintainability of the code
added a check for IndexableDSpaceObject in SolrServiceCommunityCollectionItemFilterPlugin . java and updated test cases in XmlWorkflowFactory
added AuthenticatorActivity to PasscodeManager and set its flags to REORDER _ TO _ FRONT in PasscodeManager to ensure proper intent
refactor ( patternparameterconfigurator ) : remove deprecate annotation
modified ` beginDraggingWidget ` method to return a boolean indicating success and added null check for the image drawable to improve handling of widget interactions
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root in DynamicStyle . java to prevent potential NullPointerExceptions during component collection
add a confusionmatrix to the testclassifier , and write it to the file .
[ java ] set lastsampleok to true even if the result be null .
added unit tests for Bluetooth headset devices to ensure correct functionality of device state handling in the ShadowBluetoothHeadset class
rename the test method from " # autowire " to " # autowired " in PropertyBindingSupportTest . java and PropertyBindingSupport .
added ` clone ` and ` finalize ` methods to the ` objectMethods ` set and modified property loading logic to include conditional loading based on the method
added null checks for counters in IntegrationTestBigLinkedList . java to ensure that generator and write verification are only performed when counters are null
[ jdwp ] add support for referring _ objects command .
updated the ` setRegisteredServiceFilter ` method to check for ` registeredServiceId ` instead of ` service ` to ensure that the filter matches the
added a null check for the getActivity ( ) before running the UI thread to prevent potential NullPointerExceptions when the activity is not initialized
[ hotfix ] [ log ] fix typo in logger variable
added methods to set and get the string type in DatabaseAdaptor and modified access modifiers in JDBCSessionDataStore to enhance encapsulation and allow dynamic
updated UIMAUpdateRequestProcessorTest to use " suggested _ category " instead of " language : english " and modified test methods accordingly to enhance test
refactor thread name management by introducing ` updateThreadName ` and ` resetThreadName ` methods in ` SessionState ` and ` CliDriver `
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the code
[ tris - 2200 ] do n ' t return null if dmn be negative .
fix splash progress not work on macos
added tooltip for the ` showCGCP ` checkbox in ` RocketPanel . java ` to improve user experience by providing a clearer tooltip
fix ( core ) : use addtype ( ) instead of addtypes ( ) .
add text and description to the retarget action ( fixes # 118 )
[ excel ] use spreadsheet . haslabel ( ) instead of islabelsimple ( ) for spreadsheet column name
changed BRIGHTNESS _ FACTOR from int to double in BindingConstants . java to ensure correct conversion of BRIGHTNESS _ FACTOR
refactor SSCMHistoryParser to simplify action pattern and improve revision parsing to enhance readability and maintainability of the code
added a boolean parameter ` isAdmin ` to the ` createUser ` method and implemented user list methods to enhance user management capabilities by allowing users to
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and introduced a new Test67234
[ dynatrace ] fix dynatrace exporter v2 to use placeholder
updated method signatures in Context and Response classes for consistency and clarity to improve code readability and maintainability
add a method to set the capabilities from the builder in MixinItemStack . java to ensure proper deserialization of capabilities when the builder is constructed
updated assertion in LifecycleUtilsTest to compare execution IDs directly instead of a default value to ensure that the correct execution ID is retrieved from the binding
added checks to validate contract creation only if the contract type is not CreateSmartContract and modified contract handling in GetContractServlet to improve contract validation logic
added package - info . java files for multiple packages in the ` com . ibm . dtfj ` and ` com . ibm . dtf
refactor the add method in DocumentsWriterDeleteQueue to use a loop instead of synchronized assignment to improve performance by avoiding unnecessary synchronization
added duplicates handling to the tree parsing logic in JavadocTool . java and modified test execution in T7091528 . java to ensure that
changed the default value of STRIP _ IPV6 from " true " to " false " and adjusted the substring substring logic accordingly to ensure that
modified the ` LoginServerTokenEndpointFilter ` to accept a list of user parameters and added a test for adding new users in ` TokenMvcMock
added support for the C _ KEY language in LanguageFactory and updated conditional checks in LanguageFactory and CPPParserTokenManager to enhance language validation and
refactored thread executor implementation by moving it into a new class MoreExecutors to improve code organization and maintainability by centralizing thread pool creation
added cache control headers and updated response headers in LoginService and FormAuthenticator to improve cache management and ensure proper response handling in the application
add the exception message to the error log when an error occur .
updated test suite imports and modified test suite names in HSSFTests . java and TestEmptyDocument . java to improve clarity and consistency in
refactored FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output file before retrieving its absolute path to avoid potential NullPointerExceptions when the output file is null
added imports for ExternalResourceControlPriority and set access control settings before and after resolving URI in Java2DRenderer . java to
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure JUnit does not fail at certain times on Windows machines
changed the access modifier of ` mbean ` to ` final static ` and refactored CPU time testing logic to improve immutability and ensure thread
added a check for empty comments before processing newlines in TabsAndIndentsVisitor . java to ensure that whitespaces are only processed when
updated assertions in TestTriggerIntegration to allow maximum values of totalNodeRate and totalShardRate to be greater than or equal to 100 to ensure that
updated equality checks in DatabaseChangeLog , RanChangeSet , and NotRanChangeSetFilter to be case - insensitive to ensure case - insensitive comparisons
removed the getString method implementation from ShadowBundle . java to streamline the code by eliminating unused functionality
added support for military time formatting in TweetActivity to ensure consistent date formatting across different locales
nifi - 10237 : fix npe in standardprocesssession . getconnections ( ) when there be no connection
refactor keyboard focus handling in DetailFragment by extracting focus request logic into a separate method to improve code readability and maintainability by reducing
updated the class path handling in App . java to append quotes to the canonical path if it contains an empty string to ensure proper class path formatting for
coordmatrix : make coordinate matrix thread - safe
added import statement for Message class in GenericMessage . java to enable the use of message - related classes in the application
refactor SQL query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a new join method to improve code readability and maintainability
updated file filter handling logic in AquaFileChooserUI . java to ensure the selected file filter is only updated if it exists to improve user experience
[ p2p ] fix synchronization issue in transport manager .
updated the ` toString ` method in ` ArrayPtg ` to return " TRUE " or " FALSE " instead of ` toString ( ) ` to
updated import statements in PGtokenizerTest . java to use specific assertions to improve code readability and maintainability by using specific assertions
refactor variable handling and print statements in Java2TypeScriptTranslator to improve clarity and correctness to enhance code readability and maintainability by ensuring
added sequence creation for auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s auto - increment feature
updated byte handling in DataInput . java to use bitwise operations instead of bitwise operations to improve code readability and maintainability by using bitwise
[ fix ] imageparsertest : remove unnecessary test assertion
updated the method call from ` getParent ( ) ` to ` getParent ( ) ` for retrieving the parent component to ensure consistent retrieval of the parent component
reformatted import statements in multiple Java files for consistency to improve code readability and maintainability
replace ` ENGINE _ finish ( engine ) ` with ` ENGINE _ free ( engine ) ` and add ` ENGINE _ init ( engine
added iteration functionality to InterleaveControl , RandomController , CounterConfig , and IterationListener classes , and updated method names for clarity to enhance iteration
release httpcontent / fileupload object to prevent memory leak
added deleteLogs ( ) method to TestRecovery . java to ensure proper cleanup of logs during recovery operations
added conditional logic to handle URLs containing " twitter : / / " and launch a new intent if it contains " twitter : / / " to
[ hotfix ] [ test ] await host status in deploymentgrouptest
changed logResult from false to true for logging " Listing labels allowed " to indicate that only allowed labels are logged
increased the maximum number of auto - retries from 0 to 25 in RestTemplateRetryTests . java to increase the maximum number of retries for better client
removed a System . out . println statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to
added support for a new " fraction " resource type and updated related classes to support it to enhance resource loading capabilities for fraction resources in the application
removed the confirmation check for file writing in BasicFrame . java to streamline the code by eliminating unnecessary checks
added null checks for groupId and artifactId in UpgradePluginVersion . java to ensure proper handling of null values to avoid potential NullPointerExceptions
hbase - 25813 throw a more informative exception when table be exceed in the namespace
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class for improved readability to enhance maintainability and facilitate future modifications
added a check to ensure f0 is non - negative before setting it to 0.0 to prevent potential errors when f0 is negative
added null checks for pkColumn and fkColumn before processing them in SchemaRetriever and TableRetriever to improve code robustness and prevent potential NullPointerExceptions
refactor inputbuffer . encoders to use synchronizedstack to avoid concurrentmodificationexception .
added SharedPreferences support for allowing empty screens in the Workspace class to enhance user experience by allowing users to choose their own empty screens
added a warning log message indicating the deprecation of cucumber - needle to recommend using cucumber - cdi2 or cucumber - jakarta - c
refactor ShadowThemeTest and ShadowArscAssetManager to use Resources . Theme for theme management to improve code clarity and maintainability by centralizing
updated the failure messages in VerifyFast . java to include arrays . toString ( ) for improved readability to enhance debugging by providing clearer error messages
no effective change - remove @ dbmigration in ehistory2
added new functions for retrieving and setting prototype properties in ScriptObject . java and changed access modifiers of constants in ScriptObject . java to public to
replaced ` Collections . shuffle ( readers ) ` with ` Collections . shuffle ( readers , random ( ) ) ` in ` TestFilterDirectoryReader .
updated displayName assignment logic to conditionally share the remote clarification based on the user ' s shareWith to ensure that the remote clarification
updated the path formatting in CookieRetrievingCookieGenerator to handle empty paths gracefully to ensure that empty paths are not treated as empty
removed unnecessary closing braces in Jvm and JvmJvmstatModel classes to improve code readability and maintainability
change variable declaration from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java ` to ensure
updated comparison condition in ValidationResult . java from comparing pageNumber to comparing against ve . pageNumber to ensure that pageNumber is not equal to the
added a condition to check if the focused widget is the same in the highlighted state to ensure that the highlighted state is only highlighted when the focused widget
reformatted method declarations in SoundUtil . java for consistency to improve code readability and maintainability
refactor ApplePackageDescription to remove dependency on FlavorDomain < AppleCxxPlatform > and introduce a new method getAppleCxxPlatform
added a new SQL query string and an assertion to validate the functionality of the ClickHouseStatementImpl class to ensure that the SQL format is correctly formatted
changed method names from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
fix typo find by codespell on fossies . org
added a new file ` TestGetLoggerNPE . java ` that tests the behavior of ` Logger . getLogger ` and ` LogManager . getLogManager
added a ` data ` field and a method to retrieve it in ` PathSharingContext ` and modified the initialization of ` sharedMap ` in `
[ gr - 26137 ] use compilerdirectives . castexact for unsafe . getobjectVolatile in staticobject . getobjectVolatile .
added support for " NEXT VALUE FOR " in NextValExpression and updated related classes to enhance flexibility in handling next value expressions based on user preferences
add more info to unsupportedfeature error message
updated the handling of pending writes in BoundedLocalCache and added a new test case in BoundedLocalCacheTest to improve cache management and ensure
added a new parameter " Leverage _ Level " to the exchange specification and implemented order direction handling in the order direction request to enhance trading functionality
added binding checks for properties in PropertyDescriptor and created a new Test7192955 class with unit tests to ensure proper initialization of bean properties and
replaced ` failsafeWidth ` and ` failsafeHeight ` with a new ` SetDisplayModeCallback ` interface in ` LwjglGraphics
added a check to set buttonsAwatingRelease to null if the parent form is not null to ensure that the buttons are only released when the
refactor wrap width calculation and adjust pref height in LineCell . java and StyledTextAreaSkin . java to improve layout responsiveness and
updated error message formatting in XSLTErrorResources _ it . java to improve clarity and consistency of error messages
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper to maintain insertion order for parameter values
simonstewart : use string . format ( ) for string concatenation in the getname ( ) method
replaced the use of NamespaceContext with a direct method call to getNamespace to simplify the code and improve readability
added support for the " NESTED _ JOINS " configuration in multiple test classes to enable nested join functionality in the application
server : allow root admin only to root admin , not normal
added caching location for JavacFileManager in SourceFileManager and modified the CompletionTaskProcesor constructor to accept a cursor parameter to enhance performance
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to enhance
updated import statements in KuduIOIT . java and XmlIOTest . java to use MatcherAssert . assertThat instead of Assert . assertThat to improve
[ aa + ] use util . createhandler for null handler in metadatarenderer and textrenderer
updated offsetMemSize calculation to use BYTES instead of Long . SIZE and added a new test for symbol file mapping in LineTcpConnectionContextTest
removed debug print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the code and improve readability
removed the Reflection class and its associated methods from the jooby . internal package to simplify the package structure and eliminate unused code
refactor ThreadlessExecutor to use getter and setter methods for better encapsulation to improve code readability and maintainability by encaps
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter and added a new test for DateTimeException in TestDateTimeParsing to streamline error index handling and
rename the constant ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and update related references to improve clarity and
added a case for WILDCARD in mmm Types . java and created a new file ppp T7034495 . java with generic interfaces and
replaced multiple do - while loops with while loops in LotsOfEvents . java to improve code readability and maintainability
refactor condition checks for HOP characters in TransclusionDecideRule . java to improve readability and maintainability of the code
remove use of versionutils . getmicronautversion ( ) to print the micronaut version
added unit tests for the ` Area3DPtg ` and ` RVAType ` classes in ` TestBugs . java ` to ensure
modify MindIconFactory to append a trailing slash when the name starts with a slash to improve the clarity of the icon ' s description
modified the onHomeIntent method to accept a boolean parameter indicating if the home intent state is handled
replace direct calls to getPreferDependencyTree ( ) with a boolean variable preferDependencyTree to improve code readability and maintainability by centralizing
added a new method ` showDetails ` to multiple activities and modified its implementation in ` FileDisplayActivity ` , ` FileDetailFragment ` , and
corrected the spelling of " $ " to " apply " in multiple Java files to improve code readability and maintain consistency in naming conventions
added a capacity check and randomization method for bytesAL in MinimalEncoder . java and updated size assertions in HighLevelEncodeTestCase . java to
updated string appending logic in SourceBuilder . java to include headers and requirements to improve clarity and functionality of the source builder output
added a call to ` mAdapter . notifyDataSetChanged ( ) ` in ` FolderSyncActivity . java ` to ensure the adapter correctly reflects the
added a method to set the default WAL sync mode in ShadowSQLiteConnection to allow dynamic configuration of WAL sync mode for SQLite connections
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to ensure correct type handling and validate the removal of specific
remove unused getters from the s3crtasyncclient
updated test cases in ParserTest . java to correct length checks for corrupted streams to ensure accurate validation of stream lengths in tests
fix hazelcasttestsupport . assertequals ( ) to include content
[ graal ] do n ' t ignore internal error in if - statement .
ggb - 281 make sure pen and pen image do n ' t have a large size
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a ` limit ` parameter to the ` getOrderBook ` method in both ` YoBit ` and ` YoBitMarketDataService ` classes to
move gotwrongoomeexception from metaspace . stresshierarchy . common to vm . share . gc
added stream read constraints to StandardDataFlow to limit the number of string length for data read operations
updated the retrieval of the engines string to use a default string instead of a configuration object to simplify the code and improve readability by using a default
refactor TimerWheel and TimerWheelTest to replace FullIterator with WheelIterator for better clarity and consistency to improve code readability and maintainability
do n ' t crash if we ca n ' t generate a customized description
[ hotfix ] [ test ] increase timeout to 10 second for localchunkprovidertest
changed the visibility of the uncomplete checklists menu item from true to false to disable the functionality of the uncomplete checklists menu
refactor DefaultResultSetHandler to improve result map resolution and introduce Contract class to enhance clarity and maintainability of the codebase
updated condition checks in OverviewComponentObserver to handle null defaultHome and unregister the receiver accordingly to improve robustness by preventing potential NullPointerExceptions during
removed the import of VertxGen annotation and its usage in PumpImpl . java to streamline code generation by eliminating unused annotations
removed unnecessary type casting of file operations helper calls in FileDetailFragment and OCFileListFragment to streamline code and improve readability by
removed trailing and leading spaces from the tokens array in ConfigAttributeEditor and added a test for this functionality to ensure that trailing and leading whitespaces are
refactor ClassUsingAnotherAuxiliary and SelfClassWithAuxiliary to improve code organization and maintainability
make singlemodulereference public and add getunnamedmodule ( ) for jdk9
added a check for the presence of " pg _ " prefix before determining the relKind in DatabaseMetaData to ensure proper handling of database relationships based on
[ hotfix ] [ core ] deprecate unused ` @ java . lang . deprecated ` constant in favor of ` @ java . lang .
updated RQST field descriptor from negative to 1 in ThriftHiveMetastore . java and modified exception handling in HiveMetaStore . java to
added a new module - info . java file for the core module to define exports and requirements for various components in the application
added logic to manage flush state and fill state in SslConnection . java to ensure proper handling of flush and fill state management during connection operations
refactor Log4j2LogDelegateFactory to improve logging functionality and add a new test class for NoExceptionInInitializerErrorTest to enhance logging
refactor LIBJVM handling in ExecutionEnvironment and Test7029048 to improve VM existence checks to enhance code clarity and maintainability by
refactor ExecutableFindOperation , MongoOperations , ReactiveMongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
updated PGProperty to use " org . postgresql . ssl . LibPQFactory " instead of null to ensure compatibility with PostgreSQL
disable testinterprocesssemaphoreedges until we fix it .
added sorting functionality for theme keys in EditableResources . java to ensure consistent ordering of resource keys and improve code readability
added a new class OSvTerminal and updated TerminalFactory to support OSV terminal flavor handling to enhance terminal functionality and support for OSV - specific
added support for additional file extensions " . gr " alongside " . gs " in ClassType . java to ensure compatibility with additional file formats
replaced HashMap with TreeMap for combined vectors in DrillTestWrapper . java to ensure consistent ordering of collections and improve code readability
added a condition to check if ` values ` size is greater than ` names . size ( ) ` in the loop condition to ensure that the loop
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
refactor permission methods in ShadowTelephonyManager and ShadowWifiManager to use instance variables instead of static variables to improve encapsulation
added parameters for ` performTemplateBasedResolution ` and ` performDefaultBasedResolution ` to the ` resolveMessage ` method in ` StandardMessageResolver `
updated Class and Constructor types to use generics in TraceMethodVisitor and CheckClassAdapter to enhance type safety and prevent potential runtime errors
added a new class LoggingAuditService for logging user authentication and authentication failures to enhance auditing capabilities for users in the UAA framework
added nullability annotations to parameters and improved temperature validation logic in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance code robustness
do n ' t create aop proxy for abstract class . fix # 118
camel - 14136 : camel - http - add proxy option to endpoint to use host and port from system property .
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " in TemplateDTO . java to ensure compatibility with the latest encoding features and
added a call to jdk . internal . util . jdkSerialFilter ( ) in System . java to enable serial filtering functionality in the application
add the exchange pool size to the log message when pooled mode be enable .
replaced calls to ` getScroller ( ) . forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple classes to
updated the parameter name in the ensureRealtimeClusterIsSetUp method from ` realtimeTableConfig ` to ` rawRealtimeTableConfig `
added error status methods and updated report handling in ValidationReport , DisallowValidator , RefValidator , and Test classes to improve clarity and consistency in status
updated inlineQsb handling in InvariantDeviceProfile . java to use closestProfile . inlineQsb instead of defaultDisplayOption . inline
updated the ` createClassPath ` method signatures to include ` throws Exception ` and modified URL decoding to ensure proper handling of special characters in URLs
updated the Given annotation to use single quotes instead of single quotes for string literals to enhance readability and maintainability of the code
add a null check for the retina property in Toolkit . java and add a null check for the image in PGraphicsJava2D . java
[ hotfix ] [ test ] increase timeout in faulttolerancetest
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to ensure the correct URL is used for docker operations
[ hotfix ] [ runtime ] call system . gc ( ) in knowledgeagenttest
updated multiple Java files related to additional answers , answers functional interfaces , and invocation on mock to improve code organization and maintainability
replace createHardLink ( ) with copyFile ( ) in SnapshotTaker . java to enhance file copying functionality and improve error logging
doc : rename method to make it easy to understand the documentation
[ djl ] add checkdevices ( ) to functioninfo ( ) and remove duplicate code in lsTM , mxmxmx and
added a conditional check to visit ` Xml . Document ` before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to ensure
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` for tests in ` NotesHelperTest ` , ` ReminderHelperTest ` , and
[ core ] add gaslimitrule and parentgaslimitrule to commonconfig
change visibility of setupData ( ) method from public to private in BaseAssumptionsRunnerTest . java to restrict access to setupData (
renamed the ` autocommit ` boolean to ` runInTransaction ` in the ` ChangeSet ` class and related files to clarify the purpose of the
added null check for listener in TripleServerStream . java to ensure proper handling of endStream and prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] update doc url in option file to include site . url
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to address issue
refactor Common class to improve code readability to enhance maintainability and facilitate future updates
refactor LauncherInstrumentation to use a context layer for launching apps to improve code readability and maintainability by using a try - with - resources
[ hotfix ] fix typo in streamexecdeduplicate . java
log a warning if a kafka message can not be send to a topic
added PersistentPropertyAccessorFactory to SimpleElasticsearchPersistentEntity and overridden isImmutable method in SimpleElasticsearchPersistentProperty to ensure proper initialization of PersistentPropertyAccessorFactory
make sure we do n ' t call setundefined ( ) when there be no segment .
added gesture scrolling logic and logging statements to AskGestureEventsListener to improve user experience by measuring and logging scroll distances during gesture interactions
added comparison logic to the NGramEstimator class to compare values using sorted lists to ensure accurate sorting of values based on their sizes
updated import paths for ScenarioScoped from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align the
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve clarity and functionality of folder icon information retrieval
rename serverslogan to servername so that it do n ' t have a typo .
add a new test class TestSkeletonPredicates with two methods for testing loop predicates to ensure correct behavior of loop predicates in the compiler
refactor equals and hashCode methods in SelectionHighlighter . java for improved readability and maintainability to enhance code clarity and ensure proper handling of ViewModelInfo
added a new ` StringResultConverter ` class and refactored ` AsmRuntime ` and ` AsmUtil ` to use it to improve
camel - 19751 : camel - core - disable camel - catalog - producer test that do not run on ci . env . name
changed the condition from checking if the console object is not zero to checking if it is not equal to zero to ensure the correct object is returned when
added null and limit handling for the buffer in the setInBuffer method to ensure buffer limits are set only when the buffer is not null to prevent
updated the assertion in TestSolrDiscoveryProperties to use File . separator instead of a hardcoded " data / " to ensure consistent file path handling
added support for macOS in AutoUpdaterServerProperties . java to ensure compatibility with different operating systems
updated the Lock class to use a String lockName instead of a File object to improve flexibility by allowing the Lock class to specify a name instead of
replace appIcon with allApps and update its visible bounds to improve user experience by using the correct UI object for the all apps view
replaced references to ` Invocable . InvocationType ` with direct references to ` ClientDatagramEndPoint . this ` to improve code readability and
updated SQL query in JdbcStepExecutionDao to use " order by STEP _ EXECUTION _ ID " instead of " oreder
updated button handling in LwjglInput . java to return - 1 instead of Buttons . LEFT and modified event . button assignment logic to
added test cases to verify the submission and rejection of claimed tasks to enhance test coverage and ensure proper functionality of the claimed tasks
replaced instances of ` logger ` with a static logger in ` AbstractWebApplicationServiceResponseBuilder ` and ` GoogleAccountsServiceResponseBuilder ` to improve code
updated SsoAccessTokenProvider to use Instant . parse ( expirationTime ) instead of ChronoUnit . MINUTES to simplify time comparison logic and improve
do n ' t run gwc test on window if build system property be not set
add miss mock api method for alarm suppression
reformatted conditional checks for default close operation in JFrame . java to improve code readability and maintainability
added a null check for the MediaDatabase connection before performing the ANALYZE SAMPLE _ SIZE ANALYZE operation to avoid
replaced the initialization of ` metricsContext ` with a call to ` super . initializeMetrics ` in ` SuggestComponent . java ` to ensure consistent
updated the logic for constructing the output string based on file and folder counts to improve flexibility in determining the output based on file and folder counts
[ hotfix ] [ test ] change default value of hashknownhosts to no .
update SourceVersion . java file to reflect the latest release version to ensure compatibility with newer source versions
added a new test class ` ThreadFactoryTest ` to validate thread factory functionality to ensure that the ` MyThreadFactory ` class behaves as expected
fix bug where maxdelegatelockperiod = 0 should be set to 0 when supportmaxdelegatelockperiod = true
added a new instance of TicketModel to EditTicketPage . java to initialize the ticket model with a new TicketModel instance
change the value of the " ENABLE _ PREDICTION _ DISMISS " feature flag from false to true to allow dimiss apps from
updated constructors in multiple assertion classes to include selfType parameter to enhance flexibility by allowing different assertion types
added a new quote menu option and updated related constants in TweetActivity . java to enhance user experience by allowing quote functionality in the application
do n ' t lock the interrupt lock if it ' s already finish
replace codecpassthrough with decryptonlycodecformat in mediacodecaudiorenderer
added a conditional check for the result before offering failure in ServerHTTP2StreamEndPoint . java to ensure failure offers are only offered when the result is
updated German and French error messages in German and French XSLT resource files to improve clarity and accuracy of error messages for better user experience
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety during cleanup operations
update restadapter to not throw an exception if a subscriber be unsubscribe
no functional changes made to the code structure in ComponentPresetManager . java to improve code readability and maintainability
added configuration for unique column names in Hive configuration and updated column qualifier handling in TestJdbcDriver and TestJdbcDriver2 to ensure unique column names are
update example input text when a new voice be select . thanks to jbellis for the patch .
added session validity check and exception handling in the Session class to ensure that invalid sessions do not lead to runtime errors
hhh - 13636 remove exceptionhelper ( no longer use )
change the initial value of keyPairGenerator from 256 to 255 in JceX25519Domain . java to ensure proper functionality of the key pair generation
added codec setup for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with the latest postings format
[ hotfix ] [ checkpoint ] log checkpointrangeheaders empty header list
added support for the RSA / ECB / OAEPPadding algorithm in the PKCSObjectIdentifiers to ensure proper handling of algorithm parameters for RSA
[ java ] switch from darwin _ aarch64 to macos _ aarch64 .
added exception handling for SecurityException in DebugSourcesResolver . java to improve error logging and provide clearer feedback on resource resolution failures
corrected the conditional check for UNIX OS in AbstractTest . java to ensure proper handling of UNIX socket transports
updated file handling logic in FileUploadUtils and ControllerConf to enable primary admin mode and improved file renaming logic to enhance user experience by allowing
replace ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple files and introduce ` freeMemory ` method to improve memory management and ensure proper
changed the USE _ PIPELINE _ DOWNLOADER constant from false to true in FastSyncChainDownloader . java to enable the PIPELINE _ 
updated DST _ OFFSET setting in SimpleDateFormat . java and added a new Bug7130335 . java file for time zone testing to
refactor variables in AllAppsView . java to use local variables instead of accessing mRollo . mState directly to improve code read
cloudstack - 6253 : do n ' t try to create a default hypervisor when there be no default network
refactor StringBuffer methods for improved performance to enhance performance and maintainability of the code
added rule UID assignment to RuleResource . java to ensure rule UID is correctly assigned for the rule
added a null check for the listener before unsubscribeing to avoid potential NullPointerExceptions when listener is null
added a new property descriptor for pretty printing in JoltTransformJSON . java and updated JSON string conversion based on its value to enable customizable pretty
make access _ table public so that it can be use from other package .
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to use " Resource " instead of " Resource " to improve clarity and accuracy of error messages
move exception handle out of dorun ( ) to dorun ( ) and throw ioexception . create ( ) .
refactor multiple Java classes related to event handling and notifications to improve code organization and maintainability
added ` ClusterVersionEntity ` and ` isUpgradeSuspended ` parameters to the ` AmbariManagementControllerImpl ` class to enhance functionality by
added copyright year to FindsByCssSelector . java to reflect the new license year for the project
removed the declaration of ` wfields ` from ` writer . getFields ( ) ` in ` Resolver . java ` to streamline the code by eliminating
added default key size settings for encryption and signing properties in OAuthProperties to ensure consistent key sizes for OAuth applications
replaced calls to ` getColumnFamilies ( ) . length ` with ` getColumnFamilyCount ( ) ` across multiple classes to improve code readability
replaced the usage of ` AllowedResourceAliasChecker ` with a lambda expression for adding alias checks to simplify the code and improve readability by using
refactor ObjectInputStream , ObjectOutputStream , Serializable , and package - info classes to improve code organization and maintainability
[ java ] add reset ( ) method to cluster and implement idlestrategy .
added a line to increment the currentChunkID before creating a new SequenceFile . Writer in ChunkedWriter . java to ensure the current chunk ID
added a new file AbstractJobExecutor . java that implements the JobExecutor interface to provide an abstract implementation of JobExecutor for managing job execution events
added a replayFuture variable and modified the break statement in RecoveryStrategy . java to improve the handling of replay operations and ensure proper termination handling
rename ` hugeStaticBase ` to ` staticBase ` for clarity and consistency to improve code readability and maintainability by using a more descript
( chore ) camel - consul : do n ' t try to discover service id if discovery be disabled
replaced Float . floatToIntBits with SecureRandom for hashSalt generation in mmm DB . java and ppp DB . java to improve security by using a secure random number
added a set to track runtime compilation failures and refactored method trace printing logic to improve error handling and provide clearer feedback during parsing failures
removed the addition of aggTimeBucketMillis to currentStart and baselineStart to streamline the calculation process for time comparisons
added functionality to handle abstract methods in CallsRealMethods . java and created corresponding test cases in CreatingMocksWithConstructorTest . java to
refactor checkPackageAccess methods to accept Class objects instead of String names to improve encapsulation and maintainability of the code
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added new imports and methods for plugin initialization to improve test structure
refactor ContributionListPanel to use a more descriptive variable name and improve font rendering to enhance code readability and maintainability by standard
added REQUEST _ HAS _ TIS case handling to QuickstepTestInformationHandler and TestInformationHandler , and introduced a method to check for TIS
refactor connectAction to use Mutex . EVENT . writeAccess for event writing to improve code readability and maintainability by reducing redundancy
updated the type of ` showRulesResult ` and related methods from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget ,
added new classes for ` javaemul ` , ` Asserts ` , ` Comparables ` , ` NativeRegExp ` , and ` Objects
added support for ' & ' character in the HOME and END operations and updated the mapping logic accordingly to enhance functionality to handle home and end operations
changed the initialization of the plots variable from a synchronized block to a direct call to getConnectedPlots to improve code readability and maintainability
refactored package installation logic in Utilities . java to use Intent . createChooser for launching the activity to improve code readability and maintainability by
removed the ` public ` access modifier from the constructor of ` Roster ` to restrict access to the constructor for better encapsulation
added BasicConstraints extension to certGen in TestUtils . java to enable basic security features in the certificate generation process
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` and marked the test as ignored due to incorrect transform offsets
removed unnecessary multiValued ( ) checks for precisionStep in TrieDateField and TrieField classes to simplify code and improve readability by eliminating unnecessary
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to streamline the codebase and eliminate unused functionality
added a new file ` ArrayLength . java ` that tests the behavior of ` getField ` and ` getDeclaredFields ` methods for different array types to
try to make hazelcast integration test more robust by wait for process to be destroyed
refactor ` ApplicationSettingsService ` to use ` @ PostConstruct ` and ` @ ApplicationScoped ` instead of ` @ Singleton ` and ` @
updated assertions from " assert value > = 0 " to " assert value > 0 " and modified the calculation of newValue to ensure proper handling of negative
updated threadNameField to use " Ljava / lang / String ; " instead of " [ C ] " and changed the return type from char
updated the default RAND _ SEED value from ` System . currentTimeMillis ( ) ` to ` 42 ` in ` Lucene90Hnsw
add strokeobject and fontobject to pgraphicsjava2d . stroke ( ) , fixes strokeimpl ( ) .
refactor SQL node expansion logic into a separate method ` expandDynamicStar ` to improve code readability and maintainability by reducing duplication
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class that initializes the children of a ` Comment2000Atom
added import for Messages and set a status code warning in HTTPServer . java to provide users with a specific warning message for better debugging
use event . getmodifiersex ( ) instead of event . getmodifiers ( ) and remove deprecate method
make amd64countleadingzerosnode and amd64counttrailingzerosnode use cycl3 instead of cycl
camel - 14246 : camel - as2 - fix npe when disposition notification be not set .
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
added a clearLog button and a clearLog method to ErrorConsoleController , ErrorConsoleViewModel , and LogMessages classes to enable users to clear log
removed unnecessary whitespace in RecentsView . java to improve code readability and maintainability
refactored code to replace ConsolePlayer with a LocaleHolder for better locale handling to improve code clarity and maintainability by using a unified LocaleHolder
added connection pooling functionality to multiple test classes and adjusted execution count from 10 to 50 to improve resource management and ensure proper resource management during test execution
[ java ] add support for the opera driver in the defaultdriversessions .
replace specific exception catch blocks with a more general Exception catch block and add a confirmation dialog for download failures to improve error handling and provide clearer feedback
added multiple " LIFX Switch " and " LIFX Switch " product entries to the LifxProduct . java file to support additional LIFX features
added asynchronous handling for replica creation in OverseerCollectionProcessor and updated request handling in CollectionsAPIAsyncDistributedZkTest to improve handling of asynchronous
refactor PostgresDatabase and PostgresDatabaseTest to use a unified method for generating primary key names to improve code readability and maintainability by
updated LogPage , SummaryPage , and LinkPanel to use the repository model ' s HEAD instead of a default repository name to ensure the
changed the unit of the parentTail calculation from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to
added a new method ` browserDestroy ` and refactored the ` deinitialize ` method to ` destroy ` in ` AndroidImplementation . java `
added a call to waitForActiveCollection for " readApiTestViolations " in AutoScalingHandlerTest . java to ensure that the test waits
refactor ScreenTerminal . java to handle multiple character scenarios based on input values to improve precision and correctness of color attributes in the terminal
updated SoftResetAction to use ControllerState constants instead of method calls to improve accuracy of soft reset behavior based on the controller ' s state
disable on - disc stream cache for texture pack reload
added a conditional statement to initialize the parent folder in Request . java and RequestV2 . java to ensure the correct parent folder is assigned based on
change variable name from isPersistent to persistent in NetworkOfferingVO . java to improve code readability and maintain consistency in naming conventions
added a custom close method to the FileOutputStream class to ensure proper resource management and prevent memory leaks
added error handling for 403 responses in StandardGitHubRepository . java to improve robustness by logging specific exceptions when a 403 response is received
log4j2 - 1306 - add messagefactory2adapter . getoriginal ( ) for test
added @ SuppressWarnings ( " BanSerializableRead " ) annotations in DataSizeTest . java , DurationTest . java , and SizeTest . java
updated regex pattern from " 0 - 9 { 1 , 2 } " to " 0 - 9 { 1 , 3 } " in Version . java
added initial and dismiss delay settings for ToolTipManager in ExtractionModelFrame . java to improve user interface responsiveness and error handling
refactor ProjectCommand to use ` passedInTargetsSet ` instead of ` options . getArgumentsFormattedAsBuildTargets ( ) ` to improve clarity
added UTC timezone handling in TimeTest . java to ensure correct formatting of time values in tests
[ java ] fix typo in javadoc of mediasessionconnector .
use the endpoint . gethandler ( ) . getsslimplementation ( ) . getsslsupport ( ) to get the ssl support
updated the formatting of the distance display string in GpsLoggingService . java to improve readability and consistency of the code
added conditional handling for future exchange metadata adaptation in multiple services to ensure that future accounts are only included when futures are enabled
refactored adminaccountmanagementhelper and adminaccountmanagementservlet to use all instructorcourses and instructoraccountstable
added a line to set the accept queue size to maxWorkerThreads in ThriftHttpCLIService . java to ensure proper handling of worker threads during HTTP
replaced ` getClass ( ) . getName ( ) ` with ` PROPERTY _ DISABLE _ WATCHER ` for environment variable retrieval to improve code
added a check to return true if the scheme is " ssl " in JmsFactory . java to ensure proper handling of SSL connections in the jms
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker ` and refactored test methods in ` TestWindowFunctions ` to
[ java ] remove assertion that may be zero for a fast collection .
fix ` optional . of ( ... ) ` for Javadoccomment . parse ( ... )
replaced the memory reserve method with a method that reads reserved memory on macOS to improve compatibility with macOS environments and enhance memory management
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of
hbase - 24413 add table and procid to htable admin log ( prasanth jayachandran )
camel - 14237 : camel - cxf - use the service class to create the wsdlservicefactorybean
refactor YamlChangeLogSerializer to store databaseChangeLog in a container map instead of a single map to improve clarity and maintainability of the YAML
replaced ` println ( ) ` with ` print ( ' \ n ' ) ` and modified ` schemaElementPrinter ` to include a newline character
removed unnecessary chunk regeneration logic and simplified message sending in DebugRoadRegen . java and SchematicHandler . java to improve code readability and
updated instantiation of HomeFragmentNowPlayingRow and HomeFragmentFooterRow to use getActivity ( ) instead of getContext ( ) to improve code readability and
added ` @ GenericGenerator ` annotation and updated ` @ GeneratedValue ` annotations to include ` name = " native " ` in multiple classes to enhance
removed the ' country ' parameter from the getSystemTimeZoneID method and related code to simplify the method signature by eliminating unnecessary country parameter
added position and remaining parameters to the write method in BZip2Codec and adjusted ByteBuffer allocation in TestBZip2Codec to improve data handling and
appwapplet : move logger initialization from appw to geogebralogger
added a new constant VALUE _ TYPE _ EMPTY and modified the type initialization logic in Value . java to improve code readability and maintainability by central
replace = = with . equals ( ) in groupmanager # isgroupgroup ( )
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and facilitate future modifications
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated tests accordingly to utilize this new method for creating a graph with
rename cfstore . getmaxrowcompactedsize ( ) to getminrowsize ( ) and getmeanrowsize ( )
add a Gson adapter for Gson version parsing in MetadataCollection . java and mark parentMod and childMod fields transient in ModMetadata . java to enhance
added logic to handle the removal of an element from the array based on its presence to ensure proper management of elements based on the presence of a previous
updated file upload logic to set the parent ID of the current upload instead of saving a new file to ensure the current upload reflects the correct parent file
added a new file UTF8ReaderBug . java to test supplementary character handling in XML parsing to ensure proper handling of UTF - 8 encoding in
added unit test base on user forum issue
updated subscription stream from " ethbtc @ depth " to " ethbtc @ depth20 " in multiple integration test files to ensure
added a method ` resetAllocation ( ) ` to the ` Wrapper ` class and invoked it in ` SimpleParallelizer ` to ensure proper allocation reset
removed the import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve maintainability
added synchronization to properties handling in mmm Agent . java and created a new file ppp AgentCMETest . java to ensure thread safety when accessing
refactor ModelUtils class for improved readability to enhance maintainability and facilitate future updates
refactor AbstractDoubleArrayAssert for improved clarity to enhance maintainability and readability of the code
added conditional checks for the index index before updating width and height in Legend . java to ensure that the last index does not exceed the bounds of
added testDelay ( ) and testAbort ( ) methods to CodeFirstSpringmvcIntf , TestResponse , and CodeFirstSpringmvc
updated method to retrieve values from a dictionary instead of a single string to improve performance and readability of the code
replaced the call to ` ruleResolver . requireRule ( ) ` with ` new BuildTargetSourcePath ( ) ` in ` Omnibus . java
add botania . versioning . disabled chat to downloadlatest command
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` variable in ` MediaFolder `
removed the " - b " argument from the format string in AidlStep . java and adjusted the format in GenAidlTest . java
add a new test class for detecting Issue79 and modify ObligationAnalysis and related classes to improve test coverage and ensure proper handling of ob
added a TODO comment to test this in FakeHttpLayer . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix error handling in embeddedleaderservice
[ java ] use flowable . fromarray instead of flowable . stream ( ) in compositediscoveryclient . getinstances ( )
replaced calls to ` systemResources . getConfiguration ( ) ` with ` systemResources . getConfiguration ( ) ` and ` applyQualifiers ( )
[ hotfix ] [ config ] add description of jobmanager . jobcompilation . recover - from - task - failures option
updated the method name from ` updateNoWidgetsView ` to ` updateRecyclerViewVisibility ` and modified visibility logic based on search mode to improve clarity
added class loading and property setting for WstxInputFactory and WstxOutputFactory in XmlUtil . java and updated test assertions in Multi
refactored the ` testBuckAliasList ` method to use ` @ Before ` and added a setup method for the ` workspace ` to
added logging statements to ` WidgetsFullSheet . java ` and ` WidgetsRecommendationTableLayout . java ` to improve debugging and visibility of recommended
camel - 14136 : camel - cxf - disable test that be not pass in camel - cxf
added a try - catch block around the update ( ) method in CachedStore . java to handle potential exceptions during periodical refresh failure
refactor ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and modify provider
do n ' t use the old hssf font / palette if they do n ' t exist
rename ZonedDateTimeFormatterBenchmark to ZonedDateTimeFormatterBenchmark . java to improve clarity and maintain consistency in naming conventions
added a new method ` shouldBufferUpdate ` to the ` DistributedUpdateProcessor ` class and created a corresponding test class ` DistributedUpdateProcessor
added a null check for the rocket ' s stage in SimulationListHandler . java to ensure proper handling of cases where the rocket is not in
add ` ` < toreplaceid > ' ' parameter to / editreplace and / editscript
refactor ExtendedMasterSecretExtension class to improve code organization to enhance maintainability and readability of the code
made the ` processor ` variable final in ` AndroidInput . java ` to ensure immutability of the ` processor ` variable
added a listener call to notify the listener when writing fails to improve error handling by notifying listeners when writing fails
added support for " CUBE " database type in MySQLDatabase . java to enhance database compatibility and improve performance
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException when removing the directory
refactor ` ExperimentalRobolectricTestRunner ` and ` ExperimentalRobolectricTestRunnerTest ` to ` MultiApiRobolectricTestRunner
[ hotfix ] [ test ] remove reflection from okhttpfactorytest
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the ' os ' variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during processing
ggb - 260 do n ' t use precise mode when draw indexed string
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified the exception message to include this parameter to allow for different
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added a shared preference to save the unread status of the pull notification to improve user experience by tracking unread notifications
do n ' t replace ` ` null ' ' with ` ` null ' ' for ` ` null ' '
updated Box2DTest . java , Box2DTest . java , Pong . java , and OrthographicCamera . java to improve
refactor layout management for mRecyclerView in ViewPostDetailFragment to improve readability and maintainability of the code
change log level from trace to warn in CLIService . java to indicate that the background operation is aborted instead of trace
fix a bug in jimple body builder that cause abstract method to not be generate .
ggb - 260 mouse click : do n ' t invoke textfield on ie11 +
added deviceId parameter to getNotificationUsers method and updated related logic in NotificationManager and CacheManager to enhance notification user retrieval by including device IDs
updated the base URL for the CGIAR provider from " droppr . org / srtm / v4 . 5 / 6 _ 5
removed property change listeners and reset bottomPanel in MotifFileChooserUI . java , and added a new test class bug6520101 .
remove doget / doget method from ui class , it be not need anymore .
refactor methods in BuildRuleResolver to improve type safety and clarity to enhance code readability and maintainability by encapsulating type - safe
added visibility control for transportSpinner based on shortcut condition to improve user experience by hiding the transport spinner when the shortcut is disabled
added null check for attributes _ field in mmm Attr . java and created new classes T7043371 . java and T7073477
add backPressed ( ) method to return a boolean indicating success or failure in multiple fragments to ensure that backPressed ( ) method only executes when
added LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB and implemented a method to retrieve the view index data type based on its configuration to
updated string appending from " V " to " v " in SDRTrunk . java to correct the spelling of " v " to
updated PrivateKeyParserTests to use StringUtils . cleanPath for private path validation to ensure proper path handling during testing
removed the parameter ` columnPosition ` from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriterConfig version from LUCENE _ 40 to TEST _ VERSION _ CURRENT in TestAddIndexes . java to ensure compatibility with
hbase - 25265 disable strict column family check when importtsv ( sergey shelukhin , review by jesus cam
[ java ] use long logsubscriptionid instead of string for log recording .
replaced startActivity calls with startActivitySafely and added visibility handling for voice button proxy to improve code safety and prevent potential crash when starting the activity
added a condition to return early if the first element of the list is an empty string in PoloniexStreamingService . java to prevent processing of
refactor procedure class to improve code organization to enhance maintainability and readability of the code
added Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) parameters to ResourceBundle . getBundle calls in Toolkit . java and Window . java to ensure
[ j2kt ] add normalizearraycreationskotlin pass for kotlin array creation
added a condition to skip incrementing if mincount is zero and modified counts handling in PerSegmentSingleValuedFaceting . java to ensure accurate
updated authorList assignment to use ` Objects . firstNonNull ` instead of ` Optional . fromNullable ` to improve code readability and maintainability
added a new test class ` OSGiTest ` for the ` com . google . gson . annotations ` and ` sun . miscImportPackage
fix the issue that controller service graph can not be enable due to concurrent access
hbase - 24413 htable . setautoflush ( false ) do n ' t clear async buffer on failure
fix : fix type cast for ifelement . ifelement . ifelement . elsestatement
implement hasuserdata ( ) in simplefeatureimpl and add a default method hasuserdata ( ) in property
removed ` HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` classes to simplify exception handling by removing unnecessary
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to streamline logging configuration to improve code readability and maintainability
added a new class ` InJavaSourceSet ` that extends ` JavaIsoVisitor ` and utilizes it in ` UsesJavaVersion `
updated the resource loading mechanism in TestGDALParser . java to use a dynamic file path instead of a hardcoded path to improve flexibility
added a new method ` createGetter ` to the ` ReflectionHelper ` class to provide a way to create getters for objects with specified attributes
removed the check for ` useExtStorage ` from the conditional statement in ` DirectUpload . java ` to simplify the conditional logic for better readability
added a new constant ` INDEXER _ NO _ COMMIT ` and modified ` IndexerMapReduce ` , ` IndexerOutputFormat ` , and
api : make diskofferingid optional in createvolume api command
updated assertions in ToHtml . java and BaseTestCellComment . java to check for non - empty notes instead of empyy notes to ensure
added checks for ` Period ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure non - null checks for `
added a new file ` Issue382 . java ` with multiple error handling methods to handle specific error types to ensure proper response responses for specific error
replaced the private static method ` signum ` with a static import of ` Integer . signum ` and simplified the return statement in ` PositionUtils . java
set the visibility of the holder ' s text view to GONE when conditions are met to improve user experience by hiding the holder ' s text when the
fix ( ctreference ) : use getimportkindfor ( ctreference ) instead of getelementsbyname ( ctnamedelement )
simonstewart : replace the method call with a lambda expression to improve readability and maintainability of the code
add bucketpickup to liquidblock so it can be pick up by the client .
http : / / issues . apache . org / jira / browse / amq - 2902 - fix test failure
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to align the time zone with the
rename ` existingObservation ` to ` distinctObservation ` for clarity and consistency to improve code readability and maintainability by using a more descriptive
updated ` systemPropertyAsBoolean ` calls to use ` TestGroup . class . getAnnotation ( TestGroup . class ) . enabled ( ) ` for
renamed the method ` createLogger ` to ` getOrCreateLogger ` and modified the logger initialization logic to improve clarity and ensure a null pointer for the logger
[ graal ] deny all access to java . lang . reflect class in graalcontext
pgraphics2 : use raster . getdataelements ( x , y ) instead of pixel . getrgb ( x , y , width ,
updated the method call to use the partition ' s SD descriptor instead of the table ' s SD to ensure that the correct partition is used
refactor overlay scrolling logic to improve readability and maintainability to enhance code clarity and maintainability by consolidating logic for scrolling behavior
hhh - 14397 add batchbuilder implementation and initiator class for jdbc batch size
[ hotfix ] [ runtime ] add some shouldnotreachherere ( ) method to analysiserror
added a new test method ` spyingOnAClassRetainsStateTest ` and created a new class ` MockWithStaticStateDemo ` to
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing with brackets and
added null check for UGI before executing the action in SecurityUtil . java to ensure robust handling of exceptions during action execution
added error code information to the exception message in OpenALMusic . java to provide clearer context for audio buffer allocation failures
camel - 14136 : camel - core - camel - quartz : rename endpointhelper . reslovestringparameter to endpointhelper . resolveparameter (
refactor precision and scale handling for DECIMAL type creation in RexNodeConverter . java to ensure accurate precision and scale conversion for DECIMAL data
updated the retrieval of vendor and device properties to use Optional for optional handling to improve null safety and prevent potential NullPointerExceptions
updated the assertion in WalletTestAccount003 to use Long . toString ( now ) instead of a hardcoded string to ensure the correct
replaced AxialStage with RocketComponent in BasicFrame . java and refactored selection handling in DesignPanel . java to improve code clarity
added a new parameter ` -- long - running - time ` to configure the value of the VM ' s running time to allow dynamic configuration of the
updated condition in FindRefComparison . java and added a new class Ideas _ 2012 _ 05 _ 21 . java and modified PriorityAdjustment .
replaced the use of ` sun . misc . Service ` and ` sun . misc . Service ` with ` java . util . ServiceLoader ` and modified
xmlunit : fix test and add test namespaces
updated assertion statements in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
added a check for referenceDatabase in MissingUniqueConstraintChangeGenerator . java to ensure that both referenceDatabase and comparisonDatabase are validated before proceeding
refactor android properties handling in IjProjectTemplateDataPreparer . java to improve clarity and functionality to enhance code readability and maintainability by
replaced ` assertEquals ( 0 , s . getRequests ( ) ) ` with ` await ( ) . until ( ) . until ( ) ) `
added user args and daemon status to ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance trace information for better debugging and debugging
svm : fix resource bundle substitution for native library .
updated log message from " Match limit " to " Match order " in HepPlanner . java to clarify the purpose of the log for better clarity
added a new file TheRockMetaDataDemo . java to demonstrate exchange metadata and currency pairs in the TheRockExchange class
changed classes FloatingDecimal and FormattedFloatingDecimal to strictfp and added a testStrictness method in ParseDouble to ensure compatibility with strict
removed the unparseIdentifier method call from columnNamesBuilder to simplify the code by directly using the original columnName
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified the ` contextFreeTemplate ` method signature in `
added a check for non - synthetic methods in InstantiateStaticClass . java and implemented a new test method in Bug1282 . java to ensure static
replaced ` projectFilesystem . getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify path resolution
added support for pending rescues in IkStepDefinition . java to improve handling of pending rescues during message sending
changed the ` equals ` and ` hashCode ` methods from ` final ` to ` hashCode ` in multiple type classes to ensure consistent and consistent behavior across
added a static method ` getSyncLevel ` to retrieve the sync level and updated the ` SyncLevel ` enum to use it to improve code read
fix flaky test controlcommandstest . testclientpause ( )
added a condition to check if the slice state is not RECOVERY before proceeding to ensure that the RecoveryStrategy correctly handles slice recovery scenario
[ opencv ] fix typo in create ( ) call
added SDKPath as a final field in AppleBundle and SwiftStdlibStep classes and modified makeProcessExecutorParams method to accept an execution context to
[ hotfix ] [ runtime ] replace readwritelock with biconsumer in transientblobcleanuptask
server : fix log message for static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of row
refactor BetterBlockPos class to improve code readability to enhance maintainability and facilitate future modifications
updated the method to retrieve the servlet context using the class loader to ensure the servlet context is loaded from the correct class loader
refactor version handling in MainWindow and ConnectionSettingsPanel to use a dedicated method for nightly build status to improve code clarity and maintainability by
added OracleDatabase support and improved statement formatting in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing / ' s in SQL statements for Oracle database
added a new constant UNKNOWN _ VALUES _ ARE _ NSP to IsNullValueAnalysisFeatures . java and defined it in nullderef . java to
use dynamic port for test to avoid port conflict
refactor audio drawing constants for BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN , and adjust
added a duoSecurityPrincipalMultifactorAuthenticationProviderBypass to the DuoSecurityMultifactorProviderBypassConfiguration to enhance the multi - factor authentication
reformatted method declarations in MaxRectsPacker . java for consistency to improve code readability and maintainability
[ drools - 102 ] fix javadoc warning in drools - core
added methods to set and get the help page in PMS and refactored the editor pane handling in LooksFrame to improve encaps
added two new files , GeocodeProviderFactory . java and Constants . java , in the omninotes . utils package to provide a base class
updated import statements for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer to ensure compatibility with the latest Lucene library structure
refactored exception handling in OptionTest and ResourceManagerImplTest to use JUnit ' s ExpectedException instead of JUnit ' s ExpectedException to
[ py4j ] make ` ` gateway . deleteobject ( objectid ) ' ' consistent with ` ` py4j . pygateway .
updated conditions in SegmentsInfoRequestHandler . java and added new document fields in CollectionsAPISolrJTest . java to improve code clarity and ensure correct
updated the calculation of ` numPredictiveAppCols ` to use ` 4 ` instead of ` numColumns ` for phone devices to ensure accurate
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` and refactored related logic in ` DrillJoinRelBase `
added blockbuildcraft . java that allow to keep the inventory
updated gravity settings for layout parameters in DeviceProfile . java to ensure consistent layout behavior across different devices
replaced ` run ( ) ` method with ` start ( ) ` method in ` YahooSession . java ` to ensure thread safety by starting the session
added null initialization for ` ms ` and ` metaStoreClient ` in ` HiveMetaStore ` and ` HiveMetaStoreClient ` to ensure
updated getDisplayScript method to include Category . DISPLAY in Locale . java and added a test for bug 7079486 to ensure correct display script
replaced static imports for CORE _ NAME _ PROP with reference to ZkStateReader . CORE _ NAME _ PROP in Replica .
replaced ThreadLocalRandom with a custom Random instance for random number generation to improve performance and readability of random number generation
added a check for the launcher ' s readiness before backup operations in LauncherBackupHelper . java to ensure that the launcher is only backupd when
updated error messages to include more descriptive data to improve readability and provide more context in exception messages
added resilience4j unit test base on user forum issue
rename ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class for improved performance to enhance performance and maintainability of the code
test : fix filemessagehistorytest to work in a temporary folder
added logging levels for various loggers in Grasscutter . java to improve debugging visibility for various components
changed the ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` methods to static
added a check for the NORMAL state in the workspace and implemented a method to retrieve the current state in the Workspace class to improve state management and
refactor multiple array assertion classes to improve code consistency to enhance maintainability and readability of the codebase
added a cacheable check before notifying new templates in SnippetTemplate . java to ensure notifications are only sent when cacheable is enabled
added ` SCOPE _ SOLR _ CORE ` scope constants and updated related classes to support Solr core scope management to enhance the context ' s
added primary key to the " measurement " table in DatabaseMetaDataTest . java and verified the presence of the " measurement _ pkey " column in
[ pantheon ] rename -- permissions - config - path to -- permissions - config - file
refactor ` HttpSessionContextIntegrationFilter ` to simplify session creation logic and improve logging messages to enhance code readability and maintainability by reducing complexity in
added a new file TestIfWithDeadRegion . java that contains a test class for retrieving a string using a Supplier to demonstrate the use of a
corrected the spelling of " UD " to " USD " in DependencyParserITest . java and the default model file name to
refactor SnowflakeIdGeneratorTest to use HighResolutionTimer for concurrent access tests to improve performance and resource management during test execution
added a static UI setting to AppSettings and modified MainFragment to show a toast bar conditionally based on user settings to enhance user experience by allowing
refactor Privilege implementation to use a lambda expression instead of an anonymous class to improve code readability and ensure proper resource cleanup
modified the ` setParameter ` method to ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` to
updated JOptionPane messages to use localized messages instead of hardcoded strings to improve user experience by providing a more descriptive error message
added MIME type assertions for Excel files in TestMimeTypes . java to ensure proper handling of Excel file formats in the application
added logging functionality and improved type safety in Runner and FeaturePathFeatureSupplier classes to enhance debugging capabilities and provide clearer feedback on missing features
camel - 13436 : camel - eip - enricher - improve xml output for camel - eip
add - dcassandra . skip _ schema _ check = true to skip migration check
added debug logging statements and refactored audio notification and playback device handling in DeviceConfiguration . java to improve traceability and maintainability of the code
added a WebsocketConfig instance and its getter / setter methods to ShenyuConfig , and modified the reactorNettyWebSocketClient to accept a
implement isuitelistener so that it do n ' t pollute the result queue for each test .
added a check for non - empty content length before adding it to the document to ensure that the content length is only added if it is not empty
get rid of synchronized block in defaultsolverjob . terminate ( )
( chore ) camel - iotdb : catch pathalreadyexistexception when insert a non - exist timeseries
added a new method ` check ` to the ` Authz ` class to provide a way to check if a boolean result is returned
changed access modifiers of several methods from public to protected in ShadowActivityManager , ShadowMeasuredParagraph , ShadowSettings , and ShadowTypeface classes to
server : do n ' t terminate the owner if the domain be in reserved state
removed conditional logic for setting the ` _ valueString ` in ` HttpParser ` and modified test methods in ` HttpParserTest ` to simplify the
refactor initialization logic to use a static method for better readability and maintainability to improve code clarity and maintainability by reducing duplication
added methods to manage the public directory in ` ShadowEnvironment ` and created corresponding unit tests in ` EnvironmentTest ` to ensure proper functionality of external storage
[ jbrules - 2342 ] add test case for mvel type coercion to the insert method
reformatted code for consistency and readability in LoggingConfig . java to improve code maintainability and consistency
added exception message to the logging statement in ActionNode . java to provide more context for exception handling during the construct process
remove the tel : prefix from the tonumber if it ' s not already a tel :
refactor visibility logic for shared files in FileListListAdapter to improve readability and maintainability of the code
deprecated the HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated its usage in TestTxnCommands3 . java
refactor ExecuteStatementOperation and Operation classes to use constants for session ID and log keys to improve code readability and maintainability by centralizing log
refactor BTCMarketsStreamingAdapters and BTCMarketsStreamingService to replace Google ' s Lists utility with Java ' s Arrays
[ hotfix ] [ test ] fix typo in ogrdatastoretest
removed the method ` onErrorInStep ` from ` StepListenerSupport ` to simplify the code by eliminating unnecessary functionality
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 14197 : camel - netty - http should use http : / / http : / / http : / / http : / /
testnonblockingapi : use log instead of system . out
added a check to return false if the row index exceeds the size of the connection list to prevent potential index out of bounds errors
[ net ] add a new rule to check if a method have the same name a an enclosing class .
added the ` ExtendedPlatformComponent ` class and modified ` ManagementFactory ` to utilize it for retrieving JMX mbeans to enhance management capabilities by
added a line to replace single quotes in SQL strings to ensure proper handling of single quotes in SQL queries
updated URLs in multiple test classes to include the " org . know . xchange / bleutrade / dto / " directory to ensure the correct
refactor TextEscapeUtils to improve code readability to enhance maintainability and facilitate future updates
added a new parameter ` FILTER _ PARAM ` and modified the ` FilterQuery ` instantiation in ` AbstractSpatialFieldType . java ` , and updated the
updated progress display logic in GpsLoggingService and added a call in AutoEmailHelper to post an email sent to enhance user experience by providing feedback
replaced ArrayList with HashSet for inlinks in Inlinks . java and LinkDb . java to improve performance and readability by using iterators instead of
[ tradfri ] remove stale result after stop scan
updated the ` testFilterForPartition ` method to accept a boolean parameter for blocking mode to enhance control over partition retrieval behavior based on server - specific
added a new status ` Abandoned ` to the ` TicketModel ` , modified ` TicketBasePage ` , and ` 
removed initialization of columnAliasPrefix in multiple platform classes and initialized it to null to streamline platform implementations by eliminating unnecessary null assignments
updated data types from Text to BytesWritable in LlapRowRecordReader , LlapRowInputFormat , and LlapRowInputFormat classes to improve data
terasology : do n ' t run on a 32 - bit jvm on a 64 - bit system .
pdfcopy : do n ' t copy the b value to the top page if it ' s not a page .
added a new option ` DAEMON ` to the ` OptionEnum ` class and implemented the ` startDaemon ` method in ` TerminalClient `
added a new file ` FlushIndexTask . java ` that implements a benchmarking task to flush the next buffer based on the index writer ' s
add bm threshold to sstable flushing . patch by jbellis ; review by jbellis for cassandra - 1160
do n ' t sort medialibrary folder if they do n ' t match
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket that utilizes IPv6 for socket communication to ensure proper handling of
updated grid size points in GridSizeMigrationTask . java to correct grid size coordinates for improved grid migration functionality
replaced calls to ` getName ( ) ` with ` ci . name ` in ` SerializerPojo . java ` to streamline code and improve readability
added read - only context options and modified transaction handling in the Context class to ensure proper transaction management and prevent transaction failures in read - only scenarios
refactor LookAndFeelCommand class for improved readability to enhance maintainability and facilitate future modifications
updated the calculation of lastRunEnd and adjusted the condition for offset check in BlockBoxing . java to ensure correct handling of lastRunStart and
added EOFException and EofException to the exception assertion in GracefulStopTest . java to ensure proper handling of EOF and Eof exceptions
refactor NetJavaImpl to simplify listener removal and lock management to improve code readability and maintainability by using synchronized methods
[ hotfix ] [ network ] fix typo in networkparameters javadoc
removed the conditional setting for account asset optimization in DynamicPropertiesStore . java to streamline the asset optimization logic for better readability and maintainability
added a new constant J9 _ GC _ POLICY _ NOGC with a value of 0 to control garbage collection behavior in the VM class
added error handling for invalid protocol buffer data in TransactionCapsule . java to improve robustness by catching invalid protocol buffer exceptions
[ java ] remove the strict exception type checking rule
updated resource path in HelpContent . java and improved error logging message formatting to enhance clarity and provide clearer error messages when no localization is available
added a new file ` ProcessorInfo . java ` to manage CPU processor settings to provide a mechanism for determining the number of processors based on available processors
add - html option to printbugreporter to generate html output .
refactor LogbackLoggingSystem to use a nullable logbackXmlLocation string instead of an Optional < String > logbackXmlLocation to improve code
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve cluster ID handling and add service component recovery functionality
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to improve handler creation logic and enhance test coverage for
refactor the dependency type assignment in RustCompileUtils to use a switch statement for better readability and maintainability to improve code clarity and maintain
updated ` oauth2LoginLinks ` method to accept ` queryParams ` as a parameter and added error handling in ` oauth2LoginLinks ` to improve
hive - 13232 : hfilereader should seek the first kv before the splitkey ( sergey shelukhin , review by
hhh - 13346 deprecate generationtime . always ( ) in favor of generationtime . always ( )
add a parameterized test for the layer normalization function in TestLayerOpValidation . java to ensure that the layer normalization functionality works correctly with NAN and
replaced direct calls to ` showShareFile ` with calls to ` getFileOperationsHelper ( ) . showShareFile ( ) ` across multiple activities to
added a new test class ` LiquibaseUpdateMojoExecutionTest ` for testing the execution of ` LiquibaseUpdate ` with relative clob files
convert the proxyType string to uppercase in Proxy . java to ensure consistent casing of the proxy type for consistency
add a new class ` mod _ MinecraftForge ` that overrides the version and load method in ` mod _ MinecraftForge . java `
updated JdbcDatabaseSnapshot to include fetching and filtering logic for specific table keys to enhance column filtering capabilities based on database case sensitivity
added a new ` Container ` to the ` CSSBorderTest ` class with a custom border image to enhance the visual appearance of a container with a
added a new class ` RetryInterceptorAutoConfiguration ` and modified ` RetryLoadBalancerInterceptor ` to conditionally handle retryable status codes to enhance configuration flexibility
updated constructor parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure proper layout behavior when the parent is
updated the construction of parentTaskName to use System . currentTimeMillis ( ) instead of System . nanoTime ( ) to ensure the current time is used
added error handling for invalid Add Service Request in ServiceResourceProvider . java to improve robustness by providing clearer error messages when parsing input
refactor the logic for accepting unversioned files in IndexDatabase . java to improve readability and maintainability of the code
ggbround ( x ) : make sure x [ 0 , 1 ] and x [ 0 , 2 ] do n ' t be negative
refactor AnonCipherWithWantClientAuth class for improved security practices to enhance security and maintainability of the code
added @ Deprecated annotations to multiple methods in ProducerTemplate . java to indicate that these methods are outdated and should no longer be used
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
try to fix flaky test : evictiontest . testremovedentry ( )
removed the ` encodeInternal ` method and replaced it with a new variable ` saltedPass ` in ` Md5PasswordEncoder . java ` to
replaced local variable ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` for adding and removing global layout
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
[ flink - 24136 ] [ table - planner - blink ] fix typo in sstablemetadata . java
set the preferred size of the security panel so that it do n ' t overlap .
added null and empty checks for replies in multiple classes to ensure that only non - empty replies are processed when compression is enabled
updated the ` toString ` and ` hashCode ` methods in ` HitbtcBalance ` class to use ` Objects . equals ` and ` Object
updated SQL code generation and metadata handling in SqlCodeGenerator and added new test cases in SqlParserTest to improve code clarity and ensure correct metadata handling
updated return statement in RetriesExhaustedWithDetailsException . java to return addresses . toString ( ) instead of a single string to improve clarity
use opencookie . open ( ) in editgcodefile ( ) to open file
updated import statements from ` org . apache . hc . client . http . impl . classic ` to ` org . hc . client5 . http
replaced the calculation of energyToRemove and energyUsable with direct calculations using the battery ' s getEnergyStored ( ) method to simplify energy management
added a check to delete the temporary output file if it exists to ensure that the temporary output file is deleted when it does not exist
updated the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added new test cases for retrieving trades
added time limit check in ReplayProcessor and ReplaySubject classes and corresponding test cases in ReplayProcessorTest and ReplaySubjectTest to ensure
updated expectedCitation string formatting in CitationStyleGeneratorTest . java to ensure correct formatting of the expected publication string
added new SQL columns and updated the way video HDR format is set in MediaTableFiles . java to improve code readability and maintainability by
add show _ definition _ for _ equation _ in _ exam feature flag
fix a nullpointerexception in sipcommtextfieldui . setcomponent ( null , null )
hbase - 24497 metareader do n ' t set meta scan caching when startrow be null ( sergey shelukhin )
updated the initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes to improve code organization to enhance maintainability and readability of the codebase
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to enable the transient taskbar functionality in the
refactor AccessExecution , AccessExecutionVertex , ArchivedExecution , and ArchivedExecutionVertex classes to improve code organization and maintainability
added a condition to set density to 3 if the scale is 3 to ensure density is correctly set based on the scale value
rename ` optional ` boolean to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
hbase - 13257 regionstatestore . getregions ( ) should log exception when fail to get regioninfo
[ hotfix ] [ test ] fix flaky testclusterupgradeutils # testclusterupgradeutils
updated warning message in AsyncHttpConnection and refactored AsyncContextTest class to LocalAsyncContextTest for improved clarity and structure to enhance debugging information
added a boolean parameter ` showArrow ` to the constructor of ` SearchUiManager ` to control the visibility of arrows in the UI
added a break statement in Database . java and modified TestRowLocks . java to remove the testSetMode method and streamline lock mode handling
skip biginteger test on linux / amd64 .
added handling for Integer and IntValue types in Scalars . java to ensure proper conversion of integer values to string representations
update primary key validation logic in CreateTableStatement . java to ensure only one primary key is specified to improve error handling by providing clearer guidance on
added conditional logic to set drawable resources based on LMP status in CellLayout , Hotseat , and Launcher classes to ensure proper UI appearance for
throw an exception if there be no isolate to query for flutter view .
added new methods for content type options , xssProtection , httpStrictTransportSecurity , and frame - options in HeadersConfigurer . java to enhance
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and facilitate future modifications
[ grid ] rename smoketest to distributecdptest
[ hotfix ] [ test ] add type to @ aggregateroot in eventsourcingrepositorytest
added support for prebuilt libraries in Python binary and test cases to ensure proper handling of prebuilt libraries in the application
added support for client authentication in NetServerOptionsConverter and updated default values in NetServerOptions to improve flexibility and maintainability of client authentication handling
updated REPLDIR paths to include the system name parameter in HiveConf . java and MetastoreConf . java to ensure consistency in directory naming by
refactor task visibility handling in RecentsView to use primary and secondary task views to improve clarity and maintainability of task view retrieval logic
add timeout to a couple of amqptransformertest that can take too long .
removed clearAll ( ) method from DataTableTopComponent . java to streamline code by eliminating unnecessary method calls
rename variables from " controller " to " flowController " in multiple processable classes to improve clarity and consistency in naming conventions
[ flink - 20527 ] [ runtime ] fix exchange sum num not be set when consume all child pipelinebuilder
added a use of ` io . github . classgraph . ClassLoaderHandler ` to the module - info . java files to enable the use of the
move solve ( ) to be able to set the best solution on an event thread .
added JsonIgnore annotation to ApplicationSettings class to exclude sensitive data from JSON processing
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that throwable is not null before proceeding
refactor query info retrieval to use a local variable for clarity to improve code readability and maintainability by reducing duplication
fix auto - workbenches not work properly if there be no recipe .
fix gl200 text decoder ( fix # 102 )
rename timeColumnName and timeFieldSpec to incomingTimeColumnName and incomingTimeColumnName for clarity to improve code readability and maintainability by using more de
removed duplicate calls to HttpMethed . waitToProduceOneBlock ( httpnode ) in HttpShieldTrc20Token004 . java
add an initializable interface to allow initialization of the container .
add a longtasktimer sample to track the active state of the timer
changed the data type of SYNC _ DELTA _ RATE from float to double and modified the calculation of interval and refTime accordingly to
thymeleaf - 644 : deprecate unwrapped fragment expression in thymeleaf template
changed the type of ` _ attributes ` from ` HashMap ` to ` ConcurrentHashMap ` to ensure thread - safe access to ` _ attributes `
do n ' t re - copy the message before send it back to the consumer so we do n ' t have to copy the message .
added new color constants and refactored the ` extractInto ` method to use ` applyFallback ` for different color extraction algorithms to improve code
added access check for data folder in sketch builder to ensure that only accessible data folders are processed
modified the ` appendContent ` method to accept a ` includeTitle ` parameter and updated related logic in ` NotesHelper ` to enhance functionality by allowing
removed initialization of sessionRegistry in ConcurrentSessionControllerImpl to simplify the session registry initialization process
added logging for connection completion and error handling in NettyStreamingService to improve debugging by providing more context during the reconnection process
use javassistproxyfactory instead of cglibproxyfactory ( # 224 )
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management by utilizing a more efficient collection
refactor exception handling in SocketExceptions and improve message validation in ExceptionText to enhance clarity of exception messages and enhance error reporting for better debugging
added a check to check if the view directory is under the repository directory before proceeding to ensure that the project view is only displayed when the repository
remove drag and drop from tabbedpane , since it do n ' t have bib file
added " - XX : + UseCompressedClassPointers " option to multiple test files to enable the use of compressed class pointers in the
removed error logging for non - ACTIVE or REPLAYING update log states in PeerSync . java to streamline error handling for update log states
deleted the ConnectionHook . java file to the functionality is no longer needed in the PostgreSQL core package
solr - 12313 : remove testinjection . waitforreplicasinsync
camel - 14237 : camel - swagger - java - use assertthat . isofarraytype ( string ) instead of assertthat ( string
[ apex ] make sure we do n ' t use a hardcoded version string
refactored multiple Java files related to CORSFilter , CoNLNLOutputter , CoNLLUOutputter , and Tsurgeon to
added singleton implementation for AggregateEngine and updated thread handling in OverflowQueryEngine to improve thread management and enhance thread management efficiency
updated WebSocketAsyncConnection constructor to accept a ByteBufferPool instead of using StandardByteBufferPool to enhance flexibility in buffer pool management for WebSocket connections
added scroll position adjustments for thumbnails in UploadActivity to ensure proper scrolling behavior for better user experience
fix ( sql ) : fix sample by on timestamp override by other column alias
refactored animation handling in LauncherAnimUtils and added transition animation functionality in LauncherStateTransitionAnimation to improve animation performance and enhance user experience
added a condition to disable the default user agent in HttpClient configuration to ensure proper user agent configuration during HTTP requests
added pubsubhubbub setting to the FeedRefreshUpdater and ApplicationSettings classes to control the handling of pubsub feeds based on user settings
changed the access modifier of the finalize method from public to protected to allow subclasses to access and override the finalize method
added a check for synthetic classes in the isAnonymousOrLocalOrSynthetic method to ensure correct hash calculation for anonymous and non - synthetic classes
add dspacewebapp . java to make sure rest be not use by dspace . rest
added null check for leftTableAlias and implemented getTableAliasContainingColumn method in RowResolver to ensure correct column alias retrieval and improve error handling for missing
updated the trigger key to include a prefix " Trigger " in JobGenerator . java to improve clarity and consistency in key naming
updated logging messages in Wallet . java to use parameterized logging instead of hardcoded values to improve logging clarity and maintainability by providing more context
remove timeout from map . put ( key , value ) in basicmaptest
updated default values for rcfileOptimizedWriterEnabled and rcfileWriterValidate in HiveClientConfig . java and TestHiveClientConfig . java to ensure
added a new enum ` TlsClientCertPolicy ` and refactored client certificate handling in ` GitBlitServer ` to utilize it
added a debug log statement indicating a new CHALLENGE has been saved in KrakenFuturesStreamingService . java to improve debugging by logging
added headers and sub - protocols handling in ProxyWebSocketHandler and updated related methods to support additional WebSocket protocols to enhance flexibility in handling WebSocket requests
added a debug log statement for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability of Hive query results during debugging
updated the formatting of dimensions and event label in HolidayEventFormatter . java to improve clarity and consistency in the label formatting
refactor inner class fields in FinalizePrivateFieldsTest and update constructor check logic in FinalizePrivateFields to improve clarity and functionality of inner class
refactor UnexpectedJobExecutionException class for improved clarity to enhance maintainability and readability of the code
removed the ` buttonShouldBeOpaqueButtons ` method and its usage in ` AquaLookAndFeel . java ` and ` AquaUtils . java `
added null checks for docsEnum and maxCost in DrillSidewaysQuery . java and DrillSidewaysScorer . java to
added a new class registration for GeoDegeneratePath with a value of 36 in StandardObjects . java to ensure correct class registration for GeoDegenerate
removed the ` preFill ` parameter from multiple pool constructors in ` ParticleEffectPool ` , ` FlushablePool ` , and ` Reflection
added logic to update the state of the taskbar and apply the system UI flag in TaskbarStashController to ensure the taskbar state changes
added null check for StyleInfo before comparing styles in CascadeDeleteVisitor . java to avoid potential NullPointerExceptions during style removal
refactor GuiUtil to use a unified setSize method and update layout parameters to improve code readability and maintainability by encapsulating size settings
refactor icon retrieval logic in FileTreeViewHolder . java for improved clarity and functionality to enhance code readability and maintainability by consolidating icon
fix flaky paralleluniversetest by use contains instead of isEqualTo
added synchronization to the iteration over suite results in XMLReporter to ensure thread safety when accessing test contexts
add testnativeprobabilityfunctionqueries to test native probability function
added a call to ShutdownThread . deregister ( this ) in ClientContainer . java to ensure proper resource management by deregistering the shutdown thread
added a method ` dropTemporaryTableAfterUse ` to ` SybaseASE15Dialect ` that always returns false to ensure temporary tables are not
simonstewart : remove the use of the selenium . color library from the htmlunit driver
refactor multiple Solr - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter class for improved performance to enhance performance and maintainability of the code
updated string formatting in VirtualAllocCommitUncommitRecommit . java to improve clarity of reserved memory addresses
do n ' t refresh the ad playback state when there be no group
added a suppression warning for the ` Objects . equals ` method in the ` MultimapSubject ` class to ensure that the ` equals `
updated the wave frequency string from ` deg _ text ` to ` unit _ hz ` in ` WaveGeneratorActivity . java ` to align the
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
removed the putAll method from the TreeMap initialization in TestLabelOptions . java to simplify the code and improve readability
added a static final VertexFormatElement for NORMAL and improved null checks in VertexLighterFlat . java to enhance code readability and maintainability
added span tags for visibility in TracingClientInterceptor , ITTracingClientInterceptor , and ITTracingServerInterceptor to enhance tracing functionality and ensure proper span
updated time zone handling in ScheduledTrigger . java and removed a bug annotation in ScheduledTriggerTest . java to improve code clarity and maintainability by using
added AsyncBucket and InMemoryExtension classes and updated Bucket and ConfigurationBuilder methods to implement the InMemoryExtension interface to enhance async functionality and provide an extension for
updated class directory handling in resexhausted003 . java to use test . class . path from the test classpath instead of the first argument
reformatted code for consistency and readability to improve code readability and maintainability
refactor OngoingStubbing class for improved clarity to enhance maintainability and readability of the code
added a ` Optional < WebServer > webServer ` parameter to the ` createWebServer ` method and implemented logic to reuse the web server if
corrected a typo in the variable name from ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and added a static
added a check to clear the thread allowlist if it is not empty before utilizing it to ensure that the thread allowlist is properly cleared before
replaced ` setOutputSource ( outputSource ) ` with ` setItemWriter ( outputSource ) ` in ` TransformerWriterItemProcessorTests . java
dmndtanalyser : skip findgaps and findoverlaps if hitpolicy = collect
added a new test method ` testSlidingWindowsCombine ` to ` CombineTest . java ` to verify the combined combine functionality to ensure correct handling of
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to ensure apps are only bound
added a check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to ensure the test correctly verifies that the " Running " attribute is
refactor code structure for improved readability to enhance maintainability and clarity of the code
refactor AquaMenuBarUI to use AccessController for property retrieval instead of a static method to improve code readability and maintainability by utilizing
fix crash when setrawlocation ( ) be call with fall distance = 0 .
refactor query construction in SimpleJpaRepository to use CriteriaQuery for improved query performance to enhance query accuracy and performance by using a more efficient query
added genesis block parameters to the BlockUtil class and modified the tx input builder to include them to enhance block configuration options for genesis transactions
rename loopsafepointinsertionphase to safepointinsertionphase to make it more generic .
added null and empty checks for the children of RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve robustness by avoiding potential
changed class and method visibility from package - private to public in ArtifactResolver . java to allow access to these classes and methods from other packages
fix memory leak when reactor thread be terminate
added a check to ensure maxBufferedDocs is at least 1 in IndexWriter . java to ensure that maxBufferedDocs is at least 1 to prevent
added functionality to manage login state during instance state changes in LoginActivity to ensure proper handling of login state during the activity lifecycle
pump : fix nullpointerexception in sort ( ) .
refactor access modifiers of several classes and methods in HttpShardHandlerFactory and LBHttpSolrServer to protected to enhance encapsulation and
updated the order in BaseAuthenticationServiceSelectionStrategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added
added Jetty server setup and handler collection to TestJNDI . java to enhance server functionality and improve context handling in the application
reformatted code for improved readability and consistency in SortedDynPartitionOptimizer . java to enhance code maintainability and ensure proper validation of operator
( chore ) camel - io : fix filestreamchannel . close ( ) to always return true
updated the logic for managing null counts in StatsUtils . java to ensure proper handling of rows when the number of nulls exceeds the new number of
camel - 14136 : camel - kamelet - export can now be use in camel kamelets mode . thanks to sergey
replaced OkHttpOAuthConsumer with AuthorizationService and added task completion tracking to improve security and error handling during OpenStreetMap uploads
updated multiple Java files to improve logging clarity and reusability to enhance code readability and maintainability by centralizing test execution logic
added a clientAuth configuration option and its getter / setter methods in IoTDBRestServiceConfig . java , and updated RestService . java to
refactor mock candidate injection in PropertyAndSetterInjection . java and add new test classes ChildWithSameParentFieldInjectionTest . java to improve code
add initializebean to bloomuriuniqfilter to make it easy to configure
updated getCursorAdapter parameter from false to true in HomeFragment . java and modified preference settings in TweetPager . java to enable refresh functionality for
updated the intermediate header height ratio from 1f to 75f in ProfilePager . java to improve UI responsiveness by adjusting the header height
updated multiple Java files to include a new ` RecompilationEvent ` class and modified logging to include the return value of ` getReturnValueNon
added HOST _ SYS _ PREPPED configuration and methods to manage system installed configurations to enhance user experience by allowing system pre - installed
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and created a corresponding test class ` UnknownChangeLogFormatTest
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43535 -
added support for entity and score properties in StaticPipeline to enable dynamic processing of entities and scores from specified properties
refactor filename extraction and file path handling in Frame . java and WhoopsModule . java to improve handling of file paths and enhance configurability
[ geos - 7137 ] catalogrepository . getdatastorebyname should return null if datastore be not find in the catalog .
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` classes to improve test
camel - 14105 : fixed the unit test error of twoconsumeronsametopictest
updated the parameter type from List < IMeasurementSchema > to List < MeasurementSchema > in writeAlignedWithTSRecord and TsFile
updated memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to include expected and actual memory usage to
updated the logging jar file from ` slf4j - log4j12 - * ` to ` slf4j - reload4j - *
fix flaky huawei bridgehandlerosgitest ( # 11818 )
moved ` AboutActivity ` , ` CrashHandlerActivity ` , ` TerminalActivity ` , and ` TerminalActivity ` to the ` activities . activities
[ drools - 1276 ] ignore kiecontainersolverfactorytest until drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ schemaFile ` and ` _ gitHubAPICaller ` with additional parameters
refactor AbstractExpressionPart class implementation to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in taskslot javadoc
replaced instances of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` Net
added error handling for lock removal in MoveTask . java to improve robustness by handling LockException gracefully
replaced property loading with ResourceBundle for GEM _ PATH and improved error handling in JRubyBackend . java to enhance code readability and maintainability by
transaction : remove zero _ address and use byteutil . empty _ byte _ array instead
refactored the initialization of ClassInfo in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] fix jobmanagerstartuptest failure on window
chore : [ cloud ] upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
added a new Bundle instance and set it in the FileDisplayActivity to enhance the functionality by allowing customizable extras for the builder
changed the loop condition from break to continue in ParticleEmitter . java to ensure the loop continues when the particle is null
updated the expected number of return values in AmbariManagementControllerImplTest from 4 to 3 and adjusted the expected values from 2 to 1 to
removed nullable annotation from the SERVICE column in TransientSessionTicketImpl . java and added exception handling for NoResultException in JpaTicketRegistry .
updated Bug4823811 . java file to improve code structure to enhance maintainability and readability of the code
updated the argument handling in RmStep . java to use a path relativizer for pattern deletion to ensure the pattern is relative to the
DeconzBridgeHandler . java : requestFullState method accepts a boolean parameter indicating initial request status to enhance flexibility in state request handling based on initial
added attribute handling and updated related methods in ShibbolethCompatiblePersistentIdGenerator . java to improve attribute management and ensure proper serialization of principal attributes
reformatted the @ Inject annotation in RequestValidationService . java to improve code readability and maintainability
added stats logging functionality to the UiThreadHelper class to improve user experience by controlling keyboard visibility during user interactions
removed redundant calls to ` MManager . getInstance ( ) . clear ( ) ` in multiple test files to improve code readability and maintainability by
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add testslurpfile ( ) to make sure we do n ' t have unknown file
added @ FunctionalInterface annotation to several classes and methods in GrpcChannelsProperties , GrpcChannelsProperties , GlobalClientInterceptorConfigurer , and Global
refactor span retrieval logic to use a new method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added support for Date types in the Hive schema converter and updated related classes to support it to enhance data handling capabilities for date types in Hive and improve
updated style splitting method to use Patterns . COMMA _ SEPARATOR instead of a hardcoded string to improve code readability and maintainability by
ggb - 280 add validation to input dialog to prevent invalid input
refactor column comparison logic in SemanticAnalyzer to improve clarity and maintainability to enhance code readability and maintainability by reducing duplication
refactor the way scores are handled in WANDScorer . java to improve clarity and correctness to enhance code readability and maintainability by
refactor Correspondence class for improved clarity to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to improve code clarity and maintainability by using specific AWT
initialized ` curPixVal ` to a default value of ` 0xFF000000 ` and added a new test class ` WhiteTextColorTest ` to ensure
refactor biomedictionary . getsubtypes ( ) and getsubtypes ( ) to use a deque instead of an arraylist .
corrected the spelling of " withinTolerance " to " exceedsTolerance " in BoundedLocalCache . java to improve code readability and maintain
added stability annotations to TaplTestsLauncher3 . java to enhance test stability for both LOCAL and POSTSUBMIT scenarios
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure ` logFileSuffix ` is not empty before processing to avoid potential errors when ` logFileSuffix ` is empty
updated PythonBuckConfig . java file to improve configuration handling to enhance performance and maintainability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of system shared library names
fix meiligao decoder ( fix # 102 )
fix npe in powerdiade when tile be null
added a new asynchronous cache trimming feature using a progress dialog to improve user experience by displaying cache size statistics during deletion
updated import statements from ` com . google . api . client . util . Lists ` to ` com . google . common . collect . List
replace return false with NotAuthorizedException in BasicAuthAccessControlFactory and ZkBasicAuthAccessControlFactory to throw a specific NotAuthorizedException to improve error handling
[ java ] add scheduleperiodically ( ) method to the scheduler interface so that it can be subclassed .
replaced refreshListOfFilesFragment call with onItemClicked method to update the list of files to improve user interaction by notifying the user when a
added a check for multiple XML files and improved error handling in StreamUtil . java to ensure proper resource management and avoid closing duplicate XML files
refactor create _ table method to accept CreateTableRequest instead of EnvironmentContext to simplify method signatures and improve code readability
added a volatile boolean field ` aborted ` and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker `
added checks for indent values in multiple parser classes to ensure consistent indentation handling across multiple parsers
added networkwifistatusreceiver and changewifistatusevent to make it easy to update the app ' s autoplay state
remove control frame check from framegenerator . checkcontrolframe ( )
added visibility setting for collapse handle in WidgetsBottomSheet to ensure the collapse handle is visible in the bottom sheet
added two new files , Issue475 . java and XSS . java , to handle HTML and JavaScript parameters to ensure proper handling of special characters
added a check to return early if there are no units to scroll to avoid processing when there are no units to scroll
updated the condition to check if the contract list size is not equal to 1 instead of greater than or equal to 1 to ensure that the condition only
added ` add ( Enum value ) ` and ` put ( String key , Enum value ) ` methods to ` JsonArray ` and ` JsonObject ` classes
added hashCode method to IPPPrintService and created TestRaceCond class for testing equal print services to ensure consistent hash code generation for print services
mondrian : remove unused databaseversion field in db2idialect and db2zdialect
do n ' t try to connect to a stripe transaction that do n ' t have fee
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
do n ' t increase clear data first sample if buffer be encrypted .
removed public access modifier from class declarations in multiple classes to enhance encapsulation and improve code readability
added import statement for Retrofit in Part . java and PartMap . java to enable Retrofit functionality in the codebase
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter handling and clarity to enhance code readability and maintainability by consolidating parameter
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of dialog types in AbstractFloatingView . java to enhance
fix : update gapic - generator - java with mock service generation fix ( # 57 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation effect handling based on task status
removed the second parameter from the createRenderScript method in AllAppsView . java to simplify the code by removing unnecessary parameters
refactor PMD class to improve code readability to enhance maintainability and facilitate future updates
refactor PluginListCellRenderer , PluginManagerActivator , and PluginTableModel to use a new method for checking system bundles to improve code readability and maintain
[ hotfix ] fix checkstyle violation in integrationtestsparkbulkload
replace hardcoded zero 0.001 with a constant LOW _ FALSE _ POSITIVE _ RATE for BloomFilter instantiation to improve code readability
refactor configuration handling in Overview . java to use a more descriptive variable name and improve clarity to enhance code readability and maintainability
agent : do n ' t try to attach a host if it do n ' t exist
added null check for the value before adding it to the entrySet in DefaultRecordStore . java to avoid potential NullPointerException when the value is null
kvm : throw discoveryexception if fail to add host to vm
update error messages for NO _ NAME and NO _ VALUE in ParamAction . java to improve clarity and consistency in error reporting
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbing to accept an Object instead of InvocationContainerImpl
added a method to strip method parameters from the method name in the LocationOpener class to improve code readability and maintainability by centralizing method
update version name and code for GreatVoyage to reflect the latest release version
make allowedcommands a set instead of a list to prevent concurrentmodificationexception
[ geot - 5592 ] change mow layer option to use key instead of hardcoded value
ggb - 116 popups should be resize when there be no overlap feature .
updated error messages in ValidationSuite . java to use hyphens instead of hyphens to improve clarity and consistency in wording
added a private final StartingWindowListener instance and refactored its initialization to improve code readability and maintainability by encapsulating the listener
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code readability and maintainability
updated exception messages in CheckPackageAccess . java from " Exception " to " PackageAccess SecurityException " and added handling for PackageDefinition SecurityException to
increase timeout in threadsafetytest to allow test to complete
change the default value of ` loggingEnabled ` from ` true ` to ` Boolean ` and add a null check for ` loggingEnabled ` to ensure
added @ JsonIgnore ( true ) annotation to mmm Schema . java and ppp Schema . java to ensure proper JSON serialization during serialization
increased test timeout from 5000 ms to 10000 ms in TestNonTxIndexBuilder . java to allow more time for the test to complete before
updated method signatures and variable names in SimpleNaiveBayesClassifier . java for clarity and consistency to improve code readability and maintainability by standardizing
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to enhance module structure and improve audit logging functionality
refactor Prototype class to improve code organization to enhance maintainability and readability of the code
added null check for tableIsTransactional in SemanticAnalyzer . java to ensure proper handling of transactional tables in the database
[ java ] remove unused method recordingwriter # writefragment ( directbuffer , header header ) .
[ cea ] fix cea subtitle with non - negative index
[ hotfix ] [ test ] add miss ' alias ' parameter to datastore method
updated CurrencyPair identifiers from " BTC _ CAD " and " DOGE _ USD " to " USD " and " USD
hhh - 14136 - close entitymanagerfactory on failure in unit test
updated KafkaSender import statements from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to
added two new files , GwtBinaryIntegrationTest . java and A . java , for testing GWT binary builds to ensure the GWT binary build
updated loading cause label visibility logic and refactored ResultSetRenderer initialization to improve error handling and streamline ResultSet renderer initialization
reformatted code for better readability in EnhancedRandomImpl . java and updated test cases in EnhancedRandomImplTest . java to
added XML _ SECURITY _ PROPERTY _ MANAGER constant and refactored XMLSecurityPropertyManager initialization to improve code readability and maintainability by
added two new interfaces , InterfaceWithDefaultMethod0 , InterfaceWithDefaultMethod1 , and Subtype , with default methods to implement interfaces with default methods to
change the syntax for the GLOB operator from " LIKE " to " GLOB " in SqliteFieldPredicateView . java
[ drools - 148 ] make getdmnprofiles protect so subclass can override it .
fixed - script . load ( ) method be call in async mode on slave node
remove method setwordfieldvolatile ( ) and add static initializer to static object .
updated logging statements to use size ( ) instead of size ( ) for more precise information to improve logging readability and maintainability of the code
fix potential memory leak in the server .
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and modified thread pool configuration in WebServer . java to allow configurable
replaced the handling of shortcuts to store removed shortcuts in a map and added checks to ensure only non - empty shortcuts are processed to avoid
remove unnecessary check for non - String value in DefaultHttpClientBinderRegistry . java to simplify code by eliminating unnecessary condition checks
removed case handling for the home button in DetailFragment . java to streamline navigation logic for better user experience
added a check for the AndroidMarket presence in the play service inclusion logic to ensure that the play service is only included when the market is available
refactor TableBlockParser to improve handling of non - space spaces and adjust loop conditions to improve readability and maintainability of the code
added support for a bridging header in the NewNativeTargetProjectMutator , AbstractAppleNativeTargetBuilder , and ProjectGenerator classes to enable
refactor ` PotentiallyDeadCode . java ` to use a set for unused methods and update source path handling to improve code clarity and maintain
added diamond detection functionality and warnings for redundant arguments in Foo class to improve code clarity and prevent potential errors during type inference
replace invocation . getInvocationStageTrace ( ) . startSend ( ) with invocation . onStartSendRequest ( ) in HighwayClientFilter and 
added debug logging for cache metrics registration in SolrCacheHolder . java to improve visibility into cache metrics registration process
added catch blocks for AuthenticationException in LdapCtxFactory . java to ensure proper exception handling for authentication failures
updated the condition for checking the zero value in Test6796786 . java to ensure correct comparison of zero values to avoid potential issues with negative
updated configuration file paths in JoobyMojo and Main classes to include " logback . dev . xml " to ensure compatibility with the latest configuration
added a new file ` JaasEventCheck . java ` that implements the ` ApplicationListener ` interface to handle Jaas authentication events to improve event
refactor view handling in QuickstepTransitionManager to use a list for animations to improve code readability and maintainability by encapsulating the
updated the comparison logic in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure correct handling of
changed the type of the ` fetchers ` variable from ` HashMap ` to ` Map ` to ensure the correct type of the ` fetchers `
[ hotfix ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : add timeout to wait for kvm ready command
updated JDBC _ TABLE and JDBC _ SCHEMA parameters in AbstractJDBCConnectorProvider . java to ensure the correct table name is used for database
corrected the spelling of " SQL Update " in multiple files to ensure consistency and correctness in the SQL syntax
replace synchronized block with computeIfAbsent for schemaTypeCache to improve thread safety and performance in caching schema types
refactor header addition logic in StaticServerHttpHeadersWriter to check for no headers before adding them to improve performance by avoiding unnecessary header additions when
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable the test due to availability only from CMU files
added a line to create a directory for the test directory to ensure the test directory is created before running tests
set chunked streaming mode to 1024MB in StarTreeJobUtils . java to improve data streaming performance during job execution
[ jsonschema ] add a syntax checker to check for different node type .
hbase - 25813 addendum fix checkstyle issue in hbase - protobuf - common
added a new ` Node ` class and a test method in ` BeanPopulatorTest ` to ensure that nested nested beans do not cause stack overflow exceptions
added IOException to the getRemoteName method signature in AccountingTransceiver . java to ensure proper handling of IO exceptions during the method execution
added handling for IllegalArgumentException in UserAccountManagerImpl and updated client creation methods in ClientFactoryImpl and ConnectivityServiceImpl to improve error handling and
refactor WebSocketConnection and ExplicitDemandTest classes to improve code organization and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration flexibility based on user preferences
updated imports and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance SSL connection handling by allowing configuration of hostname verification
added a new ` remove ` method to ` OHLCSeries ` and a corresponding test in ` OHLCSeriesTests ` to enhance functionality
updated invocation method from ` invoke ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService . java ` and modified map handling
replaced the existing joint removal logic with a new method call to destroy joints from the world to ensure proper cleanup of joints in the world
fix crash when search for a chat room without a filter string .
[ hotfix ] [ test ] add license header to sourcereadertestbase
added multiple null checks for documents in DocumentsStorageProvider . java to improve error handling for file not found scenarios
added new ` HookDefinition ` interface and ` JavaHookDefinition ` class , along with a corresponding test class ` JavaHookTest ` to enable hook
refactor deadlock handling logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by encapsulating
added a boolean parameter ` allowTs ` to the ` setExoOptions ` method and modified its usage in ` ProfileHelper ` to allow
added functionality to remove user identifiers from the identifier collection to ensure proper handling of user roles in the DMR decoder
added a constant ` INVISIBLE ` and modified the ` toString ` method in ` Color . java ` , and updated import statements in ` RailButton
updated null handling logic in CountAggregationFunction and added new test cases in NullHandlingIntegrationTest to ensure correct handling of null handling queries with null handling options
set the ` deep ` variable to - 1 in ` InternalTransaction . java ` to reset the ` deep ` variable to ` - 1 ` to
added XML escaping for the name in StreamInitiation . java to ensure proper handling of XML characters in the name
updated workDir initialization to use a configuration parameter instead of a hardcoded value to enhance flexibility by allowing dynamic configuration of the work directory
do n ' t set deprecated rule if it ' s a deprecated rule .
fix amd64directcallop to use codebuffer . position ( ) for jmp instruction .
updated TimeRange to use static final constants for minStamp and maxStamp and added condition checks for allTime to enhance code readability and maintainability
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future updates
refactor code to extract the metric emit logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by consolid
added support for VIDEO MIME type in DetailFragment and GalleryActivity to enhance image handling functionality and improve user experience
add a check for the world . isremote to allow fluids to be drain when the world be not remote .
added support for handling ` RuleAnalysisLegacyBuildRuleView ` in ` CsharpLibrary ` to ensure proper handling of ` DotnetLibraryProviderInfo
add pep service support for iq . get ( ) and iq . get ( ) .
added a null check for the runtime variable in the IntrinsificationPhase class to ensure that the intrinsicGraph is not null before proceeding
[ hotfix ] [ runtime ] check if active be not empty before call refreshactivework ( )
pdfbox - 4071 : do n ' t write object key if there be no eof marker
added constructors for LwjglAppletApplication and modified LwjglNativesLoader initialization in LwjglApplet .
refactor Docker configuration handling in EnvironmentAndSystemPropertyClientProviderStrategy to simplify string representation and improve null safety to enhance code readability and maintainability by
refactored the authentication process in LdapAuthenticationHandler to handle the password policy conditionally to improve code clarity and ensure proper handling of password policy configuration
refactor Int2ObjectCache . java for improved performance to enhance performance and maintainability of the code
added a new field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated its usage in ` LdapUtils ` to enable dynamic resolution
refactor Readable class to improve readability and maintainability to enhance code clarity and maintainability
use ` testsupport . with _ font ` in ` jsoupnonvisualregressiontest `
updated the icon resource for the share menu item in CaptureActivity . java to ensure the share menu uses the correct drawable resource for better user experience
updated Constants . java to use JVM _ MAJOR _ VERSION and modified JRE _ IS _ MINOR _ VERSION from System . getProperty
set is _ jdbc41 to false in case of a non - JDBC 41 compliant driver
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for the filteredSet variable in Enclosed . java to improve performance by using a more efficient list representation
added multiple @ Override annotations in CentralAuthenticationServiceImpl , AbstractCasProtocolValidationSpecification , and AbstractCasView classes to ensure proper method overriding and maintain
updated variable declarations for png , jpg , and gif in ChartProvider . java to improve code readability and maintain consistency
use file . getparent ( ) instead of file . getpath ( ) for working directory preference
simplified the return statement in ` JavacParser . java ` and added a new class ` ExtraSemiTest . java ` to improve code read
added support for ` AFTER ` and ` BEFORE ` keywords in the ` User ` class and implemented corresponding tests in ` UserRepositoryTests `
updated Test15FloatJNIArgs . java file to improve functionality and maintainability of the test cases
updated import statements and modified URLs in plugin . java to use placeholders instead of hardcoded values to enhance flexibility and maintainability of the
updated substring method in MockProcessContext and added a test for fake encryption and decryption in TestMockProcessContext to ensure correct substring handling and verify
[ java ] add a flag to prevent reentrant call during archive callback .
added a null check before merging the dependency in OpProcFactory to avoid potential NullPointerExceptions when the dependency is not found
added a timeout of 10000 milliseconds to multiple test methods in SslBytesServerTest . java to increase test timeouts for improved test reliability
[ java ] fix javadoc warning in peer class .
added new methods and interfaces to RealtimeIndexingCoordinator , RealtimeSegment , StreamProvider , and StreamProviderConfig classes to enhance functionality and improve
updated FailureWatcher to check for null before writing data to avoid potential NullPointerException when exporting data
refactor popup handling in RecyclerViewFastScroller to use a dedicated method for scroll thumb radius to improve code readability and maintainability by centralizing
updated the command message in BuckWSServerPortUtils . java and added a check for the Tool Window instantiation in BuckEventsConsumer . java to improve
added a conditional check for Windows before creating a JCheckBox in GeneralTab . java to ensure that the checkbox is only displayed on non - Windows platforms
updated import statements from javax . servlet to jakarta . servlet in HttpConfigurationAuthorityOverrideTest . java to align with the new package structure for
added cropping logic to handle vertical bar layout in QuickstepAppTransitionManagerImpl . java to improve the handling of app launch duration based on device
added full - screen exclusive mode functionality to XWindow and XWindowPeer classes to ensure consistent state management across different operating systems
added validation for playedDurationStr method and created UMSUtilsTest class with unit tests for duration strings to ensure correct handling of duration strings and validate
added methods to mark URIs as needed for MapWork and ReduceWork in DagUtils . java to improve the handling of credential - related
camel - 14136 : use entryset ( ) instead of keyset ( ) in camel - core
trim trailing spaces from thread names in SessionState . java to ensure thread names are not trimmed when setting the thread name
updated the message from " description " to " description " in GpsMainActivity . java to clarify that the message refers to a file instead of
refactor Job class to improve code organization to enhance maintainability and readability of the code
added a new abstract class ` Unused ` and a method ` testUnusedType ( ) ` to identify unused fields in the Main class to ensure
updated the key for " HBASE _ MASTER _ HOST " from " hbase _ master _ host " to " hbase _ master _ hosts
deleted the EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of ` GenericRecord ` instead of a single record to improve data handling efficiency by allowing multiple
updated MAX _ DELEGATE _ LOCK _ PERIOD checks and constants related to it to ensure proper handling of maximum delegate lock periods and
change networkrate from int to integer to avoid null pointer exception .
removed the default constructor and overridden the applySpecification method in CmcExchange class to streamline the code by eliminating unnecessary dependencies
updated GossipLocalNode to retrieve IP addresses from configuration instead of using ConfigObject to improve flexibility and correct configuration handling for seed nodes
enable tpc by default if tpc . enabled be not set
update swagger - ui version from 2.1 . 10 - 1 to 2.18 . 2 to ensure compatibility with the latest features and improvements in the application
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve code readability and maintainability
refactor key assignment logic in NamedObjectList . java to handle empty names more gracefully to improve readability and maintainability of the code by
replaced occurrences of ` cleanupEmptyDir ` with ` cleanupEmptyTableDir ` across multiple compaction classes to improve clarity and consistency in naming conventions
refactor AsyncCache and Cache classes to improve code organization and maintainability
added import for RCFileInputFormat and registered it with Kryo to enable the use of the RCFileInputFormat for serialization
added methods to retrieve Java type and category from a column in TypeMapperComponent to enhance type mapping functionality for columns in the application
added error handling for port parsing and invalid host header in Request . java and created a new test for invalid host headers in RequestTest . java to
refactor ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` instead of ` TimeZoneFinder ` to improve code
remove unused method and method in standardop . java
refactor SegmentCoreReaders and SegmentReader to use instance variables instead of local variables to improve code readability and maintainability by centralizing variable
check if there be a main thread profile before execute query
added validation error message for annotation definitions in a Buck rule to ensure that required annotations are not allowed in non - required rules
updated the NAME constant from " lowercaseLowerCase " to " lowercaseLowercase " across multiple filter factory classes to ensure consistency in naming conventions across the
refactor HSSFSheet and Sheet classes to improve code organization and maintainability
[ ds - 205 ] fix backward compatibility for discovery .
added a list to remove specific time zone names from the ids list to ensure proper handling of time zone identifiers
updated SurfaceSyncGroup instantiation to include a specific name " TaskBarController " to enhance clarity and maintainability of the sync group configuration
removed unnecessary casting of GridFSFile to BsonObjectId and simplified file deletion and download stream retrieval to simplify code and improve readability by using
added unit tests for querying column indices in ShadowDownloadManagerTest and implemented methods for total size and bytes so far in ShadowDownloadManager to ensure
modified character insertion logic in TextField . java to handle ENTER _ DESKTOP and ENTER _ ANDROID correctly to ensure proper formatting of
do n ' t show group node if it ' s the same a group node
added a method to determine if a block is terminal based on the last non - null variable node to improve code readability and maintainability by reducing
added hashCode methods to IntervalXYDelegate and XYSeriesCollection classes and improved equality checks in XYSeriesCollection to enhance hash code generation and ensure
make clientqueuedisruptiontest clean up after each test
refactor CloudWatchAppender and related tests to improve code readability and structure to enhance maintainability and clarity of the codebase
changed Gson serialization method from serializeSpecialDoubleValues to serializeSpecialFloatingPointValues to ensure correct serialization of special double and floating point values
added calls to ` HttpMethed . waitToProduceOneBlock ` and ` WalletTestZenToken007 . java ` to
added checks for non - empty subtitle tags before canonicalizing them and modified language tag handling in Locale . java and LanguageTag . java to improve robust
add config to allow kvm . ssh . to . agent to ssh into kvm agent
changed access modifiers of constructors and methods in SchedulerWhen . java and SchedulerWhen . java from public to package - private to enhance encaps
removed unnecessary import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline dependencies and improve code clarity
added a condition to check if the filter string does not contain " - " in addition to " - " to ensure that the filter does not contain
updated text in BrowserContentPane to use " Natural column order " instead of " natural order " and modified UISettings calculations in DataBrowser and Desktop
removed the use of Arrays . copyOf with a fixed size of 6 to optimize memory usage by eliminating unnecessary array copying
updated the write method to use htmlEncodeButNotSpace for remoteAddr to ensure that the remote address is properly encoded without spaces
updated topic check from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to align the topic with the correct
remove unnecessary synchronized block in fasthttpdateformat . java
added asynchronous file moving functionality using a thread pool and improved error handling for file operations to enhance performance and maintain thread management during file moving operations
added two overloaded trigger methods to the WrapTimer class with a default period parameter to provide a mechanism for triggering timers based on a specified period
added support for LOCAL _ DATE , SQL _ TIME , and SQL _ TIMESTAMP in TypeStringUtils and created corresponding test cases in TypeStringUtilsTest to
added a verbose option to the error logging in AbstractStatusReporter to enhance error reporting by allowing more detailed error reporting
added menu toggle functionality based on menu state in ClickStartHandler and ItemControls to ensure that the menu is only toggled when the menu is currently
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 686 : do n '
datamongo - 2366 - ensure error handler be only call once on cursorreadingtask # run ( )
pdfbox : log an error if the pdf be encrypt .
chore ( zk ) : do not shutdown the executor in case the client be close
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
refactor code to use a variable for the URI and update the deleteItem method to improve code readability and maintainability by standardizing the method
refactor Java6Assertions and Conditions classes for improved clarity to enhance code maintainability and readability
changed the return type of replaceOrderBulk method and its parameters from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > to
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and implement ` enterFunctionNode `
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to use a constant to retrieve long values to
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to test concurrent modification exceptions in Mockito to ensure proper handling of concurrent
add a method to notify offline and remove a resource from the session and remove it from the session .
replace calls to ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator ` and ` PartitionDesc ` classes to
removed unnecessary whitespace in the loadHandle method call in FunctionObjectCreator . java to improve code readability and maintainability
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerExceptions when extTypeCustomDes
set the mock server log level to WARN in Main . java to improve debugging by reducing log noise during test execution
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline dependencies and
updated scoreMap to use Map < String , Map < Float , Float > > instead of Map < Float , Float > and added termScoreMap
updated bitwise operations from ` & 0x8000000000000000L ` to ` & 0x8000000000000000L ` and added an ` eq ` method
remove setheadlinestyle from mainview , since it do n ' t work on linux .
added a boolean variable ` didSupportDarkText ` and modified the ` notifyChange ` method to include it to ensure that the notification logic reflects the
[ hotfix ] [ checkpoint ] improve checkpointrequestdecider logic for non force checkpoint
updated import statements and constants in Parallel . java to increase the maximum concurrent pool size and add a new constant for core pool size to improve performance and
replaced ` filter ` with ` anyMatch ` for filtering input providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to improve clarity
[ fix ] opencvimagefactorytest fail on window servercore container
http : / / issues . apache . org / jira / browse / amq - 4237 - add prefetch property to connectionfactory to allow
[ py4j ] fix exception throw by python proxy .
added a Repeatable annotation ` Issues ` and a corresponding annotation ` Issues ` to provide a list of issues related to issues
updated user properties key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified import
updated socket connection logic to use socksProxyHost if available to ensure compatibility with non - socks proxy environments for socket connections
[ hotfix ] [ runtime ] fix javadoc warning in slotstatus
removed unused import of ClassUtils from ReflectionUtils . java to streamline dependencies and improve code clarity
replace HashSet with LinkedHashSet in SslContextFactory . java to maintain the order of protocols and cipher suites
added a static resource variable ` systemResource ` and updated its usage in the ` Resources ` class to improve resource management and prevent potential null pointer exceptions
[ java ] use a constant for the plaintext segment size when create the plaintext buffer .
added a test to verify that an invalid circuit breaker URI throws an IllegalArgumentException to ensure proper handling of invalid fallback URIs in the application
added SSL connection factory for HTTP connections in AppPage . java to enhance security by allowing custom hostname verification for HTTP connections
set the size limit of the input stream to 0x7FFFFFFF and remove redundant call to resetBytesReadCounter to optimize memory usage
move preferaesc from standardprotectionpolicy to protectionpolicy
camel - opentelemetry : use a logger instead of standard out .
[ hotfix ] [ test ] remove flaky test testloadbalancerinstanceoperations
corrected the method name from ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to ensure consistency with the
added error handling for file creation in DiacriticTest . java to provide clearer feedback when a file path is not configured for file creation
hhh - 13497 fix support for oracle 11 in follow - on - locking test
refactor texture file handling and exception handling in TextureUnpacker . java to improve error handling and ensure file existence before processing
added locking mechanism for cluster write operations in AmbariManagementControllerImpl . java to ensure thread safety during service state updates during cluster operations
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the ResultSet does not close a non - closed statement to ensure proper resource management and prevent resource leaks during execution
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 464 - fix inputstream
added logic to remove pre - deleted databases from the schema map in ClusterSchemaManager to ensure that pre - deleted databases are removed from the
added a check for the presence of " chunkedWriter " in the pipeline before writing to ensure that the response is written only when it ' s
added a check to ensure mCurrentItem is not null before accessing its base item ID and implemented a delete confirmation dialog in FullDetailsFragment to
refactored RuleFinder to implement a new interface RuleBank and updated RuleFinder to use it to improve code organization and encapsulation by
added exception handling around the initialization and doFinal method call in JcaTlsCrypto . java to improve robustness by providing a clearer error
added two new Java files , TestMonomorphicObjectCall . java and Object . java , to implement a test for the Monomorphic object
replaced the ` removeMetaDataSource ` method with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop . java ` to
hbase - 25836 scanquerymatcher . shouldseek ( scan scan , store store ) do n ' t throw nullpointerexception
[ hotfix ] [ runtime ] refactor taskmanagerservicesconfiguration to use file [ ] instead of string [ ]
refactor AlterTimeSeriesStatement to accept a boolean parameter for altering view status and update related methods accordingly to improve clarity and functionality of alter time series
simonstewart : fix the condition . matchtext ( ) method to match whole string
added a try - catch block around the retrieval of the routing table builder to handle potential exceptions during the retrieval process
refactor parameter map insertion logic to handle null values more gracefully to improve robustness by ensuring only non - null values are added to the parameter
( chore ) camel - jms : convert password to char [ ] in camel - jms
api : do n ' t recursively search for domain child in listdomainchildren api
[ java ] remove counter . tosortedlistwithcounts ( ) and counter . isuniformdistribution ( ) from counter . clear ( ) .
updated the ` initialize ` method in ` BasicTumbleStepper ` to include warnings from the original ` BasicTumbleStatus ` to ensure warnings
[ gr - 26135 ] fix runtime error when use system . currentTimeMillis ( ) in a loop .
refactor code to store the JCTree object in a variable before printing to improve code readability and maintainability
added null check for indexToNode before creating a new Node instance in LRUDictionary . java to avoid potential null pointer exceptions and ensure proper cleanup
replaced ` read ( ) ` with ` receive ( ) ` in ` DatagramSocket . java ` and updated filtering logic in ` DatagramChannelImpl .
testquerydns : migrate testquerydns to junit 5 ( # 4523 )
added a new class ` NutchServerInfo ` with properties for start date , job , and running jobs to provide functionality for managing server - related
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter . java to streamline attribute handling and improve attribute management
add option ` ` timestamp ' ' to write timestamps in cassandra . yaml file .
refactor DSAParameterGenerator to use BigInteger . ONE instead of a static constant ONE for strength validation to improve code readability and maintainability by
refactor NumberUtils and Numbers classes to improve handling of integer and long values to enhance performance and maintainability of the code
updated the masking condition in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct handling of masked values and
added constraint violation checks for SQL exceptions in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of constraint violations in SQL exceptions
http : / / issues . apache . org / jira / browse / amq - 4237 - remove setzeroifnotfound from request
added a new method ` addTab ` and refactored the ` createTab ` and ` createTabImpl ` methods in ` Tabs `
replace array size ( ) method calls with zero - length arrays in multiple Java files to improve performance and readability by avoiding unnecessary array creation
[ hotfix ] [ runtime ] support testingtaskmanagerruntimeinfo in mockenvironment
refactor conditional statements in MavenVisitor . java for improved readability to enhance code clarity and maintainability by consolidating conditional logic
updated test cases in ZookeeperDataChangedListenerTest to use " MOCK _ NAME _ UPDATE " instead of " MOCK _ NAME2 "
added a new file FormatCheckingTest . java to test class format errors to ensure proper handling of illegal class names in Java processes
updated line number assignment in CodeGenerator . java to use a direct variable instead of a method call to improve code readability and maintainability by reducing
added a try - catch block around the method call to handle potential exceptions when retrieving configuration properties
added two overloaded createToggle methods to create RadioButton instances with specified text , image , and commands to enhance functionality for creating RadioButton instances with
updated the initialization of the LinkedHashMap in LRUCache and increased the CHUNK _ METADATA _ CACHE _ SIZE from 100 , 000 to 10000
( chore ) camel - spring - integration - bus - simple - channel : make the capacity variable public .
added null check for symbolicName before quoting it to avoid potential NullPointerExceptions when the symbolicName is null
[ fix ] external mode can now be load via ` ` -- external ' ' system property .
added error handling for shutdown hook addition and improved logging in IOManager . java and YARNSessionFIFOITCase . java to enhance robustness
replaced ` projectRoot ` with ` androidManifestPath ` in ` RobolectricTestRunner ` and related methods to improve clarity and functionality by using
add a test and fix a bug in abstractmessageproducinghandler . addnotpropagatedheaders ( ) .
refactor CompareMode class to improve comparison logic to enhance code readability and maintainability
added HasTests interface implementation to Arg class and added tests field to RustBinaryDescription and RustLibraryDescription to enhance testing capabilities for Rust
updated drawable resource names from ` ic _ recent _ image _ placeholder _ 120dp ` to ` ic _ recent _ image _ placeholder ` in `
refactor OnExitTest class for improved clarity to enhance maintainability and readability of the code
added onUserPreferenceChanged method to recreate the taskbar after user preference changes
refactor HeapDump to use reflection for reflection - based heap dumping based on the IBM VM version to improve flexibility and maintainability of heap
[ mybatis ] fix potential resource leak in mybatisproducer
simonstewart : update the ie driver to the new ie driver
removed JDK 5 for compatibility and updated trigger patterns in IteratorToFor . java to enhance compatibility with Java 5 and improve code readability
added a line to set the application state to UNAVAILABLE in JmxApplicationProvider . java to ensure the application is in an unusable state
updated position handling in ByteBuffer , Heap - X - Buffer , and StringCharBuffer to use position and limit variables to improve code readability and
removed the call to ` toUri ( ) . toUri ( ) . toString ( ) . split ( Path . SEPARATOR ) ` from the
modified array deletion logic and added setEmpty methods in multiple classes to ensure proper handling of empty states during array operations
changed enum visibility from package - private to public for Protocol and Transport in VirtualAuthenticatorOptions . java to allow external access to these enums
updated document addition logic in TestMultiPhraseQuery . java to use a new variable ` doc6 ` to improve code readability and maintainability by
payment : do n ' t allow offline payment when assign ticket to online payment
added a new thread ` _ onTimeoutThread ` and modified timeout handling logic in ` HttpChannelState . java ` to improve thread management and error
replaced printStackTrace ( ) with debug logging in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and QueuedThreadPool classes to improve logging
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
update consistency level for read command in StorageProxy to LOCAL _ QUORUM when consistencyForPaxos is LOCAL _ SERIAL to ensure
added support for the Home model in the HeosDiscoveryParticipant and updated HeosPlayerHandler to set the player ' s serial number if not provided
added a new ` Wait ` class and updated ` PlainSelect ` and ` SelectDeParser ` to utilize it to enhance SQL parsing capabilities by
refactor Neo4j to use AttributeController and AttributeTable for storing neo properties instead of hardcoded values to improve flexibility and maintainability by
added a null check for the server name in the SessionManager class to prevent potential NullPointerExceptions when the server name is null
nifi - 145 : deprecate rocksdbmetronome and move to controller - repository
updated the method call to retrieve the " IS _ GRANTABLE " boolean from a results object to ensure the correct retrieval of the " IS _
updated the condition to check if the URL starts with " javascript : " instead of using a hardcoded " / ! cn1command / "
[ cxf ] fix cxfmtomconsumertest on macos
added a conditional check for new column descriptor before modifying the column in LoadTestTool . java to ensure proper handling of column modifications based on
implemented the Disposable interface in the Texture class to enable the Texture class to be disposed to prevent memory leaks
added null checks for tldBundleLocation and updated WebBundleDeployerHelper to use WebBundleDeployerHelper to improve robustness by preventing potential
do n ' t use goquorum privacy if -- genesis - file be not specify .
change IOException to Throwable in HttpInput . java to improve error handling by using a more generic error type
added a condition to skip Thailand for the " JP " country in LocaleTest . java to address issues related to the change in era handling
updated ApiOperation references to use HostResponse . HostResponseWrapper instead of HostResponse . Wrapper in multiple service classes to improve code clarity and maintain consistency
added boost comparison and hash code conversion in FilteredQuery . java to ensure correct handling of boost values in query processing
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 2121 text editor : use scrollpane instead of listbox , add symbol table to text edit panel
added a new Java file TestCMSClassUnloadingDisabledHWM . java to test garbage collection behavior with CMS class unloading disabled to ensure
do n ' t spawn item toss event if there be no entity .
renamed ` KeyMappingPreparedStatementSetter ` to ` ItemPreparedStatementSetter ` and updated related method signatures to improve clarity and consistency in naming conventions
[ hotfix ] [ test ] fix compactionstest to use identityqueryfilter
added error handling for missing ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java
added SPEL operator to OperatorEnum and implemented SpELJudge class to support handling of SPEL expressions in the application
updated the assertion to check if the type is equal to BIGINT in LocalExecutionPlanner . java to ensure correct type validation for BIGINT
bugfix # 212121 , use java . awt . eventdispatchthread instead of sun . misc . service . providers ( )
fix checkstyle issue in net / ssl / conscrypt
updated variable types from ` ref ` to ` ref ` for ` start _ offset ` and ` length ` in ` ShadowArscAssetManager9
updated the version of the fullOptions list from 1.5 to 6 in SetupHid . java to ensure compatibility with the latest features and features
[ calcite - 1334 ] pushprojectintotablesourcescanrule should rewrite column metadata only if the table source support it
added imports and modified the way localized names are sorted in AboutActivity . java to improve code readability and maintainability by using a sorted reference
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a conditional check to conditionally commit shared preferences based on live streaming settings to ensure refresh behavior only occurs when streaming is disabled
added the exception cause to the MappingException message in AuditConfiguration . java to improve error handling by providing more context in the error message
fix flaky test fileconsumerpollstrategystoponrollbacktest
added generic type parameter ` < ? > ` to ` AbstractType ` and ` aliases ` in multiple files to improve type safety and flexibility in type
added support for transport functionality in GitClientApplication and updated RepositoryUrlPanel to check for supported transports to enhance functionality and ensure proper handling of repository
added new delegator names for various input consumer classes and implemented logging for input consumers to enhance clarity and maintainability of the input consumer implementation
updated version comparison logic in ChangeParentPom . java to handle null mavenMetadata and allowVersionDowngrades conditionally to improve robustness by
added a check for " Large Page Support " in TestLargePageUseForHeap . java to ensure that the test correctly handles " Disabled "
cloud _ usage db : skip event migration if usage db do n ' t exist
updated getTestParameters method to handle IOException and adjusted configuration URLs accordingly to ensure compatibility with different operating systems and improve URL handling
added a new file ` TestObjectStreamClass . java ` and modified ` ObjectStreamClass . java ` to require initialization to ensure proper serialization and deserialization of
removed redundant checks for null data center info in ZoneAwareDiscoveryFilter . java to simplify the code and improve readability
changed log level from error to warn in OpenTracingTracer . java to improve log granularity when tracing data fails
added a toString ( ) method to the Generator class to provide a readable string representation of the registered generators
refactor URI handling in ` mmm URI . java ` and add new test cases in ` ppp Test . java ` to improve URI parsing logic and
added a null and empty check for resources in ClusterControllerImpl . java and implemented a test for resource retrieval in ClusterControllerImplTest . java to
added error logging and error handling for API response extraction in AccepttoApiUtils . java to improve error handling and provide clearer feedback when API response
added a conditional check for Android version in VertexBufferObject . java to ensure compatibility with newer Android versions and ensure compatibility
refactor SybaseASADatabase class for improved readability to enhance maintainability and facilitate future updates
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated related methods to support it to enhance functionality by allowing the use
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide a way to retrieve the string distance from the SpellChecker
added flags for mutable pending intents and updated method calls to use FLAG _ IMMUTABLE and FLAG _ IMMUTABLE to improve notification handling for
refactor HiveFileFormatUtils to use a new appendReadColumnIDs method for setting and retrieving read column IDs to improve code readability and
replace getupnpAddress ( ) with getipv4MulticastAddress ( ) in UPNPHelper . java to ensure the correct multicast address is used
added multiple instances of ` DisplayTemporaryToast ( ) ` and implemented a toast message display in ` SavedExperiments . java ` to enhance
added version handling in ServiceModule and a corresponding unit test in ServiceModuleTest to ensure the correct version is set when resolving a service and its parent
added a new test class ` RawSerializationTest ` for Gson serialization tests to ensure correct serialization of collections and objects in JSON format
simonstewart : refactor the seleniumserver interface to implement sslcertificategenerator instead of the seleniumserver interface
refactor the loop to iterate over the list of replies instead of using an enhanced for - each loop to improve code readability and maintainability by
increase timeout duration in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource access tests to complete
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to validate the payload functionality of the N
refactor AclImpl class to improve code readability to enhance maintainability and facilitate future updates
added a new test method to verify different array sizes in EasyRandomTest to ensure that different array sizes are correctly compared with different sizes
cloudstack - 10246 : add a new constructor to rebootanswer and stopanswer to handle exception .
added a ThreadLocal to manage write operations in SslConnection to improve performance by avoiding unnecessary execution during write operations
refactor visibility check for the actor ' s parent in Actor . java to improve readability and maintainability of the code
added logging for rolling - update step failure in RollingUpdateOpFactory to improve error reporting for debugging purposes
[ hotfix ] [ table ] add nullable annotation to sinkprovider and dynamictablesinkprovider
added authentication failure handling for non - existent usernames in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve error
refactor AtMostXVerificationTest class for improved readability to enhance maintainability and clarity of the test code
updated default QTYPE references in QueryComponent and QParserPlugin to use QParserPlugin . NAME instead of OldLuceneQParserPlugin .
updated SimpleDateFormat instantiation in WeekDateTest . java to use Locale . US to ensure consistent date formatting across different locales
added the ` isInitialized ( ) ` method to ` ILanguageServer ` and implemented the ` @ Override ` annotation in ` JavaLanguageServer `
updated the parameter name from ` idToken ` to ` shouldHaveIdToken ` in the ` test _ fetch _ token _ from _ authorization _
added beginTransaction , setTransaction , and endTransaction methods to DatabaseAdapter , and modified GncXmlHandler to handle transaction handling and delete accounts to
replaced byte array handling with byte array copying in MimeType . java to improve performance and readability of the input stream
added multiple multiple ` @ Override ` annotations and modified exception message handling logic in ` MessagingTemplate . java ` to improve exception handling and clarity of the
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to check if a source file is an instance of ` J . CompilationUnit
added settings for maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy to enhance performance and reduce memory usage during tests
added unit tests and modified the handling of witness capsules in the Manager and ManagerTest classes to improve test coverage and ensure correct functionality of the witness
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by handling NoSuchElementException gracefully
flume : remove log4j - level argument from log . log method
added a reindex collection and updated authentication metrics in BasicAuthIntegrationTest . java , modified DaemonStream . java to utilize a separate executor service
replaced HashMap with LinkedHashMap for the nodes variable in DependencyUtil . java to maintain insertion order for better performance and performance
( chore ) camel - weld : add an error handler for reactive jersey
refactor header validation logic into a separate method ` validateHeader ` to improve code readability and maintainability by consolidating header validation logic
added support for additional Java property types in systemProperties to enhance compatibility with different Java versions
changed method parameter types from String to CharSequence in StringSubject . java and added new test cases in StringTest . java to improve type safety and ensure
add jvm . countertime ( ) and jvm . eventwriter ( ) intrinsics to checkgraalintrinsics
rename IntUtilsTest class to PrimUtilsTest to improve clarity and consistency in naming conventions
replaced the variable ` ds ` with ` ds2 ` in ` PersistenceManagerProvider . java ` to ensure the correct datasource is used when using a
refactor DeploymentOptions class to improve code readability to enhance maintainability and facilitate future updates
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable ` directly instead of ` Drawable . ConstantState ` to simplify the drawable handling
refactor code to use try - with - resources for better resource management to improve code readability and maintainability by using try - with - resources
added support for the COALESCE function in RexNodeConverter and registered it in SqlFunctionConverter to enhance functionality for handling coalesce functions
camel - 14246 : camel - hl7 - remove the hl7 validation test from camel - jbang
fix javassistproxyfactoryfactory to use the correct class loader
refactor DefaultDateTypeAdapter to remove DateFormat dependency and update constructor parameters to improve code clarity and ensure immutability of constructor parameters
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI handling and update query parsing logic to improve code readability and maintainability by consolidating logic
removed the ` filterOldEntries ( ) ` method from ` FeedRefreshUpdater . java ` to streamline the code by eliminating unused imports and
changed log level from fatal to warn in FSHLog . java to improve error handling by indicating a warning instead of fatal
nodemap : make nodemap iterable so that it do n ' t return null for null value .
updated import statements and modified predicate definition in DiscoveryClientRouteDefinitionLocator . java to improve clarity and consistency in predicate handling
added a check for non - empty fields before adding operations in MongoRecordReader . java and modified the return logic in RexToMongoTranslator .
add the admin jid to the admin list if it ' s not already set .
refactor term retrieval in IGainTermsQParserPlugin , SignificantTermsQParserPlugin , and TextLogisticRegressionQParserPlugin to use
updated the return statement in ConstantBeanHolder to include class name , identity hash code , and identity hash code to enhance clarity of the bean ' s
updated GroovyParserVisitor to check for a non - null primitive type before building a name to improve code readability and maintainability by simplifying the
remove unnecessary hashcode ( ) and hashcode ( ) from javalangsubstitutions .
fix flaky sedablockwhenfulltest # testblockwhenfull
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to provide package
updated the calculation of readLen in MessageUnpacker . java to ensure the correct buffer size is used to prevent potential index out of bounds errors
updated the import statement for Nullable from io . micrometer . common . lang . Nullable to io . micrometer . core . lang . Nullable to
updated SQL query in IconCache to include user serial in addition to the component to enhance functionality by allowing user identification in the icon database
camel - 14246 : camel - core - optimize to use getbackpressureforasyncsendsize instead of getbackpressureforasyncsendnum
added a boolean parameter ` isClassfileOnly ` to the ` addWhitelistedResource ` method and modified related logic in ` ClasspathElement `
add foreign key constraints for foreign keys in ` Upgrade420 . java ` and modify the database upgrade process to handle foreign keys correctly to ensure
removed the IJava2DRenderer interface implementation from Java2DRenderer . java and its usage in Java2DRenderer . java to simplify the
added onTearDown method to DefaultAudioSink to notify listeners when the audio sink is stopped to ensure proper handling of offload buffer empty during audio playback
refactor UpstreamCacheManager to use ScheduledThreadPoolExecutor for scheduling tasks with configurable delays to improve performance and maintainability of downstream task management
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated assertion message in Recording . java to include the expected output time to provide clearer context for the assertion failure scenario
updated FilestorePage and RootPage to use RequiresAdminRole annotation and improved authentication handling to enhance role - based access control and ensure proper admin permissions
ignore camelelasticsearchresttest until we fix it
make sure lifecycle . getdeclaredclass ( ) do not return null
updated button labels from " left " and " right " to " buy " and " sellWithFiat " in OfferBookChartView . java
camel - 14197 : restlet should check if a uri match the consumer path , not just the root one .
add block . createnextblockwithcoinbase ( address , coinbase ) method overload to allow block . createnextblockwithcoinbase (
removed the Serializable interface from BTreeMap and updated test methods in ConcurrentSkipListMapTest and JSR166Test to implement NotSerializableException to simplify
do n ' t log the cause of a startup rule if it ' s not null
reformatted conditional check for command mode in Main . java to improve readability and maintainability of the code
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter . java
deleted the PlainVerifier . java file to the signer interface is no longer needed for the current implementation
added a condition to close system windows when triggered from an alt tab to ensure proper resource management and prevent potential memory leaks
updated DialogFragmentIT and OCFileListBottomSheetDialog to use BottomSheetBehavior and improved dialog behavior handling to enhance user experience by ensuring
updated bodyCharset parsing to include " UTF - 8 " parameter to ensure consistent character encoding handling across different operating systems
added a call to the superclass ' s deinitialize method in TextField . java to ensure proper resource management and prevent memory leaks
updated LogFormatTest to use TestUtilities for serializing LogFormat objects to improve code readability and maintainability by utilizing a centralized utility
updated previous duration parsing from ` previousClause ( ) . DURATION ( ) ` to ` previousUntilLast ( ) ` in ` LogicalGenerator .
added handling for negative array sizes in JAXWSExceptionBase . java to ensure proper exception throwing for negative array sizes
test : migrate ctunresolvedimporttest to junit 5 ( # 4563 )
updated the join duration from 10 seconds to 60 seconds in T6567415 . java to allow for more time for thread execution to complete
[ hotfix ] [ test ] set default value of jobmanageroptions . scheduler . slotsharinggroup to region
added ` @ Implementation ( i18nSafe = false ) ` annotations and methods to ` ShadowActivity ` , ` ShadowAlertDialog ` , `
use poilogger . warn instead of commons - logging in poifsfilesystem
refactored alarm handling to use channel state instead of query parameters to improve code readability and maintainability by removing unnecessary URL parameters
add map . delete ( ) and localmapstats . getremoveoperationcount ( ) method to update localmapstats
updated HTTP status handling in Response . java to support multiple status codes to improve code clarity and maintainability by using a switch statement
added a method to find the Java compilation location in CheckResourceKeys . java to ensure proper handling of javac files during resource retrieval
add ` -- project - name ` for stablechannelsupportsplatforms ( ) to specify project name .
added a new test class DeprecatedStubbingTest for testing the stubbing functionality to ensure correct behavior of stubbing methods in deprecated scenarios
updated import statement from ` org . eclipse . jetty . server . DispatcherType ` to ` javax . servlet . DispatcherType ` to ensure compatibility with
added support for NML and NX in the ParticipalModifierGRAnnotation and test cases to enhance error handling for the NP -
added a configuration option to allow RSA key exchange in FipsUtils to conditionally include specific cipher suites based on system properties
( chore ) camel - perforce : close the bufferedreader after use
delete the access token if it exist in both pubsubapi and sdmapi
updated interpolator from AGGRESSIVE _ EASE to EMPHASIZED and modified open close animator to use EMPHASIZED
[ iotdb - 4074 ] add region location migrate procedure to confignode ( # 10265 )
added a new test file ` FileDialogLeakTest . java ` to verify the behavior of ` FileDialog ` during garbage collection to ensure that the FileDialog
moved TestOpenTableInCoprocessor from ` hbase ` to ` hbase . coprocessor ` and updated imports to reflect the new package structure and
svm : add support for the @ uninterruptible annotation .
[ hotfix ] [ protobuf ] remove unused ` splitserializerrowtypemethod ` call in ` pbcodegenrowdeserializer ` and ` pb
update condition to check if disi is not null instead of null to ensure correct handling of disi values when disi is not null
fix a race condition in mediasource . setnewsourceinfo ( ) and add a refresh handler to the fakemediasource
added JVM version handling and updated version comparison logic in Constants . java and Helper . java to ensure compatibility with Java 9 and improve compatibility checks for
updated FileReporter constructor to accept String and File types instead of NullPointerException to ensure proper type handling for null values in tests
updated the condition from ` isFalse ( ) ` to ` isTrue ( ) ` for end - to - end encryption keys to ensure that encryption keys
added menu item options to the action bar in DirectMessageConversation . java to enhance user experience by allowing users to navigate between home and back options
added GET _ USER request handling and updated PROTOCOL _ VERSION from 5 to 6 in RpcServlet and RpcUtils to enhance user management capabilities and improve
added an @ EnabledIfSystemProperty annotation to enable JDBC plugins based on the operating system architecture
replaced direct reference to ` startClass ` with ` originalStartClass ` in ` WhiteboxImpl . java ` to improve code clarity and maintainability by
add a local to the dex body so that a local can be reused with a different type .
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContext
add fixatelookandfeel ( ) method to the common app to make it work with swing ' s look and feel
updated regex in AppPage . java to replace occurrences of " V { $ version } " with " V { version } " to ensure compatibility with
refactor animation listener handling in LauncherAppTransitionManagerImpl to use local variables for alpha and translation to improve code readability and maintainability by
dump private key : use network version instead of base58
update editofferdatamodel to use newofferpayload instead of offerpayload
replaced the initialization of milestoneParameters with conditional logic based on whether the milestone is open or not to improve clarity and functionality by using appropriate parameters based on
updated the RFBattery dimensions from 640 to 80 in PipeItemsWood . java to adjust the battery configuration for better resource management
added a new method ` getClusterKey ` and updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRev
set the default value of downgradeAllowed to true in UpgradePack . java and add a new test method in UpgradePackTest . java to
updated XML document scanning to use NameType . ATTRIBUTENAME instead of NameType . ATTRIBUTE to ensure consistent handling of XML element names and improve
add an option to emulate system load by default
refactor app name comparator to use a dedicated method for consistency to improve code readability and maintainability by centralizing application name comparison logic
fatjarstarter : create parent directory if it do n ' t exist
reformatted the ` doTest ` method and improved assertion message formatting in ` TestSecretKeyCredentialHandler . java ` to enhance code readability and
camel - 14237 : camel - spring - boot - route - finder should use spring camelcontext . getapplicationcontext ( ) and getpackages
[ hotfix ] [ doc ] improve metric option description for identifier - based reporter
hbase - 25274 addendum fix testfulllogreconstruction fail due to configuration change
added DatagramSocketOptions constructor and override methods for buffer size and traffic class to enhance flexibility in configuration of DatagramSocket options
fix incorrect ` ` server shut down ' ' message
alexeibarantsev : remove deprecate interface that be no longer use
updated error messages in VersionInfo . java to clarify that the field must be either indexed or have docValues to improve clarity in error reporting for better
replaced ` equalityPredicateColumns ` with ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to streamline predicate handling
removed unnecessary whitespace in HandshakeHandler . java to improve code readability and maintain consistency
corrected formatting of closing braces in Navigator . java to improve code readability and maintain consistency in formatting
updated access modifiers of constants in RecordReaderFactory . java and added a new test class RecordReaderFactoryTest . java to improve encapsulation
added comparison logic for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator and corresponding unit
refactor group by expression validation in CalciteSqlParser . java to improve clarity and efficiency to enhance code readability and maintainability by consol
added atomic buffer reference tracking in MappedByteBuffer and FileChannelLinesSpliterator to improve resource management and prevent memory leaks
refactor code to use a local variable for the validator object instead of direct calls to getValidator ( ) to improve code readability and maintainability
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and updated ` testCircuitBreaker ` to use ` ScheduledFuture `
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent handling
rename configuration property ` ` webui . submit . upload . ajax ' ' to ` ` webui . submit . upload . progressbar ' '
updated the display name from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to allow retrieval strategy for
fix concurrency issue in entitygraph . addexportedcount and getexportedcount
updated import statement for requireNonNegative from IntRangeUtil1 . requireNonNegative to IntRangeUtil . requireNonNegative to ensure compatibility with the
updated HttpParser to handle invalid characters correctly and added unit tests for encoded headers to improve error handling and ensure correct parsing of encoded HTTP headers
updated the activity view from ` trends _ activity ` to ` configuration _ activity ` to ensure the correct layout is used for the configuration activity
updated log message format in SLWTTextListing . java to include position information to improve clarity of output for better debugging and debugging
refactor ForceLeaderTest to use randomized testing for log replicas and add a new ForceLeaderWithTlogReplicasTest class to improve
refactor Thread class to improve thread management to enhance code readability and maintainability
refactor the RECOGNIZED _ TEMPLATE _ FILE _ FILE _ SUFFIXES set to include multiple HTML , CSS , and text
camel - 14237 : camel - cxf - fix the issue that camel - cxf do n ' t support xml namespaces
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency in formatting
updated ToChar . java to format date values using String . format and added new test cases in TestFunctions . java to ensure consistent formatting of date
added support for valid transaction strings and write IDs in GenericUDTFGetSplits . java to enhance configuration flexibility for transaction management
replaced ArrayList initialization with empty lists for columnNames and columnTypes and columnTypes to improve code readability and maintainability by using an empty list
add hasnodata ( ) and hasnoimage ( ) method to picture . java , and add hasnodata ( ) to picture . java
refactor SSTDeserializer class structure and method signatures for improved readability to enhance code maintainability and ensure proper handling of continuation records
updated grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant for the default grid column to improve code readability and maintainability
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java to provide clearer context for differences in line breaks and line -
added a boolean field ` waitingForKeys ` to ` DecoderInputBuffer ` and modified conditions in ` ClippingMediaPeriod ` and ` SampleQueue
updated API endpoint paths in OkexV3 . java from " / api / v3 / accounts / " to " / margin / v3
refactor conditional checks in LineUtilitiesTests to use a brace for clarity to improve readability and maintainability of the code
added error logging for old array syntax in JavacParser and created new classes VarargsAndOldArraySyntax and T6569633 to improve
log a warning if the defaultdrmsession be access on wrong thread .
added METHOD context handling in VariableContext and corresponding test cases in TestVariableContext to enhance functionality to support method calls and improve test coverage for various method
added tests for invalid compilation unit and profile string JSON in ExperimentParserTest . java to ensure proper error handling for invalid compilation unit and profile string
update buffer limit calculation to use the current position instead of the buffer ' s limit to ensure accurate buffer position handling
added HttpClientProperties parameter to NettyRoutingFilter and related classes to allow customizable response timeouts for HTTP client requests
replaced ` getNativeLinkTargetInput ` method with ` getNativeLinkTargetInput ` and marked related methods in ` NativeLinkTargetGroup ` to
added unit test base on user forum issue
added handling for RexFieldAccess in ASTConverter and refactored conversion logic in RexNodeConverter to enhance field access functionality and improve code
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
add ` ` noproxy ' ' predicate support to webclientrequestbuilderimpl
modified the handling of certificate chains in PKCS12KeyStore . java and updated the ALIAS constant in StoreSecretKeyTest . java to improve
added reflection access checks and refactored methods in NativeObject , ReflectionCheckLinker , and CallSiteDescriptor to improve security and access control checks
removed the public access modifier from the constructors of the CollisionMap class to enhance encapsulation by restricting access to constructor visibility
marked the method ` getRawInputFromTransactionInput ` as deprecated and added a null check warning to indicate that the method should no longer be used and
refactored log level handling from if - else statements to switch - case statements in ConfigurationValueConverter . java and Main . java to improve code
cloudstack - 2576 : fix npe in createuser ( ) when createuser ( ) return null
added support for PASS _ RECORD _ SID in OldExcelExtractor and implemented a test for EncryptedDocumentException in TestOldExcelExtractor
add -- add - image - exports = all - unnamed for py micronaut benchmark
removed unnecessary condition for setting the image visibility in TimeLineCursorAdapter . java to improve code readability and maintainability
increased sleep duration from 10ms to 50ms in BatchingStateChangeUploadSchedulerTest . java to allow more time for uploads to complete before timeout
modified directory creation and deletion logic in ShadowContext and added new test cases in ContextTest to improve directory management and ensure proper test coverage for directory naming
replaced custom ExceptionFactoryImpl implementations with specific class loading for AssertionFailedError and ClassNotFoundException to improve compatibility with the newer JUnit framework framework
updated the WAIT _ TIME _ MS constant from 10 , 000 ms to 60 , 000 ms in LauncherInstrumentation . java
updated ConnectOAuth2RequestFactory to include an " aud " extension and modified JWTClaimsSet construction in ConnectTokenEnhancer to allow
remove default value for breakonfirsterror in camel - kafka
added a new constant ` selectableItemBackground ` with a value of ` 0x10a13 ` in ` R . java ` to provide
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and implement
updated event type assignment in TxnSetOperation . java to ensure correct event type is set when the record is null
add the resumablerandomaccesshandler interface so that it can be use in the future .
updated the class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " to reflect the correct class name
added functionality to manage format records in HSSFDataFormat . java and updated assertions in TestWorkbook . java to improve format handling and ensure correct
[ hotfix ] mark multiple methods in flinkkafkaproducer a deprecated
updated the condition for calculating compressed chunk length in CompressedInputStream . java to ensure that the compressed length does not exceed the maximum compressed length limit for
added idempotent repository that can be use in camel - spring - redis
fix containerrepair not use metadata here .
added support for local repository in legacy repo manager
[ hotfix ] [ runtime ] log error when taskmanager can not be start
added configuration options for deploying files in AbstractArtifactResolutionException to enhance the flexibility of artifact resolution options for better user experience
updated the method to retrieve the internal temporal path using ` getInternalTemporalPath ` instead of ` getTemporalPath ` to ensure
added a method ` findByEntries ` to ` FeedEntryStatusDAO ` for fetching feed entries by their IDs to enhance the functionality of fetch
added thread execution handling for starting and ending the vertx thread in ContextImpl . java and updated test cases in BlockedThreadCheckerTest . java to
updated FormatterConverter methods to accept a String formatter string parameter and added a null check for the argument to ensure proper handling of null arguments and improve error
added SDK version checks before parsing vCards in LoadContactsTask . java to ensure compatibility with devices running Android O and above
removed setter methods for remote address and hostname in Credentials . java to streamline code and improve readability by directly assigning the values
added null check for realClass and shadowClass in Robolectric . java to ensure that the shadow class is annotated with @ Implements to prevent
added a check for tlsMutualAuthenticationCertificateChain in NettySslContextFactory and ExampleNettySslContextFactory to ensure tlsMutualAuthentication
added a test to verify that requesting plain HTTP endpoint over HTTPS throws SSLException to ensure proper handling of SSL exceptions during HTTP requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to improve encapsulation and maintainability of the code
removed unnecessary ' else ' operator in PageChangeListener . java and added imports for ArrayList in FrameRenderer . java to improve code readability and maintain
corrected a typo in the warning message from " address / subject / text " to " SMS " to improve clarity and accuracy of the warning
# 118 - add draftqueryoptimise ( ) method to beandescriptor and beandescriptordrafthelp
added exception handling for resource temporarily unavailable issues in MultipartBody . java to improve robustness by handling IO exceptions more gracefully
reformatted array declarations in ExecutableFactory . java and ZipFolder . java for consistency to improve code readability and maintainability
updated multiple Java files related to EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters to improve code organization and maintainability
fix attach file action to use the current working directory
added LoadOptionsBuilder and SchemaInfoLevelBuilder to SchemaCrawlerOptionsBuilder in AccessTest . java to enhance schema loading capabilities during testing
updated package structure and refactored test methods in TestLoadLegacyLibrary . java to improve organization and clarity of test cases
replace exception throwing with returning null for unknown operation names to simplify error handling by returning null instead of throwing an exception
added methods to set the name , enabled , and expanded properties of the prototype to ensure proper configuration of the project properties
refactor connection creation to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
refactor DataStreamJob class to improve code readability to enhance maintainability and facilitate future updates
added imports for ErrnoException and OsConstants , and modified error handling in TestContentProvider . java to improve error handling and ensure proper resource
camel - 14237 : camel - cxf - use classhelper . getrealclass ( ) for serviceclass to avoid classcastexception .
added a condition to return true if the protocol is " h2 - 14 " and updated the return logic for black list protocol checks to ensure correct
refactor LambdaToMethod to use parameter symbols instead of method references and update conditional checks in ClassFileVisitor to improve code clarity and ensure correct handling of
chore ( core ) : use what < wpn > instead of what < wpn > for sbarq
increased the timeout duration for file copying in DL4JInceptionV3Net from 5000 to 60000 milliseconds to allow more time for URL
added a line to set the Slop for the mpq object in QueryParser . java to ensure proper handling of phrase slop in the query
increase sleep duration in LongPressMouseListenerTest . java from 10 milliseconds to 100 milliseconds to improve responsiveness in test execution
updated the default port from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to ensure the
[ screengrabber ] add parallel scheduling for loadgame , savescreenscreenrabber , and savelastgame
added a condition to check if edit options are available before setting the visibility of the compound view to ensure that the compound view reflects the availability of edit
updated the progress calculation in DepthController . java to ensure that the progress value does not exceed a defined threshold
[ java ] remove unused packetreceived method from session .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve error logging
added null checks for the service before accessing it in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction classes
[ pantheon ] add ` ` hidden ' ' flag to enable / disable account level permission
do n ' t instrument coroutinesroom . coroutinesroom . coroutinesroom . coroutinesroom . completablefuturesroom ( #
added synchronized modifier to the isSupported method in NegotiateAuthentication . java to ensure thread safety when accessing the context class loader
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unused method
camel - 14156 : camel - core - fixed camel - core to set the number of concurrent consumer to 1 in reply manager .
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added conditional logic to handle tagged elements in PdfDocument to ensure proper text processing when the document is tagged
log4j2 - 132 add a test case for patternselector .
simonstewart : use a selenium server to run the selenium test in the hta browser
renamed the ` thank ` method to ` MwThankPostResponse ` and created a new class ` MwThankPostResponse ` to
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` and ` SslConnection ` to utilize it to enhance socket handling capabilities
refactored the initialization of RevokingStore and adjusted the max size setting logic in Manager . java to improve code readability and maintainability by
added new test methods for implicit join of calls and timestamps in HQLTest . java to ensure correctness of the HQL collection join functionality
replaced direct comparison of expected and actual strings with line breaks in NonVisualRegressionTest . java to ensure consistent line endings in comparisons
replaced direct reference counting with a collection of files to commit in IndexWriter . java and added a new configuration option in MockDirectoryWrapper . java to
added the @ Final annotation to several methods in BaseError . java to enforce immutability and enforce immutability of methods
added validation for consume user resource percentage in ConsumeUserResourcePercentActuator . java to ensure that the contract ' s percent is within valid
added a boolean check for showLegacyLogin in AuthenticatorActivity to ensure the old login is shown based on a resource setting
renamed the class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
removed unnecessary else clause from setResponsePage method in EditTeamPage . java to streamline code for better readability and maintainability
updated debug log message to include exception information when plugin credentials initialization fails
added a try - finally block around the shutdown of the server socket channel to ensure proper resource management and prevent potential memory leaks
refactor Rocket class to improve code readability to enhance maintainability and facilitate future modifications
refactor dynamic partition creation logic into a separate method ` createDynPartSpec ` to improve code readability and maintainability by reducing duplication
refactor round - half - up factor handling in Kernel . java and StringTemplate . java to improve code readability and maintainability by centralizing
added a ` visitDirectory ` method to ` JarDirectoryStep ` and a corresponding test in ` DirectoryTraversalTest ` to enhance directory traversal functionality and
added a new file JWKSetEditor . java that implements a custom property editor for handling JWK sets to facilitate the use of JWKSet
refactored finish method in BlockTreeTermsWriter and BlockTreeTermsWriter to use PendingTerm instances instead of separate minTerm and maxTerm
add boundary check for toespressonode and jfrlistener . tracethrowable
changed the default value of fetcher . threads . per . host . by . ip from true to false to disable the fetcher thread by default
simplified the condition for setting timeToLiveOfQuery in StatementUtil . java to improve readability and maintainability of the code
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and modified genPath accordingly to include target configuration hashing based on configuration
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
cloudstack - 2426 : delay the network usage stats update task when the initial delay be negative .
replaced ` allAppsFade ` interpolator with ` FINAL _ FRAME ` interpolator across multiple classes to improve code readability and maintainability by
updated swipe length calculation in navBar visible bounds to account for display density to ensure accurate swipe positioning based on user display density
added a new module - info . java file for the Jetty HTTP3 server to organize module dependencies and improve code organization
updated JsonType and JsonTest to use constants for JSON variables and replaced hardcoded values with constants to improve code readability and maintainability by
removed unnecessary null check for the context variable in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ runtime ] use get ( ) instead of getoptional ( ) for default checkpointing
refactor InnerClassesTable to use ElementKind instead of TypeElement for handling inner class references and add a new test for finding inner class references in package
updated command string concatenation in TimestampCheck . java to include space before the VM options to ensure proper formatting of VM options for better readability
refactor code to use Java Streams instead of Google Guava ' s FluentIterable for file listing to improve code readability and maintainability by
add option to register url to registry ( default to true )
add onsettingschanged ( ) method to otrmanager and call endallsessions ( ) when otr mode be disabled .
added properties for outline size , transparency , and transparency in NodeLabelRenderer and updated renderProcessing method to accept these properties to enhance flexibility in label rendering
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the return value of the method from false to true in Win32FontManager . java to correct the behavior of the method
added null check for the TreeVisitor object before visiting it and set the cursor to avoid potential NullPointerExceptions when v is null
do n ' t use the error handling policy for jdt compilation when there be no classpath
added contentAlignmentPoint and textAnchor properties with their respective getters and setters in LabelBlock . java to enable customizable alignment coordinates for label
refactor mmm and ppp classes to improve code organization to enhance maintainability and readability of the code
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
refactor network interface handling to check for null before accessing isLoopback to improve null safety and prevent potential NullPointerExceptions
added a locale parameter to the fromRfc1123DateString method and updated related calls to use it to ensure consistent date formatting across different locales
fix flaky test : download miss file with extension .
nifi - 13636 : add property to control whether to output no hit flowfiles for elasticsearch query
cloudstack - 5292 : remove aggregationratio from updatequota ( ) method , use s _ hours _ month instead
refactor switch case statements in Election . java for consistency and clarity to improve code readability and maintainability
fix potential resource leak in readfilesp and streamfilesp
refactor widget handling logic in PageChangeListener . java to improve readability and maintainability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , ` FileSharingRecord ` , and ` H
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential Throwables to improve error handling and logging for session
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the error message in the updateStatus method from " reachable = false " to " reachable " to clarify that the bridge is not reachable to improve
added fmlclienthandler . isloading ( ) method to check if the fmlclienthandler be loading .
use ` ` unit . thousands ' ' instead of ` ` mil ' ' for unit string in ui and blockinventoryfragment
refactor MessagePackParser to use a switch statement for handling BYTES and STRING types to improve error handling and provide clearer test cases for string
added parameterized test for query parsing with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to improve test coverage and
added tests for serialization and deserialization of a nested map in MapTest . java to ensure correct JSON representation and deserialization of nested map elements
fix issue with geometryutils . rotate ( ) when offset be less than or equal to .
refactor FileDisplayActivity to use a new SortingOrderDialogFragment interface and implement sorting order listener to enhance code readability and maintainability by central
added error handling for empty test plans in StandardJMeterEngine . java to ensure proper exit with an error when the TestPlan is not found
updated method names to use " getDbmsName " and " getDbmsName " instead of " dbmsName " and " dbms
added null checks for ` argIdent ` before accessing it to prevent potential ` NullPointerException ` when ` argIdent ` is null
updated default protocol setting from " SSL - HTTP / 1.1 " to the configured protocol from a specific SSL configuration to ensure the correct protocol is used for
set default value of displayVolume to true in VolumeVO . java to enable volume display functionality by default
modified the ` version ` method to accept a boolean parameter and updated related logic in ` JavahTask . java ` , and created a new `
refactor logic in ChangeLogParameters to improve clarity and structure to enhance readability and maintainability of the code
change log level from warn to debug in JtaTransactionManager . java to reduce log verbosity and improve error handling during transaction execution
hhh - 14397 skip setoperationtest on oracledialect cause exception when format sql string
removed redundant calls to startHandshake and setSoTimeout in connection . java to streamline socket timeout handling and improve code clarity
updated the calculation of ` size ` in multiple fragments to account for ` MainActivity . isPopup ` to ensure the drawer correctly reflects the state of
change the default value of CHA from false to true in EspressoOptions . java and change class visibility from package - private to final
add some debug log for the thread context class loader in activemqresourceadapter
refactor JodaTimeRangeRandomizersTest to use AssertJ ' s assertThat for assertions to improve test readability and maintainability by simplifying
replaced hardcoded xsd resources with a conditional redirection method for different servlet versions to enhance flexibility and maintain compatibility with different servlet versions
fix readiness . isready ( ) to return true if the node be ready .
replaced occurrences of liveEndpoints with handler . endpoints in StorageProxy . java to ensure consistent usage of the handler ' s endpoints
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions when processing creation statements
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version of RPC functionality
added a security manager check before checking package access in ObjectStreamClass and ObjectStreamField classes to ensure proper security checks are performed only when the security manager is
removed unused imports and changed access modifier of UGSCommandCount in XLCDCommunicator . java to private to improve encapsulation
refactor DefaultMetricsTagProvider to use HashMap instead of ImmutableMap and change method visibility from private to protected to improve code readability and maintainability by
added ` MockBrowserTest . class ` to the test suite in ` ClientDriverSuite . java ` to ensure proper testing of the ` MockBrowser
set the default log level from OFF to ERROR in the opt2 configuration to improve user experience by indicating an error level instead of off
made several fields final in IconNormalizer . java to enforce immutability and improve code readability
added a boolean flag ` firstCallPrepareDo ` to the ` PrepareInterceptor ` class and modified the invocation logic based on its value to enable conditional
refactor ` showWorkspace ` and ` hideAppsCustomizeHelper ` methods to use ` Workspace . State ` instead of ` State ` to
added @ Singleton annotation to AuthWithStoreFeature and removed asEagerSingleton ( ) method for binding to simplify dependency injection and improve code readability
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method and modified the conditional check in ` incomingAssociations
api : remove pod from storage when pod be delete
updated the relative URL formatting and added command instructions for asynchronous profiling in ProfileServlet . java to enhance user experience by providing instructions on the asynchronous profiler
swagger : fix model resolver to apply required flag to ref field
updated class names from ` CasCoreConfiguration ` to ` CasConfigurationAutoConfiguration ` across multiple files to improve clarity and consistency in naming convention
refactor FeatureFlags class to improve code readability to enhance maintainability and facilitate future updates
updated UUID generation and unique identifier formatting in ConfigStore . java and added a new test for large hue IDs in CommonSetup . java to improve
added a check to set the image drawable in both TimeLineCursorAdapter and TimelineArrayAdapter to ensure that the image drawable is set correctly when
updated compaction configuration descriptions in HiveConf . java to clarify compaction behavior based on insert - only configuration settings
added a null check for the storage path in the condition of mWaitingToSend to ensure that the storage path is not null before proceeding
refactor resize threshold checks to use a dedicated method for clarity to improve code readability and maintainability by centralizing resize validation logic
refactor LDAPConnectionService to improve connection handling to enhance maintainability and readability of the code
deprecated the @ XmlAttribute annotation in AggregateDefinition . java to indicate that the attribute should no longer be required and should no longer be used
added debug tracing logs in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to improve traceability of input event handling and overview
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated assertions in TestMultiSearcher to compare lengths of hits2 and hits3 to ensure accurate validation of the lengths of the hits array
added a new class LucenePackage in the org . apache . lucene package to provide a utility for retrieving the Lucene package structure
corrected the calculation of sizeInBytes in RAMDirectory . java to correctly account for negative size values
added estimation to statsrulesprocfactory . estimate ( ) , and made field final in genericudfevaluator .
added a null check for the drawer toggle before executing animations to prevent potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method parameter to suppress warnings related to unused subject parameters
added logic to handle the use of ` scanModules ` based on ` scanSpec . overrideClasspath ` and ` scanSpec . enableSystemJars
[ msbib ] fix msbib export format for corporate msbib
added a method to cancel core recovery based on ZooKeeper awareness to ensure proper cleanup of core states during shutdown
replaced the use of ` System . currentTimeMillis ( ) ` with ` currentTimeMillis ( ) ` and added a new method ` currentTimeMillis ( )
removed debug print statements and simplified condition checks in RepoEditView . java to improve code readability and maintainability by simplifying condition checks
[ hotfix ] [ runtime ] fix javadoc warning in pgproperty
added security - related fields and updated the SecurityEvaluationContextExtension to configure trust resolver , role hierarchy , and default role prefix to enhance security configurations
added a check to set exponentSize to primeSize if it is zero to ensure the exponentSize is correctly set based on primeSize
replaced direct calls to ` File . getSavePath ( ) ` with ` FileStorageUtils . getUsableSpace ( mAccount . name
replace delegate . combine with a loop for accumulating values in DistinctSqlAggregation . java and add a test for the combine method in Distinct
added a test method to verify the execution of post login activities for a user on successful authentication to ensure that the user service correctly executes login activities
make extractorspanishstrippedverb non - static to be use by extractor . getparenthesizedarg ( )
lucene - 11486 : remove unnecessary code in chararrayset . contains ( charsequence )
[ java ] use c . track _ type _ audio and c . track _ type _ video instead of mimetypes . isaudio and isvideo
refactor JsBundleGenrule and related tests to use AndroidPackageable instead of JsBundleAndroid to improve code clarity and maintainability by
added UTF - 8 character encoding support in the PinotClientRequestServlet and StringDictionary classes to ensure proper handling of UTF - 8 encoded strings and
updated the case name from " Logical Analyzer " to " Logic Analyzer " and replaced integer array representations with tile icons to enhance clarity
added instanceClassName and instanceClass variables and modified instantiation logic in AbstractVector . java to ensure proper instantiation of Vector instances based on class name and class
removed the call to syncMetaLeader ( ) in CMManager . java to streamline the synchronization process for leader synchronization
add ` ` no response ' ' and ` ` no response ' ' to contribution question
added TestLoggingExtension import and annotation to DiagramRendererTest to enable logging functionality for the DiagramRenderer tests
updated ` findProperty ` methods to accept a boolean parameter for camel case mapping to enhance property mapping functionality by allowing camel case mapping functionality
added support for the VIOMI Internet Electric water heater ( VIOMI _ WATERHEATER _ E1 ) in Mi
replaced direct calls to ` getSslSessionData ( ) ` with a local variable ` sslSessionData ` to improve code readability and maintainability
add a new file ` CreateNewSpreadsheet . java ` to demonstrate the creation of a new spreadsheet in a workbook using Apache POI
replaced ` Duration ` with ` long ` for ` ttl ` and ` timeToLive ` in ` CacheProperties ` , ` RedisCacheConfiguration `
replaced CONTENT _ URI with CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper and LauncherModel to ensure notifications are not sent to
updated the version of the wiremock library from 2.14 . 0 to 2.17 . 2 in SwaggerResolveTest . java to ensure compatibility with
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager . java ` to ensure thread
added a condition to check if the character is ' < ' before processing to ensure proper handling of specific characters in the code
removed String . format call from the return statement in Workspace . java to simplify the code and improve readability
added import statement for Scope and sent a message indicating no validation errors to improve user experience by providing feedback when no validation errors are found
updated import statements and refactored web resource configuration logic in IntegrationTestContextLoader . java to improve code clarity and ensure proper context handling for web
updated method calls from ` getResponderAt ` to ` getComponentAt ` in multiple classes to improve clarity and functionality of component retrieval
corrected formatting of a conditional statement in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated ` StatsService ` , ` DefaultStatsService ` , and ` DefaultStatsService ` to use
replace occurrences of ` pattern ` with ` $ \ n1 ` in ` CellContentConverter . java ` to ensure proper handling of newline characters
updated regex patterns and print statements in SeleneseTestCase . java for consistency and clarity to enhance readability and maintainability of the test output
mondrian : fix typo find by codespell on fossies . org
added stack trace printing and modified launcher path checks in CustomLauncherTest . java and ProcessTools . java to enhance debugging capabilities and ensure correct launcher path
[ tumblr ] remove tumblr ripper test for embedded image
added a condition to check if the symbol has a slot before converting storeType to avoid unnecessary conversions when the symbol has a slot for the specified
[ java ] initialize the extractor wrapper only when the next load position be 0 .
added UTF - 8 encoding support and updated IndexWriter configuration in BaseLockFactoryTestCase . java to ensure consistent output format for better readability and maintain
tika - 132 - add support for ` ` dynamic ' ' load error handle config in tikaconfig . xml
updated import statements and refactored code formatting in DocLint . java and DocLintTester . java to improve code readability and maintainability by
added a new constant IMPORT _ CMD and updated its usage in DataImportHandler and DataImporter classes to support additional command handling for data import
added a new test method to verify that inner classes are not modified if ignoreDefinition is true to ensure that inner classes are not modified if the ignore
removed unused import of android . util . Log from JettyService . java to clean up the code and improve maintainability
modified the ` checkItemPlacement ` method to accept an additional ` workspaceScreens ` parameter and updated related logic to enhance functionality by allowing users to
simonstewart : add / quitquitquitquit / killswitchservlet to kill the jvm
refactor LLRealtimeSegmentDataManager to use a list for transformed rows instead of a single object to improve code readability and maintainability
added a check to skip processing for " Teredo " display names in Windows systems to ensure only relevant UI elements are processed on Windows
add contact dialog : if the protocol provider be not register , show a warning instead .
replaced manual bean registration with a bean component registration for the user details service factory to improve code clarity and maintainability by using a more descriptive
updated the drawBitmap method call to use null parameters instead of left and top coordinates to simplify the drawing process by removing unnecessary parameters
fix meitrack and totem protocol ( fix typo )
changed access modifiers of ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager `
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
[ flink - 20527 ] [ test ] improve exception handling in clientmapstoretest
add an option to keep empty sentence in maxent - pipeline
refactor createArtifactSubdirectory method to return a boolean indicating success or failure to improve error handling and provide clearer feedback on directory creation failures
removed the ` LazyTreeLoader ` class and updated return statements in ` JavaLanguageServer ` to use ` JavaCompilerService . NO _ COMPILER
[ java ] fix npe when resource return null answer .
changed the ` sendEmail ` method to throw ` MessagingException ` and added a ` throws MessagingException ` declaration to improve error handling and provide clear
fix npe on item obsidian pipe . close # 261
updated DateFormatEvaluator , FileListEntityProcessor , TestVariableResolver , and TestVariableResolver to accept a locale parameter for parsing math expressions to ensure consistent
added a boolean flag ` includeDecals ` to control whether to include decals in storage options to enhance user experience by allowing users to
updated generateDocumentation method to include null parameters in Liquibase . java and added @ SuppressWarnings annotation to getImplementedDatabases method in Li
added performance logging functionality and improved test assertions in HiveProtoLoggingHook and TestHiveProtoLoggingHook to enhance performance tracking and ensure accurate test coverage
corrected a typo in the log message from " Starting with Solr 5 . 0 " to " Starting with Solr 5 . 0 " to ensure
updated the version check in ` ignoreRecordAttribute . java ` to use the latest ` MAJOR _ VERSION ` to ensure compatibility with the latest
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP password authentication to ensure proper handling of user - specific attributes in LDAP operations
replaced ` OrcInputFormat ` with ` BasicStatsNoJobTask ` and updated the condition to use ` canUseFooterScan ` instead of `
add the ability to save project / editor on the ` ` save all ' ' button
refactored the VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
[ flink - 24486 ] [ runtime ] fix the informer to stop when the terminal exception be throw .
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance data handling by allowing dynamic number columns
added null checks using ` Objects . requireNonNull ` for better null safety in ` ResolvedGroupArtifactVersion ` and ` MapPlugins ` methods to enhance
added null check for apiInfo before assigning it to api to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added debug logging and disposal methods for textures and shaders in PhotoPanel and FlameRenderer classes to improve debugging capabilities and ensure proper resource management
add a menu item to the instruction list when there be no more item
added bounds checking to the CSS parsing logic in CSSParser . java to ensure proper handling of character sequences and prevent potential ArrayIndexOutOfBoundsException
make window and frame look and feel more consistent
removed unnecessary ' NOT EXISTS ' clause from SQL query in HostRoleCommandDAO . java to streamline code by eliminating unnecessary ' this '
updated function names from F2 _ UNKNOWN , F5 _ UNKNOWN , F6 _ UNKNOWN , F5 _ UNKNOWN , F6 _ TRANS
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience
replaced HostDatabase with ColorStorage in ColorsActivity to improve color storage functionality for better user experience
refactor methods in String class for improved readability to enhance maintainability and facilitate future modifications
removed unused SLF4J logger imports and initialized logger in multiple classes to streamline code and improve maintainability by eliminating unnecessary dependencies
added a method ` getGlobals ( ) ` to return an array of ` Entry ` objects from the map to provide a way to retrieve global
added multiple assertions for the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method functions
test : migrate cufiltertest to junit 5 ( # 4563 )
replaced hardcoded string " ; " with a dynamic system - dependent path separator to improve flexibility and maintainability of classpath appending
removed static modifier from augmentSuccessViewModelObjects method in AbstractServiceValidateController . java to allow subclass access to the method from other classes
updated field access methods in InheritanceTest and TestUtil to use getDeclaredField instead of getField to improve clarity and consistency in field access validation
removed the ` getConf ( ) ` parameter from the ` Outlink ` constructor calls in multiple parser classes to simplify the code by eliminating unnecessary configuration
removed the LexicalContext parameter from several methods in the code to simplify method signatures and improve readability
added imports and modified type expression handling in UseLambdaForFunctionalInterface . java and TypesInUse . java to ensure unused imports are removed
removed the appendClassSelector method call in TestNGAntTask . java to simplify the class file set addition process
removed unsupported check for Aggregate input in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary debug logging
add a pool to the mapping event so that it do n ' t crash if the registry be not active .
updated variable assignments for x3 and y3 in Intersector . java to improve code readability and maintain consistency in variable assignment
add default implementation of default method in messagedecoderflyweight to make it easy to configure
updated ElasticsearchContainerTest . java to use a constant for the Elasticsearch version and refactored related imports to improve code clarity and maintainability by
fix potential memory leak in peermessage . parse ( bytebuffer , bytebuffer )
added version and name properties to ClusterDefinition and updated related methods in GSInstallerClusterProvider and GSInstallerClusterProvider to support version management and
camel - 10258 : camel - ftp - remove unused setconfiguration method from camel - ftp
[ zeppelin - 2246 ] set interpreter status to ready when a dependency can not be load .
added a conditional check to ensure locals are reserved for DCE variables in Gen . java and created a new test class NoLocalsMustBe
added a new class ` BuildEEBasicConstraints ` and modified ` ForwardBuilder ` to handle additional basic constraints to ensure correct handling of ee and
added a new method ` initAfterFirstDbConnection ` to ` JdbcPostgresqlDAO ` that initializes SQL inserts after the first database connection to
added a maximum message size limit of 64KB in SimpleEchoClient and implemented a buffer size check in AbstractWebSocketConnection to enforce minimum buffer size limits
refactor the handling of undeleteAll and rollbackUndeleteAll in SegmentReader . java and add a new test in TestIndexReader . java
added null checks for scopes and refactored exception handling in ClientRegistration and its tests to improve code robustness and ensure proper exception handling when scopes
added null checks for the orderBy parameter in CartesianProductStream . java to prevent potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest matcherassert instead of junit assertion
server : do n ' t try to restore vm snapshot if vm be in backedup state
replaced direct call to LogUtils . initHiveLog4j ( ) with a variable variable initLog4jMessage to improve code readability
added a check for ` tasks . size ( ) > 0 ` before executing the first element of ` tasks ` to avoid potential ` NoSuchElementException `
change deletenode and deletepubkeyslistnode to return a boolean indicating success or failure .
updated TsKvLatestEntity and related classes to use KvEntry objects instead of RelationEntity to improve data handling and enhance clarity in entity
added checks for empty resultString in Code128Reader and Code39Reader , and implemented null image handling in FalsePositivesBlackBoxTestCase to ensure
replaced TreeSet with LinkedHashSet for storing CipherSuite instances to maintain insertion order for better performance and performance
updated character validation logic in Escaper . java and corrected formatting in InternationalizationTest . java to ensure correct handling of control characters and improve test
updated the method to handle CharSequence instead of String in ProviderSqlSource and changed the return type of oneArgument method to StringBuilder in SqlProviderTest to
updated import statements and improved null handling for aliasChildren in InternalMNode . java to enhance code robustness and prevent potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` to calculate the layout transition offset for a specific page to improve the calculation of the layout transition offset
renamed variable ` synthetic ` to ` pruned ` and updated method calls for clarity to improve code readability and maintainability by standardizing variable naming
added setAccessible ( true ) to the method in WidgetInterceptor . java to ensure the method is accessible for access control
added a check to ensure the fieldConfig ' s default value is not " database . server . id " before setting the literal initializer and value to
simonstewart : update the version of the firefox browser to 537 . 36 .
added a web interface menu item to the popup in BasicSystemUtils . java to enhance user experience by allowing users to access the web interface directly
refactor HandleGetter to use a local variable for the value and update inner statements accordingly to improve code readability and maintainability by centralizing the
added error handling for record creation in EncryptedSlideShow . java to improve robustness by handling ArrayIndexOutOfBoundsException during record building
[ hotfix ] [ checkpoint ] improve logging in queue and filecheckpointio
move loadbattlepassmanager ( ) call before avatar postload to avoid npe
updated Docker image version from 1.0 . 0 to 1.0 . 0 and modified SSHD configuration options in PortForwardingContainer . java to ensure compatibility with
added a bigObject array and forced an initial full - gc call in ThresholdTest . java to ensure proper garbage collection during test execution
added checks for log names before logging in StdErrLog . java and improved test assertions in StdErrLogTest . java to ensure proper logging behavior
fixed - rremoteservice . getremoteserivce ( ) method do n ' t return name for redisson remote interface
added ` isSelected ( ) ` and ` setSelected ( boolean ) ` methods to the ` MultiButton ` class and updated the ` getGroup ( ) `
updated the navigation action from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to align the playback functionality with the new next navigation
move replicasmanager . fenced ( ) to the end of the code so that it do n ' t collide with the end user .
added connection closure and health indicator tests in RedisReactiveHealthIndicator and RedisReactiveHealthIndicatorTests to ensure proper resource management and health indicator functionality
refactor ` getThemeColor ` method to accept a resource ID and update theme color retrieval to improve flexibility in setting the background color based on the
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and
added multiple type adapter registrations for various Android - related classes in ToolingApiLauncher to ensure proper initialization of various type adapters in the launcher
updated the range of parameters in TestPayloadCheckQuery . java from ' 55 ' to ' 55 ' to ensure correct functionality of the payload check query
refactor ConsoleReader to use mask parameter for character printing and add a new test for reading lines with mask to enhance functionality and ensure correct functionality of
added user information retrieval and exit status logging in BaseCommand . java to enhance user information visibility during command execution
graalvm - compiler - api : move test class directly to the api .
[ hotfix ] [ test ] remove unused constructor from slotsharinggroup
do n ' t emulate java 9 in streamexinternals if emulatejava8 be false
updated texture and music files from " wheel . png " to " sys . png " and adjusted song duration in DecalTest . java and Music
removed duplicate registerReceiver and unregisterReceiver calls in Launcher . java to ensure proper registration and unregistration of system dialogs
updated import statement for Cluster class in HostsRemovedEvent . java to ensure consistent usage of cluster state management
added ` allowIntrospection ` flag and modified token introspection logic in ` ClientDetailsEntity ` , ` ChainedTokenGranter ` , and `
replaced ` write ( ) ` method calls with ` writer . write ( htmlEncode ( ) ) ` and added a new method ` htmlEncode (
added { @ link PhrasePrefixQuery } and { @ link SpanQuery } to the list of documents related to phrase queries
use isempty ( ) instead of size ( ) = = 0
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation methods to improve clarity and functionality to enhance readability and
updated method signatures in AbstractAssert , Assert , DateAssert , and Descriptable classes to use generic types instead of generic types to improve type safety
updated the package and import statements for the ThrowingFunction interface and changed its generic type to improve type safety and clarity in the codebase
refactor ` PreferenceManager ` methods to use instance methods instead of static methods to improve code readability and maintainability by using instance methods instead of
fix ( prettyprinter ) : initialize final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to ensure compatibility with Robolectric ' s Bitmap implementation
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and removed the ` char ` variable from ` DutchStemmer .
updated the page marker icon from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to enhance user experience by providing
added a reinvocations counter and updated logging messages in BasicInvocation . java to track and manage backup reinvocations more effectively
updated the calculation of topPadding to use getInnerHeight ( ) instead of getHeight ( ) to ensure accurate padding based on the inner height of the
added a break statement in the Recognize . java file to handle a specific case in a case - insensitive manner
added haptic feedback functionality based on preference extensions in multiple classes to enhance user experience by providing user feedback when the home screen is locked
updated ExcelBatchReader to handle FORMULA cells correctly and added a new test for text formulas in TestExcelFormat to improve handling of formula
fixed bug 1430606 - immutablefield no long report false positive for assignment in anonymous inner class .
added a new ` userAgent ` field to ` CommaFeedConfiguration ` and modified ` HttpGetter ` to retrieve it from application settings to allow dynamic
add miss required = true to @ xmlattribute in avro - schema . xml .
changed log level from info to debug for file not found message to reduce log verbosity and reduce log verbosity
rename the test class from QueueTest to QueuedPipeTest to improve clarity and consistency in naming conventions
replaced the method for checking the version check from PS . get ( ) to OfflinePlayer . class . getUniqueID ( ) to improve compatibility
camel - 14246 : camel - core - optimize route collector to handle case when includepattern be false
add a ` ` enable vertex color ' ' option for pshape3d
added a new boolean parameter ` isPkColumnFiltered ` and updated related methods in ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest `
replaced ` Shadow . extract ( shadowMatrix ) ` with ` matrix . getValues ( m ) ` in ` ShadowMotionEvent . java ` to
moved MetaRules from the api package to the parser package and removed its import from PythonDslProjectBuildFileParser and PythonDslProjectBuild
removed class handling logic and simplified the return logic in GroovyEngine . java to simplify the code and improve readability
move the hawtio - plugin plugin into the plugin package so that it can be use in the branding plugin .
removed duplicate ` System . out . println ` statements in ` NativeCodeGenerator . java ` to streamline output and improve code readability
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in ` FlightConfiguration
added a new test method to verify the behavior of the ` hasCause ` assertion in ` ThrowableAssert _ hasCause _ Test ` to ensure that
removed variable assignments for flattened and package names in AutomaticDependencies . java to streamline dependency management by eliminating unnecessary variables
rename ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to improve clarity and consistency in variable naming
added unit tests for setting Firefox profile preferences and capabilities in MarionetteTest . java to ensure that Firefox options and capabilities can be set correctly
added methods to set and retrieve route descriptions across multiple classes to enhance the flexibility and usability of route description management
refactor JavacTreeMaker to improve code structure to enhance maintainability and readability of the code
added a line to set the edge ' s weight in ImporterCSV . java to ensure the edge ' s weight is correctly set during import
refactor cost calculation in QuotaManagerImpl to use a dedicated method for date handling to improve code readability and maintainability by centralizing cost
updated SQL queries in DatabaseMetaData . java and adjusted column default handling in DatabaseMetaData . java to improve database metadata retrieval and ensure correct column default order
add a null check for the binarized variable in SentimentAnnotator . java to ensure that a valid binarized sentence is
added detailed user information to the toString method in User . java and created a test for it in UserTests . java to enhance the user ' s
change messagehelper . extractbodyasstring to use message . getbody ( ) instead of message . extractbodyasstring ( )
[ hotfix ] rename taskdeploymentdescriptorfactory . fromexecutionvertex to taskdeploymentdescriptorfactory . fromexecution ( )
do n ' t try to subscribe to a node group that do n ' t exist
added a new reference to the Maven test classpath in AbstractJRubyMojo . java and removed unnecessary suppress warnings in CucumberMojo . java to
replaced the variable ` rtype ` with ` mtype ` in ` MethodHandleImpl . java ` and added a new test method in ` MethodHandles
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , and modified imports in LegacyHTMLStripCharFilter
updated comparison conditions for width and height in URLImage . java from " > " to " ! = " to ensure that width and height comparisons
added a condition to check if the name does not start with " META - INF / " before processing class names to ensure that only non -
refactor createImageToFileSystem , createImageToStorage , and createImageToStorage methods to use final parameters and schedule background tasks if Edt
updated assertions in StackWalkerTest to use the expected value based on the version check to ensure the test correctly verifies the expected number of values based on
changed the access modifier of the addViewportJob method from protected to public to allow access to the addViewportJob method from other classes
removed the ` partitions ` parameter from the ` buildFlow ` method and related calls to simplify the method signature and eliminate unnecessary complexity in the codebase
updated server configuration settings in TestDatabase . java to ensure proper server state management during tests
added null and empty checks in NodePathsConvertOperator and SchemaQueryMergeOperator to ensure proper handling of empty blocks and prevent potential NullPointerExceptions
add gettotalharvestingtime ( ) method to transportmanagersipimpl and iceprotocolsipimpl to display the total harvest time
updated font sizes in ParticleEditor . java from 10 frames and 30 to 5 frames and 5 buttons to improve the visual representation of the emitter
added functionality to set the " keyserver _ port " configuration in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog2
added a transparent background color to the SvgViewerFactory class to enhance the visual appearance of the SVG viewer
removed the minSdk configuration from ShadowKeyguardManagerTest and ShadowKeyguardManager to streamline the code by eliminating unnecessary dependencies
updated the method signature of ` containsExactly ` to use ` asList ` for varargs instead of ` first ` and ` rest ` to improve
updated the Bandwidth builder to use refillGreedy method and improved key validation in the Bucket4jFilterFunctions class to enhance bandwidth
updated GermanAnalyzer , GermanStemmer , and WordlistLoader classes to enhance language analysis capabilities and improve text loading functionality
added support for post - execution hooks in the QueryProperties and SemanticAnalyzer classes to enhance query processing by allowing hooks to be applied for materialized views
added error handling for NoClassDefFoundError in REngine . java to set supported to FALSE when no class definitions are found
refactor TraceWebFilter to use SpanAndScope for improved span management to enhance flexibility in span management and scope management
added null check for getCause ( ) before setting the exception message to avoid potential NullPointerException when getCause ( ) is null
updated SolrServerException constructor to include the base URL as a parameter to improve error handling by providing more context in exception messages
invert landscape setting in HSSFPrintSetup . java from ` ls ` to ` ! ls ` to ensure correct behavior when setting landscape
updated return statement to handle null values correctly to ensure proper handling of null values in JavaVoidObjectInspector
added validation to ensure argument names do not contain tabs or spaces to prevent runtime errors during argument validation
added in - memory handling for location updates in AndroidLocationPlayServiceManager to improve performance by avoiding unnecessary location updates when no activity is available
update condition to check if primitiveType is equal to GL10 . GL _ POINTS instead of not equal to GL10 . GL _ 
trufflestring : make sure toindexablenode ( ) and toindexablenode ( ) do n ' t throw indexoutofboundsexception
added a method to set the command list in the ComboBox to ensure the combo box reflects the correct command list status
nifi - 13257 : escape filenames with forward and back slash in alias . pem
replaced multiple instances of " zkcli . sh - cmd " with " zkcli . sh - zkhost " in ZkCLI . java to
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` . equals ( ) ` instead of `
added a conditional check for remote grpc status before posting a warning message to ensure that notifications are only sent when the remote build status is OK
refactor method signatures in XYItemRenderer and related classes for consistency and clarity to improve code readability and maintainability
fix entity id not be add to forge chunk . close # 118
added a private static method ` getErrorString ` to handle specific error codes in the ` GLSurfaceViewAPI18 ` class to improve user feedback by
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 33535 -
updated server URI handling and assertion in RFC2616BaseTest . java to ensure correct redirection to the correct host in the response
added a call to addToHelperList ( ce ) in Construction . java to enhance the construction process by incorporating helper list functionality
added a condition to skip the first escape sequence in GlyphLayout . java to handle cases where the length is - 2 to ensure proper handling of the
added security permissions handling and refactored context class loader management in Transport and TCPTransport classes to enhance security by ensuring proper context class loader management and
refactor directory synchronization logic in ReceiveExternalFilesActivity to handle null folder cases to ensure proper synchronization and navigation to the root when the folder is not
added null check for service loader class loader before loading it in TestNG . java to avoid potential NullPointerException when service loader class loader is null
removed a debug log statement from BarrowmanCalculator . java and modified the deltap calculation in TubeCalc . java to simplify the code and
added checks for Node instances before adding columns in TimelineControllerImpl . java to ensure correct column addition based on the object type
added a method to register extra components in BaseBrokerStarter to enable additional component registration for the broker admin application
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT ` and modified the ` UPSERT ` logic
PeerGroup and PeerGroupTest to use LinkedList instead of ArrayList for peer candidates and add version check for witness support to improve performance and maintainability of
added cycle detection to the builder , to make the builder more responsive .
refactor Ratis configuration to use a Supplier for consensus snapshot trigger threshold and update related classes accordingly to enhance flexibility and maintainability of the Ratis
refactor multiple Java classes to improve code structure and maintainability to enhance maintainability and readability of the codebase
added a null check for the ManagedService annotation before unregistering JMX objects to ensure JMXHelper is only unregistered when the ManagedService annotation
tika - 132 - fix encodingdetector to detect non - unicode entry .
added a new test class TestSplitThruPhiDivMod with methods for modulo operations to verify the behavior of mathematical operations as part of mathematical
added methods to lookup generic interfaces and superclass types in TemplateRegistry to enhance type resolution capabilities for improved type handling
reduce the initial capacity of the ByteArrayOutputStream from 512 to 1028 to optimize memory usage for better performance
added comments to clarify the absence of Chinese symbols in the languagesExcluded array to improve readability and maintainability of the code
modify byte array creation and transfer logic in TransferCompletionHandler . java to handle large data sizes to ensure that the transfer adapter does not exceed the
renames occurrence of addwindowfocuslistener to addwindowwindowlistener so that it do n ' t have to be call multiple time
added null check for the source node before throwing an INVALID _ TABLE exception to ensure that the error message is only thrown when the source node is not
added scaling functionality to the aabb in SkeletonRenderer to ensure the correct bounding box is rendered based on the skeletal mesh scaling
added ` getSolrHome ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide a way to
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in the application
removed the ` getAccount ( ) ` method from ` UserListItem ` to streamline the user ' s account retrieval process
added unit tests for installing a package with default values in ShadowPackageManagerTest and modified package name assignment logic in ShadowApplicationPackageManager to ensure proper handling of
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future updates
added constructors and methods for TransactionCapsule and ReceiptCapsule in TransactionTrace . java to enable the creation and management of Transaction
add shuffle . member . list property to allow client to specify which member to shuffle .
replace Text ( Text ( ) with CrawlDatum ( ) in SegmentReader . java to ensure proper handling of CrawlDatum instances
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future modifications
updated configuration name and default path in TsfileDBConfig . java , replaced integer fetchSize with ThreadLocal in QueryProcessExecutor . java to improve
updated the method name from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to improve clarity and consistency
removed the import of ExecutionContext in TaskletStep . java to streamline the code by eliminating unused dependencies
initialize the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure that the title is set to an empty string
added empty response body handling in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that the response has a non - null body
add a deprecated interface embeddedserverinstance in the runtime . server package
remove the macadapter constructor and use reflection to call registermacevents
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update associated references to improve clarity and consistency in
added a return statement to return the result of the toEnum method when the enum type is assignable to ensure proper handling of enum type conversion
make hideunprivilegedobjects final to prevent memory leak
fix audiodatasourcestest and improve log level
added a conditional check for Android Q and saved video URL in IoUtilKotlin to ensure compatibility with different Android versions
fix a bug in bytearraytype and add deserializedObject for variableinstanceentity .
refactor multiple classes related to LDAP password policy and service to improve code organization and maintainability
use computeifabsent ( ) instead of get ( ) for loggermap . get ( name )
hbase - 13213 remove outputstream from hbaseobjectwritablefor96migration . java ( addendum )
updated the configuration for " hive . stats . column . autogather " in TestAcidOnTez . java to ensure correct data
changed log level from info to debug in MavenEnhancePlugin . java to improve log granularity for enhanced classes
added a method to retrieve the default provider name based on the IS _ RI platform to enhance flexibility by allowing different platform provider names
added Captor annotation processing in MockitoBeforeTestNGMethod . java to enable processing of Captor fields annotated with the Captor class
added error handling for missing test cases in TestSuiteBuilder . java to improve debugging by providing clearer error messages when test cases are not found
added imports for TextUtils and StringUtils , and modified method parameters in GroovyAutoComplete . java , and GroovyLanguage . java to enhance code readability and
move graphhopper from graphhopper to graphhopperosm so that it do n ' t break the build .
simonstewart : use clientconfig . defaultconfig . withretries ( ) when create a client in handlesession .
removed the ` final ` modifier from the ` mHideSysUiScrim ` variable and added preference management for the ` mHideSysUiSc
added an ` enqueue ` method to the ` Call ` class and improved cancellation logic in ` OkHttpCall ` to ensure that the call is canceled
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience
updated RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to ensure compatibility with Spring Security ' s
added support for conditional statements in DeferredAttr . java and created a new abstract class ImplicitLambdaConsideredForApplicabilityTest . java
[ j2kt ] update j2kt integration test to run on j2kt
added unit tests for ` applyQualifiers ` method in ` DeviceConfigTest ` and implemented density handling in ` DeviceConfig ` to ensure density -
replaced IOException with RuntimeException and modified timestamp initialization in ExternalViewReaderTest , PinotDataTypeTest , and PluginClassLoader to use System . currentTimeMillis
updated the icon resource in the RootCursor from a drawable to a mipmap to improve user experience by using a more appropriate icon resource
added a line to set the content text in the error builder to enhance error handling by providing a clearer error message
refactor ConcurrentHashMap implementation for improved performance to enhance performance and maintainability of concurrent operations
added methods to adapt user trades and retrieve them from a list in the AbucoinsAdapters and AbucoinsTradeService classes to enhance
modified plot claim logic and modified player clearing behavior in the claim functionality to improve plot handling logic and ensure proper player management during plot removal
simonstewart : fix the htmlunit driver to work with the ie driver
added support for handling VARBINARY data type in BlobType . java to ensure correct data type handling for VARBINARY database types
refactor cookie version handling to use a local variable for consistency to improve code readability and maintainability by using a more descriptive variable name
fix concurrentmodificationexception in libfficontext . getlanguage ( )
replaced ` Context ` with ` ContextInternal ` and updated context handling in ` InboundBuffer ` to ensure compatibility with the latest Vert . x
added a new method ` deadServerNoTimeout ` and modified ` LdapTimeoutTest ` to use it for timeout handling to improve test reliability and ensure
corrected a typo in the usage message from " UniocdeData . txt " to " UnicodeData . txt " to ensure consistency in
camel - 14265 - camel - cxf : add inout header to camel - cxf test
refactor multiple Java UI classes to improve code structure to enhance maintainability and readability of the codebase
added import for BoosterSet and modified return value from true to false in BoosterSet to ensure proper handling of BoosterSet instances and improve
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43535 -
corrected the spelling of " BLOCKCHAIN __ FORK _ COUNT " to " BLOCKCHAIN _ FORK _ COUNT "
replaced an InternalError throw with a return statement in mmm Class . java and ppp Class . java to simplify the code by returning false instead of throwing an
updated logging imports and formatted log messages in TestIPCUtil . java to improve code readability and maintainability by utilizing Apache Commons Logging
removed chunked transfer handling from the responseFlux assignment in NettyRoutingFilter . java to simplify the code by directly using the HttpClientResponse
added a call to clearAttributes ( ) in PatternTokenizer . java to improve code clarity and maintainability by encapsulating attributes
added a polling period parameter to the VerificationAfterDelayImpl constructor and implemented error handling in the After class to enhance the verification process by allowing dynamic
added a custom authorization manager in CliConfigs and modified SemanticAnalyzer to handle compaction in SessionState to enhance authorization handling and ensure proper session compaction
refactor DockerInterpreterProcess to replace zeplLibPath and libPath with intpGrpPath and add file filtering for JAR files
hbase - 24113 hbaseadmin . gettableregions ( ) do n ' t check the region count correctly ( sergey shelu
ignore partialescapeanalysistest until we fix it .
added calcXBounds method implementations in BarLineChartBase , CombinedChartRenderer , and Renderer classes to calculate minimum and maximum x - axis bounds
added exception handling around XML parsing in SimpleSAX . java to ensure proper resource management and prevent memory leaks
release header buffer in HttpSenderOverHTTP and reset headerBuffer to null to ensure proper resource management and prevent potential memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to use diamond operator
added null and closed check before closing the result set in JdbcExecutor . java to ensure proper resource management and prevent potential memory leaks
update driverVersionMajor and driverVersion from - 1 to 10 and driverVersion6 in DerbyDatabase . java to ensure compatibility with newer database versions
fixed bug 1422525 - usestringbufferlength no literal should be check for empty string .
removed error logging statement in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
updated the createDb method to return a Connection object instead of void to ensure proper resource management and prevent potential memory leaks
rename CreateCustomMetric , ListResources , and ListResourcesTest classes to improve clarity and consistency in naming conventions
hbase - 24136 allow compaction to use off - peak size for off - peak compaction .
updated BitstampDepositAddress to handle both a null address and a new DepositAddressJSONTest class to improve the handling of deposit addresses and validate JSON
replaced IllegalStateException with a response abort for exceeding buffering capacity in BufferingResponseListener . java to improve error handling by providing a clearer response
convert linkPath to absolute path in ProjectView . java to ensure proper handling of absolute paths in deleted directories
updated InvocationFinishedEvent to implement MetricsEvent instead of Event and modified related imports and constructor parameters to improve clarity and functionality of metric handling in the
added support for multicast network interface to OptionsTest . java to ensure proper handling of multicast network interfaces
refactor the validation logic to iterate through all valid checksums before returning true to improve code readability and maintainability by reducing duplication
added a clone method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to ensure that the clone method does not throw an exception for unsupported operations
replace Math . sqrt ( x * y * y ) with Circle . java ' s isLessThan ( radius * radius ) method to improve accuracy of
added a check for the frequency band identifier before assignment in P25Channel . java and modified the return statement in P25ExplicitChannel . java to
refactor GestureDetector to use rectangle dimensions instead of tap squares to improve clarity and consistency in the gesture detection logic
change the default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false to disable replication on write operations by default
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and implemented date formatting in Util . java to allow users to specify a
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests in ` TraceCallableTests ` and
added file sharing functionality and improved error handling in FileActivity and FileDisplayActivity to enhance user experience by providing clearer feedback on file synchronization events
added a new method ` quiche _ conn _ stream _ writable ` to the ` ForeignIncubatorQuicheConnection ` class
added a boolean parameter to the method call in JavascriptContext . java to allow for additional context options during execution
removed alignment parameters from TableCell constructors in BaseTextFormattingHelper . java and TableCell . java to simplify the constructor and improve code readability
added a new file ` TracingAutoConfiguration . java ` to configure tracing configuration in the Cloud Foundry identity uaa package to enhance tracing capabilities
added a Para element to the submission list in Submissions . java to ensure the first paragraph is added to the submission list
updated the ` getPrunedSegments ` method to accept a list of queryable segments and adjusted segment reader retrieval logic to improve segment management and ensure
refactor VertxBufferTest . java for improved readability to enhance maintainability and facilitate future updates
[ http : / / issues . apache . org / bugzilla / show _ bugzilla / show _ bugzilla / show _
changed the access modifier of the mContext variable from private to protected to allow subclasses to access the mContext variable
removed unnecessary imports of SortedSet and TreeSet in ShowTablesOperation . java and ShowViewsOperation . java to streamline code by eliminating unnecessary dependencies
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` and ` MongoTemplateTests ` to use it to improve
[ hotfix ] [ runtime ] return the job completion future in jobcoordinatorservice
refactor ` bitsToHumanReadable ` method to use a HashMap for mapping MIME types to improve code organization and maintainability by centralizing MIME type
removed unnecessary type check for TieredMergePolicy in TestUpgradeIndexMergePolicy and added a new test method for no pathological merges to
added a check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not enabled
update cpu error log message to link to konduit . ai
modified ` loadSettingModels ` and ` contextInitialized ` methods to accept an ` InputStream ` parameter to enhance functionality by allowing the loading of properties from
added null checks for input parameters in FilterLeafReader constructors to ensure proper handling of null values to prevent NullPointerExceptions
add support for default key size for jcecrmfencryptor and add unit test
updated exception handling in NetSocketReader and removed redundant constructors in SoftEndOfStreamException to improve error handling by providing a clearer error message and
removed unused imports and annotations from multiple Java classes to streamline dependency injection for improved code clarity and maintainability
updated the expected size of the BundledDistributionTest and added assertions for database users in PostgreSQLTest to improve test coverage and ensure accurate
[ hotfix ] [ runtime ] add pipeline . name option to streamexecutionenvironment
refactor scale calculation to account for two - panel devices to ensure correct scaling based on the device profile ' s layout dimensions
make ice plains biome a snowy biome and add a populatortree .
removed the DateTimeZone parameter from the ` getMaxTime ` and ` getMinTime ` methods in ` StorageUtils ` to simplify time retrieval by eliminating unnecessary zone
[ j2kt ] add ` ` isqualified ' ' flag to the ` ` this ' ' reference .
updated regex pattern in XhamsterRipper to support both wmde and wmde URLs to enhance compatibility with newer Xham
fix duplicate entity list in glowworld . getentities ( )
added schema handling to the tableName assignment in OracleDialect . java to ensure proper naming for feature types based on the specified schema
fix a typo in the flutterconsolefilter . java file . patch by jbellis
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing configurable file selection options
[ java ] adjust termoffset calculation to account for termlengthmask .
refactor GuildUpdateOwnerEvent class to improve code readability to enhance maintainability and facilitate future updates
fix too many inportal tick when creative .
added support for compressed chart data and adjusted spacing calculations in ClusterMonitorTileSkin . java to enhance chart rendering flexibility based on item compression status
refactor multiple TransactionalCodecTemplate and related classes to improve code organization and maintainability
change variable types from int to long for length calculations in Base64 . java to ensure correct handling of integer values and prevent potential overflow issues
removed null check for header in RendererConfiguration . java to simplify the conditional statement for better readability
cloudstack - 5253 : do n ' t allow disk offering change on volume with the same service offering
updated import statements and changed the builder type from Builder to LimitOrder . Builder in HitbtcAdapters . java to enhance order handling capabilities and
corrected the spelling of " consecutiveIdleCount " to " consecutiveIdleCount " in LLRealtimeSegmentDataManager . java to ensure
updated the configuration service description from " jruby " to " jrubyscripting " in JRubyScriptEngineFactory . java to clarify the automation
replaced the variable ` name ` with ` displayName ` for clarity to improve code readability and maintainability by using a consistent variable name
added a condition to check if the preciseExchangeAmount is less than or equal to - 0.0000001 in ParticipateAssetIssueActu
removed a variable ` i ` and its associated logic from ` FeedUtils . java ` to streamline code by eliminating unnecessary variable usage
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to validate HDF4 parsing functionality to ensure
[ calcite - 6092 ] add test for cast ( ' 1241241 ' as time ) a fixed type
remove unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods ` quietCloseAll ` and ` quietCloseAll ` to handle closing multiple AutoCloseable objects to improve resource management by ensuring all resources
updated button position handling in RemoveFileDialogFragment to use a string resource instead of a hardcoded string to improve user feedback by providing a clearer
added null checks before drawing the image in Pixmap . java to ensure that drawing only occurs if both dimensions are non - zero
replaced the use of ` ReflectionHelpers ` with ` java . security . ProtectionDomain ` and simplified method invocation to improve code readability and maintainability
fix the fqdn regex to match the correct port
replaced boolean conflict variable with long conflicts in CachedRowSetWriter . java to track the number of conflicts instead of a boolean flag to improve code clarity
remove the hardcoded ` ` 0.0 . 3 ' ' version constant and use ` ` flutterpubspec . yaml ' ' instead
added a conditional check to return the reference if it equals the current instance to ensure that the reference is only assigned if it is the current instance
added seed file injection logic and improved error handling in Injector . java to ensure that only valid seed files are injected and improve error logging
added a condition to hide the original view in FloatingIconView . java to ensure that the original view is only visible when hiding the original view
loop policy : ensure maxnodes be non - negative when check maxtrips
added logging for unsupported texture coordinates and implemented a check for supported texture coordinate types in CombinedTexture to improve error handling and provide clearer feedback when unsupported
added error handling for file deletion in EncodeActivity and improved input validation in SupplementalInfoRetriever and DecodedBitStreamParser to enhance robustness
added seek ( ) and close ( ) method to tracingconsumer and tracingproducer
updated the substring length calculation in HandleDAOImpl . java and set the oldPrefixLength in the query to ensure correct handling of the oldPrefix length
replaced ` addAll ( collection ) ` with ` constructor ` for the ` convertedValsList ` initialization to improve code readability and maintainability by
added a deprecated constructor to the AbstractTimer class to indicate that the constructor is outdated and should no longer be used
added a nightly build warning message for users when running a nightly version of Universal Gcode Sender to inform users about issues related to night
add option to sort response by team name by recipient
updated return statement to include " declarations . " in UnnecessaryThrows . java to improve clarity of the return message for better debugging
deleted CacheApplication . java and replaced it with CommonsApplication . cacheData in ShareActivity . java and ShareActivity . java to streamline cache handling
replace ` realObject . getApplicationContext ( ) . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` for service and intent handling to simplify
refactor StatisticsServlet class to improve code readability to enhance maintainability and facilitate future updates
updated configuration handling in RuntimeEnvironment for KitKat and above to ensure compatibility with newer Android versions and avoid potential null pointer exceptions
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` and a corresponding test
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName before continuing in CFMetaData . java to avoid potential NullPointerExceptions when indexName is null
added package imports for internal resolver helpers and readers in CheckPackageAccess . java to enhance package access control for XML resolver services
renamed methods ` save ` to ` add ` in ` JobRepository ` and related classes to improve clarity and consistency in method naming for better readability
added a check to replace the start of loop exit nodes with the end of the input to ensure proper handling of loop exit nodes in the graph
replaced ` RecyclerView ` with ` WidgetsRecyclerView ` and updated related methods in ` SearchAndRecommendationsScrollController ` to utilize margin calculations to
added a condition to check if the terminal is supported before proceeding to ensure that the terminal is only displayed when supported
changed data types from ` long ` to ` int ` in ` CloudExitableDirectoryReaderTest ` and ` LBHttpSolrClient ` to
added a session validity check before flushing on response commit in AbstractSessionCache . java and modified session handling in RemoveSessionTest . java to ensure
added null check for columnNames before processing to avoid potential NullPointerExceptions during index changes
replaced Vector with ArrayList for buttons and added action listener methods to improve performance and maintainability of the ButtonGroup class
updated UserManagerCompat to use UserManagerCompatVM for user creation time checks to enhance compatibility with newer Android versions and improve user creation time retrieval
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to ` MockDatabase ` , ` AbstractDatabase ` , and
refactor ActionGraphCache to use lastActionGraphAndResolver and improve mismatch handling to enhance clarity and maintainability of the code by centralizing the
added LockDatabaseDesc and UnlockDatabaseDesc classes with corresponding serialization methods to enhance database management capabilities in the Hive plan
refactor model properties in RankingUIModel for clarity and consistency to improve code readability and maintainability by centralizing model properties
added handling for disconnect messages in HandshakeHandler . java and updated logging in NodeImpl . java to improve disconnection handling and provide clearer logging for
added a test method to set and delete storage groups in IoTDBAuthorizationIT . java to ensure proper handling of SQL exceptions during authorization operations
chore : [ v1beta1 ] update default protos for documentai / v1beta1 to v1beta2 : : cloud
refactor variable type validation logic and improve error handling in Assertions and TypeValidation classes to enhance type validation accuracy and provide clearer error messages for missing
added empty aftertestclass and beforetestclass method to stepscopetestexecutionlistener
replaced specific imports with a wildcard import and modified buffer size checks in CountersManager . java to improve code readability and maintainability by simplify
updated ` toString ( ) ` method implementations in ` MultiSteps ` and ` SendEmail ` classes to use parameterized logging to improve code readability
added logic to clone joinKeys from joinDesc if it is not null to ensure that joinKeys is properly initialized from joinDesc object
added PrincipalResolver support to the authentication handler registration in WebAuthnConfiguration to enhance flexibility by allowing customizable principal resolvers
added a ` searchPaths ` parameter to the ` addSettingsFromFile ` method and updated its usage in ` XcconfigParserTest ` to allow
added ' final ' modifier to several fields in Oracle . java to enforce immutability and enforce immutability of these fields
do not advertise unaligned checkpoint until rescaling of unaligned checkpoint be complete .
[ hotfix ] [ table - planner - blink ] add validation check for order _ by and sort _ by in queryparser
add a option to disable debug output in the compiletheworld test
added a check to throw a CannotDelambaException for non - LocalVariable instances to ensure proper handling of LocalVariable instances in LambdaRewriter
added support for MySQL database timestamps in CreateTableGenerator to ensure correct handling of timestamp values for MySQL databases
added context class loader management and association to the current thread in EnvConfiguration . java to ensure proper management of the current thread ' s context class loader
added logic to set the ejection delay for the motor if the stageNr is zero in SimulationListHandler . java to ensure proper handling
updated method names and class names from FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig to improve clarity and consistency in naming conventions
refactor TransactionUtil2 to improve code readability to enhance maintainability and facilitate future updates
refactor ` validateIssuerClaim ` and related methods to accept ` Optional < OAuthRegisteredService > ` as a parameter to enhance flexibility in issuer resolution
added null check for the collection before returning its string representation to avoid potential NullPointerExceptions when coll is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in ` TextArea .
added FOREIGN _ DATABASE _ NAME and FOREIGN _ SCHEMA _ NAME constants and implemented getter and setter methods for foreign
[ java ] throw a timeout exception when a follower fail to join live log .
added a private method ` shadowOf ` to ` ShadowActivity ` and modified the usage of ` ShadowBluetoothGatt ` in ` Shadow
added null and empty checks for the selection root and implemented wildcard handling in FileSelection . java and TestBugFixes . java to improve error handling
deprecate iforgeitem . oninventorytick ( ) and replace it with iforgeitem . oninventorytick
[ recaf ] add support to export war class .
added a null check before invoking invalidateOptionsMenu ( ) in SingleUploadFragment . java to prevent potential NullPointerException when the activity is not initialized
updated widget binding logic to support dynamic widget options to improve flexibility in widget configuration handling
added new CAPABILITY constants for air pressure , air quality , and co2 PPM in EcobeeSensorThingHandler . java to support additional
remove unnecessary whitespace in OperationSetServerStoredContactInfoFacebookImpl . java to improve code readability and consistency
added environment variables for AAPT and AAPT2 in Genrule . java and updated corresponding test assertions in GenruleTest . java to ensure correct
do n ' t dump access table when instrument branch be enable .
added null check before disposing of message to prevent potential NullPointerException when message is null
added @ Getter annotation to the DB field and made the db field final in TronStoreWithRevoking , modified init methods in TxCacheDB
updated logging messages in CoreContainer . java to provide clearer guidance on how LogWatcher is disabled for log4j implementation
replaced printStackTrace ( ) calls with fail ( ) and return statements in CategoryPlotTests . java to improve error handling and provide clearer feedback on failure
[ io ] fix npe on io that do n ' t work in some case .
[ fix ] shader . getattribute ( vertexbuffer . type ) now return an intmap instead of string / collection
removed the " territory = en _ US " parameter from the derby connection configuration to simplify the configuration by removing unnecessary territory setting
camel - 14146 : camel - jbang - fix npe in routeinfo . getfirstexchangestatus ( ) and routeinfo . get
add - locale to testhtmltag javadocs , add test for locale . getlanguage ( )
added a condition to check if the result is incomplete and the size of the items to ensure completion only occurs when there are at least 10 items to
updated usage message and modified argument handling for time column names in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity of command - line usage and
updated output format handling to use " svg . html " or " svg . html " based on the " htmlx " format to ensure compatibility with
modified the conditional check for QSB margin in DeviceProfile . java to correct the logic for validating the QSB margin condition
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and updated equality checks in ` SceneKey ` , ` GltfModelKey
added a ` _ date ` field and a ` setDate ` method to ` AbstractGenerator ` , modified ` HttpConnection ` and ` HttpGenerator `
replaced the usage of ` Adler32 ` with ` CRC32 ` in the ` Store . java ` file to standardize the usage of the
fix default value of xen . heartbeat . interval to null
added a new warning constant ZERO _ AREA _ FIN and updated related conditions in FinSetCalc . java to improve code clarity and maintainability
replaced Jackson annotations with a custom custom Serializer for DocumentMetadata and updated JSON serialization logic to improve serialization flexibility and ensure compatibility with different JSON backend versions
hhh - 13636 add trunc function to h2 and oracle dialect
added a check for " memory . " and updated error message handling in MetricUtils . java and MetricUtilsTest . java to improve error handling and
added useJavaScript parameter to UserContext and modified return statements in UserTests , FileAccess , FileTreeNode , and FileTreeNode classes to enhance security and
updated annotation messages to use RUNTIME _ PROTOTYPE _ TYPE . classNameWithEnclosingNames ( ) instead of @ ConfiguredType to improve clarity and
updated the BACKFILL constant from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils .
update PrecompiledContracts . java to return a new DataWord ( 1 ) instead of a new DataWord ( 0 ) . getData ( )
updated AllAppsContainerView to update badge state from RecyclerView items instead of AlphabeticalAppsList items to improve code readability and maintain
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated comments in ResourceHandlerTest . java to clarify the behavior of starting the handler after ContextHandlerCollection is started to clarify the behavior of the start
removed conditional check for WORKSPACE _ CUSTOM in Cling . java to simplify the logic for handling custom drawing identifiers
remove an assertion that do n ' t happen when there be no lookup module .
added JUnit @ Ignore annotation to the test method name from ` shadowInvocationWhenChildIsInstrmented ` to ` shadowInvocationWhenChild
updated import statements in multiple demo files to remove v1 dependencies to streamline dependencies and ensure compatibility with the latest version of the itbit library
ww - 4071 use parameter . isdefined ( ) to avoid nullpointerexception
added private constructors to several utility classes to enforce immutability of these classes
fix potential resource leak in listuseraccounts api
replaced instances of ` o . getClass ( ) . getName ( ) ` with ` " java . util . Vector " and ` java . util .
added tableNameWithType to the warning log message in RetentionManager . java to provide more context for logging of retention time issues for better debugging
added trim ( ) method to string length check in QueryExecutorImpl . java to ensure consistent string length checks for fragment lists
fix resourcepackfilenotfoundexception with modfile . getfilepath ( ) instead of path
updated the handling of TransformerBuilder instances from Node and Edge to a single builder to improve code readability and maintainability by standardizing variable names and
removed unnecessary condition checking for ` showAsGrid ( ) ` in ` RecentsView . java ` to improve code readability and maintainability by
modified the ` calculate ` method to return a ` BMIViewObject ` instead of a ` Map < String , String > ` across multiple classes
removed unnecessary comparison operator in QueryCommand . java to simplify the comparison logic for better readability
change the damage calculation to account for hawtio stone . close # 324
refactor environment variable handling in WindowsProcessAddressSpace and J9DDRImageProcess to improve clarity and functionality to enhance code readability and maintain
added support for custom plugin properties in the OptionsParser and corresponding tests in OptionsParserTest to enhance the flexibility and correctness of plugin property parsing in
updated the condition to check if the hashTable is not empty instead of null to improve robustness by preventing potential null pointer exceptions
updated timestamp handling and test methods in Timestamp . java and TimestampTest . java to improve clarity and correctness of timestamp validation logic
[ java ] do n ' t clone archivecontext in clusteredserviceagent . close ( ) .
added a condition to check if the compilation threshold is not compiled before executing the method type assertion to ensure that compilation only occurs when the method is not
added test cases for various online test classes including DB2 , DB2 , H2 , Oracle , and OracleRaster to improve test coverage and ensure
refactor TogglableFlag to replace getInitialValue method with getOverridenDefaultValue method and introduce a change listener for property changes to enhance
updated logging messages in DockerClientFactory to use parameterized messages to improve readability and maintainability of log messages
added a conditional check to return early if the current platform is Android to improve performance by avoiding unnecessary operations on Android devices
replace assertEquals with assertThat for assertions in RoutesTest . java to improve readability and maintainability of the test code
added new functional interfaces for BytePredicate , FloatPredicate , FloatToLongFunction , and ShortToLongFunction in the com . speedment .
modified the ` getSubsColor ` method to return a ` String ` instead of an ` int ` and updated related methods accordingly to improve type safety
added a conditional check before deregistering the invocation registry to ensure that the invocation registry is deregistered only when the future is complete
replaced the creation of ControlFrameBytes with a direct output method call to simplify the code and improve readability
added a check for " redirected " in the intent before starting WelcomeActivity to ensure the activity launches only when the " redirected " flag
added a new class ` ShadowCheckedTextView ` and integrated it into ` CheckedTextView ` to enable testing of checked text views in Robolectric
added Serializable interface implementation to ParserState , AccessorProperty , and Property classes to ensure proper serialization and deserialization of objects
add " identrustdstx3 [ jdk ] " to VerifyCACerts . java to support verification of identrustdstx3
removed duplicate attribute settings for TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline code by eliminating redundancy
[ muc ] fix muc occupant ' s nick for multiuserchat test .
added a new parameter ` context ` and ` remoteAddress ` to the ` QuicSession ` constructors and updated related method calls to enhance session management
updated configuration method calls in CreateIndexTask . java to use getConfig ( ) instead of writer . getConfiguration ( ) to improve code readability and
refactor code and variable names for consistency and clarity in ICU4JImpl . java and TextPosition . java to improve code readability and
added handling for ` ComputedDateValue ` and ` ComputedNumericValue ` in ` AddDefaultValueChange . java ` to improve error handling and
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future updates
do n ' t force serviceprovidermetadata generation when serviceprovidermetadataresource exist
make graphprinterdumphandler ' s printer protect so subclass can override it
added BigDecimal import and updated order ' s average price calculation in HuobiAdapters . java to ensure correct handling of decimal values and improve order
updated ProjectionOperation and TypeBasedAggregationOperationContext to use getTarget ( ) instead of getName ( ) and modified field handling in TypeBasedAggregationOperationContext to improve
modify the player addition logic to check if a player is already in the viewer list before proceeding to improve performance by avoiding unnecessary actions when the player
added constant state management to FolderAdaptiveIcon , FolderAdaptiveIcon , and ShiftedBitmapDrawable classes to improve performance by managing constant states
refactor SPDYClient to improve connection handling and session creation to enhance code clarity and maintainability by centralizing connection and session management logic
add null check for the object in ProtostuffObjectOutput and create a new test class ProtostuffObjectOutputTest to ensure proper handling of null values
pdfbox - 4071 : fix checkstyle violation in javax / image / exif / decompressobjectstreams / extracttext / extractimages
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future updates
added conditional checks for axes visibility in DrawAxis . java to prevent unnecessary processing when axes are not shown
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` to ensure proper handling of
removed unnecessary whitespace in returnToWorkspace method call to improve code readability and maintain consistency
added SSL connection handling for " https " protocol in CustomUrlJob . java and created a new CustomUrlTrustEverything class for SSL verification to
updated clock rate retrieval methods to use ` getRealUsedClockRateString ( ) ` instead of ` getEncoding ( ) ` to simplify code and
refactor TextureAtlas class to improve code structure to enhance maintainability and readability of the code
updated the method to return module name instead of product name and added a method to set module names in AppleLibraryBuilder to ensure correct module name generation
[ hotfix ] [ runtime ] fix deadlock in testslot
fix : add support for find ( ) and findids ( ) with inheritance
refactor WebSocketServletRFCTest to use ByteBuffer for response header to improve readability and maintainability of the test code
[ wasm ] fix switch / cases indentation in wasmfunctioninstance and wasmfunctionnode
[ clickhouse ] add ttl to log table creation .
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified field handling logic in CustomPreconditionWrapper and XMLChangeLogSerializer to
updated imports and added server and context management in DeploymentExceptionTest . java to enhance test setup and teardown functionality for Jetty server management
added exception handling for initialization in CommonsApplication . java and initialized Fresco in NearbyController . java to improve robustness by catching
added a null and empty check for the objectName before trimming it to prevent potential NullPointerExceptions when objectName is null or empty
updated error messages in Command . java and TestPrint . java to improve clarity of error messages for file access issues
[ hotfix ] [ table - common ] use static final constant for plannerfactory and executorfactory
updated variable names and modified subject and issuer handling in KeyTool . java and Resources . java to improve clarity and correctness in handling certificate subject and
added a deprecation annotation to RuntimeOptions . java to indicate that the method is outdated and should no longer be used
replaced manual byte array conversion with a direct call to ` str . getBytes ( utf8Charset ) ` to simplify the code and improve readability by
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a mechanism for evaluating permission based
added a new option ` ERASE _ LINE _ ON _ FINISH ` and modified buffer handling in ` LineReaderImpl ` to
[ hotfix ] [ master ] fix bug in masterfilesystem . getservers ( string )
updated exception types from CALC _ MERKLE _ ROOT _ FAILED and CALC _ MERKLE _ ROOT _ FAILED
refactor ExpandWar . java to use URLConnection for retrieving the war ' s last modified timestamp to improve code readability and maintainability by standardizing
handle httpclientresponseexceptions in fullnettyclienthttpresponse after handler finish
changed the layout container from centering to centerAbsolute in Picker . java to ensure the spinner ' s container is centered at the absolute position
[ hotfix ] [ network ] fix networkbufferpool . requestmemorysegments ( ) to correctly decrement numrequiredbuffers
testjmxbeanintegration : fix flaky test ( testjmxbeanintegrationtest )
replaced the AndroidJUnit4 runner with a RetryTestRule in AbstractIT . java to improve test reliability by using a more robust retry mechanism
refactor AutoCommit handling in QueryStateMachine and CallTask to simplify constructor parameters and improve clarity to enhance code readability and maintainability by standardizing
added package - info . java file and fix checkstyle violation
added support for both " javax . microedition . khronos . opengles . GL " and " javax . net . ssl .
[ hotfix ] [ runtime ] use lambda expression instead of anonymous inner class for timer registration
refactor URI handling in ` Request . java ` and add a new test in ` RequestTest . java ` to improve clarity and correctness of
updated methods in MainApp , DataStorageProvider , and WhatsNewActivity to use legacy storage points to improve compatibility with newer Android versions and
added methods sessionAvailable and sessionUnavailable to handle session availability and unavailable states to enhance session management functionality and improve code clarity
added a package to scan for " liquibase . pro " in ServiceLocator . java to enable the inclusion of the " liquibase . pro " package in
renamed the method ` deleteSyncFolders ` to ` deleteOtherSyncedFolders ` in ` MainApp . java ` and ` Synced
updated the ` loadWithNewGlobal ` method to accept an additional parameter of ` Object [ ] . class ` to allow more flexible argument handling for
fix for http : / / and http : / / resolve relativepath on window
updated weigher method calls to use getRetainedSize ( ) instead of length ( ) for footer and stream to ensure accurate representation of retained size
rename methods and variables from " hasRandomized " and " isExceedRandomizationDepth " to " hasAlreadyRandomized " and "
added support for handling " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor and a corresponding test cases in TestWindow
clear headers in AbstractProxyServlet to ensure proper handling of proxy requests
added a conditional check to skip attaching if SA attach is not expected to ensure tests are skipped when SA attach is not expected to work
added null check for bgColor before accessing its alpha value in GraphicsDevice . java and created TranslucentWindow . java for testing to ensure
added null checks for user information in UserInfoActivity to ensure proper error handling when phone , email , and website are not available
added custom serialization for Boolean values in PrecompiledHeaderData . java and removed precondition check in PreprocessorDelegate . java to ensure PrecompiledHeaderData
[ flink - 20527 ] [ table - planner - blink ] [ table - planner - blink ] allow append mode
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate the functionality of building multiple outputs in a buck project to ensure that named output
updated regex pattern in FileSettings . java and added logic to append newlines to content if it differs from existing settings to ensure consistent formatting
[ hotfix ] [ flow ] fix checkstyle violation in statelesscontrollerserviceinitializationcontext
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode switching in persistent mode
added new device status entries for " leaving dock " and " energy - save - mode " in DeviceStatus . java to enhance user experience by providing
catch all exception in modelloader , not just the normal one .
removed unused imports and added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to clean up the code and temporarily disable the
do n ' t use getcurrentsurfacescale ( ) for 2x
rename RussianLowerCaseFilter class for consistency to improve readability and maintainability of the code
refactor CsvBulkLoadToolIT and QueryUtil to simplify server properties and client properties handling to improve code readability and maintainability by eliminating unnecessary
replace File . separatorChar and File . pathSeparatorChar with underscores in displayName to ensure consistent formatting of file names across different operating systems
add a resettableinputstream to allow the wav loader to read from an input stream .
added a boolean parameter ` repeatFirstLineIndent ` and modified indentation logic in ` ColumnText ` to allow for repeat first line indenting based on
updated the equality check in the Oid class to cast the OID to Object to ensure type safety and prevent potential ClassCastExceptions
[ hotfix ] [ core ] fix npe in hikaripool . init ( )
[ gr - 26158 ] fix controlflowanchornode to controlflowanchored in loop
added a line to set the focus of buttons to false in WindowsPlacesBar . java to ensure the buttons are properly focused when they are not
updated the condition to check for UniqueConstraint and ForeignKey instances in DatabaseSnapshot . java to ensure proper handling of unique constraints and support for foreign keys in
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and implemented the ` getAccountLedgersWith
[ community ] add dc . title to create / admin group
do n ' t throw an error if there be no hypothesis utterance
added unit test base on user forum issue
updated database update thread handling in FeedRefreshUpdater and added getter / setter methods in ApplicationSettings to improve thread management and allow dynamic configuration of update threads
updated the FASTSCROLL _ THRESHOLD _ MILLIS constant from 40 to 10 milliseconds to adjust scroll threshold for improved user experience
replaced the initialization of SystemClassName with a direct reference to " Ljava / lang / System " to improve clarity and maintainability of the code by
hhh - 13644 : implement getresultstream ( ) in procedurecallimpl and add test case
added null check for apiProperties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing API properties
added two new files , BinaryFrameGenerator . java and TextFrameGenerator . java , for generating BinaryFrameGenerator and TextFrameGenerator to enhance WebSocket
simonstewart : use webdriverwait . until ( ) instead of localdriver . findelement ( by . id ( " peas
geo3dshapegenerator : use random ( ) instead of random ( ) . abs ( ) in randomgeo3dshapegenerator
added a keepAlive method to the ResourceBundle class to ensure thread safety during resource management
change return value from false to true in SQLiteDatabase . java to ensure the method always returns true
[ java ] refactoring to reduce code duplication and improve readability
added MkdirStep creation to multiple classes and updated the expected number of steps in FatBinaryTest to ensure the correct parent directory is created for
updated coordinate retrieval and exception handling in MeshLeveler . java to include more descriptive error messages to improve code readability and maintainability by
[ pmml ] do not require jpmml lib from classpath for applypmmlmodelcommand
corrected the variable name from locationMode to thermalStatus in ShadowPowerManager . java to improve code readability and maintainability by using a more
added OS - specific temporary directory handling for macOS in MountableFile . java to ensure correct temporary directory creation for different operating systems
do n ' t use buffer for file channel on window . patch by jbellis
added a null check for the organization of Plugis in the pom . xml file to ensure that plugis are required to have a valid organization
removed unused license agreements from SepPostingsWriterImpl . java to clean up the code and improve readability
deleted the TerminateWebSessionListener . java file to remove unused code that is no longer needed
updated the argument passed to executeChildProcess to retrieve the Java class path instead of an empty string to ensure compatibility with the system ' s default classpath
replace ArrayUtils . EMPTY _ BYTE _ ARRAY with new byte [ 0 ] for cryptKeyInit , cryptKeyPriv , and md5
added a new test method to verify javadoc changes in AddLicenseHeaderTest . java to address issue # 3198 related to issue # 3198 and
updated LAUNCHER3 _ PHYSICS feature flag from false to true to enable the LAUNCHER3 _ PHYSI
added a ` < div class = ' noPrint ' > tag in the ` HtmlThreadInformationsReport . java ` file to provide a visual
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and added new versions LUCENE _ 31 and
added macosx symbolicator and task handles in BsdDebuggerLocal . java and modified platform detection in PlatformInfo . java to support both
fix memory leak in client handler and message codec
do n ' t log unhandled networkdispatcher exception in debug log .
[ java ] initialize adminbuffers only if conductorbytebuffers be null .
added a break statement in TouchImageView . java to handle a case when a switch statement is encountered
chore : [ dialogflow ] update gapic - generator - java to 2.1 . 0 , update gax - java to 2.18 . 1
removed SSL handshake listener logic from FeedableBodyGenerator . java to simplify the flushing process by directly flushing the feeder when the SSL handshake
added handling for " java . lang . Object " in TypeUtils . java to ensure correct assignment checks for generic type variables
replace nonblockinghashset with concurrentset in memtablespendingflush . putifabsent ( )
added null check for ` tree . errs ` and modified error handling in ` MemberEnter ` , ` Erroneous ` , and created new
changed the browser type from NO _ BACKGROUND to NONE in BugInfoView . java to disable the background view for improved user experience
changed the method call from ` finish ( ) ` to ` cancel ( ) ` in ` AboutActivity . java ` to ensure the dialog is properly
fix bug in integerstamp . foldstamp ( - 1 , - 1 , 0 ) .
added a new method ` readStream ` to read an input stream from an input stream and updated image retrieval to use it to improve input handling and
updated CaseStmtToken to include local variable handling and added methods for setting locals and undefining variables to improve variable management and ensure proper
added error handling for Oracle cipher provider initialization in RSAClientKeyExchange . java to improve robustness by handling InvalidKeyException and UnsupportedOperationException during cipher
updated AdditionalDependencies in WinGammaPlatformVC10 . java to include psapi . lib to ensure proper dependency management for the psapi library
updated string concatenation to use the line separator from the system property to ensure consistent line endings across different operating systems
updated TemplateEngineFreemarker to set default encoding and output encoding to UTF - 8 in TemplateEngineFreemarker . java and modified the malicious JavaScript alert
crdgeneratortest : add log to help debug test failure
make $ hold _ samples and $ type final to make it non - static .
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure the emailable reporter is only added
modified CommandLineBuilder to handle quotes correctly in command line input to ensure proper handling of quoted characters in command line output
removed public access modifier from interface and class declarations to enhance encapsulation by restricting access to package - private interfaces
added a call to setNumReduceTasks with numFetchers in FreeGenerator . java to ensure that the job has the correct number of reduce tasks
[ graphql ] fix nullpointerexception when generate schema with default value
update FILEVERSION from " 505365 " to " 532077 " to reflect the new version of the application
updated extension check for texture float and GL _ ARB _ texture _ float in FloatTextureData . java to include support for GL _ ARB
added write ( filename , value ) and closefile ( ) method to fileserver
added a null check for ` outputDirectory ` and ` jarStream ` before setting it in ` ClassDump . java ` to ensure that the output
added performance measurement for SQLite operations in ShadowSQLiteConnection to improve performance monitoring for SQLite operations
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeap
[ geos - 6763 ] add resourceerrorhandling enum to help with error reporting
updated buffer position calculation in RAMInputStream and added a test for EOFException in TestRAMDirectory to ensure proper buffer handling and improve test coverage for
updated error handling in DefaultServlet and JspServlet to include a localization string for missing resources to improve user experience by providing more context in error messages
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added AccessControlContext class for permission tests to enhance thread management and enforce permission checks
updated the constant CHECK _ EVERY _ N from 10000 to 0xFFFF and modified the checkFreeMem ( ) method to check only once to
replaced HRegion variable name from ' r ' to ' openRegion ' in TestSplitTransaction . java to improve code readability and maintainability by
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
add a parameterized test for the Jetty Demos integration in DemoModulesTests . java to ensure that the Jetty Demos functionality works correctly with
added spanX and spanY checks to the folder creation logic in CellLayout . java to ensure correct spacing based on the specified span values
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
throw a meaningful exception if a table depend on another table with a higher id would cause the database to be re - opened
added validation for row index and cleaned up data string handling in TiledLoader . java to ensure that extra XML gid values are ignored and warn users
added synchronized keyword to setWorkingSet method to ensure thread safety when accessing the setWorkingSet method
added a new Java class named Solution that reads two integers and calculates their final steps to implement a solution for determining the number of steps based on
add a AddressChecker interface for address validation in TrackerRequestProcessor to improve address validation logic for tracker requests
fix rendertype . gettranslucentmovedblock ( ) not work in multilayermodel
add ` ` remove tag ' ' functionality to the config entry tool tip
changed the data type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and ` Capability ` classes
added null check for recieptents before mailing and changed time conversion methods to milliseconds to improve robustness by preventing potential NullPointerExceptions
refactor the logic for determining if a route is single by introducing a separate method ` isSingle ` to improve code readability and maintainability by
added profiler . start ( ) and profiler . stop ( ) in dockerclientfactory . java , and improved logging in remotedockerimage .
added support for a resources mode in the AndroidMetadata class and updated related methods accordingly to enhance flexibility in managing resource modes in the application
do n ' t use dateutils . truncate ( ) in historicprocessinstancequeryimpl . gethistoricalprocessinstance ( )
updated import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure that the project file is
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve user feedback when an exception is encountered
refactor TreeMap implementation for improved readability to enhance maintainability and facilitate future modifications
add the ability to enable / disable async stack trace in the console
added a method to set the glow color in BubbleTextView and updated Folder to use this new method to improve user experience by allowing customizable glow
added style class for link and desc elements in LinkedFilesEditor to ensure consistent styling of file links and their descriptions
added a new table and a test for the " alltypes " metadata in ResultSetMetaDataTest . java to ensure correct retrieval of column class names from
removed unnecessary success check before writing bits in Lucene40LiveDocsFormat . java and removed unnecessary file deletion in SimpleTextLiveDocsFormat . java to
added a null check for the _ info before checking if the status is SWITCHING _ PROTOCOLS _ 101 to avoid potential NullPointerException
added a constructor to ShadowLocation that initializes the provider variable to allow customization of the provider in the constructor
added a condition to check if the deviceRam is less than 2048 to ensure maximum RAM limits are enforced for 32 - bit devices
add map stats when no map have data
[ fileprofileactivator ] add logging to fileprofileactivator
replace ` ` noname1234 ' ' with ` ` invalid _ name ' '
changed the collection type for roles from List to Set in GuildImpl . java to ensure the roles are stored in a set instead of a list
updated return values and added a limit for uploads in ExpandableUploadListAdapter . java to improve code readability and maintainability by using a
added multiple assertions for the delete method in DashboardUserMapperTest . java to ensure that the delete operation returns the expected result regardless of the delete
renames occurrence of ` ` recipient ' ' to ` ` primaryparticipant ' ' to ` ` primaryparticipant ' '
[ gr - 26135 ] allow auto - deref handle to be auto - dereference .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size to provide access to the
remove system . exit ( 0 ) from terasology launcher command
updated action bar title assignment logic in DrawerActivity . java and added a condition to update old interactions text to improve user experience by ensuring consistent
refactor CommandLineParserTest . java for improved readability to enhance maintainability and facilitate future updates
added interpolators for smoother transitions between all apps and normal states in the animation configuration to improve animation smoothness based on user - defined threshold
refactor javaName method to use javaNameFromExternal instead of toUnderscoreSeparated to improve code readability and maintainability by using a more
added native methods for frame management and release in CWrapper . java to enhance functionality and ensure proper handling of native objects
added checks for constant values in the Checker class and created a new ValueTest class for testing to ensure correct handling of constant values and improve error
refactor test classes MontgomeryMultiplyTest , MontgomeryMulAdd , TestMulAdd , and TestSquareToLen to improve code organization and read
removed null check for constructors in PojoUtils . java to simplify the code by eliminating unnecessary null checks
refactor JiraConfiguration class to improve code readability to enhance maintainability and facilitate future updates
updated error message formatting from " [ FAILED ] " and " ( COVERAGE ) " to " ( FAILED ) " and " (
updated bounds calculations in DeviceProfile . java to include search bar offset to improve layout consistency and ensure correct positioning for the search bar
update log messages to include " from pulse source " in PulseAudioAudioSource . java and modify disconnect logic in PulseaudioSimpleProtocolStream
refactor OverviewCommandHelper to run tasks on the UI thread using getLauncher ( ) . runOnUiThread ( ) to improve responsive
added a method to retrieve the source group as an Optional < Pair < String , ImmutableList < AppleSource > > > in AppleSource . java to
increased the timeout duration for trigger firing and increased the wait time from 220000 ms to 90000 ms in TestSimTriggerIntegration .
updated positionCount parameter in RunLengthEncodedBlock and newLease methods to use positionCount instead of outputPositionCount to improve code readability and maintain
added null checks for ` bestSoFar ` in ` AbstractNodeCostSearch . java ` and modified the way ` getDistFromStartSq `
added checks to skip processing for specific component types in ResourceEditorView . java to ensure that only non - form and dialog components are processed
replaced ` UiThreadHelper ` with ` LauncherModel ` for background thread handling in ` DragView ` and ` FloatingIconView ` to
added a null check for the commit point in ReplicationHandler . java to ensure a default commit point is used when the commit point is null
added methods to retrieve imei and meid from ` ShadowTelephonyManager ` and implemented corresponding methods in ` ShadowTelephony
added debug logging statements to SimpleHostRoutingFilter for improved request handling to enhance debugging capabilities by providing detailed request details for better debugging
added ` destory ( ) ` method to multiple classes and implemented ` close ( ) ` methods in ` IndexSegment ` , ` BitmapInvert
[ issue # 625 ] improve test coverage of normalmessagesendandrecvmsg
replaced Charset . forName ( " UTF - 8 " ) with StandardCharsets . UTF _ 8 in OutputStreamWriter initialization to improve code readability and maintain
hbase - 26113 bulkload should not crash if there be multiple hbase file in the region ( # 2665 )
added a ` commission ` parameter to the ` DefaultWithdrawFundsParams ` class and updated the constructor in ` RippleWithdrawFun
removed the import of StreamTerminator from AutoClosingReferenceStream . java to eliminate unused dependencies and improve code clarity
solr - 13636 : solrlocator should not throw morphline exception when there be multiple solrserverexception and ioexception
added a check for overloaded methods and improved error handling in Java2TypeScriptTranslator . java to ensure that overloaded methods do not lead to
added imports for logging and refactored disk sweep using StacklessLogging to improve logging efficiency and ensure proper resource management during disk sweep operations
updated MutableColumnDataType to implement Serializable and changed several static fields in Entities class to improve serialization and accessibility of entity data types
refactor tests for ExactLConstantTest and SubExactLNonConstantTest to improve clarity and maintainability of the test cases
added a null check for the claimRequestString before parsing it to avoid potential NullPointerExceptions when the claimRequestString is empty
replaced ` FilterFactory ` with ` RelBuilderFactory ` and introduced a singleton instance for ` HiveFilterSetOpTransposeRule ` to utilize
updated the ` processTypeHintForNestedDocuments ` method to handle null inputs and added tests for handling null values in ` UpdateMapperUnitTests
refactor CoreStatus handling in CollectionsAPIDistributedZkTest and add getCoreStatus method in CoreAdminRequest to improve code clarity and functionality by
initialize transformers and locators with empty ArrayList instances to improve memory management and prevent potential memory leaks
[ hotfix ] fix typo in abstractquerydslprocessor
[ gr - 24137 ] fix the problem that pegraphdecoder do not decode the stack trace correctly .
updated method names from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency in method
camel - 14197 : use objecthelper . getidentityhashcode ( ) to get identity hash code of mailmessage instance .
add null check before set the redelivery policy and the original destination for prefetch subscription .
updated return statement to include setIsPropertyName ( ) method to ensure that the identifier name is correctly set as a property name
added WaveGeneratorActivity and refactored InstrumentsFragment to start WaveGeneratorActivity instead of Toast messages to improve user experience by providing a simple
added null checks and logging for sheet properties in KeyedProperties . java and SheetOverlaysManager . java to improve error handling and provide clear
add tests for Kubernetes ' s ExecListener and ExecWatch in PodIT . java to ensure proper logging and execution behavior of Kuber
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to verify the behavior of ` SolrCore ` when no index is found
added a call to ` super . dispatchMethodKernelOkra ` in ` GraalKernelTester . java ` to ensure proper handling of method dispatch
make dns and mx record sort by priority . patch by jbellis ; review by jbellis
refactored thread creation in XToolkit . java to use a privileged action and adjusted sleep duration in TestShutdown . java to improve thread management and
added validation call in SelectBox and set the dropdown to " Linux6 " in UITest to ensure that the dropdown is selected correctly for Linux6
replace IllegalStateException with Collector . printStackTrace for stack trace printing to improve error handling by providing more informative stack traces
added a SplitState parameter to the createState method and updated related logic in FlowBuilder and SplitState classes to enhance state management by associating parent
changed the ` connectionState ` variable to be ` volatile ` and updated its usage in the ` getConnectionState ( ) ` method to ensure thread safety
camel - 18124 : camel - core - enable - poller - increase default polling period to 1 second . thanks to jbellis for
refactor encoding methods in MemoryStack and MemoryUtil classes to use local variables for memory allocation to improve code readability and maintainability by centralizing
added exception handling for ` DocletAbortException ` in ` HtmlDoclet ` and ` AbstractDoclet ` classes to improve error reporting by providing
[ java ] unusedmodifierrule fix for enums
replaced lambda expressions with method references in multiple classes to improve code readability and maintainability
update abstracthttpclientservertest to pass ssl = { 0 }
added exception handling and improved logging messages in TransformationHelper . java to enhance error reporting and provide clearer feedback on transformation failures
rename userPermissions to activeConnectionPermissions for clarity to improve code readability and maintainability by using a more descriptive variable name
replaced equality check with EqualsBuilder for equality check in Point . java to improve code readability and maintainability by using Apache Commons Lang ' s EqualsBuilder for
added null check for outputRoot in process method to ensure outputRoot is valid before processing to avoid potential NullPointerExceptions
add an annotationfilter interface to allow to filter out pdannotation from the page
updated StackTraceCleaner . java file to improve stack trace cleanup functionality
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43535 -
hhh - 14497 skip test that fail on oracle
updated the parameter name from ` slot ` to ` slotSize ` and modified the logic for the ` upgrade ` method in ` ForkController `
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` , ` ContextImpl ` , and ` DocBuilder ` classes to
[ scb - 241 ] add support for long polling in the kieclient
refactor gesture handling in PagedView and BaseOverview to use scroll method instead of fling method to improve user experience by optimizing gesture
removed redundant initialization of UnlocksDialog in UI . java and added a button to PausedDialog in PausedDialog . java to streamline the
clear the drops list in PlayerEventListener to ensure proper handling of drop events
added a default parameter named DEFAULT _ PARAM in StreamResult . java to provide a default value for the input name parameter
updated exception type in testNormalizeOrder method from MalformedURLException to IOException to improve clarity and consistency in exception handling
updated the marker output format in TsFileSketchTool . java and adjusted the string buffer handling in LocalTsFileInput . java to improve
added a new ` headersToExclude ` set to exclude Swift header files in the ` UmbrellaHeader ` class to ensure that Swift headers
corrected the method name from ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java `
added encode ( ) method call in RequestPlugin . java to ensure proper encoding of request data
refactor SQL expression handling in RolapNativeSql and RolapNativeTopCount to support both DB2 and DB2 dialects to improve compatibility
added validation to check for null or empty password in LdapAuthenticationProviderImpl . java and created corresponding unit tests in TestLdapAuthenticationProviderImpl . java
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper cleanup of complexWriters after processing
added @ SuppressWarnings ( " serial " ) annotations to multiple classes to suppress warnings related to serialization issues in the codebase
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and updated the conditional check in ` ClassGraphClassLoader . java ` to
added error handling for " _ errors " in ErrorResponseException . java and modified return logic in ErrorResponseException . java to improve error reporting and
[ hotfix ] [ core ] add constructor to eventsourcingrepository that take an eventstore and a snapshottriggerdefinition
refactor symbol handling logic in mmm Attr . java and ppp Attr . java to improve code readability and maintainability by removing redundant method calls
update search text handling in ` SearchedPeopleCursorAdapter ` and ` QustomDialogBuilder ` to correctly append " @ " to
added standby mode functionality to the ` NuvoConnector ` and ` NuvoHandler ` classes to enhance command handling based on standby mode status
tiff : switch default planar configuration from tiffextension to tiffbaseline . planarconfig _ chunky
added a call to the close ( ) method in ItemListTag . java to ensure proper resource management and prevent memory leaks
add an averageutil class to provide a way to compute the average energy of a table
added two new files , SigInt . java and SigIntBarrier . java , to handle SIG - INT and SIG - INT signals to
refactor graph handling to support hierarchical and non - hierarchical graphs in the ExporterGEXF class to improve code clarity and maintainability by
replaced byte array with Text for handling null values in TCTLSeparatedProtocol . java to improve performance and readability of the code
[ fix ] fix index out of bound exception in createfeedbackribricquestion
updated the condition in CatalogComparator to check for CatalogAndSchema case instead of DB2Database to ensure correct handling of schema and catalog case comparisons
simonstewart : make the browsermobproxytest more tolerant to change
use integer . tostring ( ) instead of string . format ( ) in modelrepositoryimpl . criticalerrors . append ( )
removed redundant call to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline code by eliminating redundancy
refactor InternalByteArray and TruffleString classes to improve code readability and maintainability
[ hotfix ] [ graph ] use tuple2 instead of tuple3 for type inference in outedgesfunction
refactor multiple Java assertion classes for improved consistency and clarity to enhance maintainability and readability of the codebase
added a new file ` DiacriticTest . java ` and modified ` ClassA \ 314 \ 201 . java ` to implement
fix flaky test clustermembershiptest . testopeneventually ( )
added error handling and improved workspace reader logic in DefaultMaven . java and DefaultGraphBuilder . java to enhance robustness by ensuring the correct workspace reader
updated SSL handling in ServiceRegistryConfig and improved test assertions in TestServiceRegistryConfig to ensure correct IP port validation and improve test coverage for dynamic configuration
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
removed an unused parameter from the constructor of Jdbc3Connection to streamline the code by eliminating unnecessary parameters
refactored the servlet instantiation logic into a separate method ` ensureInstance ( ) ` to improve code readability and maintainability by consolidating
added logging functionality and modified delta server time handling in BinanceExchange and BinanceBaseService to improve accuracy of delta server time calculations and enhance debugging
added support for binding " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) Servlets For JavaServer Pages ( tm
added null check for the component form before deregistering animations to avoid potential NullPointerExceptions when the component form is null
modified the ` decodeResource ` and ` decodeResource ` methods to accept ` BitmapFactory . Options ` as a parameter and updated related methods accordingly to
[ java ] make number of message in example configurable .
added click and click handling for tweet elements in TimelineArrayAdapter to improve user interaction by allowing users to click on specific text links and linkify
added " text " to the unmodifiableDataTypes list in PostgresDatabase . java and modified conditional checks in NumberType . java and ColumnSnapshotGenerator
remove @ ignore from entryprocessorbouncingnodestest ( # 3683 )
updated the state checks in AmbariManagementControllerImpl and modified related state handling in AmbariManagementControllerTest to ensure proper state management and
[ mielecloud ] do n ' t create a bridge if the thing registry do n ' t exist
make crawlserver # updaterobots synchronize on the crawlserver
updated null checks for display names in TestInterfaces , Equals , and IndexTest classes to improve robustness by preventing potential NullPointerExceptions
added a default shader parameter to the SpriteBatch constructors and updated shader creation logic to ensure that the default shader is used when no shader is
added " - c synchronous _ commit = on " option to properties in TestUtil . java to enable synchronous commit functionality in the application
added type coercion functionality to SortedSetTypeCoercer and updated related test cases to improve type coercion efficiency and ensure
updated confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to differentiate between folder and local file deletions to enhance user experience by providing clearer confirmation
added a check for the value of ' c ' in URLPathEncoder to ensure that only valid characters are processed to avoid potential errors
use random port instead of hardcoded 666 in registerfragmentstorage
updated the expect statement in HostResourceProviderTest to expect an empty map to ensure that the test returns an empty map when no cluster is available
[ hotfix ] remove unused logger parameter from yarnentrypointutils . loadconfiguration ( )
add init ( ) and repaint ( ) to sipcommframe so that it do n ' t need to be final .
removed the ` ShadowHtml ` class and updated test assertions in ` HtmlTest ` to simplify the codebase by eliminating unnecessary shadowing functionality
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface to provide a
updated logging levels in HttpClientLoadTest to include H3 and Quic loggers to enhance logging capabilities for better debugging and monitoring
changed the visibility of the addListeners method from private to public in MockSettingsImpl . java and added validation tests in MockSettingsImplTest . java
[ hotfix ] [ javadoc ] fix typo in statehandlestore
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . jetty . http . security .
add ` ` team ' ' info to the page , use the new constant instead of ` ` none ' '
use try - with - resources in try - with - resources to avoid resource leak
camel - 11452 : camel - wsdl - allow to configure a specific port on the wsdl url .
added ` libraryTarget ` parameter and refactored related methods to use ` getLibraryJarParameters ` and ` getAbiJarParameters ` to
remove ' validating - cerficates ' from the error message
api : remove overridden getpagesizeval from listcapacity api
added a new case CLOSED to the IteratingCallback class to handle the CLOSED state gracefully
added an ` isAuthorized ` boolean field and modified method signatures in ` AccessControlContext ` and ` ProtectionDomain ` classes to ensure proper authorization handling and
refactor OSGiDeployer to check if the app is an instance of AbstractOSGiApp before sending events to improve code clarity and
added support for the " tiff " codecV and " tiff " container in DLNAMediaInfo . java to ensure proper handling of
refactor variable names and introduce synchronization for argument type handling in OptimizedCallTarget . java to improve code readability and ensure thread safety during
added a new file ` CubocDesktop . java ` and refactored ` Map . java ` to use ` ImmediateMode20 `
updated PolicyMonitor initialization to use a target directory for test classes to ensure the test files are located in the correct directory structure
added a call to removeAllFiles ( ) on trashbinListAdapter to ensure all files are removed from the trashbin list
replace org . eclipse . jdi . Bootstrap . allConnectors ( ) with com . sun . jdi . Bootstrap . allConnectors (
refactor llvmcheckglobalvariablestoragenode to make it more generic .
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and added hashing logic for user intents to enhance event data integrity
added a constant for maximum burn target lower bloom and updated the return statement to use it to ensure that the maximum burn amount does not exceed a defined
refactor UniqueConstraintSnapshotGeneratorSnowflake to utilize H2Database and simplify import statements to improve code readability and maintainability by
refactor DMLTransformer to conditionally append named values based on insert statement builder to improve readability and maintainability of the code
updated the test method from ` testValidServiceTicketWithInsecurePgtUrl ` to ` testValidServiceTicketWithSecurePgtUrl `
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and introduced a method to hide the default function name to enhance functionality
refactor JarLauncher class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] [ runtime ] use generics for type inference in java . util . concurrent
make sure we do n ' t send a hole punch packet if we do n ' t need it .
added a test method for updating PGobject in ResultSetTest . java to ensure proper functionality and validation of PGobject updates in the ResultSet
added error handling for unprocessable requests in PasswordResetEndpoints . java and created a corresponding test in PasswordResetEndpointsTest . java to ensure proper
replaced the retrieval of the first child element with a direct retrieval of the document ' s root element to simplify the code and improve readability by using
refactor Cache class to improve performance to optimize performance and reduce memory usage
rename timeInSec and prevTimeInSec to timeMillis in Isochrone . java and SPTResource . java to improve clarity and
fix light relay not work if the bindy be invalid .
added a new ` Chainer ` class and refactored ` contains ` method in ` CollectionSubject ` to use it to improve type safety and
refactor Model class to improve code readability to enhance maintainability and facilitate future updates
updated the recordedTime calculation to use 619315200000L instead of a fixed value of 619315200000L to ensure accurate time
added a check to resize the terminal status if it is a Windows terminal to ensure that the status is properly resized when the terminal type starts with
do n ' t set host version to install if it ' s not required
[ j2cl ] move java integration test to a separate project so that it can be run in a separate project .
( chore ) camel - maven - plugin : use linkedhashset for global and user location
remove unnecessary try - catch block in operationserviceimpl . toobject ( data )
updated the formatting of the method call in KnativeEnvironment . java to improve code readability and maintain consistency
rename the executor service from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in naming conventions
added a call to ` connect ( ) ` in ` CloudSolrClient ` and implemented a test for uploading configurations in ` TestCloudSolr
added synchronization to the allBindings access in Breakpoint and DebuggerSession classes to ensure thread safety during binding addition and removal operations
added methods to clear files and cache in ShadowContext and updated file handling in RobolectricTestRunner and ShadowContext to improve file management and ensure
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46335 -
[ drools - 141 ] add kiehelper . withkiemodulemodel ( kiemodulemodel ) method to internalkiebuilder ( #
updated BlockEventListener to check for Farmland instances and modified soil dry check logic to ensure soil drying only occurs when the current moisture is
added a default implementation of the ` getLocalIp ` method in the ` FinishedSpan ` interface to provide a default implementation for retrieving the local IP
updated the execution context handling in JdbcStepExecutionDao and modified test cases in StatefulRetryStepFactoryBeanTests to ensure correct handling of integer values
pdfbox - 4892 : fix typo find by codespell on fossies . org
tensorflow : add - python - gpu to presets for cpython and cpython
refactor PluginTab to replace the downloadList method with a refresh method for plugins to improve code readability and maintainability by encapsulating
changed log level from info to warn for error logging in DefaultHistory . java to improve log granularity for error handling
vmware : fix npe when create volume in vmware .
[ hotfix ] [ test ] fix flaky test sftp test
updated ExperimentalMockitoJUnitRunner . java file to improve test coverage and maintainability
refactor serial handling in GpsSettingsActivity and Session classes to use a new utility method GetBuildSerial to improve code readability and maintainability
refactor SwapGBuffers class for improved performance to enhance performance and maintainability of the code
added a null check for spatial before removing skeletonControl in AnimControl . java to ensure skeletonControl is only removed when spatial is not null to
added functionality to set smart replies in ShadowRanking and updated ReflectionHelpers to use RankingReflector to improve functionality and maintainability of the ranking
[ java ] remove unnecessary lambda in archive conductor . getallsegmentfiles ( ) .
refactor carrot2ResourcesDir retrieval to use initParams instead of resourceLoader . getConfigDir ( ) to improve code readability and maintainability by
added null check for testRect in WindowsTreeUI and created a new bug8004298 class for testing to ensure proper handling of null rectangles and
updated the ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility with new
make the get ( ) method throw a tasteexception instead of return null .
added client information retrieval to SurrogateAuthenticationEventListenerTests to enhance test coverage by providing client - specific information during tests
added a new variable ` isUserView ` and initialized it to ` false ` in ` CardPresenter . java ` to ensure proper handling of user
updated method names from ` GraphvizJavaExecutorUtility ` to ` GraphvizUtility ` for consistency to improve code readability and maintainability
refactored the creation of ` constructBatchHistogram ` and ` syncLogTimePerRequestHistogram ` in ` LogDispatcherThreadMetrics . java `
added a new module - info . java file for the SQLite connector to define module exports and dependencies for the SQLite connector
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper timing during test execution
removed conditional check for " api " in the PermissionsManager initialization to simplify permission management logic and improve code readability
updated DateParser and TestDateParser files to improve date parsing functionality and maintainability
added a new method ` getDepth ` that returns a value of 0.5 f in ` SpringLoadedState ` that returns a value of 0.5 f to
replaced manual byte array creation with a constant for minimum size to improve code readability and maintainability by using Arrays . copyOfRange
refactor ExecutionGraph class for improved readability to enhance maintainability and facilitate future updates
removed unnecessary swipe layout bindings and updated notification handling in NotificationActivity and NotificationRenderer to improve notification management and enhance user interaction with the bottom layout
updated exception handling to return " none " instead of logging a warning to improve error handling and provide clearer feedback for unexpected exceptions
fix checkstyle issue in inventory / glowcontainer
replaced ` MethodHandle ` with ` java . lang . reflect . Method ` for retrieving the setter to improve compatibility with Java ' s built - in method
changed the type casting of integer values from int to Integer in MathTest . java to ensure proper handling of integer values during the query execution
replaced the use of StringUtils . join with direct concatenation for metrics and datasets in the return statements to simplify the return statements for better readability and
added a JPanel to layout provided panel and modified visibility settings for layoutProvidedPanel to improve user interface responsiveness and maintainability of the layout components
added a null check for the location parameter in the ServerCallable class to ensure proper handling of cases where the location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for key parameters and simplified public key generation return logic to improve error handling and maintainability of the key generation process
refactor MediaTypeRequestMatcher to use a new method to ignore ignored media types to improve code readability and maintainability by centralizing ignored media types
updated task number handling and debug logging format in LlapBaseInputFormat . java to improve clarity and maintainability of task number management
added properties to the Spring Boot test annotation in EventServiceTests . java to allow bean definition overriding to enhance flexibility in test configurations
added null check before closing the indexReader to prevent potential NullPointerException when indexReader is not initialized
changed package and import statements for ` BTCMarketsStreamingService ` and ` BTCMarketsStreamingExchange ` from ` service ` to `
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to ensure that ` code ` rendering
added a new file ` CompatibilityTest . java ` to test the internal DTD compatibility to ensure that the DTD property is correctly loaded and
added new utility classes for push registration and security in the application to provide utility functions for push operations in the application
refactor replica counting logic in TableRebalancer to use a loop for instance state maps to improve readability and maintainability of the code
bump version to 2.7 . 0 and update release note
[ java ] use line separator instead of \ r in test .
handle readtimeout and timeouts in ajpaprprocessor . read ( )
set default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure default values are set to zero
updated method signatures and variable names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` and ` fetchSaclingFactor
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to ensure proper handling of broadcast idle status during testing
added unit tests for font and link tag attributes in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure correct handling
fix copy / paste error in guistatscomponent . java
added permission handling for the CALL _ PHONE action in the launcher to enhance user experience by ensuring proper permission management for phone calls
updated flight data handling and added localization support in various classes to improve localization support and localization support
updated GeoPointInBBoxQuery and GeoEncodingUtils to change BUF _ SIZE _ LONG from public to private and modified the fromBytes method
added a synchronized method ` isDockerAvailable ( ) ` to check if a Docker client is available to improve error handling when accessing the Docker client
added a new constant VPX to the CodecTypes class to support VPX codecs in the application
added a coordinatorAddress option to DistBuildFactory and updated DistBuildRunCommand to accept it to enable the coordinator thrift server to connect to
added a new method ` match ` in ` FsUtils ` and refactored timer usage in ` WrapTimer ` to use a dedicated method
added a conditional check before adding label values in TestTaxonomyFacetSumValueSource . java to ensure that only non - zero entries are added to the
added null checks and improved the handling of GeoBoolean objects in the code to enhance robustness and provide clearer representation of boolean values
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the test code and improve readability
added functionality to set the materialization time in the ObjectStore class and implemented a test for updating creation metadata in TestObjectStore to ensure proper functionality
added handling for UnsatisfiedLinkError in getModel and loadModel methods to improve error handling and logging for missing native dependencies
remove the jmssampler . is _ one _ way property and add a response code ok to the sampler .
modified the break weight return logic in GlyphView . java to handle cases where the break spot is equal to the current position to improve the accuracy of
refactor synchronization handling in RCFile . java to use a buffer for checksum calculation to improve efficiency and maintainability of the read operation
removed the @ AwaitsFix annotation from AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 related to the
refactor how steps and processors are stored by replacing direct calls to getSortedByCounts ( ) with a list of entries to improve readability
removed the ` DataFlavorComparator ` parameter from the ` setToSortedDataFlavorArray ` method and simplified the constructor in ` DataTransferer ` to
hbase - 26105 add thrift server infoport option to testthriftservercmdline
added a check for end of input in RegExpScanner to ensure proper handling of end - of - file scenarios
refactor conditional checks for enabled metrics and timers to use singleton sets to improve readability and maintainability of the code
fix a nullpointerexception in chatroomjabber . getchatroom ( ) when getnickname ( ) be null
add a check for null or empty string in papplet . getfile ( ) and improve error message
refactor token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve clarity of error reporting for missing paths
[ hotfix ] [ runtime ] remove dead code in yarnflinkapplicationmasterrunner # clearjob
added a synchronized method nativeGetHardwareBuffer that returns null in ShadowNativeImageReaderSurfaceImage . java to provide a mechanism for retrieving the hardware buffer
updated BTCChinaExchange to set the SSL URI for the polling market data service to ensure proper SSL connections for the BTCChina exchange
pmd : make ` ` cpd ' ' output file relative to the project ' s base directory
added OauthController and Oauth2PluginTest classes for OAuth controller and plugin integration to enable testing of OAuth2 functionality in the application
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future modifications
added flatMap and flatCollection methods to AbstractStreamEx and removed them from EntryStream to streamline stream handling and improve test coverage for their functionality
log error message when exception be throw in exceptiontoproducerresponseconverters
updated the conditional check in RobolectricClassLoader to include both " org . specs2 " and " scala . " to ensure compatibility with Maven
inverted the condition check for audio encodings in MediaControl . java to ensure correct behavior when checking for audio encodings
updated the default value type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java to ensure correct handling of database functions and
added checks for station definitions in NormalizedMultiValuesTest . java and modified test cases in WFS11 _ XPATH _ ENGINE to validate
added a volatile boolean field ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added checks for processor configuration before expanding regex mapping in ColumnarDataSource and modified return types in RowProcessor to ensure proper handling of processor configurations and
updated the ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and introduced a new ` SEEK _
added XLCDCommunicator and XLCDController classes , and refactored FirmwareUtils to use a switch statement to improve code organization and
[ drools - 118 ] make kiemodulemarshaller . loadschema ( ) accept a path to the kmodule . xsd
added retry logic for empty message checks in multiple classes to ensure that the test correctly verifies that the message is not empty before proceeding
refactor WorkerProcessPoolTest to use join with WAIT _ FOR _ TEST _ THREADS _ TIMEOUT for thread state synchronization to improve
modified the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest ` to
reduced the values of FREEZE _ V2 , UNFREEZE _ V2 , and RESOURCE constants from 20000 to 10000 to
removed redundant calls to PMS . getConfiguration ( ) and added an exception declaration in the command method to ensure proper handling of configuration exceptions and prevent
deleted the ` SpringTransactionHooks ` class and updated ` SpringTransactionHooksTest ` to use ` AbstractSpringTransactionHooks ` instead of ` SpringTransaction
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue . java ` that implements a test for uninitialized string values to ensure proper handling of uninitialized
added support for provided dependencies in AndroidLibraryDescription and updated related tests in GraphEnhancementQueryEnvironment to enhance dependency management and improve test coverage for specific
added a new BooleanFlag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of keyboard
replaced the system anomaly message handling logic with a static boolean flag to improve performance by avoiding unnecessary logging when the system anomaly message is
added a constant for " cinepack " format in FormatConfiguration . java and updated LibMediaInfoParser . java to use it to support the
added camera bobbing functionality to the Player class to enhance user experience by allowing customizable hand movement animation
replace ` b . data . describe ( ) ` with ` b . digest . toString ( ) ` in ` GrpcCasBlobUploader .
deleted the HSQLDBServerFilesFilter class and updated its usage in TestUtility to simplify the code structure and improve readability
make walletappkit # restorefromkey and walletappkit # restorefromseed optional
updated the method from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` and added a trace log statement
added a method to check if a method invocation is already present in HasTypes . java to ensure that only relevant method invocations are processed
replaced hardcoded array size from 6 * 3 to NUM _ VALUES in AmbientCubemap . java to improve code readability and maintainability
[ profiler ] add feature to reset the profiler mode .
added checks for zero values in GenericUDFMask ,MaskFirstN , and GenericUDFMaskLastN classes to return default values of 0
use temporaryfolder in boundedoverheadblockstoretest and derbyblockstoretest
add itemstack . isitemable ( ) and gethassubtypes ( ) to support itemstack .
fix # 167447 : use line _ width instead of alpha ( # 167447 )
simonstewart : set the firefox startup page to 0 in the firefox profile
updated the condition in Http1xClientConnection to handle both CONNECT and GET requests to ensure proper response handling for HTTP / 1 upgrade scenarios
updated task acceptance from " compile " to " process - classes " in JoobyMojo . java to improve clarity and consistency in task naming
use closeidleconnections ( 1 second ) instead of shutdown ( ) in httphc4impl
added a check to prevent adding aggregate function identifiers when no aggregate function suffix is present to ensure metrics are only added when no aggregate function suffix is present
added a method ` setFullscreenParams ` to ` TaskOverlayFactory ` and updated ` TaskThumbnailView ` to use ` mCurrentFullscreenParams `
added a new Java class named Solution that counts the frequencies of an integer based on user input to provide a solution for counting the frequency of
initialize SocketChannel ch1 to null to prevent potential NullPointerException when accessing the SocketChannel
updated MutisignOperationerGodicTest . java file to improve test coverage and maintainability
added exception handling for NoSuchElementException in StaxEventItemReader . java and created a corresponding test in StaxEventItemReaderTests . java to
replaced specific text imports with a wildcard import and modified return logic in ShadowTextView . java , and added null check in TestAttributeSet . java to
replaced com . nimbusds . jose . shaded . json with net . minidev . json in ClaimConversionServiceTests
updated OS type check from " Linux " to " AIX " and added a mapping for " Linux - s390x - 64 " in
router : replace getprivateipaddress with getroutercontrolip in setaccessdetail
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to provide a way to invoke a ` RunnableWithResult
remove presencemessagecomboboxtests since it ' s no longer use .
replaced integer arithmetic with Math . round for positioning calculations in PortraitPagedViewHandler . java to improve precision and accuracy of rectangle dimensions
reformatted method calls in TestClusterDumper . java for consistency to improve code readability and maintainability
updated the return statements in KeyValue . java to include additional class size calculations to enhance the size calculation for improved data handling and memory management
camel - 14237 : camel - core - add type converter service to camelcontext so we do n ' t have to re - add it
added support for conditional tasks in SparkCrossProductCheck to enhance task management capabilities in Spark
added handling for ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED
added checks for ` jsonResponse ` in the ` LoginInfoEndpoint ` and corresponding unit tests in ` LoginInfoEndpointTests ` to ensure proper handling
added a ` toDescriptiveString ` method to the ` AssignmentManager ` class to provide a description of the region ' s state and
renamed the variable ` message ` to ` msg ` and updated related methods in ` HuobiAccountInfo ` and ` HuobiAccountService
added reserved words for " PERIOD " in MariaDBDatabase and implemented a test for adding a period column in AddColumnGeneratorTest to ensure correct
( chore ) camel - beam - util : add more environment option for portable worker
added new change log messages for Android 7.1 - compatibility with Launcher shortcuts and bug fixes to enhance user experience by providing clearer guidance
added import statement for NUM _ MILLIS _ IN _ DAY and changed access modifier of NUM _ MILLIS _ IN _ DAY from private to public
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] invoke aeron client invoker only when necessary .
added support for implicit lambda parameters and updated type creation logic in the code to enhance type safety and ensure proper handling of implicit lambda parameters
refactor hideMenuItem and hideMenuItem methods in FileMenuFilter and FileDetailFragment to improve encapsulation and encapsulation of menu
updated the types in BTCETransHistoryResult and modified the corresponding test assertion in BTCETransHistoryJSONTest to reflect the new transaction types and
replace List with Set for ` series ` and ` exceptions ` fields in ` RetryFilterFunctions . java ` to ensure uniqueness of HTTP status codes
added a @ Deprecated annotation to the PluginLoader class to indicate that the class is outdated and should no longer be used in future development
[ iotdb - 4892 ] fix last query when sequence time be large than sequence time ( # 4892 )
added a newline character to the request string in HttpResponse . java to ensure proper formatting of request string output
added a static block to set the logging level to ERROR in BuildImageMojo . java to ensure proper logging behavior when logging fails
added a line to set the title bar as safe area in the Sheet class to ensure the title bar is in a safe area for better user
modified the loop structure to reverse the iteration order of TimeSeriesChunkMetaDataList to ensure correct iteration order of TimeSeriesChunkMetaDataList
added a SQL ALTER TABLE statement and an assertion to validate the parsing and deparsing of a specific column in the AlterTest class to ensure
make abstracthikariconfig . copystate public to allow access to the copystate method .
fixed - rexecutorservice . execute ( ) should return a completablefuture . tocompletablefuture ( ) call . tocompletedfuture
move suffix from filelister to constants . suffix _ split _ file and use it in filelister .
refactor multiple Java files related to ORC and Orc operations to improve code organization and maintainability
reordered conditional checks for valueArg and nameArg in CompareFunctionsProcessor . java to improve code readability and maintainability
compaction : fix checkavailablediskspace to correctly estimate expected disk space
removed unnecessary ` toString ( ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to
added checks for invalidated state in AbsSwipeUpHandler and null lastGestureState in TaskAnimationManager to ensure proper handling of invalid gesture states and
refactor LockTimestamp methods to use instance methods instead of static methods to improve code readability and maintainability by centralizing preference management
refactor artist retrieval logic to use a dedicated method to improve code readability and maintainability by centralizing artist name retrieval logic
added null check for remoteMessage before accessing its data to avoid potential NullPointerException when remoteMessage is null
nifi - 13636 : fix nullpointerexception in splittext when there be no header
added support for loading Windows key stores in HttpsConnectorFactory to ensure compatibility with Windows key store configurations
increased the DEFAULT _ CHECK _ TIMEOUT value from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests .
added a conditional check for FILE _ NOT _ FOUND in FileSyncAdapter . java to handle cases where the remote folder is not found
added animation options to the Slider class and updated related methods to support animation functionality in the UI
updated assertions in LineSeparatorProcessorTest . java to use lineSeparator instead of eol to ensure correct comparison of line separators in assertions
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to increase the maximum size for texture packing capabilities
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest . java `
camel - 14246 : camel - hazelcast - add support for poll timeout in camel - hazelcast
added a new test suite ` TextFeedbackTest ` and modified ` TestRunner ` to use it to improve test coverage and ensure correctness of text
replaced Math . round with Float . compare for score comparison in DefaultSolrHighlighter . java to improve performance by using a more efficient comparison approach
updated DPI handling in AddAndScaleMultiImage . java and ResourceEditorApp . java to use specific display values instead of hardcoded values
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and modified ` ArrayCopySnippets ` to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43353 : skip log
added support for remote SCM system configuration in multiple classes to enable or disable remote SCM support based on user input options
added a new state check for the OnOffType in MieleApplianceHandler . java to ensure the OnOffType correctly determines the appropriate
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to improve clarity and consistency
renamed the logger variable from ` log ` to ` LOG ` for consistency to improve code readability and maintainability
added tests for ProjectGenerationEvent ' s ` finished ` and ` started ` events in ` EventSerializationTest . java ` to ensure proper serialization and
ggb - 258 add a new feature to show special point on the first selected element
refactor JavaCompiler class to improve code organization to enhance maintainability and readability of the code
[ flink - 20527 ] [ test ] log error when there be no time to execute random read in integration test
refactor multiple Java classes including DumpHeap , TimSortStackSize2 , TestHeap , BasicJMap , TestPollingInterval , and Deadlock
added " -- gc - sections " and " nocopyreloc " flags to the ldflags list in NdkCxxPlatform . java
refactor SpringCloudCircuitBreakerFilterFactory to expand fallback URIs using ServerWebExchangeUtils to improve flexibility and maintainability of URI handling in
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the codebase
do n ' t try to read shared string from spreadsheetml if they do n ' t have a uri
added a new method ` getAccountNet ` to the ` HttpMethed ` class and a corresponding test in ` HttpTestAccount001 `
added a check for available text width before layout in SwingUtilities2 . java and modified the look and feel setting in Test6635110 . java
refactored FileResourceIterator and FlatteningIterator to simplify iterator initialization and improve clarity to enhance code readability and maintainability by simplifying
updated the ` removeColorHtml ` method to remove HTML tags from the title and body by removing HTML tags to ensure that the title and body are
doc : generate sample code in the java microgenerator ( # 51 )
add a test method to reload and delete an existing question in the feedback edit question UI to ensure that any existing question is deleted before the test execution
updated return values in HSSFSheet . java and added assertions in BaseTestSheet . java to ensure correct handling of first and last row numbers
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to ensure proper handling of malicious intents to prevent runtime errors
[ java ] send cluster session event when sequencer be start .
implemented ` hashCode ( ) ` method in ` AbstractParquetMapInspector ` and updated equality checks in ` StandardParquetHiveMapInspector `
added a condition to flush the session if the remote connection is closed to ensure proper resource management and prevent memory leaks when the stream is closed
added AutoCloseable interface to SplitReader interface to ensure proper resource management and prevent memory leaks
removed the deepCopy method from GsonBuilder to streamline the GsonBuilder implementation for better readability and maintainability
replace null return with a static final NOT _ FOUND constant in LLScanner . java and assert cached is not null in LLSourceBuilder
refactor asynchronous file handling in RestClientRequestImpl to use a for - each loop instead of an array to simplify code and improve readability by
updated dispatchStatusString method call in GrblController . java to ensure proper handling of controller status events
refactor ClassLoader handling in MockFactory to use a new SearchingClassLoader class to improve class loading flexibility and maintainability
add a test case for the refresh flag bug
added LEFT _ SEMI _ JOIN to the conditional check in ConstantPropagateProcFactory . java to support additional join types in the process
refactor HttpReceiver and HttpSender to streamline response handling to improve code clarity and maintainability by consolidating response termination logic
rename ` arraylengthoffset ` to ` arrayoopdesclengthoffset ` , a suggest by valerybokov
add default policy to make it easy to configure a broker service in test .
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
added a check to ensure the app context is running before stopping it to prevent unnecessary execution when the app is not running
changed the return type of the drawItem method from void to GlyphLayout to provide a more descriptive return type for the drawItem method
updated SpringmvcClient to use MetricsPublisher for metrics retrieval and modified exception handling in CodeFirstSpringmvc to improve metrics management and enhance error
removed the unused SAFE _ ACCOUNT _ AGE _ DATE constant and corrected a syntax error in the accountAgeWitnessService . java file
refactor code formatting and improve readability in StructureHeader and StructureReader classes to enhance code readability and maintainability
added support for ResourceUrlProviderExposingInterceptor in the CasWebflowContextConfiguration and related tests to enhance web flow handling capabilities by allowing
add a new dextransformer that can be use to transform the body of a return statement .
automation : enhance rule enrichedruledto to include additional field .
removed the NOFOLLOW _ LINKS option from the directory return statement in PathResource . java and updated arguments in AliasCheckerSymlinkTest . java
[ hotfix ] [ table - common ] remove validate enum value validation for dialect in executioncontext
replaced ` ImmutableSet < String > ` with ` Supplier < ImmutableSet < String > > ` for ` rDotJavaPackages ` and ` rDotJava
[ net . sourceforge . pmd . lang . java ] add test case for astpackagedeclaration
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor to allow dynamic configuration of the compaction level based on user -
[ hotfix ] move activeresourcemanager to active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify the
updated URI creation in ZipResource . java to handle URISyntaxException and added a new test class ZipResourceTest . java to ensure proper handling of feature
removed unnecessary whitespace in ExpandableUploadListAdapter . java to improve code readability and maintainability
refactor RobolectricTestRunner to recursively search for the Config annotation and update test cases accordingly to improve class hierarchy handling and ensure correct configuration merging
added filtering for block and item registry in ModelLoader to ensure that block and item registrys do not contain registry names
refactor websocketlistener to make it easy to use
updated JSONPojoConvertor to handle enum types and added color property assertions to enhance functionality to support enum values and improve test coverage for color functionality
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to indicate that the ` -- view
use transportformat . pump ( inputstream , byte [ ] ) instead of string . getbytes ( ) in gwtrequestwrapper
added orientation correction functionality to the GyroControl class and implemented a OrientationCorrectionListener to improve sensor event handling based on device orientation
change the value of BIOME _ LIST _ SIZE from 256 to BiomeGenBase . getBiomeGenArray ( ) . length to ensure
updated method calls from ` println ` to ` print ` in ` GetInterfaceTest . java ` and made interfaces public to improve code readability and
remove redundant variable declaration in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ` ByteToLongCollector ` with multiple methods for supplier , supplier , to long functionalities to provide a structured way to
added a preload option to the MMapDirectoryFactory class to enable or disable mapping directory preloading based on user preferences
added custom metrics for various component configurations in BukkitPlatform . java to enhance user experience by providing custom metrics for various components
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added image aspect ratio and default card image in CardPresenter . java to enhance card display by using a specific tile port
do n ' t increment auth method count if it ' s implicit
updated VectorHashKeyWrapper to handle empty arrays and improved null checks for longValues , doubleValues , decimalValues , byteValues , and byteStart
add jit test for system . nanotime ( ) after jit checkpoint
added null check and trimmed whitespace from the input line in MultiPartFilter . java and print a parameter in MultipartFilterTest . java to ensure
add livingexperiencedropevent to allow event to be fire when the player drop the experience
updated error messages and status updates in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity and user feedback for API key configuration issues
[ hotfix ] [ sql ] remove unsupportedoperatorsvisitor from beam planner
added RdepsFunction and updated GraphEnhancementQueryEnvironment to support reverse dependencies and validate target graph presence to enhance functionality and ensure proper handling of
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a flag to scale all rocket components based on the selection criteria to ensure that only the entire rocket scales are scaled based on the selected component
changed assertions from ` Arrays . toString ( bytes ) ` to ` assertEquals ( bytes , bytes ) ` in ` UpdateableResultTest . java `
added offline and realtime time boundary checks for offline and realtime Pinot queries to ensure proper handling of offline and real - time time boundary information
do n ' t add the socket to the poller if it ' s already pause .
fix 8muses ripper to download full sized image
updated method calls from ` mDevice . wait ` to ` TestHelpers . wait ` across multiple test files to improve code clarity and maintainability by
added a condition to check if the profile is a phone and not in landscape to ensure proper layout behavior for phone devices in landscape orientation
replaced ` getValue ` method with ` getQuery . unwrap ( QueryImpl . class ) ` in ` PartTreeJpaQueryIntegrationTests . java `
replaced ` Files . readAllLines ` with ` subsystem . readMatchingLines ` and added a new method ` readMatchingLines ` to improve
added a dynamic check for the " getResultStream " method in JpaQueryExecution . java to enable dynamic invocation of the " getResultStream " method
add a check for null entity in the PhysicsProcess class to ensure proper handling of null entity types
add a new test for entry processor with predicate that clears the map when value attributes are indexed to ensure that the entry processor clears the map
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue #
updated color calculation in Utils . java and modified the HTML message format in UtilsTest . java to include a background color parameter to enhance visual feedback by
disable menu item when empty string be not present
updated the scratch path format and added a recursive link step in Aapt2Link . java to improve code readability and maintainability by using
replaced instances of ` new Capture ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and ` Thrift
ggb - 260 do n ' t update selection after clear ( )
update ysld validator to handle empty stack exception
implemented the ` isCanceled ( ) ` method in multiple classes and updated the ` ExecutorCallAdapterFactory ` to check if the call is canceled to
added a default implementation of the ` isAnnotationPresent ` method across multiple classes to provide a flexible way to check if an annotation is present in the package
added a default implementation for the removeAllWidgets method in UILayout . java to indicate that the method is not implemented yet and should not be used
[ hotfix ] [ test ] fix yarnsessionfifoitcase and yarnsessionfifoitcase failure
update return statement to use the maximum of the output size between input and output sizes to ensure that the output size does not exceed the expected value
added logic to force VLC transcoding based on video dimensions in PlaybackController . java to ensure proper handling of high - resolution video streams and
[ beam - 10226 ] add dataset show to readsourcetranslatormockbatch and readsourcetranslatorbatch .
updated the listener handling logic in GpsLoggingService to conditionally remove specific listeners based on preference to improve user experience by optimizing listener selection
changed the parameter type of ` putString ` from ` boolean [ ] ` to ` byte [ ] ` and modified the handling of character widths
added import for BaseItemDragListener and modified drag handling logic in FolderIcon . java to enhance drag - and - drop functionality by utilizing the
added a method ` createEmptyArtifact ` to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` Signavi
removed unnecessary comment lines in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed the condition for determining if the video link contains " . m3u8 " in VideoViewerActivity . java to simplify the conditional check for
[ hotfix ] [ sftp ] compact the file path before use it in sftp operation
camel - 14146 : camel - weather - test fix and add timeout for test .
renamed ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by using a more descript
add large _ tall to doubleplant and doubleplantspecies . large _ tall to doubleplant and doubleplantspecies . large _ tall
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java ` to enable focus
cloudstack - 6492 : do n ' t swallow exception in case of failure to attach a vm
removed the ` requireLicense ( ) ` method from ` DB2TestSystem ` and updated imports in ` DockerDatabaseWrapper ` and ` Table
added methods to set and set the UnitGroup in DoubleModel and updated optimization parameter handling in GeneralOptimizationDialog to improve flexibility in managing unit groups and
added a new CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading operations for BTC and ZMW currencies
added a check for the number of samples in TestPBRLighting . java to ensure that the program correctly reflects the number of samples from the
removed " job . " prefix from test assertions for step names in StepWithSimpleTaskJobParserTests to ensure consistency in naming conventions for task
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to ensure immutability of member variables
make sure ggbabs ( ) do n ' t contain parentheses
added multiple calls to ` addServiceOutput ( ) ` and refactored the ` addServiceOutput ( ) ` method in ` DDLSemantic
jbrules - 2342 : fix type inference for bigdecimal in constraint
added " org . eclipse . jdt . " to WebAppContext . java to hide Java JVM usage in the web application
modified the return value of the ` useAuthCache ( ) ` method from ` super . useAuthCache ( ) ` to ` false ` to
updated namespace assignment to capitalize the first segment to ensure the namespace starts with a capital letter before processing segments
camel - 7999 : fix backwards compatibility issue with direct producer
added a null check for the zooKeeper before setting its state to avoid potential NullPointerException when accessing the zooKeeper
removed unnecessary space in the progressBar step message to improve code readability and maintainability
added a new method ` runOnUiHelperThread ` to execute vibration tasks on the UI helper thread to improve responsiveness by blocking
added a call to updateLastRemoteStreamId in HTTP2Session . java to ensure the last remote stream ID is updated for the current session
added text anti - aliasing hint to Graphics2D in EditorHeader and EditorToolbar classes to improve text rendering quality in the editor components
[ java ] : remove termwindowsize from driverpublication . nextoffset and termoffset from driverconnection .
fix : remove static import of enums in ctannotationimpl . java
update exoplayer javadoc to clarify that it do n ' t need to be update .
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ( Rectangle ) [ 0 ] ` in ` WRobotPeer
added a private static method ` newPrintStream ` to handle encoding properties in ` System . java ` to improve flexibility in setting output streams based on
updated the vibration duration from 1 to 25 in TouchableMovementMethod . java to improve the performance of the vibration process
fix checkstyle issue in net / cloudstack / datastore / flybushdataclearer . java
refactor WebSocketClient constructor parameters for clarity and consistency to improve code readability and maintainability by separating parameters
simonstewart : fix the test failure of i18ntest
update bytecodeparser to handle load constant exception instead of incompatibleclasschangeerror
added restoreAuthSystemState ( ) method call in XmlWorkflowServiceIT . java to ensure proper authentication state management during tests
added a new comparator class ` LowercaseComparator ` and updated constructor calls in ` CoNLLUFeatures ` to use it to improve comparison efficiency by
refactor JavadocTool to simplify parsing logic and improve error handling to enhance code readability and maintainability by reducing complexity
simonstewart : re - enable a couple of test for the firefox driver to be able to toggle an option in a multi select
removed validation for keys length in HighestKvno . java to ensure that the number of keys is at least 9 to prevent runtime errors
added error handling for retrieving attributes in HDF5BatchReader to ensure robustness by handling potential exceptions when retrieving attributes
use writeresult instead of pdone for batchload and streamwithdedup
update entity name in createtemplaterequestentity to createtemplaterequestentity instead of copysnippetrequestentity
added a new file TestMultiANewArray . java to implement multi - dimensional array processing to verify the behavior of multi - dimensional arrays
added a new configuration option ` UseSecondaryStorageVm ` to control the deployment of secondary storage if ` secondary . storage . vm ` is false to
refactor block ID retrieval logic in SyncBlockChainMsgHandler . java to improve clarity and correctness to enhance code readability and maintainability by
set the theme of the preview tab content based on user preferences to ensure the preview view reflects the user ' s current theme
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` to ` ConnectorTimeoutTest . java ` and modified ` HttpChannel . java ` to set
add property to make it easy to configure dictionary
renamed the method ` readIdentifier ( ) ` to ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve
updated JpaPagingItemReader and JobLaunchingGatewayParserTests to use diamond operator and removed unnecessary type casting to improve code readability and
changed log level from warn to debug in DistributedQueue . java to improve log granularity for debugging purposes
refactor ColorExtractionService to use a dedicated method for retrieving the hotseat palette to improve code readability and maintainability by consolidating palette
added methods to set default data table entry and cell transformers in TypeRegistry to enhance type management by allowing customizable transformers
added an assertion to check if the newAvailableShared is less than or equal to initShared to ensure that the shared state is valid before proceeding
doc ( regen ) : regenerate with update license year
removed the ` projectGenerated ` field and its getter method in ` ProjectGenerator ` , and updated the value in ` WorkspaceAndProjectGenerator ` to
corrected spacing in the if statement in DriverUtils . java to improve code readability and maintain consistency
added contact form routing functionality in Routes . java and implemented a new Contact class with corresponding methods in ApplicationController . java to enhance user experience by
guacamole - 102 : refactor simpleuser to use generic permission set instead of generic permission
update RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
[ drools - 392 ] fix traitfactory . setmode ( ) to use kiebase
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to improve clarity
replaced manual closing of PerDocConsumer with IOUtils . closeSafely to improve resource management and prevent potential memory leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in ExpansionViewHelper to enhance user interaction by allowing the menu to display correctly
updated error messages from " null " to " a null reference " in multiple files to clarify that the subject is a non - null reference to improve
ggb - 261 update the line height of the help button in the input tree
move protobufferutilitiestest to core . util and add miss test case
fix split pane divider position and side pane width
added support for crossref in the aux sub generator to be able to pull in a non - existing bibtex entry
[ geos - 6394 ] make sure we do n ' t cast map to object in geoserverfeaturestore
rename extractTypes to dataTables in RecipeDescriptor . java to improve clarity and consistency in naming conventions
fix a bug where metacontactavatarupdateevent be n ' t fire when a contact be change .
updated import statements in ShellCommand . java and ShellFactoryImpl . java to reflect the correct package path for the Command class
added a test method to clean up the audit log table post parameters by position in AuditLogTest . java to ensure that the audit log table does
added @ SuppressWarnings ( " unchecked " ) annotation and casted the result to Object in the inject method to improve type safety and suppress unchecked warnings
added regex patterns for parsing comment lines in ACLFileParser to improve error handling for invalid and invalid comment lines
updated imports and modified the isReadable method signature in MapRDBFormatMatcher . java and MapRDBSubScan . java to include additional
added a ` Map < String , String > ` for ancestor dimension values and modified the node name appending logic in ` StarTreeNodeImpl ` to
added user unlock check before dumping plugin manager state in TouchInteractionService and refactored closeOpenViews method in BaseQuickstepLauncher and 
updated condition from ` widthStr ` to ` positionStr ` in ` Photo . java ` to ensure correct handling of image positioning based on the
refactored certificate validation logic in PKIXValidator . java to improve clarity and structure to enhance code readability and maintainability by consolid
[ flink - 20527 ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest ` to ` org . apache . dubbo . integrated . test ` in
cloudstack - 3617 : fix npe in listnetworks api call ( ipaddress , ipaddress )
updated the method for retrieving the json element from ` remove ` to ` get ` in ` RuntimeTypeAdapterFactoryFunctionalTest . java ` to
added functionality to store Undo - related properties and methods to manage properties to ensure Undo - related updates are stored correctly based on properties
replaced direct access to ` System . getProperty ` with a privileged action for retrieving the ` gradProp ` property to enhance security by ensuring privileged actions are
replace assert statement with awaitility in StreamCloseTest . java to ensure that the test waits for the number of streams to complete before asserting
removed the doAfterFlush method and modified the handling of perFields in TermVectorsConsumer to improve code clarity and ensure proper initialization of perFields
added handling for non - deprecated properties in ConfigurationMetadataGenerator and AbstractJpaProperties to ensure proper mapping and filtering of non - deprecated properties
refactor capacity and mask assignments in BiInt2ObjectMap and Int2ObjectHashMap to be final to improve code clarity and ensure immutability
updated thread count from 25 to 15 in HiveConf . java and refactored path handling in Hive . java to improve thread management and ensure correct
added trace logging for error handling in ParallelNioSender . java to improve traceability of error messages and ensure proper resource management
added a null check for the context before creating a new SchemeAndroidIDE instance to avoid potential NullPointerExceptions when context is null
svm : fix native - image load issue with native - image .
changed the return type of the modifyGrantedAuthorities method from void to List and updated its implementation in SwitchUserAuthorityChanger and SwitchUserProcessingFilter
renamed JaxrsIntegrationTest to JaxrsIntegrationTestBase and created new JaxrsIntegrationTest and JaxrsSpringMain classes to improve clarity and
allow query timeout to be set on connection that do n ' t support it
added DataProviders for general and supplementary character tests in XslSubstringTest . java to enhance testing capabilities for various string manipulation scenarios
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter ` and added
added support for MariaDB sequences in the MariaDBDatabase class and modified sequence generation logic in CreateSequenceGenerator to ensure compatibility with different database versions and
reformatted string concatenation in multiple buffer classes for consistency to improve code readability and maintainability
added TableDataManagerProvider to multiple test classes and updated BrokerResponse imports to utilize the new TableDataManagerProvider in the test files
updated the property check for " jsse . enableMFLExtension " to include " jsse . enableMFLNExtension " alongside " js
removed generic type parameters from iterator initialization in ObjectHashSet and added new test cases in ObjectHashSetIntegerTest to simplify iterator initialization and improve test coverage for
added exception handling and adjusted character count calculations in MainActivity , Compose , and TweetFragment classes to improve error handling and correct the character count
add ttl parameter to cassandradatapoint to allow to set the ttl of the datapoint .
modified the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter for improved prompt handling to enhance user experience by
add terraingrid . getterrainatcell ( ) method to retrieve terrain at a specific cell
added default value printing in ` mmm Pretty . java ` and created a new class ` ppp T6665791 . java ` with a Java compiler
added error handling for FileNotFoundException in ResourceLoader . java to log an error when QuestEncryptionKeys . json is not found
added a condition to check if the push is not enabled before returning the status of push support to ensure that the transport is only supported when the push
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
added a call to blockCapsule . sign with the local witnesses ' private key to ensure proper signing of local witnesses in the block utility
modified FileSystemView and Win32ShellFolder2 to return null if no roots are found and added security checks for path invocation to improve robustness by
fix columntext . copycontent ( ) and pdfptable . copylastrow ( ) to use the table ' s maximum heights
added a new SparseArray for managing selected notes and modified the way selected notes are managed in the ListFragment to improve memory management and ensure selected notes
update id for feedback question when backup be complete . also adjust the id for question and response comment .
added a null check for the data parameter in the getTransferData method to ensure that the method does not throw an exception for non - null data
# 118 - remove unused pstmtdelegate interface ( no longer use )
replaced custom Padding class with Rect from AppWidgetHostView for widget padding retrieval to simplify padding retrieval logic and improve code maintainability
refactor static MethodHandle initialization and add consStringFilter handling in NashornBeansLinker . java to improve code readability and maintainability by
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
replace CountDownLatch variable name from latch to goAwayLatch in IdleTimeoutTest . java to improve clarity by using a more descriptive variable
refactor assertions in IterableSubjectTest to use hasMessageThat ( ) instead of getMessage ( ) to improve readability and maintainability of the test
replaced ThreadLocal currentBook . get ( ) with null in multiple classes to simplify the code and improve null handling in the currentBook variable
added a method to check if a method invocation supports a specified class and object type to enhance functionality by allowing support for specific object types
removed unused imports of GachaHandler and Tools from DataLoader . java to clean up the code and improve maintainability
added row count tracking and modified postUpdateLog methods to accept an integer parameter to track the number of affected rows in the update log to enhance logging
ggb - 260 fix : do n ' t use margin in window . show ( )
set default value of foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration . java to allow for dynamic configuration of FPS
added ObjectReleaseTracker assertions and modified HdfsTransactionLog and TransactionLog to track and release objects to ensure that the object is properly released after
replaced DefaultWebSocketFrame with a ChannelFutureListener for closing the WebSocket frame to ensure the WebSocket frame is properly closed after writing to the channel
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and introduced new ` TestApplicationEventListener2 ` classes to improve clarity and functionality of
refactor background setting logic in SettingsActivity to use a dedicated method to improve code readability and maintainability by centralizing background settings
updated import statement from org . apache . commons . lang3 . StringUtils to org . openhab . core . util . StringUtils and added null check
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to update the accumulator ' s sum and count based on a
reformatted code in Put . java and ReplicationSink . java to improve code readability and maintainability
replace VALID _ CACHE _ SET with REGEXP _ CACHE to store regexps in a map instead of a Set to improve performance and
added a static method ` reset ` to ` GameThread ` that sets ` gameThread ` to null to provide a way to reset the game thread
added a check for the realm in the login method of DigestAuthenticator to ensure that the login service matches the realm provided by the login service
refactor parameter handling in SavedRequestAwareWrapper to merge existing and merged parameters to improve efficiency and maintainability of parameter merging logic
updated logging messages to use ' lc ' instead of ' hiddenSingleton ' and added a ` toString ( ) ` method in ` LoggerContext ` to
replaced the use of ` hasNotified . compareAndSet ( false , true ) ` with ` this . wakeup ( ) ` in ` CommitLog
added a check for Android O in PhotoViewerActivity and implemented user autocomplete adapter in UserAutoCompleteHelper to ensure compatibility with devices running Android O and
updated SchemaInfoLevel from minimum ( ) to basic ( ) in SchemaCrawlerTest . java to ensure the schema info level reflects the basic schema information
refactored XML output stream handling in SaveTask . java to use BufferedOutputStream to improve resource management and ensure proper closing of the zip output stream
replaced the ` bytesToString ` method with a ` utf8ToString ` method for improved character encoding handling to enhance compatibility with different UTF - 8 encoding
fix mc - 103516 not be able to place item in the right place .
removed Tomcat10ContainerAdapter and Tomcat101ContainerAdapter from the list to eliminate unused adapters related to Tomcat container adapters
[ drools - 118 ] fix marshaller to use deep equal instead of hashcode in the marshaller
fixed switch / cases indentation see switch - cases in NowSearchTerm . java and SearchTermBuilder . java to improve code readability and maintainability
pdfbox - 4892 : remove unnecessary ' public ' modifier , a suggest by valerybokov
added method and headers to RemoteEndpointServiceAccessStrategy and updated URL resolution using SpringExpressionLanguageValueResolver to enhance flexibility in HTTP request handling and improve
added a new method ` newResponseBuilder ` to create a ` ResponseBuilder ` instance to improve code readability and maintainability by centralizing the
added notification for command start in AsyncBackgroundTaskManagerTest to ensure the manager responds correctly when a command is started
refactor ` computePreviewDrawingParams ` method to ` recomputePreviewDrawingParams ` and add null check for ` mReferenceDrawable ` to improve
refactor LukeRequestHandler to use CharFilterFactory for tokenizer and filter configurations to improve code clarity and maintainability by centralizing tokenizer and filter configuration
replaced null checks for ' plot ' , ' generator ' , and ' hotspot ' with ParamChecks . nullNotPermitted for argument validation to improve
added verbosity support to the createSubContext method in JavacStep and ExecutionContext classes to enhance logging control based on verbosity settings
added a check to convert the schema to uppercase if the database type is oracle to ensure consistent schema formatting for oracle databases
updated the string construction in AsyncLoggerAllThreadContextImplementationsTest . java to include the class name of the logging context to enhance clarity and maintain
added a new file TestShrinkToOneRegion . java containing a main method that calls System . gc ( ) to facilitate testing of region sizing
replaced string splitting with Splitter for splitting custom packages in SandboxTestRunner . java to improve code readability and maintainability by using a standardized
replaced ` context . utf8ToString ( ) ` with direct usage of ` context ` in ` AnalyzingInfixSuggester . java `
refactor attachment handling in PushsaferMessageBuilder to improve clarity and consistency to enhance code readability and maintainability by using a local variable for
fix stripprovenance to print jsonresult instead of provenancehash
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed ` private final static ` modifier from ` private final static ` to ` private static ` in multiple field test files to improve code readability and
updated the evaluate method in UDFRound . java to use BigDecimal and RoundingMode instead of Apache Commons Logging to improve performance and readability of the
refactor configuration retrieval in GraalJSScriptEngineFactory to use ConfigParser for improved readability to enhance code maintainability and reduce redundancy in configuration
changed class access modifiers of Test1 and Test2 from package - private to public to allow access to these classes from other packages
updated permission messages from " node " to " deny . no _ enter " and modified plot handling logic in PlayerEventListener . java to enhance user experience
[ flink - 20527 ] [ table - planner - blink ] add value to a conditioninconstantset in order to avoid
replaced occurrences of ` LongProducer ` with ` LongProducer ` and ` NumericDocValuesField ` in ` BaseNormsFormatTestCase . java `
added test to make sure we do n ' t crash the robot .
added tests for option limits for global and thread buffer sizes in TestBadOptionValues . java and modified ThreadBufferSizeExceedMemorySize in
removed assertions related to " must be a power of 2 " and " must be a multiple of 8 " in ObjectAlignment . java and Options .
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` and implemented package extraction in ` AndroidManifestReader ` to
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the initialization of acceptableThrowawayItems to use an ArrayList instead of an empty list to improve code readability and maintainability by using a more
updated method invocations in Test6987555 . java to explicitly cast boolean , byte , short , and int values to enhance type safety and reduce
reformatted code for consistency and readability to improve code maintainability and maintainability
refactor Inflection class methods for improved clarity to enhance code readability and maintainability
added getter and setter methods for the locale in EvaluationContext to enhance flexibility in locale management within the evaluation context
removed the import of ` Plugin ` from ` io . cucumber . core . api . plugin ` in ` SummaryPrinter . java ` to stream
added a break statement in DrawerActivity . java to handle a specific case in the navigation drawer
replaced the static import of Criteria . where with a wildcard import and modified the debug log message to use getQueryObject ( ) to simplify import statements and
[ xwork ] allow to configure a custom loggerfactory
fix a typo in the admin addpeerwithp2pdisabled acceptancetest .
rename the bean name from ` @ ConditionalOnMissingBean ` to ` @ ConditionalOnMissingBean ( name = " livenessStateHealthIndicator "
added a ConcurrentMap for concurrent storage and modified the return logic in LocalPStoreProvider to utilize it to improve concurrency handling for PStore instances and
changed the access modifier of the deleteFiles method from public to private to allow access to the deleteFiles method from outside the class
refactor ` Provider ` to ` ServiceProvider ` and update related methods in ` ServiceLoaderSpliterator ` and ` TypeUtil ` to improve clarity and consistency
add try / catch to javainteropreflect . findfield ( ) and remove javaobject . setfield ( ) from setfield ( )
added ` isToolchainCreated ` method to ` AbstractCell ` , ` ToolchainProvider ` , and ` DefaultToolchainProvider ` classes ,
fix a potential deadlock when remove a polyglot context
updated index checks from ` indexOf ` to ` contains ` in ` AbstractCheckDescriptor . java ` to improve code readability and maintainability by using
rename ` setLinkerFlags ` method to ` setExportedLinkerFlags ` across multiple classes to improve clarity and consistency in naming conventions
updated the method name from ` onConfigurationChangedInternal ( ) ` to ` updateRecentsRotation ( ) ` in ` AbsSwipeUpHandler .
updated type checks to use raw types for listener types in multiple classes to improve type safety and eliminate potential runtime errors
update the array to include the header hash as a string in the newBlock object to ensure the correct hash is used for the new block
defaultmessagestore : use getstorepathphysic ( ) instead of getstorepathcommitlog ( ) . getstorepathphysic
[ hotfix ] [ micrometer ] remove try - with - resources statement in micrometermetricmanager
add get message stats to compactionlog ( # 11818 )
added @ Deprecated annotation to multiple classes and methods in AbstractJPASubQuery , JPACommonQuery , and JPAQueryBase to indicate that
added a method to check for the existence of a system UI object and execute a key event for the status view to enhance functionality by allowing users to
changed logger and principals and sessionIds from static to final in SessionRegistryImpl . java to enforce immutability and enforce immutability of
added a check for empty cookie jar in InMemoryCookieStore and a test for removeAll method in NullUriCookieTest to ensure proper handling of empty
[ bonsai ] do n ' t clear storage if it ' s already delete
change the return type of getText method from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to
added @ NotYetImplemented annotation to AlertsTest . java to mark the test as unimplemented for the MARIONETTE
added a try - catch block to ensure the destination connection is properly returned to improve resource management and handle potential IOExceptions during connection closure
rename ` CMD _ ESCAPER ` and ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER `
added synchronization to the heartbeatExecutorService initialization in DbTxnManager to ensure thread safety during thread execution
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and added a new method ` wrapWithTracingAndCancellation `
added a new method ` updateFirstLineShowing ( ) ` to handle text selection out of the TextArea ' s bounds to ensure proper handling of
added configuration paths for local , system , staging , and temp directories in TestInformationSchemaWithPrivilege . java to enable customization of temporary and staging
refactor graphics configuration retrieval logic to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
tika - 164 : fix oom in legacy mode for tikaserver
camel - 14136 : camel - core - optimize pipeline to reduce code duplication
updated the PrintTagList class to accept a model file and modified the tag processing logic to use a treeset instead of a set to improve flexibility
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test for SQL
fix flaky test of journalcorruptioneoofindexrecoverytest
[ java ] refactor startfromtruncatedrecordinglogtest to find a better alternative to check for cluster ready .
changed the calculation of the arc variable in the RoundRectangle2D class from an integer to a float and adjusted the outer rectangle initialization accordingly to improve
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerExceptions when galleryImages is null or empty
updated the deployment ID handling in StandardChangeLogHistoryService and modified the column addition in CreateDatabaseChangeLogTableGenerator to ensure that deployment ID is
pdfbox - 4071 : use the correct package name for printfields and setfield example
removed the moreColumnOk parameter from multiple index method signatures in AlterTableAddConstraint . java to simplify method signatures and improve readability by eliminating unnecessary
added a provisional engine map and modified engine management logic in QuickfixjComponent . java to improve engine management and ensure proper handling of provisioned engines
added ` displayZoomControls ` and ` displayZoomControls ` properties and methods in ` RoboWebSettings ` to enable or disable zoom control display
added support for corporea block in the libs . close # 1020
refactor ConnectionFactory to improve code readability to enhance maintainability and facilitate future updates
added a method ` EnableDisableMenuItems ( ) ` to enable or disable disable menu items based on user settings to enhance user experience by providing an
updated the message resource key in the setMessageForEmptyList method from ` server search ` to ` favorites _ filter _ list ` to improve clarity
hhh - 14397 fix test failure on oracle
set auto - resize mode and auto - create columns from the model in MotorMountConfigurationPanel . java and update constructor parameter in MotorConfigurationPanel .
updated LINE _ SEPARATOR initialization from ` System . lineSeparator ( ) ` to ` System . getProperty ( " line . separator " ) `
added getter and setter methods for creator and subject in POIXMLProperties . java and updated test cases in TestPOIXMLProperties . java to
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] do n ' t try to read a cnc file if it do n ' t exist .
rename ` NonMarkedFoo ` and ` Marker ` classes to ` Command ` and update method signatures accordingly to improve clarity and consistency in class naming
added functionality to prefix class paths with " classes / " prefix in ClassFileSourceImpl . java to ensure correct class path resolution for JMod files
added @ Nullable annotation to PostEnterCanonicalizer and simplified constructor parameters in TreeBackedElement and TreeBackedPackageElement to improve null safety and
added a new PublicTokenRequest instance and set request parameters in Saml2TokenGranterTest and UserTokenGranterTest to enhance token request
updated array access from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure correct array access
added a ` sync ` method to ` ZooKeeperWatcher ` and invoked it in ` ZKAssign ` and ` ZKWatcher ` to ensure
added checks for current context in GlUtil . java to ensure that the current context is not equal to EGL _ NO _ CONTEXT to prevent
[ drools - 148 ] fix npe when deactivate a ruleflowgroup .
added a return statement to HystrixDashboardConfiguration . java to ensure proper handling of configuration initialization
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added exception assertion in IoTDBPipeIT . java to improve error handling
make clientqueuedisruptiontest clean up after each test
fix ( ctreferenceimpl ) : use defaultprettyprinter for getsignature ( )
make validateinstance protect so subclass can override it
updated import statements in GeoPointField , GeoPointTokenStream , GeoPointInBBoxQuery , GeoPointPrefixTermsEnum , and TermEnum
added a new file ` FakeBuildable . java ` and modified ` OnDiskBuildInfoTest . java ` to use the ` FakeBuildable
use itemstack . isempty ( ) instead of itemstack . getitem ( ) . getitem ( ) in guiingameforge .
updated variable and method names from " path " to " timeseries " in TSParser . java and SQLParserTest . java to improve clarity
added a check to return 0 if the velocity is less than or equal to a constant to prevent potential errors when the velocity exceeds a defined threshold
replace getbucket ( ) with _ storage . create ( ) in gcspinotfs
added a finally block to ensure the transport vertex is closed to ensure proper resource management and prevent potential memory leaks
added methods to create and replace history views in DbTriggerBasedHistoryDdl , PostgresHistoryDdl , and PostgresHistoryDdl classes
updated the expected clustering engine version from 2 to 3 in the CarrotClusteringEngineTest . java file to ensure compatibility with the latest features
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily skip tests that need to be rewritten
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand ` and added a new class ` ParserStateObjectInputStream `
added null check for changeLog and updated objectQuotingStrategy assignment in ChangeSet . java and DatabaseChangeLog . java to ensure proper handling
updated Metainfo parsing method from parse to fromXmlStream in SliderAppsViewControllerImpl . java to ensure proper parsing of Metainfo data from
deleted the CsrfControllerAdvice . java file to remove unused CSRF controller advice class to streamline the codebase
refactor endorsed argument handling to use a method for quoting paths to improve code readability and maintainability by encapsulating path handling logic
added scrim animation functionality to the Launcher class and updated AllAppsBackgroundDrawable and AllAppsBackgroundAnimUtils to utilize it to
updated type inference logic in TypeInferenceUtils and added new test cases in TypeInferenceUtilsTest to correct type inference logic and improve test coverage for new
regenerate client with updated copyright year ( # 4382 )
added path parsing checks for absolute and UNC path prefixes in WindowsPathParser . java and corresponding test cases in PathOps . java to ensure path
removed parameters from MulticastSocket instantiation in Promiscuous . java to simplify the code and improve readability
removed duplicate calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and improve code readability
change return value from nBits to nBits . clone ( ) to ensure that nBits is not mutated before returning it
changed the access modifier of ` deriveCollectorName ` method from private to protected and added tests for custom collector names in ` TestProfilerCollector ` to
added a method to check type hints for simple types in MappingMongoConverter to ensure proper handling of type hints when writing simple types
added performance measurement for the ` createProxyFactory ` method in ` ProxyMaker ` to improve performance monitoring for proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings for better code clarity
added the exception cause to the ConnectionException messages in TCPConnection . java to improve error handling by including the original exception context
updated the ` reinflateWidgetsIfNecessary ` method to use the ` getWorkspace ( ) ` method instead of ` LauncherModel ` to
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to verify the functionality of the file dialog and
do n ' t call display . update ( ) when autoflush = false
add a test case to show a new student profile picture in the user interface
added support for filtering test execution based on the " onlyrun " and " method " environment variables in TestIgnorance . java to improve
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature for better readability and maintainability
added null check for Pageable in QueryDslJpaRepository to ensure safe retrieval of content when pageable is null
[ hotfix ] [ runtime ] add memorymanager . computememorysize ( ) method
camel - 14246 : camel - jms - increase timeout for this test so that it do n ' t fail on slow ci server
refactor SnowballAnalyzer to improve code structure to enhance maintainability and readability of the code
refactor previousIndex initialization and clearing logic in StreamingAggTemplate . java to improve code readability and maintainability by using a single instance of
update bytecodeparser to throw graalerror if the receiver be null .
added a new method ` stream ` that uses ` computeIntensityDefault ( ) ` in the ` StreamSupplierComponent ` class to provide a default parallel
updated logging messages to reflect the fully played state of a file and added a retry mechanism for file renaming to improve clarity of log messages and
added a new ` newInstance ` method to ` InjectorProxy ` and updated access modifiers in ` InjectorProxy ` and ` StandardInjectorProxy `
[ hotfix ] [ stream ] remove unnecessary close ( ) in flinkstreamingcreatefunction
added tests for parsing and deparsing SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest classes to ensure that the SQL
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of null
updated the exclusion clause in NamedSetTest . java from " Deliberate error " to " Quality Distribution " to enhance clarity and maintain consistency in
added websocket reconnect logic and refactored connection state management in WebSocketConnection . java to improve connection handling and enhance error logging for better debugging
replace ` setAttribute ` with ` removeAttribute ` for SECURITY _ AUTHENTICATION _ KEY and SECURITY _ TARGET _ URL _ KEY
hbase - 24413 addendum add retry for create / disable table in testregionreplicareplicationendpoint
added PMS initialization and configuration settings in FormatRecognitionTest . java to ensure proper configuration handling for the PMS instance
[ vmware ] add state machine transition for ovum data disk template creation
replaced Spring Boot configuration with JUnit4 configuration in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to improve test coverage and ensure compatibility with JUnit
added @ Override annotations to multiple authentication service implementations to ensure proper method overriding and improve code clarity
updated primary key constraint from ` val ` to ` val1 ` for multiple tables in ` AppendOnlySchemaIT . java ` to ensure consistency in
added a check to ensure deleted and segment documents match the document count to prevent CorruptIndexException when the document count mismatches
add a method to the siplogger to provide a way to log the sip communicator exception
updated the filament length from 1.0 to 0.9 in FilamentFactory . java to ensure the minimum length is needed for staves with a
set default value of handleFileUploads to true in VertxPlatformHttpServerConfiguration . java and update bodyHandler in VertxPlatformHttpEngine
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
replaced the static class Fields with a local variable for the HotSpotResolvedJavaField to simplify the code and improve readability
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in term frequency handling
added a watermark to the ` now ` variable in the ` FileIO ` class to ensure proper handling of timestamps during file operations
sqm : fix npe in sqmctestatement . copy ( )
added import statement for java . sql . ResultSetMetaData in QueryCompilerTest . java to support JDBC metadata handling in the query compilation process
updated the library output message to include the project filesystem ' s root path to ensure the output path reflects the current project filesystem ' s root path for
updated the angle slider from - 180 to Math . PI in RailButtonConfig . java to ensure the slider reflects the correct angle range
move saveio to the save slot , to make sure we do n ' t crash if the save fails .
added expression language support for Kerberos properties to ensure compatibility with Java ' s expression language
remove command to set the scale of held item mount point scale for remote character .
updated the setupViews method to accept ScrimView as a parameter and adjusted related animation interpolators to enhance the visual appearance of ScrimView during
[ hotfix ] [ state backend ] add option to disable periodic materialization
added a private String field ` value ` and its getter and setter methods in ` ProtocolParameter ` , and updated ` List ` and ` ParamTag
http : / / issues . apache . org / jira / browse / amq - 4237 - add test case for chunking servlet with
add isbubbed to checkrouteranswer to indicate if the answer have be bump or not
added a Content - Type header to the SwitchToPostInterceptor and SearchRequestUnitTest classes to ensure proper handling of application / x - www - form
refactor EmbeddedClientConnector class to improve code structure to enhance maintainability and readability of the code
added logging functionality to PhoenixResultSet and replaced SQLFeatureNotSupportedException with a warning log statement to improve error handling and provide clearer warning messages when ignoring
added initialization of AndroidNet with null parameters in AndroidDaydream . java to ensure proper initialization of AndroidNet instances
[ ll ] fix logging of _ segmentmaxrowcount in llrealtimesegmentdatamanager
removed the ' false ' parameter from the getDepositAddresses method calls in KrakenAccountService . java to simplify the method calls by eliminating unnecessary parameters
hbase - 25266 remove prefixtreecodec from tablemapreduceutil ( # 2576 )
added a flag to handle inflation failures in DesignerActivity and made root variable final in XMLLayoutInflater to improve error handling and enforce immutability
refactor PushbackInputStream class for improved readability to enhance maintainability and clarity of the codebase
remove controlflowgraph . compute ( ) from loweringphase . loweringphase , use schedulephase . containslowerable ( ) .
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter . java
updated parsers in Makefiles . java to use " \ \ r \ n " and " \ r \ n " instead of " \ r
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and added null check for deleted documents
updated the call to setTransformRefresh ( ) and setBoundRefresh ( ) in SimpleBatchNode . java to ensure the refresh flags are correctly set
make sharedmethod . isuninterruptible instead of isguaranteedsafepoint ( ) . isguaranteed ( ) .
added framebuffer size callbacks and updated window size handling in LwjglWindow . java to improve handling of window size changes and ensure proper resource
updated the layout parameter from ` centerTaskParallaxToRight ` to ` centerTaskParallaxOffscreen ` and adjusted related animations accordingly
refactor ` LiteralNode ` to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and update related methods to improve type safety and clarity
added functionality to set the length of a file in CompoundFileWriter and implemented setLength methods in FSDirectory and IndexOutput classes to ensure accurate tracking of file
updated the ` AndroidNdkScriptGenerator ` , ` AntScriptGenerator ` , ` LwjglDebugStarter ` , and
camel - 14266 - camel - aws2 - s3 : use sourcebucket / sourcekey instead of copysource / copysource / prefix
added permission handling for " * " roles in RuleBasedAuthorizationPlugin and updated test cases for collection requests in TestRuleBasedAuthorizationPlugin to enhance authorization functionality
updated ZookeeperClientServerRegisterRepository to use EventType for handling node registrations and improved null checks to enhance code robustness and ensure proper handling of
refactor methods and class names in ReturnsDeepStubs for consistency and clarity to improve code readability and maintainability by standardizing method names and
replace ` toByteArray ( ) [ 0 ] ` with a conditional check for ` contract . getCallValue ( ) . toByteArray ( ) [ 0 ]
updated debug logging format in BibEntry . java to use parameterized messages to improve code readability and maintainability
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the ` PBE _ ALGO ` algorithm
tiffreader : improve error message for invalid tiff value
added validation for job parameters and improved error message formatting in CommandLineJobRunner . java to ensure that invalid job parameters are provided and provide clearer error
updated expected string in assertions from " \ r \ n " to " foo " in SmtpTests . java and MailTests . java to simplify
refactor switch - case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and maintainability of the switch - case structure
refactor LongSequenceGenerator to use AtomicLong and AtomicLongFieldUpdater for sequence ID tracking to improve performance and maintainability of sequence ID management
added a new file ` Test . java ` containing a class ` Test ` with a static method ` sum ( ) ` to calculate the sum of
updated ` minSdk ` and ` maxSdk ` configurations from private to protected in ` ShadowWifiManagerTest ` and ` WifiUs
added a new Java class to implement a sorting algorithm for integer arrays to provide a solution for evaluating permutations based on user input
use concurrentmap instead of map to avoid concurrentmodificationexception . patch by jbellis
refactor TaskbarManager to include orientation change handling to improve clarity and maintainability of taskbar configuration logic
refactor SyncFutureCache class for improved performance to enhance performance and maintainability of cache management
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and modified the LOWEST _ VERSION _
[ java ] uselessstringvalueof no longer report false positive for string literal .
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to validate the drag behavior of
added support for a configurable maximum type shard size in the HollowProducer class to allow dynamic adjustment of the target type shard size
added new version strings " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBackwardsCompatibility . java
refactor CompilationTask class to improve code readability to enhance maintainability and facilitate future updates
updated assertions and refactored database parameter handling in DDLTask . java and TestSemanticAnalysis . java to improve code readability and maintainability
added a call to execute the ClearDatabaseChangeLogTableStatement for the Liquibase catalog and schema to ensure that the ClearDatabaseChangeLogTable
added version handling and improved path equality checks in RestClient and CallPath classes to enhance functionality and ensure correct versioning of service URLs and path
updated error message from " Untable to " Unable to register " to " Unable to register " and added a synchronized close method to ensure
fix javadoc warning , use throw instead of return null
added ` @ After ` method to ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT `
[ gr - 11919 ] add option ` ` devmode ' ' to all native - image generation .
fix stringhelper . removeleadingandendingquotes to handle empty string
refactored type handling in JpaQueryCreator and added NOT _ CONTAINING case in ParameterMetadataProvider to improve code clarity and maintain
do n ' t push branch id if we do n ' t need it .
added a call to dispatch a new P25Message instance in P25MessageFramer . java to ensure that the dispatch method correctly handles incoming messages
added null check for the handler before calling checkClosed ( ) in WebSocketImpl . java and implemented a test for clearing client handlers on end in Websocket
[ ds - 1076 ] refactor discoveryit and indexeventconsumer to use indexablepooltask and indexablepooltask .
updated padding initialization in AppWidgetResizeFrame . java and Launcher . java to use internal resources instead of resource size to improve compatibility with widget padding
added methods to hide all apps in TaskbarUIController and hide all apps in TaskbarAllAppsController to improve user experience by ensuring the
removed synchronized modifier from the launch method and replaced Thread . sleep with launcher . join to simplify the launch process by eliminating unnecessary synchronization
updated calculations for the point in JavaSEPort . java to use the canvas coordinates instead of the mouse coordinates to ensure correct positioning of the mouse
replaced notificationManager calls with startForeground calls for notification notifications to improve UI responsiveness by starting the foreground when the upload progress is zero
implement a new rule ` ` static final ' ' for static final field .
hbase - 24413 set hbase . client . retries . number to 3 in testthrifthbaseservicehandler
change log level from info to debug in TransactionalMessageServiceImpl . java to improve logging granularity and reduce log verbosity
added exception handling for FileNotFoundException and changed logging level from debug to trace in ResourceUtils . java and AbstractCipherExecutor . java to improve error handling
added a new method ` getmarketsummaries ` in ` Bittrex ` and created ` BittrexTickersResponse ` class to
refactor enum constant retrieval in EntityEntry . java for improved clarity and consistency to enhance code readability and maintainability by standardizing access to enum
refactor session registration and unregistration methods to accept Object instead of Class < ? > for better flexibility to improve code readability and maintainability by
added new Unicode characters ' \ u0001 ' , ' \ u0008 ' , ' \ u0001 ' , ' \ u000
added methods to set and get the stylesheet resource in ResourceService and updated related classes to utilize ResourceHttpContent for better resource management to enhance flexibility
added a call to clearIndex ( ) in TestFiltering . java to ensure that the index is cleared before proceeding with operations
replaced ` ObjectParameterStrategy . getAddress ` with ` PointerParameterStrategy . getAddress ` in ` X86MethodGenerator . java ` to ensure proper handling
updated the condition check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with CockroachDatabase
removed the condition checking for ` isEnum ` in the ` ObjectStreamClass ` class to simplify the code and improve readability
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and created a new ` SymbolNotFoundError ` class to improve
added support for selecting pseudo fields in BinaryResponseWriter to enhance flexibility in document retrieval based on the specified fields
added support for PING and PONG cases in WebSocket implementation to enhance WebSocket functionality and ensure proper handling of pong responses
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of non - IDENT
[ java ] add ttl and negative time - to - live support for dns resolution .
added a conditional annotation to the TraceMessagingAutoConfiguration class to ensure that messaging tracing is only enabled when the MessagingTracing class is present
mondrian : fix ` ` db2 ' ' bug in sqlquery . quoteidentifier ( )
updated import statements in IDELanguageClientImpl , EditorTextActionMode , and CodeEditor files to reflect new functionality to enhance code clarity and maintain
added a condition to handle the case when the character ' / ' is encountered in XMLLightweightParser to ensure proper handling of XML close tags in
removed setVisibility ( GONE ) from TouchCharInput . java to streamline visibility handling for better user experience
added a null check for the current user before comparing its ID to prevent potential NullPointerException when the current user is null
added a conditional check for the index before setting the member in JSObjectLinker to ensure proper handling of non - negative member indices
refactor ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to initialize ` randomStringGenerator ` and set a
mark the SecurityConfig class as deprecated to indicate that the class is outdated and should no longer be used
added @ Deprecated ( forRemoval = true , since = " TODO " ) annotations to multiple classes and methods to indicate that these classes are outdated and
deleted the JoglDebugAdaptor . java file to remove unused code to streamline the codebase
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and corresponding test cases in ` AWSPropagation ` and ` ExtraFieldPropagationTest `
added PendingIntent initialization in FileDownloader and FileUploader classes to enhance notification functionality for better user experience
refactor nextOrd method in Lucene80DocValuesProducer to use a set method to improve code readability and maintainability by encaps
refactor DateTimeFormatter class for improved readability to enhance maintainability and facilitate future modifications
removed unnecessary try - catch block for class loading in desktopProperties to simplify code and improve readability
updated the setAdministratorCredentials method to include validation checks for principal , password , and keytab parameters to ensure that the administrator credentials are valid and provide
added a constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and adjusted width calculation for tablet and two - panel
added render calls for the sketch window color in PSurfaceJOGL . java to ensure proper rendering behavior based on the sketch window color
refactor Hashing class for improved performance to enhance performance and maintainability of the hashing algorithm
updated the ` accept ` method in ` FileSenderFactory ` to use ` folderPath ` and ` fileName ` instead of ` File ` to improve
updated ` addToListIfNeeded ` method to include string resource for user information to enhance user information display by providing a more descriptive string resource for
removed redundant null check for newType in J . java to improve code clarity and prevent potential null pointer exceptions
updated ACTIVITY _ START _ DELAY from 500 to 800 in mmm Launcher . java and ppp Launcher . java to increase activity start delay
added a static web application home path constant in SolrJettyTestBase and updated its usage in JettyWebappTest to utilize this new
updated the handling of motor diameter and selectedMotorSet in ThrustCurveMotorSelectionPanel . java to clear the selection table after the motor is
added import for BufferUtil and invoked clearToFill method in ByteBufferPool to ensure proper buffer management and prevent potential memory leaks
fix issue with miss originator id when trigger notification rule
updated configuration keys from " authorization " to " authentication " to align configuration naming conventions with the new naming conventions
added deleteExchange and queueDelete calls in DurableOnTransient . java to ensure proper handling of exchange deletions in the clustered channel
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest . testbulkslotallocationfulfilledwithnewslots ( )
added a listener to the bootstrap connection in ServerInfoService to handle connection failures to improve error handling and provide clearer feedback on server connection failures
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter to improve code organization to enhance maintainability and readability of the code
added error handling to the execute method in SulongLibrary . java to improve robustness by handling IllegalStateException during execution
updated Spring Security schema versions from 6.1 to 6.1 across multiple files to ensure compatibility with the latest Spring Security features and improve compatibility
updated the ` newNameResolver ` method to use ` Args ` instead of ` NameResolver . Helper ` and modified the ` DiscoveryClientNameResolver
added handling for non - empty annotations in JavacParser and created a new TestAnnotatedAnonClass class with a deprecated method to ensure correct position
added " com . sun . naming . internal . " to the CheckPackageAccess class to support internal naming functionality in the application
changed the ` strict ` variable from ` false ` to ` true ` in ` StaxEventItemReader . java ` to enable strict validation for
lucene - 14545 : offlinesorter . readpartition ( bytesequencesreader , bytesequenceswriter , int ) do n ' t
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
refactor color mode check to use a boolean variable for clarity to improve code readability and maintainability by reducing duplication
refactor folder creation logic to use target cells instead of hardcoded values to improve code readability and maintainability by centralizing folder creation radius
added loading dialog display in FileOperationsHelper and removed it from FileDetailFragment , FileDetailFragment , and OCFileListFragment to streamline
added null checks for ` uigestureFile ` before loading ` xmlLogs ` and ` xmlMap ` to avoid potential ` NullPointerException `
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for string comparisons to ensure consistent behavior across different locales in the test cases
added a method to set listeners on the result object to ensure the result has the correct listener configuration
added a new method ` loadWithNewGlobal ` to manage global context loading to enhance functionality by allowing the loading of a new global instance
added JSON serialization methods to ` StarTreeIndexSpec ` and updated test assertions in ` TableConfigTest ` to improve handling of JSON strings and ensure
added ObjectPostProcessorConfiguration import to HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2LogoutConfigurer , and ServerHttpSecurity classes to
replace double quotes with single quotes in file path replacement calls to ensure consistent handling of backslashes in file paths
[ drools - 102 ] fix in ( ) operator when parent be null
added import for FieldCache and modified field cache purge logic in TestDistributedSearch . java to ensure there ' s more than one segment and avoid FC
add test case for query message boundary event on multi - instance process
add pointeranalysisimpl . resolvestaticcall ( ) to resolve a static method call
add count of message group hash bucket when remove consumer from the queue
sun / security / pkcs11 / sun / security / pkcs11 / securerandom / secmod . java should use slotid instead of
added alignment parameter to the add method in Layout . java and modified the startRenderering method in GdxRenderer in GdxRenderer . java to
[ hotfix ] [ test ] ignore unalignedcheckpointitcase until it be fix
added imports for sound midi classes and modified a null return condition in JDK13Services . java to ensure only valid classes are processed
added a condition to check if the keyword already matches the htmlFilename before adding it to the keywordToReference map to ensure that only unique keywords are
camel - 14136 : camel - core - optimize multicast eip to reduce object allocation .
remove unused method from worddictionary and seggraph
escape special character in statsd telegraf name ( # 644 )
[ java ] add support for udp port for client broadcast on the same multicast address .
rename ` OperatorMulticast ` class to ` OperationMulticast ` and update related references to improve clarity and consistency in naming conventions
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by reducing the timeout duration for message delivery
added a try - finally block around the failure handling in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
fix memory leak in sessionfactoryserviceregistry # destroy ( )
simonstewart : refactoring the test to use the local storage api instead of hard - coded one
[ pytorch ] add test for map of tensor in ivalueutilstest
added a task stack listener to clear the invisible flag in RecentsView and removed the onEnterAnimationComplete method from BaseActivity to streamline the
pdfbox - 4892 : optimize checkdatepattern to check for single - digit date
camel - 14237 : camel - cxf - fix the issue that camel - cxf component do n ' t set the property on the
refactor pending animation handling by extracting the removal logic into a separate method to improve code readability and maintainability by reducing duplication
added logging for debugging and modified play time calculation in LauncherAnimationRunner to improve debugging capabilities and provide clearer play time for debugging purposes
added a conditional check for BailoutOnException in C1XCompilation . java and introduced a new BailoutOnException flag in C
changed default values of signup and passwd from " / create _ account " and " / forgot _ password " to null in Links
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reservedallocations in slotprofile
refactor timeconverter so it do n ' t have to create a new dateformat instance
[ geotiff ] add gc _ nodata property to geotiffreader
sulong : handle null function source section in llvm .
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and ` Default
added a CountDownLatch to manage connection state in TestPathChildrenCache to ensure proper handling of connection state transitions during tests
removed redundant lines of code in ArrayTypeHandler . java to improve code readability and maintainability
replaced the RegexpTunnel class with reflection - based access for retrieving regexp program prefixes to improve flexibility and maintainability of regexp capability management
updated the application selection to use Application . class instead of null to ensure the correct application class is used when creating a new application instance
[ drools - 141 ] fix npe on mutable global
replaced Preconditions with TransactionUtil for asset name , URL , and description validation to enhance validation logic for asset names , URLs , and descriptions to
make copypaste . copypaste . copypaste do n ' t overwrite already exist copypaste .
updated action description and improved error message formatting in LGWebOS classes to enhance clarity of messages and enhance user experience by providing more descriptive context
added new nodes to the configuration in TronNetService . java to ensure that multiple nodes are added to the configuration
added debugging information to the assertions and introduced a failure flag in the BaseTokenStreamTestCase class to improve debugging information and ensure proper exception handling during thread
log4j2 - 1334 add option to trigger time based trigger policy to make sure we do n ' t modify the date in the calendar
refactor ` performItemClick ` and ` findItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` to improve item
pdfbox - 4071 : do n ' t add a ' default ' item to the appearance dictionary if it ' s already there
added aftermethodscope ( ) method to graphdecoder and deprecate methodscope . encodedgraph . iscalltooriginal
refactor HttpSessionDestroyedEvent to retrieve session attributes directly from the session instead of using getSource ( ) to improve clarity and consistency in accessing session attributes
added tests to change the service name in Zipkin using a manually provided service name to ensure that the service name is correctly updated in the Zipkin
added logging functionality to JavaInMemoryFileManager , JavacToJarStepFactory , and JavacToJarStepFactory classes to track spool
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and update related references to improve clarity and consistency in naming convention
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to allow more time for lock
added a default cache capacity parameter to the ConfluentSchemaRegistryDeserializerProvider class to enhance the flexibility of the ConfluentSchemaRegistryDeserializerProvider
replaced the ` remind ` checkbox with a ` checkAtStartup ` checkbox in the ` UpdateInfoDialog ` class to enhance user experience by providing a
added support for additional method parameters in NodeGenerator to enhance flexibility in generating node configurations
no effective change - code cleanup - no functional change
added support for the " __ proto __ " property in the ScriptObject class to enhance functionality by allowing dynamic property access to prototype properties
updated DEFAULT _ READ _ MODE from " heap " to " mmap " and refactored the creation of ImmutableSegmentImpl in ImmutableSegmentLoader
added support for ByteArrayTemplate in ArrayTemplateBuilder to enhance compatibility with byte array templates
added Hipchat property and its getter / setter methods to SamlServiceProviderProperties , and created CasSamlSPHipchatConfiguration class to
updated command registry URLs from a List to a Set and modified resource loading logic to ensure unique command registry URLs and improve resource management
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve logging clarity and provide context context for better debugging
added svnrepositoryconnector . loggedin flag to the svnrepositoryconnector . login ( ) and svnrepositoryconnector . login
camel - 14178 : remove transactionmanager from camel - activemq to avoid npe
cloudstack - 5253 : fix typo in vmwareresource . java
refactor Timers class for improved performance to enhance performance and maintainability of timer functionality
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java `
removed deprecated constant declarations from UAX29URLEmailTokenizer . java to clean up the code and improve maintainability
removed generic ` Map < Object , Object > ` from the ` ScriptObject ` class and replaced occurrences of ` map ` with ` ScriptObject `
refactor EventBusMetrics class to improve event handling logic to enhance performance and maintainability of event bus metrics
[ ds - 1075 ] add method getepersonlocale ( ) to get the locale of eperson and workflowmanager .
updated JaversTransactionalDecorator to implement InitializingBean instead of @ PostConstruct and modified the ` ensureSchema ` method to use ` afterProperties
removed null check for pgTypeName in TypeInfoCache . java to simplify the code by eliminating unnecessary null check
added multiple server settings for multiple handler instances in ScopedHandlerTest . java to ensure consistent server setup across different test cases
add log for calltimeoutexception when call be time out
updated the condition to check if the username or password is empty in the RestLoginProcessingFilter to ensure proper handling of empty password scenarios
updated permissionNode comparison from a string to a wildcard in CommandMap . java to improve code readability and maintainability by using a more descript
renamed ` encoding ` to ` sourceCharset ` and updated related methods for clarity to improve code readability and maintainability by using a more descript
changed the type of ` postLogin ` from ` byte [ ] ` to ` String ` and updated related methods accordingly to simplify data type handling and
refactor GeneralOptimizationDialog to streamline simulation and flight configuration handling to improve code readability and maintainability by eliminating redundancy
camel - 14197 : camel - spring - boot - add option to reload camel context reload .
updated log4j and log4j configuration properties in CommonTestUtils . java to enhance logging capabilities and improve logging configuration
refactor PrologSizeSanityCheck class for improved readability to enhance maintainability and clarity of the code
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a check for supported content types before invoking invokeSafely in RequestBody . java and created a test for non - marked input stream content type
added a check for ` Neo4jEmbeddedSettings . isEnabled ( ) ` in ` EmbeddedNeo4jServer . java ` , modified conditions
update movementdebugcommands . java to use the new prefab asset and health component instead of hardcoded value
updated the RandomLoadBalancer class to include a half length total weight parameter and adjusted the random method implementation accordingly to improve the flexibility of the random load balance
refactor GsonParser to simplify cache string handling and remove redundant checks in MetricsResourceTest to improve code readability and maintainability by eliminating unnecessary complexity
added comments to the parameters for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to clarify the sorting
replaced all instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` across multiple classes to ensure consistency and clarity
( chore ) pipe : replace reentrantlock with a new class pipetaskcoordinatorlock
added a conditional check for using preinstrumented JARs in the DependencyJar return statement to allow the use of preinstrumented JARs
changed the condition from " ! isSilent " to " isSilent " in ExecDriver . java to ensure correct behavior when silent is enabled
added checks in IndexSchema to throw SolrException for unsupported dynamic fields to ensure proper error handling for unsupported dynamic fields in the schema
remove the randomlyreadrepair ( ) method from storageproxy . repair ( )
replaced ImmutableSortedSet with Iterables for adding system include roots in PrebuiltCxxLibrary . java to improve code readability and maintainability by
refactor AdaptableX509CertSelector to initialize startDate and endDate with default values and add isSKIDSensitive and isSNSensitive flags to
log4j2 - 1334 use abstractappender . parseint instead of string . parseint ( string , int ) for buffer size
mark the GuiScreenEvent class as deprecated to indicate that the class is outdated and should no longer be used
remove unused method from categoryeditsearchrecyclerviewadapter
# 118 - enh : add serializable to servercachefactory . createcache ( servercachetype , servercacheoptions )
refactor RocketComponent to iterate over all Rockets before assigning their properties to improve code readability and maintainability by using enhanced for loop
updated JavaCompilerService , SynchronizedTask , and JavaDiagnosticProvider to use post instead of doCompile and added a destroy method to ensure proper resource
refactor Task class to use a Supplier for task creation and simplify the task creation process to enhance code readability and maintainability by reducing complexity in
refactor WanReplicationServiceImpl to use a synchronized block for executor initialization and ensure thread safety to improve thread safety and prevent potential memory leaks
added null checks for session and table properties in Partition . java and modified Driver initialization in DDLSemanticAnalyzer . java to ensure robust handling of null
simplified lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to improve code readability and maintainability
added a new test class ` FilesTest ` and a static method ` delete ` in ` Files ` to validate file deletion functionality and ensure
removed try - catch blocks around socket . close ( ) calls in ServerSocketAdaptor . java and SocketAdaptor . java to simplify exception handling and improve code
updated class name check from " java . lang . System " to Logger . class . getName ( ) in SSLLogger . java to ensure compatibility with
update current working directory handling to use addWorkingDir method to improve clarity and maintainability of working directory management
added null check for ` cn ` and set ` mInsets ` in ` Workspace ` to ensure proper building of items when ` cn ` is
changed access modifier of generatedEntityDecorator from public to private to restrict access to the field for better encapsulation
removed URLs for CSV and JSON files in SimplePostTool . java to simplify the code and improve readability
fix algebraitem . issymbolicdiffers for max and min command
added shutdown thread registration and deregistering for the client container in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to ensure proper resource management
update conditional check to use logical OR instead of logical AND for null checks to improve readability and maintainability of the code
added cleanup methods for webApplicationContext in multiple test classes to ensure proper resource management and prevent memory leaks during tests
added functionality to retrieve a search string from the request URI and modified the remote browse functionality to use it to improve user experience by allowing dynamic selection of
set the neutral button visibility to INVISIBLE in SetupEncryptionDialogFragment . java to improve user interface responsiveness by hiding the neutral button
hhh - 14136 - move count of items from itemserviceimpl to itemserviceimpl
updated SQL statements to include single quotes around table names and columns in DDLTask . java to improve readability and maintainability of the code by
added logging and exception handling methods to CheckTokenEndpoint for improved error management to enhance error reporting and debugging capabilities in the application
updated multiple Java classes to improve consistency and clarity in naming conventions to enhance code readability and maintainability across the project
refactor identity zone endpoint tests to use parameterized parameters and improve request handling to enhance code readability and maintainability by using a more descriptive
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame . java and added tooltip text in SQLConsole . java to improve user experience by
added Surefire version checks and updated warning messages related to single test method execution to ensure compatibility with different JUnit versions for Surefire versions
replaced ` Exception ` with ` IOException ` in ` WorkerShellStep . java ` to improve error handling by throwing a more specific ` RuntimeException `
[ hotfix ] add experimental annotation to datastreamutils , datastreamiterator , collectsink , socketstreamiterator , and socketstreamiterator
refactor StreamCepstrumSource class to improve code readability to enhance maintainability and facilitate future updates
added a boundary check for the index parameter in the List class to ensure that the index does not exceed its maximum size to prevent index out of bounds
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct type validation for SQL expression parsing
added a confirmation flag and required type to the DebugPaste command in DebugPaste . java to ensure that debug paste commands do not require confirmation
refactor : use orElseThrow ( ) instead of . get ( ) in multiple configuration classes to improve error handling by throwing an exception when no endpoint
ggb - 260 fix for the new mathquillgggggggggggggggg
updated GoBinaryDescription . java to replace ` Arg ` class with ` GoBinaryDescriptionArg ` and refactored related imports to improve code
updated application environment handling in Jooby . java to retrieve the logback configuration from the current thread to ensure the application can access the logback
refactor ` SimpleRetryExceptionHandler ` to implement a new ` SecondDummyRetryListener ` instead of extending ` RetryListenerSupport ` to simplify retry listener
( chore ) camel - elasticsearch : fix decimal format for metric value ( # 498 )
changed variable declarations of email and author from non - final to final and refactored the Contribution constructor to use this field to improve code clarity
replaced a loop with a do - while loop for appending to the StringBuilder in JUnitFormatter . java to improve performance and readability of the
refactor the handling of LinkedList to check class type before creating it to improve type safety and prevent potential ClassCastException when accessing elements
updated exception messages to include resource URLs in StaxEventItemReader to enhance clarity of exception messages for better debugging
update testmultirendertarget to make it more stable
added null check for currentProfile before retrieving the client to prevent potential NullPointerException when the current profile is null
replaced ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to ensure
added BigInteger instances for cryptographic operations in KeyStoreManager . java to enhance security by validating cryptographic values
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape ` and ` MeshCollisionShape
[ bpmn ] fix bpmn deployer to set the engine version correctly
updated property settings for resource loaders and file paths in VelocityCompiler . java to improve clarity and consistency in resource loading configurations
added verification methods for thread management in CEntryPointSnippets . java and VMThreads . java to enhance thread management by verifying if a thread is
updated GenericUDFMapValues to handle null maps and added a new test class for GenericUDFMapValues to ensure robust handling of null maps
rename " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests to improve clarity and consistency in naming conventions
add a config option to enable or disable the oil spring generation
added file handling for the " . clean - me " directory in ImportContext and updated conditions in JobQueue and ImporterIntegrationTest to ensure the directory
updated the exception handling in MemoryRealm to use a resource manager for the " memoryRealm . readXml " string to improve code readability and maintain
updated import statements in CRLDistributionPointRevocationCheckerTests . java to streamline dependencies and improve code readability
refactor static final integer constants in ZipConstants64 for consistency and clarity to improve code readability and maintainability by using wildcard imports
refactor ` newFileSystem ` methods to simplify file existence checks and improve error handling to enhance code readability and maintainability by consolidating file
updated the layout constraints for the condition panel in IfControllerPanel . java to improve layout consistency and readability of the condition panel
added an @ Override annotation to the createConnection method in FailoverUpdateURIsTest . java to ensure proper initialization of the connection during tests
added Gson @ SerializedName annotations for base URL , mirrorsList , and repoId in ServiceOsSpecific . java to ensure proper serialization of
use deletebook ( ) instead of deleterecord ( ) in test
refactor multiple Java files related to filtering and execution to improve code organization and maintainability
do n ' t add response message to the response buffer if there be no response message .
change admin console plugin startup / shutdown to restart the web app when the plugin be stop .
replaced the unregisterHandlers ( ) method with direct initialization of MessageConsumers for binary and text handlers to streamline the code and improve readability by
added properties for device ID transformation method , ID table , and ID table log file configuration in IoTDBDescriptor . java to enable configuration options for
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and added a new DelayingSearchComponent class to enhance test coverage and
updated the condition for mockTsp in TestSignatureInfo . java to check if the error is not null to ensure that the mockTsp variable
transactions . hashforwitnessscript should use witness script , not scriptcode .
added " / schema / types / fieldType " to the expression in IndexSchema . java to support additional schema types in the indexing process
added a new class ` OptionCompleterTest ` and modified the return condition in ` Completers . java ` to check for ` NullCompleter `
fix checkstyle issue in util / aws / aws / s3utils / s3utils . java
[ iotdb - 5078 ] use int instead of string for sourcepeerid in logdispatcher .
refactor file upload handling in FtpHelper . java to improve error handling and streamline file upload process to enhance code readability and maintainability
removed unused imports and set alpha values for the reply button in TweetFragment . java to improve code clarity and reduce the visibility of the reply
added mock instances for AccessLogContext and updated expected string formatting in AccessLogSupportTest . java to ensure that the expected timestamps are included in
marycachetest : move testfiles - deleteme to tmp folder
refactor subscriber initialization and remove null checks in SettingImpl . java to simplify code and improve readability by eliminating unnecessary null checks
added null check for marshaller in AbstractSamlObjectBuilder and removed unnecessary initialization in AbstractSaml10ResponseView to improve error handling by providing clearer
replaced printStackTrace ( ) method with LogUtil . warn ( t ) in DataBrowser . java to log warnings instead of printing stack traces
added a condition to check if the assets directory exists in dev mode and created corresponding test cases to ensure correct handling of static directory paths in dev mode
[ hotfix ] [ statebackend ] add writeoptions to rocksdbkeyedstatebackend . db . put ( )
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to improve clarity and consistency
move douglas hint from request to request in mainactivity
[ hotfix ] [ runtime ] enable native mode for secp256k1 , altbn128
rename ` DuclsSandboxTest ` class to ` SandboxTest ` and update references accordingly to improve clarity and consistency in naming conventions
camel - 14156 : camel - cxf - should set exception on exchange . setexception ( ) instead of log a warning .
made the ` forwardPropagateTree ` method public to allow access to the method from other packages
updated SQL query parameter from ` 0 , 0 , [ 0 , 20 ] ` to ` 20 , 20ms ` in JDBCExample . java to
update model validator to warn if $ { project . basedir } be not support during profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future updates
added zoom control functionality in ShareActivity to handle back key events to enhance user experience by providing feedback when a back button is pressed
added a condition to skip deprecated fields when reading and ignoring deprecated annotations to ensure proper handling of deprecated fields in the code
added animations for showing and hiding views in LauncherFragment to enhance user experience by providing smoother transitions during layout visibility changes
reformatted method call formatting in Utils . java for consistency to improve code readability and maintainability
added progressable parameter to multiple createSequenceWriter and createSequenceWriter methods in Utilities . java and related classes to enable progress tracking during file operations
[ hotfix ] fix typo in sourcecoordinatorprovider
added functionality to remove a contribution and update panel ordering and colors in ContributionListPanel . java to improve user experience by ensuring proper panel updates
[ hypervisor ] rename hyervisortemplateadapter to hypervisortemplateadapter and remove @ component annotation
added a check to set dPath to the user directory if it is empty to ensure dPath defaults to the default user directory if it is not
[ java ] default the samplerate for e - ac3 to 48000 instead of the format . samplerate .
log4j2 - 1334 remove unused import of stringmap in mapfilter . filter ( )
updated VerificationInOrderWithCallsTest . java file to improve test coverage and maintainability
changed the parameter from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method call to ensure correct handling of
updated the constant value for COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to standardize the
add a test to check that the listener be connect at the start of the curator framework
[ gr - 5355 ] fix documentation for type . kind . unify and type . kind . intersection
refactor support for one - handed mode in RecentsAnimationDeviceState to improve readability and maintainability of the code
added onDetachedFromWindow method to cancel all running apps in AppsCustomizePagedView to ensure that all apps are removed when the
added support for a dictionary resource in MorfologikAnalyzer and MorfologikFilter classes to enable users to specify a single unified Polish dictionary
replaced the counting of exceptions with a single boolean variable ` thrown ` to simplify the test logic by eliminating redundant counts
changed the initialization message from " debug " to an empty string to simplify the initialization process by removing unnecessary debug information
replace AtomicReference with AtomicBoolean for thread safety in AbstractPhenomenaTest . java and ExceptionUtil . java to improve error handling and logging clarity for
refactor tooltip text handling in ComponentTreeRenderer to use a dedicated method to improve code readability and maintainability by centralizing tooltip text logic
increased the timeout duration from 5 seconds to 10 seconds in the await method from 5 seconds to 10 seconds to allow more time for the zipkin server
add deviantart username / password option to allow login to deviantart .
replaced hardcoded Google Google signature constants with constants to improve maintainability and readability of the code
refactor solution business creation method in ImportDirSolveAllTurtleTest . java to improve code readability and maintainability by using a dedicated
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes
added emailDescription to templateData in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to provide a clearer description
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` to improve code readability and maintainability by
modified the ` getISO3Language ` method to return a specific language if the provided language length is less than 3 to ensure correct retrieval of the
refactored change log parsing and validation logic in Liquibase . java to improve code readability and maintainability by centralizing change log parsing
added a check to return early if screen pinning is active to improve performance by avoiding unnecessary processing when screen pinning is active
added functionality to display tooltips for no chart data to improve user experience by providing clearer feedback when no data is available
added synchronized blocks to check if the response head has already been sent in Http1xServerResponse and Http2ServerResponseImpl to ensure thread safety
[ java ] do n ' t use chunkedinput in nettyresponse if ssl be enable .
added " : scheme " header to all requests in Http2TestBase , TestHttp2Limits , and TestHttp2Section _ 8 _ 1
fixed - rlocalcachedmap . containskey ( ) , rlocalcachedmap . containskey ( ) , rlocalcachedmap . containskey
camel - 14197 : camel - jpa - do not initialize entitymanager / transactionmanager in dostart ( ) so we do n ' t
changed variable name from fallSpeed to jumpSpeed in PhysicsCharacter . java to ensure consistency in naming conventions across the codebase
added a null check for reparsedFunction in the condition of env . _ no _ syntax _ extensions to ensure that reparsedFunction is not null
replaced instances of ` log ` with ` logger ` and added new imports for ` Order ` , ` LimitOrder ` , and ` ExchangeEvent
added a deprecated method ` getOldUploadSegmentHttpURI ` and ` getOldUploadSegmentHttpsURI ` to replace deprecated methods with a new
updated findOne method to accept a filter parameter to enhance query performance by using a specified filter
camel - julian - add test case for juelin - juelin
added a method to bound the alpha value to a maximum of 1 to ensure that alpha values are within the valid range of 0 to 1
updated the string replacement for the " version " attribute in ManifestReversion . java to properly quote the version string to ensure proper formatting of the version
refactor DataSyncConfiguration class to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized JavaSnippetRepository to enable snippet repository initialization for improved functionality
added a loop to update sums based on the number of time buckets in StarTreeRecordStoreCircularBufferImpl . java to improve performance by ensuring
[ java ] update the url of the chrome downloads page to the new googleapis page .
camel - 13636 : camel - pgjdbc - use preparedstatement to execute pgevent and pgeventproducer in camel - pgevent
make sure we close the inputstream in case we do n ' t close it .
added handling for " Content - Length " header in TransferCompletionHandler and updated NettyAsyncHttpProvider to use FluentCaseInsensitiveStringsMap for headers to
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
removed the constructor of EnhancedRuntimeException that takes a message , throwable , and writableStackTrace parameters to streamline the exception handling by eliminating unnecessary parameters
[ java ] improve socketappendertest by wait for the udp server to be available .
camel - 14197 : camel - jbang - remove camel - event - admin - endpoint - dsl . event - admin - should not
updated method signatures and parameters in ByteArray . java for improved clarity and functionality to enhance code readability and maintainability by standardizing parameter order
added a method to disable the input proxy during touch events in RecentsAnimationWrapper . java to improve touch event handling and debugging for better debugging
camel - 6770 : enable camel - restlet test until camel - 6770 be fix
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method in ` HashTableTemplate . java ` to simplify the method
move modulepath test to test / com . hazelcast . test . modulepath
added a method ` getSourceDirs ( ) ` to ` JavaServerConfiguration ` and adjusted formatting in ` JavaLanguageServer ` to improve code read
removed the visibility control for the " Open Web " menu and replaced it with " mute _ hashtags " to simplify the menu logic and improve
updated method names from ` nodeIsAncestorOfItself ` to ` nodeIsNotAncestorOfItself ` and modified assertions in ` AncestorDescendant
fix a crash in the worldeditplayer when the player ' s search position be negative .
fix ( iotdb - 4892 ) : fix partial insert error when data type do n ' t match
removed extraneous characters from the closing brace in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] make mailboxexecutor optional in streamoperatorfactory and continuousfilereaderoperatorfactory
hbase - 20527 hbase - 20564 add security check for settablestateinmeta and fixmeta in hbase - admin
updated method references and print statements in GatewayMetricFilterTests . java to improve code readability and maintainability by using method reference syntax
fix a bug in the blockjunit4classrunner that cause the test to fail .
[ drools - 126 ] use lasttimedata instead of remoteitems in delete ( ) for kiewatcher
updated calculation for allAppsCellWidthPx to include allAppsCellPaddingPx to improve layout consistency by incorporating padding
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
replace direct calls to ` doc ( ) ` with calls to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that the merge operation performs
hhh - 11445 make session . close ( ) a closeable to make it easy to use .
refactor GetLocations class to improve code readability to enhance maintainability and facilitate future updates
schemavalidatortask : do not print stacktraces to system . out . println ( )
removed unchecked IOException wrapping in the catch block to simplify error handling and improve code readability
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android versions
ruby flavor : improve ruby flavor performance
updated logging level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
[ java ] remove the usecaches field from nio2endpoint . java .
refactor CasGeoLocationConfiguration to use Resource for database reading instead of CasConfigurationProperties to improve flexibility and maintainability of database reading logic
update test to show the correct view for test session result page
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter and modified its logic accordingly to enhance functionality by allowing the use
removed the ` public ` access modifier from multiple methods in ` ApprovalStore ` , ` ApprovalsControllerService ` , and ` Approval
added a boolean flag to track if the download process has started to ensure notifications are canceled when the download process is stopped
replaced the method ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added a new method ` getView
updated project version from 1.0 . 11 to 1.0 . 13 and corrected the release date to reflect the latest release version
replaced ` yield ( ) ` method calls with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure consistent yield behavior across
refactor GsonBuilder class to improve code readability to enhance maintainability and facilitate future updates
added null checks before adding circle centers in ProverBotanasMethod . java to avoid potential NullPointerExceptions when adding circle centers
remove - h : / / espressohome option , use graalvm ' s home finder instead .
doc : fix javadoc warning in java . lang . ct
removed the ` deleteSession ` boolean and its associated getter / setter methods from ` DeleteSessionAction ` and ` timeToDieInSeconds ` to
corrected the casing of the class name from ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to
initialize ` sz ` to 0 and modify ` result ` initialization in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and ` Test
updated triggerMediaScan method to include a file parameter to enhance media scan triggering by passing the file object to the method
removed conditional printing of test results in TestRunning . java to simplify the code by directly posting test results
added methods to set custom G - code settings in MainWindow to enhance user experience by providing custom G - code settings
updated import statements and changed writer initialization in AdditionalJaxbMappingProducerImpl . java to use UTF - 8 encoding to ensure proper handling of character encoding
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future updates
added exception handling for the " unset . sys . property " property and reset exception ignores in TestBadConfig . java to ensure proper test execution
added a method to remove fragments and the action bar in GpsMainActivity to ensure the correct action bar is removed when the activity is closed
updated spanishTokens and spanishTokens2 list to include a parentheses list to ensure correct parsing of spanish tokens in the tokenizer
refactor Range handling in RemoteMediaHandler and RemoteRawHandler to use Byte type instead of Range object types to improve code clarity and maintainability by
updated G - code file paths and modified translation logic in VisualizerCanvas . java and GcodeViewParse . java to include additional G - code
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwardsCompatibility .
removed redundant lines in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintainability
added a condition to close the exchange client if the output stage is null and the query state is done to ensure proper resource management and prevent memory leak
fix integrity check test and remove unused code
removed unused import of SolrClient and a shardToClient map in ChaosMonkey . java to streamline dependencies and improve code clarity
do n ' t try to use database configuration store if it ' s null
removed redundant line breaks in NestedRepositoryTreePanel . java to improve code readability and maintainability
added validation for the ExtensionTypeHeader constructor and its length in ExtensionTypeHeader . java to ensure that the ExtensionTypeHeader constructor accepts an integer type
pdfbox - 4892 : do n ' t swallow ioexceptions in updatefieldappearances
changed the default values of pushOnShutdown and deleteOnShutdown from false to true and added getter and setter methods to ensure proper configuration of pushOn
updated the ` handleEvent ` method to accept a ` MonoSinkStateMachineExecutorCallback ` parameter and added error handling for state machine trigger errors to improve
added a test to verify the correct behavior of the getPythonInterpreter method on paths to ensure that the correct Python interpreter is used when multiple Python executable
added a default button to the user ' s default button in the initial account registration frame to enhance user experience by providing a clearer feedback on the
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN and modified
add exception to log message when exception occur
move reflectionutils out of the ' reflection ' package to ' org . axonframework . util '
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created ` OidcIdToken
removed private Vector2 center field from multiple shape classes to streamline code by eliminating unused center variables
[ hotfix ] [ runtime ] fix checkstyle violation in registerandprocessbundleoperation
refactor SslContextFactory to improve SSL context handling to enhance security and maintainability of SSL connections
[ hotfix ] [ test ] remove maxexplictions from configurationproperties
updated return value in AccessController . java from " access _ confirmation " to " access _ confirmation _ error " to provide a more specific error message
add a consumerclassloaderfilter to provide a way to specify the class loader
modified the ` shiftRows ` method to include a ` boolean ` parameter for copying and resetting row heights to enhance row shift functionality by allowing
corrected the spelling of " Rollover " and " RolloverPressed " in FontImage . java to ensure the correct handling of pressed icons
refactor TaskViewUtils , TaskViewSimulator , RecentsView , and TaskViewSimulator to improve grid translation handling to enhance code readability and
refactor assertions methods in Assertions . java to improve code readability and maintainability
added a null check for currentDateTimeFunction in multiple database classes to return the current date function if it is not null to improve performance by avoiding unnecessary
added an anonymousPath method to IOUtils and updated Log4jUtils to use it to improve anonymous path handling and ensure consistent logging output
updated the ` call ` method in ` DigitalWellBeingToast ` and ` TaskView ` to include a content description parameter to enhance
[ java ] do n ' t wait for meta availability if timeout be 0 .
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
make genericitem . getstate ( ) return stateconverterutil . defaultconversion ( ) instead of null
added Hibernate integration tests and modified imports in BidirectionalOneToOneNPlusOneTest . java to utilize ClassImportIntegrator and
removed extra empty screen from the workspace and updated the startSearchPageIndex initialization logic to ensure proper handling of empty workspace screens and improve search page index
updated HashMap and HashSet initializations in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve memory efficiency and
update GoogleLineChart and GooglePieChart to use double quotes instead of single quotes to improve consistency and readability of string representations
do n ' t call getandset ( 0 ) when wait for batch to complete .
added a position field and methods to set and manage its value in WALPrettyPrinter . java to provide better insights into file positioning and
updated the timeout value in the NettyTransceiver constructor from 1 to 0 to improve the reliability of the NettyTransceiver initialization
refactor event report generation to sort events before generating the report to ensure the report reflects the current event ' s start time before generating the report
added a new test method ` getCsvLine _ DescriptionContainsDoubleQuote _ returnsCSVLine _ WithDoubleQuote _ ReturnsCSVLineWithEscapedQuote
added Chinese properties to DcorefChineseBenchmarkSlowITest and corrected method parameter names in AbstractSequenceClassifier to enhance flexibility in
fixed - iqrouter and iqhandler do n ' t check if the recipient be a remote .
removed the @ JniImpl annotation from VM . java to clean up the code and improve maintainability
updated configuration settings in Fetcher2 . java to use Protocol constants instead of hardcoded strings to improve code readability and maintainability by using
added a condition to check if the video HDR format is not " dolbyvision " in the FFMpegVideo class and
updated package names from " other _ package " to " other _ package2 " in AstTests . java to ensure consistency in naming conventions
fix worldborder . setworldborderdiameter ( ) . resizeworldborder ( ) and add unit test
hbase - 27113 addendum fix wal replication bug in hmaster
make sure we do n ' t send a login event if it ' s successful
refactor routingTable to use a single instance configuration list instead of a new empty list to improve code readability and maintainability by using a consistent
changed the access modifier of the FieldAttributes class from package - private to public to allow access to FieldAttributes from other packages
added unit tests for handling missing versions in the ProjectBuilder class to ensure that the ProjectBuilder correctly handles and handles potential errors during project building
removed redundant checks from the if statement in PropertyMap . java to simplify the conditional logic for better readability and maintainability
refactor ` getControllerId ` methods to accept ` configId ` as a parameter and simplify relay addition logic to enhance code readability and maintain
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper resource management
removed the condition checking for refresh token generation in the OidcConsentApprovalViewResolver to simplify the code by removing unnecessary checks
removed a debug print statement from the Http2SolrClient class to clean up the code and improve readability
replaced a lambda expression with a custom NoopGetter implementation in BaggagePropagation . java to provide a clearer implementation of a noop getter for
refactored conditional on enabled resource chain implementation to improve code readability and maintainability
added a condition to check if the tree root has children before proceeding to ensure that the BarrowmanCalculator correctly handles cases where the root node
updated the StreamInputStream from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in JBIG2Filter . java
added CN1 logging statements and modified logging statements in FacebookImpl . java to enhance logging clarity and ensure proper handling of session state changes
updated the return values in ShadowICU from " h : mm a " to " skeleton " and added a new test for date picker functionality to
removed the use of KeyguardManager and simplified the condition check in TouchInteractionService . java to streamline the code for better readability and maintain
cloudstack - 5202 : do n ' t set the default disk offering id if it ' s null
updated ` UtowBodyHandler ` to use ` AsynchronousFileChannel ` instead of ` FileChannel ` and added a ` position ` variable to
reformatted code for consistency and readability in SigInt and SigIntTest classes to improve code readability and maintainability
refactor updatebyboundingboxresize ( ) to prepareboundingboxresize ( ) and text . update ( ) to prepareboundingbox
change return value from - 1 to 0 in the Asset class to ensure the method always returns zero instead of - 1
refactor ComputeBenchmark to use static final constants for valueLoader and mapping functions to improve code readability and maintainability by reducing the number of
added an OnRefreshListener to the UploadListFragment to notify the adapter when the data is updated
fix file type in bibdatabasecontext to use path instead of file . tofile ( )
refactor ParticleEffect to use a single get method instead of a constructor parameter to improve code readability and maintainability by standardizing access to
fix tomcat . gethost ( ) and getservice ( ) to return the first service / engine
updated error messages in ` BuildRuleFactoryParams ` , ` Console ` , and ` BuildRuleFactoryParamsTest ` to include a period before the
added a condition to check if the playback state is not playing before proceeding to ensure proper handling of playback state transitions
replaced the retrieval of ` ServiceComponentDesiredStateEntityPK ` with a direct retrieval of ` serviceComponentDesiredStateEntity ` directly to simplify the code
refactor Java2TypeScriptTranslator to improve inner class handling and add a new test class for inner class field clash functionality to enhance code clarity and
added logging and follow - redirect functionality to DockerClientFactory and DockerClientProfile classes to enable customizable logging and follow - redirect functionality based on configuration
replaced direct calls to ` displayChanged ( ) ` with ` awtUnlock ( ) ` and ` awtLock ( ) ` for better resource management to
hhh - 10183 - fix nationalizedscalarquerytest failure on oracle
OPCPackage . java and ZipHelper . java use a try - finally block around verifyZipHeader ( ) and close the input stream to ensure
changed the access modifier of the ` storeClassFile ` method from private to public to allow access to the method from other packages
added a new test class ` TestSortedSetDocValues ` and modified the preference for ` NO _ MORE _ ORDS ` in ` ec
updated error messages to remove unnecessary details in CGIHandler . java and added JavaVM callback handling in JavaVM . java to improve error handling clarity
added support for additional line endings in LineReaderImpl . java to enhance functionality by allowing more flexible line endings
changed the parameter type of ` multiFetchSourceFiles ` from ` List ` to ` Set ` and updated related method implementations accordingly to improve performance
added a check to return early if the mesh ' s vertex count is zero to prevent processing when the mesh is empty
refactored test methods in IncorectBindingPuzzleFixedTest and IncorectBindingPuzzleTests to improve clarity and error handling for
replaced ` createData ( root , menuPath ) ` with ` createFolder ( root , menuPath ) ` in ` MacroService . java
fix checkstyle issue in util / typesystem . java
refactor JsonObject class to improve code readability to enhance maintainability and facilitate future updates
updated the condition to check if ` _ maxIdleTime ` is greater than zero in ` SelectChannelEndPoint . java ` and modified the return logic
fix farmlandblock . cansustainplant ( ) not call cansustainplant ( ) correctly . close # 1088
added a new database metadata table " SALTEDTABLE123 " and modified test cases to include SALT _ BUCKETS and disable view indexes
updated SimpleDateFormat instantiation in HttpCookie . java to use Locale . US and added a new class B6791927 . java to ensure consistent locale
removed multiple redundant calls to db . close ( ) in DbHelper . java to streamline resource management and improve code readability
increased the timeout duration for polling processes in BatchMessageListenerContainerIntegrationTests from 1 second to 5 seconds to improve test reliability by allowing more time for
make economyallocationstage constructor accept optionvalues .
use keybindingrepository to listen for save keybindings in sourcetab
replaced the initialization of ObjectMapper with a static block that sets the line separator to newlines to ensure consistent line ending behavior across different operating systems
replace backslashes with forward slashes and brackets in the name variable to ensure proper path handling for Windows environments
replaced the usage of ` Application ` with a static ` Application ` reference in multiple test classes to streamline the application initialization process and improve code clarity
[ java ] remove record log validation code that be no longer need .
fix itsystemtest . java to use the correct errorgroupname
do n ' t run testfuzzoptimizations when run on travis
added a private boolean variable ` reverseImage ` and removed its initialization from ` sharedPrefs ` to streamline code and improve maintainability by eliminating
updated string comparisons in multiple files to use ` equals ` instead of ` equals ` for better readability to improve code clarity and maintainability by
[ mdm ] fix mdmmatchlinksvctest and add new terserutil method
updated JUnit imports and annotations from ` org . junit ` to ` org . junit . jupiter ` and ` org . junit .
[ hotfix ] [ table - common ] remove usage of new . arraylist ( )
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated the ` triggerTime ` variable to use ` LocalDateTime . ofInstant ` with the default timezone to ensure the ` triggerTime ` is formatted in
added a method to maybe create an abstract method error thrower in MethodHandleResolver . java to improve error handling for abstract method errors in interface and private
simple language : allow $ { body . xxx } or $ { body . ogl } a valid syntax
remove unnecessary check for empty iterables in AbstractParser to simplify code and improve readability
camel - 14144 : camel - jclouds should copy the input stream to the output , not the input stream .
camel - 14134 : camel - osgi - remove ignore annotation for osgi bundle
added a check for the ACC _ STRICT access flag on default methods in Check . java and created a new test class CheckACC _ 
[ java ] increase driver timeout to 2 second in test .
added a new file ` FileExtensions . java ` that defines constants for C - style file extensions to provide a standardized way to define file extensions
replaced the ThreadLocalDateFormat class with a static final instance of ISO8601CanonicalDateFormat in DateFormatUtil . java to simplify the code and improve thread - local
remove usecgroupmemorylimitforheap in favor of usecgroupmemorylimitforheap
added ` displayName ` and ` title ` fields to multiple classes and updated the ` DelegatedClientIdentityProviderConfiguration ` to use them to enhance customization
added EarlyTerminationException to handle early termination exceptions in multiple operator classes to improve error handling by providing a specific exception for early termination scenarios
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
updated session response handling in HttpBindServlet and HttpConnection classes to improve connection management and response consumption to enhance the robustness of session management and ensure
fix npe in event . getcapabilities ( ) when parent be null
wallettool : do n ' t swallow keycrypterexception in try / catch block
added a @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that these classes are outdated and should no longer be used
updated the calculation of the length in the HyphenationTree to correctly reflect the original length of the hyphenation string
added a sleep delay of 200 milliseconds in IQRegisterHandler . java to ensure proper synchronization during registration process
move resources . java to swing package so it can be use by other package .
corrected the spelling of " javac flag - parameters " in the PARAMETER _ NEEDS _ TO _ BE _ NAMED constant
added a new boolean variable ` providersChanged ` and initialized it to ` false ` in ` ConfigurationManager . java ` to track the state of providers
added a method to quote identifier tokens in the SemanticAnalyzer class to ensure that identifiers are properly escaped during parsing
added a null check for the ' name ' entry in the font provider to handle cases where the ' name ' entry is missing to ensure proper handling
updated the type casting of ` loader ` and ` lookupClass ` in ` SolrResourceLoader . java ` to improve type safety and suppress unchecked warnings
modified the condition to check for the parent of the hit actor before returning the current window to ensure that the current window does not contain the current window
added null check for appManifest before retrieving targetSdkVersion to avoid potential NullPointerExceptions when appManifest is null
refactor ` ConfigurationMetadataGenerator ` to replace ` DefaultPrettyPrinter ` with ` MAPPER ` for case - insensitivity to improve
added userName property and its getter / setter methods to Driver and HiveSemanticAnalyzerHookContext classes to allow customization of user name in the driver configuration
added setter methods for XSLT source , URL , and XML converter in XsltBuilder . java and updated the instantiation method in XsltComponent
added Hadoop shim imports and updated constructors in ContainerRunnerImpl , TaskRunnerCallable , TestFirstInFirstOutComparator , and TestFirst
removed redundant variable assignments for destination URIs in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to improve code clarity and
do n ' t log access time out if there be no context
added a return statement and modified log message formatting in ThroughputLogger . java and ThroughputLoggerTest . java to improve logging efficiency and provide clear
java : add diagnostic option test for - xx : + unlockdiagnosticvmoptions .
replaced ` MeterStatisticsManager . statisticsOperationMap ` with ` statisticsModelMap ` and updated related method calls to include ` MeterDetailStatistics
updated logback initialization logic in FrameworkLauncherExtended . java to improve error handling and ensure proper configuration file resolution
added validation annotations to methods in CipherExecutor , CookieRetrievingCookieGenerator , CookieValueManager , and DefaultCasCookieValueManager classes to
replaced instances of ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in ` ExecutableMacroExpander . java
refactor ` waitUntilReadyAndSucceed ` and ` HttpWaitStrategyTest ` to use try - with - resources for better resource
rename the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test
removed unnecessary whitespace in RelativeDateFormatTests . java to improve code readability and maintainability
added generateShieldAddress method to RpcApiService to generate shield addresses to enhance functionality for handling shield addresses in the application
changed return type of ` readConsoleInput ` method from ` byte [ ] ` to ` String ` across multiple classes to simplify method implementations and
updated regex patterns and variable initialization in TestStabilityRule . java to enhance compatibility with newer platform specifications
added functionality to limit fragment matching for multi - valued fields in DefaultSolrHighlighter to ensure proper handling of multi - valued fields in the highlighter
modified the ` tryToLogin ` method to accept a ` Uri ` and additional parameters for authentication to enhance the login process by allowing user credentials for
removed unnecessary VisionTypeOuterClass and updated entity handling in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to stream
fixed checkstyle issue in jmsproducer . java .
removed wrapCollection ( parameter ) from the update method call to simplify the parameter handling by directly passing the parameter
added error handling for unknown currency currencies in BTCEAdapters . java to improve robustness by ignoring unknown currency exceptions
refactor subscription creation logic to use a candidate subscription name variable to improve code readability and maintainability by using a more descriptive variable name
pdfbox - 4892 : fix typo , a suggest by valerybokov
modified the ` startController ` method to accept a ` boolean ` parameter for tenant isolation and added new methods for broker and server tenant creation to enhance
replaced ImmutableMap . builder ( ) with direct casting of response value to simplify code and improve type safety
added a check for non - empty attributes in ProjectWorkspace . java to ensure that only valid attributes are processed
added methods to retrieve project JDK names , types , and languages in AbstractIjProjectConfig , and updated IjProjectWriter to use
changed the property name from " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify the purpose of the optimization option
added tests for resolving ACLs with specific user details in GrantedAuthorityEffectiveAclsResolverTests to ensure correct functionality and correctness of ACL resolution
use methodsolver . getsolvedjavalangobject instead of new reflectionclassdeclaration ( object . class , typesolver )
added button count management logic to XToolkit . java to ensure that the application does not exceed the maximum number of buttons available
updated import statement for assertEquals from jdk . testlibrary . Asserts to com . oracle . java . testlibrary . Asserts to ensure compatibility with
added a new class ` MessagePackFactory ` with multiple overloaded methods for packing and unpacking messages to improve flexibility and maintainability of the
add ` ` is _ desert ' ' and ` ` is _ cave ' ' to all the biome tag .
rename the ` present ` method to ` draw ` in multiple screen classes to improve clarity and consistency in method naming
added a check for horizontal orientation before setting the BoxLayout in ComponentGroup . java to ensure proper UI ID assignment based on the orientation of the horizontal component
do n ' t use doi _ url _ pattern . matcher ( identifier ) for url matching .
replaced ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput
[ java ] remove volatile counter check from cluster service counter .
add @ idclass for @ usersite for @ record and @ embeddable @ idclass ( ` ` usersite ' ' )
refactor HttpConverterRegistrar to handle IP address and port retrieval more robustly to improve error handling and provide clearer context for invalid addresses
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5108 : do n '
replaced ` dir . openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` dir . fileLength ( fileName ) `
updated ` JavascriptCompiler ` to use ` final ` and refactored class methods for better immutability to enhance code clarity and maintainability
removed synchronized keyword from the UISettings class and modified the store method ' s synchronization to improve thread safety and ensure proper synchronization within the UISettings class
added a check for native text input and changed the access modifier of the fireDataChanged method from private to public to allow external access to the method
[ spannerio ] improve error message when retry on multi - transaction transaction fail .
[ hotfix ] [ test ] remove redundant generic type parameter in java . util . map
updated array type check from double to short in ObjectInputStream and added a new CloneArray class to ensure correct cloning of short arrays in ObjectInputStream
refactor nonce retrieval and error logging in OIDCAuthenticationFilter . java to improve code clarity and maintainability by using a more descriptive
added a condition to check if a field is a relationship field in DCInputSet . java to ensure proper handling of relationship fields in the input set
added server slogan support and updated capability handling in multiple classes to enhance user theming capabilities and improve code clarity
modified the conditional logic for item comparison in DrawerActivity . java to ensure proper tinting of menu items based on the current item
added JUnit Assume for exception handling in SolrRequestParserTest . java to ensure test only works when there is a network connection
added a check to return early if no missing symbol events are present to optimize performance by avoiding unnecessary processing when no events are present
updated StringHelperTest . java to include additional data fields and added HTML table structure to enhance test coverage and ensure proper formatting of XML structure
added a warning log when the data provider returns an empty array or iterator to inform users that the data provider is not returning an empty array or iterator
use collections . emptymap ( ) instead of collections . empty _ list / empty _ set / empty _ list / empty _ set / empty _
change freeplaneversion from 1.9 . 0 to 1.9 . 8 and update map style model for newer version .
update physicsrigidbody . setrestitution to use restitution instead of mass
added a new file AutoFtpActivity . java to implement FTP testing functionality to enable automated testing of FTP operations in the application
refactor token type checking in BaseSemanticAnalyzer to use a local variable for clarity to improve code readability and maintainability by reducing duplication
added getter and setter methods for component state in ImageViewer , OnOffSwitch , Component , GenericSpinner , and UIBuilder classes to enhance component state
added a new file ` RemoteExecutionEnabled . java ` and corresponding test cases in ` BuildableSerializerTest . java ` to implement serialization and deserialization
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced FileReader and InputStreamReader with InputStreamReader and StandardCharsets . UTF _ 8 in ImportCsv . java and related files to ensure proper character encoding handling
added assertWorkingScoreFromScratch method call to assertShadowVariablesAreNotStale in AbstractScoreDirector . java to ensure that working scores are not stale
updated the configuration property for semijoin conversion from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
added logging functionality to ` DatagramPacketByteArrayDecoder ` , ` DatagramPacketByteArrayEncoder ` , ` DatagramPacketDelimiterDecoder ` , and ` DatagramPacketObjectEncoder ` classes
updated the ` removeFile ` method to ` removeDirectory ` and refactored file removal logic in ` FileDisplayActivity ` to improve directory management
added assertions for transaction hash presence and assertions in PollingTransactionReceiptProcessorTest . java to ensure that the transaction hash is correctly validated and validated
added a deprecated annotation to the ISchemaRegion class and modified the test method name from ` testConstructSchemaBlackList ` to ` testDeleteTime
throw an exception if the new format do n ' t have a valid sample mime type .
replaced instances of ` this . notify ( ) ` and ` this . wait ( ) ` with ` notifyAll ( ) ` and ` notifyAll ( )
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to the ` @ AllArgsConstructor ` annotation to specify the
added support for creating an index on a view in MetaDataClient . java to ensure that index creation is only allowed for views in the database
added a new class ` Website ` and modified imports in ` PopulatorImplTest ` and ` PopulatorImplTest ` to include a
added a setup method to BSFormatterTest to set the default locale to " en " and set the default locale to " US " to ensure
add a warning log when there be a badly download jar file in the coremods list
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve readability and maintainability of the test
added a check for single parameters in SimpleExprGenerator to include passed local tokens to ensure correct handling of single expressions in the analysis process
added a boolean flag ` createdVertx ` to track the creation state of ` vertx ` to ensure that ` vertx ` is only created when `
updated writeAttributes calls to use the node object instead of null to improve code readability and maintainability by using a single instance of NodeModel
updated log messages to remove unnecessary concatenation in SynchronizeFolderOperation . java and added null checks in FileDisplayActivity . java to improve code readability
added a new property ` ignoredReadStatus ` to the ` Entries ` class and updated ` CategoryREST ` and ` FeedREST ` to set
updated file path resolution in TestAnnotationConfiguration and WebAppContextTest to use MavenPaths for improved resource handling to enhance code readability and maintainability
added validation for URIRegisterDTO instances in the RegisterServerConsumerExecutor class and updated URIRegisterExecutorSubscriber to check for valid data before proceeding with
updated the condition for determining if the sound is paused in GwtMusic . java to ensure proper playback behavior when the sound is paused
added PERMISSION _ ADMIN _ SUDO _ AREA permission to permissions check in MainCommand . java and Captions . java to
refactor query options handling in ServerRequestPlanVisitor and update related tests in QueryRunnerTestBase and QueryRunnerTest to improve code readability and maintain
updated path name checks in parser input file objects to use ` path . getFileName ( ) . toString ( ) ` instead of ` endsWith ( ) `
updated assertions in ResourcesTest to check for both " pureEmoji " and " mixEmojiAndText " attributes to ensure correct behavior of the attribute set
modified the ` NMTWaitForDataMerge ` method to ` NMTOverflowHashBucket ` and added ` NMTMallocWithPseudoStack
[ hotfix ] [ runtime ] refactor eitherserializersnapshot to use javaeitherserializersnapshot
updated AddressResolverOptions to use new constants and methods for handling resolv options to improve code readability and maintainability by centralizing option parsing
added a call to the superclass ' s __ associate method in RequestRockerTemplate and created a corresponding test in RequestRockerTemplateTest to ensure
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated namespace paths from " liquibase / parser / core / xml / " to " www . liquibase . org / xml / " across multiple files to
move commonmimetypelocator to a test package and move it to the test package .
replaced instances of ` INIT ` with ` NOT _ REQUIRED ` in ` RepositoryVersionState ` and ` ServiceImpl ` classes to align repository
updated comparison logic in GenerateChangeLogTask to include additional schema types to enhance comparison capabilities for different schemas in the diff generation process
replaced JUnit Test import with TestNG annotations Test in TestBackwardAnoamlyFunctionUtils . java to align with the new TestNG framework
added a new file ` ProgressiveJPEGTest . java ` to implement a graphical test for progressive JPEG rendering to verify the functionality of
updated the material loading process by replacing setAlphaTest and setAlphaFallOff with setFloat and set properties for ambient , emiss
make native - image build error message more informative .
added a null and length check before setting the size in Label . java to prevent potential NullPointerExceptions when text is null or empty
update readVarInt ( ) method to modulo 1 _ 000 _ 000 to ensure correct handling of variable integer values
made classes final and added private constructors in PushUtils , ThumbnailsCacheManager , and ThumbnailsCacheManager to enforce immutability of the
replaced the bounds calculation with a direct call to curConfig . getLength ( ) to simplify the code and improve readability
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code and improve readability
updated the filter parameter in the load method from " . * csv " to " ? i " for the presets CSV file to enhance flexibility in
added accessibility announcement condition in TaskbarStashController and updated variable names for consistency in ActivityContext and FloatingIconView to improve accessibility handling and
replaced direct calls to ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( ) ` in `
pmd : add targetjdk13 and targetjdk15 option to pmdtask
replaced PowerMockito with MockitoJUnitRunner and updated test methods for QuotaTariffVO and QuotaTariffVO to improve
added PrintStream variables for error and output streams in TestSchemaToolCatalogOps . java to improve debugging capabilities and ensure proper resource management
added a DFSClient parameter to the constructors and methods in FanOutOneBlockAsyncDFSOutputSaslHelper to enhance functionality by allowing
added RepositoryMetadata parameter to MongoQueryMethod constructor and updated related method signatures to enhance functionality by allowing more flexible metadata management in the query method
refactor digester to use a wrapper for the entityresolver2 class to improve code readability and maintainability
removed redundant static imports and added new constants from MetaDataEndpointImpl . java to streamline import statements and improve code readability
increase ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and introduce a retry interval for deadlock handling to improve reliability of deadlock
renamed ` xl ` to ` xAxis ` for consistency in ` BarChartActivity . java ` and updated ` YAxisRenderer . java ` to
added methods to check for printable characters and Windows system names in FsUtils . java to enhance character validation and validate system names
rename selenide . in ( ) to selenide . using ( )
add processpluginconfiguration flag to projectbuilder to allow process plugin configuration
[ java ] correct conversion of float to double in proxy traffic counter .
cloud vision : use google - cloud - vision / src / test / resources if available
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remote host retrieval in Authenticated
do n ' t show the admin button in communitylistservlet if the user have permission to access the community
added long and short compaction thread counters to their names in CompactSplit . java to enhance thread naming for better debugging and tracking of compaction
updated the way the package name is retrieved in WallpaperChooser . java to ensure the correct package name is used for better resource management
updated the method to retrieve visible plot players in the Near class to enhance player visibility by filtering players based on their visibility
updated multiple Java files including AndroidManifest , ResName , ShadowMediaPlayer , ShadowMediaPlayer , and ShadowActivity to improve code organization and maintainability across the
refactor MlibOpsTest . java for improved readability to enhance maintainability and facilitate future updates
replaced string literals with a constant for OperatingSystemImpl in JNIRegistrationManagementExt . java to improve code readability and maintainability by using
corrected a typo in the attribute name from " referencedContainer " to " referencedContainer " in SchemeGenerator . java and added a test for
refactor key and initialization logic in UploadFileOperation . java to use generated keys and initialization vectors directly to improve code readability and maintainability by
add @ stability ( flavors = LOCAL | POSTSUBMIT ) annotation to workprofiletest
removed conditional check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary checks for bucketing version
replaced ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` GwtTestWrapper
refactor LockFreeBucket to extend an abstract class and add new classes LockFreeBucketLayout and LockFreeBucket _ FinalFields _ CacheLinePadding
add tpstats to node probe to help debug thread pool usage
updated maxBitrate setting to use userPreferences . getMaxBitrate ( userPreferences . getValue ( ) ) to ensure that the maximum bitrate is
refactor ZipkinHttpSpanExtractor to introduce methods for checking trace and span ID presence to improve code readability and maintainability by consolidating
do n ' t filter payment account if not bsq swap or dao activation
remove reflection - based usage of lookupelement . withtypeiconrightaligned ( true )
added a line to set the project in LauncherUtils . java to ensure the project is set correctly during execution
updated JsBundle , JsBundleBuilder , JsLibraryBuilder , and JsTestScenario to include ProjectFilesystem as a parameter to enhance
refactor envelope - related classes for improved organization and clarity to enhance maintainability and readability of the codebase
refactor MetricsDSLContext to improve code readability to enhance maintainability and facilitate future updates
removed the VersionConfig interface and modified its implementation in VersionBuckConfig . java to simplify the class structure and improve code readability
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve error handling and prevent potential runtime exceptions
changed the visibility of the ` validateTypes ` method from static to public and updated the exception message from ` AST ` to ` LST ` to
fix : update gapic - generator - java with mock service generation fix ( # 580 )
added SLF4J logger imports to SimulationStatus . java to enable logging functionality in the simulation status class
updated VERSION _ POSITION _ Y from 138 to 150 and changed the font size from 138 to 150 to align the version with the new
updated notification addition to run asynchronously in UserInterfaceComponentImpl . java to ensure thread safety when adding notifications
added a mock method for returning elements of a list in ReturnsElementsOf . java to ensure that the mock returns an array containing multiple elements
corrected a typo in the error message from " non - equality " to " only allowed for non - string partition columns " to improve clarity
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to ensure that stored fields are stored correctly in a document
added a method to retrieve the version code from the MainApp class and updated references in FeatureList and WhatsNewActivity to use this method to
camel - 10237 : camel - core - fix issue with ambiguous method call in bean template .
updated method names from ` getContentDispositionFilename ` to ` getSubmittedFileName ` in ` MultiPartInputStreamTest . java ` to improve clarity and consistency
added buffer ownership checks and constructors to IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and prevent memory leaks
added a transition for " forgotPassword " to the login flow in PasswordManagementWebflowConfigurer . java to enhance user experience by allowing users to
refactor JerseyClientConfiguration class to improve code readability to enhance maintainability and facilitate future updates
int - 1336 remove unnecessary import of characterreaderreadermessagesource and characterreaderwritingmessagesource
updated variable names and import statements in InstanceOfPatternMatchTest , RemoveRedundantTypeCastTest , and TypeUtils classes to improve clarity and
added methods to manage and reset column and row indices in StringDict and Table classes to ensure proper handling of empty strings and improve data integrity
deprecated the ` Container ` interface and implemented ` AutoCloseable ` in ` GenericContainer ` , and added a new ` withCustomizer ` method to
changed log level from info to error in MediaInfo . java and modified test methods in RendererConfigurationTest . java to throw exceptions to improve log clarity
added support for " schemapattern " configuration in ` BundledDriverDatabaseConnector ` and ` PropertiesDataSourceDatabaseConnector ` to enable dynamic schema pattern configuration
return an empty byte array instead of null for null tlssession
refactor calculations for ratio and native bitmap in AndroidGraphics . java to improve accuracy of bitmap creation based on stroke dimensions
refactor Base64 encoding implementation to improve performance and readability of the code
sulong : add fallback for single context assumption to llvmglobalcontainer .
simonstewart : re - enable the firefox driver test on the iphone
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
replaced the ` ResName ` class with an ` int ` resId ` in the ` AttributeResource ` class and updated related constructors accordingly to
added support for tls file in docker config ( # 10212 )
corrected method names from ` tearDown ` to ` setUp ` in ` SimpleReactiveElasticsearchRepositoryTests . java ` to improve clarity and consistency in
modified type variable handling in Attr . java and added a new class T6450290 . java with generic classes T6450290 .
added logging level configuration to the LoggingOptions and LoggingOptions classes to allow customizable logging levels based on configuration
added logging statements to various classes and modified the deleteItemsFromDatabase method to accept a Collection instead of Iterable to improve visibility into package removal processes and
added allFilesOption ( ) method implementations in FileActivity , FileDisplayActivity , and PreviewImageActivity to enhance file handling functionality in the
added new methods ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` for deprecating old methods to enhance functionality and provide
updated the calculation of ` numPredictiveAppCols ` to use ` 4 ` instead of ` numColumns ` for phone devices to ensure accurate
updated StringUtils to initialize the string content with UTF - 8 encoding to ensure proper handling of character encoding in string conversion
added RequestMatchers class with static methods for matching request matchers to enhance flexibility in matching request matchers in the application
ggb - 280 remove unneeded code , no functional change .
updated position calculations in ProgressBar . java to account for bgBottomHeight and width to ensure correct vertical positioning of the ProgressBar based on background
[ native ] use external _ functions . json instead of external _ functions . json
changed variables extra in BruteArgumentMoverHandle to be final and updated permuteArgs method to accept additional parameters to enhance immutability and
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling only occurs when the handler is invalidate
updated layout calculations in DynamicGrid and Workspace classes to use constrained long and short edges instead of large sizes to improve layout responsiveness and performance
added a condition to check if the " / robots . txt " file is equal to " / robots . txt " to ensure that the
add a warning icon to the icon for nb - javac
add ` ` createworld ' ' , ` ` return ' ' , and ` ` continue ' ' to advancedgamesetupscreen
added a null check for ` b ` in the ` UDFOPDivide ` class and created a new test class ` TestUDFOP
refactor method signatures and improve exception handling in job processing classes to enhance code readability and maintainability
updated filter configuration in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use a new matcher builder to enhance security by allowing configuration of request matchers
added onDestroy method to ShareActivity and ContributionsActivity to unbind the upload service to ensure proper cleanup of resources after the activity is destroyed
replaced instances of ` thumbNail ` with ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity and consistency in variable naming
refactor multiple Java classes for improved consistency and clarity to enhance maintainability and readability of the codebase
added a method to set the request timeout in RaftServerConfigKeys to ensure proper handling of RPC request timeout settings
updated logging level from error to debug and modified test annotations in TsFileResourceManager and ResourceManagerTest to improve clarity of log messages and ensure correct
added system properties to the model source in MavenModuleLoader . java to enable system - specific configurations for the model source
added readiness checks and metrics tracking to the ServerMeter and HealthCheckResource classes to enhance monitoring capabilities for readiness checks in the application
blockanimatedtorch now register a custom itemblock for the animated torch
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when the writer is not initialized
added a method to retrieve Hive configuration from a directory and updated relevant test classes to use this new utility method to improve code maintainability and readability
added " Muting Users " link to the links in FeaturesActivity . java to enhance user experience by providing access to Muting Users links
added initialization property for jdk . reflect . useDirectMethodHandle to disable direct method handle usage in the System class
hbase - 24497 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] log warn if lib / plugins directory do n ' t exist
updated method calls in BuildTranscriptHMM and TrainerDictionary to retrieve pronunciations directly from the word object to improve code clarity and
updated JSON string formatting in JsonUtilsTest . java to remove unnecessary newline characters to improve code readability and maintain consistency in formatting
added an extra key to the compose intent in TimeLineCursorAdapter and TimelineArrayAdapter , and modified the handling of the notiId in
messagerunner : log a warning when a messagelistener be terminate on a reliable topic .
throw noclassesfoundtoanalyseexception instead of ioexception when classpath be non - null
replaced the import of ` Key ` from ` Key ` to ` PublicKey ` in ` KeyFetcher . java ` to ensure compatibility with the latest security
updated the initialization of the ` isIncompatible ` variable in ` DLNAResource . java ` to ensure proper handling of the ` isIncompatible `
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of a generic ` Account ` object to improve type safety and
pdfbox - 4892 : check size of range array before use it
[ amq - 4892 ] fix flaky test - messagelistenerredeliverytest . testrestoremessage ( )
enable off - heap format by default and update default format version to " OFF _ HEAP " to ensure compatibility with newer StarTree formats and
truncate the title to a maximum of 2048 characters to ensure that the title does not exceed a maximum length of 2048 characters
updated the initialization of the previewPanel in JColorChooser and BasicColorChooserUI classes , and added a new Test6977726 class for testing
change log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity and improve readability of the logging message
added a null check for the reusable bitmap before setting in bitmap options to prevent potential NullPointerExceptions when retrieving the tile bitmap
added ViewGroup . LayoutParams and a getter method for layoutParams in FakeView . java to provide access to layout parameters for the FakeView class
added a check to throw an IllegalStateException when a Cursor is already closed and created a test for it to ensure that an illegal state exception is thrown
pdfbox - 4892 : avoid a nullpointerexception if there be no page
ignore jmsclienttest until we fix it .
added getter and setter methods for the ` ts ` variable and its corresponding getter and setter methods in the ` Message ` class to provide access and
move genericexceptionmapper and validationexceptionmapper to use slf4j logger
changed the class declaration of AbstractExecutor from package - private to public to allow access to the class from other packages
add routeresource . removelegacyparameters ( pmap ) to remove legacy request parameter
changed class access modifiers from public to package - private in multiple test classes to enforce encapsulation and improve code readability
refactor CSRF handling into a separate method ` setCSRF ` to improve code readability and maintainability by encapsulating CSRF
add support for lombok . launch . bootstrap in eclipseloaderpatchertransplants
[ drools - 10274 ] add support for numericdisabled property in rulesheetlistener .
changed log level from info to debug in HiveConf . java to ensure debug logging is only logged when debug level is enabled
added Joystick functionality to the Lwjgl3Controller and Lwjgl3ControllerManager classes to improve controller connection handling and ensure
updated ObjectFactory import from ` cucumber . api . java ` to ` io . cucumber . core . backend . ObjectFactory ` in WeldFactory and We
added a conditional check for the host before saving the port forward in PortForwardListActivity to ensure that the port forward is saved only when the host
added a new configuration option ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter methods in ` GlobalConfiguration . java `
refactor job scheduling logic in SyncedFolderObserver . java to streamline job creation and enhance logging clarity
refactor LocationMarshaller to improve code structure to enhance maintainability and readability of the code
refactor touch event handling logic in StatusBarTouchController . java and TouchInteractionService . java to improve clarity and maintainability of gesture handling logic
refactor VectorReader from an interface to a concrete class and update related imports and implementations accordingly to streamline the codebase by removing unnecessary
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to streamline the import statements for better readability and maintainability
refactor PathSourcePath methods to simplify path retrieval and improve clarity to enhance code readability and maintainability by standardizing method signatures
updated method signatures and parameters in multiple classes to include RecordReaderConfig as a parameter to enhance flexibility in handling record reader configurations
added null check for the extractor variable in ControllerMethodInvoker . java and updated annotation usage in Param . java and Params . java to ensure that
cloudstack - 1026 : increase the maximum secondary storage for volume when the volume exceed the domain
add a guiscreenevent . potionshiftevent to allow the gui to dispatch the potion shift event .
added a deprecated constant ` COLD _ READS _ TO _ OMIT _ KEY ` and removed its usage in ` SizeTieredCompactionStrategy
added a call to stop the leech instance in ClientTest . java to ensure proper resource management and prevent potential memory leaks
( chore ) camel - rocketmq : add metric for retry message .
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable the test for a moment to temporarily skip the test for a moment
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references to improve clarity
added UpgradeRequest and UpgradeResponse handling in UpgradeConnection and corresponding tests in JettyTrackingSocket to ensure proper connection handling and validation of
added timeout functionality to AndroidImplementation to enable dynamic connection timeouts based on user input
refactor user and team access permissions methods in GitblitClient and RepositoriesPanel to improve permission handling logic to enhance code readability and maintain
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing with quoted cast expressions to ensure proper
modified file access assertions to differentiate between root and executable paths to ensure correct permissions are enforced for different operating systems
refactor FixedThreadExecutor to use dynamic properties for group count and thread per group to improve flexibility in managing executors based on user - defined groups
added null check for field before checking for " catalogname " in AbstractChangeGenerator . java to prevent potential NullPointerException when field is null
updated event listener imports and return types from ` CasEventListener ` to ` InitializingBean ` across multiple configuration files to align with the new
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by encapsulating animation
added a custom close method to the DeflaterOutputStream in RegionFile . java to ensure proper resource management and prevent memory leaks
added a new file ` gsp001 . java ` to test JVMTI GetSystemProperty functionality to ensure that the JVMTI GetSystemProperty function
do n ' t generate executable method for abstract class without @ configurationproperties
[ java ] read camcontrol and lightcontrol from input capsule instead of readenum ( ) .
updated the PopupNotificationPanel class to utilize the parent window ' s dispose method and improved error handling to enhance code clarity and maintainability by
refactor Infer . java to replace custom exception classes with InferenceException and simplify exception handling to improve code readability and maintainability by using
added a method ` getFeatureValue ( ) ` to retrieve the feature value to provide access to the feature value in the application
changed the parameter type of the ` after ` method from ` int ` to ` long ` to allow for more flexible data type handling in the verification
added ` OnBuild ` and ` ExecutionDriver ` fields with their respective getter and setter methods to ` ContainerConfig ` and ` Info ` classes to
addedRTL support for setting icon in Toolbar and adjusted positioning logic in FlowLayout to ensure correct positioning of buttons based on RTL orientation
added a boolean flag ` enablePositionIncrements ` to the ` StopFilter ` class and modified the return structure to allow configuration of position increments
updated email address initialization in EmailsTest . java and SystemErrorEmailReportTest . java to use a new InternetAddress instance to ensure consistent email
added a new variable ` mTryShareAgain ` and initialized it to ` false ` in ` FileActivity . java ` to control sharing behavior
[ fusesource - jansi ] add support for tty name in jansi native .
refactor bandwidth calculation to use bytesSize instead of a hardcoded value to improve flexibility and maintainability of bandwidth calculations based on dynamic properties
replaced direct calls to ` then ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to
changed API URLs from public static final to private static final in EaseeBindingConstants . java to restrict access to the API base URL for
updated sleep duration and added startup attempts to kafkaContainer in KafkaIOIT . java to ensure proper handling of startup attempts during the test execution
refactor search result matcher to use is ( itemName ) instead of allOf ( ) to improve code readability and maintainability
added SSL certificate validation using TrustManager and SSLContext in OkHttp . java to enhance security by ensuring all SSL certificates are accepted
refactor long click button handling in NavbarButtonsViewController and TaskbarNavButtonController to use a new utility method to improve code readability and
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` and ` byte `
added nullable annotations and initialized stdout and stderr with Optional < String > absent in ShellStep . java to ensure that stdout and stderr fields are not null
[ hotfix ] [ test ] increase timeout for asyncappendertest
refactor escapeDatabaseObject and escapeSchemaName methods to use a unified objectName and objectType parameter to improve code readability and maintainability by
added a boolean field ` inputChanged ` and modified the condition for input validation in ` MaterialRenameDialog . java ` to improve the handling of input
added unit test for state change functionality in ShadowDisplayTest . java and implemented setState method in ShadowDisplay . java to ensure proper handling of display state
add a directinvocationservice interface so that the dispatcher can invoke the service directly .
added handling for GWT keycodes KEY _ X and GWTKeycodes . KEY _ Y in GlobalKeyDispatcherW . java to
updated SQL queries to include pg _ depend and pg _ class conditions based on server version to ensure compatibility with PostgreSQL versions prior to 
[ hotfix ] [ runtime ] add nullable annotation to message field in queuechannel
updated method signature and variable names in FileUtils . java for clarity to improve code readability and maintainability by using a more descriptive variable name
added support for handling Jenkins nodes in CollectorServer to enhance application management by allowing users to collect Jenkins nodes based on their context
refactor attribute retrieval in HeadersBeanDefinitionParser to use a dedicated method to improve code readability and maintainability by centralizing attribute resolution
updated EOFException handling and logging in ProtobufLogReader . java to improve error handling and provide clearer feedback when seeking to the end of the file
cleanup nacos registry after destroy ( )
camel - mybatis fixed switch / cases indentation see camel - 14540
added support for SPDY version in GoAwayGenerator and GoAwayBodyParser to ensure compatibility with the latest SPDY protocols
reformatted code for improved readability in AuditEvent and AuditEventTests to enhance code clarity and maintainability
updated return statement in Interpolation . java to handle cases where ' a ' is less than or equal to ' 0 ' to ensure proper handling of
change default path to / defaults / rather than / defaults /
refactor code to store the DX executable path in a variable before adding it to the builder to improve code readability and maintainability by reducing
added assertions to compare PointRangeQuery instances in TestPointQueries . java to ensure correct equality checks for PointRangeQuery instances
hbase - 12299 testhfilecleaner fail to clean up the archived hfile
do n ' t show the file name if it ' s the same a the request file name .
do n ' t throw exception in JedisClusterCommand . java if jce do n ' t exist
[ hotfix ] [ runtime ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to ensure compatibility with path - based
added benchmarks for hash map operations in QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWriteBenchmark to improve
added initialization of G _ SCH _ B with a new HashMap in HybridPlotWorld . java to ensure G _ SCH _ B is
added handling for empty fields and refactored identifier conversion logic in GroovyEngine . java to improve code readability and maintainability by consolidating
ggb - 280 do n ' t use drawables for number that do n ' t have them
added configuration options for TCP socket timeout in HiveConf and integrated them into TServerTransport initialization to improve socket management by allowing configurable tcp keep - alive
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` in ` FileRenameAction . java ` to improve clarity and consistency
no effective change - remove unused import
refactor RealtimeSegmentRelocator to use lambda expressions instead of anonymous classes to improve code readability and reduce boilerplate code
do n ' t wait for vpc creation to complete before start vpc
updated the calculation of ` windowAlpha ` in ` WindowTransformSwipeHandler . java ` and modified the condition in ` FloatingIconView . java
updated fatal error message to include a reference to Spring Security 4.0 schema to ensure compatibility with the latest Spring Security versions
refactor multiple fluent assertion and subject classes for consistency and clarity to improve code readability and maintainability
fix checkstyle issue in util / disruptor / disruptorprovider
added a new test class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` and ` ExprNodeGenericFuncEvaluator ` to
updated regex pattern in LogMessageWaitStrategy and added parameterized test cases in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage for
replaced repeated logger initialization with a single call to LoggerFactory . getLogger ( INTERNAL _ LOGGER _ NAME ) . debug ( ) and logger . warn ( )
changed SQL queries from " UPDATE _ DATETIME , purge _ time , " to " DELETE " in ShardDao and ShardCleaner classes to standardize
added support for Java version 17 in JavaLanguageModule to enhance compatibility with newer Java versions
[ fileappenderresiliencetest ] add a timeout to wait for compression job to finish .
added a null check for lastLocationAccess in VolatileReadNode . java to ensure that only usages of Memory are checked before proceeding
added a method to return an unmodifiable list of steps and improved formatting in the getStep method to enhance code readability and maintainability by standardizing
removed unused ` fromBase58 ` , ` toBase58 ` , and ` contractAddressBase58 ` fields from ` TronJsonRpc `
refactor the creation of CurrencyPair to use a variable for clarity to improve code readability and maintainability by reducing duplication
update longtasktimer to use basetimeunit ( ) instead of timeunit . nanoseconds
[ euphoria - core ] remove dependency on hashpartitioner in euphoria - core
refactor color handling in HostEditorActivity to use CharSequence instead of String for better type safety to improve code clarity and maintainability by using a more
replaced ` IncompatibleDatabaseHandler ` with ` DatabaseVersionHandler ` and refactored related methods to improve clarity and consistency in handling database version files
added a maximum tweet count constant and updated the loop condition in ExpansionViewHelper . java to limit the number of tweets in conversion to 50
updated the map refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map to refresh
add a test to ensure persisted byte size be set correctly for fully acked deleted tail page
fix checkstyle issue in net / glowserver / glowserver . java
refactor the grow method in DataIO to simplify the logic and improve readability to enhance code maintainability and reduce duplication
removed unused import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide access to the submitted file name from the `
added markReadForLoad ( ) method to LauncherFragment . java to ensure that the read state is marked for loading
added ` ClassNotFoundException ` to the ` main ` method signature and modified exception handling in the ` instrumentJar ` method to improve error handling and provide
added a method ` checkForSpillPossibility ` to handle partition flushing in ` HashAggTemplate . java ` to ensure proper error handling
replaced calls to ` info . info . getDocStoreSegment ( ) ` with a single variable ` dsName ` for consistency to improve code read
added a constant for the default name ID format in SamlProfileSamlNameIdBuilder to ensure proper handling of SAML name ID format configurations
added redirect and error handling in ChangePasswordPage . java to manage password changes gracefully and provide user feedback when a password change is aborted
added a semicolon to the closing brace in Deadlock2 . java to improve code readability and maintain consistent formatting
added a new method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide access to the maximum idle time for
deleted the FontScalingTest . java file to remove unused font size checks related to Metal and system look and feel to streamline the codebase
added validation to check if the begin and end date filters are before or after the end of the filter to ensure that only valid dates are processed and
added checks for non - positive ` numVectors ` in ` GenericUDAFComputeStats . java ` to prevent processing when the number of
test : migrate executablereftest to junit 5 ( # 4563 )
added null checks before setting view and glass pane in JLayer . java and created a new test class bug6994419 . java to ensure
camel - 14105 : added support for tap to the dsl . added unit test for it .
change visibility of setAction method from public to protected to allow subclasses to access the setAction method
added a TOPN option and its usage in PlannerSettings and PushLimitToTopN classes to enable or disable topN optimization in Planner
[ java ] remove redundant aeron directory creation in agent test .
fixed - rbatch . ping ( ) method do n ' t work correctly in batch mode . # 423
replaced ` LoopingByteArrayInputStream ` with ` getConfVarURL ` and updated related methods to use ` FileOutputStream ` instead of ` ByteArrayInputStream
updated the device parameter in the createModel method call from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` to
added options menu functionality to the SimulationViewer class to enhance user experience by providing an option for saving features
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
make the default hawtio . dirname configurable
added a condition to handle empty comments and return a single space to improve handling of empty comments gracefully
changed fields in multiple dictionary classes to be volatile to ensure thread safety during concurrent modifications
removed printStackTrace ( ) method call from Throwable in ContextHandler . java to streamline error handling by eliminating unnecessary stack trace printing
move testcustomitem to integration / regression , and move it to testutils
added conditional handling for non - existing partitions in DDL tasks and semantic analysis to enhance partition existence checks and improve semantic analysis capabilities
[ iotdb - 4892 ] fix inputstream leak in nfssecondarystorageresource . readbytes ( ) .
[ hotfix ] [ runtime ] remove controlrequeststreamid from echoservicenode and basicauctionclusteredservicenode
[ wfs ] add support for spatial operator ( ogc and fes )
added import for LuceneTestCase and annotated BasicDistributedZkTest with AwaitsFix annotation to address issue SOLR - 2161 related to the
refactor preface matching logic in Http11InputBuffer . java to improve readability and maintainability of the code
[ java ] set isingressexclusive to false by default .
hbase - 24413 add hbase . bucketcache . ioengine and hbase . bucketcache . size to hfile . block . cache . keys
added functionality to track and update the running record count in JSONRecordReader to improve tracking of the number of records in the exception context
added filtering logic to remove years from merged items in CategorizationFragment to ensure only valid year entries are processed
updated the drawColor method calls in CacheableTextView , CellLayout , and HolographicOutlineHelper to use the correct color value to ensure consistent rendering
added a check for OpenGL ES 2.0 availability in Mesh . java to ensure that the render method is only used when OpenGL 2.0 is available
fix backgroundprocess to use actioncontext . getinvocationcontext ( ) .
modified the ` getUnescapedName ` and ` isInsertIntoTable ` methods to include database name as a parameter and adjusted related logic to
added connection timeout configuration and changed the ` count ` variable to be final in ` StubConnection ` to improve connection handling and enforce immutability of
added test cases for the percentile functions in TestHiveAggregationQueries . java to validate the functionality of the approx _ percentile functions
updated DEFAULT _ IDLE _ TIMEOUT to a default duration of 30 seconds and refactored related timeout handling in WebSocketChannel to improve clarity and
updated the method of retrieving shares to use the user ' s platform account instead of the account ' s name to ensure the correct user context is used
refactor Inet6Address class to use generics and improve type safety to enhance type safety and clarity in handling InetAddress objects
refactor button enabling methods in PlaybackControlView to use setButtonEnabled for improved clarity and functionality to enhance code readability and maintainability by
updated session handling in Token . java and Session . java to use sessionID instead of session object to improve consistency and clarity in session management logic
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to ensure
change default value of useexceptionprobability from true to ____
updated the way the new PlateColor is assigned based on the icon ' s theme status to ensure correct color representation based on the icon ' s
refactor mysqluser to not use userwithblobs in init ( )
added " center " alias to the aliases list to ensure consistency in naming conventions
added a new import statement for DirectUpload and modified the access modifier of DirectUpload class to public to allow external injection of DirectUpload instances
added spacing adjustments for left and right axes in BarChartActivity and improved axis range handling in BarLineChartBase to enhance layout consistency and ensure proper
add ` HasJavaAbi ` and ` VERIFIED _ SOURCE _ ABI _ FLAVOR ` flavors to the set of
added operationEventStatusType to requestParams in OnlineHubService and initialized the services list in CompositeLogService to ensure proper handling of operation event status
added debug output for parameter annotations and created a visibility annotation if it does not exist to improve debugging and ensure the parameter has a visible annotation
change jmsio @ startbundle and @ finishbundle to @ teardown instead of @ startbundle and @ finishbundle
added a classpath variable and modified the ProcessBuilder instantiation in SortedArrayStringMapTest . java to enhance classpath handling during process execution
updated document loading logic to use a dynamic separator based on the package name to ensure consistent file path handling across different operating systems
[ hotfix ] [ runtime ] fix checkstyle violation in dataset . min / maxby
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
added a test method to escape stack traces in error messages and modified method visibility in ShouldHaveMessage _ create _ Test to improve error message formatting
fixed - jcache . close ( ) method do n ' t call getcachemanager ( ) . getcachemanager ( ) . geturi (
log activititaskalreadyclaimedexception a info instead of severe
added an empty block around the instantiation of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability by
use instance . getbasevalue ( ) instead of instance . getvalue ( ) in entitypropertiespacket . writedouble ( )
[ sonos ] fix check for initialized thing in sonosaudiosink
updated countDownLatch . await timeout from 500 milliseconds to 5 seconds in ContextRegisterListenerTest . java and SpringMvcClientBeanPostProcessorTest . java
changed log level from info to debug in LightThingHandler . java to improve logging clarity for better debugging
cap async - job execution thread pool to be 2 / 3 of max db cloud
updated import statements and modified method parameters in Reporter and ReturnsSmartNulls classes to improve code readability and maintain consistency in method signatures
updated the parameter type in the generate method from Frame to DataFrame in DataGenerator . java to improve type safety and clarity by using a more descript
updated multiple package - info . java files to ensure consistent formatting to improve code readability and maintainability
added a check for non - empty physicalColumnNames before matching the column name in OrcPageSourceFactory . java to ensure that only valid physical
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine ` class to enable the mixing of
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to change test values from 10.0 f to 10.0 f to
simplify the condition for checking whether ` leadingIncludePaths ` is present in ` PreprocessorDelegate . java ` to improve code readability and maintainability
refactor the matrixVectorMultiplicationShouldUseBrackets method to use a new method for checking vector matrix multiplication to improve code readability and
add more search method to selenideelementproxy so that it do n ' t return all element
[ java ] default the samplerate for e - ac3 to 48000 instead of the format . samplerate .
add name . getformula ( ) and name . setformula ( formulatext ) , and make xssfname final
increased the target value from 60000 to 90000 in HighDimensionsTest . java to allow for more time for dimension calculations
updated the condition in SimpleTypeGT to check for an empty value and added a new test for pattern schema parsing in GMLParserTest to ensure
added a new test class ` ClassPathXmlJobRegistryContextTests ` for testing the ` ClassPathXmlJobRegistry ` functionality to ensure proper job
change the data type of mHistoricTimes from float to long in MotionPauseDetector . java to ensure accurate data handling for time - related variables
camel - 12320 : camel - restlet - fix the issue of camel - 12320
camel - 14136 : camel - log - remove unused ' showout ' parameter from logendpointbuilder
refactor ChromeTraceEvent submission into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by consolidating
added status checks before adding limit orders in HuobiAdapters . java to ensure only non - canceled , non - refunded , and non
added pixel offset calculations and validation in LCMSImageLayout . java to ensure correct image layout and improve error handling for invalid pixel layouts
updated timestamp handling in Event . java and JrubyEventExtLibrary . java to utilize RubyTimestamp and JrubyTimestampExtLibrary . RubyTimestamp
added logic to handle paths ending with a slash in ContextHandler and created a test for real path retrieval in WebAppContextTest to ensure correct handling
changed ScriptFunctionImpl from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GETTER to
refactor scroll handling logic in JEditTextArea . java to improve clarity and correct variable naming to enhance readability and maintainability of the code
do n ' t set guard stage when caller loop scope be null in graphdecoder
test ( refactor ) : migrate sniperjavaprettyprinterjavaxtest to junit5
refactor URL handling in tests to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
added multiple @ Entity annotations to the Mail class to enhance entity management for better entity management
updated default value of ` includeTablespace ` from ` false ` to ` true ` and modified the command parameter from ` false ` to ` true
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffers for better data management
added functionality to read non - empty files in ScanBatch and created a new test for JSON directory with an empty file in TestJsonReader to ensure
added a check for internalCustomName in failure strategy and updated assertions in StringTest to improve error message formatting and enhance test coverage for named comparisons
added a regex pattern for library names and modified the conditional check to use this pattern to improve code readability and maintainability by using a compiled pattern
updated exception handling to catch both Exception and Error in JrtJavaBasePackages and PackageHelper to improve robustness by catching more general exceptions
hbase - 24136 master should wait for dfs safemode to be set to get when write to hdfs ( sergey shelukh
enhanced error message in TranslatingJavacPhaseTracer to include exception details to improve debugging by providing more context in error messages
[ mng - 5386 ] remove unused plugindescriptor cache from defaultplugincache
do n ' t fire the presence status change event for contact that do n ' t exist
[ fhir ] remove unused requestdetails . withresourceandparams ( ) method
added a new integration test class ` AccountInfoFetchIntegration ` for fetching account information from BTCE exchange to ensure that the PollingAccountService
added mouseWheel method implementations in VDUInput and vt320 classes and updated TerminalView to implement mouse wheel functionality to enhance user interaction
updated library path handling in Natives . java to use a variable instead of a method call to improve code readability and maintainability by centralizing
deprecate @ columnhstore in favor of @ dbhstore
added PLAYER _ SKIN _ FLAGS to metadata in GlowPlayer and modified test conditions in MetadataIndexTest to include skin flags to enhance
updated LoadBalancerWithServiceTests to utilize SLF4J logging and modified service creation methods to improve logging and ensure correct master URL handling during service
[ hotfix ] add miss brace in mapservice . java
replaced ` System . getProperty ( " os . version " ) ` with ` AccessController . doPrivileged ( new GetPropertyAction ( ) ) ` for
updated fileSuffix handling in TemplateEngineFreemarker to use a configurable file suffix to improve flexibility and maintainability of file suffix configuration
updated hash code calculation in SelectMessageQueueByHash . java and added tests for additional order IDs in SelectMessageQueueByHashTest . java
added animation callback functionality and made variables final in ToolbarPanel . java to enhance animation handling and improve UI responsiveness
replaced ` EasyBind . bindConditionally ` with ` EasyBind . when ( hasCaret ) . bind ( ) ` for caret column binding to
added support for declared platforms in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to enhance platform management by
replaced instances of SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator , PartTreeJpaQueryExecution , and PartTreeJpaQuery
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerExceptions when passwordAttribute is null
added a check for array type in DataUtilities and created a test for default default arrays in DataUtilitiesTest to ensure correct handling of byte and string
updated SSL engine creation logic to handle null address and host name conditionally to ensure proper host name retrieval based on client authentication requirements
updated assertions in TestFSTableDescriptors . java from assertEquals to assertTrue for cachehits validation to ensure that the cachehits count does not exceed
danielwagnerhall : remove unused code in webdriverdriver . deletecookiebypath ( )
added a new boolean variable ` mHasEndedLauncherTransition ` and modified gesture handling logic in ` AbsSwipeUpHandler ` and ` Recents
added charset attribute " utf - 8 " to HEAD tags in HTMLListWriter . java and HTMLWriter . java to ensure proper content encoding for
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated MAX _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path separator handling in multiple
added a new class ` bug6337518 ` and modified ` BasicComboBoxUI ` to implement a new class ` bug6337518
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and clarity of the test code
refactor UserInfoActivity to improve code structure to enhance maintainability and readability of the code
added import for HomeContentProvider and updated notifyChange calls in multiple service classes to ensure proper notification of the updated content URI during data updates
added a ` mStayPressed ` flag and modified background invalidation logic in ` BubbleTextView ` and ` Launcher ` classes to improve
updated the ` getFallbackResponse ` method to include an ` Throwable ` parameter across multiple classes to include an error parameter to enhance error handling by providing
removed the conditional check for ` env . _ compile _ only ` in the ` DumpBytecode ` class to simplify the code by eliminating unnecessary complexity
added null check for tags in ChannelUri . java to prevent potential NullPointerException when accessing tags
updated JAVA _ REGEX _ SPECIALS regex to include a period in the regex pattern and modified test methods accordingly to improve regex handling and
added ACTION _ BAR _ TITLE constant and updated action bar title handling in FileActivity and FileDisplayActivity to ensure the correct action bar title
replaced ` Iterables . getOnlyElement ` with ` Iterables . getLast ` in ` PythonDslProjectBuildFileParser . java ` and
[ hotfix ] [ runtime ] set hour to zero in cleaningservice . schedule
refactor TransactionalValidationListener to handle partitioned tables and validate table structure to improve robustness and error handling for partitioned tables
added polling functionality in SnapPuller . java to enable polling functionality in the SnapPuller class
changed the data type of generatedKey from int to long and modified the SQL execution method to scrub generated keys to ensure proper handling of key generation and
refactor variable name from ' rc ' to ' _ rc ' for clarity to improve code readability and maintainability
updated error messages in multiple test files to include " failed to inline " to improve clarity of error reporting for failed inline tests
( chore ) camel - core : increase default keepalive timeout to 10 second .
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
updated exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and modified test cases in ` DispatcherTest . java ` to
camel - 14237 : camel - cxf - add support for cxf message data format .
added support for the ' ~ ' character in the ClientUtils class to enhance user experience by providing access to special characters
camel - 13636 : camel - slack - allow to configure the slack consumer delay to 10 second before the next poll .
make blockutil . getblockharvesting ( ) return a list of dropable item instead of a single item
updated layout parameters in TranscodingTab . java and added a space in the JCheckBox string for encodedAudioPassthrough in TranscodingTab . java to
added a new file ` bug8057791 . java ` implementing Nimbus Look and Feel to test the rendering of a JList using NimbusLookAndFeel
updated flag assignment logic in LambdaToMethod . java and added a new LambdaInterfaceStaticField . java file to improve clarity and functionality of static field
added WebSocket methods factory and updated subscription manager initialization in RunnerBuilder . java and added a new test method in RunnerBuilderTest . java to
updated null check condition for the ' to ' variable in ComposeActivity . java to improve robustness by preventing potential NullPointerExceptions
updated ParquetFixedWidthDictionaryReaders to handle dictionary reading condition and added a new test for BigIntWithDictionary in TestColumnReaderFactory to
updated layout handling for landscape orientation in PortraitPagedViewHandler . java to improve layout responsiveness based on device orientation
added new annotation ` Log ` and ` LogInterceptor ` classes , and modified ` TestController ` and ` TestController ` to include logging functionality to
updated the QueuedThreadPool dump logic to handle non - empty trace arrays to improve clarity of thread state information when trace is empty
refactor CacheGenerator and CacheProvider to use Optional < Implementation > instead of Optional < ReferenceType > for improved type safety to enhance code clarity and
added totalFrameSize parameter to createReferenceMap method in FrameMap . java to ensure the correct frame size is used for reference maps
refactor TypesafeConfigurator class to improve code readability to enhance maintainability and facilitate future updates
camel - 14157 : camel - graphql - karaf karaf karaf component - add karaf karaf
added new static methods ` bug1 ` , ` bug2 ` , and ` bug3 ` to the ` RFE2891944 .
removed URL encoding for keys and values in HttpClientIntroductionAdvice . java to simplify code and improve readability by eliminating unnecessary encoding
replaced the method ` unsupportedPlatformTool ( ) ` with a new class ` UnsupportedPlatformTool ` and updated its implementation to use ` new ` instead
updated variable type from double to int and modified recovery delay logging to use TimeUnit to improve precision in time representation during recovery attempts
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the map and its
chore ( kie ) : fix kieaddressmanagertest and addressmanagertest to work with kie 3 . x
updated column specifications and row specifications in VLCVideo . java to improve layout consistency and layout consistency
rename bisq / bisq to bitsquare / bitsq /
updated the AUTHORITY constant from " talon . provider " to " twitter . provider " in HomeContentProvider . java to reflect the correct
move . m2 / user . xml to / . m2 / user . xml and add support for . m2 / repository
added a call to bind the GL _ ARRAY _ BUFFER with the specified buffer handle in VertexBufferObjectWithVAO . java to ensure
refactor ServerHttpSecurity class for improved security configuration to enhance security features and maintainability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to disable the integration test for Postgres integration tests
added default HTTP headers to HttpClientProperties and CasCoreHttpConfiguration classes to enable customizable HTTP headers in the application
added handling for ` userpasswordnotvalidexception ` , ` userpasswordnotvalidexception ` , and ` usernamenotvalidexception `
deleted the NoOpConfigPathGetter . java file to the class is no longer needed in the project
replaced the base16 decoding method for signingKey to use Bytes . fromHexString instead of Codec . base16Decode to improve performance and readability
added CSS property handling for float values in FloatUtil . java to ensure proper formatting and correctness of CSS properties
planner - 272 add miss import for droolsfactcollectionproperty , planningfactcollectionproperty and planningfactproperty
updated RestUtils to use case - insensitive headers and modified the getDefaultHeaders method to return a MultiMap instead of a case - insensitive map to improve
change proxy and realm to use charset instead of string . forname ( )
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to provide access to the
replaced ` Long . valueOf ( ) . compareTo ( ) ` with ` Long . compare ( ) ` for comparison in ` ExpandableUploadListAdapter
do n ' t log error in jdk 1 . x if debug log be enable .
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler and UsernamePasswordCredentials to improve clarity and maintainability of the authentication handler
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
added checks to validate the owner and public key of a filter before logging warnings for invalid filters to improve robustness and prevent potential NullPointerExceptions during
add bcpgpinputstream . wrap ( inputstream ) and move it to bcpginputstream . wrap ( inputstream )
fix potential resource leak in minimallockingwriteaheadlog
added a new test method ` testSelectAllFromView ` and refactored column qualifier handling in ` HiveBaseResultSet ` to improve test coverage
refactor FocusTransitionTest . java for improved clarity to enhance maintainability and readability of the test code
updated import statement from org . gwtproject . core . client . GWT to com . google . gwt . core . client . GWT to
added a type check for MapRedTask before processing job instances in CounterStatsAggregator . java to ensure proper handling of job instances and improve error logging
removed redundant null check for readListener in HttpInput . java to improve code readability and maintainability
refactor color setting logic into a new method ` changeComponentColor ` using ` ColorSelectionModel ` to improve code readability and maintainability by en
changed the parameter from ' false ' to ' hidden ' in the TaskHelper constructor from ' processing ' to ' hidden ' to provide a clearer
http : / / issues . apache . org / jira / browse / amq - 4237 - fix test failovertimeouttest . java
pdfbox - 4892 : ensure file stream be close after call createfromrandomaccessimpl
added import statement for DefaultParameterHandler in LanguageDriver . java and updated BoundSql , SqlSource , and LanguageDriver . java to enhance parameter handling
add loop depth check before setting spill state in LinearScanWalker to ensure spill state is only set when the definition depth is less than or equal to
[ io . micronaut . ast . transform . test ] add a micronautastbuilder for groovy compilation
refactor cursor closing logic into a separate method ` closeInternally ( ) ` in ` PgResultSet ` and ` PgStatement ` to
set the default value of serviceAdvisorType to ServiceAdvisorType . PYTHON to ensure proper initialization of the service advisor type
replaced a local variable ` resolver ` with a ` ThreadLocal ` thread - local ` resolver ` in ` GenericDatumReader . java ` to improve performance
refactor ` Path ` constructor to accept a ` List ` instead of a ` Collection ` and replace ` write ` calls with ` append ` calls
replaced ` new byte [ ] ` with ` generateRandomBytes ( 512 ) ` for output generation in ` SendCoinShieldTest . java ` to
added method setpersonalisation ( date , locale , emailaddress , distinguisher ) to the spec of skeinparameterspecification
removed duplicate conditional statement for argument count check in CodeGenerator . java to streamline code by eliminating redundancy
removed the percent parameter from the scroll method calls in multiple classes to simplify the method signature and improve code readability
changed the access modifier of the pointer variable from private to public and added reset methods for pointer and position to allow external access to the pointer variable and
rename ` ` contentdigesthistory ' ' to ` ` bdbcontentdigesthistory ' ' to be consistent with ` ` bdbcontentdigesthistory
fix : be n ' t cast booleans to ints in bytecode analysis
replaced the use of ArrayList with a boolean flag for accepting media types to improve code readability and maintainability by using a boolean flag instead of an
added a new boolean variable ` false ` to ` TaskView . java ` to indicate that the task should not be displayed in the UI
added ` isAutoIncrement ( ) ` method to ` LiquibaseDataType ` and implemented ` isAutoIncrement ( ) ` method in ` Li
initialize errorText with a default value of " Command failed due to Internal Server Error " to provide a clearer error message when the command fails due
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize test libraries and add VM options to improve test flexibility and
replaced ` add ( currentStatus ) ` and ` boosterStatus ` with ` push ( currentStatus ) ` and ` boosterStatus ` in
added AJP binding functionality and configuration for AJP connector in GitBlitServer to ensure proper configuration of AJP connections based on
added type coercion handling for IntersectionClassType in TransTypes . java and created a new Intersection03 . java file with a
rename the class ` EmbeddingTest ` to ` EmbeddingITest ` to improve clarity and consistency in naming conventions
added a conditional check for the startup of the toolkit thread before starting the toolkit thread to ensure that the toolkit thread is only started if it is not
add option to compress the localization bundle in parallel .
added code to set the surface visibility to false if the surface is hidden in the OpenGL context to enhance user experience by allowing the surface to be
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability of
added configuration options for fullNodeHttpEnable and solidityNodeHttpEnable to enable HTTP services based on configuration settings
added a new property ` service ` to the ` GoogleCloudFirestoreTicketDocument ` and updated the ` GoogleCloudFirestoreTicketRegistry ` to
refactor the Generate class to improve code organization to enhance maintainability and readability of the code
json _ format ( json ) : return null instead of null for json _ format ( java | json )
added a DOTS _ ONLY flag and updated related logic in BadgeRenderer , IconPalette , ShadowGenerator , and NotificationKeyData classes to
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to allow access to the ` getConfiguration
added a test for invalid excluded package patterns in OgnlUtilTest to ensure proper handling of invalid excluded package patterns
updated device Udid handling in AppleTest and added SDK name checks in IdbRunTestsStep to ensure compatibility with both mac and iphone
updated DefaultHttpClientFilter to use ProduceProcessorManager and modified response handling in TestDefaultHttpClientFilter to improve error logging and enhance test coverage for HTTP
updated context binding and execution logic for mInvokeResetWAR in AllAppsView . java to ensure proper initialization and execution of the reset button
added a new boolean variable ` TEXT _ BURN ` and modified the conditional check for ` lineCount ` to conditionally set shadow layers based on
added teardown methods for table and view drops in TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database tables and views during
added a line to retrieve the parser by name in SecurityNamespaceHandler . java to ensure the parser is retrieved from the parsers map
added a new method ` fastpath ` to ` BoundedLocalCache ` and implemented tests for it in ` BoundedLocalCacheTest ` to
updated RawConnection to extend WebSocketConnection and added complete and flush methods to enhance connection handling and improve flushing functionality
added new test methods for asserting all assertions in SoftAssertionsPerfTest . java to improve test coverage for soft assertions functionality
added error code handling for python test execution in PythonRunTestsStep . java and modified access modifier of assertExitCode method in ProjectWorkspace . java to
added a conditional check for markup enabling in GlyphLayout . java to ensure proper handling of subsequent runs when markup is disabled
refactor assertions in TestBooleanRewrites to use streams for better readability and performance to improve code clarity and maintainability by utilizing Java streams
changed the method of retrieving the enum class from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` to ensure the correct class hierarchy is
remove unnecessary cast to playersocketconnection in updatemanager . flush ( )
added a check for ` mStarted ` before removing the ` OnDrawListener ` in both ` Launcher ` and ` LauncherAnimUtils `
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
replaced specific static imports with wildcard imports and updated the conditional check for matchStatus in ReplicaAssigner . java to improve code readability
changed the default return value of the getBoolean method from false to true in RendererConfiguration . java to enable media parsing by default for MediaPARSERV2
do n ' t generate interceptor type for method that do n ' t support it .
added assertions and assertions for table existence and permission checks in FolderPermissionBase . java to ensure proper functionality of table and partition operations in the database
do n ' t publish status if provider be not register due to registration state change
updated the random color calculation in PastelColor . java to use a different color base to improve the visual consistency of the random color generation
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
refactor image handling in HolographicViewHelper to use original and outline bitmaps to improve clarity and functionality of image rendering in the UI
cloudclient : parse http method from string instead of warn
add a new method to infer the unigram position from a phrase in multiwordpreprocessor .
[ hotfix ] [ test ] remove unused import in iochannelutilstest
added conditional logic to retrieve the output format class based on the HivePassThroughOutputFormat class name to ensure proper handling of output formats based on passed -
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated boundary check for length in DOMBuilder . java to ensure valid input to prevent potential index out of bounds errors
refactor GraphingCoefficient , EigenvectorCentrality , DiameterUI , and HitsUI classes to improve code clarity and
camel - 14136 - camel - aws2 - translate - * : improve the verifier to check if a particular service work on a specified region
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to provide a test case for handling static
camel - 11436 : camel - core - fix defaultkeyselector to work with camel 3 . x
replaced instanceof check with direct casting for Throwable in LogResolverBean . java to simplify catch blocks and improve code readability
refactor multiple Java classes related to KeyManagerFactory , Policy , CertStore , and X509Certificate to improve code organization and maintainability
updated JGit version from " 1.0 . 0 " to " 1.0 . 0 " and sorted jars in the launcher to ensure compatibility with the latest
updated the handling of client keys in HttpClientIntroductionAdvice . java to ensure the correct client key is used when the path is not provided
int - 1199 add support for transformer configuration and test bean .
updated BACK _ FACTOR and BACK _ FACTOR constants to REWIND _ TIME and added a new REWIND _
added isScrollWheeling ( ) method to CodenameOneImplementation and JavaSEPort classes and updated action event firing logic to check if scrolling is
updated usage formatting and improved command usage formatting in UtilityCommands and DocumentationPrinter classes to enhance code readability and ensure consistent usage formatting
corrected a typo in the attribute name from " collection . map " to " collections . map " to ensure consistency in attribute naming conventions
removed setSeqFiles and setUnseqFiles methods from CrossSpaceCompactionResource and updated their retrieval in RewriteCrossSpaceCompactionSelector to streamline
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor rule set synchronization logic in ProjectPropertiesModelImpl . java to improve clarity and efficiency to enhance code readability and maintainability by consolid
fix synchronization issue in abstractsootfieldref . getfield ( ) .
add an elasticnamingconvention to support name / type convention .
added new methods and imports to IController and TinyGController , and updated BackendAPI to use IController interface instead of AbstractController to
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify rendering of a large horizontal rule correctly
replaced ` System . out . println ` calls with ` TTY . println ` in ` TypeSystemTest . java ` and ` PartialEscape
refactor multiple Java classes to improve code structure and readability to enhance maintainability and clarity of the codebase
update frame length check from ` = = 0 ` to ` < = 0 ` in LogInspector . java to ensure proper handling of negative frame length
replaced return statements for zeroValue and defaultValue in IntFloatMap and IntIntMap classes to ensure consistent return values for both float and int types
refactor icon and size handling in ImageDownloadService to use a Runnable for thread safety to ensure thread safety when setting icons and components
updated the condition to check for a null registered variable before proceeding with demand checks to improve code robustness and prevent potential NullPointerExceptions
removed the native method ` hasNextSibling ( ) ` from multiple node classes and simplified the return statement in the ` IeNavigator ` class to stream
fixed - npe in redisdistributedmapcacheclientservice if result be null
updated logging messages in MobFileCache to include cacheSize , evictPeriods , and evictRemainRatio to improve visibility into the Mob
refactor ColConvCCMTest . java for improved readability to enhance maintainability and facilitate future updates
replaced local variable declarations with local variables for ` allowCovariantReturns ` and ` syntheticNameChar ` to improve code readability and maintainability by
pdfbox - 4892 : use generic instead of raw type to improve type safety
replaced ` Float . toString ( jsonData . asFloat ( ) ) ` with ` jsonData . asString ( ) ` and added a new
added a return statement in GenericFileConsumer . java to ensure that the method does not exit early on failure
added an EventQueue . invokeLater call in bug6638195 . java to execute tasks on the Event Dispatch Thread to ensure proper execution of the Event
updated maxSize calculation to use getMaxBinaryMessageSize ( ) instead of getMaxBinaryMessageBufferSize ( ) to ensure the correct size is used for maximum message
update steeringValue adjustments in TestAttachDriver , TestFancyCar , TestFancyCar , and TestPhysicsCar test files to reverse the steering
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by utilizing a more
refactor JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp conversions to improve date handling and accuracy of date and timestamp conversions
updated VERSION to 3 and modified metadata reading logic based on version to ensure compatibility with newer version versions and improve metadata handling
refactor FlywayAutoConfiguration to include ConditionalOnBean and LocalContainerEntityManagerFactoryBean for JPA configuration to improve dependency management and ensure proper
added a sorted method to the ClassesImpl class to ensure that the classes are sorted before processing them
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated ` AbstractLauncherUiTest ` to use it
refactor SharedInformer class to improve code readability to enhance maintainability and facilitate future updates
refactor TestCloseScope0 to support both MemoryScope and ResourceScopeImpl versions to ensure compatibility with versions 16 and above to improve memory management and
updated test parameters from 500 to 5000 in AdaptServerSocket . java to improve test reliability by allowing more time for server connections
refactor CaptchaChannelProcessorTests for improved clarity to enhance maintainability and readability of the test code
added a condition to update the owning collection in MetadataImport . java to ensure the item ' s owning collection matches the current collection ' s
added retry logic for saving registry cache properties in AbstractRegistry . java to ensure cache file saves only after a specified number of attempts to save properties
updated the ` trackingCFSDir ` wrapper to use ` directory ` instead of ` mergeDirectory ` to ensure the correct directory is used for tracking
[ java ] unusedimports : fix false positive with for loop
added validation for the ` FileSinkDesc ` in ` HiveIcebergStorageHandler ` and a method in ` IcebergTableUtil ` to
updated SAML configuration assertions to check for legacy SAML keys to ensure proper validation of SAML keys for the identity zone configuration
updated methods to check for anonymous and non - static local types in Excluder . java to improve clarity and functionality of anonymous and non - static
change the variable name from ' theAddressie ' to ' addressees ' in getAddressVector ( ) method to improve code readability and maintainability
removed multiple WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING
added IOException handling to the release method in Lock and NativeFSLockFactory classes to improve error handling and ensure proper resource management during lock releases
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to align with the new package structure for
added a check for unary operators in SpelExpressionTransformer and refactored imports in LiteralNode and LiteralNode to improve code readability and
added TypeValidation . DISABLED to ByteBuddy initialization in MockBytecodeGenerator . java to disable bytebuddy validation for improved performance
refactor ` JavacRoundEnvironment ` and ` AnnotationSetScanner ` classes to use ` TypeElement ` instead of ` DeclaredType ` to simplify
updated locking mechanism to throw a pessimistic entity lock exception and modified timeout values in multiple test files to improve error handling and ensure accurate locking behavior
refactor LoggingApplicationListener to remove the parameter from the setSystemProperties method and apply logFile directly to system properties to simplify the method signature and
refactor ServiceApiRequest to handle HTTP redirects more effectively to improve code clarity and maintainability by using a dedicated method for handling redirects
added SERVICE _ MAPPING and VERSION _ MAPPING constants to ServiceCombConstants and updated MicroserviceFactory to use these constants to improve code clarity and
updated method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` setStep ( Step . ABOUT _ TO _ START
made ` DB _ PATH _ REGEX ` static and ` DB _ PREFIX ` static in ` BaseAndroidTestCase . java ` , and updated
updated return statement to retrieve unread count from HomeDataSource to ensure accurate count retrieval for unread accounts
added a new test method ` testVirtualThreadPoolPreview ` to ` DistributionTests ` and disabled the existing test for JRE 20 to improve test coverage
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and implemented logic to limit the number of orders retrieved based on
added a null check for the user before retrieving its settings in HomePage . java to avoid potential NullPointerExceptions when retrieving user settings
fix localfilesystem . match ( ) to work with relative path
added maximum width and height limits for the instance in ComponentBuilders . java to ensure that the instance does not exceed defined bounds limits
added SLF4J logging and updated connection manager timeout configuration in CommonsHttpSolrServer . java to enhance debugging capabilities and ensure proper connection manager timeout
added error handling conditions for document creation in PrintController . java to improve error reporting for document creation failures
refactor CrateType and RustBinaryIntegrationTest to use mapping for filenames instead of Optional to improve code readability and maintainability by reducing
spellchecker : check for number with separator ( # 53643 )
updated the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
refactor file action handling in FileDisplayActivity to improve clarity and functionality to enhance code readability and maintainability by centralizing file action management logic
added a daemon mode to ReplicationHandler and wrapped logReplicationTimeAndConfFiles in a try - catch block in SnapPuller . java to
removed unnecessary parameter from the update method call in StoreCachedTest . java to streamline the code by eliminating unnecessary parameters
updated the constructor parameter name from ' materials ' to ' theMaterials ' and added logic to remove specific MaterialColumnParser instances to improve clarity and
updated dependencies in DependencyBank . java to include additional libraries and tools to enhance clarity and maintainability of the codebase
added maximum recycled views configuration for various item types in AppsContainerRecyclerView to improve performance by reducing the number of items displayed in the RecyclerView
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that binaries are built
modify examplebaritonecontrol to filter out unknown waypoint
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance code readability and maintainability by
added null handling support in FilterOperatorUtils and created a new test for range filtering in NullHandlingEnabledQueriesTest to ensure proper handling of null values
added validation for bootstrap method parameters in JDynamicInvokeExpr . java to ensure only valid bootstrap method signatures are processed
updated the port number from " http : / / localhost " to " jetty : localhost : 9000 " in JmsHttpJms
removed runtimeOptions . getFormatters ( ) . clear ( ) from runtimeOptions . getFormatters ( ) to streamline formatting options for better
changed the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` and updated
added conditional logic to adjust workspace labels based on cell padding to ensure workspace labels are only shown when necessary
replicationfactortest : use assertrf ( ) instead of printf ( )
sulong : allow pre - initialization of llvm language . patchcontext ( ) to be call after context pre - initialization .
removed JUnit @ Ignore annotation from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java to enable
replace RuntimeException with JsonIOException in the exception handling to improve error handling by providing a more specific exception type
replace Integer . valueOf ( ) and Integer . valueOf ( ) with Integer . parseInt ( ) for value parsing to improve code readability and maintainability
updated error messages to clarify copy failures and modified file tree walk behavior to improve clarity of error reporting and ensure proper resource management
refactor segment name validation to use a new method ` isHighLevelConsumerSegmentName ` to improve code readability and maintainability by centralizing
added methods to start ` startActivity ` and ` startActivityForResult ` in ` ShadowFragment ` and created corresponding tests in ` FragmentTest ` to ensure
updated the date return logic in DueDateBusinessCalendar to use the current time from clockReader to ensure accurate time representation for date calculations
added x86 _ 64 - none - linux - android to the return value in TargetCpuType . java to ensure compatibility with Android ' s
added a method to delete all files in FileDataStorageManager and integrated it into ManageAccountsActivity to enhance file management and account management functionality
updated the command - line option from " - ? " to " - h " in SchemaCrawlerCommandLine . java to enhance user experience by providing more
added description . createsuitedescription ( ) and equal ( ) method , and add test
snapshotthread : use decoder . decodebarcode instead of reader . decode ( bitmap , hints )
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related methods to simplify the constructor and eliminate unnecessary complexity in the codebase
added unit tests for range handling in GWCZoomContextFinderTest to ensure correct behavior of range checks in the context finder functionality
added a new configuration key for dependency tracking in JRubyScriptEngineConfiguration . java and modified dependency tracking logic in JRubyScriptEngineFactory . java
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
do n ' t attempt to create a new keyspace if they already exist
make the welcomewindow cache the image , so that it do n ' t interfere with the original image .
updated tuner configuration handling and added checks for running state in SettingsManager , TunerManager , and R820TTunerController classes to
added HasTests interface to AbstractShBinaryDescription and implemented a test method in ShBinaryRuleIntegrationTest to enhance test coverage for binary operations
added a condition to set the include string to " db : hsqldb " in TestFilter . java to ensure proper handling of database - related
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
do n ' t materialize host exception if there be no stack trace .
refactor service loading logic to use an iterable for better performance to improve performance and readability of the service loading process
add test for duplicate command handler resolution in aggregateannotationcommandhandler
[ flink - 20865 ] [ runtime ] introduce fine - grained . shuffle - mode . all - blocking for all edge in batch
fix entity fish not be able to place block on the client side .
camel - 13107 : camel - ftp - create an aws - ftp component base on sdk v2 , regen doc
corrected the spelling of " command " to " step " in multiple files to improve code readability and maintain consistency in naming conventions
updated the ` useShortNames ` boolean to ` compressPackageNames ` in the ` GangliaReporter ` class to enable package name compression to enhance
added a check for empty items in AppsContainerRecyclerView to prevent processing when there are no items to process
added a conditional bean definition for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure that the reporter bean is
log4j2 - 1060 add property to xmllayout , and make it configurable .
added a new parameter ` OMIT _ HEADER ` and implemented a ` remove ` method in ` NamedList ` , ` BinaryResponseWriter ` ,
fix escherproperties . getpropertynumber ( ) and add unit test
replaced a method call to ` getBuildRuleType ` with a call to ` Description . getBuildRuleType ` to improve code readability and
modified the way the method numberer is removed in SootClass . java and added a call to modifyHierarchy in SootClass . java to
added null check for disputesPerTradeIdItems and disputesPerDelayedPayoutTxIdItems in TradeDataValidation . java to improve code robustness
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified the ` retrieveColumns ` method to
wallet : set wallet confidence type to not _ seen _ in _ chain for sendtransaction .
refactor HttpClientIntroductionAdvice to handle both Body and Header annotations more effectively to improve clarity and maintainability of the code by consolidating
added condition to skip processing of JSON conditions in CraftingHelper . java to ensure that only valid JSON files are processed when conditions are met
hbase - 24413 add log when open region fail to close ( )
refactor length comparison logic to use local variables instead of length checks to improve readability and maintainability of the code
[ java ] do n ' t add image to subscription when there be no image in the subscription .
refactor the destroy method to use ` destroyForcibly ( ) ` and ` waitFor ( ) ` instead of invoking ` destroyForcibly
added Oracle support to the conditional check in TestDefaults . java to enhance compatibility with Oracle databases
camel - 14237 : camel - mail : do n ' t try to connect to the mailstore if the store be n ' t connect
added token handling logic in the Parser class to check for more tokens in the query to ensure proper error handling when there are more tokens in the query
list all the available language in the enum ( greek , greek , gu )
added a method to retrieve the data file name in Model . java and modified HMMModel initialization in Voice . java to handle both duration and F
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration of email domains for identity provider
added new configuration constants for request read and connection timeouts and methods to retrieve them to improve configuration flexibility and allow customizable timeout values
add a conditional check to ensure deferred concepts and concept links are not empty before executing the task to avoid potential null pointer exceptions when concepts are
added RedisCategory annotation and JUnit category annotation to RedisServiceRegistryTests to enhance test coverage for Redis services
updated FindDeprecatedMethodsTest to use ParameterizedTest annotation and modified FindDeprecatedUses constructor to accept a type pattern parameter to enhance test clarity and ensure
updated the paintComponent method call in OverlayPanel and added a call to super . paintComponent in WaterfallPanel to ensure proper rendering of the
removed unused imports from multiple configuration files to clean up the code and improve maintainability
updated event signature handling in ContractEventTriggerCapsule , LogEventWrapper , and ContractEventTrigger classes to improve clarity and functionality of event signature
updated filter condition in FileTestHelper to check for sessionId ending with a underscore to ensure that only valid session IDs are processed
replace clearRect with fillRect and set the background color in MapView . java to ensure the graphical context reflects the current background color
move invoker compilation to the top of the package so that the code do n ' t have to call compile ( ) twice .
removed unnecessary print statements from multiple Java files to improve code readability and maintainability
added a check for NaN values before assertions in TestFieldCacheSort . java to ensure that assertions are only executed when the scores are valid to avoid
replaced the direct assignment of ` oldKeys ` with a copy of ` entityKeys ` to improve code readability and maintainability by using ` Set
added functionality to handle zero - time values in ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to ensure proper functionality and validation
[ java ] rename ` ` takermultisigpubkey ' ' and ` ` takertakermultisigpubkey ' ' to `
updated generic type parameters for Map in multiple collector classes to improve type safety and eliminate potential null pointer exceptions
[ drools - 141 ] remove redundant lambda expression in kiecontainerimpl . getsessionconfiguration ( )
updated instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure consistency in variable usage across the class
added a conditional check to return early if modalness matches to ensure that modalness does not interfere with other modalities
added a test method to verify the behavior of CodecProfileLevel in ShadowMediaCodecListTest and implemented native settings retrieval in ShadowMediaCodecList to
fix issue # 5460 : confirm button do not focus on enter key ( # 5460 )
added validation to ensure width and height are non - negative in SunVolatileImage and improved error handling in XRSurfaceData to enhance robustness by
updated the thousands separator from a period to a non - breaking space in the FormatData _ uk . java file to ensure proper formatting of thousands in
replaced the ` _ loops ` array with ` _ loops ` with ` AtomicInteger ` for thread - safe access to improve concurrency handling and ensure
added imports and modified visibility logic for progress bar in AchievementsFragment and LeaderboardFragment to improve user experience by displaying relevant messages for beta
added field assignments for access , name , and desc in SearchMethodVisitor . java to ensure proper initialization of context properties for the Search class
added multiple Thread . sleep ( 1 ) calls and modified exception handling to include InterruptedException to improve error handling and ensure proper handling of interrupted exceptions
refactor duration setting logic in DLNAResource . java to improve code readability and maintainability
removed the " batch - config " and " stream - config " attributes from XML element definitions to simplify XML element naming for better readability and maintain
rework tablereader . acquiretxns ( ) and tablereader . readtxnslow ( ) to improve transaction management and error handling
flume - 264 . make keystore and trustmanager - type configurable via spring security . properties .
refactor ` getSingleSourceApplicableTest ` method to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to improve code readability and
added exit functionality for the TAB key in Blockmania . java to ensure proper exit behavior when the tab key is pressed
replace usage of AccessSpecifier . PACKAGE _ PRIVATE with AccessSpecifier . NONE in multiple files to standardize access specifier usage across the codebase
renamed the method ` unHandled ` to ` unhandled ` and updated error logging for better clarity to enhance code readability and maintainability
updated OrcInputFormat to initialize stripes and stripe statistics dynamically based on the reader ' s stripe settings to ensure correct processing of stripe data based on
added a null check for the variable ' ex ' in JCache . java to prevent potential NullPointerExceptions during execution
myhentaicomics ripper now use http for myhentaicomics . com
added a version option to the command - line argument handling in the application to indicate when the current jar version is used to improve user experience by providing
use splittokens ( ) instead of split ( ) in sketch . export ( )
updated the rotation handling logic in ConsoleActivity and improved input connection in TerminalView to enhance user experience by providing a default rotation option for better user experience
changed the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` and added a suppress
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - 14146 : camel - jbang - add support for the headersmapfactory attribute in camel - core
replaced single quotes with single quotes in JavaFileObject . java to improve code readability and maintainability
int - 1636 added parser to jmsoutboundgateway to allow custom configuration of jmsoutboundgateway
updated parameter index from ' i + 1 ' to ' i 2 ' in ArrayFunctions . java to correct the logic for processing array elements
updated AbstractScriptProcessor and InvokeScriptedProcessor to handle null additional classpath URLs and made scriptEngine volatile to improve error handling and ensure thread safety
added support for PostgreSQL ' s PGStatement in the PooledConnectionImpl class to enhance compatibility with PostgreSQL ' s statement handling
[ hotfix ] [ cassandraio ] refresh size estimation in cassandraiotest
change log level from error to warn in AtomicRemainder . java to reduce log verbosity and improve clarity of log messages
remove compaction candidate sort from compactioncontroller and add test for aggressive fully expire ttl
fixed - redissonblockingdeque . poll ( ) and redissonblockingdeque . pollasync ( ) method do n ' t
[ hotfix ] [ runtime ] fix format string in jobinspectcommand
refactor Engine class to improve code readability to enhance maintainability and facilitate future updates
refactor the stream processing in ChildHolder to use a custom comparator for key comparisons to improve code readability and maintainability by using a more
[ rocketmq ] fix test and update acl client to use sessioncredentials instead of rpchook
corrected a typo in the condition check from ` numIndexDims ` to ` numDataDims ` to ensure correct handling of data
do n ' t print stacktraces to stderr when interpretergroup be null
replace ` funN ` with ` lt ` in ` ExpressionNodeEvaluator . java ` to ensure the correct node is added to the evaluation list
removed the ` public ` access modifier from several methods in ` NodeIdAccessor . java ` to restrict access to package - private methods for better en
cloudstack - 1078 : fix the error message when createsnapshotpolicy fails due to invalid parameter
changed method visibility from public to package - private for several methods in ItemWriter . java to allow external access to these methods from outside the package
updated the string representation of the ThingImpl in RoombaHandlerTest from an empty string to " test " to provide a specific test case for
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutor
replaced FSDirectory with RAMDirectory in TestNorms . java to streamline directory creation and improve performance
added a static variable ` mLineHeight ` and modified the way ` lineHeight ` is assigned based on its value to ensure that the line height
refactor WalletAppKit class to improve code readability to enhance maintainability and facilitate future updates
do n ' t use the nashorn engine a it ' s not available in the profiler
fix a bug in the chat transport selector box when remove a transport menu item .
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl ` classes
do n ' t set bsqblockchainexplorer if it ' s not present .
added attribute management functionality to the StandardSession class and implemented getter and setter methods for attributes to enhance the management and retrieval of attributes in the session
added assertions to verify the properties of the plain bean in TestDbJson _ List . java to ensure the correctness of the found bean ' s
replace ` pageSize ` with ` initialPageCount ` for the ` averages ` array in ` MonotonicAppendingLongBuffer . java `
refactor BatchCommandLineLauncher class for improved clarity to enhance maintainability and readability of the code
added JDBC embedded datasource and transaction manager beans to BatchMetricsApplication to enhance data source management and improve transaction management in the application
changed the implementation of the GlowrootLogHttpService class from UnauthenticatedHttpService to HttpService to ensure compatibility with the latest HTTP service implementation
updated the drawImage method to set graphics composite based on the graphics state to ensure proper rendering behavior based on the graphics state
removed synchronized blocks from the close ( ) method in DocumentsWriter . java and added synchronization in DocumentsWriterPerThread . java to improve thread safety and
added methods to retrieve properties with multiple choice options and validation constraints in UiBinding . java to enhance flexibility in handling multiple choice options and constraints in the
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for better string representation to improve code readability and maintainability
added a fullSave flag to conditionally update the stored copy of the tree to ensure that only the stored copy of the tree for a full save
refactor Affix class to use a Pattern object instead of a String condition and update related methods to improve flexibility and maintainability of the code by
replaced explicit generic type parameters with diamond operator in KrakenAdaptersTest . java to improve code readability and maintainability
removed unused CharTermAttribute import and associated attribute retrieval in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependency on CharTermAttribute
refactor NBJavacTrees class to improve code readability to enhance maintainability and facilitate future modifications
added a check to throw an exception for unsupported data encoding in VectorizedPrimitiveColumnReader to ensure proper error handling for unsupported data encodings
added SLF4J marker initialization and improved logging behavior in HttpSolrCall . java to enhance logging clarity and maintain consistency in logging behavior
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata services after instance changes
fix infinite recursion when maxlevel = = 0
updated error message formatting in HubChangeExecListener to handle null changelog ID to improve clarity of error messages when the changelog has not been registered
add tryharder mode to abstractblackboxtestcase to try harder
updated ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of ` int exitCode ` and added a new test for compiler errors to
refactor event handling logic in ObjectStore . java to simplify the loop condition to improve code readability and maintainability by eliminating redundancy
simplified the support check for @ ConfigurationProperties annotations in ValidatedLocalValidatorFactoryBean . java to improve readability and maintainability of the validation logic
fix a bug in entityawareworldprovider . removetemporaryblockentities ( )
removed unnecessary checks for target and component types in IntrinsifyArrayCopyPhase . java to streamline code by eliminating unnecessary checks
do n ' t set log level to all for test that do n ' t need it
added detailed stack trace information to the ` WantedAnywhereAfterFollowingInteraction ` class and deleted the ` HasStackTrace ` class to improve debugging
added null checks for owner and key addresses in AccountPermissionUpdateActuator and refactored key validation in PermissionAddKeyActuator to
replaced Comparator with TreeMap for sorting commands and updated usage message formatting to improve code readability and maintainability by using a dedicated TreeMap
chore : [ cloudstack ] add new iences / lifesciences to list of workflows in proto file
removed redundant property settings in BaseSingleTreeBuilder . java to improve code readability and maintainability
updated AsmLibraryLoader to accept a ClassLoader parameter and added constructors in AsmLoader to enhance class loading flexibility by allowing custom class loaders
pdfbox - 4892 : fix rlineto and curveto for sampledimagereader , and add null check for sampledimagereader
updated Java2TypeScriptTranslator to use " declare " instead of " export " for definition scope to improve clarity and correctness of the export statement
replaced ` EmptyServerHandler ` with ` AbstractHandler ` in ` HttpClientTest . java ` to ensure proper handling of HTTP requests and output streams
removed unnecessary string array creation for listener registration in HelloInput . java to simplify listener registration and improve code readability
[ hotfix ] fix npe in abstractsqmpath when there be no lhs .
updated package declarations in multiple test files for consistency to improve code readability and maintainability
refactor BufferedImage handling in AwtCanvas to differentiate between byte indexed and indexed images to improve image rendering efficiency and compatibility with different image formats
[ gr - 24497 ] allow to specify the location qualifier of the native image .
[ hotfix ] remove dataflowportabilityapiunsupported from usestimersinpardo
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 49 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization and deserialization of enum sets
refactor CallStack class to improve code readability to enhance maintainability and facilitate future modifications
log warn if max size configuration for map do not allow any data in the map .
update error messages from " AST " to " LST " in multiple Java files to clarify the purpose of the LST element to improve clarity and
refactor threaded scoring logic in ThreadedAcousticScorer . java for improved clarity and performance to enhance code readability and maintain
replace throwing an AssertionError with returning null in NetHooks . java to improve error handling by returning null instead of throwing an assertion error
updated method calls to use ` window ( ) . title ( ) ` instead of ` getServerAddress ( ) ` and ` getServerAddress ( ) `
added default ` makeString ` methods to multiple iterable classes and overridden them in ` AbstractSynchronizedRichIterable ` , ` AbstractMultiReaderMutableCollection
replaced Ordered . HIGHEST _ PRECEDENCE with a static final DEFAULT _ ORDER in OidcServicesManagerRegisteredServiceLocator to improve
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related tests accordingly to enhance the analyzer functionality by allowing matching of weak associations
refactor Deflater class for improved performance to enhance performance and maintainability of the code
added a try - catch block to handle exceptions in the Font class to improve error handling by throwing an IOException when an IOException occurs
added a null and empty check for the content in VersionTypeBinding . java to prevent potential NullPointerExceptions when the content is null or empty
refactor NearbyListFragment to directly return the places list instead of using a local variable to improve code readability and maintainability by reducing
changed the content type check from a case - insensitive to case - insensitive for " text " in MailConverters . java to ensure consistent handling of
change visibility of AUTH _ MAGIC from private static to public static in OpenSSHPrivateKeyUtil . java and modify OpenSSHSpec . java to
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter and adjusted hint setting logic accordingly to ensure that suggested folder names are
updated InheritanceCacheTest . java to use a wildcard import and added JPA annotations for finding a post in JPA to improve code clarity and
updated import statements in ConnectOAuth2RequestFactory . java and added a user approval request method in TofuUserApprovalHandler . java to ensure correct
fix influxnamingconvention to not apply to tag value ( # 645 )
add a dump method to the abstractquickfixtest to make it easy to run test
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure consistency in cookie handling in the application
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated its usage in the ` Subject ` class to improve
added functionality to clear all tasks based on user preferences in OverviewActionsView to enhance user experience by allowing users to clear all tasks based on user
changed ` desiredRepoVersion ` to be ` final ` and adjusted the timeout duration from 60 seconds to 600 seconds to ensure the cluster stack version is
remove memoryleaktest since it be no longer need .
updated the return statement in ServletTester . java to include the local host from InetAddress if localhost is set to ensure the correct IP address is used
added a check for MVDWPlaceholderAPI configuration and updated its usage in ServerListener . java to enable MVDWPlaceholderAPI hook
added assertclustersizeeventually ( ) to abstractpartitionassignmentscorrectnesstest and abstractpartitionassignmentscorrectnesstest
refactor FFIProvider to use a singleton instance for FFIProvider to improve flexibility in loading FFI and JNA providers based on configuration
tika - 164 - add testcase for hierarchical file list in batchprocess
added null checks for objectToSave , objectToSave , and collectionName , and improved null handling in MongoTemplate to enhance code robustness and
updated Position initialization to use NODE _ LIST instead of 0 to ensure proper handling of direct input and successor counts
added an ` accTradeValue ` field and its getter method to ` BithumbTicker ` and updated related classes to include it to enhance trade data
updated logging statements to include the segment name in log messages to improve traceability and debugging by including the segment name in log messages
changed ` maxParallelThreads ` to ` MAX _ PARALLEL _ TASKS ` and introduced a new constant ` MAX _ PAR
replaced ArrayList with CopyOnWriteArrayList for _ headerReaders , _ dataReaders , and _ readers in FixedByteMVMutableForwardIndex and Fixed
fix checkstyle issue in util / dicts . java and util / dicts . java
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions when destBuffer is null
camel - 16266 : camel - jms - msv - fix test that fail on slow ci server
updated condition from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` in DelegationService . java to ensure correct handling
updated random value generator from 6 to 10 in JdbcExpiringCodeStore . java and modified assertions in CodeStoreEndpointsTests . java and Auto
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure that unique constraints are processed correctly in the change filter
refactor description handling in MediaDetailFragment to utilize a HashSet for multiple language codes instead of splitting them to improve code readability and maintainability
do n ' t swallow arrayindexoutofboundsexception and classcastexception in case of arrayindexoutofboundsexception .
added new ` withReferenceFilter ` and ` withFilter ` methods to ` ListImagesCmd ` and its implementation in ` ListImagesCmdImpl `
camel - 14105 : camel - jms - add support for bridgeerrorhandler to camel - jms
added checks in OpExclusionUtils to handle specific conditional statements and set all ops to true to improve error handling and provide clearer feedback when no ops
added two return statements in DatabaseCommand . java to ensure that the method always returns false
add a few more Politician to the ksession to make it more consistent with other example .
replaced null and empty check for initFile with Apache Commons Lang ' s isNotBlank method to improve code readability and maintainability
camel - 11436 : camel - restlet - add port support to camel - restlet
remove blockid . wall _ sign case from schematicformat . java
added a system property to set the maximum query length to 100MB in QTestUtil . java and removed overridden configurations from SessionState . java
do n ' t send server version when there be no security manager
[ hotfix ] [ kafka ] rename kafka sink to kafkasource
modified the logic to conditionally set the Spark application name based on the " spark . app . name " configuration to ensure correct application name is used
rename variable ` whiteName ` to ` includedName ` for clarity to improve code readability and maintainability by using a more descriptive variable
simonstewart : re - enable window . maximize ( ) in the selenium server
updated methods in LocalCellProviderFactory , AbstractEmbeddedCellBuckOutInfo , and DefaultProjectFilesystemFactory to include the main cell root path and
added an assertion to check for " entity expansions " in the exception message to ensure that the error message does not contain " entity expansions "
modify table offset and length assignments to bitwise AND with 0x7FFFFFFF to ensure proper handling of integer values in TrueTypeFont
added a null check for the customized form in the customize method of DirectMethodHandle to ensure that the form ' s customized form is not null before
refactor the initialization of mLineBuffer to use variable names for better readability and maintainability to improve code readability and maintainability by reducing
refactor flavor handling in AndroidBinaryDescription . java to support multiple flavors instead of a single flavor to improve code readability and maintainability by
changed the index used for generating buffers from ` offset ` to ` i ` in LwjglGL11 . java to ensure correct buffer generation
added two new classes , Property , PropertySuper , and TestClassResolutionFail , to implement and test property resolution to enhance error handling and provide clearer
do n ' t remove shutdown hook if group . shutdownhook _ enabled be false
replaced ` FilterChainProxy ` with ` FilterChjainProxy ` and removed the ` url ` parameter from the constructor of ` VirtualFilterChain
replaced the use of ` Collections . sort ( intermediateResult ) ` with ` Arrays . sort ( values , 0 , size ) ` and modified the
added checks to load tables in ` MetaDataBasedSQLCompletionProvider ` and ` QueryTypeAnalyser ` to ensure that tables are loaded only when the
set ` baseType ` to null instead of creating a new instance of ` MutableColumnDataType ` and initialize ` literalPrefix ` and ` literalSuffix
updated JavaDoc links in multiple Java files to use { @ link } syntax to improve code readability and maintainability by standardizing link syntax
replaced static instance retrieval methods with instance - based methods in EvaluatorFactory . java to improve code readability and reduce redundancy in instance creation
updated references from " osx " to " os _ config " in BuildCommandIntegrationTest and ConfigSettingIntegrationTest classes to ensure consistency and correctness in
added sound effect playback functionality in AllAppsView . java to enhance user experience by enabling or disabling sound effects
changed the exception type in the main method from Exception to IOException to provide more specific exception handling for the main method
added leftAxis . setGranularityEnabled ( true ) to BarChartActivitySinus . java to enable granularity for
refactor version comparison logic in GdxSetup . java to use a separate compareVersions method to improve code readability and maintainability by reducing du
updated ContextHandlerGetResourceTest to use MavenTestingUtils for directory checks and added OS support checks to enhance test reliability and ensure compatibility with OS
added a ` close ` method to multiple classes and implemented it in ` JsonAsyncHttpPinotClientTransport ` and ` PinotClientTransport `
[ java ] improve mockappender and socketserverfunctionaltest to avoid lock contention .
[ beam - 4142 ] check if a resource be a directory in hadoopresourceid .
removed unused imports and added static imports for sprite batch constants in IsometricStaggeredTiledMapRenderer . java to streamline
removed duplicate call to unbindHandle in ItemServiceImpl . java to streamline code by eliminating redundancy
refactor Config and Attribute classes for improved readability to enhance maintainability and clarity of the codebase
removed unnecessary condition checking for HIT _ TARGET _ BACK in touch target handling to simplify touch tracking logic for better readability and maintainability
replaced theme - based image tinting with a dark theme check in NavbarButtonsViewController . java to improve compatibility with different Android UI modes and
fix : throw exception instead of error message when language can not be find .
refactor code to replace bootstrapMethodIndex and nameAndTypeIndex with refKind and memberIndex in ClassWriter . java to improve clarity and functionality
modified the ` findBox ` and ` findElementBox ` methods to include ` BlockFormattingContext ` parameter to enhance functionality to support different block formatting
added error handling and improved output formatting in WorkerProcess and WorkerShellStep to enhance robustness and error reporting during process launch
added null checks for the operator in CheckedListReplaceAll and improved error handling in Collections to ensure robustness and prevent runtime exceptions during operator replacement
added boolean and FutureCallback handling in SslConnectionTest . java and implemented a test for writing on a connection to enhance test coverage and ensure proper
added device configuration listener registration and initialization in DeviceFlag and FeatureFlags classes to ensure proper handling of device configuration changes in the application
added an import statement for JUnit ' s Ignore annotation and annotated the GatewayRSocketIntegrationTests class with @ Ignore to temporarily disable the test due
removed the import of MalformedURIException from StandardRequestHandler . java to clean up the code and improve maintainability
[ issue # 605 ] instructorfeedbackeditpage : focus on the first element in the form , not the first one .
refactored synchronization and synchronization logic in KrakenStreamingTradeService . java to improve readability and maintainability of the code
changed System . err . println to System . out . println for ignoring Class - Path entries to standardize output from standard error to standard output
added a new boolean parameter ` randomAccessRows ` and modified constructors in ` SparseRowMatrix ` to support additional parameters to enhance flexibility in row
server : fix npe in delete volume usage event if the volume pool be null .
refactor how the plan file is created based on the job configuration to improve flexibility in handling local Hive configurations
( chore ) camel - udf : upgrade guava to v26 _ 0 _ jre
[ hotfix ] reset internal state in memorycallgraphbuilder . resetinternalstate ( )
added check for multiuserchat operationset in conferencechatmanager . java .
added file writing checks in Save . java to ensure the file can be written and set the GUI to dirty if the file is not writable
added a new FolderSyncActivity class and integrated it into the DrawerActivity to provide functionality for navigating folder synchronization in the application
[ hotfix ] [ network ] close network buffer pool in sequentialchannelstatereaderimpltest
add a ' % ' to the list of non - numeric word in spanishnlpnormalizer .
replaced the method of retrieving a point value from the heapPointWriter to using getPackedValueSlice instead of getReader to simplify the code and improve
added a new ` LocaleRandomizer ` class and integrated it into ` InternalRandomizerRegistry ` to generate random locales based on available locales to enhance randomness
added unit tests for MIME type mapping in TestMimeTypes . java to ensure correct mime type handling for different font file formats
update version number from 8.0 to 9.0 in Installer . java and AutoUpgrade . java to ensure compatibility with new version features
removed unnecessary ` AccessController . doPrivileged ` wrapping in the ` run0 ( ) ` method call to improve code readability and maintainability
update http2asyncparser . read ( ) to set readtimeout to 0 instead of socketwrapper . getreadtimeout ( )
updated the default initial delay value from 120 to 600 in TimelineMetricConfiguration . java to adjust the default delay from 120 to 600 milliseconds for better
updated the error message to include the previous column name in the constraint constraint to ensure proper naming of the restricted column for better clarity
added Joda - Time imports and implemented date parsing for custom fields in ThirdEyeJiraClient to enhance date handling capabilities in Joda -
added a PriorityGenerator instance and refactored priority generation methods in HeadersGenerator and PriorityGenerator classes to improve priority generation logic and enhance code readability
added a constant for maximum scalar replacement code size and updated the condition for scalar replacement to ensure that scalar replacement logic does not exceed a defined maximum size
added DATE _ TAKEN to the projectionTest array and updated fileSortOrder and folderSortOrder in MediaProvider . java to include date and folderSortOrder
updated drawImage method calls in TexturePacker2 . java to adjust rectangle positioning to ensure correct rendering of images with correct rectangle dimensions
refactor JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to streamline WebSocket upgrade filter configuration to improve code clarity and maintainability by
added shutdown calls for validateSignService and trxHandlePool in multiple classes to ensure proper resource management and prevent potential memory leaks
added RawJsonRequestBody annotation processor to handle raw JSON input in Swagger generation to enable the use of raw JSON data in Swagger responses
added a new method ` newTarget ( int targetType , TargetExtension ) ` to create a ` Target ` instance with specified type and extension to enhance
updated the return statement in BeanContainer to use a new ArrayList and added unit tests for BeanContainer functionality to ensure correct functionality of the toList method
hbase - 24497 testmetricsregionserver # testblockcachehitpercent should be ` ` blockcachehitpercent ' ' , not ` `
camel - 14146 : cache output stream should release input stream cache on exchange completion .
add teltonika device id to position
replaced ` Files . readFirstLine ( buildFile . toFile ( ) ) ` with ` Files . asCharSource ( buildFile
added a null check for the operator in JCAssignOp and created a new Test class with a generic method to ensure proper handling of null operators and
added a boolean flag ` enableAccountHandling ` to ` BaseActivity ` and modified ` FirstRunActivity ` to create the mixin registry only when `
use heuristically find the main connected component of a polygon instead of throw an exception
modified DrillViewTable and WorkspaceSchemaFactory to accept a path list of paths instead of a single view to enhance flexibility by allowing dynamic path resolution
[ hotfix ] [ runtime ] fix incorrect configuration of pooledbytebufallocator
updated array type check from double to short in ObjectInputStream and added a new CloneArray class to ensure correct cloning of short arrays in ObjectInputStream
added a new configuration variable for the number of low - level IO thread pool size in HiveConf . java and updated executor initialization in LlapIo
re - initialize sun . security . ssl . debug and sun . security . ssl . ssllogger on jdk 11
updated latitude and longitude range handling in LatLonGrid and added a new test for growing polygons in TestLatLonGrid to ensure the grid correctly handles
simonstewart : make the ` ` invisibilityofelementwithtext ' ' method in the ` ` expectedconditions ' ' interface
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and updated related calls to include it to allow the method to overwrite existing
added a test for the ` getOuterClass ` method in ` ReflectorTest . java ` to ensure that the ` getEnclosingObject ` method
added a new configuration option " auto _ generate _ android _ facet _ sources " and updated the IjProjectBuckConfig to use it to
updated logging messages to include the author and ID in HubChangeExecListener . java to enhance clarity and maintain consistency in logging output
added properties field and corresponding getter and setter methods to Link class , and created a test for resolving properties in QuickLinksConfigurationModuleTest to ensure proper
added a ` toString ( ) ` method to ` YamlConfigFileDTO ` and removed annotations in ` InitialConfig ` and ` YamlConfigFileDTO ` to
updated generic type parameters for SimpleForwardingServerCall and SimpleForwardingClientCallListener in AwaitableServerClientCallConfiguration . java to improve
refactor ` forName ` and ` forNameHelper ` methods to include ` CallerSensitiveAdapter ` and improve class loading functionality to enhance compatibility with adapter
updated authentication methods and import statements in RequestItemRepositoryIT . java to enhance token handling and improve test accuracy
[ hotfix ] [ runtime ] use threadpoolexecutorex instead of threadpoolexecutor
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow access to the method from outside the package
refactor ` TimeStepdefs . java ` to use ` Chronic ` and replace ` HumanTimeConverter ` with a new ` Given
fix a typo in the logo pattern . close # 328
updated the ` createProxy ` method to use ` exchangeSpecification . getUri ( ) ` instead of ` ExchangeSpecification ` to ensure consistent retrieval of the
removed multiple debug print statements in RecordGenerator . java to streamline output for better readability and maintainability
[ flink - 20527 ] [ kafka ] remove auto commit enable check when auto commit be enable .
removed lock release logic and added database change log table flag in the LoggingExecutor and StandardLockService classes to improve lock management and ensure database change log
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and added deprecation warnings in AuthorizeTagCustomGrantedAuthorityTests . java to improve code
mondrian : move database . closefiles ( ) and database . commit ( ) from ` this ` to ` synchronize ( ) ` .
add support for mutable property in camel - spring - boot auto configuration
updated the ticker adaption from baseSymbol to counterSymbol in VirtExMarketDataService . java to ensure the correct ticker is used for the counter
( chore ) camel - core : fix the build error of camel - core
updated the way testId is stored in HoneycombJdbcInterceptor to allow dynamic retrieval of the test ID from system properties instead of a random UUID
added synchronization around date and number parsing operations in DefaultJobParametersConverter . java to ensure thread safety during date and number parsing operations
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
update heightmap height scale from 256 to heightScale in FractalHeightMapGrid . java to allow dynamic adjustment of the heightmap ' s
updated equality check from assertEquals to assertNotSame in SecurityConfig and modified test assertions in SecurityConfigTests to ensure proper equality comparison and improve test reliability
set default value of dumpPartitionId to false to ensure dumpPartitionId is always set to false to avoid potential null pointer exceptions
added unit tests for TronTXOutput and TronTXOutputs in UTXOSetTest . java to ensure that TronTXOutput
[ java ] unused - variable - no functional change
pdfbox - 4892 : check for null before add a cosobjectable to avoid potential npe
added a new test for overriding job restart parameters in JsrJobOperatorTests to ensure that new job parameters override the previous restart parameters are correctly
added a protected boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform
refactored the initialization of the principal variable in JaasAuthenticationHandler . java to improve code readability and maintainability
refactor SolrCores to use an Executor for closing SolrCores concurrently to improve resource management and error handling during core closure
added a null check and visibility setting for mActionsView in RecentsView . java to ensure mActionsView is only visible when fullscreen progress
refactor parameter handling in RunIdIncrementer to use a default instance of JobParameters to improve code readability and prevent potential NullPointerExceptions
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added tests for matched devices in SchemaRegionBasicTest . java to ensure correctness of device matching functionality in SchemaRegionReadPlan
add error handling to metricseventbus so that it do n ' t block on exception
added a conditional check for ` max ` before calculating ` mSumChange ` and created ` EigenvectorCentralityBuilder ` class
refactor registry creation and lookup logic to use a random port instead of a hardcoded value to improve maintainability and readability of the code
updated geometry buffer creation methods to utilize a new method for setting buffer parameters to improve code readability and maintainability by centralizing buffer creation logic
fix incorrect beacon amplifier be set to 0 in some case .
refactor TubeCalc class to improve code readability to enhance maintainability and facilitate future updates
disable http client health check by default
add some sanity check to prevent validation failure on class that do n ' t have any superclass
updated key annotations and added a timeout for the main method in bug8057791 . java to improve code clarity and ensure proper execution of the
fix issue # 322 - make scheduler daemon to allow application to exit
fix version number parsing for lexicon
added a call to ReflectionCheckLinker . checkReflectionAccess in JavaAdapterFactory . java to ensure proper reflection access checks for the specified type
[ hotfix ] [ test ] add lazysessioncreation to camel - mina
added a ` RecordReader ` parameter to the ` initIOContext ` method and implemented the ` getStart ` method in ` HiveContextAwareRecordReader
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused classes to simplify the codebase
add a method to update workspace root when jdk file system change
added try - catch blocks around session callback registration and unregistration in PackageInstallerCompatVL . java to handle potential exceptions during session callback registration and
removed the " src / org / apache / lucene / index / index . cfs " and added " 23 . cfs " and " 23
[ hotfix ] add a factory method to akkarpcserviceutils for create akkarpcservice
hbase - 27348 set max attempt to 3 for testexportsnapshot . testexportsnapshot ( )
pdfbox - 4892 : do n ' t set non - symbolic for font - specific encoding
added a new test class SslConnectionTest for testing SSL connection functionality to ensure proper handling of SSL connections in the Jetty client
added validation for address family type in InetAddress and NetworkInterface classes to ensure only valid IPv4 and IPv6 addresses are processed to prevent runtime errors
added a test method to serialize a collection of dates using Gson to ensure proper serialization and deserialization of date objects in a collection
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
added debug logging and modified conditional logic for firstUpdateKey in PutDatabaseRecord . java to improve visibility into SQL generation and ensure proper handling of first
corrected the loop condition in TableOutput . java to correct the calculation of the width by subtracting the running width to ensure the loop does not
pdfbox - 4071 : remove null check , a suggest by valerybokov
added a priority constant to handle cases where the format string contains " { 0 " and changed the priority from NORMAL _ PRIORITY to HIGH
[ java ] localvariablecouldbefinal : add property to control whether to ignore for - each statement .
updated PDFExporter to set the PDF version and set full compression settings to ensure compatibility with the latest PDF format and improve test coverage
added a new test class LdapUserDetailsMapperTests to validate role attribute mapping and handling to ensure correct functionality and correctness of the LdapUserDetails
cloudstack - 10213 : add a configurable ldap . read . timeout ( 1 second ) for the ldap connection .
rename multiple test classes for consistency and clarity to improve code readability and maintainability
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` and related iterators to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling only occurs when the handler is invalidate
updated WORKSPACE _ ROTATION and mMaxDistanceForFolderCreation to adjust folder creation distance and old rotation arrays to improve folder creation performance
use configsourceresolver instead of configprovider in ociconfigconfigsource . getproperties ( )
refactor Testjsig class for improved readability to enhance maintainability and facilitate future updates
add a multiplication operation to the mana table , ggb , and terra picker , and terra picker . close #
regenerate client with updated copyright year ( # 4382 )
removed the serialVersionUID field from P11TlsPrfGenerator . java and added a suppression warning in P11TlsPrfGenerator
refactor file validation logic to handle empty tsFile scenarios to improve clarity and maintainability of file handling logic
added new classes Switch21 , Switch19 , and Switch19 with custom switch pattern matching methods to enhance code readability and maintainability by providing a
updated error messages in ComparableSubjectTest to remove method invocation error messages to simplify error reporting for better clarity and maintainability
[ ooxml ] set standalone flag to true for streamhelper . xmlcontent .
updated validation and error handling in Int2ObjectCache and added equals method for map entries to enhance code robustness and improve object comparison logic
added order management to security filter chains in WebSecurityConfiguration to ensure proper sorting of security filter chains based on their order
removed the TimeInForce . GTC parameter from the OrderType parameter in the BinanceTradeService class to simplify the order processing by removing unnecessary
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update its constructor and method implementations to improve flexibility and maintainability of the random value generation
updated KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure proper separator handling
camel - 14105 : camel - core - add support for generate json schema for camel - jms component
added error handling to the SourceUtils class and created a new test class for the getBound method to improve robustness by catching NoSuchFieldError
refactor LeafFilterFactory to utilize a new method for obtaining FilterPredicateLeafBuilder based on the Parquet type to improve code readability and
added checks to ensure originalArtifactName starts with SCOPED _ TARGET _ BEAN _ PREFIX before processing to prevent potential NullPointerExceptions
modify the certificate fetching logic to read all available certificates before processing them to ensure that only available certificates are processed for the HTTPS server
refactor default value handling in mmm Config . java and create DnsFallback . java with multiple checks in DnsFallback . java to improve null safety and
ww - 4071 add exception to exception when write tag
changed the data type of the ` success ` field from ` boolean ` to ` String url ` in the ` DepositAddress ` class to provide a
refactor Privilege implementation to use a lambda expression instead of an anonymous class to improve code readability and ensure proper resource cleanup
removed " address " and " phone " scopes from the CommonOAuth2Provider and its tests to simplify scope definition for better readability and maintainability
refactor the ManagedSelector to use a new Start class for managing the started state to improve thread safety and ensure proper synchronization of the started state during
added constant BIG _ DECIMAL _ 182 _ 04 and values for hue and saturation in WLedHandler . java to enable color
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set for validation to improve code readability and maintainability
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to handle JSRInst cases in the InstSwitch
added transaction management support to the subscriptionactivatingsubscriber .
updated SQL statement handling in DBMSProcessor . java to use ` updateQuery ` and ` insertQuery ` instead of ` TRUNCATE TABLE `
remove the elevation field and its initialization in ContactItemInflater . java to streamline elevation handling for devices running Lollipop and above
rename variable ` typeInformation ` to ` identifier ` for consistency to improve code readability and maintainability by using a more descriptive variable name
refactor file reading and writing methods to use privileged actions for security to enhance security by ensuring privileged actions are executed on privileged actions
refactor GroovyParserVisitor , GroovyPrinter , and JLeftPadded classes to improve handling of binary operations to enhance code clarity and maintainability by
updated warning log message to include the exception class name instead of the exception message to improve clarity of error messages by providing more context about the exception type
updated character reading and compression handling in RecordInputStream and UnicodeString classes , and added a test for unicode reading in TestUnicodeWorkbook to improve character handling
add a new test method to verify downloading files with no orway character in their names to ensure that the download functionality works correctly for files with
added iscancelled ( ) and iscancelled ( ) method to asyncresource and fingerprintscannersample
[ hotfix ] [ runtime ] fix npe in timedmemberstatefactory # handlecache ( )
added a new test method to verify the removal of objects from an explicit collection in MongoTemplateTests to improve test coverage and ensure proper functionality of the
update copyright year to 2022 in java . desktop
removed unnecessary newline character from the return statement in Coder . java to improve code readability and consistency in formatting output
added a new boolean variable ` mIsClearAllButtonFullyRevealed ` and refactored scroll handling in ` RecentsView ` and
refactor HiveIcebergMetaHook to use a consistent COMMON _ HMS _ PROPERTIES map for table properties to improve code read
added a method to check if an address is already in use and refactored exception handling to improve code readability and maintainability by centralizing
added a command - line argument for the test class path in TestNestmateAttr . java to enable the execution of the test class based on
replaced ` VERBOSE ` with ` verbose _ schema ` in ` Grep . java ` to improve logging clarity by using a more descriptive
add miss @ override annotation and remove unused import
fix : add support for nested transaction use savepoint
changed the fetchSize variable from a int to a ThreadLocal < Integer > for thread - local access in QueryProcessExecutor and MemIntQpExecutor
[ hotfix ] [ runtime ] remove unused idlestrategy in embeddedpingpong
do n ' t throw exception if the return type of the method be void .
added support for retrieving and setting the HDP _ VERSION system property in the SliderAppsViewControllerImpl class to ensure compatibility with the latest H
refactor JavacProcessingEnvironment to use private fields for loaderClass , jusl , and loader , and add close methods for better resource management
added a new ` DeepCloner ` class and modified ` ParameterizedRobolectricTestRunner ` and ` RobolectricTestRunner ` to implement
added binding for Boolean . FALSE with JETTY _ SHOW _ STACKTRACE annotated with @ WebServer . JETTY _ SHOW
added a check to return null if the object is an instance of JSType . OBJECT to ensure proper handling of object types in the code
replaced instances of ` sun . jvm . hotspot . types . OopField ` with ` sun . jvm . hotspot . types . OopField
updated ` JwkKeyListView ` and ` JsonWebKeyEndpoint ` to handle both ` RSAPublicKey ` , ` DSAPublicKey ` , and ` EC
[ gr - 26135 ] make sure spawnisolates and spawnisolates be writable when use - spawnisolates = true
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to eliminate unused dependencies and improve code clarity
added ` getOwnerAddress ( ) ` method to multiple actuator classes and updated the ` Validator ( ) ` method to include ` ByteString ` to
http : / / issues . apache . org / jira / browse / amq - 4892 - add a main ( ) method to run
update BinaryClient to handle cases where min and max values are " - inf " or " + inf " for range operations to ensure accurate data representation
added support for an empty index in the ProtobufAnnotationSerializer and updated the DependencyGraph . Edge . Builder to set it if it ' s defined to
[ java ] remove redundant contains call in asynccommandidset . remove ( ) .
added ` saveConflict ` method calls in ` FileDataStorageManager ` , ` FileDownloader ` , and ` FileUploader ` classes to ensure
updated generic type parameters in ExecutionContext and related classes to improve type safety and eliminate potential runtime errors
removed unnecessary imports of StrUtils in multiple filter factory classes to streamline code and improve maintainability by eliminating unnecessary dependencies
added Oracle and MySQL driver properties to enable information schema reporting in the database connection
added a handler parameter to the MockMethodInterceptor in SignedSupportingClassProxyFactory and suppressed deprecation warnings in PartialMockingWithConstructor
updated timestamp handling in FileChangedExclusiveReadLockStrategy to use System . currentTimeMillis ( ) instead of Date . getTime ( ) to improve accuracy of file
( chore ) camel - core : wrap class loader in context . getclassloader ( )
added UI thread execution in TerminalView and implemented buffer change handling in TerminalTextViewOverlay to improve UI responsiveness during UI updates
added a check to ensure the service PID is appended to the service PID if it does not contain a dot to ensure proper handling of
disable freeze action on tvm freeze v2 .
add support for insecure cipher suite in tlsconfig .
refactor code to simplify source and class path handling in JavadocTool . java and add a new test class T7091528 . java
updated comparisons from ` equals ` to ` equalsIgnoreCase ` for edge columns and modified GDF logic to ensure case - insensitive comparison for edge ID
added a cascade attribute to the OneToOne relationship in DefaultUserInfo . java to ensure that the relationship is marked as ALL for the DefaultAddress entity
refactor equals and hashCode methods in Message class to use Arrays . equals for array comparison to improve code readability and maintainability by using a standard
update character encoding from ASCII to Unicode in test assertions to ensure correct handling of Unicode characters in response data
removed the ` isKeySerializerTypeVariableSized ` method from ` RocksDBSerializedCompositeKeyBuilder ` to streamline the code by eliminating
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and updated ` SubjectDomainCombiner ` to use it to ensure proper handling of static
added null checks for recipes in RecipeHandlerBrewery and RecipeHandlerElvenTrade , and improved formatting in RecipeHandlerFloat
refactor parsing logic in Parser . java to correctly handle the last parse index to improve code readability and maintainability by centralizing parsing logic
added a ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` and ` UploadMediaDetailsContract ` , and modified error handling in
added a new file ` Issue596 . java ` and modified ` Status ` and ` HttpHandlerImpl . java ` to handle unsupported media types
updated bitwise operation from bitwise negation to long in NodeBitMap . java to ensure proper handling of long values in bitwise operations
refactor ImportLayoutStyle class for improved readability to enhance maintainability and facilitate future updates
refactor ConsoleUIService to replace gitBashConfigValue with useStdIn and introduce TERM _ PROGRAM and MINTTY environment
refactor ShadowAccountManagerTest to use a new TestAccountManagerCallback and streamline account management tests to improve code readability and maintainability by
refactor the handling of the enclosing type in AnalysisType to simplify the code and improve readability by directly accessing the enclosing type
rename methods in Pairs class from ` getProperty0 ` and ` getEntries ` to ` property0 ` and ` property1 ` and ` concat
removed the timeout parameter from the set method in PutAllCallable . java to simplify the code by eliminating unnecessary parameters
[ rocketmq - 107 ] fix npe in case of empty or not consumer .
[ java ] generate source identity for the source address when send to the driver .
added a new class ` TopTabAction ` that implements the ` Toolbar ` presenter to provide a customizable toolbar for the desktop application
camel - 14136 : camel - dynamic - router - start reactive executor for each recipient in match filter .
replaced TestCase with JUnit assertions and added JUnit annotations to the AggregateItemReaderTests class to improve test clarity and ensure compatibility with JUnit 4
added generic type parameter ` < T > ` to the ` Procedure ` constructor in ` AbstractObjectValueTypeMap . java ` to enhance type
updated imports and added wiki data edit count functionality in AchievementsActivity and updated networking URLs in NetworkingModule and OkHttpJson
added a validation check to ensure the length parameter is within Short . MAX _ VALUE to ensure that the argument does not exceed Short . MAX _ VALUE
do n ' t report accumulator for integer . max _ value when it be long . min _ value .
refactor multiple category dataset classes to improve code structure to enhance maintainability and readability of the project
updated error handling in ProvisionClusterRequest to include acceptable values for credential types to improve user feedback by providing more context on acceptable credential values
updated random number generation in TestVectorUtil to use a fixed range of 1 to improve randomness and maintain consistency in randomness
change the return type of the ` compareBy ` method from ` int ` to ` long ` and simplify the comparison logic for time comparisons
added SSL property handling in TestUtil and updated PGPropertyTest to set SSL property to allow dynamic configuration of SSL settings based on system properties
add ` ` safebrowsing ' ' to chrome preference and add test for potentially harmful window file
added null checks before cloning flight configuration in BaseMotorMount and RecoveryDevice classes to prevent potential NullPointerExceptions when cloning flight configurations
added a condition to check if transcoding is disabled in configuration specific to the renderer to ensure proper handling of transcoding configurations based on configuration settings
updated methods in DataTable and TableDiffer to handle empty lists gracefully to improve robustness by preventing null pointer exceptions when the list is empty
added a new constant ` CustomIgnoreTag ` and modified the ` iter ` to remove it if it starts with ` CustomIgnoreTag ` to ensure
jdbcaggregationrepository should throw optimisticlockingexception if there be an optimisticlockingexception .
fix : fix @ configurationproperties annotation for @ configurationproperties ( parent = ' ' parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and adjusted padding handling in onInsetsUpdated to enhance user experience by
deleted the ClusterNodeInfo . java file to the cluster implementation is no longer needed in the project
updated return statement formatting in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug print statements for the chosen cipher suite in ServerHandshaker . java to provide insights into cipher suite selection during the handshake process
refactor template handling in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to differentiate between single and multiple templates to improve code readability
added functionality to handle duplicate node labels in the ImportContainer implementation to improve error reporting and prevent unnecessary node imports
added a new file R2303044ListSelection . java that implements a user interface for selecting an item in a list to facilitate testing
[ java ] remove correlationid from publicationregistration and use hasclienttimeout instead of checkkeepalivetimeout .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when mWorkspace is null
added a new test method ` testCompoundPropertyTwice ` to verify the behavior of the compound property in StepScopePlaceholderIntegrationTests to ensure
added a new variable ` rowCounts ` and modified the method call to use it directly to improve code readability and maintainability by using a
added path URL formatting and improved parameter handling in SpringBootDocBuildTemplate . java to enhance code readability and maintainability by reducing redundancy in stream
fix some javadoc warning and some minor code cleanup .
updated ` DistBuildSlaveExecutor . java ` to replace ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and
updated RuntimeException to include formatted JSON strings to improve error reporting by providing clearer error messages
added a conditional check for DEBUG logging in the WidgetsModel class to ensure debug logging is only logged when DEBUG is enabled
refactor Console and Scanner classes for improved readability to enhance maintainability and clarity of the codebase
lucene - 10246 : fix bug in similaritybase . computenorm when discountoverlaps = false
refactor mailSender method calls to check for the presence of the " send " method in both SimpleMailMessage and MimeMessage classes to enhance
added new exit and quit methods with corresponding accessors in Global . java and removed the old quit method from ScriptingFunctions . java to streamline exit
refactored the retrieval of the LoanBrokerGateway bean in LoanBrokerSharkDetectorDemo . java to use a separate context variable to improve code
rename method names from ` getFirstUnverified ` and ` getFirstUnverified ` to ` findFirstUnverified ` and ` findLastUnverified ` to
[ vmware ] apply relevant cookie on vmware web service request
reformatted assertions in ResinAcegiAuthenticatorTests . java for consistency to improve code readability and maintainability
add 32 - bit precision to eckey . tobytearray ( )
updated the property key for disabledModList from " fml . disabledMods " to " fml . modStates " to ensure compatibility with the latest
refactor account selection logic into a separate method ` showAccountChooserDialog ( ) ` to improve code readability and maintainability by reducing duplication
improve error message when collect sink can not get back a stream
added error handling for unexpected empty simulation results in ValidatorContractController . java and a corresponding test in ValidatorContractContractTest . java to ensure that unexpected
added a null check for the root file before reading fields in TexturePackerFileProcessor . java to ensure proper handling of empty settings files and prevent
removed null checks for datasource and JNDI in PooledConnection . java to simplify the code and improve readability
updated TARGET _ MB , WINDOW , and WINDOW values from 10 , 000 , 000 to 1 , 000 , and
added null checks for currentConsole and err before writing to avoid potential NullPointerExceptions when currentConsole is null
set the credential refresh delay to 100 milliseconds in KinesisConfigUtil . java to improve user experience by allowing more time for credential refreshes
replaced direct dialog creation with a new ` showInfoAlert ` method for media detail and info dialogs to improve code readability and maintainability by
modified the ` test ` method to include a ` pack ` parameter and added a package argument to enhance functionality by allowing the test to run in a
updated Java version in test cases from 1.7 . 0 _ 60 to 0.8 . 0 _ 31 and modified matchers in test cases to ensure compatibility with
do n ' t resolve dependency that do n ' t provide a pluginbase / shared dependency
added a HashSet to manage ZipFileInputStream instances and updated the releaseInflater method to ensure proper resource management and prevent potential memory leaks
renamed the BarcodeFormat constant from DATAMATRIX to DATA _ MATRIX across multiple files to improve clarity and consistency in the codebase
added logic to run active and idle methods based on key ranges to ensure proper handling of idle state during source execution
corrected the method name from ` getCurrentyActiveConnections ` to ` getCurrentActiveConnections ` in ` BlobServer . java ` and ` BlobServer
replaced ` findAny ( ) ` with ` findFirst ( ) ` and added a new ` getAnnotations ( Class < T > type ) ` method
added support for " ppc64 " and " ppc64le " architecture in Bits . java and ByteArrayAccess . java to enable support for additional architecture
added a link to the github for RoboMonitoringInstrumentation in the RuntimeException message to provide more context about the activity resolution issue
change transaction timeouts from MINUTES to Long . MAX _ VALUE in waitWithDeadline method to allow for more time for transaction rollbacks and
replaced instances of ` new Date ( ) ` with ` Instant ` and ` ZoneId ` in ` DateUtilTest . java ` to improve date
refactor BytesRef class for improved performance to enhance performance and maintainability of the code
added a toast message to indicate that the YouTube Player does not work on Lollipop yet to improve user feedback by informing users about the
added error handling for unterminated dollar and string literals in SQL parsing to improve error reporting for invalid SQL syntax errors
added a null check for mVibrator before verifying its presence to prevent potential null pointer exceptions when mVibrator is not available
updated table parameters and modified background color assignments in DotRenderer . java to improve clarity and correctness of color assignments for primary key columns
added a method ` isEncodedPar ` to check for encoded parameters in ` HiveConf ` and modified ` SetProcessor ` to decode URL encoding if
pdfbox - 4892 : catch stringindexoutofboundsexception in pdfparser
refactor X509Certificate class to improve code readability to enhance maintainability and facilitate future updates
fix wavefront default uri implementation ( # 3903 )
added NetworkedCacheableImageView and modified image loading logic in TimeLineCursorAdapter and MainActivity to improve image loading functionality and enhance compatibility with network
removed the ` target ` parameter from the ` ofFloat ` method in multiple classes to simplify the method signature and improve code readability
updated versioning of controllers and build scripts in DependencyBank . java and BuildScriptHelper . java to ensure compatibility with the latest controllers and controllers versions
refactored LaunchedURLClassLoader to improve code structure to enhance maintainability and readability of the code
added imports and modified the query method in DataSourceHealthIndicator . java to utilize DataAccessUtils for handling required results to ensure proper handling of
add no - cache header to layout tag to prevent cache
added Locale . ENGLISH to the warning message formatting in ZkController . java to ensure consistent localization of warning messages across different locales
refactor SolrQueryParser constructor to accept an Analyzer parameter instead of a QParser object to enhance flexibility by allowing custom analyzer implementation
updated copyright year from " Copywrite " to " Copyright " across multiple Java files and added licensing information to ensure compatibility with the latest GNU
removed an unnecessary semicolon from MainTest . java to improve code readability and maintainability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added support for VoidColumnVector in VectorizedBatchUtil to ensure proper handling of VoidColumnVector instances
replaced templateName with req . getName ( ) in StatementGenerator . java to ensure the correct request name is used for the statement generation
removed the isTypeMatch method from AbstractConfig . java and added a new configuration in compositeConfiguration . addConfiguration ( 3 , config ) to simplify
[ java ] add a method to offer a publication with a correlationid and a timestamp to the sessiondecorator .
rename ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` methods to ` trustAll `
added a new annotation ` NoBootstrap ` and modified ` BootstrapInserter ` to check for its presence before building a bootstrap static block to ensure bootstrap
hbase - 25274 tabledescriptorchecker should use tabledescriptorbuilder . max _ filesize and tabledescriptor . memstore _ flushsize instead
updated variable names from ` maxCommits ` to ` requestedCommits ` for clarity to improve code readability and maintainability by using a consistent
added InvocationTargetException to method signatures in bug6794831 . java to improve error handling by providing more specific exception types
added BUILD _ ID constant and refactored metadata handling in CachingBuildEngine and CachingBuildEngineTest to improve build metadata management and
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to streamline code by eliminating unused utility imports
removed duplicate call to markAsDone in HttpProtocol . java to streamline code by eliminating redundancy
added TezConfiguration import and a static default configuration in TezConfigurationFactory . java to enable configuration copying for Tez components
added null check for keyPurposes in TimestampedSigner . java to avoid potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a forget method to OpenALSound and modified the stop logic in OpenALAudio . java to ensure proper cleanup of recent sounds and prevent potential
clear position discontinuity only once in simplebaseplayer . invalidatestateandotheroperation ( )
added decimal decimal places for various number units in NumberAxis . java to improve precision in number representation representation
refactored the creation of TargetGraphAndBuildTargets to use a builder pattern instead of builder method calls to improve code readability and maintainability
removed the ` IndexFileNameFilter ` class and simplified the file checks in ` IndexFileDeleter . java ` to streamline the code by eliminating
add a new configuration option to disable the texture stitcher from the dummy texture .
added a compression level parameter to several constructors and methods in ApkBuilderStep , SignedJarBuilder , and SignedJarBuilder to enable customizable
added a new test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify the inclusion of static fields in a class file
added support for BYTES data type in MetricFieldSpec , Schema , SingleValueIterator , and SingleValueSet classes to support handling of BYTES
updated formatting of error messages to include a newline character to improve readability and maintain consistency in formatting
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and ` KucoinDe
added cache management and test methods to SpringDataJPAJoinFetchFetchPaginationTest and ForumService classes to enhance caching functionality and ensure proper cache management
[ mary ] add locale support to pronunciation model .
updated SimpleHttp and TestHttpPlugin to handle null POST requests and added a new test for null post functionality to improve handling of null POST requests and
added a dispatcher in ClientSideSlb and tested its shutdown method in ClientSideSlbTest to ensure proper resource management and prevent potential memory leak
modified the vertical vertical positioning logic in TextureRegion . java based on the flipY flag to ensure correct vertical positioning based on the flip direction
throw invalidconfigurationexception instead of illegalargumentexception if property be not map
added a null check for the contextPath variable and set it to " NA " if it is null to ensure a default context path is used when
( chore ) camel - jbrules - jbrules - jbrules - jbrules - jbrules - jbrules
added handling for the B _ TREE _ MAP _ ROOT _ HEADER constant in BTreeMap . java and SerializationHeader . java to ensure proper
added support for the ` precompiled _ header ` parameter in ` AppleDescriptions ` and ` AbstractCxxSourceRuleFactory ` classes to ensure
added a new ` AccWeakReference ` class and replaced ` WeakReference ` with a custom ` update ` method to utilize the ` update ` method
modified access modifiers of ` findNextIndex ` and ` findNextIndex ` methods in ` ObjectMap ` , ` OrderedMap ` , and
changed the value of isDirect from true to false in VertexBufferObject . java to ensure correct behavior of the isDirect property
remove duplicate code in maryclient . getaudioeffecthelptexts ( )
changed the return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to provide access to the coordinates
pdfbox - 5764 : use buffer . limit ( ) instead of input . capacity ( ) in randomaccessreadbuffer
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is null
refactor CellLayout to use a conditional assignment for border spacing based on container type to improve code readability and maintainability by centralizing border spacing
refactor numeric parsing to use a customizable ValueNumeric class to improve code readability and maintainability by centralizing numeric conversion logic
updated the conditional check in FormAuthenticator to return deferred authentication to ensure that deferred authentication is not returned when the response is not deferred
updated argument checks in StartArgs . java from " -- module - start - ini = " to " -- add - to - start " to
added default partition value handling in DynamicPartitionFileRecordWriterContainer to ensure dynamic partition values are set correctly based on configuration settings
[ hotfix ] [ runtime ] add null check for streamoperatorfactory and streamnode
updated return statements in DefaultArtifact . java to include classifier information to improve clarity of artifact ID and type representation
camel - 14136 : kafka consumer should use consumer . subscribe ( ) with the consumer ' s current consumer instance to ensure that the kafka consumer
improve error message when no classdeffounderror be find
rename gmail _ notifications _ enabled to enable _ gmail _ notifications
doc : [ cryptokey ] fix typo in doc of cryptokey .
added JUnit ' s Isolated annotation to LumberjackMultiThreadTest and adjusted mock message count based on available processors to improve test reliability
do n ' t use player . getscoreboard ( ) if the player be not dead .
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
updated the description of the API key and secret key parameter in UpdateUserCmd . java to clarify that the API key and secret key must be specified
replaced switch - case statements with if statements for type checks in multiple classes to simplify code and improve readability by using direct equality checks
refactor AbstractMetaDataExportMojo class to improve code organization to enhance maintainability and readability of the code
added handling for SQL integrity constraint violations in Hive to provide clearer error messages when dropping tables related to materialized views
corrected the casing of the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency in property naming conventions
added a new deprecated class RoboExecutorService in the org . robolectric . util . concurrent package to indicate that the RoboExecutorService is no longer needed
added conditional logic to check if the group is a root group before adding subgroups in the group tree to enhance user experience by allowing subgroups to
updated method names and conditions in ` buildServiceNameAndSpanName ` and ` buildServiceAndSpanName ` to improve clarity and consistency in naming convention
8014258 : gc / g1 / testdynamicnumberofgcthreads . java fail with assert ( output . shouldhaveexitvalue
changed return types of ` getHostFlavorMap ( ) ` and ` getAllPossibleHostFlavors ( ) ` methods from ` ImmutableFlavor ` to `
updated CreateTable and CreateTableDeParser to handle create operations and params correctly to enhance SQL creation flexibility by allowing dynamic table creation options
set the alpha value of the background drawable to 64 in ChatViewerFragment . java to ensure the chat background is consistent with other chat backgrounds
test : migrate ctiteratortest to junit 5 ( # 4563 )
added token . clear ( ) method calls in multiple tokenizer classes to ensure proper clearing of tokens and improve code clarity
[ net . sourceforge . pmd . test ] do n ' t crash on blockstatement
updated StateMachineConfiguration and StateMachineFactoryConfiguration classes to use generic type parameters and added a new StateMachineConfigurerAdapter class to improve type safety and
simonstewart : do n ' t try to find a locator that start with ` ` link = ' '
updated StringConverter to handle both Double and BigDecimal values correctly and adjusted format fractions accordingly to ensure correct formatting of numeric values and improve test coverage for
remove dependency on unitofwork in aggregatelifecycle . getcurrentscope ( )
updated touchable insets settings to use TOUCHABLE _ INSETS _ REGION instead of TOUCHABLE _ INSETS _
removed unnecessary null check for the ' ~ ' character in FencedCodeBlockParser . java to simplify code logic and improve readability
added support for configurable socket timeout in the Driver and ConnectionFactory classes to allow configurable timeout settings for socket reading operations
added a sleep delay in ElementAttributeTest . java to handle InterruptedException to ensure proper handling of interrupted exceptions during test execution
updated BufferedReader initialization to use UTF - 8 encoding to ensure proper handling of character encoding during input stream reading
refactor List class implementation to improve code readability and maintainability
added constructors to AsyncFileImpl for handling file paths and updated error handling in the context to improve error handling and provide a clearer test case
added @ API annotation to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are immutable and should not be used
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 423 : return an empty
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadList
updated the class file version constants in ConstantPoolTagTests . java to use the latest available Java versions instead of the current version to simplify version checks and
pmd : handle error and warning message with - xlint : instead of - serialVersionUID
add a method to remove all header from the asynchttpclient
replaced Vector with ArrayList and updated related method calls to use get ( ) instead of elementAt ( ) to improve performance and readability of the code
updated the DEFAULT _ GRID _ COLUMN value from 4.0 f to 3 f in AppPreferencesImpl . java to adjust the grid column for better
added a condition to check if ` forViewCreation ` is false when determining if the table is defined and not for view creation to ensure that the
updated regex pattern for date matching and refactored assertions in TestHS2HttpServer . java to improve readability and maintainability of the code
added try - catch block around object creation in GraphPrinter . java to handle potential Throwable during object conversion
simonstewart : fix the firefox driver to work with the new ie driver
fix a bug in the byteblockpool . getbyteblock ( ) method , and add a test that verify that the pool do n ' t
replace static variable with instance variables for firstEncoder and secondEncoder in InteractionValueEncoder . java and update string formatting to use Locale . ENGLISH to
added exception handling to the TcpTransport class to ensure that unexpected exceptions are handled gracefully to improve error management and prevent potential memory leaks
add @ suppresswarnings ( ` ` serial ' ' ) to avoid eclipse warning .
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver and removed the SourcePathResolver parameter to simplify the class
use ` ` discard change ' ' and ` ` return to jabref ' ' instead of ` ` confirm change ' '
updated OAuth20DeviceCodeResponseTypeRequestValidator to validate response types and improved error logging to enhance authorization checks and provide clearer error messages for better
added a call to the chk ( index , 1 ) method in DrillBuf . java to ensure that the chk ( index , 1 ) method
added support for custom input format classes in the TableMapReduceUtil class to allow more flexible input format handling in job initialization
removed the redundant call to append in AbstractJRubyMojo . java to streamline code by eliminating redundancy
sulong : throw polyglot exception if language be not find .
added deprecation warning and modified reserve commit duration handling in ReplicationHandler . java to ensure compatibility with Solr versions prior to 7.0 and ensure that
renamed cacheVariableName to cacheForeignKey and updated related variables in DIHCacheSupport . java to improve clarity and consistency in naming conventions
replaced ` long [ ] handles ` with ` Object [ ] keyBytes ` in ` ECKeyPairGenerator . java ` to simplify the key generation process by
[ hotfix ] [ runtime ] suspend job in cancelling state in restarting
replaced the singleton instance of RotationTouchHelper with a direct instantiation to improve code clarity and maintainability by using a single instance of RotationTouch
refactor stream processing in UniFiControllerCache to use flatMap for better readability and efficiency to improve code readability and reduce boilerplate in
updated method parameters and variable names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency
do n ' t add offer to the list if it be already in the list with the same offer id
use constant instead of hardcoded value
added type checking for mock instances in MockitoMethodInvocationControl and updated mock handling in MockitoClassUserTest and SystemClassUserCases to improve type safety
updated NotLoadedException to include PartialDatabaseObject and replaced DatabaseObject with PartialDatabaseObject in multiple classes to ensure proper exception handling and improve
removed the import of DisplayUtils and added an extra variable to the intent in FileDisplayActivity to streamline code by removing unnecessary dependency on DisplayUtils
added error handling and file closure checks in StoreDirect and StoreWAL classes to ensure proper resource management and prevent memory leaks during file renaming
added a task snapshot retrieval in AbsSwipeUpHandler . java and modified the stopSwipePipToHome method call in SystemUiProxy . java
added a hidden flag and its getter method to CommandArgumentDefinition and updated LiquibaseCommandLine to utilize it to enhance command argument handling by allowing
update remote address in LoggingKafkaPluginTest from 8090 to 9092 to ensure that the test connects to the correct remote address for
[ geos - 6892 ] add bean method for styleinfo and geoserverdatadirectory
added permission checks for launcher activities in InstallShortcutReceiver and modified the completeAddShortcut method to include PendingRequestArgs to ensure malicious intents are
added ` getId ( ) ` and ` setId ( id ) ` methods to ` TiledMapTile ` , ` AnimatedTiledMapTile
refactor Manager class to improve code organization to enhance maintainability and readability of the code
updated JDBC connection URL to include version parameter and modified session builder method to use V _ 0 _ 13 to ensure compatibility with the latest version of the
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance schema filtering capabilities in the generate change log generation process
replaced ` putIfAbsent ` with ` put ` in ` registryCache ` to ensure the correct retrieval of the registry from the cache
[ hotfix ] [ runtime ] make plannerbenchmarkrunner exception logger configurable
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to allow subclassing of the
updated return statements in Tools . java and FileSelectorFragment . java to include leading and trailing spaces to ensure consistent path formatting and improve code readability
added new test cases for handling large response content in FastCGIProxyServletTest . java to enhance test coverage for HTTP GET requests with asynchronous responses
added a new service call to start ReadInteractionsService to enable interactions for the read interactions service
added a conditional check for ` lintClassfile ` before logging warnings for missing methods in ` ClassReader . java ` to ensure warnings are only
added configuration for the mail server port in Email . java to allow dynamic configuration of the smtp server port
added retry policies for SSLFactory reloading and improved error handling in TlsUtils . java to ensure SSLFactory re - reloads with exponential backoff
updated date format from " mm " to " mm : ss ' Z " in ObjectMapperProvider . java to ensure proper time zone formatting for better
updated error message in SpyingOnRealObjectsTest to indicate that a private class is not mocked due to mocking a private class to improve
added a method to check if the line ends with a line tag and updated related logic in InlineBoxing and LineBox classes to improve line ending
updated filePathString assignment to handle null parent cases gracefully to prevent potential NullPointerException when filePath . getParent ( ) is null
added import statement for DocCollection in TopicStream . java to utilize DocCollection functionality in the TopicStream class
refactor NinjaServletContextTest to use a dedicated method for creating ServletInputStream and add a new test for retrieving the Windows1250 parameter in
added properties for management . endpoints . web . exposure . include in AbstractCasEndpointTests . java to enable dynamic configuration of web exposure settings for better
added a check to ensure the current graph is a dynamic graph before proceeding to prevent runtime errors when the current graph is not a dynamic graph
add @ eagerinitfactory to allow @ scopeone to be use with @ scopeone .
add support for suppress exception in jsonpath
removed duplicate call to ControllerLeaderLocator . create in HelixServerStarter . java to streamline the startup process by eliminating redundancy
updated command - line usage messages in CLHSDB and HSDB classes from " java " to " help " to align command usage with the
refactored the configureChunkProvider method in FaultTolerantStepFactoryBean and removed redundant listener registrations in SimpleStepFactoryBean to
[ beam - 11346 ] remove deprecate write . java and move it to writesinkitcase . java
replaced direct calls to ` getAccessibilityManager ( ) ` with direct access to ` accessibilityManagerInstance ( ) ` to improve code clarity and maintainability
register the flutter usage statistic in the analytics ( # 1078 )
replaced ` SourcePathResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from multiple classes to simplify class hierarchy by removing unnecessary
refactor EnumDataTypeHelper initialization to use PostgreSQLEnumDataTypeHelper and create a new PostgreSQLEnumDataTypeHelper class to improve
updated the assertion in LogFileTests to use File . separatorChar for the log path to ensure consistent file path formatting across different operating systems
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency and clarity
added a check for index tables in HiveMetaStoreClient and handled UnsupportedOperationException to improve error handling for index table operations
added a condition to check visibility before updating disabled flags in RecentsView to ensure proper handling of scrolling behavior when the visibility is not visible
added a specific highlighter for non - Windows platforms in the Repl class to enhance user experience by providing a specific syntax highlighter for non -
[ java ] add optional local variable support to bug reporting .
updated file path retrieval method from ` toUri ( ) . getRawPath ( ) ` to ` toString ( ) ` in ` HadoopPinot
removed duplicate call to removeCaptureListener in SelectBox . java to improve code readability and maintainability
changed the value of the _ metaDataComplete variable from true to false to reset the metadata state to false to ensure that the metadata is not marked as
refactor ` removeTaskTarget ` method to use a thread pool and modify bitmap handling logic in ` ThumbnailSearchResultView ` and ` WorkE
added support for environment variables in JsBundleGenrule and corresponding tests in JsBundleGenruleDescription and JsBundleGenruleDescriptionTest
updated type casting logic in mmm Lower . java and added a new class T6500701 . java with a test method in ppp T
added tests to ensure newlines are preserved in comments and Javadoc files to ensure correct handling of newline characters in import statements and javadocs
added a hubMode field to AbstractLiquibaseMojo and defined it in AbstractLiquibaseMojo to enable dynamic configuration of Liquibase Hub
removed redundant null check for processedItem in JsrChunkProcessor . java to simplify the code and improve readability
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure that the link
replaced the manual retrieval of the " setIndexerThreadPool " method with a reflection - based approach to improve code readability and maintainability by using a
removed the port number suffix from the SMS address in GameCanvasImplementation . java to simplify the code by removing unnecessary port specification
refactor MapJobExecutionDao to use a dedicated copy method for job executions to improve code readability and maintainability by centralizing job execution handling
added a new file ` DownloadTest . java ` to implement a download test for the application to verify the functionality of downloading images in the application
updated language handling in format - related classes to normalize language codes to ensure consistent language normalization across the codebase
updated error handling in GenericUDFRound . java to use UDFArgumentTypeException instead of UDFArgumentException to provide clearer context for
added null check for selectedVersion before processing versions in ManageDependencies . java to avoid potential NullPointerException when selectedVersion is null
added multiple matchers for various URL URLs in SecurityConfig . java to enhance security by matching specific URLs
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
do n ' t generate bean definition for java . lang . object if they have the same name .
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to potential issues with redirection handling
changed ` final static ` to ` static ` in ` OpenWebNetEnergyHandler ` and ` OpenWebNetThermoregulationHandler `
remove check for status . open , status . stop and status . timeout in aprendpoint
deleted the SunToolkitSubclass . java file which contained a method for flushing pending events in the AWT toolkit to the class is no longer needed
refactored translation logic in DefaultRenderableSorter to use a new method for translation handling to improve code readability and maintainability by centralizing translation
added a new test method for registering wrapper types before primitive types in TypeHandlerRegistryTest . java to address issue # 165 related to the
pdfbox - 4892 : add support for pdlab color space to convert to rgb image .
replaced hardcoded URL constants with constants from BuildConfig to improve maintainability and readability of the codebase
camel - 14156 : camel - health - add main - http - main to run the health check on the server .
fix a crash with the thorn chakram cause by a nullpointerexception
added a test for altering a table with indexes extending primary keys in AlterTableWithViewsIT . java to ensure that the primary key functionality works
updated offset handling in FileFloatSource and added conditional assertions in TestFunctionQuery to improve document retrieval efficiency and ensure random selection of deleted documents
remove ID field from MongoDB fields in MongoRecordReader . java to simplify the code by removing unnecessary fields
added disconnect methods to YeelightHandlerBase and DeviceBase classes , and modified connection handling in WifiConnection to ensure proper resource management and ensure
added AUTO _ INCREMENT syntax handling in Parser . java and created a new test table in TestCompatibility . java to ensure proper handling of
add a new constant ` ` sync _ period ' ' to the sharedindexinformerfactory to allow the custom informer to be reuse .
server : fix npe when update template detail in templatemanagerimpl . createprivatetemplate
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage for improved readability to enhance code clarity and maintainability by
removed deprecated constants from LauncherSettings . java and removed deprecated constants from LauncherProvider . java to clean up code and improve maintainability
jbrules - 2421 : move the data file into the examples / broker / rules
added a new variable ` legendTop ` and updated calculations for ` mOffsetTop ` and ` mOffsetBottom ` in ` PieChart . java
skip shaders that do n ' t use worldtransforms . det ( )
add a new file MaryScriptCreator . java that implements a script creation process using BufferedReader to facilitate the creation of files using the MaryScriptCreator class
[ java ] add restlistener . remote . source . host attribute to the flowfile in listenhttpservlet . java .
refactor compaction logger closing logic and file deletion in LevelCompactionTsFileManagement . java to improve resource management and ensure compaction logs are
updated attribute references from " xlink : href " to " href " in ComponentDescription . java to ensure consistency and correctness in URL handling
camel - 16266 - camel - aws2 - s3 : add timeout checker to s3 producer
hbase - 24413 add regionserver log to regionassignmentmanager when cluster be shut down
added null check for span before logging in Slf4jSpanLogger and DefaultTracer to improve code robustness and prevent potential NullPointerExceptions
trim whitespace from the active option before adding it to the configuration to ensure that the option is properly processed by trimming options
added depth effect preference handling in DepthController to enable dynamic depth adjustment based on user preferences
updated the assertion in OverseerTest to check the success count of the overseer to ensure the correctness of the overseer ' s success
removed the method ` getKernelVersion ( ) ` and simplified the return value of ` xattrChecked ` from ` LinuxFileStore . java `
refactor ExecConstants class to improve code readability to enhance maintainability and facilitate future updates
removed the import of ScreenRecordRule and its annotation from ThemeIconsTest . java to streamline the code and eliminate unused imports
added a new method ` setScanAttributeForPaging ` to ` ScanUtil ` and invoked it in ` TableSnapshotResultIterator ` to enable paging
added a check to ensure lowRange is less than or equal to 100000000000L before setting it in Request and RequestV2 classes to ensure that
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and adjusted cache size estimation
[ flink - 24124 ] [ runtime ] fix the bug in listhosts api ( listhosts )
updated Content - Type header from " application / json " to MediaType . APPLICATION _ JSON _ UTF8 _ VALUE and added UTF - 8 character encoding
replaced a conditional check with a direct removal of a file system from the filesystems map to simplify the removal process and improve code readability
replaced ` Object ` with ` String ` for JSON serialization in ` HttpRequestBuilder ` to simplify the code and improve readability by using a more de
updated polling timeout values in SoftAutoCommitTest . java to improve test reliability by adjusting the wait time for the polling mechanism
[ selenide ] fix flaky test : event listener be not call in selenideloggertest
refactor multiple Dial - related classes to improve consistency and organization to enhance maintainability and readability of the dial interface
updated logging error messages in SyncQueue . java for consistency to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest Ryuk versions
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a new
do n ' t map legacyxmllayout . jar if it do n ' t exist
[ hotfix ] [ yarn ] remove unused yarnclient from yarnitcase
add no - data include stats for all map in localmapstatsprovider
deleted the AllTests . java file to the test suite is no longer needed in the current test suite
added Unicode character constants and handling for non - breaking hyphens and zero - width spaces in AbstractWordConverter to enhance code readability and maintainability
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory starve behavior on large stack trace invocation
replaced direct call to getResultMappings ( ) with a call to getResultMappingsForRowKey ( ) to improve code readability and maintainability by using
added a new boolean variable ` eventHandled ` initialized to true in ` UIText . java ` to mark the event as handled for better event
deleted the Controller annotation and renamed Weldby class to WeldModule to improve clarity and consistency in naming conventions
( chore ) camel - regex : do not monitor capture group in empty check
added a protected field for liquibaseProLicenseKey and removed its usage to streamline license key retrieval and improve logging clarity
refactor methods in RolapCube to use a dedicated method setMeasuresHierarchyMemberReader to improve code readability and maintainability by centralizing
make - g an alias for - g an alias for - g
mondrian : fix typo find by codespell on fossies . org
added support for handling ` SourcePath ` paths in various Kotlin - related classes to enhance the flexibility and maintainability of the Kotlin
added aliases for character scripts in Character . java and refactored main method in CheckScript . java to improve code readability and maintainability by
updated equality checks in ExecutionCommand and added stringToExecutionCommand method in StageUtils to improve code readability and enhance utility functions for JSON conversion
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to the SystemScope class to provide a string representation of the SystemScope object
updated CSSParser to handle both numeric and percentage types in the cmyk ( ) function to improve handling of percentage values and provide clearer error
added tests for local index behavior in LocalIndexIT . java and implemented reverse scan functionality in LocalIndexReverseScan . java to ensure correct behavior of
updated imports and context retrieval in BaseAndroidTestCase . java , modified assertions in BackupHelperTest . java , and modified assertions in LanguageHelperTest
updated toast messages in multiple activities to include additional context for better user feedback to enhance user experience by providing more context in toast messages
simplified the conditions in ` RendererUtilities ` and updated test cases in ` RendererUtilitiesTests ` to improve code readability and maintainability by removing unnecessary
refactor KrakenStreamingAdapters to use ArrayNode instances instead of JsonNode iterators to improve type safety and simplify data handling for ask and bid
added error handling for database column addition in FileContentProvider . java to improve robustness by catching potential SQLiteException during database upgrade
removed unnecessary System . err . println statement from AsyncServletIOTest . java to clean up the code and improve readability
added a hash table load factor and refactored online data size calculations in ConvertJoinMapJoin . java to improve data size estimation
updated the ` buildView ` method to accept a ` Context ` parameter and added functionality to set background resources based on theme attributes to enhance user experience
added an ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests `
vpc : set vpcid to null to avoid npe
[ flink - 10955 ] [ test ] disable flinksavepointtest on version 1.11
updated field modifiers from private to private in multiple classes to ensure consistency and correctness in access modifiers
modified the loop condition to check if the index does not exceed the size of the actions list to ensure that the loop does not exceed the size of
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex exchange structure
[ scb - 118 ] add relationship virtual metadata test for parent and child orgunit
added null check for spatial before casting to Geometry in LodControl . java to avoid potential NullPointerExceptions when spatial is null
updated ConditionalTokenFilter and FixedShingleFilter to set lastTokenFiltered to true and added additional filter classes to improve token filtering logic and enhance test
make unsafestorenode . getstateafter ( ) return the state after the storenode .
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure
added an assertion to verify that the casEventRepository ' s load method returns an empty list to ensure that the event repository is loaded correctly when no
removed the attributeTemplateName , attributeLine , and attributeCol parameters from AuthenticationAttrProcessor . java to streamline the attribute processing by eliminating unnecessary parameters
added null key validation in MacOSXPreferences and created a new RemoveNullKeyCheck class to ensure the key is not null to prevent NullPointerException
added a method to set the typeface in CodenameOneTextPaint that throws a RuntimeException to ensure that the method does not attempt to set
implement the ` open ` method in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` PinotFS ` classes to
[ java ] remove deprecate method from webdriverrunner . fail ( string message )
simplified the conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
refactor ` DefaultResultSetHandler ` to remove the ` ResultObject ` class and introduce ` useConstructorMappings ` flag to simplify the code and improve
updated SQL string format in CreateTableGeneratorTest . java to include quotes around the table name to ensure compatibility with the expected SQL format
added support for filtering mode in VectorizationContext to ensure proper handling of filter expressions when the mode is FILTER
added generic type parameter ` MoveSelectorConfig ` to ` inheritConfig ` method to improve type safety and clarity in the code
replaced the instantiation of ` ReorganizeTableStatement ` with a direct reference to ` modifyDataTypeStatement ` to improve code clarity and maintainability by
updated cluster property references to use constants from IoTDBStartCheck for consistency to improve code readability and maintainability by centralizing cluster name property
do n ' t swallow exception when connect to a peer that do n ' t exist
added style handling for multiple style strings in Nano . java to enhance flexibility in styling based on string representations
update fixer to use adventurennetconverter instead of fixer . fixup
updated the return message in NoToStringOnStringType . java from " Use ` String ` " to " No # toString ( ) on String "
increased the Xmx size from 64MB to 32MB in TestThreadFailure . java to improve memory efficiency for better performance
replaced ` int ` with ` FailureContext ` in ` retryFailed ` method and added ` DataProviderRetryAnalyzer ` and ` DataProviderRetryTest
updated token retrieval from ` 0 ` to ` bandwidth ` in ` BucketStateIEEE754 . java ` to ensure correct retrieval of the correct
alexeibarantsev : implement selectpopup ( ) , deselectpopup ( ) , capturenetworktraffic ( ) , and remove the
refactor ` doPrintEntry ` method to remove the ` printWarning ` parameter and streamline the ` doPrintEntry ` method to simplify the
removed unnecessary whitespace in TaskAsyncCallTest . java to improve code readability and maintain consistency
added checks for dialog and frame properties in Dialog and Frame classes to ensure that dialog and frame components are opaque and not decorated to avoid illegal state exceptions
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to enforce immutability of the ` state
added support for standalone Redis configuration in RedisObjectFactory to improve configuration management for Redis sentinel connections
add chatroom . lastseendelayedmessage to the chatroom jabber implementation .
replaced instances of ` Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to simplify the notification process
refactor file sharing functionality to use OperationsService instead of CreateShareOperation to improve code maintainability and reduce duplication in sharing operations
no effective change - add @ inject to fieldpropertyinject .
refactor loop boundaries in ClassicPlotManager to use a variable for the start build height to improve code readability and maintainability by using a consistent
added a check to return a NullPointerException if the exception is not null to ensure proper handling of NullPointerExceptions in the code
tiff : add support for read interop subdirectory in tiff .
added a new constant ENABLED _ LS and modified executor assignment logic in VersionedTargetGraphCache to handle the ENABLED _ LS mode
added a check for video format in conditional statements to ensure proper handling of video formats in the parser
refactor AutoMlClient to improve code readability to enhance maintainability and facilitate future updates
add load ( ) to lwjglnativesloader to set the correct library path
added support for an ' escape ' parameter in the CSVStrategy to enhance flexibility in handling escape characters in the application
updated grant type validation and test cases in ClientRegistrations and ClientRegistrationsTests to ensure only supported grant types are returned to improve error handling and
updated exception messages in Throwable . java and SuppressedExceptions . java to include context in error messages to improve error reporting and provide more context
added a SQL query to retrieve counts from a table and updated the iterator initialization to use null as the first parameter to ensure that the query returns the
added functionality to retrieve and assert the RSquare value in the RegressionEvaluator and StreamExpressionTest classes to ensure that the RSquare value corresponds to
added handling for request header names in ThreadContextMDCServletFilter to ensure proper context attributes are added for request headers
replaced casting of ` work ` with direct usage of ` mapWork ` in SparkPlanGenerator . java to improve type safety and readability by
refactor image retrieval methods in PdfJndiReport . java and PdfSessionInformationsReport . java to use a caching mechanism to improve performance
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer handling in JwtIssuerAuthenticationManagerResolverTests to
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
updated LLVMInteropType and CxxMethodsTest to include a boolean parameter for method handling to enhance functionality to support method - based access
removed duplicate sleep calls in AbstractBasicMockingIntegrationTest . java to improve code readability and maintainability
added a new file ` KernCrash . java ` that implements a simple AWT font with different font attributes to demonstrate the use of different font
added a fail ( ) method call to LinkedHashTreeMapTest . java to ensure that the test fails gracefully when the test fails
added a method to retrieve network interface addresses with a prefix in NetUtil . java to improve IP address retrieval functionality for better network management
[ hotfix ] [ runtime ] cancel housekeeper task after shutdown .
updated the method call from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to ensure
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
added a new test class ` Issue247Test ` to validate the functionality of ` createTreeMap ` and ` getTreeMap ` methods to
changed the type of the results set from Set < CategoryItem > to Set < String > and modified the doInBackground method to accept ArrayList <
added logic to check for today ' s leap year and validate max age in ValidatorTest . java to ensure that users do not exceed the maximum age
added error handling logic using GrblLookups for alarm and error codes in GrblController . java to improve user experience by providing more informative
modify the workspace scroll format return logic to return the home button label if no screens are available to improve user experience by providing a clearer feedback when
removed the ' count ' parameter from the getTrades methods in Bittrex and BittrexMarketDataService classes to simplify the method signature and
updated methods in ConsoleReader to strip ANSI characters and modified index calculation in MemoryHistory to ensure proper handling of ANSI input and improve
removed the suffix " . jdk " from the jdkPath variable in JavaBuild . java to simplify the file path construction for better readability and maintain
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple classes to improve code readability
updated JFCModel constructors to accept a Consumer < String > logger parameter to enhance logging capabilities by allowing users to log warnings during initialization
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is non - negative to prevent runtime errors
added methods to create and drop views in TestUtil . java and created a test for view privileges in DatabaseMetaDataTest . java to enhance functionality
added support for predicting stable floats and stable doubles in NaNTest . java to ensure tests are only executed for stable floats and stable double
added a new class DesktopTaskbarUIController and modified TaskbarManager to check for the presence of the PC system to enable the DesktopTaskbar
added progress tracking functionality and task counting functionality to ModItemAdapter to improve user experience by tracking task counts and updating install button state
refactor file handling methods in Files . java to improve code readability and maintainability
refactor methods and variables in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to use Collection instead of Set to improve code clarity and
removed the @ FunctionalInterface annotation from the DomainAwareServicesManager interface and its implementation in the ChainingServicesManager class to simplify the interface and
log4j2 - 1389 modpackloader should use mod : instead of modfile /
chore : update gapic - generator - java version to 2.1 . 0 ( # 433 )
added two overloaded grow ( ) methods to the Cell class to enable dynamic manipulation of cell expansion and fill properties
refactor DefaultInputHandler to use generics for bindings and simplify key stroke parsing logic to improve code readability and maintainability by using generics
add try - catch block so we do n ' t crash the test .
replaced long arrays with byte arrays and added a memory fail count check in MetricsMemoryTester . java to improve memory testing efficiency and handle memory failures more
deleted the JobParametersPrototype . java file to the class is no longer needed for the current implementation
added a securityEnabled field to the MappingsTable class and updated related classes to support security configuration to enhance security handling in the data connection service
rename AppleLibrary to APPLE _ EXPORTED _ OBJC _ CXHEADERS and update case label from APPLE _ SWIF
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable dumping to the file by
add support for http : / / issues . apache . org / jira / browse / amq - 4237 - http : / / issues
[ java ] do n ' t check if the buffer be not connected before set the publisherlimit .
added a condition to check if ` dbInfo ` is null and ` options . getOutputOptions ( ) . isNoInfo ( ) ` is true
[ phoenix - 443 ] disable ssl by default for 443
added DOM output options and modified the DOM tree building method to include error output options to enhance error handling by providing custom error output options
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
added retain flag to the event so that it can be re - sent .
removed the @ JsonIgnore annotation from TestResultSummary and updated EventSerializationTest to include testCaseName in JSON serialization to ensure proper serialization of test cases for
added a getName ( ) method to SqlGroupedWindowFunction and modified SqlStdOperatorTable to use " $ TUMBLE " instead of "
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java `
make ssl _ new ( ) and setsessionidcontext ( ) thread - safe
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` AppModule . java ` and modified the ` Watcher `
replace CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to utilize AnsiSqlDialect instead of Calc
change log level from debug to trace when no firmware update handler is available for a specific thing
added tests for handling null dates and timestamps in GetObjectTest . java to ensure correct retrieval of null dates and timestamps in SQL queries
refactor string concatenation in StringSubject and Subject classes for clarity and consistency to improve readability and maintainability of the code
added unit tests for repository permissions functionality in UserModelTest . java to ensure correct permissions are applied for multiple teams in the user model
added a new file Test7088020 . java that implements method handles with varying stack frames to demonstrate the use of MethodHandles for correct method
refactor audience restriction validation to use a HashSet for audience URIs and simplify the matchAudienceRestriction method to improve code readability and maintainability by
refactor ` AbstractDataChangedListener ` and ` HttpLongPollingDataChangedListener ` to use ` this . refreshLocalCache ( ) ` instead
replaced direct usage of ` _ stderr ` with a null check for ` _ stderr ` to improve error handling by preventing null pointer exceptions
added a new constant ` SEPARATION _ ORDER ` and implemented logic to track the number of active stages in ` BasicEventSimulationEngine ` to
updated the optimization parameter from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to ensure compatibility with the real - time schema for
refactor SQL query execution to include split points and disable HBase normalization based on configuration to enhance flexibility and control over aggregator behavior in the database
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass support to ShadowBluetoothDevice and its test to ensure proper functionality of Bluetooth class management in the ShadowBluetoothDevice
updated method names from ` contains ` to ` containsProfile ` for consistency to improve code readability and maintainability by using consistent naming conventions
improve error message for ` ` sum ( [ ] ) ' ' function
replaced the call to ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with ` graph . readUnlockAll ( ) `
updated coreNodeName construction to use nodeProps . getCoreName ( ) instead of coreName to ensure the correct core name is used for node
added updatebackpressure . updatableobject to chatactivity so that we do n ' t have to refresh the chat status bar .
refactor TaggerParserPosTagCompatibilityITest . java for improved readability to enhance maintainability and facilitate future updates
added @ SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase to suppress codecs for SimpleText tests
updated type checking logic in mmm Types . java and added a new class T7005671 . java with multiple method declarations to enhance type safety and
updated triangle calculations in DelaunayTriangulator . java and modified test class names in LwjglDebugStarter . java
added ` @ Override ` annotation to multiple classes in the codebase to indicate that methods should not be overridden in the codebase
refactor JWTClaimsSet initialization to use builder pattern instead of direct instantiation to improve code readability and maintainability by encapsulating
refactor state handling in StackOverflowCheckImpl to use local variables for old and new states to improve code clarity and maintainability by centralizing state
added static shadow methods for SQLite and ContentValues in Robolectric and removed deprecated methods from ShadowContentValues to streamline the code and improve maintain
replaced the call to ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java
replaced ` int ` with ` ArrayUtil . ByteArrayComparator ` for the ` comparator ` field in ` BKDWriter . java ` to improve
updated Locale class to include script property and improved default locale initialization to enhance security and ensure proper initialization of the default locale based on user properties
replace ` mIconCurrentTextAlpha ` with ` mIconLastSetTextAlpha ` in ` PredictionRowView . java ` to ensure the
corrected a typo in the warning message from " Confimap " to " ConfigMap " in ConfigurationChangeDetector . java to improve clarity
replaced specific test class imports with a call to UaaJunitSuiteRunner . allSuiteClasses ( ) in DefaultConfigurationTestSuite . java to
trim whitespace from token types and patterns in GzipFilter and updated initialization parameters in GzipFilterDefaultTest to ensure consistent handling of whitespace and improve
updated outputType assignment in Response . java to ensure consistency in output type assignment
updated the default regexp implementation from JDK to JONI to ensure compatibility with the latest regexp implementations
replaced ` LooperExecutor ` with ` Executor ` and updated task handling in ` ViewCapture . java ` to utilize ` FutureTask ` instead of
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 393 : style
added a check to create a parent folder if it does not exist before attempting to create it to ensure that the parent folder is created if it does
updated default node discovery IP address from 0.0 . 0.0 to 127.0 . 0.1 to ensure compatibility with the latest IPv6 addresses
camel - 14105 : camel - jbpm - fix camel - in - only and camel - in - out camel workitem handler
pdfbox - 4892 : remove unused import , a suggest by valerybokov
updated the class name from WorkModeToggleContainer to WorkFooterContainer to improve clarity and consistency in naming conventions
refactor multiple Java classes in the project to improve code organization and maintainability
fix : fix bug in pretty - printing of implicit type parameter .
added memory freeing functionality in OperatorContext . java to ensure proper resource management and prevent memory leaks
removed unnecessary carriage return characters from string formatting in QueryByExamplePredicateBuilder . java and simplified query string replacement logic in StringQuery . java to improve
replaced evictionCounter increment with AtomicLong and modified evictionCounter handling in ConcurrentLRUCache and FastLRUCache classes to improve tracking of eviction counters and
refactor DefaultTaskExecutor to use CountDownLatch for asynchronous execution to improve thread safety and error handling during action execution
server : do n ' t use inetaddress . getlocalhost ( ) if intendeddestination be not an inet4address
[ java ] set dataroot and sourceroot from the database in the mainframe .
added constructors for ` MarkedClientEnabled ` and ` MarkedServerEnabled ` to log successful initialization in ` AdminClientBootstrapConfiguration ` and
[ hotfix ] [ table ] fix typo in tableenvironment javadoc
refactored statement timeout handling in MapperBuilderAssistant and adjusted fetch size in ExecutorTestHelper to improve code clarity and maintainability by consolidating timeout
refactor methods in JSweetTranspiler , TypeScript2JavaScriptTranspiler , and TypeScript2JavaScriptWithTsServerTrans
added GeoLocationRequest and GeoLocationResponse classes and registered their serializable classes in the CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of geolocation
updated preconditions checks in ArtifactFilesystem and ArtifactFilesystemTest to ensure destination is not a Source Artifact to improve code clarity and maintainability by standardizing
tika - 132 - add test case for jxl file , and fix javadoc
[ ggb ] make sure update script do not trigger concurrentmodificationexception
make sure we do n ' t lose data when there be no data to write .
added error handling for value comparison in GuavaOptionalSubject and corresponding unit tests to ensure correctness of value comparison and provide clearer error messages for
updated conditions for determining midProgress and mMidAlpha in ShelfScrimView . java to improve the handling of visibility elements and ensure
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions when nav is null
mow - pin : do n ' t use absolute location for absolute position
[ hotfix ] [ javadoc ] fix typo in erroroccurredinonexceptionroute
( chore ) camel - astro : use schedulewithfixeddelay ( ) instead of schedulerandomAtFixedRate ( ) in astrodiscoveryservice
removed conditional assignment for ' irrUnit ' and ' pemUnit ' in SinglePassAndImageBasedLightingLogic . java to simplify code and
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest to temporarily disable tests that hang due to
updated import statements in GuiceFactoryTest . java to include specific classes and removed unused imports to improve code clarity and maintainability by using specific
added methods to retrieve and set system features in RobolectricPackageManager to enhance functionality for managing system features in the application
refactor RCAFrameworkLoader to use an entry set and add a new test class for path augmentation to improve code readability and maintainability
removed logging statement for the cancellation watch dog in Task . java to streamline logging for better readability and maintainability
added null and length check for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values
renamed variables ` needInline ` to ` needStartText ` and ` needEndText ` for clarity to improve code readability and maintainability by
add remote _ ip to telemetry server output
removed conditional database type handling for altering the database column type in UpgradeCatalog260 . java to streamline the database upgrade process by eliminating
updated error messages in BaseTableDataManager to include instructions for checking for available space and write - permissions to provide clearer guidance on directory creation failures
refactor DatasetUtilities to improve code structure to enhance maintainability and readability of the code
added a key to include the selector ID in the matcher to improve clarity of selector information in the output
updated logging statements for consistency and formatting in GouraudShadingContext . java to improve code readability and maintainability
updated taskbar visibility and alpha handling in multiple controller classes to improve user experience by optimizing the visibility of the taskbar
removed unnecessary whitespace in KeyExchange . java to improve code readability and maintain consistency
added a type check for JdbcConnection before casting to avoid potential ClassCastException when accessing JdbcConnection
updated file path handling in ServerMainTest . java to correctly append " 1 . log " to ensure the correct file name is used when the index
added ` getMediaRecorderingMimeType ( ) ` methods in ` CodenameOneImplementation ` , ` MediaManager ` , and ` ImageIO ` classes
make shaderhelper . useshaders public so that it can be use from confighandler .
updated the bindable filter condition in DruidAdapterIT . java from " 6588 " to " 13500 " and modified the return value in
reformatted the instantiation of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
added feature to disable external general entities and disallow entity references in XMPMetaParser . java to enhance XML processing capabilities and ensure proper handling of
added a new interface ` ClientRegistrationIdentifierStrategy ` to provide a strategy for managing client registration identifiers
replaced a conditional check with a while loop for processing script tags in UrlHelper . java to improve code readability and maintainability by consolidating
updated variable argument access check from ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and refactored the
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by centralizing border
changed log level from info to debug in WatchConnectionManager . java and WatchHTTPManager . java to improve logging granularity for better debugging
updated the ` attachProjectToConnection ` and ` registerProjectToConnection ` methods to return a ` HubRegisterResponse ` object instead of void to
replaced bitwise operations with ` Byte . toUnsignedInt ( ) ` for byte handling in multiple classes to improve code readability and maintainability by
[ hotfix ] fix checkstyle violation in opentracingtransactionproducer
changed CachingBuildEngine . DepFiles from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to align caching behavior with
changed the value of the ` rangePannable ` variable from ` true ` to ` false ` in the ` CategoryPlot ` class to disable
update main active state logic for mWorkModeSwitch in AllAppsContainerView . java to ensure proper handling of the main view when the main
changed access modifiers of several variables in Visualizer2TopComponent . java from package - private to private to enhance encapsulation and improve code
added handling for CancellationException in FunctionTest . java to ensure proper handling of CancellationException during function execution
changed constructor visibility of JarFileResource and JarResource from default to protected to enhance encapsulation and allow subclasses to access these constructors
refactor DefaultTrackSelector class to improve track selection logic to enhance maintainability and readability of the code
added a loop to wait while unsequring is being performed in LevelCompactionTsFileManagement . java to ensure proper synchronization during unsequring
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to correct the test case to reflect the
updated SQL queries in Post . java and added new assertions in HibernateDTOProjectionTest . java and JPADTOProjectionTest . java to improve
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
removed unnecessary whitespace in SendHeadersFirstPublisher . java to improve code readability and maintain consistency
migrate sse customer key to use builder instead of deserializer
added support for BIG _ DECIMAL type in RangePredicateEvaluatorFactory to improve error handling for unsupported value types
replaced instances of ` inner ` with ` javacProcessingEnvironment ` and ` javacMessager ` in ` TreeBackedProcessorWrapper . java
removed annotation print statements from ParameterInfo . java to clean up the code and improve readability
added a new user preference for AC3 and modified playback state handling in PlaybackController . java and VideoManager . java to enhance user experience by
[ hotfix ] [ node ] return empty json instead of null for localnode
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to address deprecation warnings related
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to validate the functionality of selecting into
refactor RTimerTree class for improved performance to enhance performance and maintainability of the code
updated package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graph
add testcase and fix for issue # 358
updated ClientConnector to use a named QueuedThreadPool and ScheduledExecutorScheduler with a unique name format to improve clarity of thread names and scheduler configurations
refactored ViewResultsFullVisualizer to use Box and updated layout parameters to improve layout responsiveness and layout consistency to enhance the user interface by
added multiple phone number field descriptions and updated the ScimUserEndpointDocs to include a new user ' s phone number to enhance user experience by
changed class visibility of DeleteFiles , IndexFiles , IndexHTML , and SearchFiles to public and added private constructors to enhance encapsulation
added null checks and error logging for HTTP status codes in JsonHttpPropertyRequest and URLStreamProvider to improve error handling and provide clearer logging for
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
do n ' t try to run the xml suite if there be no default parallel
fix checkstyle issue in util / testvmware / testvmwaremo and testvmwaremo
updated error handling in TerminalImpl to include SCARD _ E _ NO _ SMARTCARD in addition to SCARD _ W _ REMOVED
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress sysout warnings related to debugging issues
camel - 14146 : camel - bindy - support key - value pair with multiple key - value pair .
change default value for useowner and usetimestamp from true to false
refactor ` runAndCheckException ` method parameters from ` Runnable ` to ` ThrowingRunnable ` and update throwable handling logic to improve clarity and
[ java ] handle null values in the CrawlURI class to improve code robustness by preventing potential NullPointerExceptions
camel - 15836 - configuring endpoint should set property on endpoint and not configuration object - aws sdb component
updated version number from " 4.2 . 1 " to " 4.2 " and refactored method calls in LiquibaseXMLTransformer to use singleRow
change default value of proxy . cert . validity from 7 to 90
added smoothDelta and lastDeltaUpdate variables and updated related calculations in ThreadHandler . java to improve smoothness and accuracy of time calculations
added null check for paginator and improved URL parsing logic in HttpBatchReader , HttpScanBatchCreator , and TestPagination classes to enhance pagination handling and
added null check and logging for CompactionInfo client in Worker . java and implemented a test for findNextCompact in TestWorker . java to ensure
refactor ShadowFragmentActivity to save instance state before adding it to fragmentStates to ensure proper handling of fragment state changes during fragment management
reformatted code for consistency and readability in BatchResourceFactoryBean . java to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure proper handling of color references in the application
added exception handling for NoResultException in AbstractJPAQuery and created a new test for uniqueResult to improve error handling and ensure uniqueResult functionality
updated variable name from ` fromCache ` to ` owner ` and modified the logic for adding communities to improve code readability and maintainability by using
updated the instance of ` getWallpaperDepthEffect ` to use ` LawnchairApp ` instead of ` l ` to ensure the correct
removed unused import of ProcessTools in LocalManagementTest . java to streamline dependencies and improve code clarity
modified the ` updateTotalEnergyAverageUsage ` method to remove the timestamp parameter from the ` updateTotalEnergyAverageUsage ` method to simplify the method
added null checks and improved string appending logic in ExtensionStack . java to enhance robustness by preventing potential NullPointerExceptions
fixed - flatmap . flatmap do not dispose innersubscribers when onerror be cancel .
added connection manager timeout configuration to MultiGetRequest and updated connection manager initialization in ControllerStarter to improve connection handling and provide more informative logging for
removed unnecessary whitespace in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to ensure the correct model test is instantiated
replaced instances of SystemResourcesEdgeEventFetcher with TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and modified image inlineImage method in BaseImage
added a test to verify output hash calculation when cache is not writable to ensure output hash is calculated when cache is not writable
camel - 10278 : camel - netty - add option to disable bytebuffering
updated the partition alteration method to use the qualified name from the table instead of the old name to ensure the correct table name is used for partition
added a message to the IllegalArgumentException when the Vertx instance must be created with the preferNativeTransport option set to true to provide clearer feedback
add unit test for color and enum type .
refactor StreamEx class for improved readability to enhance maintainability and facilitate future updates
removed query hint settings for specQueryTimeout and specLockTimeout in SessionImpl . java to streamline the query handling by eliminating unnecessary timeouts
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` to facilitate the binding of static logger instances in SLF4
[ hotfix ] [ table - common ] remove duplicate call to familymap . put ( )
added rotation checks for window dimensions in TaskbarManager to ensure proper handling of orientation differences
unescapes xml in chatroom nickname if need .
modified the order of parameters in StoreDirect . java and added a new test class Issue265Test . java with multiple test cases to ensure correct
added ` @ SuppressWarnings ( " mutable " ) ` and ` @ SuppressWarnings ( " ImmutableEnumChecker " ) ` annotations to multiple Java files
jbrules - 2342 : add holder to executionflowcontroltest so it can be use in test
formatted code for consistency and improved readability in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to
added unlimited functionality to NBWriteServlet and TestWriteListener constructors to allow NBWriteServlet to be instantiated with an unlimited limit option
fix incorrect totaldifficulty when import an invalid block .
simplified the logic for determining playback actions based on whether the player is current window seekable to simplify the logic for better readability and maintainability
make sure we do n ' t lock the knownlibrary when construct verificationcachecleaner
added uniform allocation and adjusted bend angle and distance calculations in AllAppsView . java to improve the bend angle and distance calculations for better
added a check for the presence of a colon in the key before processing it to ensure proper handling of keys with colons in the URL connection
added PrincipalResolver qualifier to the authentication metadata populator in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration . java to enhance flexibility in managing principal
replaced ObjectMapper with Noggit JSONParser and ObjectBuilder in DelegationTokenResponse . java to improve compatibility with different JSON encodings and enhance error
added a method ` removeTrailingSlashes ` to ` StringBuilder ` to remove trailing slashes from the StringBuilder to improve code readability and maintainability
added methods to match patterns in PatternsMatcher and corresponding unit tests in PatternsMatcherTest to enhance pattern matching functionality and improve test coverage for various
updated error message formatting in LoadIncrementalHFiles . java to improve readability and maintainability of error messages
fix fire not fire on potion . close # 321
modified the order of parameters in the beginOrAdjustReorderPreviewAnimations method call to ensure proper animation behavior during the drag operation
refactor calculations in ContractStateCapsule , ReceiptCapsule , and ResourceProcessor for improved readability to enhance code clarity and maintain
modified AsyncContentProducer and BlockingContentProducer to handle unready input states and added a new test for isReady in AsyncIOServletTest to
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that the weightField is required to prevent runtime errors
added support for plist variable substitution in AppleBundle . java and implemented a test for it in AppleTestIntegrationTest . java to enhance functionality and ensure
fix terra shatterer not be able to turn .
updated the ` adaptOrder ` method to cast ` Object ` to ` OrderCreateApiRequest . OrderCreateApiRequestBuilder ` to improve type safety and
added a new file ` PreParseGrammarTest . java ` to test XML grammar parsing functionality to ensure that the XML schema grammar is correctly parsed and
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java files to improve code readability and maintainability by providing clearer
added FontManager import and overrideFont calls in ExtendedEditText . java to enable font overriding functionality for improved user experience
added null check for currentUser in AuthorizeTag . java and a new test case in AuthorizeTagTests . java to ensure proper handling of
camel - 14197 : camel - cxf - allow to configure a component with unsafe character in the uri .
added an overridden setUpData method to JDBCGeometryTestSetup . java to ensure proper initialization of the data structure for testing purposes
removed the import of DumpHandler from MultipartFilterTest . java to clean up the code and eliminate unused dependencies
[ hotfix ] [ runtime ] check close of backendrestorerprocedure for cancelled task
add server . rmi . create system property to enable registry creation
replaced String . join with StringUtils . join for formatting string concatenation to improve code readability and maintainability
added unit tests for display metrics and modified qualifier configurations in multiple test classes to ensure proper handling of display metrics and improve test coverage for default qualifier
[ java ] add the member id to the service heartbeat counter when allocate a new cluster member .
added conditional logic to set the total thread allocated bytes attribute based on the major version to ensure compatibility with versions below 21 and above
added handling for NaN values and modified hash code calculation in CustomExpression . java to ensure correct handling of negative and positive infinity values and ensure proper hash
updated logging statements in AjaxListener . java to use parameterized logging instead of string concatenation to improve readability and maintainability of logging messages
added authentication routes and authorized methods to the AuthenticityController and AuthenticityController classes , along with a corresponding test class to enhance authentication functionality
added assertion to check if the nextNode is alive in LoweringPhase . java to ensure that the nextNode is not dead before proceeding
updated the logger reference from ConnectionManager to HttpClientRequestImpl to ensure the correct logger is used for the HttpClientRequestImpl class
refactor the comparison logic in DefaultTrackSelector to use reverse order to improve readability and maintainability of the code
refactor RuntimeSerialization class to improve serialization handling to enhance code readability and maintainability
added cropping functionality to the drawing logic in DrawImage . java to ensure that cropped points are correctly displayed when the image was cropped
refactor UnitOfWorkFactory to improve code organization to enhance maintainability and readability of the code
added a new field ` allAppsCellWidthPx ` to ` DeviceProfile ` and updated its assignment in ` WidgetPreviewLoader ` and
tika - 132 - add content - type name to submd if available .
updated URI generation in ThumbnailsCacheManager to use local ID instead of remote path to improve clarity and accuracy of thumbnail generation
added methods to set and reset input streams if supported to ensure proper handling of input marking and reset functionality
added @ Deprecated annotation to multiple classes and methods in AsyncProcessor , BehaviorSubject , SerializedProcessorTest , and SerializedSubjectTest to indicate that these
added a configuration property to control the display of error stacks in the error page to enhance user control over error stack visibility in the application
server : use deleteaccount instead of cleanupdomain to delete template and domain
remove check for null foreign call in sparcarcarcirgenerator . emitforeigncall
[ drools - 141 ] disabling ruletemplateconfiguration for legacy dsl 5 api
added a new variable ` waitingForResult ` and modified the ` onRequestPurchaseResponse ` method to use ` Display . getInstance ( ) . call
increased the DEFAULT _ TIMEOUT _ MILLIS from 100 to 1000 milliseconds in UnboundedSourceSystemTest . java to increase the timeout duration for
updated import statements and modified the way the style resource name is qualified by removing the " @ " character to improve code readability and maintainability by
deleted two files , MrefStat . java and MrefStatStat1 . java , and added new classes MrefStat and MrefStat
added import for StringUtils and modified scope retrieval logic in DependencyInsight . java to ensure consistent handling of blank scopes and improve code clarity
added error messages for " no trades " and " bad status " and refactored error handling in BTCETradeServiceRaw . java to
use hamcrest assertion instead of junit in micrometer - core
add a method to retrieve payment request URLs for multiple payment protocol requests to enhance the functionality of the BitcoinURI class to support multiple payment protocol
planner - 383 add support for annotate collection with generic type .
removed redundant line setting folder information in FolderPagedView . java to streamline code by eliminating redundancy
[ jfr ] do not release jfr buffer if lock owner be not the current thread .
replace Stream . of ( values ) with a for - each loop for null values and improve error message formatting to enhance code readability and maintainability
refactor linter configuration file handling to use InputResourceUtility instead of Paths to improve code readability and maintainability by using standard Java IO
replace direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a ` Runnable ` that executes ` update
fix playertickevent not be call in inventory . oninventorytick ( ) .
added support for OCELOT _ BABY event in PlayerEvents . java to enhance event handling for OCELOT _ BABY events
[ hotfix ] [ runtime ] add miss ` @ publicevolving ` annotation in ` statettlconfig `
added null checks before setting parameters in PreparedStatement and Array classes to ensure proper handling of null values in PreparedStatement and Array classes
[ java ] add describe - all and describe - all command to archive tool .
replaced double newline character with single quotes in append0 method to ensure consistent formatting of newline characters
added a new test method ` jsonSnapshot ` and modified the ` directory ` and ` propertiesFile ` variables in ` SiteSnapshotVariationsTest `
added a new method ` removeTheTxAndBlock ` to manage transaction and block caching to improve test readability and maintainability by encaps
added functionality to set the channel state for enabling / disabling LED lighting masks in AmcrestHandler and DahuaHandler to
removed the ` throws NoSuchBuildTargetException ` declaration from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify the method signature
refactor ChangeLogIterator constructors to accept a List < ChangeSetFilter > instead of a List < ChangeSetFilter > to enhance flexibility by
do n ' t swallow guest exception in polyglot launcher
updated the method to retrieve the OPT _ OUT _ TRACKING environment variable to use getEnvOrSystemProperty instead of getenv to ensure compatibility with
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization and deserialization of the classes
refactor spacesVisitor to use dropParentUntil for better readability to improve code clarity and maintainability by reducing duplication
add ` ` nearcache ' ' parameter to ` ` servercacheoptions ' '
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to ensure that the border is not visible on a float
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` ProjectCommand
updated KucoinExchange constants from LIVE _ URI to PROD _ URI and added error logging for sandbox host exceptions to improve clarity and error handling
updated resource loading and search path handling in SpringResourceAccessor . java to improve clarity and functionality of resource path management
updated unit strings in SmartHomeUnitsTest . java and SmartHomeUnits . java for consistency and clarity to improve readability and maintainability of unit
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure proper handling of
deleted the Tls12SocketFactory . java file to remove unused SSLSocketFactory class to simplify the codebase
fix resolve tex bib file with non - existing citation
added a check for legacy resources in ResourcesTest . java to ensure compatibility with Robolectric legacy mode
added a check for FirebirdDatabase to return " DOUBLE PRECISION " data type to ensure correct data type handling for Firebird databases
added null checks for dataSource and transactionManager before assigning them to avoid potential NullPointerExceptions when dataSource and transactionManager are null
add the api annotation to the unittest - stubs package to make it easy to discover .
updated the command in OutputStreamTest . java to use " 127.0 . 0.1 " instead of " google . com " and modified timeout annotations to
( chore ) camel - ebean - server : use try - with - resources to ensure transaction be close
updated TermScorer to conditionally use FREQS postingsEnum . NONE based on scoreMode ' s needsScores status to ensure
[ hotfix ] [ dataflow ] fix npe in dataflowmetrics
cloudstack - 5131 : fix vms - deploy from vms - do n ' t list vms by ip4address
refactor DynamicPartitionPruner to use a new method for finding target object inspectors to improve code readability and maintainability by centralizing target object
added a method to remove build artifacts from the ArtifactFilesystem and corresponding tests to enhance the ArtifactFilesystem functionality to properly clean up build artifacts during execution
added logic to set the row selection interval in ThrustCurveMotorSelectionPanel to ensure the table correctly selects the first row of the table
use assertthrowsarraystoreexception instead of assertthrowsarraystoreexception in integrationtest
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future updates
added support for customizable user agent in HttpClientBuilder and HttpClientConfiguration to enhance flexibility by allowing customization of user agent configuration
refactor session restoration logic to use a computeIfAbsent map for improved efficiency to enhance code readability and maintainability by centralizing session data
updated assertions in IssueTest . java and changed data provider ' s results set type from HashSet to IdentityHashMap in Reporter . java to improve test reliability and
updated the initialization of ByteArrayDataSource to use a default content type if the file ' s content type is null to ensure proper handling of null content types
terasology : add interaction end event to allow user to respond to an activation request .
added @ Override annotations and formatted code in GraphApplet . java to improve code readability and maintainability
added the ` updateSnapshotRadius ` method to ` RecentsView ` and ` TaskView ` classes to update the snapshot radius of task views for
added logging functionality to generate Swagger for 3rd party service versions to enhance visibility into the generated Swagger for 3rd party services
changed return type of put methods from void to int in ArrayMap . java to ensure the put method returns the index value as an integer instead of
updated KafkaContainerCluster to use ` withStartupTimeout ` and refactored the start method for brokers to improve code readability and maintainability by
http : / / issues . apache . org / jira / browse / amq - 4892 - retry consumer should not send a message back
refactor header addition logic in StaticServerHttpHeadersWriter and add a test for case sensitivity in StaticServerHttpHeadersWriterTests to improve header handling
added package access check before loading a listener class in EventListenerList . java to ensure proper package access before loading the listener class
added a new ` CustomAdapter ` class and modified the ` onCreateView ` method in ` ApplicationsFragment . java ` to utilize it to
added null checks for the parameters of the applyIcon method in KeyboardQuickSwitchTaskView . java to enhance null safety and prevent potential NullPointerException
refactor DownloadTracker and DownloadManager to use try - with - resources for resource management to ensure proper resource management and prevent potential memory leaks
fix a bug in basesqmtosqlastconverter where the last clause do n ' t have an insert statement .
added JUnit @ Test annotation to HibernateCursorItemReaderIntegrationTests and removed the ExecutionContext variable from HibernateCursorProjectionItemReaderIntegrationTests
http : / / issues . apache . org / jira / browse / amq - 4892 - improve performance of datainputstreamwithtimeout
added support for the ENABLED _ TS constant in VersionTargetGraphMode and imported ToposortBasedDepsAwareExecutor in VersionedTargetGraph
refactor UpgradeCatalog150 class to improve code readability to enhance maintainability and facilitate future updates
wallettool : rename networkparameters . testnet3 to networkparameters . oldtestnet .
no effective change - remove unnecessary code in propertiesviewd
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code robustness and
updated HdfsIndexOutput to extend BufferedIndexOutput and modified flush and writeBytes methods to improve resource management and error handling during file operations
pdfbox - 4892 : do n ' t set the clipping rectangle if it ' s empty
removed synchronized block for setting localAddress in SocketChannelImpl . java to simplify the code and improve readability
refactor TemplateTransformer to use a dedicated method for adding values from a row to improve code readability and maintainability by utilizing a dedicated method
added a method to check if the operating system is Windows and refactored file renaming logic to improve code readability and maintainability by
replace ALPHABET array with a new constant CHECK _ DIGIT _ STRING in Code39Reader . java and Code39Writer . java to
added a check for ` executedType ` and modified the casting logic in ` NodeGenFactory . java ` to ensure proper handling of unexpected return
removed redundant check for fieldType . stored ( ) in IndexingChain . java to streamline code and improve readability
fix ( sql ) : fix timestamp with nanosecond in where clause
removed conditional check for postedRunnableStacktraces before adding to executedRunnables to simplify code and improve readability
updated description of the default storage URL in AbstractGCSProcessor . java to clarify the purpose of the HTTP Host header in the documentation
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to ensure thread safety during connection initialization
updated the default value of DirContext in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to " single " instead of null to ensure consistency in
refactor FaultTolerantChunkProcessor to use a new filterCount and update data retrieval methods to improve clarity and maintainability of the code
modified the formatting of the tabbedMethod method and improved error handling in T4994049 . java to enhance code readability and maintainability by
replaced multiple conditional checks with a single assumeTrue method call in ConsoleReaderTest . java to simplify the code and improve readability
remove unnecessary check for admin user in getfeedbacksessionsaction
updated calculations for newSelection and adjusted threshold values in AllAppsView . java to improve accuracy of selection selection based on mMessageProc ' s
do not notify client on result availability if there be no profile result .
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog , refactored connection handling in DbConnectionDialog , and improved
replaced instance variable ` writeBufferSize ` with a static final constant ` WRITE _ BUFFER _ SIZE ` and updated constructor calls to use ` String
replaced the segment size calculation method with a SegmentInfo instance in DocumentsWriter . java and added a new test method in TestIndexWriter . java to
added a check for the presence of the " dvert " field in the mesh structure before validation to ensure that the DeformVERTices
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
replaced direct creation of UnsupportedOperationException with a final instance of UnsupportedOperationException to avoid filling in stack trace to improve code readability and maintainability by avoiding
updated the method to calculate the average line height using streams to improve accuracy of label rendering by returning the average height of all lines
replaced the singleton instance of RotationTouchHelper with a constructor that accepts a DisplayHolder parameter to improve flexibility and maintainability of the RotationTouch
added a check for already quoted characters in the value string before appending them to the buffer to improve handling of quote characters in the input string
updated ` ServletHandlerInterceptor ` to replace ` Long . valueOf ( s , 16 ) ` with ` IdConversion . convertToLong ( s ) `
renamed the method ` name ` to ` testSmall ` and added a new test method ` testBig ` in ` ServerDatagramConnectorTest `
updated the substring method in TestSqlEntityProcessorDelta . java to correctly reference the first character of the document to ensure correct parsing of the country code
refactor Cache class to improve performance to optimize performance and reduce memory usage
updated variable names from ' e ' to ' ev ' for consistency and clarity to improve code readability and maintain consistency in naming conventions
modified the ` doBefore ` method to include a ` false ` parameter and changed the ` BitSet ` initialization to be final to improve code clarity and
added a main method to display the number of rows in a Persistent JTable to enhance user experience by showing the number of rows in a JTable
replace hardcoded WEBAPP _ CONNECT _ TIMEOUT with configuration . getConnectTimeout ( ) to improve flexibility and maintainability of connection timeout
refactor multiple classes for improved type safety and clarity to enhance code readability and maintainability
refactor TestMediaService class for improved readability to enhance maintainability and facilitate future updates
removed the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK constant from Messages . java to clean up the code and
add a new file MarketsPrintTool . java that implements a main method for printing market currencies to provide a demonstration of the printing functionality for BTC
added hostname validation and corresponding validation in EndpointAddressInterceptor to ensure only valid components do not exceed a specified maximum length to prevent runtime errors
added methods to register security keys start and complete in AccountProxy and HttpAccount classes to enhance security management capabilities in the application
refactor ServerSpanThreadBinder to improve code readability to enhance maintainability and facilitate future updates
updated userData retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and adjusted offset in ` BlockItem
added " the _ geom " and " number " classes to the builder in Csv2Shape . java to improve clarity and functionality of shape data representation
updated gas calculation in VM . java and removed unused imports in Program . java to improve code clarity and reduce unnecessary dependencies
refactor Parameters class to improve code readability to enhance maintainability and facilitate future updates
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot . java to ensure that the piePlot does not ignore null values
removed the underConstruction map and simplified the bundle retrieval logic in ResourceBundle . java to simplify code and improve readability by simplifying the loading process
updated the character assignment from ' _ ' to ' - ' in TaggedPdfReaderTool . java to correct the formatting of the variable ' c '
do n ' t execute script action if @ allowedduringediting be false
added a userModified flag set to true in LoginSamlAuthenticationProvider . java to mark the user as modified after authentication
added a new file TestSealedObjectNull . java to test the behavior of SealedObject with null cipher to ensure that the SealedObject is
renamed the ` onOpen ` method to ` setResponse ` and updated the ` succeeded ` method in ` ConnectPromise ` to improve clarity and consistency
added a static final Set for SNOW material and updated its usage based on server version to ensure compatibility with newer server versions and improve performance by
added an ` id ` field to the ` Trade ` class and updated related methods to include it to enhance trade tracking by associating trade IDs
added error handling for closing the Hive MSC connection in HiveStreamingConnection . java to ensure proper resource management and prevent memory leaks
change seed calculation to use random long instead of current timemillis .
updated the icon size from 318 to 335 and added a new device profile for Nexus 5 to enhance the visual representation of the Nexus 5 device
[ java ] : fix refcount . takeuntil ( ) and flowablerefcount . takeuntil ( ) to handle null connection object .
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to ensure proper instantiation
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP format token in the FormatVisitor and TokenFormatter classes to enhance formatting capabilities for
added checks for file existence and length in SaveTask . java and implemented tests for empty project files in SaveAndLoadTaskTest . java to ensure
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during concurrent operations
log4j2 - 1338 - log4j2 - camel - smtp should serialize and deserialize mutablelogevent to log4j2 -
changed the PADDING constant from LengthLike to NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure proper handling of non - negative length
replaced calls to ` createContext ( getUser ( headers ) ) ` with direct calls to ` createContext ( ) ` across multiple resource classes to simplify
fix handling of jimple catch in methodirbuilder .
updated JUnitRunner and AndroidPlatformTarget to include SDK installation details to enhance error messaging for better debugging and debugging
update cacheSize calculation from maxMemory / 16 to maxMemory / 8 to adjust cache size for better memory management
added conditions to check if ' start ' is zero in InvocationStageTrace . java and modified JSON serialization in TestInvocationPublishModelFactory . java to
added error handling for KeyStore loading in ProvKeyManagerFactorySpi . java to ensure robustness by handling NullPointerException during key loading
updated UpstreamCheckUtilsTest to use a dynamic port and modified server socket initialization to use a dynamic port instead of a hardcoded value to
updated the reference to ` oldParent ` in ` DockManagerW . java ` to use ` otherParent ` instead of ` panelDim ` to
added conditional checks for OpenGL shader extensions before setting limits in GLRenderer . java to ensure proper handling of shader limits based on available capabilities
refactor PopulatorContext class to improve code readability to enhance maintainability and facilitate future updates
do n ' t send saveall notification for project that do n ' t have it
updated character encoding handling in ZQLJobManager to use IOUtils for writing JSON to ensure consistent character encoding across different operating systems
added a check for non - empty arguments before verifying the type of the last argument to ensure that only valid arguments are processed for Table instances
replaced hardcoded string values with a constant PREFIX in FakeOSSOHeaderDecoder . java to improve maintainability and readability of the code
deprecate - suffix - strategy option in generate - java - source and generate - java - mojo
removed debug log messages related to the Apache Derby driver class in DerbyDatabase . java to clean up the code and improve error reporting for better debugging
[ cep ] fix flaky test in camel - cep
replaced parallelStream ( ) method with stream ( ) method in PersonNameSuggestionProvider . java to improve performance by reducing parallel execution time
updated the operation type check from uppercase to lowercase and added a warning message for updating the liquibase hub mode to improve code clarity and provide clearer feedback
added COREINFO _ VERSION _ SUCCESS _ KEYS and COREINFO _ VERSION _ OPENJ9 _ FAILURE _ KEYS constants to
updated logging message formatting in FontFamily . java and added a new DebugFonts class for testing font requests to improve clarity of font request messages and
updated ALPNNegotiationTest and NegotiatingServerConnectionFactory to include HTTP _ 1 _ 1 handling in negotiation logic to ensure compatibility with the
added a RateControl import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to ensure proper rate control
added a new file Test6741426 . java that implements a Runnable to implement Nimbus Look and Feel based on a JComboBox and JTextField to
updated the assertion message in the CSRFAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of error messages related to
added null checks for dbMgdPath and dbExtPath in madeManagedDir , madeManagedDir , and madeExternalDir conditions to ensure
move copyobjectrequest to a separate package so it can be use by other package .
removed unused accentColor parameter from setup methods in SettingsActivity to simplify method signatures and improve code readability
updated error message in TemporaryFolderUsageTest to include the file at root to provide clearer context for the error message when the folder path is
replaced instances of ClassTypeInformation . from ( Map . class ) and COLLECTION _ TYPE _ INFORMATION with ClassTypeInformation . OBJECT to simplify
check for non - null address in clientconnectionconfig . addaddress ( )
add a new certificate key " keynectisrootca [ jdk ] " to VerifyCACerts . java to enable verification of the specific
change return type of compute ( ) from void to int . this should fix the build .
added a condition to set the mode based on popup status in the ModeToggleMenu to ensure menu behavior is only set when the popup is not active
pdfbox - 4892 : fix arrayindexoutofboundsexception when read from memoryttfdatastream
added a new test file ` FinalizerInfoTest . java ` to test GC finalizer functionality to verify the finalization process ' s finalization
use doonnext ( ) instead of map ( ) in cachingroutedefinitionlocator and cachingroutelocator
refactored the handling of the burning man proposal to check for a custom address before applying the compensation request to improve code readability and maintainability
refactor StringSubject class for improved readability to enhance maintainability and clarity of the codebase
updated the byte array size from 1 , 000 , 000 , 000 to 1000 and added the @ Ignore annotation to the longData array
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to improve clarity
replace occurrences of " @ " with " from : " in the recent query save method to ensure the recent query does not contain " from : "
added a condition to check if ` forRebalance ` is true in ` SimulatorDiscoverer . java ` to ensure proper handling of re
added a new POST endpoint for importing YubiKey accounts in YubiKeyAccountRegistryEndpoint . java and corresponding tests in YubiKeyAccount
add shaders to shaders in ShaderManagerLwjgl and update material parameter handling in FontMaterialProducer and LwjglCanvasRenderer
added null checks for the variable ` cnt ` in ` paintOnTopLoop ` and modified padding handling in ` SideMenuBar ` and ` Toolbar
refactor AbiWriterProtocol class to improve code readability to enhance maintainability and facilitate future updates
added a null check for subName before assigning the caption in HierarchyBase . java to avoid potential NullPointerExceptions when the caption is null
change data flag from IMMOBILE to GRAVITY in EntityItem . java to align data data with the new gravity feature
added null check for the simulation object and modified condition checks in CustomExpression . java to enhance code robustness and prevent potential NullPointerExceptions
removed the method ` requestBlindVoteListFromNetwork ` and replaced it with ` sendRepublishRequest ( ) ` to streamline the request
add a test case to verify that postgres can be use multiple time in a single thread .
updated string literals in SubtitleUtils and RemoteUtil to use single quotes instead of double quotes to improve code readability and maintainability by using
fix a bug in the defaultprettyprinter , and add a test for the new line separator in commenttest .
[ hotfix ] [ compiler ] make singleimplementor . currentsnapshot non - volatile
added null checks and improved query handling in SimpleFacets . java and added a test case in SimpleFacetsTest . java to enhance robustness
fix thinghelper . getallthings ( ) to work with bridge .
replaced calls to ` printHelp ( ) ` with ` error ( " command must be provided " ) ` and ` error ( unknown command " )
added a check for the existence of the output file before returning it to ensure that the output file is only returned if it exists
added date parsing logic for T , plus , and minus in DateConverter . java and corresponding test cases in DateConverterTest . java to ensure proper
added assertions and a query method in PostRepository to verify the existence of a post by its slug to ensure that the PostRepository can retrieve a post
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and modified the handling of the database connection
added SimpleClientHttpRequestFactory with connection and timeout settings in ClientRegistrations . java to enhance HTTP client connection management and ensure proper connection handling
added assertions to verify the correctness of the non - cannonicalized file in the Source class to ensure the correctness of the non - cannon
remove system property ` ` graalvm . version ' '
added validity checks for access token and refresh token in ClientAdminBootstrap to ensure proper configuration of token validity during client initialization
updated the return statement to include a check for the Android API version using the Options class to ensure compatibility with newer Android API configurations
removed unnecessary ' this . ' prefix from variable declarations in PropertyPlaceholderHelper . java to simplify code and improve readability
updated the formatting of the Subject Public Key Algorithm from { 9 , number , # } to { 9 } to improve readability and maintainability of
refactor ZkSolrClientTest to track collections in progress and improve thread synchronization to enhance test reliability by ensuring all collections are processed concurrently
removed the import of BigInteger and added BigInteger . class to simpleTypes in MongoMappingContext . java to streamline the code by eliminating unnecessary dependencies
added a condition to check if the button text equals the button text in the toast visibility check to ensure that the toast is only displayed when the view
added a condition to check if MEncoder is not out of sync when no MEncoder is available to ensure proper handling of MEncoder video playback when
increase io . netty . eventloop _ thread _ count from 10 to 15 in configurationproperties and configurationpropertiestest
change visibility of several fields and methods in CountMin4 and related classes from package - private to protected to allow subclasses to access these fields and improve
added methods to retrieve and sort a FileFloatSource in ExternalFileField . java and created a new test class ExternalFileFieldSortTest . java
updated error message in FetcherException from " Invalid URL " to " Connection error " to improve clarity of error reporting for better debugging
added source attribute handling and updated event logging in OpenRocketSaver , FlightDataBranchHandler , and FlightDataBranchTest classes to improve event
changed the access modifier of the check method from private to protected to allow access to the check method from outside the class
added synchronization functionality for file operations in FileActivity . java to ensure that conflicts are handled correctly during file transfer operations
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for file path encoding to enhance security and improve URI generation for thumbnails
added a check to return early if the infinite container is not initialized to prevent potential null pointer exceptions when the infinite container is not initialized
changed the initial value of the total variable from 0 to 1 and adjusted the calculation of the total value to ensure that the total value reflects the correct
added a lock check before updating an entry in FeedRefreshUpdater . java to handle lock timeouts gracefully to improve error handling and provide clearer
refactor user principal assignment logic in SolarisAclFileAttributeView . java to handle both UID and GID correctly to improve code readability and
refactor LatLonTree to use an array of Edge objects instead of a list and simplify edge initialization to improve code readability and maintainability by
added a try - finally block to close the input stream in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix parsing of bibtex comment that contain \ x0a and \ x0a
added strict property handling in Main . java and corresponding unit tests in MainTest . java to enable parsing of properties files based on the " strict "
allow custom constraint validator to return ` ` invalid ' ' instead of ` ` invalid ' '
camel - 13497 : camel - http - fix camel - http4 - http component verifier to use http4
added a call to waitForThingsToLevelOut with a timeout in TestCloudPivotFacet . java to allow more time for the test to wait for
refactored conditional checks for byte lengths in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class for improved readability to enhance maintainability and clarity of the test code
changed the type of the ` details ` variable from ` String ` to ` StringBuffer ` to improve performance and readability of the code
replaced instances of ` Type ` with ` RoboType ` in multiple files to standardize type handling and improve code clarity
[ java ] abort record descriptor poller when archive be complete .
added caching and lookup key handling in EntityProcessorBase and updated related tests in TestCachedSqlEntityProcessor and TestCachedSqlEntityProcessor to improve data
added a new file PutfieldError . java that tests for IncompatibleClassChangeError to ensure that RuntimeException is thrown when a IncompatibleClass
do n ' t use an empty hashmap for the privatetopublic map if the address already exist .
add log to help debug memtable flushing . patch by jbellis
replaced instances of ` Space . EMPTY ` with ` Space . SINGLE _ SPACE ` in multiple files to improve code clarity and maintainability by
removed duplicate ` encodedLength ( ) ` method declaration in ` Flyweight . java ` to streamline code by eliminating redundancy
refactor TestMethodResultMapBuilder class implementation to improve code readability and maintainability
fix findnullderef for java . lang . integer and java . lang . runtimeexception .
[ hotfix ] [ runtime ] remove unused constructor from tasklocalstatestoreimpl
updated string return values in Utils . java to include " m " , " h " , " d " , and " d " to ensure consistent
updated conditions for handling DeepShortcutView instances in Utilities . java and FloatingIconView . java to improve handling of shortcut views and enhance drawable retrieval
changed the type of the ` validator ` from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > ` and
renamed methods ` buyBuyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate ` ,
added a new configuration class ` CoverageConfig ` and refactored the class name retrieval in ` CoverageController ` to use it to improve
added a conditional check before registering the sticky event in ThumbnailView . java to prevent registration of sticky events if already registered
added asciiOnly check for normalization methods in NormalizerBase . java to ensure only valid characters are returned to avoid normalization failures
[ hotfix ] [ runtime ] fix check for migration task in partition service
added exception handling and assertions for SQL statements in SpillableGroupByIT and NoOpStatsCollectorIT to ensure proper error reporting during database updates
camel - 13636 : camel - cometd - consumer - should use junit4 for unit test so they can run in parallel
added an ` attrs ( AttrKind . OK , WIDTH ) ` attribute to the ` HR ` and ` attrs ( AttrKind . OK
added a new line break in the HtmlCoreReport . java file to ensure proper formatting of the report output
updated RAM usage calculation in DocSlice . java to handle null scores to improve robustness by avoiding potential NullPointerExceptions when scores are null
added a new custom type adapter for handling string holders in CustomTypeAdaptersTest . java to enhance JSON serialization and deserialization functionality for collection elements
update mergecoordinator to use extradata from miningparameters
added a static map to track the number of arguments in DependencyParser and updated property retrieval to use this map to enhance flexibility by allowing dynamic configuration of
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the code
updated migration threshold variable name from ` configedThreshold ` to ` configuredThreshold ` and introduced a default delay constant in ` MigrationRuleListener ` to
renamed parameter ` part ` to ` partOrList ` in ` attach ` methods in ` RestClientRequest ` and ` RestClientRequestImpl `
[ twitter ] move css to twitterbootstrap / core / benchmark / core / benchmark
remove unused pPOSTag pattern and implement basicCategory method in SpanishTreebankLanguagePack . java to improve code readability and maintainability by using
entityloader : deprecate entityloader . loadbyuniquekey ( ) , use uniqueentityloader . load ( ) instead . loadbyunique
hbase - 24413 regionserverflushtableproceduremanager and regionserversnapshotmanager do n ' t remove cancelled element from taskpool
fix for setsize ( ) in pgraphicsjava2d when there be no width / height
fix checkstyle issue in util / hikari / pool / hikaripool . java
replaced the ` assureMatchVersion ( ) ` method implementation with a default value of ` Version . LATEST ` in multiple filter factory classes to ensure
fix : aop proxy can not be create if the executable method be create from default method .
drlparser : do n ' t try to parse a comma if the first character be a comma
refactor multiple subject classes in the project to improve code organization and maintainability
added a check for negative payload length in WsFrameBase . java to ensure proper error handling for invalid payload lengths
move abstractchannelparser and publishsubscribechannel from ' channel ' to ' dispatcher ' ; move abstractchannelparser to ' dispatcher '
updated executionId data type from String to Long across multiple classes to allow for more flexible handling of query execution IDs
added multiple calls to ` digest . update ( ( byte ) width and height ) ` in ` ImageProcessor . java ` to ensure correct handling of
added imports for CollectionParams , CoreAdminParams , and LocalSolrQueryRequest in SolrConfigHandler . java and removed unnecessary logging in SolrConfig
updated the delay calculation in FileSyncAdapter to use the current time instead of a fixed value of 60 hours to ensure synchronization occurs only after a certain
[ hotfix ] fix checkstyle violation in segmentv1v2tov3formatconvertertest
( chore ) camel - iotdb - m2 : use path object instead of string for add timeseries
added URI handling and improved error logging in DefaultPackageScanClassResolver and added a new test case in DefaultPackageScanClassResolverTest to enhance URL
[ hotfix ] [ table ] move timestampextractorutils to a separate utility class
added a new file ` SpringSecurityAuthenticationSource . java ` that implements the ` AuthenticationSource ` interface to provide functionality for managing LDAP user details and
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest features and
replaced the autoSuggestDialog implementation with a simple FormDialog for file suggestions to improve user experience by providing suggestions based on cached files
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and updated assertions in ` StoreAPITest . java
updated parameter name from ` collection . getName ( ) ` to ` collectionName ` in the ` stream ` method of ` MongoTemplate ` to improve
updated zoom calculation and casting in MapOverviewImageMouseHandler . java to improve accuracy of zoom values by using logarithmic values
updated the KNearestNeighborClassifier constructor to accept a Similarity parameter and modified related tests to use LMDirichletSimilarity to enhance similarity handling
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing and improve performance
updated reason assignment from ` toString ( ) ` to ` getReason ( ) ` in LowResourceMonitor . java to improve clarity and accuracy of the
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added MTU request handling methods in ShadowBluetoothGattTest and ShadowBluetoothGatt classes to ensure correct MTU request behavior
refactor ServletInputStream creation into a separate method ` createServletOutputStream ( ) ` to improve code readability and maintainability by encapsulating
[ vosk ] set vosk log level to warn on unsatisfiedlinkerror
replace HashMap with ConcurrentHashMap for mProcessingChains to ensure thread - safe access to mProcessingChains
updated Japanese and Chinese resource files to correct spelling of " all " and " grouped " to " grouped " and " summary . "
updated JDBCTypeMapping to check for size of 1 instead of 0 and modified related assertions in JDBCTypeMappingTest to ensure correct handling of type mappings
added synchronized keyword to addPlayer and removePlayer methods to ensure thread safety during player addition and removal operations
refactor accessibility handling in TerminalView by replacing accessibilityActive check with a separate AccessibilityStateTester instance to improve code readability and maintainability by
added support for side navigation in the command behavior checks in the MenuBar and SideMenuBar classes to enhance functionality and ensure proper handling of side navigation behavior
removed the Disposable dependency from the ticker subscription in PoloniexManualExample . java and added connection error handling in WampStreamingService . java to
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java and corresponding test case in UpdateSettingForEnergyLimitContractAct
refactor variable name from ` url1 ` to ` javaUrl ` and add protocol handling in ` UrlBean ` to improve code readability and
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to allow configuration of the namespace prefix for SOAP data format
refactor date parsing assertions to use a dedicated method for day comparison to improve code readability and maintainability by centralizing date comparison logic
added logic to restart Jetty SolrRunner in BasicAuthIntegrationTest . java and updated ZkStateReader . java to retrieve security properties to ensure proper
add pricefeed to tradeschartsviewmodel so that it do n ' t use sticky market price
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to streamline configuration initialization to improve code readability and maintain
updated variable names from ` from ` to ` end ` in ` NativeString . java ` and added bounds checking for the ` end ` variable to
added file download functionality using FileDataStorageManager in FileDownloader . java to enable file downloading during the download process
refactor RandomAccessFile usage in MappedRawLog . java to use a local variable and set the length of log length to improve code readability
added a method to check if a registry is running and a method to delete a file if it exists with retries to improve reliability of registry operations and
added ` componentPresetDao . startLoading ( ) ` method calls in ` EditTest . java ` , ` Quick3dMain . java `
removed unused private fields and added @ SuppressWarnings annotations in multiple Java files to suppress unchecked warnings and improve code clarity
added a null check for instances in TraceFeignContext to prevent potential NullPointerExceptions when instances are null
phoenix - 1149 allow set transaction _ must _ be _ enabled to set isolation _ level ( phoenix - 1147
added transaction attribute handling for error processing in AbstractStepFactoryBean and adjusted exception handling in ItemOrientedStep to ensure proper rollback behavior based on
updated CasManagementSecurityInterceptor to use DirectCasClient and modified related imports to improve compatibility with the new CAS client protocol and enhance security logic
removed the visibility and functionality of the add category menu item in ListFragment and updated navigation drawer item handling in NavigationDrawerFragment to enhance user experience by
renamed the ` cancel ` method to ` cancelMatchingOperation ` and updated the ` observeDownloadWorkerState ` method to ` observeWorkerState ` to
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve clarity and consistency in font size handling
added a validation check for the fact object before modifying it in ConstantAnalysis . java to ensure that the fact is valid before modifying it
refactor DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and maintainability
replace direct return of spans with a new ArrayList instance to improve memory efficiency by creating a new ArrayList instance
removed unnecessary lock service calls and streamlined code formatting in Liquibase . java to improve code readability and maintainability
added a setRevision method to MicroserviceVersions and modified InstanceCacheChecker to set the revision to null to enable dynamic revision management for microservice versions
updated the handling of foreign key and index names to use a formatted string format to improve consistency and readability of foreign key and index names
camel - 14197 - camel - aws2 - s3 : add uri - endpoint - override option to all aws component - aws2 -
removed the currencyPair parameter from the getBitstampUserTransactions method in BitstampAccountService . java and added a new method in BitstampAccount
added a try - catch block to handle NoSuchComponentException in BlueprintContainerRegistry . java to improve robustness by handling potential NoSuchComponentExceptions
add an option to enable / disable push for remote server .
make legacyaddresstest more tolerant to linux , and add test dataset
changed the access modifier of the ` findDropTargetAt ` method from package - private to public to allow access to the method from other packages
added a snackbar setup method and refactored push notification handling in NotificationsActivity to improve user experience by providing a clear feedback when pushing notifications
close the channel if there be no filter
updated null and empty checks for result and attributes in LdapPasswordPolicyEnforcer . java to improve code robustness and ensure proper handling of empty results
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to issue PHOENIX - 2840
nifi - 145 : add the timezone field to the aboutdto , and add it to the aboutdto
do n ' t split the local range if there be more than one token .
removed exception handling for reading objects in BeanContextSupport . java to simplify code and improve readability by eliminating unnecessary try - catch blocks
replaced synchronized block with synchronized block for adding active circuits in CircuitManagerImpl . java to improve thread safety and maintainability of the code
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
flume - 164 . refactor pollablesinkrunner , eventdrivensinkrunner , sourcerunner , and pollablesourcerunner to
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy for improved clarity to enhance maintainability and readability of the code
change return type of ` getPointLength ( ) ` method from ` double ` to ` int ` and implement ` GeoLocusable ` to improve
corrected the syntax of the constructor declaration in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve code readability and maintain consistency in constructor
refactor connection handling in SchemaCrawlerMain and Executable classes to ensure proper resource management and logging to improve resource management and ensure proper closure of database connections
bump default tl version to v1.2 and fallback to v1.2 . 2
update error messages in CountersManager to include " metadata " instead of " labels " to improve clarity of error reporting when buffer is full
updated audio stopping logic in MediaManager . java to handle the case when currentAudioQueuePosition is zero to ensure proper handling of audio state during playback
updated debug logging statement to include the connection object as a parameter to improve logging clarity by providing more context in debug messages
added ` @ Transient ` annotation to ` JpaPersistentPropertyImpl ` and a corresponding test in ` JpaPersistentPropertyImplUnitTests `
updated assertions in UpgradeResourceProviderTest to use " HDP - 2.15 . 1 " instead of " HDP - 22.1 . 1
trufflevm : change return type of eval ( ) from symbol to object .
make proxy . isbinary ( ) public so it can be use in binary mode .
updated the configuration property name from " hive . tez . dynamic . parition . pruning . max . data . size " to "
refactored findProblem method in JavaProblem . java and removed unused priority constants in JavaProblem . java to improve code clarity and maintainability by
replace ` DictionaryIndexConfig . DEFAULT _ OFFHEAP ` with ` DictionaryIndexConfig . DEFAULT ` in multiple files to standardize the configuration
updated line separator handling in TableWriterTest . java from a hardcoded newline to a configurable system property to improve flexibility and maintainability of
refactor DebugHelper class to improve code structure to enhance maintainability and readability of the code
added a boolean field ` ownsTexture ` to control texture ownership in ` ParticleEffect . java ` to ensure that particles are only processed when the
added new LDAP authentication configuration properties to HiveConf . java to enhance security by allowing configuration options for LDAP authentication
[ hotfix ] [ runtime ] fix checkstyle violation in datacatalog api
updated input method handling in DetailActivity to include SHOW _ FORCED and HIDE _ IMPLICIT _ FORCED
added a test for converting primitive to map of primitive to object in DataTableTypeRegistryTableConverterTest to ensure correct data type conversion for primitive and object
updated the size calculation in TestFileSystem from 500 to 50 and added a deletion of the " memFS : fsMem . mv . db " file
updated error messages in ContentTypeManager . java to improve clarity to enhance error reporting and ensure proper closing of open resources prior to filing a bug report
refactored the ` dropSequences ` method across multiple database classes to implement the ` dropSequences ` method across multiple database implementations to
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
added a variable ' f ' to store the result of binaryField creation to store the result of binaryField creation
do n ' t create hierarchical icon if the root node do n ' t have one .
added a test method ` findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject ` to ` MongoTemplateTests ` to verify the functionality of
hbase - 27348 fix long division by zero in rowseeker , bytebufferf , cellflatmap , and priorityblockqueue
added methods to record app launches and modified broadcast intent handling to handle null shortcuts and improve broadcast intent management
added graphical rendering functionality in JavaSEPort . java to ensure proper resource management and prevent memory leaks
renames occurrence of teammembersinteam to teamwithresponses and adds team with response to a new section
updated inventory ID generation logic to handle zero as a player ' s inventory ID to ensure proper ID generation for players with zero inventory IDs
added a conditional check for ` found ` before breaking the loop in ` ConfigDescriptionRegistry . java ` to ensure that the loop exits early if
updated the returnType parameter in multiple parser visitor classes to include returnTypeAnnotations instead of an empty list to enhance functionality by providing more context in the
added null check for blended tiles before initialization in TileMapRenderer . java to avoid potential NullPointerExceptions when blending tiles are not provided
removed unused ` value ` and ` sunClasses ` from the ` @ Classes ` annotation in ` mmm Probe . java ` to streamline
fix a bug in ifctools2d that could cause a nullpointerexception in ifctools2d
refactor lockOnSync initialization to use ' this ' instead of ' this ' for clarity to improve code readability and maintainability by using the
modified PipeEventBus and PipeBehaviourEmzuli to override the superclass method and updated event handling in PipeBehaviourEmzuli to enhance event handling functionality
updated timeout value in ZkController instantiation from 1000 to TIMEOUT to ensure proper timeout handling for the ZkController initialization
added unit tests for passcode and client parameters in TokenMvcMockTests . java to ensure correct functionality of passcode and access token functionality
added constructors for LengthFilter and CharArraySet and implemented brokenOffsetsConstructors for LengthFilter and KeepWordFilter in TestRandomChains
removed the JUnit Ignore import from RandomPlaneTest . java to clean up the test code and improve readability
[ gr - 14497 ] fix llvmx86 _ 64bitvastart memory overflow
updated method calls in btCollisionObjectArray and btRigidBody to use btCollisionObject . getInstance instead of btCollision
added copyright year handling and updated related copyright URLs in the AboutDialog and AboutDialog classes to ensure consistent copyright management and improve user experience by providing
added getdistributedobjects ( ) method to JetClientInstanceImpl and corresponding test class JetClientInstanceImplTest to enable retrieval of distributed object
added print statements for component , fin count , and inertia in FinSet . java and updated test values in MassCalculatorTest . java to
updated memory constants in SmartDexingStep . java from TOTAL _ MEMORY to MAX _ MEMORY and initialized a new Semaphore with a
changed exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and modified the parameter name in setCompressors method in CreateAligned
refactored the handling of delayedpayouttxs to use the bisq co - founder instead of the hardcoded one
updated JsonLoaderTest to use json method and added exception handling for " big _ integer _ t " to improve test readability and ensure proper exception
updated the limit check for tableSize from 1 to 0x40000000 in ObjectSet . java to ensure that the capacity is within the valid range
updated import statements and modified dataScale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure dataScale is only set if it is non
removed the @ AddToRuleKey annotation from multiple fields in AppleTest . java to simplify the field declaration for better readability and maintainability
added security exception handling for querying the file name and modified content retrieval logic in FileHelper and TextHelper to improve robustness of file retrieval and
added a new resource constant ` StyleWithMultipleAttributes ` and implemented multiple attribute resolution tests in ` ShadowThemeTest ` to enhance functionality to support multiple
fix for bug # 48265 - incorrect sheet name check in hssfworkbook . createsheet ( )
changed the color used in the ManageAccountsActivity from primaryColor to elementColor to ensure the correct color is used for the user interface
added null check for replyHandler in DefaultEventBus and simplified path resolution in DefaultPlatformManager to enhance robustness by preventing potential NullPointerExceptions
added support for mysql binary collation in multiple database types to enhance database type filtering capabilities by allowing users to specify binary collation names
added a default method ` whenType ` to ` Tree ` that returns an ` Optional < T > ` that checks if the tree type is assign
refactor navigation logic in ItemLauncher to utilize a new method for obtaining user view destinations to improve code readability and maintainability by centralizing
modify the return statement in FeedREST to return a temporary redirect to ensure the application redirects to the public URL instead of a generic status code
[ flink - 20586 ] [ kinesis ] validate deserialization schema to be serializable in flinkkinesisconsumer
fix some javadoc warning in camel - jbang
refactor LeaderElectionTest to use a try - finally block for closing the ZkStateReader instance to ensure the ZkStateReader is
renamed ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` and updated its implementation across multiple classes to improve clarity and
refactor the read method in ProxyHandler to use a dedicated read method to improve code readability and maintainability by encapsulating the read
replaced occurrences of ` BufferUtil . allocate ( length ) ` with ` ByteBuffer . allocate ( length ) ` in ` ABCase1 _ 2 .
modified the return type of ` prepareStreamsToUpload ` from ` void ` to ` boolean ` and updated the method signature accordingly to improve clarity and
replaced integer comparison with Integer . compare for order comparisons in AbstractConfigLoader and TestMicroserviceConfigLoader to improve code readability and maintainability
added a new file ` PicOfDayAppWidget . java ` that implements an application widget for loading media images to enable users to view and display
server : set internallbserviceofferingid default value to 0 instead of empty string .
replaced ` RelOptUtil ` with ` HiveRelOptUtil ` and updated join condition splitting logic to improve compatibility with Hive ' s planner and
added @ Deprecated annotation to multiple transformation classes to indicate that these classes are outdated and should no longer be used
added user and password options to the JMXConnector in NodeToolCmd . java to enhance security by allowing users to access the remote jmx connection
removed duplicate BytesRef initialization in Stemmer . java to improve code readability and maintainability
updated the parameters of ` applyFromAppWidgetProviderInfo ` and ` applyFromResolveInfo ` methods in ` AppsCustomizePagedView
ggbapplet : fix thumbnail for 3d view
updated rotation calculations in GcodeRenderer . java to ensure that the rotation coordinates are within the valid range to prevent negative rotation values
added a new option ` WORKSPACE ` to the ` OptionEnum ` class and updated the ` TerminalClient ` to set the workspace directory to
[ java ] use html instead of apt for the options file in climanagertest .
updated ScimUtilsTest to use JUnit Jupiter API and added PollutionPreventionExtension to enhance test coverage and ensure proper exception handling during
refactor OAuthConfirmationController to use a model instead of modelAndView for better clarity to improve code readability and maintainability by using a more
added an assertion to clear the cache statistics before verifying the second - level cache hit count to improve test reliability by ensuring the session cache hits are
refactor EventBusHook class for improved event handling to enhance event management efficiency and maintainability
refactor MultiPaintEventTest class for improved readability to enhance maintainability and clarity of the test code
removed the final modifier from the mNewScale variable in WorkspaceStateTransitionAnimation . java to simplify the variable declaration for better readability and maintainability
refactor SyncFactory class to improve code readability to enhance maintainability and facilitate future updates
added support for unique key field in LukeRequestHandler to ensure proper handling of unique fields in the schema
added methods to get and set document filters for stroke and backgroundColor in BorderEditor and updated resource handling in EditableResources to enhance color management and improve
add boundary to the binaryparserexception so that it be not part of the compilation .
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder instead of slotpoolimpl in defaultschedulerbatchschedulingtest
added logging for pending requests and modified PingPongApp to return HIGHEST _ PRECEDENCE and HIGHEST _ PREC
updated RecentChatFragment to implement Toolbar . OnMenuItemClickListener and added toolbar menu item click functionality to enhance user experience by providing a user - friendly
changed ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget `
replaced ` add ( scope ) ` and ` removeTail ( ) ` methods with ` push ( scope ) ` and ` pop ( ) ` methods
updated API and wiki URLs to use " commons . wikimedia . org " instead of " test . wikipedia . org " to ensure the
refactor index handling in Stmt . java by introducing setIndex and updateIndex methods to improve code readability and maintainability by encaps
replaced ` Collections . sort ( ... , ... ) ` with direct calls to ` Collections . sort ( ... ) ` in multiple security classes to simplify
added DateTimePatterns to the formatData _ hr _ HR . java file to support date and time formats in the application
added a call to ` clearFocus ( ) ` in ` DetailFragment . java ` to ensure focus is cleared when the user interacts with
updated selection logic in DescriptionsAdapter and removed unnecessary null checks in SpinnerLanguagesAdapter to improve code readability and maintainability by using a more
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple language files to ensure accurate representation of time
added native methods for registering global , weak , and accessing MyItem in FastGetField . java and refactored constructor logic in Fast
added handling for NULL types in ReflectData and updated corresponding tests in TestReflect to ensure proper default value retrieval for UNION and NULL types
increase timeout in sedablockwhenfulltest from 300 to 1000
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerException when the resource class is not initialized
add a default constructor to the dialect so that it can be use by other dialect .
http component : add the request header ` ` connection : close ' ' to the http producer when the endpoint be close .
increased socket timeout from 60 seconds to 120 seconds in BasicDistributedZkTest . java to allow more time for socket timeouts during tests
add a test to ensure that count of ticket with final status = ' ' free ' ' and final _ price _ cts > 0
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter to improve code structure to enhance maintainability and readability of the code
remove thymeleaf . dom . nestablenode from document . getfirstelementchild ( )
[ flink - 20527 ] [ testdata ] add support for enums in lookup strategy resolver
[ hotfix ] [ runtime ] add waittoshutdown ( ) method that wait for cluster node to shut down
change log level from warn to info for non - cached beans in ELContextCleaner . java to provide clearer feedback on the absence of cached beans
added a new variable ` mContentType ` set to " application / octet - stream " in ` WebdavEntry . java ` to ensure the
added a method to retrieve the queue size in LazyTraceThreadPoolTaskExecutor and created corresponding unit tests to ensure correct behavior of the ThreadPoolTaskExecutor
[ geot - 4892 ] distanceop : do n ' t use bound box for line that do n ' t match the min distance
changed the variable name from ' required ' to ' requiredLabel ' in AbstractUITag . java to improve clarity by using a more descriptive
removed the ` next ( ) ` method and added ` updateProgress ( ) ` in ` PurgingPartitionIterator ` to streamline the iteration process by
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated references in ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access to the
added validation to ensure polygons contain at least 3 points and updated localVertices assignment accordingly to ensure that polygons contain at least 3 points and prevent
replaced ` ObjectMapper ` instantiation with ` ObjectMappers . newDefaultInstance ( ) ` across multiple test files to improve code readability and maintainability by
added null check for ` coeff ` before initializing ` coeffSquarefree ` to avoid potential NullPointerExceptions when ` coeff ` is null
updated ExternalNameRecord to read Unicode names correctly based on multi - byte flags to ensure correct handling of unicode names in case of bug 47384
updated the description of the JMS Destination type from ' QUEUE ' to ' TOPIC ' in AbstractJMSProcessor . java to clarify the
added functionality to return username and password based on the ` returnLoginPrompts ` flag in ` LoginInfoEndpoint ` to enhance user experience by allowing
replace ` remove ` method with ` removeIf ` for listener removal to ensure that listeners are removed only when the same listener is present
added a case for the toggle spin action in PieChartActivity to enable spinning the chart based on the current rotation angle
vmware : kill copy process when vhd to secondary storage fail
hbase - 24113 hmaster . getstate ( ) should skip normalization if the namespace have a quota . patch by jbellis
updated import statements in AndroidInput . java and added a resize method to improve code readability and encapsulate pressure handling logic
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and updated annotations in ` PropertySupport . java ` to improve test
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to temporarily disable the test due to blocking PRs
fix the hopperhock be able to place item in the wrong place
added an authentication dialog with username and password fields in SsoWebViewClient . java to enhance user experience by providing prompts for authentication requirements
refactor TestStressIndexing2 to improve document handling and add deleteDoc and deleteByQuery methods to enhance code readability and maintainability
[ flink - 22559 ] [ test ] disable upsertkafkatableitcase due to flink - 22559
replaced ` get ` method with ` computeIfAbsent ` for retrieving types and updated variable assignments for clarity to improve code readability and maintainability
added configuration to accept single values as an array in DefaultEntityMapper to ensure proper handling of single - value arrays in JSON processing
updated localization message to include " BE , UK , and SL . " to provide clearer localization information for users
use resourceutils . getstring ( ` ` app . categories ' ' ) . split ( ` ` , ' ' ) instead of a hardcode
updated ASTBuilderVisitor to visitRelExpression instead of visitExpressionInstanceOf and added new test cases for instanceof expressions to improve expression parsing functionality and ensure correct
nifi - 13636 : added mime . type attribute to gethttp ' s gethttp method
[ fhir ] fix a bug where a conditional delete and update on the same resource cause a nullpointerexception
replaced exit button with done button in HelpActivity . java and added a searchable check in SearchBookContentsActivity . java to enhance user experience by
refactor NatsConfiguration to improve configuration handling to enhance maintainability and readability of the code
refactor ` invalidateStalePartition ` method to ` invalidateStalePartitions ` for better clarity and efficiency to improve code readability and maintainability by
make viewresultsfullvisualizer use circularfifobuffer and unboundedfifobuffer when no result set
updated icon resource references from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to improve clarity and consistency in the icon
replaced ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure the correct data retrieval from the buffer
updated test method names and imports in MocksCreationTest . java to use underscores instead of snake _ case to improve readability and maintain
added a constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to
increased the timeout duration for awaiter calls from 10 seconds to 30 seconds and added a sleep delay of 2000 seconds to improve responsiveness and ensure
removed the BuildSlaveFinishedStatusEvent class and its associated event handling from DistBuildRunCommand and DistBuildSlaveEventBusListener to simplify event
vmware : fix utf - 8 encode issue when create template uuid in vmware storage
[ workflow ] add test for deposit workflowitem without a submitter .
added distinct filtering to the classpath files stream in ClassLoaderSupportImpl . java to ensure that distinct classpath files are processed
removed the static method ` isBoxedPrimitive ` from the ` Unbox ` class to streamline the code by eliminating unnecessary methods
replaced ` equals ( arg . get ( arg ) ) ` with ` indexOf ( arg . indexOf ( arg ) ) ` for flag handling to improve
added logic to check if a table is external before deleting the directory to ensure that external partitions are only deleted when the table is not external
hive - 13636 : hiveserver2 should use a queue for async operation ( sergey shelukhin , review by ashut
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for service and component names instead of a hardcoded string to improve code readability and maintain
fix a bug in the list of conferencingsip that lead to incorrect conferencing on sip and sip .
add clearentries ( ) method to flutterlogtree and call reload ( ) .
added a condition to return ` _ oshut ` and ` _ socket . isOutputShutdown ( ) ` in ` ChannelEndPoint . java `
refactor SetNullableGenerator class to improve readability and maintainability to enhance code clarity and maintainability
added option to turn off servlet transport for camel - example - reportincident
replaced specific imports with a wildcard import and modified content type handling in NettyRoutingFilter and FormIntegrationTests to streamline import statements and improve
added Swagger operation annotations and implemented a new hello method in AbstractBaseService , MyBaseService , MyEndpointWithInterface , and MyService classes
refactor Lwjgl3Application and Lwjgl3Window to simplify lifecycle listener handling and improve clarity to enhance code readability and
updated the FG _ FK color value from 90 to 200 to improve the visual quality of the UI
make mp3 a required format for sound to be compatible with web
[ hotfix ] [ test ] improve secondaryindexmanagertest . testrunindexwithindex
pmd : add more information about the eclipse version
[ hotfix ] [ test ] use optional in customserializationitcase
refactor MediaFormatUtil to improve code readability to enhance maintainability and facilitate future updates
added an override for the isCellEditable method in GeneralTab . java to disable cell editing for better user experience
added a method to determine if unused dependencies should be printed based on a configuration option to enhance user experience by allowing users to decide whether to print unused
add a new variable ` tmpCount ` and modify the ` vscales ` array in ` VocalTractScalingProcessor ` to use a
hive - 15465 : remove unused import of basescalarudftest from testgenericudfconcat and testscalarudfround
added ` hashCode ( ) ` and ` equals ( ) ` methods to ` UaaAuthenticationDetails ` class to ensure proper hashing and comparison of
update testskinningcontrolrefresh to use animationcomposer instead of skeletoncontrol
rename the ` NodeFilter ` interface to ` NodeCountFilter ` and update related methods and variables accordingly to improve clarity and consistency in naming conventions
updated the condition to check if the sync block size is less than or equal to the SYNC _ FETCH _ BATCH _ NUM to ensure
updated debug expression state from 365 to 366 and adjusted type handling in DebugExpressionParser . java to improve clarity and correctness of debug expression
update dependency search logic to check for classpath scopes instead of an empty list to enhance dependency resolution by excluding dependencies that are within the classpath
replaced the tmp ( ) method with dst2 ( T v ) and updated the lerp ( T target , float alpha ) method signatures to improve
initialize the ` args ` array to an empty array instead of null in ` GridHubConfiguration . java ` to ensure that the ` args ` variable
updated ` rustcFlags ` and ` linkerFlags ` to return ` ImmutableList < String > ` instead of ` List < String > `
simonstewart : refactor the code so that it work with the new travis and appveyor framework
added configuration for the DAG name in HiveConf and updated logging in GenericUDTFGetSplits to include the external DAG name to
removed unused import of java . io . File from TileAtlas . java to streamline code by eliminating unnecessary dependencies
refactor output stream handling in EscapeProcessingOutputStream and GradleDaemonExecutor to use AtomicBoolean for closed states and improve error logging to enhance concurrency management and
updated the ` validateQuery ` method to accept an additional ` arguments ` parameter and modified the error message formatting to improve flexibility in error handling by allowing
updated INDEX _ VERSION from 1 to 2 and refactored getTree method in LuceneExecutor . java to improve index versioning and enhance readability
[ hotfix ] [ kryo ] ensure default Kryo serializer registration do not change
added null check before removing configuration properties in BlueprintConfigurationProcessor . java and updated test assertions in BlueprintConfigurationProcessorTest . java to ensure configuration
refactor Boolean handling in MetaStoreDirectSql to utilize BooleanUtils for boolean conversion to improve code readability and maintainability by utilizing Apache
added a call to hideCustomizationDrawer ( ) in mmm Launcher . java and ppp Launcher . java to improve user experience by hiding the custom
added a warning key and refactored related logic in TermVectorComponent and related tests to improve clarity and functionality of warning handling in distributed queries
updated logging behavior based on optimistic types and changed log level from finest to info to enhance logging clarity based on user - defined optimistic types
refactor Expect class for improved readability to enhance maintainability and clarity of the codebase
added UnixSocketConfigurationStrategy to DockerClientFactory and implemented it in DockerClientFactory to enable unix socket access for Docker connections
added JUnit 5 @ Tag annotation and overridden the testEvenLowRateIP method in CloseableDoSFilterTest . java to mark the test
added reactivestreamsnoactivesubscriptionsexception to indicate when the stream have no active subscription .
refactor vectorization methods to use TezWork instead of MapRedTask for improved clarity and functionality to enhance code readability and maintainability by
make stringappender and logdivertappender default to true
fix npe in case there be no gui . gui package be present .
sulong : add support for linkage . isweak ( ) in llvmparserruntime .
refactor multiple Java files including XShareAuto , LoadClassNegative , LoadClassNegative , and ReadFromNoaccessArea to improve code organization and
add test case for defaulttransactionthreadlocal in io . ebeaninternal . server . transaction
added a check for illegal operation handles before verifying success in HiveStatement . java to improve error handling and provide clearer warning logs for invalid operation
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - 14536 - camel - aws secret manager : add support for private key with secret manager
refactor SimpleTree class implementation to improve code readability and maintainability
removed exception message from the email response in UserREST . java to simplify the response format and improve readability
added a boolean parameter ` subTree ` to the ` fromContent ` method and modified the ` fromContent ` constructor to accept it to allow for
updated column width calculation in HSSFSheet and added a new test method in TestHSSFSheet to ensure correct handling of column widths and
added ` configPath ` parameter to the ` Commands . less ` method in ` Builtins . java ` to ensure the correct configuration path is
replaced ` Set ` with ` Collection ` in ` DotWriter . java ` and ` GraphExecutable . java ` to utilize a more flexible collection
( chore ) camel - testcontainers : change default sshd image to 1.0 . 0
http : / / issues . apache . org / jira / browse / amq - 4892 - remove assertion that be break the build
refactor the key generation logic in DefaultGroupKeyGenerator to simplify the handling of multi - valued columns to improve code readability and maintainability by
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and updated related assertions to improve clarity of error handling and
fix a bug where the plug gate can not be place in the input stack .
renamed method ` put ` to ` putObject ` in ` GraphHopperConfigMixIn . java ` to improve clarity and consistency in naming convention
modified visibility setting logic in CellLayout and refactored drag exit method in Workspace to improve readability and maintainability of the code
updated the ` ModifyRequestBodyGatewayFilterFactory ` to handle empty request bodies and added a new test for handling empty request bodies to improve handling of empty
added a check for package accessibility in ConstructorFinder and FieldFinder classes to ensure proper access control checks for package - accessible types
replaced all instances of logger . warn with logger . trace in LoggingHandler . java to standardize logging behavior by using the trace level instead of warn
fix ` whitelistpathsnonrecursive ` for ` * ` ( # 348 )
added options menu functionality for gallery images in GalleryActivity to enhance user experience by allowing users to customize the options menu for gallery images
added caching for the MongoDBService instance and refactored service creation logic to improve performance by avoiding redundant instantiation of the service instance
added tests to replace boolean values with boolean values in InlineConstantMutatorTest to ensure correct formatting behavior for boolean values in mutants
added a blackhole parameter to the decode method in RecordTest . java to enhance the decoding process by incorporating memory allocation
fix : update gapic - generator - java with mock service generation fix ( # 118 )
fix : device thing should skip group address / dpt not according to group address notation
removed the clear ( ) method from dbManager . getWitnesses ( ) to streamline the code by eliminating unnecessary operations
do n ' t throw prestoexception in jdbcpagesink , log sqlexception when abort
refactor stack property handling in NativeError . java to use getter and setter methods to improve code readability and maintainability by centralizing stack management
removed a condition that checks if the path name starts with " . " in DrillPathFilter . java to simplify the code by eliminating unnecessary checks
renamed ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration ` to
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared during tests
updated the BOLDWEIGHT _ NORMAL constant value from 190 to 0x190 to correct the BOLDWEIGHT _ NORMAL value for font
changed ` fThreadGroup ` to be ` volatile ` and made ` fLookForStuckThread ` final in ` Timeout ` class to ensure
refactor ValueResultData constructors for consistency and clarity to improve code readability and maintainability
updated hashCode and equals methods in FuzzyQuery to use superclass implementations to improve performance and clarity by using the superclass ' s hashCode and equals methods
removed unnecessary System . err . println statements from PushedResourcesTest . java to streamline output for better readability and maintainability
changed return types of ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` and ` List < SharedRandomAccessFile > ` to `
updated JDBC driver version assertions from 2.5 . 1 to 2.6 . 0 in tests to ensure compatibility with the latest database driver versions
updated the ` retrievePersonAttributes ` method to return a resolved principal instead of using ` context . getPrincipalFactory ( ) . createPrincipal ` to
changed log level from info to warn for various log messages related to USB Gateway and BUS Gateway to improve log granularity for better
renamed methods in Hashing . java from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency
added a constructor to ` ThumbnailGenerationTask ` to initialize ` storageManager ` and ` mImageViewReference ` to ensure proper handling of null values
modified the loop condition in GroupSelectionQuery to check if the number of attempts is less than 5 to ensure that the loop does not exceed the maximum
added a new file Bug1933922 . java that implements a class to manage and retrieve program information from multiple threads
removed unnecessary parentheses in conditional statements across multiple classes to improve code readability and maintainability
updated character validation check from ` c < 33 ` to ` c < 32 ` in ` FileResolver . java ` to ensure correct handling of control
added a call to requestFocus ( ) in the Display class to ensure the component receives focus before proceeding with further operations
update test data and add final home page test data
rename ` JsonParserAsync ` class to ` JsonStreamParser ` and update related references to improve clarity and consistency in naming conventions
updated Crouton handling in DetailFragment and MainActivity to improve user feedback and user feedback during activity pause
[ iotdb - 4892 ] fix npe when query schema template with * * *
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
replaced the direct execution of a process using ` Runtime . getRuntime ( ) . exec ( args ) ` with a built - in process using ` ProcessBuilder
[ java ] use 127.0 . 0.1 instead of java . net . inetaddress . getlocalhost ( ) in hinthandofftest . java
refactor subsystem assignment to use a loop for each controller name to improve code readability and maintainability by reducing duplication
added assumptions to check for macOS platform support in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed when the device supports
refactor jvmciversioncheck to use a helper method to check required property
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
updated TestLargePageUseForAuxMemory . java file to improve performance and readability of the test code
updated ` BinaryParser ` , ` PlainTextParser ` , ` ParsingExecutionContextView ` , and ` ParsingExecutionContextView ` to include character encoding handling
added a default value for ` _ multiPartFormDataCompliance ` in ` HttpConfiguration ` and created a new enum ` MultiPartFormDataCompliance ` to
added GradleVersion version " 7.2 " to GradleDistributionManager . java to ensure compatibility with JDK - 17 in the project
refactored type addition logic into a new method ` addType ` in ` SnapshotControl ` to improve code readability and maintainability by central
refactor Term class to improve code readability to enhance maintainability and facilitate future modifications
updated return statement to handle null or empty runWith cases to improve robustness by preventing potential NullPointerExceptions
add a test to show that xaresource and xasession do n ' t conflict with the same xaresource
refactor multiple Shadow classes to improve code structure to enhance maintainability and readability of the codebase
pdfbox - 4892 : add test for pdf417 , a suggest by valerybokov
replaced direct calls to ` setDimAlpha ` and ` setIconColorTint ` with a new variable ` mTintAmount ` to improve
added a new file ` SumZeroAggr . java ` implementing a new aggregation function named ` sum0 ` to provide functionality for aggregating
updated SQL column identifiers in FirstValueFunctionIT . java and NthValueFunctionIT . java to ensure consistency in data types for improved readability
hbase - 26113 improve bucketcache . getallocationfailwarningmessage ( ) to include bucketallocatorexception
added a null check for propName before adding it to the roleObject ' s properties to avoid potential NullPointerExceptions when propName is null
added ` @ VisibleForTesting ` annotation to several fields and modified method visibility in ` StatusBarTouchController ` , ` RecentsView ` , and
added methods to log container streams in DockerClient to allow control over container logging behavior
add a performance test for mvstore cache performance
change primitive type from " L " to " J " in PrimitiveType . java to ensure compatibility with Java naming conventions
changed the method ` delegatingApplicationListener ` from instance to static to allow access to the ` delegatingApplicationListener ` from other classes
set the message body to null in the exchange in RestBindingAdvice . java to ensure that the message body is properly reset before processing
added FileDeletingTasklet and TaskletJobFunctionalTests classes to handle file deletion and job functional tests to ensure proper file management and unit
euclideanview : add updatesizekeepdrawables ( ) to prevent update of drawable size
updated bit manipulation logic in BitUtil , Int2IntCounterMap , Int2IntHashMap , and Int2IntHashMap to include the ' java
updated the ` sendEventToTest ` method to accept an integer state ordinal and modified related method signatures to use this new parameter to enhance event handling
added user agent handling for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on user agent
update errorcheckerservice to only scroll to the correct line if there be a problem
added conditional logic to layout the menu button based on the theme settings to enhance user experience by allowing different menu button layouts based on theme settings
updated Skia . java and Skia . java files to include " libskia " and modified preload settings to include " libskia "
add ` ` com . google . bitcoin . unittest ' ' to networkparameters # getunittests ( )
added handling for invalid format arguments in QueryCommand and corresponding integration tests to ensure proper error handling and validation of format arguments for query functionality
updated variable names from ` capacity ` to ` length ` for clarity and consistency to improve code readability and maintainability by using a more descript
added a new parameter ` srcTarget ` to the ` walkRuleAndAdd ` method and modified its usage in the ` walkRuleAndAdd `
add support for override module file in netbeans .
[ java ] remove the check for protocol version when compare candidatetermid in election .
added conditional logic to set SINGLE _ SESSION _ PER _ ACCOUNT or ALWAYS _ NEW _ CLIENT based on SAML authentication status to
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure that required resources are not null when building a ReadBatch or Write
[ java ] use utils . close instead of try - catch block .
refactor AnonymousAuthenticationFilter to utilize a deferred context management approach to improve clarity and maintainability of the authentication process
modified the ` removeActor ` method to include an ` unfocus ` parameter to enhance the functionality of the ` removeActor ` method by allowing the
refactor the configuration prompt to use a variable for valid configurations to improve code readability and maintainability by reducing redundancy
added logging functionality to Netty server and routing in NettyHttpServerConfiguration to enhance logging capabilities and improve response handling in the HTTP server
refactor multiple classes including DatumAliases , AbstractParser , Formattable , Formatter , and Parser to improve code organization and maintainability
replaced a direct call to the update ( ) method with a SwingUtilities . invokeLater ( this : : update ) to improve responsiveness by ensuring the
camel - 14136 : add support for groovy language in camel - groovy - shell . thanks to stu hood for the patch .
( chore ) camel - jbang - plugin - maven - plugin : use collection . empty _ map instead of list .
make clioptions . createpythonprogramoptions ( ) and clifrontendparser . parsearguments ( ) public
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to improve test
added logic to retrieve the storage alias and retrieve the certificate chain from the storage key to ensure the correct certificate chain is retrieved from the storage key
do n ' t throw an exception if we ca n ' t convert the response to json to bean
change access modifier of updateImage ( ) method from private to protected in ImageButton . java and ImageTextButton . java to allow subclasses to access
fix # 49881 , # 49882 , # 49883 , # 49884 , # 49882 , # 4988
added spatial location calculator configuration methods to DataOutputQueue and depthai classes to enhance functionality for spatial location calculator functionality
refactor multiple Java classes related to community detection and ranking to improve code organization and maintainability
updated the ` isEmpty ( ) ` method in ` TreeTrie ` to use a new ` isEmpty ( _ root ) ` method to improve readability
updated foreground and background method calls in AttributedStringBuilder to include both r and g and b parameters to improve code readability and maintainability by using
added a condition to ` doFingerprint ` based on the " solr . disableFingerprint " system property to enable fingerprinting based on the system ' s
changed the visibility of the moveFunds method from private to public to allow access to the method from outside the class
removed redundant ` BeforeConvertEvent ` calls in ` MongoTemplate . java ` and added new test cases in ` MongoTemplateTests . java ` to
fix settransactiontest and collectioncontainer to use writeobject ( ) and writeobject ( ) .
close the inputstream on exit ( ) to prevent memory leak .
updated the ` modify ` method to accept an array of ` ApiException ` instead of an ` ApiBag . ExceptionWithErrObject ` to improve error
removed unnecessary line breaks in the configuration loading process to improve code readability and maintainability
do n ' t use ` ` longfsname ' ' for error message in test
[ hotfix ] [ runtime ] remove unnecessary ` ` throw exception ' ' from constructor
removed the ' step ' parameter from the DisplayTextVirtualDatapoint and HmDatapoint classes to simplify the code and improve readability by eliminating
updated logging messages and added exclusive and shared lock handling in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of lock acquisition
[ hotfix ] remove redundant call to schedulejobs in baseschedulerserviceimpl
simonstewart : fix lameness of testgettextcontent
refactor Logger class to use a ThreadLocal < Logger > for better logging management to improve thread - safety and maintainability of the Logger class
make ` convertTocompilationcompilationunit ` method visible for testing .
added primitive type handling in ` Types ` and refactored type checking in ` Infer ` , and created a new class ` T6995
reset ` mFocusedTaskViewId ` to INVALID _ TASK _ ID and update orientation state if ` newFocusedTaskView ` is not null
hbase - 24413 use getregions ( tablename ) instead of liveregionserverthreads ( ) in testflushfromclient
added logic to delete a cache track if it has a contract details and update storage keys to ensure that the new contract details are properly managed and saved
updated TOKEN _ ISSUE _ FEE constant to retrieve asset issue fees from dynamic properties instead of a hardcoded constant to enhance flexibility
refactor cache management by replacing apMap and texCache with URI - based caching to improve cache management and ensure proper cleanup of textures based on
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to address a bug related to
added functionality to check if a component is unselected and updated string width calculations to use the new method to improve handling of string widths for un
initialized ` mappings ` , ` currentActions ` , ` currentActions ` , ` currentAction ` , ` currentAction ` , and ` statsList
removed the flags parameter from multiple method signatures in ShadowApplicationPackageManager . java to simplify method signatures by eliminating unnecessary parameters
refactor PingRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
remove check for api > = 25 from test
[ tradfri ] check for tradfri device version before try to upgrade to new one .
refactor AjaxElementLocator to improve code readability to enhance maintainability and facilitate future updates
updated the display condition in BoxLayout and DefaultLayout to include " table - cell " in addition to " inline " to enhance layout handling for additional display
refactor JsonDecoder to handle both START _ ARRAY and END _ ARRAY tokens more effectively to improve readability and maintainability of the code
updated the removal listener to include a removal cause parameter in the releaseLocation method to enhance flexibility by allowing the removal of specific block cache locations
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added two @ Test annotations to DroolsMvelParserTest . java to enhance test coverage for the parser functionality
changed private fields to final in ContextRegisterListener . java to enforce immutability and enforce immutability of fields
refactor ObjectHashSet to allow optional caching of ObjectHashSetIterator and update test cases accordingly to enhance flexibility and maintainability of the iterator implementation
added batch byte handling and validation in SparkReduceRecordHandler and ReduceRecordSource to ensure that batch sizes do not exceed a defined limit for
updated context modes in AppSettings and UpdateUtils from MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE to
updated logging messages in JdbcProxyGenerator to clarify the purpose of the close ( ) method and enhanced exception handling in the close ( ) method to improve
updated animation state retrieval to use mState instead of getState ( ) and added accessibility important for accessibility to enhance animation responsiveness based on the
change log level from warn to debug for various log messages in ProtobufLogReader . java to improve log granularity and reduce log verbosity
updated scope substring handling in UaaTokenServices and added tests for persistRevocableToken method in UaaTokenServicesTests to ensure correct scope
updated import statements and modified the class name from TestAvailableJDBCDrivers to AvailableJDBCDriversTest to improve clarity and
[ k8s ] add executablecommand interface to allow to execute command
remove jdbctableservice since it ' s no longer use .
added padding getter methods for different orientation in CellLayout . java and updated bitmap creation in Launcher . java to improve padding handling for portrait and landscape
added a conditional check to determine cands based on the length of the buffer before filtering possible candidates to avoid potential NullPointerExceptions when the buffer
refactor SamlMetadataUIParserAction and related classes to use Action type instead of SamlMetadataUIParserAction to improve code clarity and maintain
added a method to check for LDAP processes using specified ports to improve test reliability by checking for available LDAP ports
log4j2 - 1334 make sure log4j2 shutdown executor service do n ' t block on shutdown .
updated URL handling and logging for content and protocol redirects in Fetcher . java and modified refresh logic in HTMLMetaProcessor . java to improve logging
updated SolrQuery and assertions in TestSpellCheckResponse . java to use " name : samsang " instead of " * : * "
karaf terminal : use new karaf console api if available
change visibility of getVerticesColors method from public to private and update mCol initialization logic to enhance encapsulation and ensure compatibility with bMesh
added a FileFilter to exclude timestamped reports directories and updated the copyDirectory method to exclude timestamped reports directories to ensure that timestamped reports are not
refactored test method names and refactored parameterized test methods in DataValidatorTest . java to improve readability and maintainability of the test
pdfbox - 4892 : remove unused method from pdfparser
added a null check for ` bindStatus ` in ` FieldUtils . java ` to ensure that a valid expression is used in the appropriate context to
removed debug print statements from JoglInput . java to clean up the code and improve readability
added a boolean flag ` allowExtractingPrivateFields ` to ` FieldSupport ` and modified the ` readField ` method to accept it to allow
added a replacement for the device name in WebDataHandler . java to ensure the device name is correctly represented in the web data
added a fallback constructor for Lookup in Platform . java to improve compatibility with Java 8 by using MethodHandles for instantiation
added new methods ` weights ` and ` weightsByDouble ` to the ` ZParams ` class and deprecated the old ` weights ` method to improve
added a Database parameter to the writeCustomHTML method across multiple writer classes to enable database - specific functionality in custom HTML writing operations
added assertions for null values and simplified key deserialization in BTreeMap . java to ensure proper handling of null values and improve code clarity
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to throw BalanceInsufficientException instead of Exception
add a system property to disable the zero file for profiler heap
replaced ` println ` statements with ` sendMessage ` calls in ` Main . java ` and removed unnecessary logging in ` ChangeSet . java ` to improve
updated the buffer size from 14 bytes to 13 bytes in HortonworksEncodedSchemaReferenceStrategy . java and removed a generic record in Hortonworks
added imports for ChunkListener , ItemProcessListener , ItemReadListener , and ItemWriteListener in various batch - related classes to utilize the
refactor code formatting and improve readability in AbstractProviderModule . java to enhance code readability and maintainability
updated variable names in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser for consistency to improve code readability and maintainability by
updated Test7005594 . java file to improve test coverage and maintainability
removed subtype from the error message in ResourcesValidationProcess . java to simplify error messages for better readability and maintainability
refactor TopKRollupPhaseOneJob class to improve code readability to enhance maintainability and facilitate future updates
server : do n ' t map ipv6 address to vm in case of failure .
update gamepad to support analog trigger
refactor ` iteratesOverSequence ` and ` iteratesOver ` methods to use ` Iterable < T > ` instead of ` Object ` to
added a check for the length of the header value before applying filters to headers in DefaultHttpBinding . java to ensure that headers are only added with
added assertions to verify the correctness of various SQL queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the test functions correctly
added a new ` LargeValueFormatter ` class and updated ` BarChartActivityMultiDataset ` and ` BarLineChartBase ` to use it to
replaced hardcoded characters with a constant for INNOCUOS _ CHAR in CommentsParser . java to improve code readability and maintainability
remove @ suppresswarnings ( ` ` argument . type . incompatible ' ' ) from platform
updated printLir call formatting in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency in formatting
added a TODO Auto - generated method stub in NullAssertionValidator . java to enhance code readability and maintainability by eliminating unused stubs
added a check for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure that rule keys are correctly appended to the rule key
added system profile directory creation and improved test setup and teardown methods in multiple test classes to ensure proper setup and cleanup of system properties during tests
refactored the creation of ThreadFactory and NioEventLoopGroup in TestcontainersDockerCmdExecFactory . java to improve code readability
refactor HttpChannelOverHTTP and HttpReceiverOverHTTP to use LongAdder for message counting to improve code readability and maintainability by central
added an " accept " attribute to the element in ImageFileInputDialog . java to enhance user experience by allowing multiple image files
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient instead of NodeBuilder to improve transport client configuration and streamline test
added witness and witnesses class information to the ForkController to enhance debugging capabilities by providing more context about the witness and witnesses classes
added a new file ` NullPointerAndEmptyArrayTest . java ` to test the behavior of ` NullPointerAndEmptyArray ` with URL arrays to ensure
removed the method ` findConfiguredGeneratedSourcePathsUsingDeps ` from ` BaseIjModuleRule ` and modified ` AbstractIjProjectBuck
updated UaaStringUtils to handle wildcard patterns with an optional replacement function to enhance security by escaping special characters in regex patterns
added validation for map and table scan operator aliases in Vectorizer . java to ensure proper validation of map and table scan operations
replace MockitoJUnitRunner with MockitoJUnitRunner and modify exception handling in WeatherQueryTest . java to improve compatibility with the latest Mockito library and
added error handling for setting firmware settings in TinyGFirmwareSettings . java to ensure that firmware settings are correctly set and log
replaced specific imports with a wildcard import and modified the getLangs method to return a Set of language strings instead of an array to improve code
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java and modified assertions in LazyTraceScheduledThreadPoolExecutorTests . java to improve code readability and maintain
hbase - 25266 add snapshothandler # prepare ( ) method that call loadtabledescriptor ( ) and loadtableinfo ( )
[ j2kt ] make ` ` null ' ' a platform null call .
added a test for verifying the modification of the HTTP _ RPC endpoint in DockerQuickstartTest . java to ensure that the explorer functions correctly
added a volatile boolean field ` isSuspended ` and modified thread state handling in ` Thread . java ` , and updated version checks in ` Test
replaced instances of ` Javadoc . Author ` , ` Javadoc . Since ` , ` Javadoc . Since ` , and ` SerialData `
add a test base on user forum issue
removed redundant @ Override annotations from multiple security - related classes to improve code clarity and maintainability
added module import handling in Java2TypeScriptAdapter and updated test assertions in EnumTests and ComplexEnumsAccess to improve module management and ensure correct
xssfexporttoxml now use http : / / www . w3 . org / 2001 / XMLSchema instead of javax . xml
added content description handling for badged app notifications in BubbleTextView . java to enhance user experience by providing a more informative content description when the
added mouse wheel support to TestMouseWheelScroll . java to enable dynamic scrolling behavior based on the mouse wheel direction
pdfboxrenderer : close docactual and docexpected in visualtester , a suggest by valerybokov
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegrationTests . java
use string instead of object for location in view . getlocations ( ) .
removed conditional currency conversions for DSH , QTM , and QTM in BitfinexAdapters . java to simplify currency retrieval logic and
replaced HashSet with ImmutableSet and updated field printing logic in JsonFormat . java to improve performance and flexibility in handling optional message fields
remove jacksonxmlformatmapper . writevalue ( byte [ ] . class , byte [ ] . class ) from jacksonxmlformatmapper
renamed constants and introduced a new flag ` PARKED _ SUSPENDED ` in ` VirtualThread . java ` to improve clarity
refactor DirectoryTaxonomyWriter to use a final variable for terms and improve method calls to enhance code readability and maintainability by standardizing parameter usage
refactor VetoableChangeSupport class for improved readability to enhance maintainability and facilitate future modifications
modify return statement in BrowserContentPane to adjust the Y - coordinate calculation to ensure correct vertical positioning based on the owner ' s height
pdfbox - 4071 : remove ' throws invalidpasswordexception , ioexception ' from method signature
added unit tests for ` setShortSupportMessage ` , ` setShortSupportMessage ` , and ` setLongSupportMessage ` methods in ` ShadowDevice
ggb - 2121 refactored the code to use for - each instead of iterator , a suggest by valerybokov
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced ` Thread . sleep ( ) ` with ` ThreadHelper . waitUntil ( ) ` in ` BackendInitializerHelper . java ` and added new
updated version handling logic in SwingStartup . java to check for the OLDER release status instead of the latest version to improve clarity and functionality of
added functionality to include generated file comments in XML output to allow users to exclude generated file comments from XML output
updated usage strings in multiple command classes to use wildcard characters for player types to enhance flexibility in command parsing for better readability and maintainability
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused filters to streamline the codebase
add ` ` optionname ' ' to name variable in optionprocessor
added a condition to check if PARALLEL _ CLASSES is equal to PARALLEL _ CLASSES to ensure proper handling of XML
camel - 14136 : camel - jbang - do n ' t register route without act master
fix : remove static import of enums in ctmethodimpl . java
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across the application
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ` shaBase64 ` method to accept a separator parameter and added a test for it in ` ShibbolethCompatiblePersistentIdGenerator
modified the return statement to handle null values for SYSTEM _ ACTIONS _ ENABLED in Parameters . java and adjusted the condition in TestAction .
added a new class ` Person ` in the ` org . apache . maven . it0074 ` package to provide a mechanism for defining a class
remove local address from gossiper . start ( )
updated the method call to use ` toUpperCase ( ) ` instead of ` indexOf ( ) ` for case - insensitivity to ensure consistent
added assertions for timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest . java and updated metadata in SegmentMetadataImpl . java to
updated color import from java . awt . Color to net . sf . openrocket . util . Color and changed foreground color to DARK _
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper handling of disconnect
change the type parameter of the scope hierarchy from String to Class < ? extends Annotation > to improve type safety and flexibility in handling annotation types
simonstewart : fix double overflow when click on an element hidden by double overflow .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added custom JNDI location configuration and logging in JtaTransactionManager . java to enhance JTA transaction management by allowing dynamic JNDI lookup
changed access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from Library . java to simplify the code by eliminating unused functionality
rename ` enabledCiphers ` to ` result ` for clarity and consistency to improve code readability and maintainability by using a more descriptive
[ beam - 11427 ] fix timestamp conversion in bigqueryutils ( # 11487 )
replaced manual null check with requireNonNull method for buffer and user credentials in Identifiers . java and DatabaseConnector . java to improve code readability and maintain
do n ' t use ` ` input ' ' map in ` ` coercevalueforinputobjecttype ( ) ' '
added bounds checking for row and column values in FlightConfigurablePanel . java to ensure that row and column indices do not exceed the table ' s
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure the scroll functionality reflects the visible state of
[ java ] unnecessarylocalbeforereturn no longer report false positive for member selector
refactor script engine initialization and exception handling in AbstractScriptExecutor . java to improve code readability and maintainability by using a single instance of ScriptEngine
simplified correlation calculation in EuclideanDistanceSimilarity and updated corresponding test assertions in EuclideanDistanceSimilarityTest to improve code readability and
do n ' t run incremental backup if sstables do n ' t exist
updated the ` relativize ` method to accept both ` baseDir ` and ` path ` parameters and added validation checks for empty paths to ensure
set default values for column size and decimal digits in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values for column size and decimal digits
updated file deletion logic in DeadLetterQueueWriterTest . java to skip current writer head file 1 . log . tmp to improve test reliability by skipping
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure consistent formatting of
renamed ` ErrorHandlerController ` to ` Error403Controller ` and created new ` Error404Controller ` and ` Error404ControllerTest ` classes
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in ` UnixTerminal . java `
enable tinny . collection . toarray ( ) by default
refactor the connection removal logic in ConnectionPool . java to use an iterator to improve code readability and maintainability
updated method names and variable names from ` getDateConverter ` and ` setDateConverter ` to ` getLdapDateConverter ` and ` setLdapDateConverter
pdfbox - 4892 : add a check for the existence of an ID _ TREE in the destination file
updated error message formatting in JavassistUtils . java to improve readability and maintainability of error messages
added exception handling variables and adjusted thread join duration in LargeStreamletTest . java to improve exception management and allow longer wait time for reader and writer
updated the page navigation logic in HomeFragment to allow dynamic additional pages based on user preferences to enhance user experience by allowing dynamic page navigation based on user
added error handling for Gaussian image creation in AndroidImplementation . java to improve robustness by catching potential exceptions during bitmap creation
removed the ` suppressNode ( ) ` method from the ` BaseParser ` class and added the ` @ SuppressSubnodes ` annotation to improve
refactor FDFParser initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed in the project
added a shell command to execute a key event in AbstractLauncherUiTest and modified the assertion in LauncherInstrumentation to ensure the device is locked to
added functionality to map filenames to URLs using ObjectMapper in FileDumper . java to provide a mapping of filenames to URLs for better
[ java ] reset the profiler server ' s notified flag after each test .
make texturehelper . loadimage ( ) protect to allow subclass to override it .
updated the expected ID in tests from " application : " to " application " to ensure the correct context ID format is used in tests
updated the ISBN generator ' s seed and locale from " 9781797745008 " to " 9781797845005
added ringtone support to the notification sound setting in AlarmReceiver . java to allow dynamic notification sound selection based on user preferences
added a new method ` reportLoopCount ` to the ` RootNode ` class to enable reporting loop counts based on the call target ' s loop
added a conditional check to finalize the cluster version in FinalizeUpgradeAction . java and modified the cluster entity merging in ClusterImpl . java to ensure
[ iotdb - 4306 ] fix ip address search by regionid instead of rangeid in portableipdaoimpl
removed redundant call to streamManager . open in ItemOrientedStep . java to streamline code by eliminating redundancy
added a new file CountedLoopProblem . java that generates a random number with a string to provide a demonstration of the behavior of a counted loop
remove unused ` nmethod ` parameter from compilertovm # executecompiledmethod ( )
[ gr - 21144 ] fix graalhotspotvmconfig . getfieldoffset for java . lang . long field .
refactor KafkaStreamsTracing to use ValueTransformerWithKeySupplier instead of TransformerSupplier for peek and mark methods to improve type safety and clarity in
update constant sum question to include received point
added DynamicColors . applyToActivitiesIfAvailable method call in BaseApplication . java to enable dynamic color application based on available activities
added thread management and stack dumping functionality in CloseRace . java to improve error handling and debugging for child threads
updated return statement to convert ` val ` to ` val . intValue ( ) ` in ` IntPointField . java ` and added new assertions in
updated the arcSize variable to use a fraction of the width and adjusted related calculations to ensure correct calculation of the arc size based on the current width
updated image dimensions from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to adjust image size
replaced ` minifySqlEnabled ` with ` shrinkWhitespacesInSql ` and updated related methods in ` SqlSourceBuilder ` and ` SqlSourceBuilder
refactored state transition handling in AbstractLauncherUiTest and WorkProfileTest to improve clarity and functionality of state transition tests
added imports for CasCoreConfiguration and CasTicketsConfiguration in multiple test classes to ensure compatibility with the new configuration structure and improve code
replaced ` raf . read ( ) ` with ` raf . readFully ( buf ) ` and updated byte array access methods to use ` DataIO .
camel - 13636 : camel - fluent - http should not log debug message when debug be enable .
refactor ClasspathInfo creation to use separate bootCP and systemCP paths to improve code readability and maintainability by separating bootCP and system
automation : add mediascriptscopeprovider to allow customization of script scope .
added methods to get and set layer managers in AnimComposer and updated AnimEvent and TestJaime to utilize these methods to improve
added a check to return early if the queue size is zero in DeferredHandler . java and removed the default screen method from Workspace . java to improve
added null checks in MapRecordProcessor and modified exception handling in TezProcessor to improve robustness by handling Throwable instead of Exception
refactor CylinderRegion and CylinderRegion2D to use Vector2D instead of Vector and Vector to improve clarity and consistency in
refactored testbadusecases to use expectedexception . none ( ) instead of try - catch block .
updated QueryExecutorImpl to handle null subqueries and added a new test method in StatementTest to improve robustness by ensuring subqueries do not contain
do n ' t print ` ` customization ' ' message when use visualvm - security
added a new parameter ` rctag = android% 20app% 20edit ` to the ` @ GET ` endpoint in ` ReviewInterface . java
refactor test cases in Test . java to improve code readability and maintainability
updated PBEKeySpec to use keyLength instead of blkSize to ensure correct key length is used for key generation
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a call to ` writeSectionDefinition ( ) ` in ` RtfDocumentHeader . java ` to ensure section definitions are written correctly in the
added location accuracy check and logging for very large jumps in GpsLoggingService to ensure accurate logging of large points during GPS tracking
removed some debug print statements from TableLayout and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 51 )
refactor InsightFilter class to use ` Reference < Object > ` for ` rootNameFn ` and ` sourceFilterFn ` to improve memory
removed binary search for the first element of the data and added lists in AllAppsList . java to simplify the code and improve readability by
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` in ` SettingsActivity ` and removed ` ThemedPreferenceActivity ` class to simplify the
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of the class for
updated assertion syntax in FST . java for consistency to improve code readability and maintainability
added an assertion to verify the existence and existence of the security policy to ensure that the security policy is valid and prevent runtime errors
camel - 13636 - camel - olingo2 - fix camel - olingo2 test failure on camel - olingo2
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread synchronization during tests
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by removing unnecessary exception handling
added functionality to send and publish images via HTTP in XMPPClient and XMPPActions classes to enable users to upload files via the HTTP file upload
camel - 14197 : camel - netty - producer should not use channellocal a a channellocal for producer state .
updated URL regex pattern in BalancedClickhouseDataSource and added unit tests for valid and invalid host names in BalancedClickhouseDataSourceTest
remove the system property set for the " org . apache . jasper . compiler . disablejsr199 " property in FragmentActivator . java
added support for handling null string values in CSV records to ensure proper handling of null strings in CSV processing
added LiquibaseService import and annotation to OfflineConnection , DerbyConnection , HsqlConnection , HsqlConnection , and SybaseASA
update variablenameutils to work with javasourcefile instead of j . compilationunit
update event . topics for smarthome / items / command and itemstatetriggerhandler
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to align exception handling with
deprecated the " zkCredientialsProvider " case in ` SolrXmlConfig ` and added corresponding assertions in the ` TestSolrXml ` class
remove the mana tablet ' s durability bar from the inventory . close # 325
added a method to set the identifier collection in the current call event to ensure the identifier collection is correctly populated for the current call event
removed unused imports for DictionaryCompoundWordTokenFilter in TestRandomChains . java to streamline dependencies and improve code clarity
updated the thread pool name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " in ScryptUtil .
refactor GeneratedCode class to improve code readability to enhance maintainability and facilitate future updates
added a null parameter to the assertNotNull method in TypeDefinitionRegistry . java to provide a clearer error message when the definition cannot be null
added visibility setting for shareWithMeIcon in LocalFileListAdapter to hide the sharing icon when not needed
updated the link to the Bootstrap CSS from " http " to " https " in multiple filter classes to ensure consistent URL usage across the application
updated RouterFilter and RouterServerListFilter to enforce non - null headers and changed method name to getOrLoadSortedService to improve code robustness
enhanced assertion message in TestIndexWriterMergePolicy . java to include additional context to improve debugging by providing more context in assertions
[ hotfix ] [ runtime ] deprecate deprecate multilayer and multilayer perceptron
add a null check for the context in CrawlerSessionManagerValve and implement a test for multiple contexts in TestCrawlerSessionManagerValve
added security checks to the getJspApplicationContext method to ensure proper context retrieval based on security settings
replaced the variable ` l ` with ` minL ` and ` maxL ` and updated the calculation of ` length ` based on the component '
added Singleton annotation to NonceService and modified its bind method to use Scopes . SINGLETON to enhance dependency injection flexibility for NonceService
update child link in the file wrapper when a commit be update .
refactor method parameters in SpringCloudPlugin . java for consistency and clarity to improve code readability and maintainability by standardizing method parameters
reduce publishWithDelay parameter from 100 to 500 milliseconds in RetrievalBlockingMessageStoreTests to improve test reliability by allowing more time for publishing messages
added a new boolean variable ` mShiftCodesAlwaysOverride ` and modified the logic for setting ` mShiftCodesAlways ` based on its value to
[ hotfix ] [ runtime ] fix the isleader method to check if a node be the leader of the cluster .
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the identity filter condition in AbstractKerberosDescriptorContainer . java to check if the identity is a reference instead of a non - null name to improve
updated the ` newInstance ` method signatures in ` ArtifactCacheFactory ` and related classes to accept a ` noop ` parameter instead of ` AbstractCommandOptions
added a sleep delay before catching IOException in TestListenTCPRecord . java to ensure proper handling of interrupted exceptions during testing
updated the handling of method arguments in PatchExtensionMethod . java to ensure consistent handling of original arguments to avoid potential null pointer exceptions
replaced ` Map < String , RawNativeLibraryImpl > ` with a ` Set < RawNativeLibraryImpl > ` for managing native libraries to improve
added namespace support for ' apply - sequence ' and ' ignore - send - failures ' attributes in DefaultRouterParser and AbstractChannelNameResolving
removed the ` x509PublishUrl ` and ` x509ViewName ` fields from ` ClientKeyPublisherMapping ` and ` JwkViewResolver
modified the handling of readers in QueryComponent to ensure a single reader is assigned when there is only one reader to avoid potential ArrayIndexOutOfBoundsException when the
replaced the custom ValueSourceParser for " max " and " min " with new Double2Parser implementations that use Math . max and Math .
simplified the return statement in the Container class to improve code readability and maintainability
removed unused variables ` n ` and ` minScore ` from ` Highlighter . java ` and modified the ` next ( ) ` method signature in
cloudstack - 5292 : fix npe when delete user account
added ` @ ConditionalOnWebApplication ` annotation and modified ` flowBuilderServices ` field in ` CasMultifactorAuthenticationWebflowConfiguration ` to
updated WriteJdbcPTest . java to adjust database connection settings and improve SQL command formatting to enhance test reliability and ensure proper resource management during database operations
remove the conditional check for the " editor . laf " setting in DefaultPlatform . java to simplify the code and improve readability
replaced calls to ` getStateEntity ( ) ` with direct access to ` desiredStateEntity ` for consistency to improve code readability and maintainability by
simplified calculation of left and right position in FloatingTaskView . java to improve readability and maintainability of the code
added a condition to break if the application is not running in RootFolder . java and updated the status line display in NavigationShareTab . java to
bugfix : threadid in cpucallgraphbuilder do n ' t increment correctly .
remove dock panel from desktop , since it ' s not available in desktop .
added NetworkAddressChangeListener to HomekitImpl and updated log messages to reflect network address changes to enhance network address management and improve logging clarity
updated lease renewal time retrieval and assertions in TestHDFSEventSinkOnMiniCluster . java to improve lease validity checks and ensure correct lease renewal
added ` linkStyle ` to the argument in ` CxxLibraryDescription . java ` to ensure that ` prefixHeader ` and ` linkStyle `
added null check for the message in ExceptionHandlerRegistryFactory and a new test for handling fatal IOException with a null message to ensure robust handling of null
changed the ` nextID ` variable from ` int ` to ` volatile int ` and updated related method calls to improve thread safety and enhance error handling
( chore ) camel - jms : fix test which randomly fail on slow ci server
added ` HasSourcePath ` interface and implemented it in ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` ,
replaced StringBuffer with a direct string representation of the argument in IllegalArgumentException to simplify the error message for better readability and maintainability
added support for custom index field names in OrdinalMappingAtomicReader and updated test cases accordingly to ensure correct handling of tags and ID facets in
modified the ` toEpochMilli ` method to handle negative seconds and positive nanoseconds correctly to ensure accurate conversion of time values when seconds are negative and
update OGLESShaderRenderer and LwjglRenderer to retrieve the attribute name from the getBufferType ( ) method to ensure consistent retrieval of
added functionality to block update scripts in the application to ensure that the application does not block updates during the application
added a new test class TestCMoveLimitType to test character buffer operations to ensure correct handling of character positions in CharBuffer
reset temporal attribute after recording
camel - 13636 : fixed typo in expectedtokensequences - sql - stored - template . xml .
updated vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to align the vendor with the Oracle
refactored color handling and version printing logic in Main and VersionCommand classes to improve code readability and maintainability by encapsulating color
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to use a hashing mechanism to improve security and maintainability of the token validation
make sure we do n ' t swallow eofexception in http11inputbuffer . read
added unit tests for member deletion functionality in DefaultGroupProvider to ensure proper handling of non - existent groups and handle exceptions gracefully
( chore ) camel - core : remove unnecessary object [ ] constructor
deleted the V2ReplicationProtocol . java file to remove unused replication protocol implementation
replaced ` ImmutableSortedSet < BuildRule > ` with ` ImmutableSortedSet < SourcePath > ` for compile time classpath dependencies to improve clarity and
added new classes ` ConstructorArgsDemo ` and ` StrictDemo ` , and renamed ` StupidFinal ` and ` StupidFinal
make directtemplatefeaturecollectionfactory thread - safe to close iterator in threadlocal
updated assertion to allow a maximum of two responses based on the replication factor to ensure correct response count validation based on the replication factor
added a null check for the index number in ItemRowAdapter . java to prevent potential NullPointerException when the index is null
change parameter name from " showAnchestors " to " showAncestors " and introduce a new method to return self if the current node
added a check to return early if the app ' s width is less than 12 to improve performance by avoiding unnecessary processing when the app ' s width
updated the equality check for the change log parameter in ChangeLogParameters . java and added a test for non - global properties in inner files in Change
changed loggers from static to final in LogFactory . java to enforce immutability of the loggers variable
updated return statement to use getBasePlot ( false ) instead of the original plot to ensure that the return value reflects the current plot ' s base plot
do n ' t log a warning if the upload directory do n ' t exist
added a boolean parameter ` sendStatus200 ` to the ` ServerGenerator ` , ` HttpTransportOverFCGI ` , and ` ServerFCGI
added a check to ensure the comment string is not empty before proceeding to prevent potential errors when processing multi - line comments
added file type association handling in BuckModule . java to remove specific file types from the file type manager to ensure that only relevant file types are processed
replaced specific imports with a wildcard import and changed return types from ToLong to ToInt in ComposedUtil . java to simplify import statements
added error handling for unsupported RTM OS and updated test cases for unsupported CPU options to improve test coverage and provide clearer feedback on unsupported OS versions
standardized spacing and formatting in AccountsActivityTest . java to improve code readability and maintain consistency in formatting
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added import statement for ChannelTypeUID and a static method to retrieve its class to ensure proper package imports for testing purposes
fix index out of bound exception in reflective call .
reset ` systemContext ` in ` AndroidTestEnvironment ` and implement ` FontsContractReflector ` interface in ` ShadowFontsContract ` to ensure
added a new method ` toMillis ( long number , DateTimeZone timeZone ) ` and modified date handling in ` PinotDataSourceMaxTime ` to improve
modify control flow handling in ControlFlow . java to handle null finally and break flows more gracefully to improve robustness and prevent potential NullPointerException
refactor assertions in Assert . java and ArrayEqualityAssertTest . java to improve error handling and clarity to enhance code readability and maintainability by
add a default case to the windowclicklogic , so that it do n ' t crash the server .
corrected a syntax error in the index calculation in MeshBuilder . java to improve code readability and maintainability
nifi - 14545 : remove the controllerserviceprovider field from standardprocessscheduler
added handling for AP processor configuration in KotlincToJarStepFactory . java and created a test annotation in KotlinLibraryIntegrationTest . java
updated RESCROLL _ DELAY to use PAGE _ SNAP _ ANIMATION _ DURATION and simplified page snapping logic in PagedView
added shortcut permission checks and updated workspace reloading logic in Launcher and DeepShortcutManager classes to ensure proper permission updates only when required
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle the HISTORY _ SEARCH _ 
added null check for core name in CoreAdminHandler and improved exception handling in CoreAdminHandlerTest to ensure robust handling of null cores and improve
added marker selection functionality in NearbyMapFragment to manage bottom sheet behavior to improve user experience by allowing marker selection in the bottom sheet
added error handling with stack trace printing in FileSyncAdapter to improve error reporting and debugging by providing more informative error messages
refactor test assertions in TestMemoryAwareness to use OutputAnalyzer for better error handling to ensure that OperatingSystemMXBean . getTotalSwapSpaceSize is
added filtering logic to filter out non - centralized feeds based on application settings to enhance flexibility in processing feeds based on application settings
log a warning if the defaultdrmsession be access on wrong thread .
updated packageType and resourceCompressionMode conversions to use Locale . US and added a setPackageType method in AndroidBinaryBuilder to ensure consistent case
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure compatibility with the newer MIME type
updated configuration file reference from ` configFile ` to ` INSTANCE . confFile ` to ensure consistency in configuration handling
removed the sleep 5 condition from the waitUntilReadyAndTimeout call in HostPortWaitStrategyTest . java to simplify the test execution by eliminating unnecessary
updated math imports and variable types from IntMath to LongMath in HiveExpandDistinctAggregatesRule . java to improve compatibility with long data types
added multiple checks for headless environment in mmm and ppp Toolkit . java and ppp Toolkit . java to throw HeadlessException to ensure compatibility with head
update exoflamefurnacehandler to match the furnace ' s world , not just the current recipe .
add ` ` move thread count ' ' to solver ' s info log message
[ te ] search with revinclude do n ' t select wrong resource when revinclude = true
added a new test file ` Issue582Test . java ` to verify the sorting of features in a map to ensure correct functionality and functionality of
added tests for SQL queries to validate overflow behavior for various decimal types in the AbstractTestNativeGeneralQueries class to ensure correct handling of decimal values and
refactor LoadingCache class for improved performance to enhance performance and maintainability of the loading process
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest class to enhance test coverage for constructor methods with class names
simonstewart : add a method to determine if an element be selected or not . this fix the build .
refactored view existence check and added hasView method to DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator to improve error handling and provide clearer view
refactor DOMUtil class to improve code readability to enhance maintainability and facilitate future updates
added translation calculations for task view animations in TaskViewUtils . java and implemented a logMatrix method in Utilities . java to enhance user experience by providing
changed FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a walk method to read arcs from a list of FST . Arc objects and modified output handling in TempTermOutputs . java to
updated the ` create ` method across multiple augmenter factories to include ` SolrQueryRequest ` as a parameter to enhance the functionality of the augmenter
updated SQL trigger checks and added database update logic in SingleTableMySQLTriggerTest . java to ensure proper handling of null content and announcement validity validity
refactor comparator assignment in FieldValueHitQueue and TopFieldCollector to use a dedicated method to improve code readability and maintainability by centralizing
added quotes around column names in expected query strings in PhoenixQueryBuilderTest . java to ensure compatibility with JSON schemas in the query builder
added Spark initialization to the init method in RequesterTest . java to ensure proper synchronization during the initialization process
added methods to manage and retrieve TOTAL _ STORAGE _ POOL , TOTAL _ STORAGE _ LIMIT , TOTAL _ STORAGE
added support for streaming files from a specified directory in the AssetsController and updated related tests to enhance functionality by allowing dynamic URL resolution based on dev
updated the key retrieval method in MapMarksManager to use a specific map mark key to improve code readability and maintainability by using a dedicated
added TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer , DDLSemanticAnalyzer , and DDLSemanticAnalyzer to enhance semantic analysis capabilities by
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` classes to simplify method
do n ' t try to load jxbrowser file if file can not be load
updated file creation logic to use ` . equals ( ) ` instead of ` = = ` for format comparisons to ensure correct handling of JPEG and
[ somfytahoma ] use thing . getuid instead of thing . getbridgeuid ( ) . getid ( )
disable flaky test on github
remove sslcontext . getdefault ( ) and add keystore to test .
added stackTraceWarnThenDebugLogger and introduced NaNGaugeWarnThenDebugLogger for handling NaN values in DynatraceExporterV2 to improve logging clarity
added a call to remove a session from the sessionIdToSessionInfo map to ensure proper cleanup of session information related to the session
added hostname setting for alerts in HeartBeatHandler and enhanced formatting in AlertReceivedListener to enhance alert handling and improve code readability
simplified the logic for checking if buffers are not empty in ChannelEndPoint . java to improve code readability and maintainability by simplifying the logic
fix kmodulexsdtest to work with kie - api
added unit tests for the ` seekTo ` method in ` ShadowMediaPlayerTest ` and implemented the ` seekTo ` method in ` ShadowMediaPlayer `
renamed the ` createTask ` method to ` createThrowingTask ` in multiple executor classes to improve clarity and consistency in naming conventions
added border settings for tabCloseButton based on IS _ AQUA _ LAF to ensure proper styling of the close button when in AQUA _
added HTTP request and connection settings in TSPTimeStampService . java and improved test assertions in TestSignatureInfo . java to enhance HTTP request handling and
add some permission to the xstream utility to allow jbpm and drools - drools to be use .
added validation for diamond application and introduced a new class DiamondRaw with a main method to ensure compatibility with parameterized types and improve error logging for diamond application
[ hotfix ] [ table - common ] fix typo in reloptutil
updated argument validation for setting ID and value in Http2Settings . java to ensure that id and value values are within valid range to improve error handling
deleted the file Issue664Test . java to the test file is no longer needed in the project
added exception handling for session disposal in SessionsPoolTest . java to ensure proper handling of disposed sessions in the session pool
start the root object before the feature collection key in GeoJsonWMSBuilder . java to ensure proper formatting and structure of the JSON object
replaced the method ` setIndex ` with ` intValue ( ) ` for setting the start index in ` PopupMenuButton ` to improve code readability
added a method ` canCurrentlyManuallyUnstash ( ) ` to check the state of ` mState ` and its manual unst
camel - 14246 : camel - route - coverage : remove the use of the customid attribute in camel - xml .
modified the ` getEventMismatchMessage ` method to accept a ` waitForExpectedCount ` parameter and adjusted the event mismatch logic accordingly to improve event mismatch handling
added a new file ` HeaderFixer . java ` that implements a processor for processing header files to facilitate the fixing of license headers in the application
added first load complete broadcast functionality in Launcher . java and updated app widget binding in LauncherProvider . java to enhance user experience by broadcasting the
deleted the SuperJumperAndroid . java file to the project is no longer needed in the project
updated the return statement in SystemTableScan . java to check if the table is distributed and modified the test queries in TestStarQueries . java to
removed the KeyValuesProviderAware and ObservationConventionAware interfaces from the Observation interface to simplify the interface by eliminating unused functionality
add miss item to the registry when load the id remappings
updated return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast the value to long to ensure proper handling of long values in array operations
added caching for date and format strings in HSSFCellStyle . java to improve performance by reducing repeated data format retrieval
updated the URL query in RemoteAuthenticationEndpointTests to include username in the response to enhance security by including username in the response
updated the condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure proper handling of
updated the logging method in Launcher . java to include container information and page index to enhance logging capabilities for the all apps exit event
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
deleted the DeadlockTest . java file to the test class is no longer needed in the project
added null checks and improved marker addition logic in BugContentProvider . java and BugGroup . java to enhance robustness by preventing null pointer exceptions and
added a " Reopen in Browser " menu item to open the JavaScript server in a browser and improved server startup handling to enhance user experience by allowing
added a new semantic exception message for specified multiple times in the SemanticAnalyzer class to ensure that the same output cannot be present multiple times to improve error
updated the ` addEntryListener ` method calls in ` BasicTest . java ` to use ` new EqualPredicate ` instead of ` new Predicate `
fix coordinatearrays . reverse ( ) for case where only one element in the array be return .
removed unnecessary whitespace in ToolbarPanel . java to improve code readability and maintain consistency
added a boolean variable ` first ` and set it to false in ` TestPayloads . java ` to ensure that the first payload is properly initialized
replaced the call to enter overview mode with a call to showOverviewMode to improve code readability and maintainability by using a dedicated method
added a line to set the destination of the message dispatch in NetworkRouteTest . java to ensure the correct destination is used for message dispatching
use integer . max _ value instead of integer . min _ value in messagehandlerinterceptor
fix checkstyle violation in java / util / concurrent / nestedarithmetic / nestedarcranscripttest . java
updated HttpClientRequestImpl to remove writerIndex assignments for pending chunks and buffs to simplify buffer handling and improve test reliability
updated the regex pattern for replacing " analysis - " with " ( ? < ! solr - ) analysis - " in GetMavenDependenciesTask . java
pdfbox - 4892 : use getcosstream instead of getdictionaryobject , a suggest by valerybokov
removed unnecessary print statement in ReferenceUtil . java to streamline code for better readability and maintainability
add ` ` visible field ' ' predicate to check if a field be visible in the schema
added support for ` solidityNodeHttpJsonRpcHttpPort ` and ` NODE _ HTTP _ JSONRPC _ SOLIDITY _ ENABLE
added a type check before removing a drop target from the drag controller to avoid potential ClassCastException when the folder is an instance of DropTarget
refactor stub JAR generation logic into a separate method ` createStubJar ` to improve code readability and maintainability by encapsulating
added new features for the Setup wizard , Probe module , and Workflow helper in StartPageTopComponent . java to enhance user experience by providing functionality
[ hotfix ] [ cassandra ] remove redundant call to schedulewithfixeddelay in cassandradaemon
removed unnecessary type casting for available Boolean in OnlineTestCase . java to simplify the code and improve readability
change return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all user attributes are returned
refactor onIdleTimeout and onFailure predicate handling in HttpChannelState . java to improve error handling and streamline onIdleTimeout task execution
refactor CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable and Invocable . Invocable . NonBlocking to
fix a bug in table header separator parsing when there be only one column .
updated return value from 320.0 f to 315.0 f in Camera . java to improve accuracy of camera intrinsics
added a preference for starting the satellite setup in GpsSettingsActivity and modified return values in Utilities and GeneralLocationListener to remove the 192 . 16
updated the client secret length from 128 to 512 bytes in DefaultOAuth2ClientDetailsEntityService . java to ensure that the client ' s secret is
updated assertions in MySQLStoredProcedureTest . java and PostgreSQLStoredProcedureTest . java to include the ' enablePassingNulls '
ignore scheduledmethodmetricstest due to race condition
refactor methods in SegmentGenerationAndPushTaskExecutor to use PluginManager instead of PinotFSFactory and streamline file system initialization to improve code
added locale - specific date formatting logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting based on the application ' s locale
added MetalLookAndFeel support to the UIManager in bug8032878 . java to enhance user experience by providing a custom look and feel
refactor ping task handling in Bot . java to improve thread safety and resource management to ensure thread safety and prevent potential memory leaks during message sending
removed the ` throwable . getMessage ( ) ` parameter from the error message assignment in ` GlobalErrorHandler . java ` to simplify the error handling by directly
rename parameter ` module ` to ` from ` in ` addReads ` , ` addExports ` , and ` ModulesHelperVM `
[ pinotadministrator ] catch all command line exception and log them
replaced calls to ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and modified the ` hashCode ( ) ` method implementation to
refactor ` CustomPlaybackOverlayFragment ` , ` ImageButton ` , ` ImageButton ` , ` ImageButton ` , and ` ImageButton `
updated zoom level minimum and maximum values in BasicMapViewer . java from 10 , 20 , and 7 to 0 in MapView . java to ensure
refactor adminUsers and group group retrieval to use ImpersonationUtil for process user and group to improve code clarity and maintainability by centralizing
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider . java ` and `
added support for argument extractors in DelegatedClientAuthenticationAction to enhance service resolution flexibility by allowing multiple argument extraction
changed the ` defaultGroup ` variable from ` String ` to ` final String ` in ` NacosServerRegisterRepository . java ` to enforce imm
fix tilesizechanger not use destroy ( ) method
removed redundant calls to removeAllViews ( ) in InfoLayoutHelper . java to streamline code for better readability and maintainability
refactor the ` cleanEntriesForFeedsWithoutSubscriptions ` method to use a new helper method for deleting feeds without subscriptions to improve code
updated method calls from ` CoreAuthenticationTestUtils . getAuthentication ( ) ` to ` auth ` in ` ImmutableAssertionTests . java ` to improve
nifi - 10237 : fix filebasedclusternodefirewalltest to use temporary folder
make sure conic five point do n ' t have nan
added braces to the EOF check in RandomAccessReader . java to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations in Fields . java and MockitoBeforeTestNGMethod . java
refactor CImage . java to improve image handling by introducing imageToArray and imageToArray methods to enhance code readability and maintainability by encap
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to utilize ByteArrayComparable instead of WritableByteArrayComparable for better compatibility
rename ` runtimeVisibleMethodOfField ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity and consistency in naming conventions
replaced null - safe equality checks with ` Objects . equals ` across multiple classes to improve code readability and maintainability by using ` Objects
refactor resolveclassfromcanonicalname - > resolveclassfrombinaryname , add nullability annotation to symbolresolver
added verifications for default property retrieval in NinjaDefaultTest . java to ensure proper handling of different HTML location constants
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
updated timestampsViewPaddingBottom calculation and adjusted listViewPositionOffset values in DetailFragment . java and ListFragment . java to adjust padding and
solr - 11486 : fix thread interrupt in zkstatereader . getclusterproperties ( ) and getclusterprops ( )
added null checks for header values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure proper handling of empty
cloudstack - 7702 : check service and service support for the static nat rule in the network
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure
remove extra empty screen from the workspace to improve user experience by preventing unnecessary screen display
added support for fixed width in BitmapFont by introducing a fixedWidth flag to enhance font rendering flexibility based on glyph properties
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored related logic in ` ChangeLogFragment ` to simplify the
added methods for preEvent , postTransition , and state machine handling in AbstractStateMachineFactory to enhance state machine functionality for better error handling
refactor ConfigDescriptionProvider class to improve code readability to enhance maintainability and facilitate future updates
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf usage in StorageBasedMetastoreTestBase and TestStorageBasedMetastoreAuthorizationDrops to
added a boolean variable ` countSorted ` and modified conditional statements in ` FacetComponent . java ` , and updated test cases in ` TestDistributed
updated the property handling in CheckstyleReport . java to use the model ' s build directory instead of a hardcoded value to ensure the cache
added logic to locate and stop Jetty SolrRunner instances in DeleteInactiveReplicaTest . java to improve error handling and ensure proper cleanup of Jetty
added a file name parameter to the ` newInstance ` method in ` FileActionsDialogFragment ` and updated its usage in ` OCFileListFragment `
updated the condition for handling drop direction in CellLayout to include an INVALID _ DIRECTION constant to ensure proper handling of invalid drop modes in the layout
change account api version from v1 / accounts to v2 / accounts / inner - transfer
fix flaky test testsinkstresstestutil # assertjobrunningeventually
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to enable
replaced specific imports with a wildcard import and added visitIdentifier method implementations to streamline import statements and enhance type handling in the FindTypes class
added action text color setting for dark mode in AuthenticatorActivity to enhance user experience by providing a dark color for action text
added a ` find ` method to ` StreamSupplierComponent ` and implemented it in ` Manager ` , ` AbstractManager ` , ` MockManager `
renamed method ` addTestStepsForPickleSteps ` and ` addTestStepsForAfterHooks ` to ` createTestStepsForPickleSteps
renamed test methods from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` HandlerMethodUtils ` and ` MethodInvoking
added a ` cancelClient ` method to ` RpcServer ` and modified ` startDriver ` in ` SparkClientImpl ` to handle client cancellation to
added nullability annotations and implemented ` getImplicitPreCoercionValue ( ) ` method in ` SkylarkParamInfo ` and `
initialize ` lastDisplayedUser ` to ` Optional . empty ( ) ` in ` FileDisplayActivity . java ` to ensure ` lastDisplayedUser `
added an implementation of the ` findAll ` method in ` QueryDslMongoRepository ` and updated test cases in ` QuerydslRepositorySupportUnitTest
added null checks before calling stop ( ) on SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerException
added a break statement in DefaultPlannerBenchmark . java to exit the warm - up loop when a failure occurs
added ` xread ` and ` xreadGroup ` methods to ` MultiKeyPipelineBase ` , ` MultiKeyBinaryRedisPipeline ` , and
updated ` LinkedBufferInput ` and ` StreamInput ` classes to remove ` FIXME # MN ` comments and modified byte count calculations to improve code
added a new WebSecurityCustomizer bean and refactored security configuration methods in CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to disable DO
added a method to register a content provider in ShadowContentResolver and modified ContentProviderController to handle ProviderInfo to enhance functionality and ensure proper registration of providers
updated the ` AttributeReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to ensure compatibility with the latest version of ` ClassFile
( chore ) camel - single - connection : make singleconnectionmanager keepalive configurable
[ java ] use supplier instead of setter for unicastsenderflowcontrol and multicastsenderflowcontrols .
fix for 2d locus with no point in 2d stroke
added ConcurrentHashMap imports and modified error handling in WebSocket connection tests to improve thread safety and error management during reading operations
simonstewart : add the ability to take screenshot from the selenium server
replaced JUnit assertions with AssertJ assertions in multiple test files to improve readability and maintainability of the test code
remove deprecated trufflelanguage . getcontextreference ( ) .
initialize ` e ` to null and refactor exception handling in ` StubberImpl . java ` , and add unit tests for ` StubbingWith
modified condition checks in Actor . java and Group . java to improve error handling and clarity to enhance code readability and provide clearer error messages
added location permission handling and dialogs to the LocationPickerActivity to enhance user experience by allowing users to access the location based on permissions
http : / / issues . apache . org / jira / browse / amq - 4892 - add weblogic example for amq -
added CookieSpecs . STANDARD to requestConfigBuilder in GetHTTP . java to enable standard cookie configuration for HTTP requests
simplified the return statement in the Intersector class to use ` r1 . overlaps ( r2 ) ` method to improve code readability and
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering in AirspyTun
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel constructors to enhance functionality by allowing access to the monitoring URL for
added a new configuration option SERVICE _ CREATE _ TIMEOUT in KubernetesConfigOptions . java to specify a time - unit for service creation
updated NearbyListFragment to set image resources based on place description to enhance user experience by providing specific icons based on place description
added a null check for the package before accessing its properties in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions when accessing
added a new file PrintInlining . java containing a main method that prints " Passed " to provide a demonstration of the print inlining
fix ( javadoc ) : correctly handle nested brace in inline tag
[ java ] remove unused field in archivetest . java .
updated the method from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java ` to
removed unused imports of ClassPathResource and ResourceLoader in SpringResourceProperties and PasswordManagementConfiguration to streamline dependencies and improve code clarity
updated log message format from ` ` Invalid playback speed ' ' to ` ` Setting playback speed ' ' and added logging for setting playback speed to improve
muc : send roomremoved event when the cluster be start .
updated the ' minimize ' attribute from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure compatibility with the new
added key configurations to enable flipY and generate Mips in TextureHelper to enhance texture rendering by allowing dynamic texture generation
updated ` PythonDslProjectBuildFileParser ` and ` ParsePipelineTest ` to use ` CloseRecordingProjectBuildFileParserDecorator ` instead
[ j2cl ] add normalization pass for library compilation in transpiler .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in GuavaOptionalConverterFactory and added new test cases in GuavaOptionalConverterFactory
[ hotfix ] [ runtime ] add miss @ visiblefortesting annotation to memorysegment
added @ Temporal annotation for TIMESTAMP in ConsoleSessionVO . java to ensure proper handling of timestamps in database operations
added a new file ` Hbs . java ` and ` HbsTest . java ` implementing ` Handlebars ` template engine to provide a framework for
updated ChatMessageAdapter to handle null or empty hint and incoming messages more gracefully to improve user experience by preventing potential NullPointerExceptions and visibility issues
updated the iteration method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to ensure the correct iteration over
[ java ] wait for alert dialog to appear before send a message .
added a null return condition for distinct column indices in ReduceSinkDeDuplication . java to ensure that distinct column indices do not exceed the
refactor MiscUtils to improve path handling and error logging to enhance code readability and maintainability by using a more descriptive variable name
regenerate client with updated copyright year ( # 4382 )
updated WebSocket bundle identifiers from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty - websocket
return unmodifiable map instead of unmodifiable map in samlauthenticateduser . getattributes ( )
do n ' t update sketch text if it ' s the same a the saved program
replaced instances of creating new Double , Float , DCONST , FCONST , LDC , LDC , LDC2 , and InstructionFactory with
changed the data type from date to timestamp in JdbcDataSource . java to ensure the correct data type is used for the result map
added a check for " javax . naming . Context " in HtmlJndiTreeReport . java to ensure proper handling of context classes in the
updated database options handling in StorageUtils and enhanced logging in Manager to improve database configuration flexibility and enhance logging clarity
updated edgeType check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual edge types in
replaced the static final integer FLAG _ SLIPPERY with an import from WindowManager . LayoutParams . FLAG _ SLIPPERY to
truffle : fix handling of array in constant field .
added functionality to retrieve and set the Google Drive folder path in the application to enhance user experience by allowing dynamic configuration of the Google Drive folder path
ggb - 262 add a method to shuffle suggestion on click ( arrow key )
added @ Nullable annotation to method parameters in Truth . java to enhance method flexibility by allowing null targets
updated bitwise operations in ArrayUtil . java to correct bitwise operations to ensure correct size handling for different data types
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to instrument constructors only if they can be instrumented to ensure
[ hotfix ] [ runtime ] fix race condition in streaminmanager . waitingforanticompaction .
added methods to get and set the ` isKeyguardSecure ` flag in ` ShadowKeyguardManager ` and refactored tests in ` Shadow
added serialVersionUID fields to StringDialog class to ensure proper serialization and deserialization of the class
[ grbl ] fix handling of > and < > in grbl status .
corrected a typo in the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmpty
asyncfile : do n ' t call check drain after close in asyncfileimpl
updated LIGHTS _ NUM and LIGHT _ INTES _ NUM from 4 to 8 and changed light intensity from 4 to 3 and modified light
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple integration test files to ensure compatibility with the latest filesystem
updated method signatures and variable types from ` String ` to ` PathWithLines ` in ` RuntimeOptions ` and ` CucumberFeature ` classes
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to simplify the code and improve readability
added a call to close the ParcelFileDescriptor object in ShadowParcelFileDescriptor . java to ensure proper resource management and prevent memory leaks
added a thread - local implementation for managing prefix indices in BasisLibrary . java and modified prefix index management in BasisLibrary . java to improve
added logging level annotation to TestDistributedStatsComponentCardinality . java to improve debugging visibility for the HTTP connection handling
added two calls to ` throwIfImmutable ( ) ` in the ` IntList ` class to ensure that ` throwIfImmutable ( ) ` method
added NotNull annotation to the onApplicationEvent method and modified GrpcClientBuilder to use GRPC ' s URL for improved null safety to enhance code
refactor package structure and functionalities in Graal . java for improved code organization to enhance maintainability and readability of the codebase
invalidate the function array only if it ' s valid .
added platform - specific handling for writing manifest files on Windows to ensure proper formatting of manifest files on Windows
add rfe3531161 test case and fix for rfe3531161
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and updated null checks in ThingResource to improve null safety and prevent potential NullPointerException
change cancellationexception from throwable to runtimeexception in masterjobcontext # createcancellationexception
pagedrawer : initialize stream when page do n ' t have a cropbox
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the code
added a new BooleanFlag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable accessing All App
refactor FragmentActivity initialization to use ActivityController instead of direct instantiation to improve code readability and maintainability by using Robolectric
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and added a new method ` getDecimalCoords ` to improve clarity and consistency in
rename ABCase classes to TestABCase for consistency to improve clarity and consistency in naming conventions
changed parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for blackhole address in Manager
updated the handler initialization in OpenRocketViewer . java to call doSimsChanged ( ) before setting the handler to ensure that the handler
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe to change Maven dependency group and artifact IDs to ensure
updated the initialization of ` dir ` and ` dir ` variables in ` IndexingJob . java ` and added a check in ` SegmentChecker .
updated the condition check from ` lt ` to ` lte ` in the ` GCObjectHeapIteratorAddressOrderedList _ V1 ` class to
refactor ` PreprocessorDelegate ` to use memoized suppliers for ` replacementPaths ` and ` pathToSourcePathMap ` instead of builders to improve
rename ` JsonExamples ` to ` Examples ` and update references accordingly to improve clarity and consistency in naming conventions
added debug logging statements to the ViewExtractor class to improve visibility into the extraction process and enhance debugging capabilities
refactor FindsByLinkText class for improved readability to enhance maintainability and clarity of the codebase
added a new Main class with a main method that prints a Java oop entry point to provide a demonstration of the java oop entry point
fix multiple concurrentmodificationexceptions cause by concurrentmodificationexception .
removed redundant continue statements in NativeScanner . java to streamline code and improve readability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unnecessary import
replaced ` ImmutableSet . Builder ` with ` Supplier < ImmutableList < BuildRule > > ` for queried dependencies to improve performance and readability by
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` for remoteContainsResults to improve accuracy of the count of remote results
added charset extraction from content stream in ExtractingDocumentLoader . java to ensure proper handling of character encoding from the content stream
cloud cloud : fix the bug that cloud account name be n ' t insert correctly when the domain id be null
fix a crash when remove a player from the inventory
add -- ignore - transitive - repositories option to maven execution request
removed duplicate @ Inject annotation for BackgroundJobManager in ContactsPreferenceActivity to streamline dependency injection for better readability and maintainability
updated ColorsActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android versions
added null check before closing the selection object to prevent potential NullPointerException when accessing the selection object
added a condition to break the loop if the matcher ' s start and end are the same and the matcher ' s end to ensure proper handling of
updated the ` @ IntegrationTest ` annotation to include a configuration that sets the server port to 0 to ensure the integration test runs on a non -
added a new UDF named " reverse " to the FunctionRegistry and implemented it in the UDFReverse class to enable the reverse function functionality in
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` across multiple files to ensure consistent retrieval of request context
refactor Tracer class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase for now
replaced specific JUnit assertions with a wildcard import and simplified import statements in XMLChangeLogParserTest . java to improve code readability and maintainability
added synchronization around buffer clearing and resetting in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety and prevent concurrent modification issues during buffer
update forecast parameters from 0 to 60 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
[ hotfix ] [ test ] update timeouts in abstractpageoperationtemplatetest
added logging for remote target handles and improved animation features in RemoteTargetGluer . java and FloatingHeaderView . java to enhance debugging capabilities and
refactor CucumberPropertiesParser to return a Stream and modify parseRerunFile method return type to Stream < Collection < FeatureWithLines >
add a few more creative item to the creative tab , and fix a couple of a bug that could cause the botania to crash . close #
updated assertions in TestRadioButtons to use the correct variable name for consistency to improve code readability and maintainability
added functionality to handle file sizes in RCFileCat and added a method to retrieve the number of rows in RCFile to improve flexibility
refactor multiple clustering - related classes to improve code organization to enhance maintainability and readability of the codebase
added checkNDArray method checks for various NDArray instances in JnaUtils . java to ensure proper handling of invalid MXNet N
refactor BlobServer class to improve code readability to enhance maintainability and facilitate future updates
fixed bug 1220606 - unusedprivaterule no long report unused private method call from initializer .
refactor variable name from ` lexicalScope ` to ` lexScope ` for consistency to improve code readability and maintainability
add a test for the sftp auto - startup of the inbound channel adapter
added methods to retrieve node level , quadtree , and item boundables , along with their getters and setters in various classes to enhance
modify version parsing logic to handle minor version correctly to ensure accurate retrieval of version information based on the presence of a minor version number
added a check for non - empty tags before persisting tags in ItemRegistryImpl . java to ensure tags are only added if they are not empty
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a corresponding method ` fromDateTime ` in ` DateTime
refactor disassemble method to use a dedicated method for better readability and maintainability to improve code clarity and maintainability by centralizing disassemble
refactor Log4j2ConfiguratorServlet for improved clarity to enhance maintainability and readability of the code
replaced the creation of HiveException with direct instantiation of AuthorizationException in StorageBasedAuthorizationProvider . java to simplify exception handling by directly returning the original exception
updated the handling of the " CC " key in CGoCompileStep . java and added a new test case in GoBinaryIntegrationTest . java to
added @ Buildable annotation to CustomResource . java to enable buildability for the kubernetes API builder
added an @ Override annotation in mmm Only . java and ppp Only . java to ensure proper method overriding and improve code clarity
added TIMEOUT _ THREE _ HOURS constant and utilized it in HttpConnectionParams to manage socket timeouts for better connection management
added pipeline names to the PerBuildStateFactoryWithConfigurableAttributes and updated the SimplePerfEvent scope in RawTargetNodeToTargetNodeParsePipeline
[ java ] add support for all non - trace method .
removed the @ Singleton annotation from ApplicationController . java to ensure that the ApplicationController is not thread - safe
updated username retrieval logic in ShareActivity to handle OwnCloudAccount instances to ensure accurate username retrieval based on account display name
added BatchStatus import and a test for resuming paused instances in SimpleJobLauncher to ensure that the job launches correctly when a paused instance is resumed
add null check for cacheConfig in HttpSyncDataService and modify data refresh logic in DataRefreshFactory to improve robustness by preventing potential NullPointerException
[ grid ] make dockersession public so that it can be use from other package .
[ java ] use getnameasstring ( ) instead of getname ( ) . tostring ( ) .
pdfbox - 4892 : use nonsequentialparser instead of pdfparser for decryption , a suggest by valerybokov
reformatted code for improved readability in TestDistributedLanczosSolverCLI . java to enhance code clarity and maintainability
refactor HttpServerTestBase class for improved readability to enhance maintainability and facilitate future updates
update portletapplicationmaptest . testgetattribute ( ) to test the behavior of getkeys ( )
added tests for ` NestedBeanIgnoreNulls ` to validate the behavior of ` NestedBeanList1 ` and ` NestedBeanList2 ` to
add spring starter interface to allow customization of spring boot config
fix indicator . todouble and add unit test
added new methods ` execInContainerWithUser ` and ` execInContainerWithUser ` to the ` ContainerState ` and ` ExecInContainer
refactored conditional checks for WebSocket listeners in NettyWebSocket . java to improve readability and maintainability of the code
added tests for attribute conjunction and negated attributes in SemgrexTest . java to ensure correct functionality and correctness of attribute handling in
added a broadcast intent for CLEAR _ PULL _ UNREAD in HomeFragment . java to inform users of the need to clear the unread
removed conditional logic for setting ` isPreGingerbread ` and ` overScroller ` in ` TouchImageView . java ` to simplify code
add a destroymethod to the defaultprofilevalidationsupport so we do n ' t try to destroy it .
camel - 11436 : camel - core - optimize to avoid use atomicboolean . set ( boolean )
added FloatingActionButton functionality to manage FAB menu visibility in ShareActivity to enhance user experience by allowing users to access the FAB menu based
added a new ` InlineParslet ` class and updated ` PARSLET _ DAY ` and ` EMPTY _ LIST ` initialization to support inline
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated Swedish error messages in multiple resource files to correct the spelling of " token " to enhance clarity and consistency in German language
added server check logic to manage server state before binding operations service to ensure proper handling of operations service connections based on server state
update position return values to use getBeginLine ( ) and getEndLine ( ) instead of getBeginColumn ( ) and getEndColumn (
added ` waitFor ( ) ` method to ` ManagedThread ` and invoked it in ` CxxPreprocessAndCompileStep ` to ensure proper process
added a new property ` requireAllRepositorySources ` in ` PrincipalAttributesProperties ` , modified ` CoreAuthenticationUtils ` , and ` CasPerson
fix flaky test : check if map be load before check if map be load .
added support for enabled SSL protocols in NettyWebServer and SocketConfiguration to enhance security by allowing customizable SSL protocols
refactor ` SetOnce ` to use ` AtomicReference ` instead of ` AtomicBoolean ` and introduce a custom ` Wrapper ` class to improve type safety and
updated the key retrieval logic in QueryDslMongoRepository to handle null property cases and added a new test case in SpringDataMongodbSerializerUnitTest
updated assertion messages in RoundRectBorderTest for clarity and consistency to improve test readability and provide clearer feedback on border changes
add a check to make sure we do n ' t run the cluster when there be no genesis configuration
remove parallel test , since we do n ' t need it anymore
updated CountDownLatch and ArrayList initializations to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' list to ensure
change conditional check from ` if ( windows ) ` to ` if ( ! windows ) ` in ProcessInformationsPanel . java to correct the logic
refactor methods in MoreCollectors to improve clarity and consistency to enhance code readability and maintainability by standardizing method names
added null checks and improved WebSocket client handling in Bitmex streaming services to enhance robustness and prevent potential NullPointerExceptions during data streaming
added validation checks for latitude and longitude in GeoPointField . java and created a corresponding test case in TestGeoPointField . java to ensure that
updated method names and logic from ` saveWorkflowFile ` to ` createFile ` and ` getWorkflowDrafFileName ` in ` WorkflowFiles
refactor ResponderId class to improve code organization to enhance maintainability and readability of the code
modified the ` getTableDocument ` method to include a ` withDependents ` parameter and adjusted related logic in ` CompactCatalogUtility ` to condition
added a counter for consecutive uploads without coordinates in UploadActivity and UploadPresenter to manage the number of consecutive uploads without coordinates to improve user experience
added caching functionality for profile data and a new POST endpoint to view profile data to improve performance by reducing memory usage during profile retrieval
updated property handling in JpaMetamodelEntityInformation to support Java ' s IdClass annotation and improved property extraction logic to enhance compatibility with different ID
added index creation and assertions in UpgradeIT and refactored bootstrapLastDDLTimestamp methods in UpgradeUtil and ConnectionQueryServicesImpl to
added support for default exception mappers in AbstractServerFactory and removed redundant registration in DropwizardResourceConfig to streamline exception handling and improve maintainability
added a boolean parameter to the method call in EntryEditor . java to control the behavior of the storeFieldAction parameter
modified the ` nativeCreateNSWindow ` method to include an ` ownerPtr ` parameter to enhance functionality by allowing access to the window ' s owner
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME in FileContentProvider . java to ensure the correct table name
added support for the STOCK tile in the Tile class and updated related event handling to enhance the animation capabilities of StockTileSkin
fixed - rbuckets . getbuckets ( ) method throw classcastexception if codec be null
add @ detectorundertest ( findunrelatedtypesingenericcontainer . class ) for ideas _ 2011 _ 07 _ 21 and ideas _
added BackProgressAnimator and updated back animation handling in LauncherBackAnimationController . java to improve animation responsiveness and user experience during back transition
changed the visibility of ` _ initialPageNo ` from final to non - final and added logic to initialize ` _ contentLimits ` based on
reduce the number of operation in crc16 benchmark from 10 , 000 to 100 , 000 .
added comment parsing functionality to ` FormattedSqlChangeLogParser ` and a corresponding test case in ` FormattedSqlChangeLogParserTest ` to
refactored the initialization of JarArchiver in MavenArchiver and updated its usage in AbstractJarMojo to improve code clarity and maintainability by
replaced ` HumanReadableException ` with ` BuckUncheckedExecutionException ` and updated error message formatting in ` DefaultClassUsageFileReader . java ` to improve
removed redundant condition checks in TSServiceImpl . java and added multiAggregationTest method in DaemonTest . java to improve code readability and
added validation for WebGL rendering context formats and inputed pixels buffer in GwtGL20 . java to ensure that only UNSIGNED _ BYTE and
added a new test method ` testDebugInfo ` and refactored method invocation in ` PrintR ` , ` PrintR ` , and `
replace UnmodifiableClassException with a more general Throwable handling mechanism in InlineBytecodeGenerator . java to improve error handling and provide clearer feedback
[ bytecode ] add class initialization trace to bytecode instrumentation .
corrected a typo in the parameter name from ` queryLevelTimeoutMs ` to ` queryTimeoutMs ` in the ` BaseBrokerRequestHandler `
replaced Google Guava ' s CacheBuilder with Caffeine ' s Caffeine library and updated TopicRouteService to use Caffeine for
mbtiles : make read - only data source read - only
updated the INVALID _ SOURCE _ TARGET _ RELEASE regex to allow a maximum release number to enhance error reporting for specific target releases
updated URI construction in DetailFragment . java to include additional parameters and added location intent check for Google Maps availability to enhance user experience by providing
added null check for inheritedParameterContexts in StandardParameterContextDAO to avoid potential NullPointerException when accessing inherited parameter contexts
refactor ClassLoader to improve code readability to enhance maintainability and facilitate future updates
added origin response header handling in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure correct behavior of origin response headers in the proxy
added a new instance of ProfileSettingDrawerItem to GpsMainActivity to enhance user experience by displaying profile settings
added support for XML validation in multiple classes to enable dynamic XML validation based on servlet context settings
simonstewart : make sure executescript ( ` ` return ' ' ) work as expect in the firefox driver .
[ iotdb - 4892 ] add maxrows support to iotdbstatement . getmoreresults ( )
refactor isCountOptimizable to allActionsAreOptimizableFilters for clarity to improve code readability and maintainability by consolidating
added event handlers for node and mouse click events in StandardVizEventManager to enhance visualization functionality by allowing node and mouse click events
refactor memory management by introducing a new method ` zeroBuffer ` for clarity to improve code readability and maintainability by encapsulating the
refactor the handling of the XorGroup in TerminalNode to use a dedicated memory instance to improve code readability and maintainability by centralizing
removed final methods ` getHeight ( ) ` and ` getWidth ( ) ` from ` LCDUIImageMonochromeBitmapSource ` to streamline the code
refactor SourcePathResolver to simplify path retrieval and improve clarity to enhance code readability and maintainability by consolidating path resolution logic
fix encoding and parsing of < identifier > element in dstu2
changed the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and added encoded URL handling in the ` WebsocketRouting
[ gr - 26486 ] fix llvm / nwcc / nwcc / nwcc / nwcc / nw
added a method to retrieve Cxx platform based on specified arguments and refactored the platform retrieval logic to improve code readability and maintainability by
added imports for ` org . apache . lucene . index . IndexReader ` , ` IndexReader ` , and ` Similarity ` in multiple
modified the ConcurrentLinkedStack class to handle null values and renamed methods for pop , pop , and iterator functionality to improve code clarity and maintainability by
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes
added a null check for mDirectories before initializing mDirs to prevent potential NullPointerException when mDirectories is null
added a condition to check if overview state is not enabled and first layout is not in the RecentsView to improve gesture handling by ensuring overview state
added multiple package - info . java files for various Lucene packages to implement lucene backward codecs features and improve documentation clarity
added a text setting for the visible auto leveler panel in AutoLevelerTopComponent to enhance user experience by providing a clearer message for visibility
added optimization callback functionality to DirectUpdateHandler and DirectUpdateHandler2 classes to enhance performance by optimizing event listeners based on configuration
updated Inflater initialization and compressed byte handling in CompressionMode . java to ensure proper initialization of compressed data and prevent potential memory leaks
removed the check ( user _ data ) method call from Shaderc . java to streamline the code by eliminating unnecessary checks
[ flink - 20527 ] [ metastore ] fix retry logic for local metastore .
( chore ) camel - aws2 - helios : do not log exception on connectionclosedexception
refactor methods in the Subject class to improve code readability and maintainability
improve performance of abstractserializationservice # typemap by use a weak reference hashmap .
updated color distance calculation in HSSFPalette and added new test cases in TestHSSFPalette to improve accuracy of color distance calculations and ensure correct
chore ( regen ) : regenerate with update license year
simonstewart : add a new test for find element by numeric id and element by id to the elementfindingtest
added a flags parameter to the registerReceiver methods in ShadowApplication , ShadowContextImpl , ShadowInstrumentation , and ShadowContextImpl classes to enable tracking of
updated mocking mechanism in FFmpegTest . java to use a stubbing for mocking the resource to improve flexibility and maintainability of the
added a previous input stream and modified the OggInputStream constructor to use it for memory management to ensure proper resource management and prevent memory leaks
replaced hardcoded failure message with a constant to improve code readability and maintainability
( chore ) camel - test - infra - anomaly : check both anomaly failure count and warning count
refactor Toast usage in BaseActivity and DetailActivity to show a toast message instead of a toast message to enhance user experience by providing user feedback
updated the method call in TracingFeignClient to use the delegate ' s HTTP method and request template to enhance the request creation process by
added name validation and improved referral handling in LDAPCertStore . java to ensure proper validation of LDAP names and prevent CertStore exceptions
refactor retain logic into a separate retain method for improved readability to enhance code maintainability and reduce duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click functionality in ` ListViewTest ` to improve clarity and functionality
[ hotfix ] [ test ] move miniclusterwithclientresource to @ classrule
remove genericitemuiprovider since it be no longer use
fix a problem with the selector box when the user click on the selector box .
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to mark the FileSystemPool as isolated to ensure that the FileSystemPool
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to configure the HTTP server to use the specified bind address
updated token validity settings based on grant types in DynamicClientRegistrationEndpoint . java to improve token validation logic based on configuration settings
fix splitlogcounters and testinterfaceaudienceannotations to work with clover
added support for the Smartmi Evaporative Humidifier device in MiIoDevices . java and corrected formatting in ReadmeHelper
use movementhelper . getminingdurationticks instead of the blockstateinterface . avoidbreaking .
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow access to the method from outside the package
added error logging to check if the repository list is empty in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to improve error handling for empty
modified the return statement to use ' | | ' instead of ' ! ' for both ' containsMissingValue ' to ensure proper handling of missing values
added Serializable interface to RuleAdministrator class to ensure proper serialization of RuleAdministrator instances
refactor CrossOriginFilter to use Set for allowed origins and timing origin patterns to improve flexibility and maintainability of origin handling logic
fix ` ` use knight g3d ' ' and ` ` use g3d ' ' test
refactor code for improved readability and error handling in Manager . java to enhance code clarity and ensure robust error logging for invalid solidified blocks
hbase - 26244 fix nullpointerexception in execresult when return null value
added a method ` hasAccess ` to check for user access and updated error handling in ` HttpServer . java ` to improve access control checks and prevent
replaced the writeTo method with a getStubClassBytes method in ClassMirror . java and refactored StubJar . java to use CreateStubAction
added a TextView for sharing internal links in FileDetailSharingFragment to enhance user experience by providing a more informative text for file sharing functionality
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting across different locales for accuracy checks
changed the condition from ` = = ` to ` ! = ` for ` Calendar . SATURDAY ` in ` ModelZooTest .
removed unused imports and refactored the hideInput method in AllAppsContainerView and LauncherAllAppsContainerView to improve code
( chore ) camel - axon - eventsourcing : use inmemory event store for test
replaced the method for retrieving the parent directory with a new method ` getmntonname ` in the ` BsdFileStore ` class
add test case for issue # 1599 symbol resolution issue
added command argument handling for spawning monsters in SpawnCommand . java to improve command execution flexibility by allowing optional spawn coordinates
added a minimum content dimension constant and refactored height calculation methods to use this constant to improve code readability and maintainability by centralizing content
add debug scope to test so debug can be run after each test .
replace newDirectory ( ) with newMockDirectory ( ) in TestIndexWriter . java to ensure compatibility with Windows semantics for directory creation
added plugin checks to the UpgradeCheckRegistry and reformatted the addColumnsToUpgradeTable method for consistency to improve code readability and maintainability by
refactor Environment class to improve code readability to enhance maintainability and facilitate future updates
added LuceneTestCase import and BadApple annotation to RecoveryAfterSoftCommitTest . java to address issues related to SOLR - 7421 related to
added a check to ensure the home string does not end with a space and modified the handling of child types in HashtableContent to ensure proper formatting and
updated flags from FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS
replaced specific resource accessor imports with a wildcard import and updated resource accessor initialization in LiquibaseEntityResolver . java and XMLChangeLogSAXParser
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS verification for improved security
updated Immutable annotation to use builder and copy options in AbstractCxxDeps and removed the EMPTY constant in CxxLibraryDescription and CxxLibraryTest
corrected the spelling of " expectedDirectory " to " expectedStubDirectory " and " actualStubDirectory " to improve code readability and maintain
reformatted the declaration of the resizeThreshold variable in Int2ObjectHashMap . java to improve code readability and maintainability
updated folder name hint setting logic to handle empty titles more gracefully to improve user experience by providing clearer feedback when the folder name is empty
updated the method calls to include an additional parameter " uaa " in UaaResetPasswordServiceTests to enhance client loading functionality to support additional client
changed access modifiers of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to include isClosed flag to ensure proper handling of closed states in log messages
refactor MimetypeIconUtil for improved readability to enhance maintainability and facilitate future updates
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a new test case for negating unnecessary parentheses in the rewrite process to address issue # 3904 related to unnecessary parenthes
add a method to teleport an object to the bukkit world if the world have be built .
replaced Base64 encoding methods with Base64Utils for modulus and exponent in TokenKeyEndpoint to improve consistency and maintainability of base64 encoding
updated imports and method calls in TranslatorManagerHelper . java to include ProjectComponent and improve statistic reporting to enhance code clarity and maintainability by
rename ` ContainerAnnotation ` to ` ContainedBy ` in ` ContainerAnnotation . java ` to improve clarity and consistency in naming conventions
added a null check for the result variable in ObjectIdentityImpl . java to ensure that the getId ( ) method is required to return a non -
refactor ` setUpRevampedTweet ` method to handle muffled users and update related logic to enhance user experience by allowing muffled
added conditional logic to retrieve the verified text based on the application ' s theme to ensure the verified text is displayed based on the application ' s theme
removed the static variable ` instance ` and made ` timeDiffFromServer ` final in ` AbucoinsDigest ` to streamline the code and
camel - 13397 : camel - mongodb - enable autowire on mongo component . thanks to martin for the patch .
added a new ` sourceIndex ` parameter to the ` AttributeMapping ` class and updated related constructors and methods accordingly to allow for a configurable index
log a warning if a corrupted partition statistic can not be alter .
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to check if security is enabled before
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
escape email in the home page so that it do n ' t appear in the html
move reflection enriching from modulemanager to modulemanagerimpl so that it do n ' t depend on the cache .
update JoinModeller to use the number of features from joinFeatures instead of a hardcoded value to improve accuracy of MMFCC output by
algebra : fix for av with no command , so we do n ' t have to check for an empty string
added conditional logging for debug and trace logging in SingleNodeKafkaResumeStrategy . java to improve logging performance by avoiding unnecessary logging when debug is
use playbackstatecompat . ACTION _ SET _ PLAYBACK _ SPEED instead of a static constant to improve code readability and maintainability by
updated handling of ' automatic ' separation in IgnitionConfigurationHandler and added new methods in MotorMountHandler , AxialStage , and I
tika - 139 - fix ascii name length validation in msownerfileparser
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to compatibility issues with J
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability by encapsulating lock file
updated the version preference from " version _ 3 " to " version _ 5 _ 1 " and added new string keys in UpdateUtils . java to
added a check to return null if the user is the FEDERATION _ USER to prevent unauthorized access to the FEDERATION _ USER
do n ' t use truffleobject in executemethodnode . isnull ( ) if the parameter be not a truffleobject
removed the usage of Collectors . toList ( ) from the test cases in JakartaClientShutdownWithServerWebAppTest . java to simplify the test
add a filterattachable to the logbackvalve so that it do n ' t fail if the filter do n ' t exist
refactor Collection and Map classes to improve code organization and maintainability
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to enable versioning functionality in the index creation process
added schema handling for backing indexes in MissingPrimaryKeyChangeGenerator for Oracle and DB2 databases to ensure proper schema and catalog / schema information are set
updated exception handling in MsckOperation and added a new test for invalid partition names in TestMSCKRepairOnAcid to improve error
[ flink - 20527 ] [ kafka ] retry commit kafka transaction in case of error during recover
[ issue # 625 ] remove the message group from the receipt handle when the forwardmessagetodlqactivity be create
added a new method ` withServices ` to ` DockerComposeContainer ` and modified the ` runWithCompose ` method to handle empty service lists to
[ recaf ] fix java . util . collections . copyset in export and struct context decorator
removed HTML cleaning and xml declaration code from FeedParser . java to simplify the code and improve readability by eliminating unnecessary dependencies
removed conditional check for AppsCustomizePagedView . DISABLE in Launcher . java and updated child view retrieval in Workspace . java to
change data types of several fields from int to double in MeterRealtimeBodyDataDTO . java to ensure accurate data representation for energy calculations
added a new file ` bug4150029 . java ` that implements a application that creates temporary directories and validates the file chooser behavior to ensure
added a boolean flag ` isSparkConfigUpdated ` and its getter / setter methods in ` HiveConf ` , modified ` SparkClient ` to
added ` getLongPressIndicator ( ) ` methods to ` AppIcon ` , ` AppIconMenuItem ` , and ` Launchable ` classes , and
added handling for empty polygons in WKBWriter and updated test methods for POLYGON and SSRID in WKBWriterTest to
refactor UnflavoredBuildTarget creation to use a builder pattern and add interner functionality to improve code readability and maintainability by using
added a new file MultiplyByMaxInt . java that contains a method for calculating the maximum value of an integer to demonstrate the functionality of multi
added functionality to toggle the drawer indicator based on the current file state to enhance user experience by displaying the correct drawer indicator based on the current file state
updated package and import statements in TestRAMDirectory . java to improve organization and clarity of the code
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify the code and improve
dmn : improve error message when expression be not define for a name .
replaced instances of the @ ContainedBy annotation with the @ Repeatable ( DC . class ) annotation in multiple Java files to standardize the annotation
updated the file sending message to include the duration in milliseconds to enhance user experience by providing context about the file sending process
updated class name handling in OpenMBeanAttributeInfoSupport . java to ensure proper package access checks before loading classes
fix readresponseresolver to return false if there be no replica
updated freeSize calculation to adjust for 16 - bit size to ensure correct free size adjustment for better memory management
added a null check for the MotionEvent parameter in the areTouchesDisabled method to ensure touch events are correctly handled during touch events
updated SslContextFactory from a single instance of SslContextFactory to SslContextFactory . Server in HttpServer , RESTServer , and Thrift
removed the PrivilegedSocket class and its associated implementation to simplify the socket creation process and improve code readability
refactor InputTest class for improved readability to enhance maintainability and clarity of the codebase
added functionality to pause blurs on windows and modified finishRecentsAnimationOnTasksAppeared method to accept a Runnable parameter to enhance user experience by
removed and added null checks for current location marker and polygon in NearbyMapFragment . java to improve code robustness and prevent potential NullPointerException
updated the ` removeSecret ` method calls to use ` clientDetailsService . retrieve ( clientId ) ` instead of ` client ` to ensure the correct
updated SqlSourceBuilderTest to use JUnit ' s @ BeforeEach annotation instead of Java ' s @ BeforeAll annotation to improve test readability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 640 : wait
added unit tests for handling unknown keys in SlidingGanttCategoryDataset to ensure proper exception handling and validation of task series keys
added null and empty handling for conditionDataList in ShenyuTrieRuleListener . java and added return statements in ZookeeperSyncDataService .
optimize lightcontrol . spatialtolight ( ) and lightcontrol . spatialtolight ( )
added @ SuppressWarnings annotations and modified the logic for handling stack traces in StdErrLog . java to improve code readability and maintainability by
added a method to retrieve the application context and updated context handling in HttpSessionEventPublisher to ensure that the ApplicationContext is not null to prevent runtime exceptions
added a syntax check for the CREATE CQ statement in ASTVisitor . java to ensure compatibility with the latest CQ syntax in the code
[ hotfix ] [ iotdb ] fix typo in flinkiotdbsink javadocs
add counter for custom simplification in canonicalization phase to improve code readability and maintainability
updated the context parameter in the fileIcon setImageDrawable method call to ensure the correct context is used for file type icons
updated the ` readIdentifierWithSchema ` method to accept the schema name as a parameter and modified the test script to include " dropIndex " to
added support for TIMESTAMP field in BigQueryTableRowIterator and created a test for it in BigQueryUtilTest to ensure accurate reading of timestamp
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` classes and corresponding unit tests in ` ViewGroup
2 . x : fix findbugs warning in javax . servlet . httpservlet
removed unused import of PColumnFamily in IndexTool and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants , updated enum value retrieval logic , and refactored annotation handling in JavaClassUtil to improve
svm : make sure we do n ' t try to load a jar from the classpath
removed and re - added CUDA _ R _ 16F and CUDA _ C _ 16F constants in cublas . java
updated ResourceLoader class to use FileFilter for listing directories to enhance flexibility in resource loading by allowing multiple layout directories
make redstone torch use getattachablematerialdata , not getattachedface ( )
[ hotfix ] [ table - common ] add support for varbinary type to reltostageconverter
added import statement for DateHelper in NoteAdapter . java to enable date handling functionality in the NoteAdapter
updated backup error messages and added error handling logic in the Backup and Captions classes to improve clarity and provide clearer feedback on backup load failures
ggb - 132 change position of ev1 button to relative
removed file deletion check for file creation in ShadowParcelFileDescriptor . java to simplify file creation process and improve code readability
refactor ` getStackForThread ( ) . poll ( ) ` to ` getStackForThread ( ) . addFirst ( ) ` in ` StackBased
updated the rule reference from " optimizations " to " controversial " in BooleanInversionTest . java to align the rule with the new term "
fix the canonicalization of xorneutralreference and xorneutralreference in integerequalscanonicalizer
removed the STRING _ ARRAY constant from TypeFactory . java to eliminate unused constant and improve code clarity
refactor AllApps and related components to use a unified hideIme ( ) method for logging interactions to improve code readability and maintain
force bit density to fix network issue
updated assertions in TimelineMetricCacheSizingTest to include expected values for clarity and improved code readability to enhance readability and maintainability of
add a optimization to the vanilla getglmaximumtexturesize ( ) method .
[ java ] : do n ' t try to stop log recording if we ca n ' t stop it .
added a condition to reset startPosn to 0 if isInTransform is true to ensure startPosn is reset only when in transform mode
refactor star tree handling by introducing a new ` isSkipStarTree ` method and its usage across multiple classes to improve code readability and maintain
added a locking mechanism for nearby places and modified refreshView methods to conditionally hide the progress bar to improve user experience by allowing refreshing of
add maptransformer . of and maptransformer . bimap ( ) - > maptransformer . of ( map < k , v >
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for retrieving launcher widget dimensions in LauncherPreviewRenderer and PreviewSurfaceRenderer to improve widget size tracking for better user experience
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to utilize ` EventObject ` instead
added methods to manage ` callingPid ` and ` callingUid ` in ` ShadowBinder ` to ensure proper handling of process IDs and UIDs
refactor ExpectationFailure class to use private fields and improve equality and hashCode methods to enhance encapsulation and ensure non - null message and
do n ' t log ` ` no support for deserializing message with name ' '
removed conditional calculations for newW and newH in ImageReplacedElement . java to simplify the code and handle cases where newW and newH
added handling for special characters ' &# 9 ; ' and ' &# 32 ; ' in MarkdownNodeRenderer and updated MarkdownWriter to correctly handle
added a new method ` setPassword ` and refactored password handling in ` SharePasswordDialogFragment ` to improve code readability and maintainability by
refactor file channel method retrieval to use a dedicated MappingMethods class to improve code readability and maintainability by encapsulating method access to
changed access modifiers from public to package - private for several methods and variables in AbstractAssert _ described _ as _ printed _ to _ console _ Test
added new options for Slider AM keytab and their associated configurations in LlapOptionsProcessor . java to enhance flexibility in managing user keytab
added JFrame parameter to tearOutGraphViewContainer and implemented animation control in ExtractionModelFrame to enable or disable animations in the graph view based on
added loader completion handling and improved shortcut existence methods in LauncherModel . java to ensure proper binding behavior when a loader is active
replaced boolean flags with final sets in NodeManageMemoryMergeOperator , NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator
updated method signatures in ` IssueInterface ` , ` ValidationReport ` , and ` ValidationReport ` classes to include messageType and guid parameters to enhance
added a method ` safeProviderName ` to retrieve the cipher provider name and updated exception handling in the ` RSAClientKeyExchange ` class to improve
[ hotfix ] rename dynamicconfiguration to flinkconfiguration in containerspec
set logging level from WARNING to OFF in CCJSqlParserUtil . java to improve logging reliability by reducing unnecessary warnings
added a newline character to the output when the index is not equal to size in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final int to public static int to allow access to BIT
added an @ Ignore annotation to the CovariantOverrideTest class to indicate that the test is not implemented due to the implementation of the covariant override
refactor curly method to return Qtype instead of Node and update related logic to improve code readability and maintainability by centralizing Qtype
camel - 14156 : reloadstrategy should load route definition from xml , not from xml
added space minimum and maximum settings for the X - axis in ScatterChart . java to improve visual spacing for the scatter chart
added space before " as INTERVAL " in ExpressionStringBuilder . java to improve readability and maintain consistency in formatting
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` and overridden it in ` BaseState ` to ensure data
added a check for the presence of the " UTF8 " key in the properties file to throw a RuntimeException if the UTF8 key is missing
updated TestReproduceMessage and LuceneTestCase to use @ RunWith and @ SeedDecorators annotated with MixWithSuiteName to improve test reliability
added a new UI event for long - pressing an AllApps item in StatsLogManager and integrated it into ItemLongClickListener to enhance logging capabilities
added null check for log in StoreWAL . java and created Issue112Test . java with a test for double commit in Issue112Test
added a condition to check if the sector land info is displayed in the campaign condition to ensure the sector land info is only displayed when the preset is
updated type casting from CompositeType to CompositeType < ? > in multiple classes to improve type safety and eliminate unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
make nearbyrandom # buildnearbyrandom accept a ` ` randomselection ' ' parameter
remove temporarycache . getlastupdatetime ( ) and use cachebuilder . cache ( ) instead
do n ' t show the layer in the new layer page if they do n ' t exist
initialize the ` _ availability ` variable to ` Availability . UNAVAILABLE ` to ensure that ` _ availability ` defaults to ` Availability . UN
updated block handling in multiple classes to use BlockCapsule instead of BlockNum for consistency to improve code readability and maintainability by standardizing
chore : update gapic - generator - java version to 2.1 . 0 ( # 51 )
replaced the boolean ` _ freeSpaceReclaimDisabled ` with an integer ` _ freeSpaceReclaimQ ` and modified the corresponding methods to allow
changed KDC options from public final to private static final in KDCOptions . java and added a new KdcDefaultOptions . java file to
removed ' this . writer ' reference from JsonWriter initialization and initialized it to null to ensure proper initialization of JsonWriter and prevent potential memory leaks
formatted code for consistency and readability in ProfilePager . java to improve code readability and maintainability
renamed the paintBackground method from ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in
added a new method ` valueFromClassConstant ` to retrieve a value from a class constant to improve configuration handling for object value constants by providing default
log error in kafkaservice when initialization fails
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to include " usr / share / zoneinfo / tzdata " to include additional
camel - 14136 : camel - core - allow to create a channel with the same name a the input channel .
added keywords property handling in HTMLDocument and implemented a test for indexing keywords in TestDemo to enhance document parsing functionality by allowing keywords to be added
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to ensure that the addresses list is properly initialized before adding to the
replaced instantiation of ` CorrespondenceSubclassToFactoryCall ` with an instance of ` CorrespondenceSubclassToFactoryCall ` to ensure proper class
refactor Builder class to improve code readability to enhance maintainability and clarity of the codebase
update url to use ebook . de instead of manas . tungare . name / software / isbn - to - bibtex
increase keepalive time from 1 second to 10 second for polyglot context .
added null check for text before firing data changes in TextField . java to avoid potential NullPointerExceptions when text is null
refactor the sentiment model to use rnnutils . vectortoparams ( ) to improve code readability and maintainability
added trimming of whitespace from the input string in SuffixURLFilter . java to ensure proper handling of whitespace in URLs
added a check to return early if the player is in Godmode to prevent further processing when the player is in godmode
do n ' t register or unregister a popup in the text input dialog , since it do n ' t exist in the user interface .
updated LinkedHashMapCache and BoundedLinkedHashMap constructors to remove unnecessary parameters to simplify constructor parameters and improve code readability
removed unnecessary ` _ channel . close ( ) ` calls in ` ChannelEndPoint . java ` to streamline resource management and improve code readability
added null check for keyIndex and modified conditions for validation in FixAcidKeyIndex . java , modified key index builders in Orc
modified exception handling in DirectUpdateHandler2 . java to use Locale . ROOT for better locale specificity to ensure consistent error reporting across different locales
add setter for storecheckguard in writenode .
make sure exceptiondispatchblock be only reachable if there be an exceptiondispatchblock .
added ` getClassificationDisagreement ` method implementations in ` AbstractCloud ` and ` DBCloud ` , and updated ` HIGH _
removed unnecessary ` BuildTarget . copyOf ( buildTarget ) ` calls and replaced ` @ Value . Parameter ` annotations with ` buildTarget ` to simplify
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorage
refactor ` knownApis ` to ` knownSdks ` and update related methods in ` DefaultSdkProvider ` and ` Robolectric
replace progressindicator with confidenceprogressindicator in createofferview
updated user agent check from " Cling / " to " UMS / " and modified UPNPControl initialization to include additional UpnpHeaders to
fix the iterator not work if the builder do n ' t have the iterator in the world .
add message view type to crowdfundingchatadapter and use it for image url .
updated method name from ` memEncodeUTF16 ` to ` memEncodeASCII ` in LinuxLibrary . java and MacOSXLibraryDL . java
correct a typo in the regex expression for the CONJP $ -- relation
removed the ` canvas ` parameter from the ` insert ` and ` write ` methods in ` TexturePacker . java ` to simplify method signatures and
refactor ` getVisitors ( ) ` method to ` apply ( Refactor < S , T > refactor ) ` in ` Refactor
added methods ` getChildByName ` and ` getChildrenByNameRecursive ` to retrieve child elements by name to enhance the functionality of ` getChildByName ` and `
set the Content - Charset header to " UTF - 8 " in HttpSolrServer and its test assertions to ensure consistent character encoding handling in the Solr
added ` SystemUiControllerFlags ` annotation and modified ` updateUiState ` method to use it to enhance functionality by allowing dynamic UI state updates based
removed the private ClientConfigurationService field from IntrospectingTokenService . java to streamline the code by eliminating unused fields
updated the exception message format in HiveRecordSet . java to include additional context to improve debugging by providing more context in error messages for better debugging
removed the ownerId field from the NodeEntry class to streamline the code by eliminating unused fields
backup : rename backupsnapshotafertakingsnapshot to backupsnapshotaftertakeingsnapshot
added score calculation to the merge method in TextFragment . java to ensure the score remains within the specified range for better performance
removed the private Digester field from Md4PasswordEncoder . java to streamline the code and improve maintainability
added a validation check for the maximumUnimprovedStepCount property to ensure it is non - negative to prevent runtime errors
added a check to return early if no currently opened editors are available to avoid processing when no editors are open
replaced direct calls to ` Mockito . verify ( mock ) ` with calls to ` Mockito . verify ( mock ) ` and added multiple overloaded methods
updated ClassLoader reference from ` Thread . currentThread ( ) . getContextClassLoader ( ) ` to ` PathScanner . class . getClassLoader ( ) ` to ensure
refactor ` sayHi2 ` method to accept an instance of ` CodeFirstPojoClientIntf ` and implement asynchronous ` sayHi2Async
added test logging and refactored formatting in AbstractSplitBrainProtectionTest . java to improve code readability and maintainability by standardizing formatting
added null checks for logoutConfigurer before adding a filter in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure proper logout handling and prevent potential NullPointerException
gbasis ( gbasis ) : remove degree check from gbasis ( gbasis ( degree ) )
refactor DockerComposeContainer to use a map for logging consumers and introduce a new test class for testing to improve efficiency and maintainability of the logging
updated the generic type parameter in the testMapping method signature from ` Class < ? > ` to ` Class < ? > ` to improve type safety
removed unused imports from AmbariMetaInfoTest . java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a way to create a ` ThrowingSupplier ` instance
replaced a break statement with a return statement in ConsoleActivity . java to improve code readability and maintainability
camel - 15836 : camel - vtx - add support for send text content to the server .
added platform - specific path handling methods in MorePaths . java and updated test cases in CopyStep . java and AarWithLibsIntegrationTest .
added a null check for ` authorizationContext . getParams ( ) ` before processing to avoid potential NullPointerException when ` authorizationContext . getParams (
updated the ` load ` method to include a ` throwExceptionIfFail ` method and added a new ` throwExceptionIfFail ` method to ensure
updated SDK version from " 4611349 " to " 4514284 " and added tests for stopping behavior in ShadowTextToSpeech to
[ hotfix ] queuetransactionlog . gettransactionlog ( ) return itemid and name instead of itemid .
added a boolean property ` enableSqlWithoutProfile ` and its getter / setter in ` JdbcEnvironmentProperties ` , and updated ` JdbcEnvironmentRepository `
added a try - finally block around the write operation in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
fix generics issue with eventgenerator . fromfunction ( ) in modloadingstage . java
updated date formatting from ` date ` to ` calendar ` in ` DateUtils . java ` and removed an assertion in ` FontParsersTest .
updated the ` loadValue ` and ` getThreadInfo ` methods in ` CachedThreadStatesGaugeSet ` and ` ThreadStatesGaugeSetTest `
added a new field ` prevTlogOnPrecommit ` and modified a sleep duration in ` LeaderTragicEventTest ` to increase the
updated the FastAsyncWorldEdit job file version from P2 - V6 to 1.77 to ensure compatibility with the latest world edit features
updated file existence checks and added null check for the input path in SegmentGeneratorConfig . java to ensure proper directory creation and prevent potential NullPointerExceptions
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored its usage in ` TriangulationHelper ` to
modified the ` find ` method in ` JdbcAuditService ` to accept ` IdentityZoneId ` as a parameter to enhance functionality by allowing the principal
refactor SpanCollector class for improved performance to enhance performance and maintainability of the code
added a null check before accessing the session info in AuthorizationFilter . java to prevent potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class for improved clarity to enhance maintainability and readability of the code
corrected the spelling of " printLVgroups " to " printLogicalVolumegroups " in OshiController . java to improve code readability
added thread name setting for forwarding to the remote URL in TestSession . java to improve clarity and consistency in thread naming for better debugging
refactor CookieManager class to improve code organization to enhance maintainability and readability of the code
replaced the creation of an ArrayList of ComponentKey instances with a direct return of a new empty ArrayList to simplify code and improve readability by eliminating unnecessary
added OverviewToAllAppsTouchController to the list in RecentsUiFactory to enhance user experience by providing a touch controller for overview navigation
refactor hotseat scaling logic by replacing the ` scaleHotseatWithWorkspace ` method with a ` getHotseatScaleAndTranslation ` method to
added a check to exclude elements above the JUnitRule in the stack trace filtering logic to ensure that only relevant JUnit rules are excluded from the
refactor MappedResizeableBuffer to use more descriptive variable names and improve buffer handling to enhance code readability and maintainability by standard
added a private BalanceListener variable and updated its usage in DepositListItem . java to improve code readability and maintainability by encapsulating
added conditional logic to convert color based on the edge mode in the RealisticRenderer class to ensure correct color conversion for different edge modes
added null check for httpClientResponse in HttpClientBeanPostProcessor and refactored log initialization in multiple test classes to improve robustness by preventing null pointer
remove the use of patternutil . checkpattern ( ) in gl200protocoldecoder
updated playback time handling in FullDetailsActivity . java to improve playback time logging to enhance user experience by providing more detailed timing information for playback events
alexeibarantsev : add support for grammatical token in spanishxmltreereader .
added a condition to clear the language component if the first element is an empty string in InstallItem . java to ensure proper handling of empty dc values
updated the ` ReactiveLoadBalancerClientFilter ` to override the scheme based on the service instance ' s secure status to ensure the correct HTTP scheme is used
[ hotfix ] [ runtime ] fix duplicate bytebuffer in defaultmessagestore
[ gr - 20486 ] make nativeimagedebuginfoprovider . fullfilepathfromclassname non - final
refactor ` ShadowBackupManagerTest ` to use ` Correspondence . from ` instead of an anonymous inner class to improve code readability and
updated references from US to EN language support in JRELocaleProviderAdapter and LocaleDataMetaInfo - XLocales from US to EN
localtransactionsigner : remove unnecessary check for redeemdata = = null
add minecraft . forge . tessellator . draw ( ) and mod . forge . terrain . png
added a return statement in TxCacheDB . java to ensure proper handling of transaction cache operations
updated import statements to use jdk . internal . org . objectweb instead of com . sun . xml . internal . ws . org . objectweb
refactor FastDictionary class for improved performance to enhance performance and maintainability of the code
update close session status to ` ` closed ' ' instead of ` ` wasclosed ' '
updated the parameters of FlightEvent types in FlightEventsTest . java from 1200 and 1200 to 1400 and 15.0 , and modified the
[ beam - 12626 ] migrate protobuf - related classes to vendored grpc versions 1p26p0 to align with the new vendored
replaced ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to ensure
add course id to the getprofilepicturelink method and use it in getstudentprofilepicturelink ( )
added a shortRules list and modified the defaultRules initialization in DefaultPasswordValidator . java , and added a test for alphabetic and numeric sequences in
simonstewart : change the default remote control command to ` ` capturescreenshottostring ' ' and ` ` retrievelastremotecontrol
removed JUnit Test annotation from ProxyClassSerializationTest . java to streamline test execution by eliminating unnecessary dependencies
updated thumbnail scaling and padding arguments in DLNAMediaInfo . java to ensure proper formatting and formatting of thumbnail dimensions
[ gr - 11919 ] replace the speculativeguardmovementphase . create ( ) phase with the speculativeguardmovement
added additional checks to the authentication manager bean definition parser in AuthenticationManagerBeanDefinitionParser . java to ensure that multiple authentication manager instances do not override the existing
refactor ForwardedRequestCustomizer to handle different host types and update server handling logic to improve clarity and functionality of server handling in request processing
set the buffer length to zero in ConsoleReader . java to ensure proper resource management and prevent potential memory leaks
change visibility of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these roles
update version numbers of OpenIDE - Module - Specification - Version from 1.8 . 0 to 1.8 . 0 across multiple files to ensure compatibility with
hbase - 25828 set the default tls wrap size for hbase rpcserver ( # 2576 )
refactor multiple Java classes to improve code structure and maintainability to enhance maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to use JUnit 4 annotations and add tests for tokenizer functionality to improve test clarity and ensure proper exception handling during token
refactor protocol binding handling in OpenSamlAuthenticationRequestFactory and add unit tests in OpenSamlAuthenticationRequestFactoryTests to improve protocol binding validation and ensure
added AttachedSurfaceControl import and modified SurfaceControl transaction handling in DepthController . java to enhance surface control functionality and ensure proper transaction execution
update version string from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility with newer version
hbase - 27237 allow bulk load to be run on table that do n ' t have write permission
updated subList logic in TsFileManagement and modified measurement schemas from [ 0 ] to [ 9 ] in MergeMultiChunkTask and MergeTask
camel - 14136 : fixed genericfileconverter to handle fileinputstream properly . thanks to john heitner for the patch .
added login functionality to DefaultShardManager and ShardManagerBuilder classes to allow for conditional execution of the shard manager ' s login method
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose of the
modified response completion handling in HttpSender to check if the response is marked to ensure proper termination of the exchange when the response is marked as completed
do n ' t show giver comment for non - user student
added support for allowing or disabling linked profiles in BMPImageReader to enhance security by allowing users to disable linked profiles
updated the position of the Location parameter in the setSimpleCuboid method calls to correct the location calculation to ensure consistent behavior across different plot height
pmd : wait for the status of a package before open the pmd tool
refactor grid presenter initialization to use a dedicated method for setting grid sizes to improve code readability and maintainability by consolidating size settings
changed return values from false to true in ContributionsListFragment . java to ensure consistent behavior across different scenarios
added a new test method ` testSkipRange ` in ` DistinctPrefixFilterIT ` and modified the scan logic in ` BaseResultIterators
pdfbox - 4892 : add test case for acrobatcheckboxgroupproperties
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to provide a mechanism for retrieving the last modified timestamp of a
added a check for the " metaTable " property in the HiveIcebergStorageHandler class to ensure that metadata tables are valid before proceeding
change cashdepositform to use a combobox instead of a text field
changed catch block from IOException to Throwable in WriteFlusher . java to handle a broader range of error scenarios
added a boolean variable ` mStartedEnterAnimation ` and modified animation notification logic in ` IconRecentsView . java ` to improve animation handling logic
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to provide a mechanism for managing the active key ID in the
updated action names from " send text mail " to " @ text / sendActionLabel " and " @ text / sendAttachmentsMessageActionDescription
changed the ` isActive ` variable from ` boolean ` to ` volatile boolean ` to ensure thread safety when accessing the ` isActive ` variable
( chore ) camel - core : remove isdesc ( ) from orderbyexpressioncontext , use isasc ( ) instead
make sure tostring ( ) do n ' t throw classcastexception
added a check for the ownCloud application name in the DisplayUtils class to ensure that the application name matches the ownCloud application name
hbase - 27346 master should automatically set the perm of the rootdir if it do not match the hbase . rootdir . perms config
change return value from httpServletRequest to httpServletResponse in JakartaServletWebExchange and JavaxServletWebExchange classes to ensure correct retrieval of the locale from
refactor Instant class implementation to improve code readability and maintainability
updated state format handling from ` int ` to ` String ` in multiple test classes to ensure consistency in state format handling across the application
removed the ' type ' variable from the logging statement in CentralAuthenticationServiceImpl . java to simplify the logging format and improve code readability
added IllegalArgumentException to the exception handling logic in PDICCBased . java to improve error handling for IllegalArgumentExceptions
removed redundant check for file existence in AbstractFileResourceSet . java to improve code readability and maintainability
[ mng - 5342 ] align file path to the base directory in plugin parameter expression evaluation
add a protobuf coder registrar to allow registration of protobuf coder .
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer . java and added a new test for signed numeric literals in
refactor LaunchLugHandler and RailGuideHandler to accept parent length as a parameter for LaunchLug and RailLug attributes to improve clarity
added a method ` getNonceFactory ( ) ` that returns null in ` BitmexStreamingExchange . java ` to provide a default nonce factory
updated logging statements to use placeholder syntax instead of string concatenation to improve code readability and maintainability by using parameterized logging
[ java ] adjust test timeouts in driverconductortest to account for timeouts .
changed the ` initializeLoadedClasses ` variable from ` true ` to ` false ` in ` ScanSpec . java ` to disable class initialization for improved
added a call to grab focus on the search field in FullTextSearchPanel . java to ensure the search field is properly initialized before usage
log4j2 - 1329 fix npe in tlsconnectionlogging
updated the assertion in StatementTest to use a random value for the result set to improve readability and maintainability of the test code
updated the assertion in TestSolrConfigHandler to include the server base URL in the error message to improve clarity of error messages by including the server '
replaced HttpMethod with ServerHttpRequest and ServerWebExchange mocks in CsrfWebFilterTests to ensure proper mocking of ServerHttpRequest and ServerWeb
updated drawable density handling in FilterResourcesStep . java to improve clarity and functionality to enhance code readability and maintainability by using a constant for density
added a new private variable ` buttonUIID ` and a method ` elementPrefix ` to retrieve its UIID based on the component type to improve
removed density DPI check from rotation condition in RecentsAnimationDeviceState . java to simplify the condition for better readability and maintainability
added two new test files , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , for testing
added import for LuceneTestCase . AwaitsFix and annotated ReplicationFactorTest . java with @ AwaitsFix annotation to indicate that the test
fixed - rexecutorservice . schedule ( ) and rexecutorservice . schedule ( ) method throw npe if the nextstartdate be null . #
simplified the condition for determining ` needsToUpdateCredentials ` in ` FileDownloader ` and ` FileUploader ` classes to improve code readability and
added null check and closing logic for StoreFileScanners in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
[ java ] use getordefault ( ) instead of get ( ) for get ( ) method in netmetrics .
added nonce parameter and assertion for token claims in TokenMvcMockTests to ensure correct claims are retrieved for a specific token
refactor ChartEditor , ChartEditorFactory , DefaultAxisEditor , DefaultChartEditor , DefaultChartEditorManager , DefaultPlotEditor , and PaletteChooserPanel
added methods to set the width and height of the formLayeredPane to ensure proper layout behavior for the layered pane
removed unused import of StringSearchPanel and added a method to calculate the maximum Y - coordinate to improve code clarity and ensure proper handling of null owner
updated the ` openDatabase ` method to return a boolean indicating if the shared database connection is connected to ensure proper resource management and prevent potential memory leak
refactor Docker command handling to use the Platform constant instead of a hardcoded value to improve maintainability and readability of the code
added null check for input stream and improved error handling in TestIsartorValidationFromClasspath . java to enhance robustness by preventing null pointer exceptions
added a new color variable for folder leave behind and modified the drawLeaveBehind method to accept a color parameter to enhance user experience by allowing
report error dialog for canary version mismatch on android studio
api : check for null identityproxy table name and log a warning if it be invalid
removed unused module persistence lists and their associated getters and setters from StartArgs . java to streamline the code and improve maintainability by eliminating
updated argument validation logic and error message formatting in GeminiMarketDataService . java to ensure correct handling of argument lengths and improve clarity in error messages
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to maintain insertion order for questions in the flow scope
add unit test to show how to use a single role in a realm .
added multiple exclusions for specific JSP settings in AuthCheckFilter to enhance security by excluding specific JSP settings from the authentication check
refactor the handling of posted runnables and introduce a new method for sorting runnables to improve code readability and maintainability by consolidating
updated method signatures of ` runCommand ` in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and ` CommandRunner ` to use var
refactor XMLParser to use a local variable for reading and return an END _ TAG to improve code readability and prevent potential null pointer exceptions
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address overflow issues related to
added pivot points to the arrow in the DeepShortcutsContainer to ensure the arrow position reflects the icon position based on icon position
do n ' t print stacktraces to stderr , just use keyset iterator instead
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter and modified related logic for handling new task transitions to enhance the functionality
pdfbox - 4892 : use class . getname ( ) instead of org . apache . pdfbox . extractttffonts in usage
added hostname validation in EmailFormatSpecifier and improved error handling in HostnameFormatSpecifier to ensure valid hostnames and improve error handling for invalid hostnames
replaced references to ` DrawerActivity . this ` with direct references to ` this ` across multiple activities to improve code readability and maintainability by
refactor SizeBasedDocIdIterator and MatchEntireSegmentDocIdSetBlock to use final variables for maxDocId and currentDocId
updated FileDialoger to accept a filename parameter and modified the promptToOpenFile method to accept an additional parameter to enhance flexibility in opening files based on
updated widget span and sleep delay settings in AppsCustomizePagedView . java and added the updatePageCounts method in AppsCustom
added logic to retrieve and update component bounding box based on instance contexts in FlightConfiguration . java to improve the accuracy of bounding box calculations and prevent
( chore ) camel - micrometer : use direct : instead of seda :
updated DateTimeFormatter to use Locale . ROOT for default date format to ensure consistent date formatting across different locales
[ ds - 205 ] add permission check to filter out metadata
added a new test method ` testMissingRequired ` to ` TestStarTreeConfig ` to ensure that ` StarTreeConfig ` correctly handles null values
camel - 14246 : camel - spring - boot - allow to configure the recipient of the exchange . thanks to jbellis for it
refactor InlineLayoutBox and HoverListener to improve layout handling and repaint logic to enhance layout responsiveness and maintain consistent repaint behavior based on
refactor AuthenticatorActivity to use a dedicated OperationsService instead of DetectAuthenticationMethodOperation to improve code organization and maintainability by consolidating operations
