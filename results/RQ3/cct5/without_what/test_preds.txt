fix deprecation warn for socketappender convenience constructor
( chore ) camel - test - infra - spring - boot - component : fixed issue with csrf header
[ java ] : remove use of RecordDescriptor when calculate msg length .
cloudstack - 6946 : do n ' t apply cpu or ram overcommit ratio if vm be not specify in vm detail
added anti - alias flag functionality to ShadowPaint and updated related tests to ensure that anti - aliasing functionality is correctly implemented and validated in paint tests
updated the title in MassSetFieldsDialog to use localized strings to improve internationalization support for displaying field names
changed assertion to conditional logging for empty bugs and added handling for Eclipse projects to improve error reporting clarity and ensure proper compilation when no bugs are reported
fix # 784 : npe in realmbase with no scheme ( # 784 )
added a new interface RemoteInputListener for handling connection events to improve input notification upon connection failures
added braces for clarity and consistency in the OrcEncodedDataReader class to improve code readability and maintainability by organizing conditional statements
[ homeconnect ] only fire once if thing be enable ( # 10348 )
added null checks before removing and adding policies in AuthorizeAdminServlet . java to prevent potential NullPointerExceptions when the authorization manager is not initialized
updated assertions in tests to use Hamcrest matchers instead of Java version checks to ensure compatibility with Java 9 and improve test accuracy
added JSON serialization and deserialization of dag information in TezTask . java to enable better handling and debugging of dag information during JSON processing
updated time calculation in ComputedSummary . java and added heapTime method in HprofHeap . java to improve clarity of heap time representation and ensure correct tagging
replaced RxJava2Tasks with ApacheHttpClientMediaWikiApi for upload count retrieval to streamline API usage and improve code modularity
do n ' t check against mvstore lock too often in multithreaded mode
[ issue # 5604 ] fix commitlog size limit do n ' t work when maxoffset = 0 ( # 5704 )
fix crash when mark a folder as open but associated folder be not open
add a test method to verify sorting of PGProperty values in ascending order to ensure that property names are correctly sorted in ascending order
remove the constant for the previous commit that cause the student to fall back to other
updated method signatures to use ItemInfo instead of Object to improve type safety by ensuring compatibility with ItemInfo
updated assertions in RequestBuilderTest to use ` isIn ` for clarity to improve readability of error message assertions for better understanding
updated NearbyActivity to use NearbyListFragment instead of a hardcoded NearbyMapFragment to improve modularity and clarity of fragment handling within the application
[ calcite - 1186 ] fix memory leak in flatprofilecontainerfree
add configuration option to send zero anomaly email to dashboard
[ flink - 24987 ] [ kafka ] fix flinkkafkaproducerbase # open should restore the state
added methods to retrieve users and geofences from the database to enhance data retrieval capabilities for better user management
add max length parameter to BlockingResponseListener constructor to enable dynamic maximum size allocation for responses
refactor member broadcast handling to use byte arrays directly instead of byte arrays to improve efficiency and reduce code complexity
replace print statement with logger and ensure proper resource management with try - finally block to enhance logging clarity and ensure resources are released properly
remove lead / % 21 on test where it be not applicable .
updated test cases in ConfigMetadataProviderTest . java to improve test coverage and ensure accuracy of configuration metadata handling
updated import statements and refactored parameter name in the updateNoteReminder method to improve code clarity and maintain consistency in parameter naming
added a private static class ` AcceptAllFilter ` and refactored directory stream handling to use it to improve code readability and maintainability by encapsulating the filter logic
refactor JdbcTestDataSet class for improved readability to enhance maintainability and ease of understanding
added exception handling for ClassNotFoundException in HotSpotResolvedObjectTypeImpl and related classes to improve error handling and provide clearer diagnostics when a class loading fails
refactor Docker image name validation into a new utility class and update usage to improve code clarity and ensure valid Docker image names
updated the displayed message for incorrect credentials in LoginActivity to improve user feedback by indicating the correct login error
added ` setAutofocus ( " autofocus " ) ` to multiple Java classes to ensure consistent focus behavior across different UI components
add a test method for verifying SAML configuration of identity zones to ensure correct handling of zone configuration during SAML provisioning
added checks for empty list elements in ComparableVersion . java and updated test cases in ComparableVersionTest . java to ensure correct list handling and validate versioning functionality
updated button placement methods and added padding and margin properties in the Sheet class to improve layout responsiveness and ensure consistent behavior based on window dimensions
updated package structure of ParallelUniverse and related imports to improve organization and organization of the Robolectric testing framework
modified constructor invocation to use the correct method type handling to improve type safety and avoid potential ClassCastException at runtime
change fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to ensure correct rendering of text in the style
added methods to draw self - loops in the graph and conditional checks to enhance visual representation of self loops in the graph
updated ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059 across multiple files to update configuration for TVM to align with new SOLIDITY requirements
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity on the method ' s purpose of handling managed objects
reset the translation position of the drag handle indicator to zero to ensure the drag handle indicator starts in the correct place
remove unnecessary log when view item or collection be null
updated the description of the configuration for query optimization in HiveConf . java to clarify filter handling behavior during query optimization
skip test that fail on window due to build server issue
added Maven bundles for Jetty ALPN client libraries and a debug option for diagnosing OSGi bundles to enhance compatibility with Jetty and facilitate debugging in OSGi environments
fix for occasional deadlock when execute async job
refactor transaction handling methods for improved clarity to enhance maintainability and readability of the code
replaced @ CustomFieldBehavior with @ ExcludeFromRuleKey in GenruleBuildable . java to exclude specific errors from artifact caching
danielwagnerhall : using ffmpeg in the firefox profile , so it can be use directly from the build server without a platform instal
fix the bug that colfamtodynamiccolumnsmapping could n ' t be update when table have exist column
[ hotfix ] [ runtime ] fix remain warning in tupletupleunwrappingiterator
phoenix - 4875 : add functionality to convert parent to a view when client version less than minimum _ SPLITTABLE _ SYSTEM _ CATALOG
added code to update student cascade when instructor be create due to course
fix unused import , a this break the build
fix check for block hardness in loenspiston . close # 1097
added a new file LongPointerPressTest3049 . java to implement a UI test for network errors to verify the behavior of LongPointer when there is no networking error in the form
[ gr - 35628 ] remove trufflefunctioninlining check to avoid redundant inlining .
simplified null checks for alias , ResultSetType , and Class in BaseBuilder . java and XMLConfigBuilder . java to improve code readability and maintainability by reducing repetition
fix list block parser to correctly deeply indent list
added a new class AbstractOptionalAssert for handling Optional values in tests to consolidate and improve assertion logic in the test framework
added an import statement for JUnit ' s Ignore annotation and marked WebfluxNotIncludedTests as @ Ignore to mark the test as un - ignored due to an issue in GitHub issue # 1070
change testcaselogger . savemessage to avoid create a new native method .
camel - 23894 : fix a syntax error in camel - core
added a check for video format in the conditional statement of RemotePlayHandler . java to ensure that web subtitles are only processed when the video format is video
disable the tl algorithm in ComHostnameVerifier and JavaxHostnameVerifier to improve security by preventing unnecessary certificate validation
server : ignore islocalstorage ( ) method when list local storage pool ( # 7864 )
hive - 23702 : cache result cache : log more information about each cache entry . ( gopal v , review by sergey shelukhin )
add option to skip update the pom when manage dependency model be update
added a test for the last intent sender request handling in ShadowActivityTest . java and implemented pending intent sending in ShadowActivity . java to ensure that the Android intentSender correctly handles and sends pending intents with specific request codes
replaced GLCanvas with GLJPanel and refactored rendering hints handling in RocketFigure3d to improve rendering performance and maintainability by centralizing graphics creation logic
updated the initialization of the controllerListeners list to use a synchronized list to ensure thread safety when modifying the listener list in the account handler
solr - 9893 : easymock should not work with java 9 , disable test
update year retrieval method in TimestampUtils and enhance date formatting using DateTimeFormatter in SetObject310Test to improve accuracy of year handling and enhance date formatting capabilities
fix an issue with jabber connection where it be n ' t really initialize .
# 10343 - fix transactionhandler commit id format ( # 10353 )
replaced ByteChunk with ByteBuffer for better memory management to improve performance and reduce memory usage during buffer operations
added a method ` toSync ` to ` AsyncUtils ` and created corresponding unit tests in ` AsyncUtilsTest ` to improve async handling and ensure proper unit testing for asynchronous exception conversion
added ActionGraphBuilder import and updated method signatures to use it across multiple compiler factories to enhance action graph building capabilities for improved build efficiency
eranmes : adding test for hide file input . fix issue 833 .
removed redundant code block for table creation to streamline the code for better readability and maintainability
check if the maven folder exists before try to load it
ggb - 2118 hide hide label for hidden input box ( previous solution be not perfect anyway )
fix npe when return null from getmetadata ( )
fix buffer DECODE _ ONLY flag setting in DefaultTrackOutput . java to ensure the correct flag is added for decoding purposes
fixed - do n ' t reorder entity with ordered by id when cache be non - sorted by id
updated error message for missing method calls in Reporter . java to clarify the reason for the verification method
added a null check for backupFolder before logging the expiration time to avoid potential NullPointerExceptions during execution
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating a void array using reflection to explore and handle the behavior of Java reflection when attempting to instantiate an array of void type
added @ AddToRuleKey annotation to toolType fields in ClangCompiler and GccCompiler to ensure consistent tracking of toolType across different compiler implementations
pincheck : increase pincheck timeouts to 10 second instead of infinite loop
camel - prometheus : fix sample and gauge compilation unit test
removed the @ Ignore ( " requires mongodb server " ) annotations from multiple test classes to ensure consistent execution of tests without the " requires mongodb server " requirement
( chore ) camel - jms : fix checkstyle violation
updated condition to check if the table is an artifical instead of its name to improve accuracy of metadata handling by ensuring only valid artificial tables are processed
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and ` LaunchMapper . java ` to ensure correct handling of directory types in file operations
updated session attribute handling logic and improved null checks in MongoSessionManager . java to ensure robust handling of empty attributes and avoid null pointer exceptions
change surfaceholder to use setsizefromlayout ( ) instead of setfixedsize ( ) to improve the appearance of the surfaceholder on the screen
replaced direct access to the _ stopping variable with a CountDownLatch for thread safety to ensure that the thread only proceeds if the stopping state is not null
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 6246 : fix defaultmessagehistory to use the timestamp when calculate elapsed time
fixed flaky test due to a timing issue on jenkins .
modified the assertion for WebSocketHandshakeException to use a conditional check to improve error handling by providing clearer assertion failure messages
added View . OnLayoutChangeListener to the AllAppsTransitionController class to simplify the layout change listener implementation for better readability and maintainability
refactor variable name from ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability
int - 1257 , add support for ' defaultoutputchannel ' on xpath router configuration
updated cacheSeconds type from int to String and added DurationCapable annotation to enhance configurability of cache duration configuration
update openapi version in documentation to match late release
removed the append method call from ByteBufferPool to simplify the buffer management process
added a check for the presence of alt - rt . jar in the boot class path to ensure the test skips execution if alt - rt . jar is detect and improve error handling
updated user deletion logic to delete all users with uppercase naming conventions to ensure accuracy of user identification in the application
replaced ` Arrays . asList ` with ` List < String > ` for configuration options in ` FlightRecorderProfiler . java ` to improve flexibility and support Java version compatibility
added a method to check if the stream is empty in WebCamInputPanel and modified the imageDropHappened call in WebcamInputDialog to ensure that null checks are handled before processing the image
added a check for content view presence in the HttpParser loop to ensure that the operation only proceeds if the content is not empty , preventing potential errors
refactor AtmosEndpoint class to improve code readability to enhance maintainability and simplify future updates
added additional conditions to check for " printf " and " print " methods in Java2TypeScriptAdapter . java to enhance functionality for processing print statements alongside existing print methods
add a new file TestCapacityUntilGCWrapAround . java and native methods for managing metaspace capacity in WhiteBox . java to ensure consistent behavior of garbage collection methods on 32 - bit platforms
updated package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
simplify starttime setting ; document badly name method
camel - 3440 : added unit test base on user forum issue .
# 719 : fix the warning on invalid icc sequence number ( # 719 )
fix terra pick , fix item rod . shouldcausereequipanimation not use sea .
updated JoobyModule and SpringModule to conditionally register singleton instances based on entry types to enhance security by ensuring singleton instances are only registered for Config and Environment classes
simplify implementation , a suggest by valerybokov
bug 59811 - nameupdater : load additional nameupdater . properties from external resource ( like jmeter )
fix the race condition when start ellipsoidregionselector .
replaced HTTP references with HTTPS references in JavaSEPort . java to enhance security by using a secure connection
[ geos - 8042 ] prevent npe on invalid property name in wfs getfeature response
simplified the assignment of the grantor variable by removing unnecessary comparison to enhance code readability and maintain consistency
added graphics configuration and rendering improvements in DiagramGenerationTest . java to enhance image rendering capabilities by using transparent background for better visual consistency
add illegalargumentexception to the fmlcommonhandler when a mod that edits minecraft . class do n ' t exist anymore
refactor DataUtilities and ReTypeFeatureReader classes for improved clarity to enhance code maintainability and readability
make locktest more robust , avoid lock . islocked ( ) hang
added methods to calculate the whole word tokenize and join tokens from a string to enhance tokenization functionality for better user input handling
fix bz 66633 - always return 404 error code for internal server error
add a command index variable and update command parsing logic in SystemHighlighter . java to enhance command handling accuracy and improve code readability
update version and version date constants in Constants . java to prepare for the upcoming release by indicating a new snapshot version and pending release date
updated buffer position to use dimensionSize instead of idx to ensure correct buffer size based on dimension size
added support for handling drag and drop states in the Quickstep integration process to improve user experience by ensuring the system correctly manages drag state changes
[ hotfix ] [ test ] skip flaky test in java 7
add a new cipher type " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to TestCipher . java to ensure compatibility with GCM standards for encryption
replaced ` getDescription ( ) . getText ( ) ` with ` getLongDescription ( ) ` in ` NearbyMapFragment ` to improve clarity by using long descriptions for place descriptions
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization of SCIM group members
refactor HqlQueryRenderer to use a loop for processing reserved words and enhance query rendering tests to improve code readability and support schema scanning for HQL queries
[ java ] fix null check for subscriptionhelper input .
refactor the Parser class for improved clarity to enhance code maintainability and readability
added a new parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method and modified related calls to ensure correct stream index adjustments when a track is selected
tika - 697 -- upgrade to tika - 697 -- need to upgrade tika - 697 to the late version .
[ flink - 18315 ] [ table - planner - blink ] remove duplicate getmonotonicity method from flinksqloperatortable
added equality and hash code methods to OneTimeTokenAccount and OneTimeToken classes to enhance data comparison and retrieval capabilities for better data integrity
added a condition to check if the assistant is not launched when fling to ensure that fling is not triggered when the assistant is not launched
added a new file SolarisShortDSA . java that implements a secure way to interact with Solaris signatures in a secure environment
added toggleSearchLabel method with a value of false to disable search label functionality in the fragment
cloudstack - 7119 : lock volume to prevent deadlock when take snapshot
refactor DetailsServiceConnection to improve code structure and readability to enhance maintainability and facilitate the management of service connections
replaced direct failure handling with an AtomicReference for throwable reference to improve clarity and maintainability of error management in tests
removed the equals method from the ConjunctionScorer class to simplify the logic for better readability and maintainability
added null check for variable ' v ' in Launcher . java and log an error message when removing items to improve error handling and debugging when binding items
small refactoring of metadataraftgroupmanager to make it resilient to too many commit
refactor cache size handling and improve logging when shrinking cache to 90% to ensure cache operations behave correctly and provide clearer diagnostics when the cache is full
updated API path from v2 to v3 and enhanced methods in CryptoFacilities classes to include unfilled cryptocurrency data to align API functionality with API v3 and improve data handling capabilities
added empty ( ) method to freenect2 to provide a way to check if the size of collection is empty
drill - 8416 : fix memory leak in read parquet file ( # 2404 )
modified the argument handling and added validation for market data type in SerumStreamingService . java to ensure correct argument length and prevent runtime errors when processing market data types
add a config option to disable the charging animation when the pool be charging on top of a mana pool
[ java ] continue a cluster node restart if a client connect to a complete cluster to avoid timeout .
refactor exception handling by changing the variable name from " ignore " to " ex " and adding logging for the error message to improve error handling clarity and maintain consistent error reporting
make test more reliable on less filesystems
updated resource injection method calls in ResourcesInjectorFull . java to ensure correct usage of dialog and screen styles
updated changeLogFile and outputFile types from String to FileResource in BaseLiquibaseTask and DBDocTask classes to improve handling of file resources and enhance type safety
fix checkstyle issue in blockworldvector . java ( # 700 )
refactor LongConcurrentLRUMap by making key and value fields final to enhance immutability and prevent unintended modifications
escape special character in url ( prevent eclipse from crash )
modify the KRB5CCNAME environment variable handling in FileCredentialsCache . java and adjusted the initialization of the credentials cache in EmptyCC . java to enhance configuration flexibility and ensure the cache is properly instantiated and validated
updated the database path in ValidateMultiSignContractTest . java to correct the output file for multi - signature validation
remove hassufficientpeers ( ) from protocol manager ( # 107 )
fix an issue with firefox not start when session log be close .
mondrian : do n ' t expand [ x , y ] or [ z , z ] in ca
added a check to reset pendingRenderingOperations if a maximum size exceeds a specific maximum value to ensure that operations are only processed when minimumized , preventing potential errors in rendering
make sleepmillis ( ) not rely on system . currenttimemillis ( ) .
fix # 1633 [ write - behind ] store old value in write - behind queue
added a line to clear the icon of a JLabel in GroupTreeCellRenderer to improve user interface by removing space during label display
updated test method names in TestBlacklistAwareRedirectResolver to differentiate between strict and nonstrict matches to improve clarity and functionality of URL handling in the test cases
added IO import and improved test cases for ShutdownMonitor and ShutdownMonitorTest classes to enhance resource management and ensure proper socket closure during shutdown
updated move size calculation and modified chunk fill rate logic in RandomAccessStore . java to improve efficiency in resource management and ensure better handling of larger data
refactor code to improve type handling and error messages in Json serialization to enhance code readability and maintainability while addressing serialization issue
[ hotfix ] [ runtime ] move componentclosingutils to flink - operators - coordinator
bug 9833 : when volume be attach to vm , also delete volume from storage when transition to error state
cloudstack - 10212 fixed network offering for ipaddress ( # 2227 )
replace userDetailsBeanNames with beanNames in the InitializeAuthenticationProviderBeanManagerConfigurer class to improve clarity and consistency in naming
updated the retry limit for the half deleted collection from 15 seconds to 30 seconds to improve reliability in managing leader deletions
replaced string input with exception in error messages across multiple parameter classes to improve error messaging clarity and reduce verbosity for invalid input handling
updated drawing parameters for graphical elements in URLImage . java to correct positioning of graphics elements by using negative coordinates
updated field name comparison in SolrTestCaseJ4 to ensure consistency in field name comparisons
remove unnecessary try / catch block in setwhitespaces
[ flink - 3390 ] [ runtime ] add cause when streamtaskexception throw npe
refactor string construction in Preprocess . java to simplify character validation and improve performance to enhance code readability and maintainability by reducing duplicated logic
modified the formatting of the ` read ` method in ` MessagePack . java ` to enhance code readability and maintain consistent formatting
added a new annotation interface named Mapper in the org . apache . ibatis . annotations package to provide a mechanism for custom annotation handling in the ibatis framework
avoid double - encode fhir comment in jsonparser ( # 5335 )
fix artifact parsing for externallibrary with no internal name .
added an alias for " node _ popup _ scripting " in the entryNavigator to improve clarity on the node popup ' s purpose in the scripting menu
updated constants and methods in OverviewActionsView and RecentsView to enhance task visibility and interaction based on device profile to improve user experience by refining the behavior of action views in different device contexts
camel - 8569 : fixed compiler error due api change in camel - jms
updated method signatures by removing redundant IOException declaration to improve code readability and maintainability
deleted the deprecated classes AbstractDelegatedVerb and FailureContext to remove outdated code to streamline the codebase and eliminate obsolete functionality
modified GzipHandlerTest to use final variables and added a MicroServlet for handling content ETag and content length to enhance immutability and correctness of content type handling
fix for issue 2844 : wrong method name of observable . repeat ( )
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance traceability of Speedment operations and provide clearer error messages
add a new oai config servlet that will set the default oai config if it be unavailable .
fix a potential infinite loop in storescanner . nextrow ( ) . fix # 550
camel - test : disable jmx if jmx be not enable , so we can run the camel test with it .
replaced hardcoded ' / ' with a constant for better readability and maintainability of the code to ensure consistent use of the project ' s package path separator
added methods to find the YARN binary path and Hadoop home path in HiveConf . java and integrated them into SparkJobMonitor . java to enhance configuration flexibility for Spark applications in different environments
added support for Maria database connections in the database connection manager to enhance compatibility with MariaDB
fix checkstyle issue in util / logging / splitlogmanager . java ( # 638 )
added a new file ` ExecuteAndReturnStringTest . java ` to implement a test for executing and returning a string from a form to ensure that the application handles networking errors gracefully
added a new file ` InvokespecialInterface . java ` implementing interfaces with default method invocations to facilitate dynamic invocation of interfaces using method invocations in Java
[ hotfix ] [ runtime ] fix the javadoc of evictingboundedlist
fix npe : if turncosts = true , set edge _ BASED _ 2dir early
added validation to check if the background is disabled and selected is not less than zero to ensure that a valid selection is processed to prevent potential errors
added a null check for the ' md ' variable in RpcServer . java to ensure proper error handling when ' md ' is null
updated hotseat cell size calculation and icon center in TaskbarViewController . java to improve layout handling by accounting for border spacing
updated the construction of the ` valString ` string to use the ` values . get ( " partitionColumnIndex " ) ` to simplify the code and improve maintainability by reducing redundancy
fix : name space in cluster do not work
updated index directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is used for new indexing
changed the boolean value of the ` equal ` variable from ` false ` to ` true ` to ensure accurate comparison of display mode values
add epsilon to latin formatter ( fixes # 5288 )
for ds - 1815 , ensure that non - iso control be a valid dcvalue before save them in file .
michaeltamm : improve webdriver - backed selenium by remember the last frame
added a new button to the DataBrowser and modified the StringSearchPanel to exclude the BOOKMARKFILE _ EXTENSION check to improve user experience by ensuring that the clear button is only displayed when the name ends with " "
replaced the logic for determining the base URL and port in the OAuth2AuthorizationRequestRedirectFilter class to simplify the base URL construction and improve request handling
updated date assertions and error messages in SoftAssertionsTest . java for consistency to ensure accuracy of date comparisons in tests
updated the ` adaptOrders ` method to include a ` reverse ` parameter for handling limit orders to support the order reversal functionality in the API
fix for issue # 36 : incorrect type name in a variable declaration
jasonleyba : applying patch from james strachen addendum . remove unimplemented import
updated Configuration instantiation to accept a boolean parameter and removed unnecessary null check for default value to optimize configuration handling and reduce unnecessary logging
replaced super . drawChildren ( batch , parentAlpha ) with super . draw ( batch , parentAlpha ) in WidgetGroup . java to ensure proper rendering of child elements in the group
added unit test base on user forum issue
fix wrong usage of globals . catalina _ base _ prop in order to override in java 7 .
added unit tests for ` getBestDateTimePattern ` in ` ShadowICUTest . java ` and modified the return logic in ` ShadowICU . java ` to handle different locales to ensure accurate datetime pattern retrieval based on locale specifications
update the initialization of the object map to include additional color values to enhance the representation of color codes in the PlotSquared class
added ZuulProperties to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enhance tracing capabilities with Zuul properties during tracing
tika - 2443 -- ensure font parser have a default time zone
polish ` ` keep track of build time when build now ' '
fix a small error with the scrollbars in overview mode .
remove the gwt test that will be part of early commit .
remove nullability annotation from lazymessage ( # 2918 )
updated the error message format in TestStream . java to include a placeholder for better readability to enhance clarity of error messages for better debugging
move thymeleaf . templateparser . markup package to thymeleaf . templateparser . markup
camel - 7314 fixed xpath parser to correctly process attribute value with space
added @ Nullable annotation to FutureUtils . java to improve code clarity by indicating that certain variables may accept null values
add warn to notify user when dynamicinvoker be not resolve during call - graph construction
updated email addresses in ContextTest . java to point to the example email instead of the gmail package to improve clarity and maintainability of email representation
updated HTTP response handling to use 200 status code instead of 400 status code to reflect successful HTTP status codes for better error handling
Implement ` getColumnDataType ` method in ` AbstractResultSet ` and ` ResultTableResultSet ` classes to provide a way to retrieve column data types based on column indices
update dynamodb and test to throw unsupportedoperationexception when ddb service ca n ' t be instantiate
updated HSSFPictureData class to improve image handling methods to enhance performance and maintainability of image processing functionality
updated startTime and stopTime from long to Instant in Statistics . java to improve code readability and utilize Java ' s Instant API for duration handling
added version handling options for media info in LibMediaInfoParser to ensure compatibility with newer media formats and improve version management
added methods to create proxies for IdeaDependency in ProjectReader . java to improve dependency management by providing type - specific proxy types
8259552 : add miss serialheap to jdk . heap
added multiple @ SuppressWarnings ( " serial " ) annotations in GsonTypes . java to suppress the warning about the use of non - serializable fields
perf ( canvas ) : optimize mouse wheel event
datamongo - 1608 - fix npe in case of query without first name
[ flink - 17654 ] [ type ] fix equal and hashcode of typeinfoinfo in flink api doc
added a method to retrieve an identity provider by an issuer in XOAuthProviderConfigurator to ensure that active identity providers are only retrieved with the same issuer to maintain data integrity
pdfbox - 2852 : fix parsing of a map contain space after a proposal by krisztian kasa
refactor ContactsBackupJob to use a ServiceConnection for operations service management to improve code organization and streamline service connection handling
refactored type constraints and introduced a new class T6938454a with generics implementations to improve type handling and provide examples of bounded type parameters
add accountid . isconfighidden ( ) property to disable the check for account that be not hidden .
added a condition to log an error when the number of displays differs from the supported bounds to improve debugging and traceability of display state changes
updated schema removal method to use getSchemaKey ( ) instead of getSchemaName ( ) to ensure that the schema key is removed directly from the metadata
mow - 1225 fix load of passive login through web gui
added a new Box2DTest class and updated GDXTester and related classes to support a new test case implementation in the LibGDX framework
add more logging to cassandra - 5672 to help troubleshoot issue with cassandra - 5672
[ hotfix ] decrease the default buffer request timeout to 5 minute .
regenerate gapic client with documentation ( # 4382 )
added help button to openoffice index page ( patch by damien roth )
[ java ] use child option for configuring tcp nodelay on server to avoid warning and improve configurability .
modified method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService to use wildcard generics to improve type safety and reduce potential type safety issues
fix : do n ' t try to get the class name if it ' s the only one use in getclassinfo ( )
fix issue with bad url code when server be unaccessible
add support to querydsl for nested null handling .
added null checks for actor before processing actions in ParallelAction and SequenceAction classes to ensure actions are only processed when an actor is not null , improving robustness
test ( refactor ) : fix style issue in cttypetest . java ( # 2524 )
added synchronization to the sfWritersLock when closing resources to ensure thread safety when accessing shared resources
added a new file ` Issue888 _ JavaI . java ` that defines a class ` JJ ` and ` JK ` implementing ` Issue888 _ KotlinI ` with default values to test the behavior of ` JJ ` and ` Kotlin ` with different behaviors
added functionality to revoke existing CA certificates and updated related tests to ensure proper certificate revocation handling and improve test coverage
added tests for handling requests with no body codes in AbstractHttpTest and HttpServerTestBase classes to ensure proper functionality of HTTP response with no body when handling requests
added detailed error handling for scripts and improved context retrieval in ScriptTransformer . java to enhance robustness and clarity in error reporting during script execution
updated connection pooling type in HiveConf and added HikariDataSource configuration in QTestUtil and TxnHandler to enhance connection management and improve test reliability for Hikari - specific driver retrieval
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to improve code clarity by using the launcher ' s method directly
added file locking functionality to the FileMenuFilter and OCFileListFragment to enhance user experience by managing file locking options more effectively
updated Version . java files to reflect new versioning scheme to ensure compatibility with upcoming features and fixes
fix updateKeyspace - clear endpoint cache when keyspace be drop
added a private method ` waitForState ` for better state management in ` Locks . java ` and modified synchronization logic in ` ThreadExecutionSynchronizer . java ` to improve code readability and maintainability by centralizing state checking logic
refactor Skylark - related classes to use SkylarkRuleContextAttr instead of SkylarkRuleContextAttr to improve dependency management and maintain consistency in attribute handling
minimize the complexity of the storage interface in the html5 webdriver module ( # 1352 )
fix ( createviewstatement ) : do n ' t generate view with ` ` replace ' ' option
change catch block from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by providing more informative error messages
updated query string retrieval logic in SpellCheckComponent . java to ensure that the query string is properly initialized before use
added validation for header values to check for illegal characters to ensure that header values conform to HTTP specification and prevent potential errors in processing
[ gr - 33903 ] fix indexoutofboundsexception when query array size in hybridlayout .
mark apexcommentcontainer a experimental and remove a deprecate method
hhh - 510 - fix warning when lazy = true and fetchmode . lazy be true
change the NoGetOperationsFilter and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter to simplify the filter hierarchy by removing unnecessary parameters
added assertions to compare database names and table names in TestCompactionTxnHandler to ensure that the correct database and tab names are set during processing
camel - 8444 : camel - timer - make it suspendable to support graceful shutdown of camel - timer
added a conditional check before adding the trace to the trace list to ensure that tracing only occurs when the processed block is not processed
updated the null check in ProviderManager to use CollectionUtils for checking providers to enhance robustness by preventing NullPointerExceptions when the list of providers is null
simplified the condition for determining if the database is a PostgresDatabase instance to enhance code readability and maintainability by eliminating unnecessary checks
added checks for specific index limits in LocalIndexIT and introduced LOCAL _ INDEX _ LIMIT attribute in BaseScannerRegionObserver to ensure correct handling of limits and improve scan functionality
fix : raise an error when try to add a collection use the same name in the past .
updated cursor positioning logic in VDUBuffer and vt320 classes to ensure proper handling of cursor changes to improve user interface responsiveness
added a constant USE _ RETRIES to the HttpShardHandlerFactory class to manage retry settings more effectively
updated the VERSION _ NUMBER regex in JavaVersion . java and added a new test case in TestJavaVersion . java to ensure accurate parsing of version numbers in Java
[ flink - 21946 ] [ runtime ] fix the uncheckstate exception when allinputgates be empty
int - 3640 added empty test method to @ org . junit . test and enable run it by default .
modified the return statement to handle null properties gracefully to avoid potential NullPointerExceptions when accessing properties
modified IOException handling to initialize and cause the original IOException to improve error handling by providing the original cause of the IOException
updated error message to correct a typo in ClusterStackVersionService and RepositoryVersionResourceProvider to improve clarity and accuracy of error reporting
add the confidence listener to txidtextfield to properly remove and update the confidence
bugfix # 20574 - add support for g1 perm space to jmx ( # 2073 )
removed redundant import statements and simplified return logic in NearbyController . java to improve code clarity and maintainability by reducing redundancy
pdfbox - 4892 : improve visibility , a suggest by valerybokov
updated the condition in BaseSwipeUpHandlerV2 to check for home activity type to ensure that home activities are correctly handled during swipe up gestures
[ scb - 272 ] enable http header by default ( # 3770 )
convert network and sim country ISO to lowercase in ShadowTelephonyManagerTest and update return statements in ShadowTelephonyManager to ensure consistent handling of country ISO in lowercase and improve code clarity
updated the UnfreezeBalanceV2Actuator to set the unfreezed amount to ensure proper handling of unfreezed balance amounts
fix : correct style to follow the pr review comment
simonstewart : use fileutils in the firefox profile module instead of guava
rename various assertion classes for consistency in naming conventions to improve code readability and maintainability
adjust javadocs for new sumfoo ( ) / averagefoo ( ) method name
replaced DBObject pushing with a multi - field operation in Update . java and updated tests in MongoTemplateTests . java to support multiple push messages in MongoDB documents and ensure correct functionality through testing
fix nullpointerexception when init hubchangelog and there be no hubchangelog
added default and overridden onHoverEvent methods in InputConsumer and OverviewInputConsumer classes to handle hover event handling and improve hover event processing logic
added a sleep delay in CoreContainer when zkServer is not initialized to ensure proper initialization of the zk server before proceeding with boostrap configuration
camel - 8193 fixed the camel - netty - http consumer option description
hbase - 21900 up default client retry count to 15 ( all test pass on master )
replaced ` toPath ( ) ` with ` new File ( baseDirectory . getAbsolutePath ( ) ) ` and ` File . separator ` for file path handling to improve file path resolution and ensure consistent path formatting across different operating systems
make test more robust by retry findbugs in encodedgraphcachetest .
updated the query command and configuration in SchemaCrawlerTextCommandsOutputTest to replace " customer _ count " with " all _ tables " and added a new test for querying over existing tables to improve clarity and functionality of schema output testing
added logic to extract and set currency information for Kraken assets using a key - value pair to improve code maintainability and ensure currency metadata is accurately represented in the Kraken exchange
implement # anyof . tostring ( ) . fix # anyof : < string > to show inner condition description .
add javadoc and javadoc to alerttaskrunnerv2 , and fix name in group email
[ beam - 14299 ] make metric publisher only publish if the measurement or database be blank ( # 2370 )
renamed ` doTransform ` methods to ` downcast ` across multiple converter classes and updated their implementation to improve clarity and consistency in method naming
upgrade netutils to be more closely compatible with java 1.6 . 0 _ 45
escape quote column name in csv output ( # 3703 )
added methods for setting properties and retrieving properties in WrapSystem and StrUtils classes to enhance property management and improve parsing capabilities for method parameters
added a constructor to the UpdateRequest class that accepts a URL string to enable POST requests to handle different request methods
changed enum declaration from static to non - static in ProtoTypeAdapter . java to align with Java ' s best practices and conventions
added experimental format warning to the response handling in RequestHandlerUtils to inform users about potential future experimental format changes
updated JpmsUtil . java to format module names before logging them to enhance readability of log messages by displaying only specific module names
refactor row height calculation to use dynamic font retrieval for improved consistency to enhance row height accuracy based on the default label font
[ hotfix ] fix checkstyle violation in defaultbrokerheartbeatmanager
added variables for meanPartitionSize , partitionCount , and splitCount in CqlInputFormat . java to ensure accurate retrieval of split size based on the row ' s status
removed unnecessary condition checking for a null image and type in JUnitTestsShouldIncludeAssertRule . java to simplify the logic for determining if the name is a test class
[ drools - 7 ] add hashcode and equal implementation to ruleterminalnodelefttuple
added StageIDsRearranger import and resolution logic in TezCompiler . java to enhance StageIDsRearranger configuration for better optimization
move messagingservice to it own mbean so it can be use only from a concurrent mbean . patch by jbellis
added memory initialization checks and updated output formatting in LotsOfOutput . java to ensure accurate memory consumption and improve debugging information
added import statements for document handling and updated DimConfig initialization across multiple classes to enhance Javadocs and ensure consistent initialization across facet components
updated LdapProperties to manage anonymous read - only configurations and adjusted related test cases to enhance security by ensuring the correct configuration of LDAP context sources
refactor DatabaseMetaData class and associated methods to improve code readability and maintainability
[ java ] change access modifier of echandlerinputdofn from public to private to allow for extension by other module .
added a new method ` finishMocking ` to ` MockitoSession ` and modified the handling of exceptions in ` DefaultMockitoSession ` to improve error reporting and ensure proper mocking flow during testing
refactor dependency handling in GoTestDescription and add tests in GoTestIntegrationTest to improve code clarity and ensure correct behavior of generated rules
renamed variables and methods related to buffer and flushing for clarity in SPDYAsyncConnection to improve readability and manageability of the code
use getlowingblock instead of getstaticblock to fix smoke test
fix location listener crash on o x
add apr documentation to aprendpoint . builder ( ) .
[ hotfix ] [ client ] support json json endpoint for streaming plan
fix craftingmanager . getitemhash ( ) , id be always less than 16 .
[ flink - 15688 ] [ e2e ] fix filechannelrestart related test not work
tabsandindentsvisitor remove use of carriage return
added a pattern to compile temporary temporary files in NeuteredLinesFilter . java to enable handling of temporary files in PostgreSQL
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
added conditional checks for " INTERVAL " and " NCLOB " types in DataTypeFactory and ColumnSnapshotGenerator to ensure correct handling of data types based on their casing
fix flakiness in wavefront distribution summary and distribution summary
updated the handling of spring Cloud selector handles and modified the return statement in the DivideUpstreamUtils to improve clarity and functionality of the code
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable registration of listeners with specified parameters for improved latency tracking
added exception handling for SocketException in the testFullMethod , testFullURI , and testFullHeader methods to log warnings when closing the SSL connection to ensure proper error handling during tests
upgrade ignite to 1.5 . 0 . final and resolve http : / / github . com / apache / activemq / issues / 2106
updated the logic for handling empty lines and modified the condition for reaching the result set to improve clarity of error messages and correctness of result set detection
pdfbox - 2852 : catch all exception , not just ioexceptions , so ignore them
added tests for Hdr capabilities in ShadowDisplayTest and implemented corresponding methods in ShadowDisplay to ensure proper functionality and exception handling for display hdr capabilities across different Android versions
added a finally block to ensure the classLoader is set to null to prevent potential memory leaks after class loading
improved error messages in SemanticAnalyzer and SemiJoinHint classes to include expected details to enhance debugging by providing more context on the expected exceptions during semantic analysis
add default constructor to avoid npe .
change priority of serializableidiom to high for non ui component
updated the ` PhoenixDecimalObjectInspector ` constructor to accept ` PrimitiveTypeInfo ` and improved null handling to enhance type safety and ensure correct handling of decimal values
updated CompressionResponseStream to conditionally use GZIP output stream based on response commitment to enhance performance by avoiding unnecessary compression when the response is already committed
renamed parameter and method fromWWAuthenticate to authenticateHeader in Authenticator . java to improve clarity and consistency in naming conventions
added checks for specific EJS , IBM , and OOM packages to ensure only valid directory names are processed to avoid potential errors
log thread group name when stop a thread in the leak test
added logging for unauthorized access in MethodInvocationPrivilegeEvaluator . java to improve debugging visibility and traceability of unauthorized access processes
changed package name from " org . apache . nutch . crawl " to " org . apache . nutch . tools " in DmozParser . java to reflect a more appropriate organizational structure for better understanding
updated import statements in ChainingRegisteredServiceDelegatedAuthenticationPolicy . java and RegisteredServiceChainOperatorTypes . java to enhance code clarity and maintain consistency with Lombok standards
kvm : add iso path to vm , if it be user vm ( # 4439 )
refactor signal handling logic in SigInt . java and update test cases in SigIntTest . java to improve exception management and ensure correct handling of signal execution
replaced static import of ArrayUtils with an explicit import and replaced it with ArrayUtils . isEmpty for consistency to improve code readability and maintainability by using a consistent utility method
updated configuration imports and annotations in AxonAutoConfigurationWithSpringCloudTest . java to improve compatibility with boot testing framework
add some javadoc to colorRGBA to make it clear that interpolation be apply only to final color
remove deprecate resetinitializedplanningentities ( ) , already performplanningvalidationvalidation now .
added build time parameter to the RuleKey and related classes to enhance build time tracking capabilities for better tracking and debugging
updated field retrieval methods in GroupByOperator to use getDeclaredFields ( ) and changed the condition for fixedRowSize to improve accuracy of field size calculation based on their type
wallet : fix npe in addblockappearance ( )
added a new currency pair CNC _ BTC and updated related currency references to support trading functionality for Chinacoin ( CNC )
update skewAllowance initialization and related configurations to enhance flexibility in handling skew allowance configurations
updated sorting logic in SongListActivity and Utils to handle ItemSortBy correctly to ensure proper sorting functionality based on item type in the shuffle process
removed unused imports and refactored the ` readBodyToBytesIfNecessary ` method to utilize ` TypedOutput ` and ` TypedByteArray ` to improve code clarity and ensure proper handling of request data
introduce legacyblockwrapper for more flexible block class .
allow iceberg table tag to be specify to avoid npe
replaced ` newArrayList ` with ` Collections . singletonList ` for setting external groups to improve performance and flexibility in handling collections
change boundary for bounce , frame number , and frame number in physonmappingdemo and hybriddemo
added validation for PasswordChangeRequired property in IdentityProviderEndpoints . java to ensure proper handling of password change requirements for identity providers
removed the assumption of ` notInitializedInConstructors ` from ` uninitializedInConstructors ` to ensure that fields are only initialized when they are not initialized
modified SQL execution error handling to properly set the connection URL to ensure accurate SQL execution when the connection is closed
added a method ` testRequiredBody ` to handle user data validation in SpringmvcClient to ensure that the application correctly identifies and handles user data in annotations
updated regex patterns for user and password in CredentialInjector . java and modified the value in CredentialInjectorTest . java to ensure correct matching of user and password formats in database interactions
added a new menu item " Item4 " and a key binding for the ' KeyStroke ' to enhance functionality by providing additional options for user interaction
updated debug print statements and modified result assertion logic in TestCoreParser . java to improve clarity of output messages and enhance the robustness of the test assertions
fix compilation error from last commit
removed the public access modifier from the PopulatorContextStackItem class to enforce encapsulation within the PopulatorContextStackItem class
replaced integer numDocs with long numDocs and added a test for small sample from corpus to improve document count handling and ensure correct functionality of document analysis
refactor the event triggering logic to improve readability to enhance maintainability of the code
[ hotfix ] [ test ] let networkbufferpooltest extend testlogger
refactor query appending logic to use a more concise append method to improve code readability and maintainability by utilizing the append method directly
[ gr - 26354 ] fix unsafe getlong intrinsic for non - static initializer .
updated time zone reference from ARAST to EET across multiple language - specific TimeZoneNames files to ensure accurate representation of time zone across different languages
updated the ID value from 90000010 to 90000011 to reflect the new version of the DeprecationLogger class
hhh - 13553 make sure we throw a jdbcexception when try to roll back a transactional object
if there be no trail slash after ` ` . download ( ) ' ' , return ` ` ' ' .
fix for freeplane menu bar in macos
add some more test for piecewise integration ( x ^ ( x ) )
fix recent animation not get complete sometimes when use 3p launcher be : fcad20bad9
added a new test for modifying the configuration in Hive to ensure that the configuration correctly references the mod white list pattern
added an entry to invalidClasses in EntryLoader to ensure that invalid classes are properly stored during entry processing
rip out the sharded te from the player ' s team ( # 3408 )
updated Cookie domain initialization to use a dynamic domain name instead of a hardcoded value to improve flexibility for specifying the domain based on the environment
added checks to disable nullable validation in multiple change generators and updated logic for handling columns to ensure proper handling of nullable values during database operations
refactor SecurityTokenServiceClient and related components to improve code organization and maintainability to enhance maintainability and readability of the security token service functionality
added methods for deleting and adding documents and refactored CompositeIdRouter to use static final constants to improve code clarity and maintainability by reducing complexity and enhancing the logic
added snapshot handling for PostgreSQL in ` ExecutablePreparedStatementBase ` and updated test cases in ` PostgreSQLIntegrationTest ` to improve binary stream management for PostgreSQL queries and ensure correct functionality through testing
modified conditions for cache , max _ cached _ files , and max _ cached _ file _ size to account for non - negative values to ensure that the cache and cache sizes are valid before proceeding with further operations
allow drag from already exist tab and remove from the tabbed pane ( # 753 )
refactor description creation in ExecutionUnitRunner and test assertions in CucumberTest to improve clarity and maintainability of the code
updated version and build time string checks from ` ! myVersion . isEmpty ( ) ` to ` StringUtils . isNotEmpty ( ) ` to improve code readability and adhere to common utility methods
changed access modifiers of methods in TimeUtils from public to package - private to improve encapsulation by restricting access to utility methods within the same package
added a method to check for security frame and injected invokers in RefectionMHTests . java to ensure compatibility with Java versions below 18
updated file extension check to ensure proper identification of . jpg and . jpeg file extensions
[ gr - 27499 ] fix printing of host method type with debug info .
added icon loading and retrieval methods in Data classes across multiple classes to enable users to retrieve icons for different display nodes
fix stringindexoutofboundsexception in counterrequestaggregation ( fixes # 418 )
modified the replacement logic in FindAndReplace to handle dynamic expressions to ensure correct formatting of dollar signs when certain conditions are met
fixed - disabling of new connection with jabber server . smack - 298
modified the SchemaExtractionProcessor class implementation to enhance schema extraction functionality
added a method to copy directory contents from srcDir and destDir in IO . java and updated tests in SpecWebAppTest . java to streamline directory copying process and enhance test coverage for directory copying functionality
added exception handling for unknown datum classes in JacksonUtils . java to improve error reporting for better debugging and maintainability
replaced manual ABI building with ABI retrieval for class and source libraries to streamline ABI handling for better clarity and efficiency
updated the calculation of itemHeight by removing the background padding in favor of directly using the item height to simplify height adjustment logic for improved readability and maintainability
added code to normalize identifiers for database and table names to ensure consistent formatting of identifiers
fix for # 2370 : oracle compatibility do n ' t assume a schema ( # 2371 )
removed Logout implementation and added a comment to indicate finishing the activity to ensure that the activity is fully logged out without unnecessary logout
[ flink - 24770 ] [ stream ] change the test of mockstreamingruntimecontext to use a different task id
added a null check for element candidates before retrieving the type in FastImportAction . java to prevent potential NullPointerExceptions when the element selection is not available
updated the logic for checking the managed state of a bean in ContainerLifeCycle . java and adjusted assertions in ContainerLifeCycleTest . java to ensure correct management state retrieval and improve test accuracy
rename iexecutionattributesdialect to iexecutionattributedialect for good naming consistence
added a call to metadata . clearUnsafe ( ) in AlterTest . java to ensure that metadata is cleared before processing further
modified string initialization to handle null loc cases for date and month values to avoid potential NullPointerExceptions when loc is null
added null check for measurement in TabletInsertionDataContainer and created a new DisruptorQueueException class to enhance error handling and improve logging for disruptor queue operations
deleted the file Session2Token . java to the functionality was deemed unnecessary or redundant
cloudstack - 5563 : destroy volume also on destroy which be use to ensure that the volume be delete when the destination be remove .
added an Install shortcut implementation to SystemShortcut for managing web UI interactions to enhance user experience by enabling instant app install functionality within the launcher
added a null authoritiesPopulator implementation to LdapAuthenticationProvider and updated tests accordingly to ensure proper handling of null authorities in LDAP authentication
added fallback mechanism for retrolambda jar loading in Executor and CN1BuildMojo to ensure retrolambda jar is loaded correctly and improve error handling for missing dependencies
replaced ` buildOrThrow ( ) ` method with ` build ( ) ` method to simplify the method execution for better readability and maintainability
replaced FixedBitSet with Bits in the sortLiveDocs method to improve flexibility and performance when sorting live documents
added handleNullResult method call in JMESPathExtractor to handle null values gracefully during path extraction
handle case where user info be miss ; update import statements and refine javadocs
refactor assertions to use the current date and locale for consistency to improve readability and maintainability of the test code
cloudstack - 6295 : correct the comment of unsupportedoperationexception from ` ` vm snapshot with memory not support for vgpu enabled vm ' '
updated configuration handling to support both class and method configurations in RobolectricTestRunner to improve flexibility in configuring implementations based on class and method annotations
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize bio for improved performance and compatibility
refactor partition key comparison logic to use a unified method to improve code clarity and maintainability when comparing partition keys
added a new BooleanFlag ` ENABLE _ ICON _ IN _ TEXT _ HEADER ` to FeatureFlags . java to control the icon in the text header for better user experience
updated formatting in the conditional statement in SimulationStatus . java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback . Completable in StandardDeployer and StandardUndeployer classes to improve performance and simplify the code by using a more modern callback framework
added workspace listener to PreviewControllerImpl for handling workspace events to improve responsiveness to workspace updates during selection and unselection
updated conditions in ReflectionFactory and modified class name checks in ReflectUtil to improve type safety and ensure correct identification of anonymous classes
modified TransportHelper . java to improve method implementations to enhance performance and maintainability of the TransportHelper class
replaced the method of obtaining the file path in CatalinaAcegiUserRealm . java to ensure compatibility with the correct resource loading approach
ambari - 20827 - start actionmanager before any actionmanager instance during ambari - server startup ( dlysnichenko )
added null checks and assertions for initialization , modification , and getter methods in JSONWriter . java to enhance robustness by handling potential null values during for - each operations
refactor Hadoop file system methods in SliderAppsViewControllerImpl . java for improved clarity and consistency to ensure uniformity in file handling within the slider functionality
added a check to ensure the background manager is attached before attaching the window to prevent potential null pointer exceptions when attaching the background
updated tab navigation logic and adjusted positioning in multiple classes to ensure proper display and visual consistency in the user interface
added null check for URL in BaseDataSource and a corresponding test case to ensure that a valid URL is used to prevent runtime errors
added JUnit condition to enable the PebbleTemplateEngine on JRE 8 and 11 to ensure compatibility with the latest JRE features
added an EditNameDialogListener to handle directory creation dialog dismissed with new directory names to improve user experience by preventing accidental directory creation from being easily copied
add toolbar border functionality to various chart activities to enhance chart rendering capabilities for better user experience
updated the API endpoint from OKCoin to OKEX in OkCoinExchange . java to ensure compatibility with the latest API and improve security
jbrules - 2623 remove fixme ... s and use dedicate method instead .
replace FileChannel with SeekableByteChannel for improved input stream handling to enhance performance by reducing file reading overhead
refactor getFlattenFieldTransferPair method to accept a FieldReference parameter and adjust its usage to improve code clarity and enforce immutability of field references
rename MockHandler class to MockHandlerImpl to improve clarity and consistency in naming conventions
fix bug of proxy serialization config ( and fix indentation )
added ActivityManager settings for dynamic heap limit in QuickstepProcessInitializer based on debug device status to improve responsiveness of the app during development
improve code clarity by cache result of sumwithcompensation ( # 8493 )
camel - 2209 : added liquibase flag to ensure that raer test be not run if not in use .
updated the handling of the top level deletion condition in PrecompactedRow . java to ensure proper serialization and deserialization of tombstone data
modified return values in ICC _ Profile and ColorConvertOp classes and added InvalidRenderIntentTest class to ensure correct handling of invalid render intents and improve code readability
add new meterregistrylifecycletest ( ) bean to suppress leak of micrometerregistry lifecycle
[ 3.0 ] fix the problem of unexpected config center exception ( # 9340 )
add a test for pkcs12 certificate that do n ' t exist anymore .
camel - 16276 : simple language should parse simple binary for the end - of - the - end condition
fix : windows get dismissed when lose focus ( # 4177 )
add user . name to log message when access fail
updated file paths and scaling factors in SkeletonModelGpuSkinningTest . java and modified submesh handling in OgreXmlLoader . java to improve rendering accuracy and prevent potential NullPointerExceptions during rendering
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method signature to simplify method signature and avoid potential runtime exceptions
added @ Deprecated annotations to UpgradeResponse . java to mark outdated code for future removal or replacement
added support for a " d . ts " declaration option in JSweet command line and transpiler to enable users to generate d . ts files during transpilation
[ flink - 12190 ] [ table ] set default _ stream _ fetch _ timeout _ millis for kinesis consumer factory to 10 minute
[ beam - 11941 ] fix timestamp in dataflow worker
increased the maximum number of metastore server threads from 100000 to 1000 to improve resource management and performance in handling larger data sets
changed the return type of onTaskSnapshotChanged from void to boolean to enable callers to check if the snapshot has changed
fix shadow radius when swipe up animation logic
add aggregatorinput test case to demonstrate chain nesting and aggregation .
updated loop condition to use the ' end ' instead of ' limit ' and added a failure message to improve clarity and ensure proper error handling in the test
fix typo in isinterpreter ( ) method and use isinterpreter ( ) instead of isinternal ( )
updated condition to check for null before comparing ` previousCachedFilePath ` to avoid potential null pointer exceptions
updated LauncherPreviewRenderer to include DisplayController in WindowManagerProxy instantiation to enhance functionality by ensuring proper display management integration
updated tooltip text logic for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent naming of the root directory tooltip across different UI components
updated method call to use getDefaultToolkit ( ) instead of getToolkit ( ) for retrieving the screen size to ensure compatibility with the default toolkit architecture
tweak the type argument of the recognise method to avoid type pollution
# 44 : fetch result of a query with ` ` cat ' ' property use correct query syntax ( # 44 )
added bounds checking for drag index and removed debug print statement to ensure proper drag behavior and reduce debug output clutter
update moe version to last released 1.2 . 0 ( # 4868 )
fix typo in error message and add spendallGas ( ) call
updated error formatting in ElementsShouldSatisfy and ZippedElementsShouldSatisfy classes to include line breaks to improve readability and ensure consistent formatting of error messages
marked the Weights class as deprecated to indicate that this class should no longer be used in future development
refactor registration logic for unsafe plugins in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to improve clarity and maintainability of the code
added @ Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and created Sample class for testing to suppress module visibility warnings during the build process
update mCenterPagesVertically variable from true to false to disable vertical center page placement for better user experience
fix a race condition during migration finalization on master node . also fixes # 183
replaced instances of " HOST " with " baseUrl " and updated related method calls to improve code clarity and maintain consistency in URL configuration
changed the type of attributeValue from Object to List < Object > in WSFederationClaimsReleasePolicy . java to improve flexibility in handling multiple attribute values for better attribute management
updated test table creation and query parameters to use a specific database to ensure proper database context is used for testing purposes
added a new test case ` testCaseInsideBrackets ` to validate SQL parsing to ensure correct handling of unescaped parentheses in SQL expressions
added copy mode initialization method and modified event handling in ConsoleActivity . java to improve code clarity and functionality for different console interactions
refactor TestCommand to use XML parsing for XML output to improve XML output generation and enhance code readability
camel - 3540 fixed the npe in abstractlistaggregationstrategy when the exchange be null
( chore ) camel - core : log the cause use camelexchangeexception instead of the exchangehelper
move basicconfigurator to classic package for refactoring
avoid unnecessary assertion with a phinode value in typequalificationdataflowanalysis .
fix javadoc warning that break build with java7
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with additional parameters for improved functionality
renamed multiple classes related to box and whisker calculations and histograms for clarity to improve code readability and maintainability by standardizing class names
[ flink - 25304 ] [ test ] migrate readablewritableconfigurationtest to junit5
changed equality checks from ` = = ` to ` . equals ( ) ` in multiple classes to ensure consistency and correctness in string comparison operations
lucene - 2858 : make indexfilenamefilter constructor private . instead of public .
make ifstatementtest only use parser . gplugin ( )
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` to ensure consistency with the method used for retrieving the table header row
refactor TypeAdapter methods to simplify null safety registration to improve code clarity and reduce redundancy in type adapter registration
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected output after recent code modifications
added a new file EXIFReader . java to read image metadata from a file to facilitate metadata tracking for image uploads in the application
update tostandardunit to return none if unit be unknown ( # 1443 )
[ drools - 6542 ] allow pmml model to have parameter for apply - pom command ( # 194 )
minor tweak to fluentprotocol - add more detail info on exception message
added a check to ensure the bubble bar is visible before proceeding to avoid potential errors when the bubble bar is not displayed
[ gr - 16231 ] crash when aarch64 jni code can not be find on aarch64 .
fix npe in jdk8 logging when initpending be set to false
added a new method ` find ( Class < Ticket > ticketClass ) ` to the ` TicketCatalog ` class and refactored related code to improve ticket retrieval functionality and enhance logging clarity
refactor SSL connection and SSL - related variables for consistency and clarity to improve code readability and maintainability
[ flink - 23454 ] [ network ] release result file / output buffer in result partition for sort - shuffle
( chore ) camel - jms : use non - deprecated constructor
added type and sort parameters to PluginHandleDao and related classes to enhance plugin handle querying capabilities by allowing customizable plugin types
added start ( ) method call to createSpan calls in DefaultSpanCreator and SleuthAdvisorConfig to ensure proper span creation for improved functionality
added configuration options for GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , and GLKViewDrawableStencilFormat in IOSGraphics to enhance flexibility and configurability of graphics rendering
attempt to fix user not lock out after a failed login
[ pytorch ] add miss handle = = - 1 in jni code
replaced a loop condition with a do - while loop for handling thread states to ensure that all threads wait for a specific lock name during recovery
refactor implementation details in Implements and ShadowPicker classes to improve code maintainability and readability
[ scb - 837 ] make http2 production ready : add configuration
added support for DynamicArray type in ` DynamicStruct ` and improved type name handling in ` SolidityFunctionWrapper ` to enhance type safety and provide clearer error handling for missing types
updated font property retrieval to use a default value of true to ensure consistent behavior when handling font properties
added constructor to ` CopyStep ` that accepts ` Path ` parameters and modified tests accordingly to enable recursive copying of commands to ` Path ` objects
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) method throw interruptedexception . # 3840
camel - 16276 : camel - core - optimize and reduce build time by leveraging polymeleaf
added a FlavorParser class and refactored BuildTargetParser to use it for parsing flavor strings to improve code maintainability and encapsulate parsing logic in a dedicated class
updated the type of witnesses addresses from List < String > to List < ByteString > in WitnessScheduleStore . java to improve type safety and support ByteString data handling
modified print statement to conditionally display results only if not empty to enhance output clarity by avoiding printing empty results
modified the logic in ConcurrentLinkedQueue to determine if items are removed correctly to ensure that items are properly unlinked from the queue to maintain data integrity
added a boolean parameter ` addSpecialTokens ` to multiple encoding methods in ` HuggingFaceTokenizer ` to Enhance token encoding flexibility for improved functionality
[ hotfix ] use collections . nCopies instead of manual copy
[ iotdb - 6252 ] fix loadsingletsfilenode bug ( # 6958 )
added a new session storage context and updated context handling in the DuoSecurityMultifactorWebflowConfigurer to enhance session management by allowing context - specific actions
add a test case that reproduce bug 49455 . we now validate the schema in a jsp document .
added a constructor to TypeAdapter and updated comments in Java17RecordTest and ReflectionAccessTest to improve constructor flexibility and clarify the reason for disabling tests until the security manager is properly implemented
make sure we do n ' t kill already stopped event
refactor AntPathRequestMatcher class for improved matching logic to enhance accuracy and performance of Ant path requests
( scott phillips ) remove unused parameter in resourcefactory . createresource .
added null check before releasing the deflaterEntry in GzipHttpOutputInterceptor and modified assertions in BlockingTest to enhance robustness by avoiding potential NullPointerExceptions and improve test assertions for better error handling
added JUnit AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
remove wrong utf - 16 character from checksum file after use normalization . fix # 595
updated command handling logic and variable names for clarity to improve code readability and maintainability by ensuring command checks are performed before proceeding
make keyListener final to ensure immutability of the keyListener variable
updated JSON parsing in MongoTemplate and added a new test for saving JSON strings to ensure correct handling of JSON data in the save operation
added a method to check for multiple remote addresses in RequestUtils and created a corresponding test case to enhance functionality to allow handling of multiple remote addresses in requests
updated the return type of getJobArgs from String to ObjectBuilder and changed related method calls to improve type safety and leverage JSON handling capabilities
refactor code to utilize a constant for the host address and improve proxy handling to enhance code readability and maintainability by reducing redundancy
refactor glyph processing logic in GlyphLayout . java to handle whitespace correctly to ensure proper memory management when wrapping runs with spaces
added a method to pause or resume splits in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to enhance functionality for managing pulsar splits during processing
added a new configuration variable for HIVESCRIPTIDENVVAR in HiveConf . java and updated ScriptOperator . java to utilize this variable to enable dynamic IDenv variable handling for script operations
updated the getListedTermCounts method to use a stream processing for term counts with sorted options to improve performance and simplify term count calculations based on sorting criteria
added a new action class ` UseSeparateStepSizeAction ` to manage separator usage in JOGL configurations to enable users to use separate step sizes for improved layout consistency
refactor FileMenuFilter to use final fields and add a new method for unlocking files to enhance immutability and improve file management functionality
hbase - 15456 use list instead of keyset in roundrobinsplit ( liu shaohui )
updated header additions in HttpClientRequestAdapter and its test to replace " false " with " 1 " to standardize header values for better clarity and consistency
pdfbox - 2576 : use ioutils . closequietly instead of null check
added fullscreen functionality to GwtGraphics and modified display mode handling to enhance user experience by allowing fullscreen mode changes to improve application experience
changed the type of ` issuers ` and ` parameterName ` from ` String ` to ` URI ` in ` WebfingerIssuerService ` and updated related methods to accommodate URI - safe handling of resource URLs
add unit tests for SoulApacheDubboClientConfiguration to ensure the Dubbo configuration properties are correctly initialized
updated texture path resolution from Gdx . files . internal ( ) to resolve it to ensure correct file path resolution for better compatibility and reliability
added trace logging for attributes in ChainingAttributeReleasePolicy and changed log level from warn to info in OidcDefaultJsonWebKeystoreCacheLoader to improve trace visibility and decrease log verbosity for better debugging
replace lock . lock ( ) with lock . lockinterruptibly ( ) in multiple files to improve performance by avoiding unnecessary locking
corrected package declaration formatting in Compiler . java to improve code readability and consistency
fix for bug 1940303 - unnecessarybranch no longer report null pointer exception in routine method .
fix sandbox build by use defaulthttpdatasource
added a new configuration property for maximum statement cached per database connection to enable dynamic configuration of the maximum number of prepared statements per connection
change return type of the set method from WritableConfig to Configuration to align with the intended configuration type in the API
added error handling in the checkErr method of AutoScalingHandler to improve robustness by capturing and capturing errors during command processing
hack to fix a typo in the doc of combineddataset .
replaced the byte array variable ' buf ' with ' b ' in the InflateIn _ DeflateOut class to improve code readability and reduce memory usage
added methods to remove cryptography restrictions from JceSecurity to enhance security by ensuring proper cleanup of cryptography restrictions
fix no chunk not be generate if user cancel the event ( # 4207 )
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to ensure the functionality of page margins with long text transformations are correctly applied
added a check for null before initializing the vectorization context to avoid potential NullPointerExceptions when no context is available
fix wialon speed parse ( fix # 5399 )
hbase - 24630 make metricsuseraggregatefactory default to false ( # 2079 )
added a method ` isEmpty ( ) ` to the ` JsonObject ` class and a corresponding test case to provide a way to check if the JSON object is empty to enhance the functionality of ` JsonObject ` by providing a way to verify if it is empty
modified the handling of the receiver registration logic in the Launcher class to ensure proper management of attachment states and prevent potential memory leaks
renamed multiple classes related to HTTP request and response handling to improve code organization and clarity in naming conventions
- pass params to the zadd operation to prevent nullpointerexception
[ ds - 3790 ] fix checkstyle issue after upgrade to agrona 2.6 . 0
rename testasyncmessages to testasyncmessagesperformance and remove @ ignore annotation .
added handling of optional targets in ` VersionedTargetGraphBuilder ` and improved test parameter management in ` VersionPropagatorBuilder ` to enhance code clarity and ensure tests are correctly referenced in build targets
updated time zone comparison logic in TimeZoneProvider . java to improve clarity and maintainability of time zone validation
update return statement to use HEADER _ SIZE instead of length and add a new test class for OLE2 embedding to improve header size handling and ensure proper functionality of embedding in Excel files
updated variable initialization for ' row ' and ' column ' in JSONParser . java to improve clarity and maintain consistent initialization logic
refactor ` FindTypes ` and ` JavaType ` classes to utilize ` Pattern ` for better pattern matching to enhance type matching logic and improve code maintainability
updated DETAIL _ THUMB _ HEIGHT value and added a new action _ PLAY _ TRAILER for retrieving local trailers to improve UI responsiveness and manage trailers more effectively
added a method to remove temporary glyph information cache before freeing long pointer to improve memory management by ensuring garbage collection occurs only after the native struct pointer is freed
act - 608 : fix issue with terminateallbehaviour and add process instance to history
camel - 4296 : fixed < QName > with empty name space in xml dsl
change client endpoint from http to http : / / www . apereo . org / scottb . html ; fixed test
add ' def ' option to clear all preference to default
changed access modifiers of several fields and methods from private to protected to allow subclasses to access these members for better extensibility
removed deprecated channel handling from DanfossAirUnitHandler to improve code clarity and encourage the use of new channel constants
use hamcrest assertion instead of junit in examples / microprofile / http - status - count - mp - backport main ( # 1749 ) ( # 6027 )
removed duplicate check for expansionHelper in TweetActivity . java to streamline the code by eliminating redundancy
added index check in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure proper handling of partition indices and improve object comparison / hashing functionality
save root disk size in custom parameter instead of null ( # 4558 )
added imports for PreferenceExtensions and modified visibility logic based on user preferences to enhance UI responsiveness by ensuring that predictions are enabled based on user - defined preferences
[ geos - 8151 ] fixed api bbox parse to handle empty cr
added validation methods for valid values and depth in LibrustzcashParam . java to ensure that values are within valid bounds to prevent runtime errors
add deprecation notice relate to ithrowableentity # getinstance ( object )
added random value generation for the ' x ' and ' y ' attributes in NodeDataImpl . java to ensure unique coordinates by generating unique values for graphical data
updated the method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method to ensure proper handling of missing refresh token scopes
refactor JavacStep to use class - level variable declarations for clarity and order to improve code readability and maintainability by closing the try - with - resources statement
updated VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to prepare for the release of version 0.9 . 2
fix bug where deep shortcut can no longer be load
add hashCode ( ) method to TimeGranularitySpec class to ensure consistent hash code generation for different data types
changed access modifiers of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes for better inheritance and extensibility
added a boolean flag to control proxy response code behavior in HttpURLConnection to ensure proper handling of NTLM proxy when the response code is used
aarch64 : fix aarch64move . java to properly initialize scratch register .
bug 7553 : take into account the vm capacity in the db . if to do some work to take into account the vm ' s memory calculation , return it in byte
added a null check for maxScore in JSONResponseWriter and updated test cases to ensure score inclusion logic only occurs when the maximum score is not null
updated audio recording timeout from 22050 to 44100 to optimize audio performance by reducing the time window for audio processing
modify newOriginX calculation to account for subjectBounds to ensure correct origin positioning based on scaling factors
update DruidQueryBasedInputFormat to allow empty data source and specify default interval to enhance error handling for Druid data processing
added ORIGINAL _ TYPE to the CustomProperty class and updated the pattern matching in CustomPropertyTest to support both original ID and type information in property parsing
added a static method to create an instance of Index with specified parent and data to facilitate the creation of Index instances with specified data
[ java ] remove redundant isbetweenGivenperiod variable .
updated schema compatibility checks to ensure proper index handling for better data retrieval to improve accuracy of schema compatibility checks and enhance test coverage for simple reader types
added support for handling embedded and association attributes in JPA entity paths to enhance entity handling capabilities in the persistence framework
added synchronization to the spans list and updated return statements for consistency to ensure thread safety when accessing shared spans in concurrent scenarios
updated method signatures in multiple classes to use wildcard generics for better type safety to enhance compatibility and reduce runtime errors related to generic types
updated exception handling in ViewContextImpl . java to use InvocationTargetException for more specific logging to improve error handling and provide clearer logging for application issues
refactor OAuth2AccessTokenEntity class structure to improve code readability and maintainability
updated status messages to be more accurately descriptive in service request handling to improve clarity and accuracy of error reporting for rejected requests
added new project file entries for iOS data and moe resources in GdxSetup . java to support iOS data format and moe functionality
updated imports and initialized ConcurrentMergeScheduler in TestSearcherManager . java to improve code organization and ensure proper merge behavior in tests
updated conditional checks and improved list handling in QTestUtil , GenericUDTFInline , and LazyBinaryArray to enhance code reliability and prevent potential NullPointerExceptions
updated the implementation of MapIterable , FJIterate , and ParallelIterate classes to improve code readability and maintainability
ticket # 3726 : prevent multiple drag & drop key in spreadsheet
hhh - 14332 remove osgi sessionfactoryservice from the osgi bundle activator to prevent leak when osgi be stop
fix # 199 regression in # 1749 fixed infinite loop on connection timeout
added functionality to create a non - packaged resources directory for component . xml files to streamline the creation of component files for better clarity and maintainability
updated file path handling and improved directory checks in Compat . java and FileOpener . java to ensure proper file path formatting and enhance reliability with better file management
changed the return type of the row ( ) method from Cell < T > to void to align method with expected return type for table row retrieval
validate cli port number to avoid clash
added a null mask feature to WebSocketClient and modified the WebSocketConnection initialization to use it to improve handling of null mask scenarios during WebSocket connections
modified the return type of ` genUDTFPlan ` and updated related method signatures to use ` Pair < RelNode , RowResolver > ` to improve code clarity and ensure consistent handling of key - value pairs
added statistics tracking forPreferred and non -Preferred node selections to enhance monitoring capabilities for node selection performance
add a new file ` Person . java ` with a class ` Person ` with getter and setter methods to facilitate the handling of a specific name in the application
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to improve code clarity and ensure proper handling of the owner pointer ' s existence
refactor ` PlaybackOverlayFragment ` to improve animation handling and performance to enhance user experience by replacingLogo fade - in with a clock - based animation
move updatecomparatoroutputlevel up to the end of the block ( # 3111 )
changed the access modifier of the IMPL field and improved exception handling to ensure that the SegmentReader class is loaded and to provide clearer error messages to prevent runtime errors
make sure we run event update outside of ui thread
replaced DefaultInetAddressAdapter with CollectionTypeAdapter and updated related methods to use Class < T > instead of TypeToken < T > to improve consistency and clarity in type adapter registration
added utility methods to validate double , boolean , and boolean values in Series class and created corresponding test cases to enhance value validation and ensure robustness against null values in DataFrame
videomanager : fix -- no - audio - time - stretch option
lucene - 8247 : correct bound check for polygon boundary .
server : fix npe while start vm ( # 4900 )
close instance in before after test . attempt to fix # 3673
add some extra check on getinstance ( ) trigger nosuchalgorithmexception
added logging for operations in QFileClient to improve visibility and debugging of operation logs
resolve : issue # 282 : use child type in aop introspection .
fix npe in protocolproviderservicetoservice when no proxy record be available .
replaced manual addition of demand with MathUtils ' cappedAdd method to simplify demand handling by using a more efficient utility method
updated resource management in SetOutput . java to use try - with - resources to ensure proper resource management and avoid NullPointerExceptions
replaced the call to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct instantiation of ` SearchActivity ` in multiple fragments to improve code readability and reduce redundancy when starting the application
updated variable declaration for schemaCrawlerOptions and enhanced toString method in GrepOptions to improve code readability and ensure proper formatting of the toString method
http : / / issues . apache . org / jira / browse / amq - 3135 - configure web console for osgi service
added @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for the PersonRepository class
changed the exception type of the stop method from Exception to InterruptedException in UIServer . java and updated log message formatting in TestVertxUIManual . java to improve thread safety and enhance logging clarity
add more case to blockcactus to allow u to understand how to do it .
refactor mouse handling logic to use MouseMotionAdapter for better selection handling to improve user interaction responsiveness by encapsulating mouse movement logic in a separate method
[ java ] refactoring : separate false share from padding from false share to 1.0 . x
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative to enhance the flexibility of text editing by allowing dynamic positioning based on user preferences
fix broken test ; throw an illegalargumentexception instead of an exception
added a check for distinct queries in the ClusterIntegrationTestUtils and QueryGenerator classes to ensure proper handling of distinct queries during aggregation operations
rename optionparser . stringsimiliarity to stringsimilarity and make it public .
tidy up some javadocs ( keep code formatting )
added null check for children in PartitionPruner to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition variables and modified JSON parsing logic in MessagePackParser to enhance parsing capabilities and improve error handling during JSON parsing
added locale management to AbstractSolrMorphlineTestBase to ensure consistent locale settings during test execution
simplified the conditionals for determining the status bar height in LauncherFragment . java to streamline code for better readability and maintainability
added a new test class MetricsReporterTest to validate metrics reporting functionality to ensure the correctness of metrics reporting in the application
camel - 14526 : camel - osgi - allow to use osgi service registry by class loader .
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for Rectangle objects
[ hotfix ] [ test ] use unique name for sink list in streamkafkapptest
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in the use of BigInteger type
added support for using the FQDN of the AM machine in LLAP configuration to enhance security by enabling the use of the AM machine when submitting work to LLAP
clientoutofmemoryhandlertest should assert eventually execute the test
added a new method ` getCmoObjectId ` to multiple shape classes and updated the method to retrieve it to ensure the object ID is used for better clarity and maintain consistency in shape handling
added a test method to fetch posts with distinct scalar query to ensure functionality of the distinct query within the application
renamed Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve clarity and consistency across the codebase
fix # 3921 : remove unused extensionadapter bind ( # 3921 )
updated the method to retrieve the info row of a base item and adjusted the maximum lines number to use it to improve the accuracy of displayed content in the view
updated JUnit annotations from version 4 to version 5 in TestAuthHandlerBoot . java and TestRSAProviderTokenManager . java to utilize the newer JUnit 5 API features and improve test management
do n ' t swallow exception when generate summary
removed parameters from intPool and bytePool reset calls to simplify the reset method calls for improved readability
added multiple @ Override annotations in FilterInputStream . java to ensure the methods correctly override superclass methods
updated ShadowWindowManagerGlobal to use a new WindowSessionDelegateU class for handling Tiramisu API levels to improve compatibility with Tiramisu and maintain code consistency
updated URL handling logic to properly manage request schemes and ports to ensure valid scheme checks to prevent issues with non - standard port configurations
added support for MSSQLDatabase in foreign key constraint handling to ensure compatibility with MSSQL database operations
hbase - 23937 fix checkstyle violation ( # 8373 )
pipe : improve some logging , add a filtereventlistener class
simonstewart : make sure that html identifier be log in the same place a ` ` log ' '
[ flink - 23454 ] [ table - planner ] fix typo in hivelookuptablesource
add info log to help debug release
updated schema assignment in SequenceSnapshotGenerator to use CatalogAndSchema to ensure schema name is validated with custom schema customization
updated color handling in SpriteBatch , SpriteCache , LwjglDebugStarter , and AlphaTest classes to improve transparency and performance of color rendering in the rendering pipeline
fixed - rconnection . close ( ) and rconnection . close ( ) method of spring data redis module do n ' t work . # 4797
added base core URL handling and statistic yearCores collection to ensure proper tracking of HTTP and HTTPS endpoints
refactor task launch methods to accept a Task object instead of TaskHolder to improve flexibility and facilitate easier task management in the application
fix morfologikfilter to load dictionary from dictionary resource , by switch to stemmer and use dictionaryholder
updated sorting options for the CommunityRating and CriticRating in GridFragment . java to ensure correct terminology for better user experience
added imports for ViewKt and ListRow , and modified the visibility logic in CustomListRowPresenter to enhance layout management for ListRow items in the UI
refactor switch statement structure in StressAction . java to use a try - finally block to ensure proper resource management and avoid potential memory leaks
updated import statements in HttpClient . java to streamline the HTTP client functionality
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to ensure type safety for database configurations
fix # 714 - add serialization support for javatimemodule . ( # 714 )
update import statement for MDC from org . apache . log4j to org . slf4j to ensure compatibility with slf4j standards
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling by using the more general Type class
removed unnecessary line breaks in CoinbaseTransaction . java to improve code readability and maintainability
added a method to retrieve build target lists and modified the build command logic accordingly to enhance target management by allowing forced building of targets based on specified aliases
added a call to System . gc ( ) in the Ping class to ensure proper resource management and avoid potential memory leaks
replaced ContentProvider with ContentResolver in OCFile and related classes to enable better content management and handling of file entries
removed redundant state change checks for item events in ReportPanel . java to streamline the code for better readability and maintainability
[ hotfix ] [ test ] make testinglogicalslot null check
add a new file RemoveCallsToSystemGc . java to remove calls to ` System . gc ( ) ` and ` Runtime . gc ( ) ` from the JVM to improve code cleanliness by removing outdated garbage collection invocations
removed redundant calls to the superclass ( ) method in various exception classes to streamline code and eliminate unnecessary parentheses
added a setUIID method to the ScaleImageLabel class to ensure consistent icon setting for better UI customization
updated variable names from ` foundEntry ` to ` update ` for clarity to enhance code readability and maintain consistency in variable naming
8009843 : sjavac should accept - cp a synonym for - classpath
use compiler rather than option in presets for ffmpeg
removed extra whitespace in the initialization code for improved code readability
update Test7196045 . java for improved test coverage to ensure more reliable functionality through comprehensive testing
updated the density and decay values from 1.5 f to 1.0 f and 0.95 f in ShaderParametersLightShaft . java to improve lighting accuracy and decay in the application
added withState and stateData fields to OidcConfiguration and modified OidcRedirectActionBuilder to handle state management more effectively to enhance the flexibility of state handling in the OIDC authentication process
# 2327 - enh : support ddl - add unique constraint for nullable type ( chaoyu tang )
added federated share functionality to the UsersAndGroupsSearchProvider and updated related conditions in EditShareFragment to enhance user experience by allowing federated share actions based on user settings
added a method ` needsDocValues ` that always returned true to the ` TestBBoxStrategy ` class to ensure that document values are included in the generated test cases
[ java ] minor code cleanup and styling cleanup . no functional change .
added a method ` intForEach ` in ` Int2ObjectHashMap ` and modified imports in ` IntObjConsumer ` , ` intObjConsumerTest ` , and ` IntObjConsumerTest ` to implement a new approach and enhance test coverage for handling null values in the IntObjConsumer interface
move scoreboard save under worldserver lock , fixes # 3290
change return type of count ( predicate ) method from Long to long in multiple repository classes to accommodate larger integer values for improved consistency across the codebase
updated MTree snapshot creation logic to improve log message clarity and corrected timestamp checks to ensure MTree snapshot creation occurs only when necessary and logs are modified
hive - 23737 : fix integer overflow in vectorutil . dotproductscore ( ) ( l á szl ó bodor review by peter vary )
added a new constant IRREVERSIBLE _ THRESHOLD and methods for setting and retrieving the last confirmation block number to improve block configuration management in the database
refactor locale handling in GpsMainActivity to utilize Systems class for better encapsulation to improve code maintainability and streamline locale management across the application
added a check for new database creation state in the Launcher classes to ensure the correct handling of database migration events
refactor null checks and iterator usage in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability
refactor conditional check for datamodel before setting is64Bit to improve readability and maintainability of the code
added thread safety checks in TestIndexWriterDelete . java to ensure that the current thread can be accessed before proceeding with operations
change access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method as needed
replaced direct usage of ` apiclient . model . dto ` with ` ModelCompat . asSdk ( ) ` in ` FullDetailsActivity . java ` and updated import statements to use this SDK to ensure compatibility with the latest SDK structure and maintain consistency across the codebase
fix for issue # 494 : import csv do not work for some xmlworker
make it so we can log a warning if the user configuration can not be parse
added handling for " WaitForResult " in AndroidImplementation and CodenameOneActivity to ensure proper handling of waitingForResult based on intent data
updated HitQueue and related classes to use a Supplier for sentinel objects to improve flexibility in handling sentinel objects during initialization
added functionality to display and hide the widget description in WidgetCell to enhance user experience by providing visuals when widget descriptions are available
added a maximum attribute count check in the Attribute class to ensure that the system does not exceed the maximum registered attribute count
move predicatestest to impl package for test
camel - 3703 : header with case insensitive content type should apply to camel header .
refactor InlineLayout and Breaker classes to improve alignment logic and clarity to enhance code readability and ensure proper handling of unbreakable strings
added imports for NonNull and TextDrawable , and refactored view initialization logic in ShareUserListAdapter . java to improve code robustness and ensure proper handling of null views
refactor ` shouldInstrument ` method to improve dependency management for Android SDK to enhance code clarity and streamline the checks for instrumented classes
added a condition to return the size of columns based on the association before the source to ensure that the table ' s columns are accurate when associations are inserted
fix memory limit set in redis container ( # 4359 )
replaced the singleton instance of CxxDeps with an empty instance of CxxDeps and added a check for empty dependencies to improve dependency management and avoid unnecessary object creation
added exception handling for null rule in JavaTestRule . java to improve clarity when Specified source under test is not among its dependencies
proxy support now , and now use mc version string a it be configurable
remove unnecessary bounds checking for ` atIndex ` to improve code readability and prevent potential errors
increase wait time in timeouttest to reduce flakiness
refactor the AssistContentRequester instance management in TaskOverlayFactoryGo to improve code clarity and maintainability by consolidating content requester handling
replace ` StringUtil . createReadableString ( vote . getVoteAddress ) ` with ` StringUtil . encode58Check ( vote . witnessAddress ) ` to ensure proper encoding of the witness address for better security and reliability
updated DefaultMethodRegressionTests class to improve test coverage for method regression scenarios
updated WorkloadManagerMxBean . java file to improve code organization and maintainability
update imports and use KafkaException instead of KafkaProducerException to ensure compatibility with the latest Kafka API changes
added a call to close the container loader in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to the ExceptionThrowingTaskletStub class and multiple test cases for specific exceptions in FaultTolerantExceptionClasses to enhance exception handling capabilities and validate the handling of rollback scenarios
[ beam - 10678 ] improve the error message for deployment configuration .
added extraProperties parameter to multiple tuner classes and updated related methods to support additional property representations for improved tuner flexibility
added logic to extract and handle instances of realtime segments based on in - progress instances to ensure that only valid instances are processed in progress , avoiding potential errors
added a check to return null if touchable is disabled to ensure that touch interactions are appropriately handled when disabled
added a test for building using precompiled headers in other cell to ensure compatibility with C++ precompiled headers and validate functionality
throw a retryable hazelcastexception when cache config do not exist ( # 15288 )
refactor module installation and cache file handling for npm installation to improve clarity and streamline cache management during module installation
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enable monitoring of component lifecycle events for improved monitoring and management
changed the conditional from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in LongClickableSpan . java to enable conditional execution based on the settings setting
refactor string comparison to use ` " . equals ( ) ` for consistency and clarity to improve code readability and maintainability
updated isReifiable check logic and added new classes T6558559a and T6558559b to improve type safety and handle unchecked conversions more effectively
added info to / plot usage message , to make worldeditlistener more readable
camel - 16193 : ensure custom consumer be shutdown in case of timeout .
removed the default method ` examples ( ) ` from the Schema class to streamline the interface and reduce unnecessary complexity
replaced thread . isAlive ( ) with a loop condition and adjusted control flow accordingly to ensure proper handling of thread termination and avoid potential timeout issues
remove dataset time column from data source dimensions in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure accurate data processing by removing unnecessary time columns
corrected a single ampersand operator to a logical AND operator in a conditional statement to enhance code readability and maintainability
refactor RustBinaryDescription and RustLibraryDescription to use CxxPlatforms for parse time dependencies to simplify dependency management and improve code maintainability
added ' name ' property with getter and setter methods in JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes to enhance object encapsulation and ensure consistent name formatting
graph dump : do n ' t kill the debugger if the graph can not be parse
phoenix - 4068 optimize the small scan for point lookup by default
added routeId and modified the return statement in RetryGatewayFilterFactory to include route information to improve clarity of the retry configuration details for better debugging
replaced calls to ` redisplay ( ) ` with ` callWidget ( name ) ` in ` LineReaderImpl . java ` to ensure proper handling of widget operations during execution
replaced the ` onOverviewShown ` method with a direct call to ` showForOverviewIfNeeded ` in multiple classes to streamline the overview visibility handling and improve code clarity
lucene - 5614 : fix checkindex to correctly re - throw illegalargumentexception on null points
updated the publish method to include an additional parameter for updateLastState to enhance functionality by allowing dynamic updates to the last state
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper formatting for string list ID values
removed an element from the exp list when adding a new element to ensure that the collection is not added to the exp list
alexeibarantsev : implementing text case - sensitive on firefox
replaced do loops with while loops in ManyToManyConcurrentArrayQueue . java to improve performance and clarity of the iteration process
# 2918 - enh : add forwardonlyfetchsize to ormqueryengine
camel - 8193 : fixed npe in case of closedchannelexception .
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated window radius initialization to use rounded corners support to enhance compatibility with devices that support window rounding
refactor the background handling in DesktopTaskView to use a View for better layout management to enhance UI appearance and maintain consistent behavior for different screen orientations
refactor UpstreamCheckService initialization in UpstreamCheckServiceTest . java to improve code clarity and setup by initializing the upstreamCheckService with necessary properties
updated log level from warn to debug for immortal messages in AbstractSession and AbstractSessionManager classes to improve logging clarity based on debug level for better debugging
replaced error logging and exception throwing with a return statement in ZooKeeperHiveLockManager . java to improve lock management by returning locks instead of throwing an exception
updated multiple Java files in the project to improve code structure and maintainability
added a boolean flag ` containsCustomData ` to control the mipmap generation to ensure mipmap generation occurs only when custom data is present
replaced string quotes with single quotes for consistency in assertions in DefaultMaskingFormatterTest . java to ensure correct formatting of key values in test assertions
added a boolean selection flag and corresponding getter and setter methods to manage the selection state of items in the list
removed early return check for empty vector values in LlapArrowBatchRecordReader . java to simplify the logic for better performance when no vectors are available
modified the PolicyContext class to remove redundant string construction and added file separator support to enhance readability and ensure correct file path handling
replaced Set with ArrayList for flatQueries and expandQueries to improve performance and allow modification of query data structures
refactor TLSRestrictions class for improved readability to enhance maintainability of the code
replaced direct close call with a Runnable to ensure proper cleanup of the producer to prevent potential memory leaks
updated assertNodeStateProvider method to accept a list of ignorable node values to enhance functionality by allowing different node values to be managed
added lock handling in RocksdbMavenPomCache . java to ensure that the cache directory is deleted when it is no longer needed
[ java ] minizookeepercluster . startup ( ) now use ip address for client port .
refactor the code to move the exception handling for IOException into a separate method ` getResponse ` to improve code readability and maintainability by reducing duplication
modified the way segmentTarURIStrs is converted to a string array in IngestionUtils . java to improve efficiency by using the toArray method for segment tar URI processing
updated loginStudent method parameters in AllAccessControlUiTests . java to use correct password values to ensure the test operates on the correct data account for enhanced security
added a null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to avoid potential NullPointerExceptions during item deletion
reduce the number of strings processed from 500 to 100 to improve performance by reducing the number of string operations
removed the hexToBytes method and updated ByteArrayInStream initialization to initialize the input stream directly to simplify the code by eliminating an unnecessary method and improving performance
changed method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity by using a more descriptive method name
added a check for direct substates in AbstractStateMachine and implemented the isDirectSubstate method to improve state management by ensuring only valid substates are processed
add type checks for ListMultimap and SetMultimap in MultimapSubject and add corresponding tests in MultimapTest to enhance multimap comparison functionality and ensure correctness through testing
added joinoperation marker to the postjoinoperation to reduce false alarm log while joining / merging
add a new test method ` testDataIssue258 ` to verify the execution of PostgreSQL commands to ensure that the application correctly handles data issue related to PostgreSQL
no jira - fix unit test failure relate to amq - 5035
[ calcite - 2657 ] update javadoc for avaticadatabasemetadata . getformat ( ) because it return a json object
updated MongoDbConnectionPoolProperties to use String representations for lifeTime and maxWaitTime instead of integers to improve clarity and usability of duration representation in MongoDB configuration
migrates sip over to neomedia . ( work in progress ) . smack - 725
refactor FacetProcessor to streamline filter and domain change handling to improve code readability and maintainability by reducing redundancy
add option to disable timeout handler for wrapper .
replaced hardcoded value for quick step starting rotation with a constant to improve code readability and maintainability
camel - 6803 : fix log log level and deprecate xpathfactory in xquerybuilder
[ java ] organise import to reduce load in a few place .
add test case for issue # 1751 - grammar should not fail on backslashes
added a check for missing ' atlas ' property in the AtlasTmxMapLoader to throw an exception if the map is missing the ' atlas ' property
camel - 14283 : camel - core - remove option to resolve property placeholder to avoid reflection
added levelDbDataSource . closeDB ( ) in BlockchainTest . java and removed multiple ReceiveSource code in KafkaTest . java to ensure proper resource management and simplify the code structure
refactor line splitting logic into a separate method for improved readability to enhance code maintainability and clarity by utilizing a dedicated method for handling multiple lines
int - 2852 fix checkstyle violation ; remove unused import
replaced usage of ImmutableList . Builder with List < Object > and added logging for SQLBindings to enhance flexibility and deprecate the use of deprecated lists
added a check for the Java VM name in the VirtualMachine class to ensure compatibility with OpenJDK ' s JVM
added keepAlive method to ReactorClient . java to enable keep - alive functionality for WebSocket communication
replaced string literals for vertex attributes with constants from ShaderProgram to improve code readability and maintainability by using defined constants
camel - 6377 : avoid potential npe when get a property component from camelcontext .
replace null check with accountCapsule initialization for better clarity to improve readability and ensure account existence is validated correctly
prepare for the 3.8 . 1 release : updated version number to match the alpha version
replaced return statements to use unannotatedType ( ) for type handling to improve clarity and correctness when dealing with unannotated types
fix test ` ` fail - fast ' ' by restore the last size of seqfile . tsfile
updated class names from " org . eclipse . jetty . security . jaas " to " org . eclipse . jetty . ee10 " across multiple files to ensure compatibility with the new package structure and maintain code consistency
added a parameter for wait before the starting of 2500 milliseconds to ensure proper synchronization during video playback
removed the ` _ skipCorrupt ` parameter from the constructor of ` OrcEncodedDataConsumer ` to simplify the constructor and avoid unnecessary complexity
accessscollectortest : fix an out of bound exception for listindex ( )
added lirgenerator . framemap and graalcompiler . compilemethod for refactoring
updated test classes to use ConditionalIgnore instead of SpringRunner and RunningContinuousIntegrationCondition to enhance test reliability by conditionally running test execution
fix boat placement on water . close # 2138
modified the ` toString ( ) ` method in the ` Directory ` class and added a ` getLockID ( ) ` method in ` RAMDirectory ` to improve clarity of object representation and enhance lock management for better debugging
removed the method ` allowExperimentalOptions ( ) ` and adjusted the conditional check in ` Launcher . java ` to simplify the code by eliminating unnecessary method and improving readability
added new static methods ` then ` to BDDAssertions class for improved assertion handling to enhance functionality and clarity of assertion methods in the codebase
rename variable ` hp ` to ` hostField ` and update port handling accordingly to improve clarity and consistency in variable naming
updated logging from debug to warn for multiple Kubernetes config files and added specific handling for Windows environments to provide clearer feedback on Kubernetes configuration issues and ensure compatibility with Unix systems
added file upload handling logic in UploadListActivity . java to enhance file management and upload process handling to improve the user experience by managing file uploads efficiently
added a new file ProviderLoader . java and updated TerminalManager . java to implement provider loading functionality to streamline provider installation process and improve error handling during provider installation
update imports and references from Span to TraceMessageHeaders in StreamEnvironmentPostProcessor and StreamEnvironmentPostProcessorTests to ensure compatibility with the new TraceMessageHeaders class for better traceability
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig for setting properties to improve flexibility and maintainability of the change log query
hhh - 9967 - apply namequalifiersupport . getcurrentschema ( ) to postgresql dialect
skip partition count when there be no member and improve javadoc
ambari - 24425 . avoid start scheduler if it be already start ( jrathanhurley )
removed unnecessary toString ( ) method call from InlineBox instantiation and updated conditional checks for blockParent to improve code readability and maintainability
updated argument checks for consistency in StatisticMap . java to improve code readability and maintainability
updated the default value of getStagedRectSlideEnd from 383 to 500 to accommodate new feature requirements
use i18n property instead of hard - coded text
updated condition to check for both plot area and its own plot absolute path in BukkitMain . java to ensure proper handling of owned plot areas in the condition evaluation
added unit tests for ` setTouchExplorationEnabled ` and improved listener handling in ` ShadowAccessibilityManager ` to ensure correct behavior of touch exploration state change notifications across API levels
pdfbox - 5328 : improve cmaplookup performance , a suggest by ralf hauser
do n ' t use stringproperty to retrieve test element name a we do n ' t want to keep the name alone
refactor to silence some eclipse warning
added the PlotArea import and modified the return logic to check for an absolute plot area to ensure that the plot is correctly processed and valid before proceeding
swapped the matches of the " version " property with a new version format to ensure proper validation of version strings in the properties
updated the lower bound check for ` count ` to allow zero to ensure valid range for ` count ` when processing ` pickleEvents `
camel - 17826 : camel - kafka - allow to configure clientid with kafkacollectlereprocessor
make error handle more clear when javac can not be start
ggb - 2118 do n ' t repaint draw option when close a view
camel - spring - batch : fix checkstyle violation
added a method ` isAnimationFinished ` to check if the animation has finished to enhance functionality for determining animation state based on frame timing
add a new test method for custom branding icon with line breaks in LoginMockMvcTests . java to ensure correct handling of custom branding icons with line breaks
added null check for otherUrl before comparing it to an empty string to prevent potential NullPointerExceptions when otherUrl is null
ticket # 3429 : space * be now consistent between emptiness and other space
refactor ObjectHashSet . java to improve code organization to enhance maintainability and readability of the code
updated null checks and equality checks for arrays in DataUtilities . java to improve robustness and clarity when handling null values
fix compare nbt data , allow for deletion of enchanted books , mc - 12770
test rest - dsl : add test for async resource
[ build ] rename target - flat header map to target - user header map
http : / / issues . apache . org / jira / browse / amq - 3135 - log more info for sendfailedexception .
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce ` EMPTY _ LABEL ` to improve clarity of the method ' s purpose and ensure UI resets to a defined empty state
hive - 18302 : hivemetastore : optimize getpartitionsbynames with multiple equal size batch ( ashutosh chauhan via prasanth j )
added a closing brace to the FileListListAdapter class to ensure proper syntax and prevent potential compilation issues
changed List from ArrayList to List for the sharees variable in OCFile and OCFileListAdapter classes to improve flexibility in handling multiple sharee files
adjusted the index used to retrieve the view in the BubbleBarView to ensure the correct view is removed from the layout
removed " org . eclipse . jetty . util . server . internal . " and " org . eclipse . jetty . websocket . util . server . internal . " from several configuration files to simplify visibility and reduce unnecessary dependencies
removed the ' true ' parameter from the S3Request constructor in S3Request . java to adjust the behavior for S3 requests by adjusting the expiration date
fix # 582 nullpointerexception in jfxradiobuttonskin / part of # 582
updated the condition to check for only one split in DeweyNumber . java and added an exception for invalid splits to ensure that the DeweyNumber can handle zero splits gracefully and provide clearer error messaging
added a new static string variable ` categorySetString ` and modified the return statement to remove " Category : " prefix to ensure proper formatting of category sets for improved readability
updated assertion message for invalid close control status codes in WebSocketClientTest . java to ensure clarity and maintain consistency in error reporting
added a null check for the classLoader in WebappLoader and updated the expected length of tests in TestVirtualWebappLoader to ensure that the classLoader is not null before proceeding with further operations and improve test validation
removed redundant duplicate code in PersistentAttributeTransformer . java to improve code readability and maintainability
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
add a new test class ` TestPorterStemFilter ` for the ` PorterStemFilter ` functionality to ensure the correct functionality of the Porter stemming functionality throughout the tokenizer
updated the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and modified its implementation to handle a success flag to ensure that both operations are written successfully when successful
corrected the package name from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch . core . explore . support ` in multiple test classes to ensure consistency and accuracy in package naming
fix deadlock when close the conference window .
remove duplicate sys . touch ( ) call in apiutil and other utility class ( # 1878 )
added " - mardu " command to HgCmdLineInterface and removed untrackedFiles method from HgCmdLineInterface to streamline command handling and enhance file tracking functionality
camel - 5680 : camel - netty - avoid potential race condition when use netty consumer
mahout - 673 : added javadocs and make field final in light classes
added calculations for width and height in X11GraphicsConfig and WGLGraphicsConfig to ensure values are non - negative to prevent rendering issues
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to output the underlying delegate object for better debugging and logging
added an AnnoFilterTreeSet class to filter inner annotations and modified the findClassesThatExtend method to improve class filtering and facilitate inner class search in annotations
modify the logic for handling large buffer sizes in BytesColumnVector . java to ensure that integer overflow does not lead to runtime errors
fix testwritebehindmapstorewithevictionstest . testcountstorerecovered by wait for count to be 100 % over time
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` across multiple classes to enhance method flexibility to support a broader range of components
apps - 2184 : add isequal ( PolyFunction ) to check if a polyfunction be equal to the polyfunction
added a null check before retrieving column class in SynthTableUI to avoid potential NullPointerExceptions when table is not initialized
added a try - catch block around the class loading process to handle potential ClassCastException to improve robustness by gracefully handling potential ClassCastExceptions in the instantiation process
fix in - memory handling of dist build configuration .
added double _ entry feature to export and remove double _ entry warn
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to broke - need to track down
changed the return type of doJoin methods from void to boolean and added checks in JoinTemplate , JoinWorker , and MergeJoinBatch classes to ensure that the methods only return boolean values indicating success or failure
removed the optional method getAutodeps ( ) from JavaLibraryDescription . java to streamline the interface by eliminating unused functionality
added FLAG _ ACTIVITY _ NEW _ TASK to intent settings in LauncherTimelineCursorAdapter . java to ensure that the activity launches in a new task as intended
added a method to check paging order by in SpiQuery to enhance functionality for handling order by queries
fix test to account for the new proxy
initial work on add of a node affiliate . added a system property file for configuration of node affiliate .
remove usage of requestutil . normalize and improve validate uri ( # 639 )
change access modifier of buildUserProfileByClassCompleteName method from private to public to allow access to the method from other classes
added array handling and updated the ` doUpdate ` method in ` CacheKey ` class to improve the efficiency of cache key updates by utilizing reflective array manipulation
updated GnomeFileTypeDetector to use FileSystemProvider for getting file type detection to improve flexibility and maintainability of file type detection logic
close the session to prevent leak beyond testcase
replaced ShadowVirtualDeviceParams with direct calls to getVirtualSensorCallback and added callback handling methods to improve flexibility and control over parameter retrieval in ShadowVirtualDeviceManager
added a condition to check if the context is not the before execution context in the HttpSessionSecurityContextRepository to ensure sessions are cleaned up appropriately by removing unnecessary context attributes
replaced the loopback variable with a loop that iterates through available addresses to improve clarity and handle cases where the address is up , point to point
updated variable names and initialization logic related to temporary buffer sizes in Zlib . java to improve code readability and maintainability by using a consistent default buffer size constant
updated KeyInfoReferenceResolver to enhance security checks and simplified exception handling in XMLSecurityRuntimeException to improve code reliability and clarity when managing XML security exceptions
fixed icon change not work properly when create / remove icon
added support for Russian language in the language configuration to enable users to access the Russian language throughout the application
fix ( sqm ) : duration cast to millis instead of second
disable frame state verification for manually generate graph
added tests and cleanup methods related to Robolectric ' s enabled SDKs and resources mode to ensure proper resource management and behavior during tests
added system class addition for " org . slf4j " in ViewClassLoader and updated tests in ViewClassLoaderTest to ensure correct loading and validation of the SLF4J logger implementation
fix : remove default changepackaging if ` ` * ' ' be ` ` jar ' '
fix flaky test : set filedownloadviahttpgettest and filedownloadviaproxytest
fix a problem with netbeans 8.0 output buffer
replaced default units retrieval with preferred units in JogService and related classes to enhance clarity and maintain consistency in unit handling
[ log4j2 - 806 ] correct test so that patternlayout . parse do n ' t produce incorrect result
removed extra whitespace in return statement to improve code readability and maintain consistency
updated IOException messages to clarify URI validation and improved error handling for HDFS namenode host resolution to enhance error clarity and usability when resolving URIs
change showtrackingnotification to be run in one minute instead of a netty thread
( chore ) camel - ftp : replace thread . sleep with awaitility in test
replaced ConcurrentHashMap with ConcurrentSkipListMap in KeyedProperties class to improve thread - safety for concurrent access
added ` ignore ` method to log and utilize it to enable logging of ignored exceptions in various log classes
added a null check for runningTaskView before proceeding with further operations to prevent potential null pointer exceptions
remove unnecessary cast to byte in bukkitworld
remove a redundant call to GraphicsUtil . cleanImage to improve image processing efficiency
solr - 701 -- core : add mapdirectoryfactory to support unmaping / unmaping of a file system .
fix pdfcleanupprocessor npe when check for null color ( # 1097 )
lucene - 5944 : fix fieldequalitytest to reflect fieldtype ' s namespace
updated ExtendedOperatingSystemMXBeanImpl to enhance performance monitoring capabilities to improve system resource management and efficiency tracking
added functionality to install left commands in SideMenuBar to enhance user interface by allowing left command installations in the toolbar
added a boolean variable ` advanceWindowed ` in ` AppSettings ` and modified the ` setUpWindow ( ) ` calls in ` TweetActivity ` and ` UserProfileActivity ` to conditionally call ` setUpWindow ( ) ` based on user settings to enable dynamic window resizing based on user settings
added support for SybaseDatabase in DropPrimaryKeyGenerator to ensure compatibility with Sybase database operations
updated Client . java file with new functionality to enhance performance and maintainability of the application
[ java ] ensure leader be ready when update record position .
replaced the invalidate method with setCellLayoutPressedOrFocusedIcon in BubbleTextView . java and added shouldDelayChildPressedState method in CellLayout and CellLayoutChildren classes to enhance icon management and ensure consistent behavior during child state transitions
added return statement in NearCachedClientMapProxy . java to ensure proper handling of cache eviction logic
updated package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
added shutdownHttpServer method to handle server startup to ensure graceful shutdown of the HTTP server and handle potential exceptions gracefully
camel - 16068 - camel - aws2 - s3 : fix the warning of camel - s3
[ hotfix ] [ runtime ] remove unused parameter _ tm _ id from taskmanagermetricshandler
bug 10733 : 226 to 227 db upgrade - remove unique key constraint for ` ` network _ offerings . name ' ' field
hive - 8278 : thrift cli - only password should be store in the log file ( aihua xu , review by sahil takiar , siddharth seth )
added a new private variable ` maxEnergyLimit ` and updated its assignment based on its value to ensure that the energy limit is accurately represented based on the dynamic properties
added maxInMemorySize property and its getter / setter in HttpClientProperties . java , and updated WebClient creation in HttpClientPluginConfiguration . java to allow configuration of maximum in - memory size and enhance WebClient configuration flexibility
refactor caching logic in Cache . java to improve performance and reduce load times
added new Cucumber test and step definitions files for Cucumber to establish a consistent structure for running tests using Cucumber
fix ( sql ) : optimize typejsonutils # writedouble by handle double parse error
removed duplicate code related to " 656465746564 " from Utf8StringBuilderTest . java to streamline code by eliminating redundancy
added a check for parameter sets before appending and encoding parameters to prevent potential NullPointerExceptions when accessing parameters
camel - 2537 : camel - core - limit the maximum number of output configure on loadbalance and circuit breaker lb to 2
updated doc frequency assertions in TestIndexWriterExceptions to ensure correct maximum document count is used during testing
replaced string handling with Sha1HashCode updates for resource APKs and properties to improve hash generation efficiency and compatibility with Sha1HashCode
added methods for enum handling in AsmRuntime for integer , int , and long types to improve enum mapping functionality for better performance
add new biomes tag to the forge biome , fixes # 5896 ( # 5896 )
make image load thread pool for web applet more robust ( fixes # 418 )
changed access modifiers of fields and methods in BaseTableUpsertMetadataManager from private to protected and refactored segment preload logic to improve accessibility for subclasses and streamline segment loading process
replaced occurrences of " \ u0648 \ u0631 " with " \ u0623 \ u064a \ u064a \ u0631 " and updated " \ u0662 \ u0631 " to " \ u0623 \ u064a \ u0631 " to ensure accurate representation of data for months in Arabic locale settings
replace ` getImage ( ) . equals ( ) ` with ` hasImageEqualTo ( ) ` in ` AbstractSunSecureRule . java ` to ensure image equality checks are performed consistently
camel - 18497 : camel - jbang - run command now support specify repos .
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding invalid score processing
fix file not be delete in onstarttriggeringpolicytest [ hz - 2418 ] ( # 24090 )
fix for issue 511 : focus in filter window do n ' t work for web
[ hotfix ] [ test ] change checkpointscleaner to implement autocloseableasync
added a new file ` XPathWhiteSpaceTest . java ` for testing XML schema validation to ensure that whitespace is preserved during XML schema parsing
only persist trie layer on trie storage transaction ( # 5039 )
add some javadoc to fillednewarrayinstruction about it
make sure time out in test to avoid break build on slow machine
updated the method to check if the path ends with a slash to ensure proper handling of file paths in the application
added a print statement to indicate when the skin file loading fails to improve debugging by providing feedback on loading failures
added dirty state management in LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to ensure elements are properly marked as dirty during updates
added a static final Result instance and updated the instantiation in TestStep to use it to improve code clarity and maintain consistency in representing undefined result types
updated exception handling in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of null values during transaction registration
enable jetisenabled in uploadjobmultipartitionoperation to avoid deadlock
added error handling for failed recovery in MessageDatabase and updated logging messages in JobSchedulerStoreImpl to improve recovery stability and debugging clarity for scheduled jobs
fix : fix root node not be visible in favorite mode
added a new ` sizeMask ` variable and modified the ` ensureAvail ` method to use it instead of volatile to improve memory management by introducing a dynamic size calculation
ignore broken chaosmonkey test a they be cruelty to animals .
fix blockfor set target multiple time . patch by jbellis ; review by jbellis for cassandra - 696
updated formatting of variable declarations in FileManager . java to improve code readability and consistency
updated TransformFunctionType to include additional string parameters for various transform functions to enhance code readability and maintainability by specifying parameter types
added methods getSimpleName ( ) and getEnclosingElement ( ) to VariableElement and updated class names in package - info . java to improve code structure and clarity by using a more descriptive class name
8037550 : update rfc reference in javadoc to rfc 5280
update version number from 2.17 . 3 to 2.17 . 4 and change variable type from int to Character in SearchAnnotationVisitor to release the latest version and improve type handling
refactor image cache initialization and replace HashMap with SparseBooleanArray for selected items to improve performance and enhance data structure for handling selected items
refactor conditional statements in DirectUpdateHandler2 . java for clarity to improve readability and maintainability of the code
polish ` ` change file path to always use absolute url for spring config ' '
updated PreviewPositionHelper initialization to accept a Context parameter and modified rectangle calculations in TaskThumbnailView to improve handling of split screen insets based on multi - window mode
[ java ] avoid go back into init unnecessarily in case of newleadershipterm
( chore ) camel - pmdcoverage : fix flaky test
updated ByteArrayInputStream . java to handle bytes more accurately to ensure accurate positioning when skipping bytes
refactor conditional logic for handling update events in UpdaterTask . java to improve code readability and maintainability by consolidating conditions
add some guard against ` ` no header find ' ' header
add rt . jar to standard library list ( # 7008 )
abstracthandshakehandler : only reject connection if the local node be ready
updated the ` collectGranules ` method to throw an ` IOException ` and modified its configuration property retrieval to improve error handling and ensure consistency in configuration management
added a conditional check for committed responses in HttpChannel . java to log a warning when response is already committed
updated condition checks in HttpSession . java for better clarity and structure to improve code readability and ensure proper handling of negative hold values
updated fade - out behavior for FakeTaskView and added new gesture navigation navigation tutorial color settings to enhance user experience by improving the visual appearance of the fake task view during gesture navigation
changed level of log to warn for unknown prefab
removed unnecessary ScimGroup instantiation and updated external group mappings to streamline group creation and improve clarity in external group management
added a validation check for non - existent account transfer in FreezeBalanceActuator and TransferActuator to ensure that a minimum amount of 1 TRX is provided to prevent invalid transactions
updated the method of obtaining the last path separator from a hardcoded ' / ' to a system - independent separator to enhance compatibility across different operating systems and ensure compatibility with different operating systems
ticket # 2177 : do n ' t show input help panel for paste input - dialog and paste
updated GpsMainActivity to use session description instead of an empty string and modified event handling in AnnotationViewFragment to improve logging accuracy and facilitate command event processing
modify page assertion logic in JsoupNonVisualRegressionTest . java to handle PDF generation and improve debugging to ensure accurate page count is printed and displayed in the console for better debugging
* deprecate bufferallocator that do not support window ( # 4247 )
added checks for flags that start with a " ! " in Main , PrimaryItem , and Util classes to ensure proper handling of flag names that start with a single quote
added nopmd ( we do do n ' t want to call this in a loop )
corrected string comparison for reward item use operations in BattlePassManager . java to ensure consistency in string comparison and improve code readability
http : / / issues . apache . org / jira / browse / amq - 4682 - priorityelement - add tostring ( ) to help debug
updated affinity group creation tests in AffinityApiUnitTest . java to improve test coverage and ensure correct affinity group handling during unit tests
added a null check for the command and updated the conditional check to include a new option to enhance help output handling and improve argument parsing logic
updated LightOutputStream initialization parameters in multiple classes to optimize memory usage and improve performance
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
modified the conditional logic in ClassWriter . java and added a new class T8032819 . java for testing line separator functionality to ensure blank lines are displayed correctly based on user options
remove assertion for length of length in Person class to simplify validation logic for better readability
added null check for file extension in the condition to prevent potential NullPointerException when the file extension is not found
replace return with continue in ContactRightButtonMenu . java to ensure the loop continues iterating without terminating prematurely
[ hotfix ] [ runtime ] remove unnecessary cancel check in slot
modified the loop structure in InstallShortcutReceiver . java to simplify the computation of the screen index to improve code clarity and performance by removing unnecessary calculations
modified the bind method to properly manage the socket descriptor assignment to ensure proper resource management and prevent potential memory leaks
added functionality to clear and manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to ensure that items are retained only when the fragment is marked
w3c action : correct log message , offset be from the element in - view center point
added a new file ` bug4865918 . java ` implementing a GUI test for scrollbar functionality to address bug 4865918 related to the scroll bar ' s rendering behavior
removed the unused VelocityEngine class and its references to simplify the code and improve readability
updated import statements and added a new case for grouptriggers in QuestCommand . java to enhance command handling for group triggers and improve usability
fix # 418 : click on select account file in account file dialog instead of call dbadapter .
added Lombok ' s ToString annotation to PartitionChangeEvent and tbApplicationEvent classes to facilitate string representation of event objects for better debugging and logging
replaced direct usage of a constant in the CloudService with a static final string for the configuration URI to improve maintainability and reduce the risk of errors associated with hardcoded values
removed view port component and scroll pane settings from BrowserPanel to simplify the component configuration and improve user experience
add back and forward key handling to various input handling classes to improve user experience by enabling back navigation in the lwjgl backend
modified the indexing logic in MoreIndexingFilter to conditionally retrieve MIME type parts based on configuration to enhance flexibility in handling content type information based on user settings
added author pattern detection for constructor declarations in JSDoc . java to improve parsing of comments from JS documentation
replaced occurrences of " delta _ TOTAL _ DATABASES " and " delta _ TOTAL _ tables " with " create _ TOTAL _ tables " and " delete _ total _ count _ partitions " to improve clarity and consistency in metric naming
updated HiveDatabaseSchema and HiveSchemaFactory to incorporate DrillHiveMetaStoreClient and DrillHiveMetaStoreClient for better schema management to enhance error handling and support better metadata retrieval in the HiveDatabase
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter for error handling to enhance flexibility in OAuth2 login links based on query parameters
updated Hijrah calendar name and modified DateTimeFormatter locale specifications to ensure clarity in calendar representation and improve locale consistency in date formatting
added a condition to support Firefox browser in WebAudioWrapper to ensure compatibility with Firefox ' s features in detection
added a method to append the ServerInterceptor in GrpcServerBuilder to enhance interceptor functionality for improved server management
postgresql compatibility : support default value , see postgresql ' s patch
removed redundant calls to allocateOutgoing and adjusted control flow in StreamingAggTemplate to streamline code logic for better performance and clarity
[ hotfix ] [ runtime ] fix typo in executiongraph # getallocationtimeout .
added a ` hasFrom ` property and corresponding getter / setter methods to manage SQL deletion to enhance flexibility in SQL statements based on the presence of FROM clauses
refactor synchronization logic to use isMultiStatus for better clarity and consistency to improve code maintainability and ensure accurate handling of multi - status requests
refactor RecipeScheduler to use a centralized method for checking applicable tests to improve code organization and enhance readability by centralizing the applicable list test handling
fixed bug in log analyser ( use by lucenetest )
( chore ) camel - spring - boot - services : split unit and integration test for camel - google - cloud
fixed - rSearch . value ( ) method should use ' exclusive ' parameter instead of ' inclusive ' . # 5321
updated CCLicenseStep to use generics for Iterator and improved option handling logic to enhance type safety and maintain code clarity while ensuring proper license selection
make sure global id be not null before insert in guid index
updated assertion in OptionalAssert to use the comparison strategy to improve accuracy of value comparison logic
replaced the use of last margin configuration with a conditional check on font size in NoNewLineCssApplier . java and changed sanitize method in ParaGraph . java to ensure proper sanitization of text by removing unnecessary whitespace
added a new file TestArrayCopyToFromObject . java to test array copying behavior to ensure proper handling of thrown exceptions when copying arrays of different types
refactor path insert method calls to use the correct syntax for string concatenation to enhance readability and maintainability of the code
fix issue with async status code change between connector and connector .
make findfiles accept a boolean parameter to be able to automatically visit all file
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test as unstable until HIVE - 22621 is resolved
modified the test to check for a null exception before assertion to ensure that the test fails only when the expected exception is not encountered
added a lock mechanism to the ` autoloadCall ` method and modified its implementation to improve class loading efficiency by reducing duplicate entries in the ` ClassEntity autoloadCall ` method
updated server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to ensure accurate server preference handling for audio options
replaced the hardcoded " localhost " value with a dynamic value " localhost " in the KDC and related classes to ensure the application can locate the localhost for principal access
added a boolean flag to track if a Jsr250 attribute is found before returning ACCESS _ DENIED or ACCESS _ ABSTAIN in Jsr250Voter . java to ensure correct behavior when multiple roles are handled correctly by verifying access denial
reorganize and organize import statements in MP4Parser . java to improve code readability and maintainability by reducing import statements
added a new constant for HS2 proxy user and modified session parameter formatting to ensure proper handling of session parameters for the Hive server2 proxy
camel - 7795 - camel - hdfs - compress should use snappy codec if available ( # 5795 )
added a 1 - second sleep in HttpClientTest . java to simulate a wait time for server responsiveness
bug 59725 : make xssfsheet . deleteallcell ( ) more robust , a suggest by michael klink
modify glyph offset calculation and append width output in GlyphLayout . java ; update text in BitmapFontTest . java to improve rendering accuracy and clarify text with AGWlWi issue
fix container bind issue for k8s test
replaced asynchronous playback start reporting with a direct call to the playback manager to improve flexibility in handling playback progress updates
simplify access file handle to avoid disk leak
do n ' t attempt to load value from a record store that do n ' t have exist in the memory ( # 23351 )
fix bitwise operation in responseflag # value ( ) .
( scott phillips ) add read policy for community with no default policy .
7019441 : no lookup cache for internal composite font creation lead to java heap growth
modified the calculation of prefHeight by changing from height to 0 to ensure that preferred height is always available at the top of the tree
[ dmnfeel ] fix dmn feel error message pattern ( # 2988 )
removed unused imports and updated type declarations in multiple Java files to improve code clarity and maintainability by eliminating unnecessary dependencies
changed the visibility of ` finishRunningRecentsAnimation ` method from private to public and replaced ` run ( ) ` with ` post ( longPressRunnable ) ` in multiple classes to allow access to finishRunningRecentsAnimation ( ) and process the long press runnable asynchronously
added null checks for node id and type validation in multiple classes to ensure proper handling of null values and prevent runtime exceptions
[ beam - 8470 ] fix npe when no response be available for some client
nifi - 1745 : fix Binfiles to use the correct session when create flowfiles
bugfix : findClosest ( ) now return closest to 0 . max _ value instead of null .
added content length handling in RestTemplateCopyHeaderFilter to avoid copying content - length requests to enhance request processing by skipping unnecessary content - length headers
updated Java2TypeScriptTranslator and Java2TypeScriptTranslator to handle class and character cases more effectively to improve type conversion accuracy and ensure accurate transpilation of literals
update sample size and sample size for various channel - related classes to improve clarity and performance in handling bandwidth metrics
hbase - 1500 canary - all - regions can be set to true with a parameter in - allregionserver mode .
[ java ] remove node . environment and test from testcassandraconnector factory .
added a call to reset the cursor position in the KahaDBStore to ensure the cursor state is reset before processing new data
change size of call windows , so that it do n ' t increase size of the call window .
fix incorrect block state information during world generation . ( # 6805 )
jetty - 9 : testHTTPSamplersagainsthttpmirrorserver should not use the default port
updated KerberosPrincipalDAO to manage principal removal more efficiently to improve the management of Kerberos principal entities by ensuring null checks before removing them
removed the boolean parameter from the getTableSnapshot method call to simplify the method call by using a default value
make sure polling thread do not exit when an exception occur while wait for the poller to stop .
update error message for android . licenseKey in build hints to clarify the purpose of the configuration in the Android dev portal
update the display name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource ` and remove the isInsideTranscodeFolder method from ` VirtualFolder ` to ensure the correct display name is used for the transcoding folder
[ drools - 2842 ] distinguish between root and package of bundled jar and bundle ( # 2843 )
added an assumption check to verify if the current version is 19 to ensure compatibility of tests by preventing false positives on unsupported features
removed the context parameter from the assignTargetsForSplitScreen method and adjusted its implementation accordingly to simplify the method ' s signature and improve readability by reducing unnecessary parameters
updated the implementation of LeaderLatch to improve performance and maintainability of the code
added methods to initialize zk - SNARK parameters in ` SolidityNodeHttpApiService ` to ensure zk parameters are correctly initialized for zk operations
change transaction confidence listener to listen to depth listener instead of throw illegalstateexception
added a method to create a media recorder and updated location variables for clarity to improve code maintainability and ensure consistent usage of coordinates
set platformName to " ios " in JavaSEPort . java to allow platform - specific configurations for iOS
danielwagnerhall : fix javadoc warning in the page editor client
make sure webkitlinedestyle be consistent with moz and webkitlinedestyle
pdfbox - 4071 : fix typo find by codespell on fossies . org
fix ( extension ) : avoid npe if nextframe be null
replaced the try - catch block with a privileged action for retrieving the caller class to enhance security by ensuring privileged actions are executed in the correct context
added logic to update parent of child categories based on their IDs in CategoryREST . java to ensure that all child categories are not duplicated during category updates
added conditional logic to set the title based on the contribution type to improve user experience by providing more context - specific title for contributions
added BigDecimal vwap as a field and corresponding getter and setter methods to the Ticker class to enhance the Ticker functionality by providing additional metrics about the VWAP value
align ' no widget available ' text box properly in widget picker .
tidy up rendergraphapi to allow for more customization of graph
added a primary color setting in NCFirebaseMessagingService to ensure the service uses the correct primary color
refactor ShadowUsbManagerTest to improve test coverage to ensure more robust validation of USB manager functionality
add log for good debugging of Average and RMS recommender evaluation
added a call to update the selected configuration in the rocket class to ensure that the selected configuration reflects the updated state
fix issue with bitmap bitmap on android 4 . x
updated collections from HashMap to LinkedHashMap in multiple classes to maintain the insertion order of options for better predictable iteration order
replaced the native closure manager with a closure pool for better resource management to improve closure handling efficiency by utilizing a dedicated closure pool
( chore ) camel - main : migrate camel - test to junit5
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , to implement and test the WebSocket integration process
dspace : remove the check for generic type in abstractimportmetadatasourceservice . java ( # 5431 )
refactor authentication comparison logic in AbstractCasWebflowEventResolver to use a new method to enhance clarity and maintainability of the authentication comparison process
added a conditional check to return false if jnr . ffi . compile . x86asm is not set to " true " to ensure the method generation is only performed when using the x86asm compiler system property
replaced repetitive calls to ` callNode . getType ( ) ` with a newly defined variable ` callNodeType ` to improve code readability and maintainability by reducing redundancy
added a new interface ` Insecure ` and modified the ` MessageBuffer ` class to use it to facilitate the handling of insecure data in message buffer operations
added multiple configuration variables to HiveConf . java to enhance the flexibility and organization of Hive configurations
initialize ` scopes ` and ` policies ` with new ` HashSet ` instances and add a null check for ` <e83>  ` in ` DefaultResourceSetService ` to ensure proper handling of null values and prevent potential NullPointerExceptions
lucene - 3998 : decref on close can now be use without throw ioexception
updated multiple Java files for consistency in naming and functionality to improve code maintainability and readability across the stream module
fix flaky test of inputfieldtest in firefox
remove $ gson . types . getfirsttypeargument from type safety
change return types of keySet and values methods in Int2IntHashMap to KeySet and Values to improve consistency and clarity in data handling
added a duration parameter to the FlipTransition constructor and updated related class methods to allow dynamic adjustment of the animation duration for improved visual consistency
removed trace logging for subsAreValidForStreaming in DLNAResource . java to streamline logging by eliminating unnecessary configuration
bump version to 9.10 . 0 to mark 1.10 .
use java version - specific warning in ` stacklocator ` ( # 1718 )
add java15 post processor to support java 15
updated padding setting for background background based on the size of replies to ensure correct padding for the status bar based on the number of replies
avoid empty versionmap warning by anti - entropy .
added metadata handling capabilities to SeedUrl and SeedResource classes to allow storage and retrieval of additional information related to seeds
added a null check for the declaration before creating a Pattern instance to avoid potential NullPointerException when the declaration is not initialized
updated TestCoprocessorWhitelistMasterObserver . java file to improve test coverage and functionality
ww - 47ww - 3663 - add package name support to annotationactionvalidatormanager ' s package name
updated test cases to account for the fact that null arrays are passed as Object types to improve type safety and avoid potential ClassCastException at runtime
added stream and parallel stream methods to MapIterable and PrimitiveObjectMap classes to enhance functionality for improved collection handling in the application
change return statement to clone notifInfo instead of returning it directly to ensure that the original notifInfo is not modified to prevent external modifications
make sure command key be case insensitive , see bugzilla 48444
modified AEADBlockCipher class to improve encryption methods to enhance security and performance of data encryption
added a method to check if a variable is local across multiple classes to improve search functionality for local variables in the system
added a check to set a default resource ID in PackageResourceTable . java and updated the ResourcesMode from best to legacy in RobolectricTestRunner . java to ensure that the resource identifier is properly assigned when it is not defined , improving resource management
6753173 : no need to read all the truetype ' post ' table to get underline info
updated the message readers list to allow for better flexibility in the sign plugin implementation to enhance the flexibility of message reading capabilities
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
remove validation for remote repository in StandardMavenAuthenticationProvider to ensure proper handling of MavenDeployer instances during authentication
fixed javadoc of audionode . getaudiotime ( ) .
added SSL context initialization and updated exception handling in LinkyHandlerFactory and EnedisHttpApi to improve SSL handling and ensure proper exception management during connection attempts
added imports for SQL - standard operator tables and refactored methods in HiveFunctionRegistry to enhance code clarity and maintainability while ensuring consistent function replacement handling
http : / / issues . apache . org / jira / browse / amq - 3872 - fix logging in amqproducer mbean name with service attribute , now it be a little more consistent
modify the ` getBuildTargetForAlias ` method to accept an additional parameter and adjust its substring logic to improve alias handling by removing the ' # ' symbol from the alias string
camel - 15691 : fix poll return for empty odata feed ( # 6372 )
added support for retrieving the equivalent Hive version using a map to improve version handling for better maintainability and accuracy
bug 9436 : if the user be not expunge we do n ' t delete a vm , check if it expunge first before try to expunge again
added multiple @ Deprecated annotations to the AbstractDateAssert class to indicate that these methods are outdated and should not be used in future development
refactor ONDashClockExtension and AlarmReceiver to utilize a new method for generating alternative title to improve code clarity and maintainability by centralizing title parsing logic
updated test cases to use nvarchar / integer4 / int instead of Matchers to improve compatibility with larger data types in the GoogleAuthUserConfigTable
replaced ` commit ( ) ` method calls with ` apply ( ) ` method across multiple classes to ensure consistency and improve shared preferences handling during commit operations
added TestIdleListener to the StandardSession constructor to enhance session management by allowing custom idle handling
add test uuid to bigqueryioit ' s tostring ( ) output
set the background resource for icons in HotseatPredictionController and nullify the background in BubbleTextView to enhance visual consistency and prevent potential memory leaks
mondrian : fix checkstyle violation ; make field final
add abstracttestnativeworker to ensure native system be initialize
[ geot - 5568 ] fix npe in prediction when prediction be empty
added a new argument list to AppleSimulatorController and updated InstallCommand to include it to allow command - line arguments to be passed when running with the ' - r ' option
refactor code to use a genericStyledArea for retrieving paragraph position information to improve code safety by avoiding potential null pointer exceptions
added state availability checks for pipeline and manager processes in ContainerBase and StandardContext classes to ensure that lifecycle management only occurs when the component ' s state is available
added clipping to outline for the background view in QsbWidgetHostView to enhance visual appearance by ensuring the background is visible
added logging of flags and plots processing in SQLManager and improved flag splitting in BlockTypeListFlag to enhance debugging capabilities and improve string processing accuracy for flag handling
fix : disable depth only for occluded floating text
[ gr - 31854 ] fix name of libfifi _ libfifi _ backend _ libfifi _ libfifi _ libfifi _ backends _ linux .
camel - 14994 : camel - jdbc - allow configurable propagationBehavior value .
speed up layervalidation by set layer regularization first
refactor readWrite method to handle exceptions more effectively to improve error logging and maintain connection management during read operations
changed the static modifier of the colorStack array from static to instance variables to improve flexibility by allowing dynamic modification of the colorStack array
updated methods to return true for both mapped and has statements instead of false to enable synchronous statement validation in the configuration
convert currency to lowercase when retrieve the BTCE depth to ensure consistent handling of currency values in the BTCEPollingMarketDataService
fix fail test due to time issue in mqttpublish command
fix enginepayloadparameter to not expose versionedhashes ( # 6012 )
fix update of trigger price when change state
refactor illustration logic to simplify code and improve readability
remove println statement that slip into main code
hbase - 7013 fix potential npe in hregionserver # getconnectiontimeout
# 1627 - enh : add property state management via entitybeaninterceptor ( not when property be change )
added a boolean property ` _ alwaysSaveUri ` and modified session attribute checks to use it to improve flexibility in URI handling during form authentication
added new methods nSetLayerType and nSetLayerPaint to ShadowRenderNode to provide implementations for layer type and paint handling
replaced specific imports with wildcard imports and added new methods to manage the visibility of the popup menu to simplify import statements and ensure the popup menu is shown appropriately based on the accessibility of the parent class
removed redundant lines from the initialization of the ' insert ' variable to clean up the code and improve readability
refactor scala dependency from scala . collection . javaconstruction to collectionasscalaiterable in various test wrapper .
added null check for requests and improved logging in the MockServerEventLog and HttpForwardObjectCallbackActionHandler classes to enhance robustness by preventing potential NullPointerExceptions and improve traceability of tests
added warning log when property file can not be load
fix : fix resource leak in clientmain
updated conditional check to include multicast support and NIC status to ensure outgoing connections are only established on valid and capable network interfaces
updated the constructor of SQLCommand to accept start and end parameters to improve command parsing flexibility by allowing variable length control
updated methods to set latest consumption time for energy and free time in UnDelegateResourceActuator and removed redundant code in BandwidthProcessor to streamline resource management and reduce redundancy in asset processing
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and updated related null checks to improve code clarity and ensure consistent handling of session configuration
include label in exception when token can not be find
add a new test class ` MapAssert _ containsKeys _ Test ` for verifying key presence in maps to ensure that the ` containsKeys ` functionality works correctly with assertions
refactor JdbcProxyGenerator to use a temporary delegate method and create a new interfaces for handling ASCII , binary , and character streams to improve flexibility and maintainability of the proxy generator
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated test methods to use ` Handler ` instead of ` ContextHandler ` to enhance WebSocket container initialization and improve test reliability by ensuring proper context handling
replaced ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to improve immutability and thread safety of flag handling
pdfbox - 2184 : use point2d instead of float to avoid npe
replaced the static final array of MethodHook with a static final constant EMPTY in MethodHook . java to improve code readability and avoid unnecessary object creation
added a grantAccess flag to MockAuthenticationManager and modified authentication retrieval logic to enforce access control for mock authentication
updated JobListener and related classes to accept JobExecution parameters in the afterJob method to enhance method flexibility and control over the job execution handling
updated file permission check to also verify if the file can be execute to ensure that only writable files are processed to avoid errors
doc : add miss languagelanguage to timeseriesquery
bug 52789 - change the parameter name to event in saveservice and resultcollector
added new constants for BATTERY _ LEVEL , TIME _ WITH _ OFFSET , and PROFILE _ NAME in BundleConstants . java and updated CustomUrlManager . java to handle additional parameters to improve code readability and maintainability by centralizing configuration values
changed parameter type of applyRule method from Hashtable to Map to enable more flexible data structure usage in the method
mow - 124 make sure audio and audio can be move ( not only move geoelement )
refactor texture handling and UI initialization in JoglGraphics and ProjectiveTextureTest to improve texture filtering accuracy and ensure correct UI dimensions
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to enable method to create a file instance and ensure it can write to the output resource
camel - 5379 : fixed property component to use placeholder in uris when set interceptfrom .
updated comparison logic in ActionScheduler and adjusted test assertion in TestActionScheduler to ensure correct behavior of attempt count based on current time
updated the temporary path for debugging log file by adding a null check to ensure safe access to the debug log file and avoid potential NullPointerExceptions
feat : toggle visibility of render debug to tesr ' s behavior
added a ` resetGate ` method to the ` Pipe ` class and updated its usage across ` BlockGenericPipe ` and ` Pipe ` classes to provide a mechanism for resetting the gate and ensure proper handling of trigger updates
encapsulate TestSupplementary execution in a try - finally block to ensure locale is reset to maintain consistent locale settings and prevent side effects in subsequent tests
tweak color generation of team to be less likely to become unstable
dense matching : avoid redundant hashset . add log level
update null check logic to allow for null annotation to improve clarity and correctness in handling expected exceptions
updated error handling in StorageResources and added exception handling in StoragePluginRegistryImpl to improve clarity of error messages and enhance exception handling for better debugging
[ gr - 32222 ] add call tree csv link for easy import into graph db .
added null checks for note and noteTmp in DetailFragment . java to improve code robustness by preventing potential NullPointerExceptions
fix issue with assetmanager . getloadedtasks ( ) return incorrect value
gregoryblock : fix native event be not enable on window for firefox
added support for customizable score and fetch interval in the crawling process to enhance flexibility in metadata handling for CrawlDatum based on the defined metadata
updated imports from commons - collections to commons - collections4 in ScimExternalGroupsTypeResolvingFactoryBean and RsaJsonWebKeyTests to ensure compatibility with the latest version of commons - collections4
solr - 7407 : if coredescriptor . shareschema = true , coredescriptor . should not be share a the same schema ( corecontainer )
updated method calls to use sizeInBytes with a boolean parameter across multiple classes to ensure consistent size calculation for better performance and readability
replaced assertions with null checks for version1 _ 2 in VersioningTest . java to ensure proper handling of null values during JSON parsing
updated SQL queries to include additional conditions for handling domain types to ensure compatibility with PostgreSQL versions prior to version 7.3
[ java ] if appendnewleadershiptermevent fails then appendnewleadershiptermevent should be true .
removed unused import and modified the buildMediaType method to return a MediaType directly to streamline the code and improve clarity by eliminating unnecessary dependencies
replaced calls to ` fill ` with ` fillSlice ` and updated method names for consistency to improve clarity and maintain uniform naming conventions across the codebase
fix a bug in AcidUtils and add a test for major table compaction in TestCleaner to ensure that the cleaner correctly handles transactions involving already compacted tables
use a non - immutable storage scheme for qualifier encoding ( patch by jesus camacho rodriguez )
added two new classes , PojoProducersCustomized and RestProducersCutomized , to implement customizable producer and provider functionalities in the application
replaced " cache " with CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve code maintainability by using a more descriptive constant name
fix : when aes gcm sivkeymanager we should not register the protobuf serialization
add wooden slab to ore dictionary match vanilla behaviour ( # 1434 )
refactor multiple Java classes related to session management to improve code organization and maintainability by standardizing class names
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from the ` UndefinedSymbolsLinkerScript ` class to simplify the code by eliminating unnecessary dependencies
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14894 fix oracle test failure on oracle
corrected texture positioning in the draw method call to ensure correct positioning of the sprite batch rendering
modify the loop to return a fixed value based on the permissions in PlayerFunctions . java and update the region format in WorldGuardListener . java to improve the accuracy of player operations and correct region naming for clarity
added a deprecated static final Version constant for LUCENE _ 8 _ 5 _ 0 to signal that this version should no longer be used
modified string concatenation in the logging statement for clarity to enhance code readability and maintainability
added a test for casting to signed integers in the SQL parser to ensure that the SQL syntax correctly handles signed integer values correctly
change the type of ` dependenciesType ` from ` String ` to ` DependenciesType ` and update related logic to improve type handling for better semantic graph output
updated the ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods to use ` parseContext . makeTargetDescription ` to streamline error message formatting for better clarity and maintainability
updated the test method from ` testFromMain ( ) ` to ` test ( ) ` to simplify the test suite by removing the main method
reduced the size of the configBlocks array from Block . blocksList to 256 to optimize memory usage by removing unnecessary dependency on blocksList
refactor warning messages and conditions in BukkitMain . java for clarity and consistency to improve readability and ensure compatibility with git - Spigot versions
added support for escaping PostgreSQL question mark operators in SQL statements to enhance compatibility with Postgres ' s SQL syntax
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementation to enhance flexibility in creating mutable bag instances with specified collections
added validation for bamboo ' s adoc file names and updated string handling in BuildNavAndPDFBody . java to ensure proper handling of invalid formats and avoid runtime errors
fixed bug : nhcmqttconnection2 do n ' t need to set clientid parameter to false
updated ChangeSet retrieval logic to check for a root change log instance to improve robustness by ensuring change set is only fetched when the change log is available
fix ( plugin ) : fix output body be lose when use staticinterceptor
removed HiveMetaStoreClient and added logging statements in TestObjectStore to enhance database management and improve traceability of test operations
added a new parameter ` order _ currency ` to the ` BithumbAuthenticated ` class and modified the nonce generation in ` BithumbAccountServiceRaw ` to support currency order parameters for better account management
remove the SSEFluxWebConfig class to streamline the code for improved clarity and maintainability
updated JsonBuildHelper , IDocBuildTemplate , SpringBootDocBuildTemplate , and JavaClassUtil to utilize the getReturns ( ) method directly to improve code clarity and ensure accurate handling of void return types
renamed ` YAML _ READER ` to ` YAML ` and added a new endpoint to list Yamls detection configurations to improve code clarity and enhance functionality for listing YAML configuration objects
removed public access modifier from equals and hashCode methods in Marker class to enforce encapsulation within the Marker class
refactor thread factory implementation and introduce a new method awaitTermination for improved clarity to simplify thread termination handling and reduce duplication
added unit tests for adding entries with ` PersonWithAList ` in ` MongoTemplateTests ` and created a new class ` PersonWithAList ` to enhance testing coverage for MongoDB document insertion and ensure correctness of list operations
sync applet panel dimension in web ( not swing )
replaced direct toolbar visibility setting with a delayed handler to improve UI responsiveness by allowing a brief pause before showing the toolbar
[ iotdb - 4467 ] remove duplicate check for first page reader when initialize overlap data ( # 8452 )
bug 11105 : if password be not save for the router , do n ' t save the password
added new boolean flags ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` to facilitate proper handling of character encoding in response processing
fix a bug where we do n ' t allow to assign the assignment side effect to a group
refactor JSON - related classes to improve code organization to enhance maintainability and readability of the codebase
updated margin check condition in FileUploadApiController . java to ensure proper handling of padding padding for icons
refactor ` fetchPublicKey ` method to use ` JcaPEMWriter ` for PEM formatting and improve code readability to enhance maintainability and streamline output handling for service properties
added content type checking for UNIX and improved file accessibility in Basic . java to ensure user - readable mime type accurately for users on Windows
make jzlib deprecate in netty 4.0
added a method ` doesClassLoaderDescendFrom ` in the ` Util ` class and removed it from ` Class ` and ` MethodHandles ` to streamline the code for better readability and maintainability
removed redundant doConnect method declarations in ChannelProvider and ProxyChannelProvider to streamline the method signatures for better clarity and performance
drill - 5266 : fix empty final column output when csv header be empty
added compass gravity settings for nearby map to improve the visual appearance of the map
added a test method to compute and compare geometric distance in GeoPath to improve accuracy of distance computations in various scenarios
added exception handling to methods in LeafFilterFactory and ParquetFilterPredicateConverter to improve error reporting and ensure proper handling of potential runtime exceptions
added language setting for video tracks in LibMediaInfoParser . java to ensure proper handling of language settings for video streams
added a warning log for cases where schemas in new version are less than the old version to provide clearer diagnostics and context on compatibility issues
replaced custom arraycopy implementation with a new addAll method in multiple array classes to improve code readability and maintainability by reducing duplication
re - organise to silence some findbugs warning
add constructor to inmemoryclientregistrationrepository that initialize the registration map with a list of clientregistration
added a method to reset the UI state and updated the database schema to ensure proper handling of UI state updates during schema upgrades
added handling for failed steps in JUnitReporter and new test cases in JUnitReporterTest to improve error reporting and ensure robustness against pending exceptions during JUnit reporting
fix regex match for player selection ( # 82388 )
added the Closeable interface to the Selector class to enable proper resource management to ensure proper resource management and prevent memory leaks
replaced the server ' s connection pool implementation with a dynamic connection pool configuration to enhance flexibility in managing concurrent connections
added stringType ( ) methods to CoreOptions . java to ensure proper handling of string types in the configuration
updated HqlQueryRenderer to handle character and parameter cases more effectively to improve query parsing accuracy and support for the ESCAPE clause in EclipseLink
updated status checks and method names to use HttpStatus constants instead of magic numbers to improve code readability and maintainability by centralizing status handling logic
pdfbox - 4892 : rearrange local dest / destination profile assignment , a suggest by valerybokov
add a test use mockconnection for the data source so we can reduce the chance of slow create connection .
refactor ParquetFormatPlugin to utilize a new expandSelection method for handling file selection to improve code readability and maintainability by centralizing metadata handling logic
changed the success flag to true and modified javac task execution logic to ensure successful compilation and improve error handling during compilation
added a TableModelListener to handle table change events in DefaultSortedTableModel to improve event firing when table changes occur
# 2894 : increase server connection timeout to 65535 ( # 2898 )
added Android version checks and notification for document provider changes in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with Android KitKat and above
removed the call to Log _ OC . startLogging in MainApp . java to streamline logging initialization for improved performance
modified error handling in FilterChainProxy to properly analyze and handle wrapped RequestRejectedExceptions to enhance robustness in exception handling to ensure the correct response to blocked requests
updated StringBuilder to use ` this . length ` for array modifications to improve code clarity and maintainability by explicitly managing the length and arraycopy operations
added validation for empty filter lists in the Filter class to ensure that an IllegalArgumentException is thrown when attempting to decode an empty filter list
added tbStopWatch class with methods to start and stop tasks to provide utility methods for task management and duration tracking in the application
fix typo find by codespell on fossies . org
upgrade servlet api to 3.0 . 0 for future removal of servlet api 3.0
[ zeppelin - 5481 ] fix context classloader for remoteinterpreterserver
fix checkstyle issue in entity / commandsourcestack . java ( # 700 )
updated the minimum SDK version configuration in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the new API level O _ MR1
updated parameter names and logic in the DeadlineTimerWheel class for clarity to improve code readability and maintainability by using more descriptive parameter names
# 1627 - query plan - improve bean name generation
updated response rendering paths in BasePage . java and introduced WroSassProvider . java to enhance CSS processing capabilities and provide a structured way to handle Sass - only and Sass imports
[ iotdb - 3770 ] fix sql npe while fetch late timeseries ( # 6890 )
rename ` appContextLocation ` to ` contextConfigLocation ` in multiple files to improve clarity and consistency in naming conventions
6894461 : ocsp checker should not wrap all exception a ` ` unable to send ocsp request . ` ` ( introduce by # 6885667 )
benchmarker : add config option to turn off write outputsolution .
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to verify the functionality of reopening slice sizes in MapDB to ensure the correctness of slice size handling in mapdb volume management
add the shapeless recipe to the craft grid , close # 3989
modify SequentialAccessSparseVector to handle index boundaries correctly to ensure correct boundary handling in multi - valued vector operations
added conditions for managing entities in BukkitMain and EntitySpawnListener to manage plot areas and their metadata to ensure proper ownership tracking for shulkers and maintain plot integrity
added a method to retrieve the DebugLogger in DIHWriter and SolrWriter classes to provide access to the detailed debug logger information for better debugging
hhh - 13526 - warn if destination name truncation be detect ( rajeshbabu )
added ` UpToTagChangeSetFilter ` to handle seen tags and improved logging in ` Liquibase ` to enhance error handling and debugging when tags are not matching
[ beam - 2734 ] use standard arraylist instead of list in runner ( # 2734 )
refactor BrokerRoutingManager to improve code readability to enhance maintainability and simplify future updates
updated volume and up paint color values in CandlestickRenderer to improve visual aesthetics by changing color attributes
use insettableframelayout layout params to account for inset
added a duration parameter to the BuildTargetDurationListener and updated related tests to utilize it to enhance the flexibility of duration tracking for rules in the build target
updated HsqlDbMigrationIntegrationTest , PostgresDbMigrationIntegrationTest , and SqlServerDbMigrationIntegrationTest to use static imports for profile checks to enhance code clarity and ensure that tests are skipped if the database profile is not enabled
added a null check for the user before processing claims to avoid potential NullPointerExceptions when processing user accounts
camel - 5490 : added replacefromendpoint option to camel test , so you can add custom endpoint to a route
replaced ConcurrentSkipListSet with NonBlockingHashSet for the statements variable to optimize memory usage by utilizing a non - blocking collection
bug 7453 : listpublicipaddress - add optional parameter ` sourcenetworkid ` to listpublicipaddresses .
added tests for ignoring battery optimization in ShadowPowerManagerTest and implemented the setIIgnoringBatteryOptimizations method in ShadowPowerManager to ensure correct behavior of battery optimization methods in the power manager
update Jetty version retrieval to use a dynamic property from the build properties to ensure compatibility with different JDK versions by allowing dynamic configuration
added tests to verify the behavior of invocation verification in order to ensure correct reporting and handling of multiple invocations in the verification process
fix tregexexecnode . matches ( ) not always execute at all
added the the argument " - foreground " to the startProfile method in NewProfileExtensionConnection . java to enable foreground profile execution during the process
replaced TimeUnit with IOUtils for managing ExecutorService and updated shutdown methods to improve resource management and ensure proper cleanup of resources
change the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and simplify the iteration through its elements to improve performance and readability by avoiding unnecessary key iteration
updated logging to use getFile ( ) . getName ( ) instead of getFile ( ) and added parent removal logic in EditorTextActionWindow to improve logging accuracy and ensure proper cleanup of the parent view
include source of skipped entry in warning message .
updated Fetcher and FetcherTask classes to utilize LinkStorage for better document handling to enhance indexing and retrieval capabilities for better performance and maintainability
updated the ` populateBubble ` method to accept an additional nullable ` existingBubble ` parameter to enhance flexibility by allowing conditions when an existing bubble is already present
camel - 14272 : camel - core - scheduledexecutor should not log exception if no start / stop / suspend be specify
refactor ` buildRpcExt ` method to remove the ` Method [ ] ` parameter and related logic to simplify the method signature and improve code readability
[ java ] use optimalmulticastdelaygenerator for good performance when create meta channel .
updated Gson initialization to use JsonObject for JSON serialization to enhance clarity and maintainability of client information handling
added a conditional check for zero field amounts before setting the average price for orders to avoid potential errors when opening orders without an average
removed the rawExecutionReports method and directly subscribe to executionreports to streamline the code for better readability and maintainability
added a ` fail ` method to handle exceptions and modified the failure logic in ` LdapTimeoutTest . java ` to improve error handling and provide clearer debugging information during test failures
fixed crash when load stream of userdict for locale that do n ' t exist
added logic to fetch and update the alias for the password file or credential store to ensure that the alias is stored correctly during configuration updates
added a method to check if a segment is parsed and updated the ParseSegment class to incorporate it to improve segment validation and log warnings when attempting to parse duplicate segments
[ flink - 15688 ] [ yarn ] change default application attemptfailuresvalidityinterval to 10m
make the initialization of h2 driver optional to avoid unload the h2 driver
hbase - 27636 [ tablenapshotinputformat ] when use default readtype of snapshot scan , use the config option ` ` hbase . snapshot . readtype . default ' '
add ' fixedheight ' and ' fixedwidth ' query parameter to logininfo .
added a cornerRadius parameter to the update methods across multiple classes to enable corner scaling functionality for better visual consistency
hive - 23737 : fix warning message for cross product in iotdb - server ( david mollitor review by peter vary )
hive - 23956 : txnhandler should retry on connection pool bug ( vineet garg , review by ashutosh chauhan )
# 2334 add backup reserve check ( # 2334 )
added a final field ` strings ` to the ` FirstOfStringsMatcher ` class to store and manage the collection of strings efficiently
updated SQL plan statements to replace " DELETE ROWS " with " DELETE ROWS CLIENT SELECT " and added a new test class for explain deletion to enhance SQL functionality and ensure correct plan generation for client - specific deletion operations
updated exception handling logic in BaseServiceException to include retry logic for SocketException to improve error handling by distinguishing between insufficient data written and socket exceptions
added a new parameter ` rapidInstallTypes ` to various classes and modified related methods to support rapid installation functionality in the AdbHelper and RealAndroidDevice classes
updated the SeedPattern regex to allow negative seed values to enhance robustness by preventing invalid seed values
refactor MultimapSubject to use a Factory for creating values and improve multimap handling to enhance type safety and clarity in handling iterable values during serialization
fix issue where hotseat be not visible in portrait .
handle when some mediaitems require transcoding but others do n ' t have them
added localization logic for array elements in Picker . java to enhance user experience by providing localized strings to the UI
camel - 2349 fixed the test error of cxfrsconsumertest
hhh - 13553 postgresql dialect should throw a lock acquisition exception when it fail to parse the sqlstate
added assertions and modified query ID handling in TestJdbcDriver2 . java and modified imports in HiveStatement . java to enhance test reliability and improve test coverage for query ID retrieval
exclude usesunboundedpcollections category in pardotest for efficiency
updated HTML content for the file name in GpsSimpleViewFragment to simplify the output by using the Strings object directly
[ java ] remove leadershiptermid param from service leadershiptermid .
updated the initialization of the HttpExchange variable to use the current instance variable directly to improve code clarity and maintainability by reducing method calls
[ flink - 26354 ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the token method to apiToken and updated its references in the AppOpticsPropertiesConfigAdapter to improve clarity and consistency in method naming
added null check for the tree object and updated marker handling in multiple classes to improve stability and prevent potential NullPointerExceptions during marker processing
return - 1 instead of float from font size calculation if round be bigdecimal , see bugzilla # 47147
fix addressbookdocomoresultparser . getemail ( ) to return an array of all email
simplified the handling of exclusions in RawMavenResolver by using a centralized set of exclusions to improve maintainability and clarity of the code by eliminating redundant logic
added error handling for DSX exchange information and modified currency pair extraction logic to improve robustness and provide clearer error messaging when unsupported operations occur
updated test files for consistency in naming and structure to improve code maintainability and readability across the testing framework
[ drools - 90 ] fix compilation test when run with incremental compilation on a kie - server
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` to ensure proper handling of the object when ` sobj ` does not contain the key ` k `
camel - 567 : added javadoc to model class so we have eip documentation out of the box
truffle : unreflect getter / setter to avoid unnecessary lookup .
add a method parameter annotation for CompletableFuture in DefaultNullnessAnnotations . java to enhance type safety by explicitly indicating the completion stage of the CompletableFuture
update freezeCheckPoint calculation to subtract it from the mp ' s duration to correct timing logic for improved stability
added Whitebox annotations to AbstractCommonPowerMockRunner and removed it from PowerMockRunner to consolidate state management for better code clarity
update method call to use realType ( ) instead of typeCode to ensure correct type handling during deserialization
update TabsAndIndentsVisitor to handle method invocations with and without whitespace to improve indentation handling for method invocations
replaced LuceneTestCase with JUnit ' s TestCase in TestSingleTokenTokenFilter to utilize JUnit ' s TestCase for testing purposes
updated the HTML output for the wrapped text in HtmlProcessInformationsReport to improve the display of process information in the report
in progress - batch - 825 : refactor jobrepository for good clarity and consistency .
added a conditional check to only add the mon element when the new media folder is not hidden to improve control over media folder visibility during configuration
replaced unsupported operation exception with illegal argument exceptions and added checks for widget state in SplitPane . java to ensure proper handling of null actors and maintain UI behavior
fix # 180 : removeusedimports for parameterized type
fix a possible npe in the UniqueModListBuilder . java file system code .
changed the static final logger to static final logger in TicketGrantingTicketImpl . java to improve performance by reusing the class in a more efficient manner
updated SQL string to include a new column type " 81 + 12 " to ensure compatibility with the new data type in the timeseries creation process
added a method ` isValue ` to ` AttrData ` and updated ` Converter ` to handle enum scrollbar values to enhance functionality for identifying and validating enum values during layout inflation
modified the condition for handling US International PC keyboard locale in CPlatformResponder . java and added locale checks in LWCToolkit . java to enhance support for US International PC keyboard layout inputs
[ java ] set aeron _ publication _ connection _ timeout in ctest and spymatedconnectiontest .
[ geos - 9008 ] fix npe on csrf plugin ( # 4411 )
fix unit test when the apk be not rooted
no effective change - remove oracleanddlrowluster
fix some test bug that be cause some test failure after commit
updated Java library paths in DiffRuleKeysScriptIntegrationTest . java to use new environment variables
added a new boolean variable ` mIsDismissHapticRunning ` and updated conditional logic in ` TaskViewTouchController . java ` to ensure proper handling of hot press state in the touch controller
fix invalid initial explosion exploder set to projectile source .
removed unused import and modified the getItemId method in SymbolInputAdapter . java to improve code clarity and ensure consistent identifier handling
updated the path and parameters for the getBook method in Bitfinex . java and BitfinexPollingMarketDataService . java to use QueryParam for limit _ bids and limit _ asks to simplify the API request and ensure compatibility with query parameters
camel - 5279 : fixed staxconvertertest to work on window due to wrong escaping of string on window
[ flink - 23438 ] [ runtime ] fix zookeeperleaderelectiondriver ' s tostring ( ) method to return the correct leader latch path
refactor SqlSessionFactoryBean to improve code readability to enhance maintainability and simplify future updates
fix tripleinvoker nullpointerexception when generic call ( # 9016 )
replaced error handling with a RuntimeException in PolygonRegionLoader . java to improve error handling by providing a clearer exception cause
added a method to check if the deadline is started and updated timer handling in the RawStoreProxy class to improve stability by ensuring a proper mechanism for starting and stopping the deadline
add handling for closed channel exception in NettyRequestExecutor to improve error messaging when the channel is closed
fix null pointer exception when null in item list
[ flink - 25958 ] [ runtime ] reset the master hooks with the correct timestamp + state after region recovery
dataes - 651 : added support for map with collection of mapped container .
[ deadlock ] fix npe when unpinning memtable
added a test for retrying the same host on a callback failure in HttpTest . java to ensure that the handler retries correctly when the host name is the same
fix a typo in the package documentation for tutorial . background .
added a new test class SQLServerEscapeQuestionCharacterTest for validating SQL server escape character functionality to ensure proper handling of special characters in special characters in query execution
update camel - jboby to not fail if there be no route builder for camel
remove unnecessary synchronize in javabasel port .
updated package and import statements for ParameterFlags from the provider package to the provider package to ensure compatibility with the new package structure in the JaffL provider
incorporate cropperbehaviour object check into methods of cropperutils to avoid crash
removed the appName parameter from the configure method across multiple classes to simplify the configuration process by eliminating unnecessary parameters
add test for install and uninstall command that ignore specific dependency .
replace the method setHeadless ( true ) with addArguments ( " -- headless = chrome " ) in multiple test classes to improve argument handling for headless mode in the chrome driver
unify the interning of the value object to ensure memory efficiency by reusing the value object
added support for ' MOVE ' status in the connection validation to ensure handling of the ' MOVE ' status in the application
swapped the order of US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME to improve readability and consistency in date formatting
replaced the import of ` org . apache . curator . shaded . com ` with ` com . google . common . collect . Lists ` in multiple files to resolve dependency issues caused by refactoring
[ hotfix ] fix the npe in hsbuffercontext . startspilling ( )
send ` ` visit untrusted visit ' ' message immediately if the permission be not available ( # 2088 )
disables jabber telephony until it ' s actually ready
updated URL normalization logic to include additional hex hex values to enhance URL normalization accuracy and prevent potential issues with curly brace characters
change access modifiers of methods related to remote animations and transitions in QuickstepTransitionManager to enhance encapsulation and control over method access for better code maintenance
added a condition to compare clock rates when ' res ' is 0 to ensure consistent lock rate comparison
added a method to retrieve the project path and modified the return type of generateProjects to ImmutableSet < Path > to improve the handling of generated projects by providing more flexible path handling
removed unnecessary conditional check before setting the zero digit in HostLocaleProviderAdapterImpl . java to simplify the code for better readability and avoid unnecessary operations when no native digit is available
added a new file MSwingUtilities . java that implements smoother image scaling functionality to facilitate the display of exceptions and images in a graphical user interface
camel - 8812 : camel - mail - send should use async so we can do camel rout . work in progress .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure proper refresh behavior for authentication configurations
added unit test base on user forum issue
added Main and ScriptRenderer classes for scripting functionality to enhance the application ' s ability to handle JavaScript scripts within the schema
updated condition in Request . java to include input state check and added a new test method in RequestTest . java to ensure correct handling of reading parameters after the reading operation
added checks for non - empty glyph dimensions before calculating descent in BitmapFont , implemented isDescendant method in Group , and enhanced touch focus handling in SelectBox to improve error handling and ensure proper visibility of child actors in the user interface
updated error reporting mechanism in DeploymentManager and added a test for context shutdown hook in DeploymentTest to improve error handling and ensure correct behavior during context shutdown
do n ' t ignore lexicon pattern for item that do n ' t have damage anymore .
fix constanttimebackofftest intermittent failure on slow machine
replaced specific imports with a wildcard import and modified conditional check for shortName to enhance code readability and simplify string validation logic
xml parser : use getclass ( ) to create holidayxmlurl
added a new file FieldUtils . java with methods to retrieve field names and their accessors to facilitate reflection - based field manipulation in the acegisecurity framework
removed unnecessary condition in the assertion in DeferredAttr . java and added a new class DoubleStaticImport . java to simplify the assertion logic and introduce a test for double - static import functionality
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and applied default padding to improve UI consistency by using a more appropriate layout
added update of xabber account setting save last account to net .
added a new method ` setvar ` to set variable arguments with help formatting to enhance command - line help functionality for users
fire cat entity animal tame event ( # 5477 )
fix ( sql ) : fix invalid assertion for unsigned range
pdfbox - 4892 : add test to verify that signature have no font
added a line to set the application mode using the application ' s mode to ensure the application displays the correct display mode for better user experience
added support for an optional Docker file path in the ImageFromDockerfile class to enhance flexibility for building Docker files with optional arguments
added a null check for threadInfos before initializing to avoid potential NullPointerExceptions when accessing threadInfos
updated the percentage check for the sweep angle from 0.0001 f to Utils . FLOAT _ EPSILON f to improve precision in the float value comparison for better precision
[ hotfix ] [ checkpointing ] add more log for singleinputgate
added new table types to the schema enumeration to enhance data integrity and support additional table types in the schema
added a minimumSimilarity parameter to FuzzyQuery and modified related constructors and methods to enhance similarity handling to improve query efficiency by allowing specification of a minimum similarity parameter
rename method ` addActionsView ( ) ` to ` setActionsView ( ) ` to improve clarity and consistency in method naming
move ` ` immediateflush ' ' property to outputstreamappender . parent .
updated the AutoConfigureAfter annotation to include both Rabbit and Kafka auto - configuration classes to enhance flexibility in configuration loading for better integration with Spring Boot
updated JLayer to handle null components correctly during component removal to prevent potential NullPointerExceptions when the component is null
updated import statements to use the non - shaded version of Google common libraries to resolve dependency issues caused by shaded imports
fix # 162 , add method to create return / unwind block in graphbuilderphase
added methods to manage and set the legacy renderer in Label . java to improve renderer management flexibility and functionality for better icon rendering
replaced intToFourBytes method with Ints . toByteArray in AbstractJweDecrypter and AbstractJweEncrypter classes to improve code readability and reduce boilerplate code
added a null check for mObserver in the navigation mode feature condition to prevent potential NullPointerExceptions when mObserver is not initialized
updated the default type of the ` thenComparing ` method and added a new ` Department ` class with a test for its functionality to enhance type safety and validate sorting behavior for the Department class
refactor DocIdSet . java to improve code structure to enhance maintainability and readability of the code
fix user rule anomaly endpoint to use current bucket time
add try - catch block to safely handle NumberFormatException in parsing integer values to ensure that NumberFormatException is not thrown when parsing integer values
added a class loader assignment for MockFactory in MockFactoryTest . java to ensure proper class loading for mocking configurations
added a new class ` OriginalFormat ` that extends ` Format ` to facilitate the formatting and parsing of object inputs using enum values
add a constant for pattern - based date formatting in FileStorageUtils . java to improve code readability and maintainability by avoiding magic strings
update JAWTRenderer . java file for improved rendering performance to enhance rendering efficiency and reduce memory usage
camel - 14836 - camel - aws2 - * : enable autowire on the lambda client , regen catalog
validate mac address in user _ vm _ manager ( # 6974 )
updated string header name comparison in ProxyServlet . java to ensure proper handling of authorization headers in the servlet
change method from submit to execute in TraceableExecutorService class to improve task execution handling in context - aware scenarios
added getDetails ( ) method to multiple authentication classes to provide access to authentication details for better tracking and debugging
updated the random use points feature to use a fixed range of values to improve variability in testing scenarios by allowing more than one point to use
add space to stack trace to make more sense
updated TimeFormat and related classes to support US locale for console formatting to ensure consistent locale - specific output across different locales
groovyprinter : fixed bug where the line number do n ' t match the end of the line . # 968
added boundary checks for top and right inset pixels in the Border class to ensure proper resizing when dimensions are not smaller than 1
refactor GestureState initialization to use a constant for the default state to improve code readability and maintainability by centralizing the state management logic
replaced DateTime with Instant for version formatting to improve compatibility with modern Java Date API
feat ( openblas ) : add to presets for openblas and openblas _ nolapack
tw - 35395 artifact of old build can not be download via torrent ( # 3656 )
added synchronized keyword to initTxnMgr method to ensure thread safety during transaction manager initialization
updated the socket timeout duration from 15 seconds to 40000 seconds in AbstractDistribZkTestBase . java to increase recovery wait time for improved stability during test execution
add a new class ` SearchResults ` for handling search results in Lucene to provide functionality for retrieving and manipulating search results efficiently
bugfix # 154259 - restart thread when not yet initialize
initialize body if a primitive field be miss . fix # 481 .
added new version constants for versions 8.10 . 0 and 8.11 . 0 in the Lucene framework to ensure compatibility with the latest version releases
updated feature flag for two - line label and modified package name check in AppIcon to enhance clarity of feature usage and improve package identification logic
added a new API endpoint to retrieve the system instance pools to provide users with information on whether the current instance is a tenant pool
improve testability of topfieldcollector early termination test
added a check for ` isToString ( ) ` in the ` InlineBytecodeGenerator ` class and created new test cases for mocking interfaces to ensure proper handling of string inputs and verify the mock functionality through unit tests
added logging statements and error handling for CxxCompileStep and CxxPreprocessStep to improve traceability and debugging for command execution and preprocessing processes
use stringutil . removecharacter ( string , char ) to remove a character from a string when the character be remove .
fix : make metadata service export protocol configurable ( # 10311 )
[ drools - 2270 ] move datatransformer interface to kie - api - runtime - core
change the type of ` objval ` from ` Object [ ] ` to ` Number [ ] ` to improve type safety when handling arrays of integers
trivial clean - up : remove useless code and unnecessary checking
removed unnecessary whitespace in the assignment of the SolrCore variable to improve code readability and maintain consistency
refactor ITestDbTxnManager for improved clarity to enhance code maintainability and readability
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added map model testing functionality in CodeFirstPojoClient and CodeFirstPojo to ensure proper handling of user map data during testing
pdfbox - 4892 : optimize , avoid redundant null check , reestablish checkstyle compliance
scale dialog : fix invalid selection when add new entry to select all
refactor updatePlayerStepStatus method to tickBelt and handle null attributes to improve code stability by preventing potential NullPointerExceptions
replaced IOException with a warning log statement and modified appearance stream initialization to improve error handling and provide clearer logging when no appearance streams are created
change SortedSet to LinkedHashSet for keys in ExecuteSqlCommandStep . java to maintain the insertion order of keys during execution
updated the time threshold in CancelEventTimer from 1500ms to 1000ms and modified parameters in PagePreviewCard to increase the responsiveness of the drag operation and ensure consistent behavior across the application
updated the preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure compatibility with the latest features and bug fixes
add conditional check for agent support in MainMockTransformer and create new test classes for mocking static methods in StaticWithPrivateCtor to ensure proper functionality of mocking static methods and validate functionality through unit testing
pdfbox - 4892 : check if the object be already a cosstring or cosdictionary before decryption , reestablish checkstyle compliance
bug 60589 - make window title configurable
updated depth calculation based on pixel size for better transparency handling to ensure correct depth value is assigned when using a 32 - bit color model
added errorResponseBody handling to OkHttpDataSource to improve error reporting for unsuccessful response scenarios
added a static exit method to TopLogging and modified exit handling in TopThreadGroup to improve exit method flexibility and simplify error reporting
updated the calculation of the start index for regex matching to correctly handle cases where the regex is not global
planner - 468 ignore test while upgrade to optaplanner 6.3 . 1
updated the index used to retrieve the high allocation from availableAllocations to ensure the correct allocation is used for high allocation
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to streamline the deletion process and provide a way to delete feeds without feeds
change the return type of the appendToLabel method from void to AtomicCounter to enable method chaining in the AtomicCounter class
introduce noopidlestrategy to avoid warning when no aop idle strategy be available
add handling for HTTP status code NOT _ MODIFIED in CacheControlHeadersWriter and related classes to ensure headers are written correctly when not modified
truffle / instrumentation : make the test more intuitive and add a factory method to create the instrument
remove the overridden paintTabArea method from SynthTabbedPaneUI to improve tab area rendering accuracy by using the current tab pane ' s insets
refactored KrakenMarketDataService and KrakenMarketDataServiceRaw to use a more flexible argument handling approach to enhance flexibility and ensure correct argument validation for Kraken depth retrieval
camel - 8563 : fixed possible issue with camel - ftp use wrong file separator when create file instance .
added JSON identity handling and a new method to create JavaProvenance to enable proper generation of JavaProvenance instances with specified classpath parameters
added trace logging for Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java to improve traceability and debugging capabilities for Hive operations
updated loop iteration from 100 to 200 to improve performance by reducing the number of iterations
avoid deserialization of deleted cf while iterate over them in serialiser
added a check for writable output files to handle root permissions to avoid errors during test execution due to root access issues
added package info retrieval and logging in LauncherModel . java to ensure the application can gracefully handle package access issues
server : fix upgrade from 4.0 to 4.2 for 2.0
updated exception handling and skip policy checks in AbstractFaultTolerantChunkOrientedTasklet . java and related tests to enhance error management and ensure proper handling of non - skipped exceptions
updated the condition checks to use regionMatches for case - insensitive matching to improve the accuracy of string validation logic
added imports for SourcesFileErrors and modified methods to handle global data tables to improve code organization and ensure only valid data tables are added to the data table list
added import for Overview and implemented task dismissal logic in TaplTestsTaskbar . java to ensure all tasks are dismissed when a new overview is displayed
bug 10727 : system vm template be not save when upgrade from 4.14 . 1 to 4.15 . 2
removed unnecessary null checks and improved connection handling in LdapClient . java to simplify the code for better readability and performance
refactor index handling in SequenceAction . java to improve clarity and maintainability of action evaluation logic
avoid race - prone second ` ` get _ keyspace ' ' call in case of login
added a check for synthetic fields in ReflectUtils . java to ensure that only non - synthetic fields are processed further
added LoggerProvider for better logging capabilities to support application wide logging in the application
changed the type of the ` ImmutableMap ` builder and related variables from ` String ` to ` Object ` to improve type safety and simplify the handling of server port values
added a deprecation warning message when attempting to configure multiple glue classes in SpringFactory to inform users of the deprecation of deprecated configurations
added a deepStart method to the Startables class for processing startables to enhance functionality by allowing deep starting of multiple Startable instances
removed the deprecated method reservePrimitiveExtensionArray from Shape and ShapeImpl classes to maintain code clarity and remove obsolete functionality
fix up , control overaser target block placement , should fix # 1097
updated the object name validation logic in AbstractJdbcDatabase . java to ensure that object names containing parentheses are appropriately handled
removed unused imports from TestSolr4Spatial2 . java to improve code clarity and reduce dependencies
[ mondrian - 1471 ] - disable expiry processing if the test take too long to do so .
removed unnecessary null checks and improved conditionals in RequestHandlers . java to enhance code readability and prevent potential null pointer exceptions
modified the return statement to replace ' - ' with ' . ' for servlet names to ensure proper formatting of log names for better readability
replaced the way Python module search path is handled by replacing the direct assignment with a map - based approach to improve flexibility in managing Python environment variables
updated audio processing logic to correctly use frame size checks and improve error handling for invalid audio data to enhance robustness by ensuring proper memory management and preventing invalid audio data issues
[ type : fix ] handle null enums gracefully ( # 3219 )
updated the error message format to include the number of segments to improve clarity of error reporting for better debugging
added assignment of policy using containerScope ' s policy to ensure proper policy configuration for WebSocket sessions
updated logic for determining static fields in Java to TypeScript translation to ensure correct initialization of static fields in both enum and class contexts
added a webroot argument to the UserService class to allow users to specify a webroot directory for the server
test : migrate rest - dsl module to junit5 ( # 5506 )
use editorregistry . getcomponentlist ( ) instead of registry . getcomponentiterator ( ) in utils
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple classes to improve clarity and consistency in formatting helper functions
consolidated multiple import statements into a wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for future stop order functionality
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure buffer is cleared before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is null
updated comparison in FloatingDecimal . java to use a strict less than operator to correct the range check for decimal exponent values
updated property type comparison to use ` isAssignableFrom ` instead of ` equals ` to ensure proper type checking for property values in the application
removed the maxVersion parameter from the getVersions method to simplify version retrieval logic by directly using the original versions list
set origin header for secured URIs if explicit to ensure that origin is set correctly for requests that do not have the correct scheme
updated animation behavior for task overlay animations in RecentsView and TaskView classes to improve user experience by enabling smoother transitions during modal transitions
added ` field ` to error messages and extracted values from ` field ` to enhance error reporting for better debugging and maintainability
add a new sample for clearing HLS information with information about TearsOfSteel and Bipbop _ 4x3 to enhance video processing capabilities for better performance and accuracy
removed unused import statements and updated the string constants related to Hibernate to streamline the code and improve clarity by reducing redundancy
updated log initialization to use the correct package path for Hadoop RPC classes to ensure accurate logging context for better debugging and traceability
added diagnostic logging and updated JavaFileObject handling in TestSpecificCompiler . java to enhance error reporting during Java compilation for better debugging
modified WebSocket session creation logic to return early and added a test for session closure behavior to improve control flow and ensure that websocket sessions are only added when logging occurs
update delay value from 1 to 10 for better randomness in multiple services and methods to ensure smoother transitions after batch processing
ww - 4187 add miss license header to xmlconfigurationprovider
added conditional stream stop management in WebCamInputPanel . java to ensure proper handling of video tracks when the stream ' s stop is called
changed the data type of chart data from List to ArrayList in BittrexChartDataResponse . java and added a new periodType enumeration in BittrexMarketDataServiceRaw . java to improve performance and flexibility when handling chart data retrieval
update geotools gml module to make it work with new feature api
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the method call to improve performance by reducing unnecessary operations
hhh - 10956 - fix identifier generator for composite property with hibernate 5.0
fix : correct spelling of findfulltextaction to download full text
refactor URI registration handling to separate host and port from existing URI list to improve clarity and efficiency of URI registration process
refactor WebSocketUpgradeFilter and WebSocketMapping classes to improve code organization and maintainability
added OSDB hash check and updated type parameters in OpenSubtitle . java to improve robustness by ensuring the OSDB hash is blank before accessing parameters
added token transfer logic to the RuntimeImpl class and a new method in MUtil to support token transfer functionality in the contract
camel - 6056 : camel - ftp - delete temporary directory when use stepwise mode .
fix ( kubernetes - model - generator / spring - boot ) : fix search bind dns property
added checks for query results in MapJoinOperator and modified conditions in HybridHashTableContainer to enhance query matching logic and prevent unnecessary processing for bloom filters
updated ` HTTPSPDYAsyncEndPoint ` to accept an ` AsyncEndPoint ` parameter and modified related methods accordingly to enhance functionality by allowing dynamic URL and ports to be retrieved from the ` AsyncEndPoint `
added ' id ' extra to intent in multiple adapter classes to ensure the intent contains the correct tweet ID for better user experience
added handling for user proxy authentication in HttpURLConnection to ensure proper disconnection behavior when using proxy authorization
[ java ] fix the bug of tracecontext . getnumchildren ( )
updated JWT ( 9 , 0 , jwt ) method calls and modified WafPlugin . java to remove final modifier to improve code clarity and ensure consistent handling of JWT responses
disabled the test method in ValueTypeTests to prevent the test from running due to underlying issues
[ bz - 1155252 ] move resourcereserviceimpl to kie - internal
replaced instances of ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` across multiple predicate classes to clarify the predicate behavior for the NOT _ IN condition
replaced the usage of ` AccountUtils . AccountNotFoundException ` with a more general ` Exception ` in multiple classes to simplify exception handling and enhance clarity in account management
added a null check for witnessService before validating witness permission to avoid potential NullPointerExceptions when witnessService is not initialized
modified the construction of the taggedCol string to include the expression string to enhance the formatting of column names for better readability
add a null check before setting the Java document in AbstractJavaClassTranslator to ensure that the item ' s Javadoc is not empty before using it
renamed ` holderMethod ` to ` holderMetadata ` for clarity and consistency to improve code readability and maintainability by using a more descriptive term
fix potential npe of tabs . revalidate ( )
[ flink - 30613 ] [ connector / kafka ] replace unsupported metricgroup exception with an actual return value
updated calculations for the y - coordinate in the Polygon class to improve accuracy of positioning by using the old coordinate system
fix compile error on jdk 6
updated condition to check if the string length is greater than zero in InheritanceUnsafeGetResource . java and added a new class Bug2974855 . java with a test method to enhance robustness by preventing potential StringIndexOutOfBoundsException in URL handling
refactor ShadowCookieManager to improve code structure to enhance maintainability and readability of the code
added external table drop check configuration in HiveConf . java and updated related tests in TestStorageBasedMetastoreAuthorizationProviderWithACL . java and TestStorageBasedMetastoreAuthorizationProvider . java to ensure proper handling of storage - based authorization and improve test coverage for dropping external tables
added braces to conditional statements in Stage . java and modified draw method in ProgressBar . java to improve code readability and ensure proper rendering of background elements
[ gr - 46720 ] sulong : cache the byte order we want to be use for the llvm language .
updated the property name for the Windows client provider timeout to ensure consistency with the Windows - specific naming convention
added webview login support and modified the initWebViewLogin method to accept a URL parameter to enhance security by allowing user to access the web view directly from the server
corrected the spelling of " parameter " in the exception message to ensure clarity and accuracy of the error message
changed the request timing annotation to be optional and updated test cases for date handling to ensure the after parameter is not null to avoid runtime errors
[ flink - 11946 ] [ doc ] change class name from exponentialtimer to prcisethroughputtimer
fix softbodytest by remove not necessary softbody
add public modifier to interface in preparation for user guide
[ zeppelinhub ] improve log message ( # 4074 )
[ jingle ] added test case and doc
fix a crash when try to place redplasma block without a redplasma block .
more change to pipeline to support http / 2 . simple greet sample work now .
refactor conditional checks for plot member removal to streamline code for improved readability and maintainability
updated the delimiter construction and string formatting in SimpleReport . java to accommodate a new line number format
removed the option to ignore symbol files in the JavapTask and updated related classes accordingly to streamline code and improve consistency in handling symbol file preferences
rename ` TickerDemo ` to ` StreamingTickerDemo ` and update related references to improve clarity and consistency in the example class naming
removed unnecessary try - catch block and added null checks for contract and address in contract creation logic to improve error handling and ensure that invalid contract addresses are provided
g3d - 715 : do n ' t create the input3d in av ( but not in applet )
temporarily ignore this test while investigate failure in release build
flv : ignore invalid scriptdata name type , rather than fail playback
updated the method signature of getRepositoryFactoryClassName to be overridden to improve method clarity and ensure compatibility with overridden methods
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to enable handling of multiple executable commands instead of a single string
updated field assignment syntax to use the class instance variable instead of the class instance to improve code readability and consistency in object initialization
deleted the UploadPathActivity . java file and its associated references to streamline the codebase by eliminating unused components
update return statements in SimpleTextFieldsReader to conditionally return - 1 based on indexOptions to ensure consistent handling of term frequency based on indexing options
fix : do n ' t add implicit constructor to constructor ( # 4184 )
added a ` Database ` parameter to the ` populateValidateNullableIfNeeded ` , ` populateValidateForeignKeyIfNeeded ` , and ` populateValidateUniqueIfNeeded ` methods for Oracle databases to enhance database validation checks and prevent errors with non - Oracle databases
refactor Database class to improve code organization to enhance maintainability and readability of the code
update springapplicationbuilder javadoc to reflect api change
updated assignment of iterator in PointInSetQuery to ensure proper reference to the sortedPackedPoints iterator to improve code clarity and prevent potential null reference issues
remove redundant substring operation from SchematicHandler . java to simplify the code by eliminating unnecessary substring extraction
added a switch statement to handle specific collection types in AbstractCollectionAssert to improve the accuracy of collection assertions by ignoring specific types
changed the enum declaration of the Option enum from static to non - static to allows multiple option instances in the ProcessExecutor class
added a confirmation dialog for twitlonger functionality in Compose . java to enhance user experience by providing additional actions based on user preferences
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFile ( ) ` in the ` FileDetailFragment ` to streamline the file synchronization process by ensuring it behaves correctly in the UI
replaced DatatypeConverter with Java ' s built - in Base64 implementation and added unit tests for ImageUtil to improve handling of Base64 images and ensure functionality through unit testing
added new classes for ` ControllerCounter ` and ` DBCallback ` with associated methods and getters to facilitate MongoDB document management in the MongoDB framework
added final modifier to the ticketId parameter in the deleteTicket method to enhance code clarity and prevent unintentional modification of parameters
added a new file FlywayMigrationRunner . java to implement a Flyway migration runner to facilitate the configuration of Flyway database setup
replaced calls to ` isEmpty ( ) ` with size = = 0 in ` HashMap . java ` and created a new class ` NotEmptyHashMap ` for testing to improve the clarity and functionality of empty checks in the map implementation
update the version number from 0.6 . 0 to 0.7 . 0 to reflect the new release and include enhancements or bug fixes
updated method signatures to accept nullable EnumSet for CompressionCodec and ZlibCodec to improve null safety and logging for missing orc compression modifiers
added null check for mainAttrs and improved jar creation logic in LauncherHelper . java to ensure robust handling of missing main manifest attributes and enhance robustness in jar execution
updated test class names by adding an ' s ' suffix to adhere to a consistent naming convention across test files
replace hotspotvmconfig . getcompiledirsize ( ) with hotspotvmconfig . getcompiledirsize ( ) .
bug 59747 : fix clone ( ) method in xssfsheet to use a copy constructor that take an argument .
added a method to reset icon load result in FloatingIconView and invoked it in Launcher to ensure that the icon state is reset before reassigning it
[ cap ] use the raw character sequence to form field value
updated layout dimensions for task items in IconRecentsView based on orientation to ensure proper layout behavior for landscape orientation
deleted the AddAdapter class . java to the functionality was deemed unnecessary or redundant within the launcher package
added a check for empty constructorCodeList and refactored related code in NonStaticLifter . java to ensure proper handling of empty cases and avoid potential errors during parsing
hive - 20158 : remove duplicate ` ` sort by ' ' clause from joinjoin ( krisztian kasa , review by jesus camacho rodriguez )
updated the handling of log event notifications in TestLogWatcher . java to improve clarity and error handling when no entries are registered for the watcher
added a print statement to indicate when a method is not found to improve output clarity for TypeScript translation
update java version code from 4799589 to 4913185 in addSdk call to ensure compatibility with the latest SDK version
set SPRING _ AOP _ PROXY _ TARGET _ CLASS to " true " in TraceEnvironmentPostProcessor . java to ensure SPRING _ AOP _ PROXY _ TARGET _ CLASS is set to true by default
removed the singletonLock variable and its associated logic from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary conditional checks
renamed methods for response and forward classes in the CallbackActionExamples class to improve clarity and better understanding of callback handling functionality
add method for append output file to the test suite to enable easy debugging
updated the logic to return the current Maven repository instead of applying a mirror directly to ensure that MavenRepositoryMirror instances are only returned when settings match , improving accuracy in handling Maven repository modifications
added a name parameter to constructors and methods in BuildRuleSourcePath , PathSourcePath , and SourcePathTypeCoercer classes to enable better handling of source file names for better path management
updated OAuth callback authorization logic to use ` matches ` for service redirects to improve matching accuracy for OAuth client redirects
replaced direct usage of ` toArray ( ) ` with ` AnnotationParser . toArray ( ) ` in multiple classes to improve code readability and reduce redundancy in array conversion
updated method calls in UserManagerCompatVL to use getBadgedIconForUser instead of getBadgedLabelForUser to improve clarity and consistency with the updated API usage
updated default value for the line separator in GlobalConfiguration . java to ensure compatibility with different line endings
fix bug in configurationmanagerutils . isimplementinginterface - > isDerivedclass
added input sanitization to the server url parameter when return an url . fix # 621
chore : update java and python dependency ( # 610 )
modified the test method to throw IOException and added functionality to retrieve file names from primary and secondary files to improve error handling and ensure proper file name extraction from workspace
refactor CountersReader . java to improve code structure to enhance maintainability and readability of the code
update the methods in AllAppsRecyclerView to directly set containerType values for SEARCHRESULT , PREDICTION , and ALLAPPS to improve code clarity and ensure consistent logging of container types
hbase - 27017 deprecated configuration key in bytebbuffallocator ( # 47hbase - 12709 )
[ native ] fix fail native window query
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types correctly to improve the accuracy of obtaining parameter types in the presence of synthetic or implicit parameters
modified TestFSTs . java file to enhance test coverage and fix existing issues
ggb - 2163 fix bg color calculation for text - labeled input box .
hbase - 15615 make flushsize a initial size of the table _ region _ store _ flush _ size ( liyin )
no need to start the loader since we do n ' t need it anymore
removed initialization of lists for keys and updates and initialized them with the current time to streamline date handling by eliminating unnecessary null assignments
added support for excluding specific datasource in SpringDataSourceBeanPostProcessor to enhance flexibility in bean management by allowing configuration of excluded datasource instances
call storeundirectinfo ( ) after store undo info in tablevaluesview . commit ( )
[ beam - 12190 ] also allow user to provide user - agent property to work around amazon sdk client
add multiple channel mask to the velbus sensor to allow multiple channel input .
disabled certain tests in ` BoundedLocalCache ` and modified code to disable them to improve performance by disabling tests due to unfavorable benchmarks
added a test for illegal database names and improved exception handling in PartialPath to ensure that invalid database names are properly handled and provide clearer error feedback
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure new files are properly cleared during garbage collection
replaced ` desiredWorkspaceLeftRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx ` and refactored margin calculation logic to improve margin accuracy for different layout orientations
refactor formatting and consistency in CharTokenizer . java to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 560 )
cloudstack - 8190 : fix xenserver traffic label for backward compatiblity
fix up dependency bank for next release
removed the private Set < String > metricNames and the corresponding getter method from SolrCore . java to streamline the code by eliminating unnecessary metrics retrieval
replaced URI with Path for workingDirectory and absolutePath in MavenManifestFactory . java to improve path handling and simplify path management
replaced direct OS detection of mac with a static final boolean constant to improve code readability and maintainability
fix javadoc issue of jdbcaggregationrepository . getgroupby ( )
fix slot list not retain in order on window . report by damian minkov .
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count for accurate testing
added a method to merge configuration properties in ConfigurationSpringInitializer . java to improve property retrieval for better configuration management
refine main method to use org . slf4j . logger as well for command line logging
replaced instances of HashMap with LinkedHashMap in multiple Java files to maintain the insertion order of operators
add caching of type handler hierarchy in TypeHandlerRegistry to improve performance by avoiding unnecessary lookups when type is not a class
added debug logging statements to multiple item writer classes to improve traceability and debugging capabilities during item writing
fix handling of language range args that start with a comma
updated the handling of the closeHandler in VertxHttp2Handler to execute from an IO context to ensure proper execution of the closeHandler in the Vert . x context
bug 57840 : cache the xssftable instance in evaluationworkbook to improve performance of xssfevaluationworkbook . gettable ( )
updated schema text detail type checks and simplified conditional statements for primary and unique indexes to enhance clarity and maintain consistency in schema formatting
updated MongoFactoryBean references to MongoClientFactoryBean and MongoClient to ensure compatibility with the latest MongoDB client implementation
replace HashSet with LinkedHashSet for roots and leaves variables in SparkWork . java to ensure insertion order is maintained for better predictable iteration order
removed the assertion for cloning the TableScanOperator in SkewJoinOptimizer . java to ensure proper handling of the cloned operator tree to avoid potential errors
added a null check for the client ID before returning the registered client to prevent potential null pointer exceptions when the client is not present
clear thechievementlist ' s field when encounter exception ( # 4845 )
initialize userName , productName , driverVersion , and connectionUrl with empty string values to avoid null pointer exceptions when accessing shared data
updated permission references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in multiple classes to ensure consistency in naming conventions for shared permissions
added a long buffer to ByteBuffersDataInput for efficient data reading to improve performance by reading long data directly from blocks
updated file time attributes to include sec and nsec in seconds to enhance time representation and improve accuracy in handling file timestamps
added a new file ` TestNo eagerReclaimOfHumongousRegions . java ` that utilizes ` LargeRef ` for managing humongous regions to improve garbage collection handling of humongous regions in the garbage collector
added conditional logic to hide the search bar and manage its visibility based on user preferences to improve user experience by preventing unnecessary scrolling when the search bar is hidden
fix envrouterfeature . getroute ( ) to work with new env api
added null checks for ' cur ' and ' next ' in LineChartRenderer to prevent NullPointerExceptions during rendering
added a new action for reloading the page in the menu to enhance user experience by allowing users to refresh the page dynamically
changed log level from info to warn for certain log messages in SQLManager . java to improve visibility of certain log messages for better user experience
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with recent updates and security improvements
ambari - 18386 . ambari upgrade should fail if config type do not have select version ( dlysnichenko )
[ geos - 7042 ] load all geoserver extensions from a serviceloader instead of lookup them
added a finalize method to the HiveHBaseTableInputFormat class to ensure proper resource management and prevent potential memory leaks
added stopStatementExecutor ( ) method to JdbcConnector and modified HiveViewImpl to call this method to ensure proper termination of the statement executor to avoid potential memory leaks
updated feature settings in DocumentFactory , ComplexElementHandler , and XMLSAXHandlerFactory to improve clarity and ensure correct handling of external DTD files
updated JdbStopThreadidTest to use OutputAnalyzer for checking application exit code to improve clarity and ensure proper handling of application exit conditions
added a method ` getType ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enable retrieval of content type from URIs that implement the ContentProvider interface
fix ( sql ) : fix thread safety issue in expressionthreadpoolexecutor
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure compatibility with the new system configuration
replaced ` addCaptureListener ` with ` addListener ` to buttonTable to improve listener management for improved event handling
[ grid ] set default batch size to cpu core count in newsessionqueue
[ flink - 1770 ] [ runtime ] log the original error when fail to establish resource manager connection .
fix issue with lambdarewriter and lambdaresponsetest method invocation when class file be not find
updated error message in the IllegalArgumentException for min and max to ensure it does not exceed the specified min range
improve logging and error handle when there be no tracker
added new interfaces Cursor and Database , along with a Row class for managing database operations to enhance database management capabilities and support direct database interactions in the application
rename various assertion classes in the project to improve clarity and consistency in naming conventions
# 239 - enh : add setbeanid ( object , object id ) to ebeanserver
replaced hardcoded string " tools / xslt / add - menu - to - site - descriptor . xsl " with dynamic retrieval from the xmlFileTemplater to improve flexibility by allowing dynamic configuration of the XSLT file descriptor
replaced the existing requestMatcher instantiation with a new method using an ArrayList to populate the request matchers to improve flexibility by allowing multiple request matchers to be added
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing of ContactResource instances
move getrequest and getresponse to abstractprocessor from ajp and http11 processor
adjust some log message to reflect that we can still be able to read the persistable
reset mock control in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper resource management and assert operations during test teardown
updated import statements and class references in SyntaxTests . java to ensure consistent usage of LambdasWithInterfaces and maintain code formatting
refactor connection handling code in ConnectionModel and ModeledConnection classes to improve maintainability and readability of the code
tika - 3746 -- remove usage of temporary resource from parserdecorator
extend minecraft security check to work around a spigot issue
changed variable declarations to use semicolons in multiple classes to improve code readability and maintainability
updated parameter key from " swap " to " rename " in TestCoreAdminApis . java and modified CoreApiMapping . java to include a mapping for renaming to ensure consistency in parameter naming and improve functionality for renaming operations
added a test for JSX comment handling and refactored conditional checks for jsx assignment to improve parsing logic and ensure correct handling of jsx comment sequences
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording during test case for better debugging
refactor BuildEndToEndTest and CxxEndToEndTest to improve error handling and environment setup to ensure clearer feedback on missing Buck configuration and enhance test reliability
added memory management checks for the physical memory in TestStringBufferAndBuilderGrowth . java to ensure that the test executes only when sufficient disk space is available
doc : update custom converter doc to use conversionservice bean
added a success flag to HiveMetaStoreClient . java to enable successful operation in the HiveMetaStoreClient
updated the comparison of " * " in ResourceReferenceInfo . java and modified the constructor in Dstu2BundleFactoryTest . java to ensure proper string comparison for better handling of string inputs
added support for handling " amp . twimg . com / v / v / " in tweet conditions to ensure that multiple media files are processed in bulk processing
deprecate AreaReference . java to indicate that this class should no longer be used in favor of a new implementation
refactor ElementType and Target classes to improve code organization and readability
updated assertions and reference kind handling in MemberName . java to improve code clarity and ensure correct behavior for method handles
updated the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization to the ` runChange ` method to enable proper synchronization when accessing the submit key updates
fix a bug introduce by the introduction of left click .
camel - 2709 : fixed bean expression to be able to use bean static method from spring .
fix : no @ see tag in core , broker and broker - example ( # 2069 )
clean up code style issue , suppress unchecked warning in agentrunnertest
o added and removed method implementations for generating descriptions in various Java classes to clarify the functionality of the Maven project properties for better understanding
refactor face addition logic to use direct assignment for better clarity and efficiency to improve code readability and maintainability by reducing redundancy in how faces are added
refactor ProcessEngine class to improve code readability to enhance maintainability and simplify future development
fixed an oom issue with lock . lock and lock . unlock ( ) in several files
added support for " mavenPackaging " parameter in the methods of PrintMavenAsCycloneDxBom class to enhance the flexibility of dependency management for enhanced compatibility
replaced back ( ) with back ( evt . getComponent ( ) ) to ensure the correct component is used during the back navigation
make check for ssl cert be always enable . patch by jbellis ; review by jbellis for cassandra - 616
updated method signatures to include wildcard generics for ObjectArraySubject and related classes to improve type safety and clarity in handling nullable arrays
replaced calls to NutchConf with getConf in multiple classes to improve consistency and reduce potential errors from accessing NutchConf
bug fix on displayed board ( race condition between sheet )
simonstewart : add a getsessionid method to the remote webdriver to facilitate access to the session id .
added null checks before setting time interval for nodes and edges in ImportContainerImpl . java and modified test cases in ImporterGEXF2Test . java to ensure robust handling of null time interval values and validate expected behavior in tests
updated command - line parameters for server port in MockServerContainer . java to ensure proper logging configuration for the server
updated error logging to include the exception message to improve error reporting by including the exception details
add javadoc and change to crawlmetadata to not break build
ignore broken integration test ( # 4 )
( chore ) camel - base - engine : use file separator when check for camel - dummy .
added alternativepath ( ) method to expectnewdemo that return a fileinputstream instead of a fileinputstream
fix log - with - date & log - with - date tooling ( # 418 )
added a protectionDomain parameter to the BufferAlignmentAgent lambda expression to enhance security by allowing access control during buffer alignment
added dispose method to the WaterRipples class to ensure proper resource management and prevent memory leaks
add a configuration option to disable unsafe external table operations in Hive to improve performance by reducing unnecessary operations on external tables
updated the description of the Authorization header to clarify that the authorization requirement is no longer required for requesting public keys
modified wallpaper offset settings in Workspace . java to set the vertical offset to zero to improve the aesthetic placement of the wallpaper during scrolling
updated return value in SybaseASADatabase to true and modified SQL query generation logic in SequenceSnapshotGenerator to ensure correct behavior for SybaseASADatabase instances and enhance sequence retrieval accuracy
nifi - 12742 : fix bug in putsql where commit / rollback be call twice on dbcp
added checks to create parent directories if it doesn ' t exist in SnapPuller . java and created corresponding assertions in TestReplicationHandler . java to ensure that the directory exists for better error handling and verification during replication
updated the AppTarget ID format in AppEventProducer . java to align with the intended identifier format for the launcher event
[ java ] pass the output buffer to the messageframer to allow for reuse .
removed redundant parameters from multiple method signatures in OAuth2Login and OAuth2AuthorizationRequestRedirectFilter to simplify method signature and improve code readability
updated descriptions and logic in GenericUDFStringToMap . java to enhance clarity on parsing and delimiter handling to improve user understanding of the code and ensure correct handling of delimiters
updated PlainFormatter to truncate the time interval to milliseconds instead of a hardcoded value to improve precision of time representation by truncating the duration to milliseconds
updated the timeout duration from 1000ms to 3000ms and refactored the close method to improve resource management and ensure proper handling of thread closure
hhh - 15744 - refactor privatelookupin handling to use reflection directly
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
corrected a typo in the debug log message for clarity to ensure accurate logging of event per file
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored to avoid frequent failures caused by insufficient sample results
updated the exception message for rows and columns in GridLayout . java to clarify that zero is allowed for better error handling
slightly faster pmd formatting , no functional change
added functionality to sort BoundSheetRecords by their position in XLS2CSVmra . java to improve the ordering of records in CSV output
refactor average impulse calculation to use separate variables for start and end values to improve code readability and maintainability
niftyjmedisplay : fix npe when create jme with non - default inputmanager
open - issue batch - 1369 : check for non - zero offset when set hashcode field
remove deprecate block . getsh ( ) ( # 4554 )
[ flink - 23454 ] [ yarn ] set kerberos authentication for kerberos when run in yarn mode
added an option for an empty word options in the LineReader and modified matchers in LineReaderImpl to enhance text matching functionality based on user input
updated the pushViewReplicaUpdates method to include a writeCommitLog parameter to ensure correct handling of replica updates during write operations
# 2193 add option to disable auto - open web mode ( # 2193 )
added a test method for batching a Board in JoinedTableTest . java to validate the behavior of JoinedTable with batching configurations
added handling for EntityExistsException in JpaPersistenceService to improve error logging clarity during item persistence failures
removed the deprecated format method from CucumberOptions and marked it as deprecated to indicate that the format option should no longer be used
removed the save ( ) method from the PMS class to optimize resource management by eliminating unnecessary saving operations
simplified the back key handling in the ExtendedEditText class to improve code readability and maintainability
refactor capacity calculation in AbstractStringBuilder and add a new Capacity class for testing to improve capacity handling logic and ensure proper functionality of StringBuilder methods
replace goHome ( ) with onNoteSaved ( noteTmp ) in DetailFragment . java to improve note saving handling functionality
[ github - 150 ] add support for xwpf ' s endnote relation xwpf
updated CasAuthenticationTransactionTransactionEvent to include clientInfo parameter to enhance event details for better context in authentication transactions
added a test method to retrieve and print the version in BridjOGRDataStoreTest . java to ensure the version retrieval function operates correctly and handles potential null values gracefully
added a new file ` Lifecycle . java ` to implement network error handling with UI components to enhance user experience by improving network management and error logging in the application
fixed download of file with no content - type and some other useful error message
removed unused imports and adjusted variable references in BodyTubeShapes . java and RocketFigure . java to improve code clarity and maintainability
fix to jogl canvas and surface scale ( bug # 11932 )
auto - select online for create project ( # 697 )
replaced the use of ` PackedInts ` with a direct write of values in ` DiskDocValuesConsumer . java ` to simplify the code and improve performance by reducing redundant calculations
camel - 7205 : camel - core - optimize rout engine to reduce stack frame in use during rout . work in progress .
removed unnecessary data list handling from GoAwayTest . java to simplify the code and improve readability
added support for fluent property accessors in ReflectionUtils and created a new FluentSetterBean class to enhance bean introspection capabilities and ensure proper handling of fluent properties
updated import statements and changed return type of post methods in BlockingHttpEndpoint and HttpEndpoint to HttpResponse to improve code clarity and ensure proper handling of HTTP responses
fixed test in file sortby ( # 2418 )
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity by utilizing the getter method for the last appeared task ID
new setting for mword image scaling ( issue # 239 )
modified the column generation in TSServiceImpl . java to include aggregate function name if available to enhance functionality by allowing users to specify aggregate function names when available
replaced LuceneTestCase with AbstractNestedTest and added cleanup method to improve compatibility with JUnit ' s testing framework
added functionality to set the xCapEnableBox selection based on the registration state to ensure the user reflects the xcap enable / server URI dynamically
ww - 3843 add exception handle option to dispatcher , and use it if devmode be true
added a stopEditing method to multiple platform - specific implementation to enable proper handling of text input changes
nifi - 10971 : fix control rate processor when no group be set on flow file
updated the showDialog method to handle a new component and adjusted related conditions to improve the user experience by ensuring the dialog only opens when a new component is present
added error handling to annotation and fix synchronization issue
added a condition in HTMLDataFlavorTest to check for Windows OS before executing the test to ensure the test is only run on Microsoft Windows , clarifying that it is considered passed on other operating systems
added SQL _ SERVER _ SNAPSHOT configuration to TransactionIsolationLevel . java to enable snapshot logging for the transaction transaction
replace the method of adding a new record with a retry mechanism using offer to improve reliability in handling recids during concurrent operations
use java . util . zip . jarfile instead of jrecompat
added a null check for the command class before creating a new RegisteredServiceImpl instance to ensure that the command class is properly initialized before service processing
default to ignore disk failure instead of best _ effort . patch by jbellis
removed public access modifier from method declarations in RipperInterface and RipStatusHandler classes to enhance encapsulation by restricting method visibility
peerdiscoveryagent : filter from ip address that be not ipv6
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the code by eliminating unused method
updated import statements and modified partition assignment method to include ClusterDataCache to improve data caching efficiency in partition assignment
[ grid ] remove the deletecontainer feature from the driver . this feature be remove by containerconfig .
simonstewart : make the selenium command parsing more robust to handle pipe - separated command
add retry on gc test ( # 2181 )
update schema ref references to use Components . COMPONENTS _ SCHEMAS _ REF to ensure consistency in schema handling across the application
replaced the deleted field handling with a JSON utility method for better encapsulation to enhance data encapsulation and improve readability of deleted event data
added a check for the GOP value matching in FormatConfiguration . java and updated related imports and methods in LibMediaInfoParser . java to ensure proper handling of GOP format settings and improve code organization
added a new file TestProfileReturnTypePrinting . java with performance testing methods to evaluate the return type printing performance of different class instances
added synchronization to the version info retrieval in ParseConfigUtils . java to ensure thread safety when accessing configuration properties
added acquiring and releasing of columns segment operator in the MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and prevent potential memory leaks
[ java ] re - enable the firefox test that be pass now
updated method signatures and added @ return annotations in HasAndroidDeviceDetails . java to improve clarity and ensure accurate representation of display density and display properties
do n ' t store dead bug in projectstats , sortedbugcollection and filter
bugfix # 20921 - disable shadow for gtk laf
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code and improve readability
added logic to return current time if the reminder is empty and a period is not present in the future to ensure that the system returns a valid time representation for scheduled actions without a period
replaced ` uploadButton ` with a ` menu _ upload _ single ` item for better encapsulation to improve code organization and maintainability by using a centralized menu structure
refactor MessageExpression - related classes and tests for consistency to improve code maintainability and readability
added InputStream loading functionality to MeXBTExchange and RippleExchange classes to enable loading of exchange metadata using InputStream for improved data handling
added a custom WritableSerializer for JSON serialization of Hadoop Writable types in CrawlDbReader . java to enable handling of Writable types during JSON serialization in the crawling process
remove test dependency for catalina - connector .
camel - 15836 - camel - mdns : make it possible to configure service and service pid for mdns discovery .
add null check for messageitem to avoid crash .
modified ForkJoinPool initialization in TestBPIndexReorderer . java to utilize a ForkJoinWorkerThread parameter to improve thread handling during fork join operations
removed assertions to check for dependencies of DATANODE and NAMENODE in RoleCommandOrderTest to ensure expected behavior when dependencies are not present
added methods to restore local information from table information and modified the writeObject method in PartInfo . java to ensure local information is restored correctly after table information is present
formatted if statements for consistency in JvmUtils , LikeCondition , and AbstractOperationGenerator to improve code readability and maintainability
added transformations for rendering of the logo in BitmapFontTest . java to ensure proper rendering of the logo in the rendering stage
[ flink - 18317 ] [ python ] ignore python udf when create window aggregate
fix # 889 - remove the need to send a status change event to the server
only list unreachable node and other bumper once we discover them
apps - 4889 do n ' t change variable in multi - threaded form for polynomial
updated content type handling in FormAuthenticator and SavedRequest classes to ensure the correct content type is set during authentication and request processing
renamed variables and updated their initialization logic for better clarity and consistency to improve code readability and ensure proper initialization of display variables
remove todos about not need ' incubator ' visibility
replace synchronization mechanism with read and write locking mechanisms in EnvironmentImpl . java to improve performance and prevent potential deadlocks in multi - threaded environments
added a test for reading an identity provider in a specific zone using Zones token to ensure that the identity provider functionality works correctly for different identity zones
replaced the job with an ExpireJob in ObjectTypeNode and added null check for timestamp in PointInTimeTrigger to enhance job handling and prevent potential null pointer exceptions
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ rip - 10 ] announce heartbeat to all topic when rebalance be complete
chore : add detection of debug create directory ( # 11423 )
add a disabled test for ensuring stable state when there is a slow follower to improve system stability
change default label pattern to [ auth ] [ year ] ( # 3063 )
updated dependency handling in DBinaryDescription and DLibraryDescription to use CxxPlatforms for parsing time dependencies to improve code clarity and maintainability by consolidating platform - specific dependency management
[ scb - 903 ] remove the initialization flag from google cloud api when the service be deinitialized
camel - 6854 : fixed file / ftp consumer do n ' t work when use dynamic file name . thanks to stephan siano for the patch .
added a new configuration option for reopening readers in SolrConfig and updated the condition in SolrCore to allow users to opt - in to reopen the reader when reopening the index
remember dialect version in mapwriter by default
added methods to retrieve current date and timestamp in the Update class to improve functionality for handling multiple fields in MongoDB updates
added a new method ` dup ` in ` ResultInfo ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest ` to enhance type handling and ensure correct context usage for method references
refactored the condition classes by replacing an anonymous inner class with an interface and simplified the condition implementation to improve code readability and reduce boilerplate code
replaced TermQuery with ConstantScoreQuery for search results to improve search performance by using a more efficient constant score query
removed several unused imports related to Java ' s invoke package from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability by eliminating unnecessary dependencies
add a method to provide a shared preferences for direct nearby uploads to enhance flexibility in managing uploads based on user preferences
added support for SYSIBM mode with Derby database to enhance compatibility checks in database configurations
updated logging statements and improved formatting in TraceGatewayEnvironmentPostProcessor . java and SamplerAutoConfiguration . java to enhance code readability and ensure consistent logging style across the application
bug 59721 : get last pid from custom property file when add a new file to poi
fix for # 420 : ` ` 0.0 ' ' should be ` ` 0.0 ' '
removed unused imports and modified method implementations in CliDriver and SessionState classes to streamline code and enhance clarity by replacing magic numbers with UUIDs
refactor MockRestAdapter to use reactive programming with reactive programming to improve handling of asynchronous operations and error responses
updated the method signature of ` selectByRuleIdSet ` to accept a list of ` List < String > ` instead of a list to improve flexibility and performance when selecting rules by rule ID sets
added a method to add exit descriptions and updated existing code to use it to improve exit status handling by providing more context in exception messages
fix the maxecraft maxecraft behaviour with more than one player .
rename ` columnFamily ` variable to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity and consistency in naming conventions
updated range length validation in PlotConfiguration . java to ensure consistency in range length comparisons
io port test device to sdk ( # 4082 )
replace params . getBuildTarget ( ) with nativeLinkable . getBuildTarget ( ) to ensure proper retrieval of the build target
rename parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by specifying that the parameter holds multiple values
removed assertion for null message assertion in AdvServiceTest to allow for more robust validation of service messages
refactor key handling in MappingMongoConverter for improved clarity and efficiency to simplify the logic for processing non - string keys during conversion
updated Timber logging statements for consistency in formatting to improve code readability and maintainability
camel - 3323 : fixed xml dsl to not use javatype a it in the schema documentation .
lucene - 6769 : fix npe in fuzzylikethisquery . extractterms when the field do n ' t exist
modified the method of writing applications links to use a boolean parameter for handling dynamic DTOs to improve flexibility in displaying applications based on the number of columns
consolidate the use of ` identifierservicefactory . getinstance ( ) ` to ` identifierservicefactory . getinstance ( ) ` .
update the method calls in VectorColumnAssignFactory to use the getLength ( ) method from bw to ensure accurate byte length is used for byte assignment
changed the method signature of getDisplayScript to return a String instead of being abstract to provide a default implementation that returns null for the method
andreastolftolfsen : fix build for firefox 2 and low
pdfbox - 4892 : preallocate arraylist size , a suggest by valerybokov
added synchronization and a check for empty activeInterfaces in NetworkConfigurationWatcher . java and improved null checks in NetworkManagerListenerImpl . java to ensure thread safety when no active interfaces are available and suppress unchecked warnings
fix bug # 45538 - correctly retrieve all embedded object from a workbook container
removed import of Shdr from ShaderNodeLoaderDelegate . java to eliminate unused dependency on shaders for cleaner code
replaced hostParams with roleParams in AmbariManagementControllerImpl . java to improve clarity and consistency in variable naming
add a hack to fix the bug in text selection
fix ( griffin ) : gl11 # pophdr be call in modelHourglass .
updated calendar handling in LiveTvGuideActivity and adjusted duration calculation in ProgramListAdapter to ensure accurate time tracking for better user experience
updated method invocation in MockGateway . java and added new test classes CommonParentTest . java and ChildA . java to improve method resolution and enhance test coverage for PowerMock functionality
add in miss library freetype and fontmanager . so ( to facilitate loading of different library )
refactored variable and expression handling in FunctionParser to improve clarity and maintainability to enhance code maintainability and simplify the logic for handling multiple variable functions
loop safepoint elimination : handle non - overflowing unsigned guard correctly .
change instanceof check to improve performance
added a new LocalizedString class and modified method arguments handling in various classes to improve string representation and enhance type argument resolution for method parameters
added a new property ` disableClasspathSearch ` in ` ServerConfig ` and modified the logic in ` DefaultContainer ` to enable control over classpath search behavior based on database configuration
updated fields to be final and replaced manual array copying with Arrays . copyOf for simplicity to improve immutability and performance of the arrays
update default retries value from 0 to 2 in multiple classes to improve flexibility in retry configuration by allowing retries
added settings handling and updated usage message in TexturePacker . java to improve settings management and provide user feedback
added AppCompatTextView for displaying image upload information in AchievementsFragment to enhance user interface by providing informative text for uploads
added mock and logger annotation processing rounds and updated related methods for consistency to ensure proper handling of annotation processing and maintain accurate state during tests
added CategoryInfo field and related getter and setter methods to enhance functionality by enabling retrieval of category information in query results
updated assertion to remove double quotes for username and password in AuthzAuthenticationRequest to enhance code readability and maintain consistency in argument order
added accessibility features to the TaskbarStashController to improve accessibility by managing timeout settings effectively
added a check for the ' ^ ' character in the GenericSignatureParser to ensure proper handling of the NoSuchElementException in signature parsing
updated access flags in ` ClassVisitorDriverFromElement . java ` and added tests for stubbing constructs in ` StubJarTest . java ` to ensure proper handling of static modifiers and verify functionality for stubbing enums
check for null input to avoid npe
add unit tests for the ` entrySet ` iterator method in ` MapInterfaceTest . java ` to ensure correct behavior of the iterator behavior under edge cases
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization of the TreeMap instance
[ flink - 22477 ] [ image ] fix creation time when create image in imagedata
theorem proving : fix change locus ( use f2m instead of grobcovc1 )
delete private and public key for account in account removal job to ensure that only unique and primary keys are removed for users
use keep - alive header value from config , close # 1421
do n ' t attempt to postjoin if there be no any interceptor and have lite member join
removed multiple inlineding - related processor additions for text and Java scripts to streamline the processing of inline text and CSS templates
removed spillEnabled parameter from multiple constructors and related classes to simplify the constructor and enforce better error handling for concurrent hash join operations
refactor environment variable retrieval to use Optional for better null safety to improve code reliability and maintainability by avoiding reflection
ww - 3988 update maven plugin to late version 2.1 . 0 .
added SerializableMode import to Mockito and modified PluginSwitch class formatting to enhance compatibility with the new Mockito API and improve code readability
hhh - 16626 allow fieldinjectionpoint to be set to null for @ dependencyinjection ( nested bean definition )
improve compatibility for db2 ( # 1592 )
replaced references to ` HiveConf ` with static final string constants in ` HiveConnection . java ` to improve code readability and maintainability by avoiding repetitive references to ` HiveConf `
added isCacheable method to GlobalOrdinalsWithScoreQuery class to enforce that caching is not necessary for the current context
8190263 : c2 compilation fail with ` ` too many open file ' ' exception
updated generation paths in JsFile and JsLibrary classes to differentiate between . jsfile and . jslib files for better clarity
added selection start and end methods to ShadowEditText to support setting and getting selection positions in ShadowEditText
[ grpc ] properly close grpc server ( # 8633 )
modified Jooby and Router classes to enhance route definition handling to ensure required path is required and improve code clarity
added a null check for the fst variable in FreeTextSuggester . java to ensure that a lookup operation is supported only once
replaced usage of line separator to ensure consistent newline formatting across different operating systems
added abi writer class loading and management functionality in JavacInMemoryStep . java to enhance robustness by ensuring the ABI writer class is loaded correctly and prevent runtime errors
suppress booleanmethodisalwaysinverted because it be not intend to be intend to fix build
fix shutdown bug : pullmesservice can not finish
refactor EnergyEndpointer class methods for better readability to improve maintainability and clarity of the code
refactor handling of displayed columns in ComponentPresetChooserDialog to improve clarity and maintainability of the logic for determining foreground indices
remove unused import , fix javadoc
camel - 18384 - camel - google -heets : fix switch / cases indentation see camel - 14540
added a default method for retrieving the exported header style in CxxLibraryDescription and modified related references to use this method to improve flexibility in handling exported header styles in the CxxPreprocessables framework
deleted the files mmm Constants . java and mmm DistanceUtils . java to remove unused code to streamline the project
replaced the use of a private pattern for parsing the disk delimiter with a direct substring method to simplify the code and improve readability by avoiding unnecessary splitting
[ gr - 37403 ] fix initialization of fallback class at run time .
[ scb - 2687 ] allow creation of inline role bind ( # 2696 )
added logging statements to UaaSessionCookieConfig for session cookie configuration to enhance visibility into session cookie configuration processes for easier debugging
updated file name generation to use the current day of the year instead of the log days to ensure accurate file name is processed based on the specific calendar offset
fix typo in condition check for terminate ( ) .
added error handling for invalid options in JavapTask and created a new T8033711 class for testing to improve robustness by throwing an appropriate exception when an invalid option is provided
replaced calls to ` collect ( toList ( ) ) ` with direct calls in multiple classes to simplify code and improve readability by eliminating redundant method calls
[ zeppelin - 5481 ] do n ' t log error when shut down in taskdriver
[ hotfix ] [ network ] [ network ] do n ' t claim the maximum required buffer per container for hybrid result partition
refactor code to use a dedicated method for status code validation to improve code readability and maintainability by centralizing status code logic
added a configuration option for using OpenGL20 and modified the application instantiation to use it to enable OpenGL20 rendering and ensure compatibility with the latest rendering features
remove unnecessary check for void return type in jimplebody . processmethod .
refactor OutputMacroExpander to use AddToRuleKey and simplify argument handling to enhance code readability and maintainability while ensuring correct command line argument processing
remove obsolete job from test ( # 2148 )
added additional checks for duplicate words in MergeWordsListTask . java to ensure that duplicate words are not processed multiple times in the build directory
[ # 7630 ] instructor : add template for response comment ( # 7631 )
removed unnecessary whitespace in code for better readability to improve code maintainability
added a new file TestEscapeThroughInvoke . java implementing a class for testing escape - by - invocation functionality to facilitate testing of escape operations in Java ' s context
replaced direct stream skipping and reading with IOUtils for improved readability to enhance code maintainability and reduce complexity in handling stream operations
added interceptor initialization for the connection pool and improved logging to enhance error handling and clarity during connection pool management
changed the catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching more types of exceptions
hbase - 18315 the incorrect block cache count and size be cause by remove duplicate block key in the lrublockcache ( chiaping tsai )
removed unnecessary check for zero task count in RecentsView . java to simplify code logic and improve readability
resolve : # 793 make rout table rout table unique ( # 763 )
added CoinmateStatic and CoinmateMetadataServiceRaw classes to handle Coinmate metadata retrieval to implement a structured way to retrieve and retrieve exchange metadata for the Coinmate service
camel - 7999 : fix validation of system path relative to basedir or project . basedir .
pdfbox - 4892 : keep object key of the same object when do a key replacement
add displaydata ( ) transform ( # 2127 )
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat ( ( Object ) null ) ` to improve readability and maintainability of assertion logic
disabled the JDK certificate path security property to ensure compatibility with cryptographic security standards
add some test for optiondata with different sub - commands and group restriction .
updated module - info . java files for mmm and ppp modules to ensure proper module dependencies and organization
added error handling for server connection errors in IOSImplementation . java to improve robustness by throwing IOException when an error occurs during connection attempts
corrected formatting of code in LauncherInstrumentation and LogEventChecker classes to improve code readability and ensure proper resource management
refactor exception handling and resource closing in FileSinkOperator . java to improve error logging and ensure proper resource management during closure
updated the return statement to include diagnostic information handling to enhance debugging by providing detailed diagnostic information during the task execution
replaced SemanticException with OptiqSemanticException for better error handling to improve error reporting for Optiq syntax issues
refactor DataSourceMonitorTests to improve test coverage to ensure more robust validation of database monitoring functionality
added a set to track loaded resource paths and modified the scanning logic to avoid scanning duplicate glue files
support test _ service ( ) without test _ service ( ) ( # 2206 )
fix route route return error . fix # 3737 ( # 3737 )
added ` natIp ` parameter to the ` EkeyConfiguration ` and improved logging with the ip address to enhance flexibility in handling unknown packets by providing an optional IP address
fix and document how to use arrowbufallocator in netty adapter
updated the CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added null and length checks in HttpConnection for parser state management to ensure valid HTTP header and body scenarios are handled correctly
replaced the subscription handling in ` MultiTimeout ` to utilize a parent subscription and introduced an AtomicLong for the requestedInitial reference to improve subscription management and ensure proper handling of asynchronous requests
fix leveledcompactionstrategy ' s handling of starved sstables
added a test annotation to the TestOrcTimezone1 class to ensure that the test methods are recognized as expected
make the timer condition more robust by detect string match in the cache
added error handling for JSON exceptions when retrieving segments map in PinotSegmentRestletResource . java and simplified object node handling in TraceContext . java and TraceContextTest . java to improve robustness by catching potential JSONProcessingException and providing clearer error messages
modified JTableRenderer to handle null columnClass cases and added a new test class for the JTable with icon rendering to ensure valid superclass handling and enhance test coverage for JTable functionality
modify command line argument handling in IDEService . java to check for existence of the SHELL before adding it to ensure that the correct shell is used when available
updated the delete parameter from 10 to 1 in DatabaseCleaningService . java to optimize the deletion process by reducing the number of subscriptions
replaced List with Set for testInstances and updated related method signatures to improve performance and maintainability of test instance collection
updated FieldMonitor class to enhance field tracking functionality to improve performance and accuracy of field monitoring
replaced the ` deleteFilesAfterClose ( ) ` method with ` transactionDisable ( ) ` in ` BTreeMapTest . java ` to ensure proper disabling of transactions during file mapping operations
modified the iterator initialization logic in SortedIntList and added a test case to ensure correct behavior of the iterator and validate its behavior through unit testing
unregister remote proxy from jmx when remote host be remove .
[ flink - 15486 ] [ test ] increase default writebuffer size to 64mb
updated the constructor call in the Style class to remove the unnecessary parameters to simplify the constructor call and improve readability
douniaberrada : remove xml encoding from facebook share request
[ samza ] remove the hack to set the json graph in the samza runner
audio and mute now launch with mouse button in order to support osx .
updated LoopRotateBadNodeBudget . java file to improve functionality and maintainability of the code
added a new method to convert object to Mongo type and updated related classes to utilize TypeInformation for type handling to enhance type conversion functionality and improve type safety during conversion operations
apps - 2184 display § 4 § 4 § 5 § 5 § 5 § 4 § 5 § 4 § 5 § 4 § 5 § 2 § 2 § 4 § 2 § 2 § 2 § 2 § 4 § 2 § 2 § 2 § 4 § 2 , but not only 2
simonstewart : make the copyright year of sendkeytoactivellexception easy to use
added a method to create a scaled BufferedImage instance and a method to transform it to a specified target dimensions to ensure the image dimensions do not exceed the allowed target dimensions for rendering
removed argument check and wrap store handling in DBMaker to improve argument processing and ensure proper engine context
fix for issue # 264 : shift state should not be update in some case
removed the detection of the detected activity in multiple classes to streamline the code and prepare for backward compatibility
updated import statements to switch from org . eclipse . jetty . websocket . extensions to org . eclipse . jetty . websocket . protocol . ExtensionConfig across multiple files to align with the new package structure for improved organization
added import statement for Buildable in AaptPackageResources . java to enable dependency management for buildable rules
added comments to clarify the handling of unused variables in the code to improve code readability and maintainability by reducing redundancy
updated error message to include response status code when throwing an IllegalStateException to provide more context about the invalid upgrade protocol
corrected the syntax for setting blockMode in P11Cipher . java to ensure proper functionality of blockMode initialization
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
removed redundant code for checking plot owner permissions in Merge . java to streamline code logic for better readability and maintainability
removed the deprecated getConversationID ( ) method from HttpContentResponse , HttpResponse , and Response classes to clean up the code and remove obsolete functionality
remove dependency on sun . speech . freetts and replace with java . net . url
refactor stripQuotes method to use PlanUtils for better code organization to improve maintainability and reduce duplication of string processing
refactor rendering context handling by replacing the static class in DLNAResource to improve rendering context management and streamline child rendering updates
added a repositories list to store resolution groups and remote artifact repositories to enhance functionality by associating resolution groups with remote artifact repositories
camel - 5403 fix the unit test error of camel - cxf
doc : fix javadoc warning in physicsclient
added JUnit Ignore annotation to SessionTest . java to temporarily disable frequently failing tests
added a new File object instantiation in the ZipFile class to enable file handling based on the provided name parameter
restore ` trytype # handleall ` a deprecate , it should be replace with ` try ` .
added test case for default constructor of channel and make channel . uid non - final .
added StackTraceUtils class and a method to log stack traces in GenericDAOImpl to enhance stack trace retrieval for better debugging and monitoring
temporarily remove test to get build to pass
added checks for argument length before unparsing in FunDefBase and ParenthesesFunDef classes to ensure proper handling of unparse lists when no arguments are provided
updated SQL query to include cluster name information and improved logging for configurations selected to enhance debugging capabilities by providing clearer context about cluster configurations
8057551 : add jdk . internal . misc . innocuousthread to java 11 suppresswarnings list
refactor JsonTreeReader to handle unexpected JsonElement types and improve exception messaging in JsonTreeReader to enhance code robustness and clarity when reading JSON elements
added a command option to ConsumeAllOptionsHandler and implemented handling of dashed arguments in external runner to improve command execution by allowing arguments to be passed when using internal runner
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to enhance functionality by allowing users to deduplicate Solr URLs
[ flink - 3395 ] [ table ] update streamsqlexample to make it compatible with flink planner
added a call to clear the database to ensure the database is clean before running tests
ogl : do n ' t show modeless when autoplay set to false .
added a check to ensure the parent file exists before proceeding to prevent potential errors when accessing the parent directory
add a method to write a document to a file and close it with a try - finally block to ensure that the document is closed properly to prevent memory leaks
add \ r \ n to debug line to make it easy to debug
replaced Box with BlockBox and added getter methods for root and dots per point to improve code modularity and facilitate access to the root component ' s properties
added generic user search query handling in LDAP authentication to enhance security and correctness of user authentication
added default ports functionality to the router and related classes to enable dynamic port handling for routes based on server and HTTP ports
[ snmp ] status update for thinghandler initialization ( # 12330 )
[ 4567 ] edit session : do not show instructor with only submit privileges to submit session
deprecate incompatibility between 5.0 . x and 6.0 . x
modified path handling logic in FileResolverImpl . java and added WarFileResolverTest . java to improve file path processing and enhance testing for war file resolutions
updated the formatting of newFlushedSize in DocumentsWriterPerThread . java to improve clarity by including docstores in the log output
fix : use correct block name in debug printout . close # 737
adjusted spacing in conditional statements for whitespace stripping to improve code readability and consistency
increase the allocation size for locks from 1000 to accommodate larger thread sizes
[ iotdb - 4052 ] fix no match in metadataindexnode when exactsearch be true ( # 7014 )
remove unused parameter to silence a warning
fix the layout of the navigation share tab on linux .
refactor BeiderMorseFilter to use a State for state management instead of offset attributes to improve state management and simplify the code for better readability
refactor Upnp audio sink and handler classes for improved organization to enhance maintainability and clarity of the codebase
fix mana burst blitting not work correctly
added a new test factory method ` toJson ` for JSON serialization and modified import statements in ` JsonTest . java ` to enhance test readability and ensure proper exception handling during JSON serialization
refactor MutableContextDataSupplier class for improved clarity to enhance maintainability and readability of the code
change exception handling from ` Exception ` to ` Throwable ` to improve error logging for loading log watchers
add https parameter to KubernetesMockServer constructor to enable HTTPS functionality for mock server setup
[ fix ] more on the edge case for defaultjavalithingprovider . convertandcallnode ( )
updated HTTP method handling to support both GET and OPTIONS requests to ensure proper HTTP status codes are returned for better reliability in requests
tika - 839 -- improve javadoc for tika - eval - app ' s decimalformat .
refactor error handling in ShowFileRequestHandler to return a response exception instead of throwing exceptions to improve HTTP response handling by providing more informative error messages
added try - catch blocks using reflection in ReflectorClassWriter and created a TryCatch class to handle exceptions to enhance exception handling capabilities and improve code modularity
added a clamp method to the Vector and Vector2 classes to enable clamping values based on specified min and max parameters
updated authentication handling in ChainedTokenGranter . java to ensure proper OAuth2 authentication setup based on client scope and user authentication
refactor BC _ instanceof implementation for improved readability to enhance code maintainability and clarity
replaced the setSaveFlags ( SAVE _ ALL ) with a logger instance to improve logging capabilities and maintain consistency in save preferences
updated UaaUrlUtilsTest to use JUnit 5 annotations and integrated PollutionPreventionExtension to enhance test structure and maintain compatibility with updated testing practices
hhh - 13553 - fix class cast exception in nativequery
added caching mechanism for font anti - aliasing information using WeakHashMap to improve performance by avoiding redundant calculations for previously checked fonts
switch to use intarraylist instead of bigarray in typedset . blockpositionbyhash .
simonstewart : update the driver to use the new version of ie
[ issue # 6407 ] add some comment about the meaning of ` ` vmware ' '
refactor instance creation logic to use a map for both circular and circular instances to improve code clarity and ensure correct order of instances are processed in the correct order
simplified the path retrieval process in BuildTargetToRawTargetNodeTransformer . java to improve code clarity and maintainability by using the base path of the build target
add null check to prevent exception with empty string .
fix : fix memory leak when close jabber connection .
updated the DEFAULT _ LOAD _ FACTOR constant value from 0. 67F to 0. 67 to ensure consistent initialization logic for improved performance
added methods to retrieve all data type physicalVariations and updated related classes to use them to improve functionality for handling data type declarations in the vectorization process
move j2se class to client package , so it can be reuse by other project .
modify the conditional logic for determining the overview actions in OverviewState . java to ensure correct handling of shelf removal from the overview actions
added import statement for javax . persistence . entity and annotated a entity in BaseActivityEventEntity . java to enable proper management of entities within the event system
added multiple tracing calls for each TouchInt section in NavBarSwipeInteractionHandler and TouchInteractionService classes to enhance debugging and traceability of touch interactions
added a new file InvalidOptions . java to handle command - line options to demonstrate handling of invalid Java options and improve error reporting
added a condition to log an error when the number of displays differs from the supported bounds to improve debugging and traceability of display state changes
move clientidandclientsecret from oauth20utils to oauth20utils to allow reuse
updated the _ unwrapServletException variable from false to true in ErrorPageErrorHandler and related classes to enable servlet exception handling by default
added default shortcut status management to the PackageUpdatedTask to ensure the application reflects the latest shortcut status
camel - 4370 : fixed seda endpoint unbounded queue to use a fixed size option even if it be 0 .
ticket # batchupdate { start , end } : before batch update , start and end will be set to input / output
added HttpClientConfiguration to ThirdEyeApplication to manage HTTP client configuration dynamically
added sorting functionality to JobInstanceFetchRequest and updated JpaJobPersistenceImpl to enhance job instance fetching capabilities by allowing sorting capabilities
updated the CryptoFacilitiesTradeService to utilize currency pair adaptation instead of throwing an exception to enhance functionality by allowing canceling of specific currency pairs in the open orders
ggb - 2229 hide the keyboard when press esc within av ( web )
[ gr - 35727 ] use native method handles to memmove .
refactor code formatting by adjusting whitespace and formatting in the BindLdapAuthenticationHandler . java file to improve code readability and maintainability
add setblockToolTip ( ) to mode toggle menu to prevent unwanted tooltip
updated DefaultDateTypeAdapter to accept a time style parameter and modified related methods to handle it to enhance flexibility in date formatting by allowing specification of time style
updated the format of playerSet from " UID : " to " ( " and removed unnecessary angle brackets to improve clarity and consistency of player ID representation
add a check for an empty list in List . java to ensure proper handling of an empty list case
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper command execution by throwing a wrapped exception
modified the ` getLikeExpression ` method to include a boolean parameter for handling LIKE expressions to enhance functionality to support regular expression evaluations
added start and stop methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to enable starting and stopping processes for improved functionality
modified the runChild method to set the locale and update listener handling to ensure consistent locale configurations during test execution
doc : fix html5 error in javadoc
refactor context handler initialization into a separate method called initContextHandler to improve code readability and maintainability by centralizing context handler logic
add osgi blueprint test case for camel - 9
updated assertions in TestExecuteStreamCommand to check for substring presence instead of substring to improve readability and ensure accurate validation of execution error message
refactor returnTypeSubstitutable method for improved clarity and efficiency to enhance type safety and maintainability by consolidating return type checks
added a throttle type enum and modified processing logic to handle specific throttle types to enhance flexibility in throttle processing for character processing
fixed an issue with blend apply on spritebatch .
updated annotations in Annotation and AnnotatedElement classes to improve code clarity and maintainability
added a new interface ` Model ` and modified the ` Sheet ` and ` Workbook ` classes to implement it to improve code structure and allow for model - related functionalities
camel - 10946 : camel - http - optimize out message filter to reduce redundancy in regular expression .
added a ` clearEntityManager ` boolean and corresponding getter and setter methods to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` to enable configuration of entities upon writing to the same entity manager
added null checks for shortcut information in multiple classes to enhance error handling and prevent potential null pointer exceptions
fix : use a true flag for twodimensionalcollectionqualifiedmap to avoid pollution of the data
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange being used in the application
added null checks for columnReaders and reader in OrcEncodedDataConsumer and ensured the child is not null before setting the buffer in EncodedTreeReaderFactory to avoid potential NullPointerExceptions and ensure safe resource management
avoid npe if no segment file find in directory ; add a test for openreader after delete
camel - 5279 - camel - hsearch : fix search by date type ( # 5278 )
fix for # 4467 : handle case where percentage value can not be interpret ( # 4467 )
updated limit validation logic in RangeInputStream and RangeReader classes to handle negative values to ensure proper handling of negative limit values
camel - 13313 : camel - jbang - add log for when route load from file system .
doc ( hl ) : fix some comment typo
refactor NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase to extend LuceneTestCase instead of TestCase to improve modularity and maintainability of the test framework
added a new StatefulMapper2 class and updated OutputHandler to set the next input for operator states to enhance functionality by ensuring the operator state updates correctly from the runtime context
shader tiling : add tile to shaders for line ( thanks maki ) , remove unneeded null check
remove dbexists logic , a now rely on the dependency injection for blockdb
added trimming to the matcher group item to ensure clean input handling
fix the apr socket . setasync ( false ) to align the test with the apr specification .
ticket # 3705 : on change the divider , the split pane should be off by default
added health check metrics and updated the health check method in ControllerMeter and PinotControllerHealthCheck to enhance health check accuracy and provide better error handling during service health checks
hide the shared AVatars view in LocalFileListAdapter to improve user interface by removing unnecessary display elements
[ desktop ] use source annotation instead of bundle
corrected the index comparison from " 1 > = " to " 1 < = " in multiple UDP ping classes to ensure valid range for handling input arguments
camel - 5042 : only execute command in debug log if log level be fine .
replaced CountDownLatch with assertWaitUntil until the tracer has finished to improve the reliability of span verification in EventBusTracingTestBase
replaced locale initialization with a default locale and refactored locale handling methods to improve locale management and simplify locale handling
fix # 2186 : change to use linkedhashset instead of hashset to preserve order
jbrules - 2982 : fix failing test due to a bug in what be already fix
introduced a new class ` OcspUnauthorized ` and modified the ` PKIXRevocationChecker ` to use it for unauthorized cases to improve handling of unauthorized OCSP responses in the security context
added serverState variable and modified control flow for server failure handling to ensure proper synchronization and error management during server state transitions
added support for tracking the number of open connections in the SourceCounter and AvroSource classes to enhance connection management and prevent application crashes due to timeout
add a builder method to interfacetype for set fielddefinitions ( # 2918 )
refactor the ` createDefaultJavaPackageFinder ` method to use a new method ` getSrcRoots ` for better usability to improve code readability and maintainability by encapsulating logic in a dedicated method
replaced the Writer initialization with PrintWriter in ScriptExecutable . java to improve output handling by utilizing PrintWriter for better debugging
update FileSourceTextLinesITCase to use TMP _ FOLDER for temporary file creation to ensure unique temporary files are generated for testing purposes
added import for DataTable and modified jrubyArgs handling to support JavaEmbedUtils to enhance support for DataTable in JRuby step definitions
updated visibility settings for the author view and modified API result handling for image nodes and nodes to improve code organization and enhance API functionality for fetching user images
[ doc ] added comment about the need for non - null annotation .
improve error message when formula can not be parse
added methods to get and set the socket address and modified the WebSocket connection logic to enhance flexibility in managing WebSocket connections and improve connection management
[ java ] deleting archive directory after close cluster medium driver to allow for cleanup of archive directory .
refactor width and height setting logic in WidgetGroup for clarity to improve code readability and maintainability by using a unified setSize method
changed the way sessionFixationAttribute is checked to use Boolean . valueOf to ensure proper conversion of Boolean to prevent potential null pointer exceptions
# 2323 - start single channel only when edgemode = true ( # 2334 )
kristianrosenvold : fix memory leak in chromedriver .
added HTTP method handling to ` TraceExchangeFilterFunction ` and modified ` ClientResponseWrapper ` constructor to include HTTP route to enhance error response processing with specific HTTP requests
precompactedrow should not force purgment of deleted row . patch by jbellis ; review by jbellis for cassandra - 1518
modified return values in ICC _ Profile and ColorConvertOp classes and added InvalidRenderIntentTest class to ensure correct handling of invalid render intents and improve code readability
[ # 7222 ] incorporate new contrib question type into contribution question ( # 7822 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ` with and without blocking stub to ensure proper synchronization of block production and production
[ flink - 14772 ] [ kafka ] suppress findbugs warn for kafkarecord
added support for PGConnection in PooledConnectionImpl and a corresponding test in BaseDataSourceTest to enable proper connection handling for PostgreSQL connections
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log levels from warn to info for missing token encryption secret property messages to provide clearer visibility for the absence of the token encryption secret property
remove deprecate ` hazelcast . getinstance ( ) ` ( # 15663 )
ambari - 21943 . after remove unlimited _ key _ jce requirement from host params , kerberos server action should not send topology - update event ( dlysnichenko )
refactor NamedListCodec to support ITERATOR and enhance iterator handling to improve type safety and support for iterable values in data processing
fix nullpointerexception in assignallpartitions ( ) when the state be null
added schema inclusion rule to ApiExample . java to enhance schema recognition capabilities for better user experience
increased the expected value in the assertion from 3.0 to 7.0 to ensure the test reflects the correct behavior of the mean and var values
attempt to fix a bug in geographical polygon creation with empty rigid polygon .
added methods to retrieve base name and dimension count from the ConstantPool class to improve functionality for better resource management in the ConstantPool class
provide a way to set debug evaluation output for slider formula evaluation
test : migrate test to junit 5 ( # 4520 )
updated ExoPlayerProfile instantiation by removing an unnecessary parameter and modified the condition in PlaybackController to ensure proper handling of live TV preference for live TV
added a return statement to the DynamicStyleBar class to prevent further processing when the method is not available
added SLF4J logging for database property setting and resetting in Utils . java to improve visibility into the dump state for better debugging and monitoring
refactor ReactiveAuthorizationManager . java to improve code structure to enhance maintainability and readability of authorization logic
updated condition to also promote strings to objects or boolean types in MethodEmitter to enhance flexibility in handling different object types within the application
rename llvmstackframenuller to llvmaddressnuller because it ' s deprecate
refactor multiple Java classes for improved organization and clarity to enhance maintainability and readability of the codebase
add test case for change to caffeinecachedefaultconfiguration
added a method to calculate the bounding box of vertices based on their attributes to improve object bounding calculations for better rendering options
added a configurable target hash function for computing hashes to enhance hash computation flexibility based on user requirements
updated the implementation of DefaultConfigurationProperties to improve configuration handling for better performance
added high light color settings and modified highlight arrow drawing logic in ListViewMultiChartActivity and BarChart to enhance visual appearance and ensure correct highlighting behavior of the chart
updated the handling of the temporary Pg path in the ClusterPlanRouter to ensure proper management of GPS paths in the application
camel - infinispan : disable remote producer it due to ttl issue
added file existence check in MavenArtifactFetcher and enhanced locking mechanism in MavenDependencyResolver to improve artifact retrieval reliability and prevent concurrent access issues during download operations
updated the fragment shader definition in SpriteBatch . java to include conditional compilation to ensure compatibility with OpenGL ES by properly defining floating - point variables
updated the server types in RSGroupInfo and related classes from SortedSet to Set to improve performance and simplify server retrieval logic
added a try - catch block to handle JSPPage loading and changed log level from warn to debug to improve error handling and decrease log verbosity for better troubleshooting
added a default version aware token filter in CustomAnalyzer and refactored tests in TestCustomAnalyzer to improve version handling and ensure consistent behavior during analysis
added a test for retrieving package archive information from the ` PackageInfo ` class to ensure that the application info correctly reads values from the ` PackageArchiveInfo `
replaced direct method invocation with MethodUtil . invoke for consistency and access control to enhance method access safety by utilizing ReflectUtil for package access checks
added new event imports and implemented a method to update progress listener to enhance functionality to track task and project configuration events
removed synchronization block from AndroidWebDriver . java to improve performance by reducing unnecessary synchronization
disable fail - fast initialization if initializationfailtimeout be 0 .
removed the timeout parameter from the getResult method and added an error method to simplify method signature and enhance error handling for HTTP requests
make isnatives field transient in jmethodidtable since it be not serializable .
update error message formatting for clarity in CEntryPointCallStubMethod . java to enhance readability of error messages
rename ruleenablehandler to ruleenablementactionhandler ( # 4102 )
refactor to remove ide warning and prepare for release .
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity on request details for better debugging
hhh - 14263 : fix upsert table table option formatting in kafka connector test
added a check for null repository model before accessing the registrant repository to improve error handling and provide clearer diagnostics when a registrant repository is missing
added support for parsing font names with additional file formats to enhance compatibility for various font formats in the application
update AnnotationMatcher to use Class . build for target type validation to improve accuracy of type matching by considering fully qualified class names
changed log level from " OFF " to " SEVERE " in Grep . java to indicate a failure state during execution
added a check for debug logging before logging messages in FaultTolerantChunkProcessor to improve performance by avoiding unnecessary string concatenation when debug logging is disabled
skip redundant list creation for excludes and include
added a conditional check to ensure default screen is moved to the default screen on home intent to improve user experience by preventing unnecessary screen navigation
set the maximum bitrate to 30 bits instead of 110 to improve performance by reducing bitrate limits
replaced the retrieval of unique options from options map with a direct iteration over options map to simplify code and improve performance by eliminating redundant options retrieval
trim whitespace from the description return value to ensure clean output by removing leading and trailing spaces
simplified the output filename assignment in XOMParserTest . java to improve readability by removing unnecessary concatenation
[ build ] remove redundant pid from processrunner error log
added methods to retrieve loaded music and sound data in MusicLoader and SoundLoader classes to improve access to loaded music and sound data for external use
removed unnecessary import statements and simplified the code to enhance code clarity and maintainability
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording during tests for better debugging and analysis
fixed # 189 memory feature button should be disable by default
update the spring app ' s preference for add account
smack - 355 remove redundant space in presence . type usage
updated StringBuilder initialization in ObjectInputStream to use an initial capacity based on utflen to improve memory efficiency by initializing StringBuilder with an appropriate capacity when possible
disable metric export statsd by default in our integration test
updated the InterruptedException class to improve handling of thread interruptions to enhance reliability and maintainability of the code
refactor ServiceTicket class to improve code readability to enhance maintainability and simplify future development
updated the SSL handling logic in ConnectionCheckOperation . java to improve connection success verification to ensure the correct SSL is used based on the URL format
check if targettype be a map before canconvert to string ( # 6129 )
ds - 4073 : fix error from incorrect status code when call delete collection rest endpoint
updated intent flags in PasscodeManager . java to ensure the activity recycling behavior is maintained
refactor : remove @ deprecation in favor of spoon . template . template
fix issue where you could n ' t launch widget because the widget in all apps be not load properly
added an import statement for JUnit ' s Ignore annotation and annotated the TestPackedInts class to temporarily disable the test due to LUCENE - 4488 issue
added a null check for the root before collecting components from the tabbed pane to prevent potential NullPointerExceptions when root is null
tagger : write confusion matrix in debug mode
bug 53737 - when use asyncwritetest ( ) , we do n ' t need to clear the last sample
added unit tests for Bluetooth connection and state management in ShadowBluetoothHeadsetTest . java to ensure correct behavior of Bluetooth headset operations for connected devices
camel - 13546 : camel - core - property bind : fix typo in property bind test
added " clone " method to objectMethods and introduced a finalized method for finalize to enhance method handling and prevent unnecessary lazy loading of properties
added null check for counters in IntegrationTestBigLinkedList . java to improve logging clarity regarding potential null pointer exceptions
reply with id greater than 10 to correctly identify instanceinfo error .
modified the ` setRegisteredServiceFilter ` method to use ` serviceId ` to ensure that the registered service matches the expected service ID
added a null check for the activity before running the UI thread to prevent potential NullPointerExceptions when accessing the activity
refactor logger variable names from uppercase to lowercase in HeartbeatMonitor , Scheduler , and GrpcHeartbeatSource classes to improve code consistency and adhere to Java naming conventions
added stringType property and its getter / setter methods to DatabaseAdaptor and modified visibility of certain fields in JDBCSessionDataStore to allow subclasses to set their string type for better flexibility in handling database queries
solr - 2387 : fix test for suggest by lgtm
hive - 22075 : allow thread name to be reset from the current session to match the log prefix ( rakshith chandraiah , review by teddy choi )
rename TaskletAdapter . java to improve clarity on the purpose of the class
drools - 2500 dmn fix dmn java type conversion ( # 2373 )
[ macos ] fix loading of miss texture on opengl 2.0
added a tooltip text to theCGCP checkbox in RocketPanel to improve user experience by providing context - sensitive help based on user preferences
replaced ` getTypes ( ) . add ( ) ` with ` addType ( ) ` in ` EnumFactory ` and ` InterfaceFactory ` , and added a test for declaration creation in ` TypeTest ` to ensure correct handling of declarations created by the factory and validate functionality through unit tests
add support for mnemonic text on the reload action ( # 5267 )
fix : name of function and variable be not consistent with label of spreadsheet ( out of memory )
changed BRIGHTNESS _ FACTOR from integer to double to improve precision in floating - point calculations
simplify parse of svm history by add context and date
modified the createUser method to include an admin parameter and added methods for listing users and user admins to enhance user management functionality within the HomekitAuthInfoImpl class
added null checks for indexedWriteMethod and modified conditions for method return types in Introspector and PropertyDescriptor classes to ensure proper handling of return types and improve code clarity
updated logging statements to use placeholders instead of string literals for better readability to improve code clarity and reduce unnecessary type conversions
renamed methods in Context and Request classes for consistency and clarity to improve code readability and maintainability
add miss method setcapabilitiesfrompongebuilder ( nbttagCompound ) in mixinitemstack
fix junit test due to wrong context in binding
added validation for specific contract types and updated contract creation logic to ensure proper contract creation and improve error handling for single transactions
added package - info . java files for multiple packages and modified module - info . java files to ensure package accessibility and organization across the application
removed synchronization from the add method in DocumentsWriterDeleteQueue to improve thread safety when adding nodes to the queue
updated JavadocTool to handle duplicate JavaFileObjects using a HashSet to improve efficiency by preventing unnecessary parsing of duplicate files
change the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to disable ipv6 handling by default for improved security
added parameter handling to the LoginServerTokenEndpointFilter to allow dynamic addition of user parameters during OAuth token processing
allow specific CPP language key to be recognized as a valid CPP language to ensure proper parsing and handling of specific language configurations
replaced the usage of ` ThreadPoolExecutor ` with a new class ` MoreExecutors ` for better encapsulation of thread execution handling
updated LoginService and FormAuthenticator classes to modify response headers and expire headers to enhance caching behavior and ensure proper caching behavior
added exception message to error logging for better debugging .
replaced AllHSSFUtilTests with TestAreaReference , TestRKUtil , and TestSheetReferences in HSSFTests . java and modified test handling in TestEmptyDocument . java to enhance test coverage and improve code readability by using specific test classes
remove @ version that use svn revision a it make useless difference when compare svn with github
added null check for the output before retrieving the class directory to avoid potential NullPointerExceptions when the output is null
added access controller settings for before and after resolution in Java2DRenderer to enhance the rendering process by ensuring the correct state management
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure compatibility issues related to JDK failures during rendering
modified variable and method visibility and introduced CPU time testing logic to improve thread CPU time validation and enhance error handling
added checks for empty comments in TabsAndIndentsVisitor to ensure that comments are not processed and improve whitespace handling logic
solr - 10495 : assert in testtriggerintegration test that check that the rate of trigger match an edge case .
case - insensitve check for changeset path and author ( fixes # 313 )
added a method ` getString ` to the ` ShadowBundle ` class that returns a default string value if the key is not found to improve functionality by allowing retrieval of string values from the map
updated date formatting and displayed time in TweetActivity . java to accommodate different locale preferences to enhance user experience by providing date and time representations for better user experience
nifi - 1193 when there be no active process session , return an empty list instead of null .
modified keyboard visibility and refactored focus request logic in DetailFragment . java to improve focus handling and ensure correct keyboard display
another attempt at fix the classpath issue on window for tools . jar # 746
make solve ( ) synchronize ( potential deadlock )
int - 714 , int - 714 : add javadoc to genericmessage and deprecate getmessage ( string ) method .
refactor SQL query to use a join method for better readability and maintainability to improve code clarity and reduce duplication in SQL queries
update file filtering logic in AquaFileChooserUI to ensure selected filter is valid to improve user experience by preventing invalid file filter selections
add some more space to ensure thread safety when write out hold stream
modify the method to return " TRUE " or " FALSE " for Boolean objects instead of using toString ( ) to ensure accurate representation of boolean values in ArrayPtg
fix ( sql ) : fix checkstyle violation in pgtokenizertest
updated Java2TypeScriptTranslator to improve handling of method and enclosing element types to ensure correct final variable translations during TypeScript transmissions
added support for sequence creation and updating columns in Postgres to enable proper handling of auto - increment columns in PostgreSQL
fix off - by - one bug in datainput . readutf8 _ slow byte
remove dimension vertical and horizontal pixel spacing test in imageparsertest
updated parent assignment in Component . java to ensure proper parent context is used for component resolution
refactor import statements for Column and Index in multiple Java files to improve code readability and maintainability
replaced calls to ENGINE _ finish with ENGINE _ free and added ENGINE _ init in NativeCryptoTest . java to ensure proper resource management and free process for native operations
added iteration event handling and updated iteration event methods across multiple classes to improve event firing consistency and ensure proper iteration behavior across different controller implementations
refactor resource management in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper release of HttpContent resources to prevent memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure that logs are properly deleted during recovery tests
added a conditional check for URLs containing " twitter : / / " in the BrowserActivity to launch an activity when the URL is a Twitter URL
fix flaky test : testserverserverresourcetest . testresourcetostoppedoutofboundsexception ( # 5029 )
javadoc update to reflect that listlabel be be allow
increase the log level for badClients . ribbon . MaxAutoRetries from 0 to 25 to improve test troubleshooting reliability by allowing more retries
added @ Override annotations in StandardTypeMapperComponent . java to ensure proper method overriding and improve code clarity
added support for fraction resource in ` PackageResourceLoader ` and its converter to handle it in resource parsing to enhance functionality for parsing fraction values in resource management
remove file confirmation check from BasicFrame . java to simplify file handling logic for better performance
added logic to retrieve and handle dimension values for groupId and artifactId in UpgradePluginVersion . java to ensure that dimension values are validated before proceeding with the newer dependency version calculation
hbase - 21970 namespace state manager should return quotaexceedexception when table be in namespace ( navis via ashutosh chauhan )
updated multiple Java files related to token handling and attribute management to improve code consistency and maintainability across token processing components
updated TestFuzzPreLoop . java file to improve testing coverage for pre - loop behavior
added a check to ensure the value of f0 is non - negative to prevent potential negative values to avoid potential errors
updated logging messages for clarity and added null checks for primary key columns to improve code readability and prevent potential NullPointerExceptions
refactor to simplify code and a bit more
added logic to allow an empty screen based on SharedPreferences to enhance user experience by preventing unwanted screens
added a warning log indicating that cucumber - needle has been deprecated to encourage the use of cucumber - cdi2 or cucumber - jakarta - cdi
replaced the use of TestActivityWithAnotherTheme with Resources . newTheme and updated theme handling logic to improve theme management and optimize attribute resolution
updated error messages in VerifyFast to use Arrays . toString ( ) for better readability to improve code clarity and maintainability by explicitly defining import statements and array representation
no effective change - remove old migration
modified conditions for handling proto properties and updated method handles for consistency to improve maintainability and correctness of prototype handling in the script object
updated the shuffle method to use a random integer for the readers to improve performance by reducing the number of concurrent read operations
updated displayName retrieval logic for user mentions in UsersAndGroupsSearchProvider . java to ensure correct display name is retrieved based on user credentials
updated path formatting in CookieRetrievingCookieGenerator to handle blank path cases to ensure consistent path formatting by preventing potential null pointer exceptions
remove unnecessary line breaks in attachmodel and JvmJvmstatModel files to streamline code for better readability and maintainability
use total backup count instead of backup count for dropall operation
pdfbox - 4892 : fix compareto so that it also compare by pageNumber if it be a not zero value
fix an issue with the uidropdown where it wouldn ' t highlight the widget when it lose the focus .
reformatted method definitions in SoundUtil . java for improved readability to enhance code maintainability by applying consistent formatting
refactor ApplePackageDescription to utilize a helper method for retrieving the Apple Cxx platform domain to improve code clarity and maintainability by centralizing platform retrieval logic
add more test to ensure it work on all platform
renamed the method ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and updated its usage in ` AbstractHTTP2ServerConnectionFactory ` to clarify that the method specifically accept a session instead of a connection error
fix incorrect comment from r1715839 bug 58365
8029876 : add a test to verify that logger . getlogger & logmanager . getlogmanager do n ' t throw npe when system . out = = null
added a data field and a method to PathSharingContext and modified access levels of sharedMap in ActionDirectory and ScriptedDecideRule classes to improve data management and consistency across the application
[ gr - 21192 ] modification to the test suite to support compilation during test .
added functionality to support custom next value " NEXT VALUE FOR " based on a regex pattern to enhance flexibility in value handling across the application
add information about a resource bundle that be not pre - cached . also warn the user about this feature .
added a threshold check for writing operations in BoundedLocalCache and modified the expiration handling logic to improve performance by reducing unnecessary operations when the write buffer size exceeds the allowed write limit
added a new parameter for Leverage _ Level in QuoineExchange and a new method to retrieve order direction in QuoineNewMarginOrderRequest to enable dynamic adjustment of margin order based on user - defined settings
added bound initialization for properties in ` PropertyDescriptor ` and created test class ` Test7192955 ` to ensure proper validation of property descriptors to prevent runtime errors
replace display mode configuration with a callback interface for handling display mode settings to improve flexibility in managing display mode settings and enhance error handling
fix issue with tabs . destroy ( ) not clear the button on the parent
fix linecell width calculation for empty line
corrected the hyphen in the end of the string in XSLTErrorResources _ it . java to ensure consistency and correctness in formatting
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain the insertion order of parameter values
replace string concatenation with string . format ( ) . format ( ) for good readability
refactor namespace retrieval to use a more direct method to improve code clarity and reduce unnecessary context retrieval
solr - 10792 : remove the option test . nestedjoins ( which be disable by default ) .
server : allow normal user to admin only ( # 4499 )
added caching for JavacFileManager and modified the constructor of CompletionTaskProcessor to accept a cursor parameter to improve caching efficiency and ensure correct processing of Java files
set the metastore URIS and SQL authorization manager in HiveConf to ensure proper configuration for SQL standard authorization
[ beam - 10041 ] use hamcrest assertion instead of junit in test ( # 10049 )
made outputHandler and textHandler nullable in MetadataRenderer and TextRenderer classes and added utility method to create a null handler to improve code safety by allowing nullable handlers without causing null pointer exceptions
[ flink - 21974 ] [ e2e ] fix ioexception when symbol size be long .
removed debug print statements for termFilter and otherTermFilter to clean up the output and improve code readability
removed the Reflection class and updated TypeConverters import statements to eliminate unused code to streamline the project by eliminating unnecessary dependencies
remove threadexecutor from threadlessexecutor ( # 1352 )
8144274 : java . time . datetimeformat . appendvalue incorrectly throw npe if the second argument be null
renamed CHUNK _ LENGTH to CHUNK _ LENGTH _ KB and introduced a new method to calculate chunk length in kb to improve code readability and maintainability by following a consistent naming convention
added a new class T7034495 with generic interfaces and logic to handle wildcard cases in type safety and demonstrate generic constraints
replaced do - while loops with while loops for checking null keys to improve code clarity and ensure that null keys are validated before processing
fix rule to distinguish between special and nav link
print micronaut version in console instead of ` ` version ' '
added assertions to validate the representation of Area3DPtg in the HSSFWorkbook to ensure that the name records correctly represent and retrieve their properties
modified the MindIconFactory to conditionally include the description when creating a MindIcon to ensure that the description is correctly formatted and appended to the name
modified the onHomeIntent method to accept an internalStateHandled parameter to enable more control over the handling of home intents based on the internal state
refactor the handling of the dependency tree preference in CxxBuckConfig . java to improve code readability and maintainability by reducing redundant calls
implemented a new method ` showDetails ` in multiple activities and updated the ` FileDetailFragment ` to accept an active tab parameter to enhance tab management functionality for better user experience in file operations
removed the ` $ ` prefix from function names in multiple Java files to simplify the function definitions and improve consistency across the codebase
improved memory management in MinimalEncoder and modified test assertions in HighLevelEncodeTestCase to ensure correct sizes are returned and validated for specific symbols during encoding
modified multiple string append operations to include a new delimiter " | - " for consistency to ensure proper formatting of header values in the type system
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure that data changes notify the adapter immediately
added a method to set the default WAL sync mode in ShadowSQLiteConnection to enable dynamic configuration of WAL sync behavior for SQLite
updated type checking logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to enhance type safety and ensure correct handling of nested arrays
camel - aws2 - s3 : remove unnecessary getters from aws2 - s3
updated test cases for corrupted stream sizes in ParserTest . java to ensure accurate testing of corrupted stream scenarios
include found - content in the exception message when the test fail
replace bailout with an exception when the graalinternalerror occur instead of a general bailout
mow - 714 only create the first image on desktop , too .
remove unnecessary import statements from SQLXML . java to improve code readability and maintainability
added a limit parameter to the getOrderBook method and modified its implementation in the YoBit market data service to allow users to specify a limit for the order book results
do n ' t depend on stressHierarchy ' s broken oome exception
nifi - 259 : ensure that we always have a maximum string length that be sufficient for dataflow . this close # 2379
check for empty key to avoid npe
rename ` FullIterator ` to ` WheelIterator ` and update related code to improve clarity and consistency in naming conventions
do n ' t swallow exception when generate the bug message
[ localchunkprovidersertest ] increase timeout to 10 second for test ( # 15437 )
changed the visibility of the uncomplete check lists menu item from true to false to disable the uncomplete check lists option for better user experience
refactor DefaultResultSetHandler to correctly resolve the result map and add a new Contract class with associated IDs and owners to improve result handling and ensure correct association of nested objects in the database
refactor conditional checks for handling null defaultHome and unregistering the receiver to improve null safety and correctly manage receiver registration
removed the import of VertxGen annotation and its usage in PumpImpl . java to eliminate unused code and improve maintainability
removed unnecessary type casting when calling openFile method in FileDetailFragment and OCFileListFragment to improve code readability and reduce redundancy
trim trailing spaces from configuration tokens and add unit tests to ensure correct handling of leading and trailing spaces in configuration attributes
refactor multiple classes to improve code organization to enhance maintainability and readability of the codebase
[ gr - 8307 ] fix loading of dynamic library in jdk9 or later .
modify the way relKind is set based on the string prefix to ensure appropriate identification of system table types based on the specific conditions
removed deprecated TIER _ ENTERPRISE _ PLUS _ VALUE and updated the proto enumeration paths in the Agent and AgentProto classes to maintain code clarity and align with current API standards
updated RQST field value from - 1 to 1 in HiveHiveMetastore . java and modified exception handling in HiveMetaStore . java to correct the indexing of rqst and improve error handling
added a new module - info . java file for the core module to define module dependencies and exports for better encapsulation and dependency management
modify the flushing state handling in SslConnection to manage both idle and wrapped output states to ensure proper management of output stream operations in the SSL connection
fix bug in log4j2 delegate factory when no exception occur
refactor code to introduce a boolean flag for the presence of the server VM to ensure tests accurately reflect the expected behavior on the server vm
refactor methods in ExecutableFindOperation , MongoOperations , ReactiveFindOperation , and ReactiveMongoOperations classes to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to the PGProperty class to ensure compatibility with the latest PostgreSQL SSL features
disabled test case that currently fail for now .
sort theme keys by their names in reverse order to improve the consistency of theme data handling
added OSVTerminal class and integrated it into the TerminalFactory for handling operating systems to enhance terminal functionality and support for OSV users
added additional file extension checks to the name validation to ensure compatibility with additional formats
replaced HashMap with TreeMap for combined vectors and adjusted code formatting for consistency to enhance the efficiency of vector management in the test execution process
added a condition to skip iteration when the list of values is not empty to ensure that the loop does not proceed without an empty list entry
updated WebSocketPolicy implementation with new configuration settings to improve flexibility and performance of WebSocket connections
updated variable types from ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` to instance variables in ` ShadowTelephonyManager ` and ` ShadowWifiManager ` to improve encapsulation and enable easier testing of permission states
allow a message resolution operation to work without the context
updated constructor handling to use subclass classes for TraceMethodVisitor and CheckClassAdapter to improve type safety and prevent ClassCastException at runtime
added logging for user authentication success and failure cases in UaaAuditService to improve debugging and traceability of user authentication process
added nullability check for temperature parameters in TadoZoneStateAdapter and modified temperature validation logic in AirConditioningZoneSettingsBuilder to enhance robustness by handling potential null values and ensure valid temperature ranges
do n ' t generate proxy definition for non - abstract class . fix # 2129
camel - 4388 : option to configure http proxy . thanks to jay sensharma for the patch .
update the maximum encoding version from 1.1 to 1.2 in TemplateDTO . java to ensure compatibility with new features and improvements in the latest encoding
added jdkSerialFilter method to System . java to enable serial filtering for the Java environment
camel - 15176 : better log message for when pool size be not more efficient
replaced the ` forceFinished ` method with a direct call to ` forceFinishScroller ` across multiple classes to simplify the method signature and improve code clarity
fix the issue that pinothelixresourcemanager do n ' t set realtime _ cluster _ path environment variable correctly ( # 7594 )
added error handling methods and updated the status management in ValidationReport and RefValidator classes to improve error reporting and provide clearer error messages during ref resolution
replaced inline QSB retrieval with a more structured approach using closestProfile to improve clarity and maintainability of display options based on device profiles
updated the createClassPath method to use URLDecoder for decoding the location to ensure proper handling of special characters in URLs
updated method annotations to use wildcard expressions for single quotes in TransformSteps . java to improve flexibility and maintainability of the code
add image null check to fix problem with empty image
replace usage of a hardcoded timeout value with a configurable timeout ms variable to improve code maintainability and readability by centralizing timeout logic
updated package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
[ flink - 23701 ] [ e2e ] set the docker image url in the environments
- fixed issue with system . gc ( ) on slow machine
refactor code in AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock files to improve code organization and maintainability
replaced ` createHardLink ` method with a new ` copyFile ` method to handle file copying to improve code organization and ensure proper directory structure during file copying operations
renamed ` appendToDescription ` methods to ` getDescription ` for consistency and clarity to improve code readability and maintainability by using a more descriptive method name
[ api ] improve the handling of long time input and device ( # 2638 )
modified the Autodetect class to check if an XML document is an instance of Xml . Document before processing to improve type safety and performance by avoiding unnecessary visit calls for XML documents
updated test classes to use JUnit4 for testing purposes to improve compatibility with Android JUnit4 testing framework
add new ParentGasLimitRule ( ) alongside existing ProofOfWorkRule ( ) in CommonConfig . java to support gas limit rules in the configuration
replaced the visibility of the setupData ( ) method with a static block and modified the setupData ( ) method across multiple test classes to enhance encapsulation and improve data setup functionality for testing
rename variable ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` to clarify the purpose of the parameter for running the transaction in the database
[ 3.0 triple ] fix tripleserverstream endless loop ( # 9969 )
[ flink - 33598 ] [ runtime ] remove redundant site url in configuration of failover strategy
added a new test method ` testIssue154 ( ) ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure that the SQL syntax is correctly handled and ordered based on modified time
updated Common . java files to improve code structure to enhance maintainability and readability of the code
updated the logging and event handling in Launchable . java to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ javadoc ] fix typo in streamexecdeduplicate javadoc
add warn log when send kafka message to topic
dataes - 35 - adapt to api change in spring data common .
make sure point be always set when set a point ( use default value )
added scroll handling logic and logging for swipe events in AskGestureEventsListener to enhance user interaction responsiveness and improve debugging capabilities
fixed an issue with the sort method in ngramestimator . compareto if the list first and the value be the same
update package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to align code structure with the new package structure for better organization
updated method calls to retrieve folder icon properties to ensure compatibility with the new object structure
replaced ` getServerSlogan ( ) ` method calls with ` getServerName ( ) ` method calls to improve clarity and consistency in handling server names
8191818 : c2 : move loop unroll predicate from c2 to c3
refactor SelectionHighlighter methods to improve comparison and hash code consistency to enhance performance and maintainability of the code
added a new ` StringResultConverter ` class and modified ` AsmRuntime ` and ` AsmUtil ` to implement a native result converter to enhance handling of string values and improve type safety for pointer operations
camel - 19751 : camel - core - do not run test on apache ci
modified condition to check if the console is connected to a single object to ensure correct behavior when waiting for a single object to be active
- fix bufferutils to limit to the capacity of the buffer in setinbuffer .
updated the assertion to check for a file separator instead of a hardcoded value to ensure compatibility with different operating systems ' path separators
updated OS detection from " linux " to " Windows " and added support for macOS pre - Catalina to ensure compatibility with macOS by adjusting platform compatibility
- replace lockfile with lockname to prevent expose invalid lock file in log
updated the method used to wait for a launcher object from " android . widget . TextView " to " apps _ view " to improve responsiveness of the UI when interacting with all apps
replaced ` Invocable . InvocationType ` with ` ClientDatagramEndPoint . this ` in method calls to streamline code and improve readability by reducing verbosity
replaced " oreder " with " order by " in GET _ STEP _ EXECUTIONS string to ensure consistent ordering of step execution data
changed the return value and updated button handling in LwjglInput . java to ensure proper button processing by ignoring unknown buttons
[ ds - 3952 ] add a test to make sure that the workflow reject the claimed task , which be the forbidden response
replaced all instances of ` logger ` with a standardized ` LOGGER ` in multiple classes to enhance code readability and maintain consistency across the codebase
fix ( token ) : fix expiration time comparison in ssoaccess tokenprovider # verifyaccess token
[ geos - 7042 ] graalvm test fail on macos because it do n ' t run locally
add mock test for new cdi behavior
refactor the order of conditional checks in the JFrame class regarding the default close operation to ensure that the security check occurs before validating the default close operation to maintain security protocols
fix potential npe when call mediadatabase . getconnectionifavailable ( ) , it may return null
refactor metricsContext access to use solrMetricsContext directly instead of directly accessing the metricsContext instance to improve code clarity and ensure consistent initialization of metrics context
refactor the file listing footer logic in OCFileListFragment . java to enhance clarity and maintainability of file list footer presentation
test : use iterable < key > instead of array < key >
updated the implementation of SourceVersion class to improve code clarity and maintainability
added a new test class ` ThreadFactoryTest ` to validate the thread factory functionality to ensure that the custom thread handling functions correctly within the Jetty framework
updated lockPeriod and expireTime calculations to use a dynamic lock mechanism based on maxDelegateLockPeriod to improve adaptability of lock period handling based on dynamic properties
added initialization of TicketModel in EditTicketPage to ensure a new TicketModel is used for ticket management
changed the feature flag for " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss functionality in predicted list
updated constructors in multiple assertion classes to accept a single generic type parameter to ensure proper type safety and prevent potential ClassCastException at runtime
added quote functionality to the menu item and updated related constants to enhance user experience by allowing quote to be easily displayed in the user interface
avoid start new thread if not need , to prevent deadlock
renamed ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and updated related checks to improve clarity regarding the purpose of the code and ensure the functionality aligns with direct playback support
added a conditional check for success before handling failure in ServerHTTP2StreamEndPoint to ensure that failures are only processed when a boolean result is met
updated German XSLT error message from " Stiller Modus " to " Silent - Modus " and French error message from " Le nombre d ' arguments ne peut pas ê tre n é gatif . " to " L ' arit ê tre n é gative . " to improve clarity and accuracy of the information presented to users
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety during concurrent operations
replaced ` Observer ` with ` Subscriber ` in multiple classes to improve type safety and handle subscriber unsubscribed states
changed the placement of the components . yml file initialization in the ComponentPresetManager class to ensure the components . yml file is created within the correct folder structure
hive - 23657 : allow user to specify table name in jdbc result set ( ashutosh chauhan via prasanth jayachandran )
relate to ticket : 173 -- for input type change , not that the first time this be re - added .
added validation for session validity and improved test coverage for session expiration to ensure that invalid sessions throw an appropriate exception when the last accessed time is not set
remove exceptionhelper because it be not use anymore
change initialization of jcex25519 domain to 255 to avoid extra password
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure consistent codec usage during document processing
[ hotfix ] log message when no header list in checkpointrangeadata
add use of oaeppadding to provide good support for sunjce ( relate to github # 1277 )
rename Platform . DARWIN _ AARCH64 to Platform . MACOS _ AARCH64 across multiple files to ensure consistency in architecture handling across the application
do not swallow security exception during source resolution , log a warning
modified the conditional check for the operating system in AbstractTest . java to ensure proper handling of UNIX OS in the return statement
update the default value of jersey _ admin _ is _ primary to true and fix the test that be fail
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory freeing functionality to improve memory management and prevent potential memory leaks
changed USE _ PIPELINE _ DOWNLOADER from false to true in FastSyncChainDownloader . java to enable the use of pipline downloader for improved performance
updated calendar offset setting in SimpleDateFormat . java and created a new test class Bug7130335 . java for date formatting to ensure accurate handling of date zones for accurate date manipulation
refactor variables in AllAppsView . java to use local definitions instead of accessing mRollo . mState directly to improve code readability and maintainability by reducing repetitive accesses to object properties
bug 11555 : fix the issue in listrouters api when ' listrouters ' parameter be empty
refactor StringBuffer methods for improved performance to enhance efficiency of string manipulation operations
[ drools - 7252 ] fix bug where empty rule be not show up in the ui ( # 418 )
added null check for listener before unsubscribing to prevent potential NullPointerExceptions when unsubscribing
added a new property for pretty printing in JoltTransformJSON and modified jsonString assignment based on its value to enhance flexibility in JSON processing by allowing the pretty print format to be applied when specified
make access to the array public in the instrumentBranchesphase .
updated error message to provide clearer context for missing resources to improve clarity in error reporting for better debugging
refactored tidy up the code to make it easy to reuse
refactor multiple Java classes related to event handling and notification management to improve code maintainability and enhance clarity in the implementation
added detailed parameter names and improved rollback handling in AmbariManagementControllerImpl . java to enhance error tracking and provide more context regarding upgrade suspension
simonstewart : after a code grant , the code be copyright the sfc and the selenium committers . start to update the copyright header
removed the declaration of fields from the writer to streamline the code by eliminating unnecessary variable declaration
added constructor to OAuthProperties for setting encryption and signing key sizes to ensure the encryption and signing properties are properly set with default values
hbase - 13815 introduce getcolumnfamilycount ( ) to avoid deprecation warning
refactor the alias check to use a lambda expression for better readability to improve code clarity and maintainability by reducing verbosity
updated multiple Java files for consistency in naming and functionality to enhance code clarity and maintainability
[ java ] have an idle strategy to be reset for service to help avoid leak resource .
updated the initialization of the writer variable in ChunkedWriter . java to ensure proper tracking of the current chunk ID during file writing
added a new file AbstractJobExecutor . java that implements the JobExecutor interface to provide a base class for job execution handling in Spring Batch
replaced the direct replay call with a variable assignment for better clarity to improve code readability and maintainability by storing the replay future in a variable
changed variable names from ` hugeStaticBase ` to ` staticBase ` for consistency to improve clarity and maintain uniform naming conventions
camel - 16193 : camel - consul - avoid connect to consul when discovery be not enable
replaced the use of ` Float . random ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` for hashSalt generation to ensure stable randomness and prevent collision issues during hashSalt generation
[ gr - 3448 ] allow failure to trace when runtime compilation fails .
update currentStart and baselineStart calculations to incorporate aggregationTimeBucketMillis to ensure accurate time calculations when aggregation occurs
refactor answer method and add abstract method handling in CallsRealMethods and CreatingMocksWithConstructorTest to enhance code clarity and ensure correct behavior of mock invocations with abstract methods
updated checkPackageAccess method to accept Class objects instead of fullName strings to enhance security by ensuring proper package access checks with appropriate security manager
updated ` ContextPathPluginTest ` to extend ` AbstractPluginData ` and added error configuration methods to enhance test capabilities and improve error handling during tests
refactor ContribTableModel to use a consistent variable name and font metrics for better readability to enhance code maintainability and clarity by standardizing font handling
added a new case for REQUEST _ HAS _ TIS in multiple classes to manage touch interaction request handling
removed unnecessary try - catch block and added a write access listener in ConnectAction . java to improve code readability and ensure event handling is managed correctly
change the type of the ` showRulesResult ` map from ` String ` to ` BuildTarget ` to improve type safety and ensure consistency in handling build targets
added multiple Java files for various classes with no content to establish a consistent structure for handling Java emulation
added handling for the ' HOME ' and ' END ' commands in the navigation logic to improve user experience by allowing users to navigate between home and end lines
removed synchronization around retrieving connected plots to simplify code and improve performance by eliminating unnecessary synchronization
refactor intent creation and sharing logic to use a chooser for app launch to enhance user experience by allowing direct selection of app activities directly
make roster constructor package - private . fixed typo .
add basicconstraints to trust anchor to avoid certpath issue .
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address a failure due to using wrong transform offsets
remove unnecessary check for field . multiValued ( ) in TrieDateField and TrieField classes to simplify code and improve readability by avoiding unnecessary method calls
removed the TaskbarStateHandler class and updated BaseQuickstepLauncher to remove its dependencies to streamline the code and eliminate unnecessary dependencies
added a new file ` ArrayLength . java ` for testing array length functionality to ensure that the ArrayLength class correctly returns zero - length arrays for array types
close hazelcast process on shutdown ( # 2594 )
replaced Singleton with @ ApplicationScoped and refactored save and save methods to utilize PostConstruct to improve dependency management and ensure proper initialization of settings
[ fix ] bug in safepoint . setnewvalue ( ) : 1 should always be < = 0
update thread name field type from char array to string to improve data type consistency and method usage for thread name retrieval
updated the default zk seed value from current time to a fixed value of 42 in Lucene90HnswGraphBuilder and HnswGraphBuilder to reduce the frequency of requests and improve responsiveness
fix for stroke ( ) issue with font2d ( bug # 1153 )
refactor dynamic star expansion logic into a separate method ` expandDynamicStar ` to improve code readability and maintainability by reducing duplication
added a method to find the interesting child of the Comment2000 class to generate a new Comment2000 representation for processing comment records
added import for Messages and set the HTTP status code to a warning message in HTTPServer . java to improve user feedback by providing clearer status codes for better debugging
use native event modifier to fix 2 bug
node cost : give phi node a chance to create phi node on aarch64 .
camel - as2 - fix npe when content - transfer - encoding be not set
updated Locale class for improved localization support to enhance application performance and maintainability
added a button to clear log information and implemented a method to clear log messages in ErrorConsoleController and LogMessages to improve user experience by clearing log data before processing
no actual code changes were made to the assignment of mRecentsAnimationController to improve code clarity and maintainability
updated imports and changed method signatures to use Set instead of Map for better null safety to enhance code reliability and maintainability by simplifying locale handling logic
updated connection pooling behavior and improved resource management in tests to enhance connection management and prevent potential memory leaks
[ grid ] adding opera driver to session
improve message when can not download a file
added new Lifx product definitions while updating an existing product definition to enhance the product product options and improve user experience with new features
added asynchronous request setup in OverseerCollectionProcessor and changed method calls in CollectionsHandler to use AddReplica to improve handling of asynchronous requests and enhance code clarity
refactor PostgresDatabase and its test to streamline primary key and file encoding handling to improve code readability and maintainability by reducing redundancy
updated LogPanel initialization to use the current repository for the head node to ensure the correct repository is used when displaying the log
* fixed issue where interbone wire would crash when a bone be far away .
added a method to destroy the browser component and updated the deinitialization logic to improve resource management and ensure proper cleanup of resources
added a wait for the active collection to readApiTestViolations to ensure that the test is executed before proceeding with operations
added conditions for processing screen terminal attributes and rounding logic to enhance the rendering of terminal attributes with better rounding
updated controller state checks in SoftResetAction . java to use controller state constants to improve code clarity and ensure consistent handling of controller states
add disable on - disc stream cache to texture pack reload
added an else clause to determine the parent folder for requests to ensure correct retrieval of the root folder based on the media renderer
cloudstack - 3583 : fix invalid javadoc and field name in networkofferingsvo .
refactor FileOutputStream initialization to include an overridden close method to ensure proper resource management and prevent potential memory leaks
added error handling for forbidden API responses in StandardGitHubRepository . java to provide user feedback when the request is too forbidden
log4j2 - 1343 add method getoriginal to messagefactory2adapter to allow copy the original messagefactory instance into another adapter
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest , DurationTest , and SizeTest classes to suppress BanSerializableRead warnings during tests
updated regex to allow up to 3 versions instead of 1 to accommodate the new version scheme
updated initial and dismiss delay settings in ExtractionModelFrame to improve user experience by providing more detailed toltips
refactor the target graph creation logic to use ` passInTargetsSet ` for improved clarity and functionality to enhance the handling of build targets by associating them with specific build targets
added a UTC time zone configuration and an assertion in the TimeTest class to ensure accurate representation of time zone data in tests
updated MediaSessionConnector . java file to improve session management functionality
use sslengine instead of jssefactory to avoid some warning when connect to nio .
updated the accuracy display string to use the current location ' s accuracy value directly to ensure accurate information is accurately displayed for the user
added a check for Futures enabled in BinanceExchange and modified BinanceAccountService and BinanceTradeService to handle these conditions to ensure that futures and trades are only processed when Futures are enabled , improving order handling
continue issue 519 [ admin : listinstructors -- > do not include instructor without course course ]
added connector . setAcceptQueueSize ( maxWorkerThreads ) to ThriftHttpCLIService . java to ensure proper queue size configuration for improved performance
replaced the method of obtaining the current class name with a constant for WatchService to improve code readability and maintainability by reducing repetitive method calls
http : / / issues . apache . org / jira / browse / amq - 3135 - fix inconsistency between ssl and http for camel - jms
replaced parseError method with validationError method in DrillSqlWorker . java and updated test methods in TestWindowFunctions . java to improve error handling and ensure consistency in exception handling
updated the calculation of duration to prevent zero for a really fast collection to improve performance by avoiding unnecessary assertion
fix nodewithjavadoc . getjavadoc ( ) always return empty optional .
added OS detection method and modified memory handling methods to improve cross - platform compatibility and enhance memory management functionality
added calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing events
hbase - 21043 hbasetable . getprocid ( ) should expose procid in a public interface ( stephen yuan jiang )
camel - 6819 fixed the issue of camel - 14126
replaced the way databaseChangeLog is written by using a list of maps to improve efficiency and clarity when writing database change logs
replaced ` println ( ) ` with ` print ( ' \ n ' ) ` for output formatting in ` SchemaPrinter . java ` to improve formatting of output messages for better readability
remove regeneration from schematichandler , since it be now always use
updated context retrieval from ` getContext ( ) ` to ` getActivity ( ) ` in ` HomeFragment . java ` to ensure compatibility with the current application context
added GenericGenerator annotation to various classes and updated the generation strategy to " native " to enable consistent generation behavior across different Hibernate environments
removed the country parameter from the getSystemTimeZoneID method and its usage to simplify the method signature and eliminate unnecessary complexity
updated BZip2Codec to include position and remaining parameters when writing uncompressed data to enhance data handling by associating uncompressed data with specific dimensions
move log setup from web to web
added a constant VALUE _ TYPE _ EMPTY and updated the creation method in Value . java to use it to improve type handling for empty values in the type system
replace ` = = ` with ` . equals ( ) ` in ` GroupManager . java ` to improve readability and avoid potential null pointer exceptions
rename Liquibase and LiquibaseDropAll classes for consistency to improve clarity and maintainability of the codebase
refactor SimplexNoise class to improve readability to enhance maintainability and ease of understanding
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated calls to it to provide a flexible instantiation method for creating new instances of ` TargetGraph `
avoid print compacted row size multiple time . patch by jbellis ; review by jbellis for cassandra - 1472
added ArtifactVersionAdapter to JSON serialization in MetadataCollection and modified fields in ModMetadata to be transient to enhance handling of ArtifactVersion references during JSON serialization and prevent serialization issues
added state management for the last element in the ` sobj ` variable to ensure proper handling of the last element in the list
update parent id instead of local path when upload a file .
added a new file UTF8ReaderBug . java to test UTF - 8 character encoding to ensure proper handling of supplementary characters in XML parsing
unit test inspire by user forum question
added depth attribute to multiple ticker methods and updated corresponding assertions to account for new depth settings in the Binance integration tests
added a ` resetAllocation ( ) ` method to the ` Wrapper ` class and called it in ` SimpleParallelizer ` to reset the allocation state for better resource management
removed import of AssertTree from AmbariManagementControllerTest . java to eliminate unused imports and improve code clarity
synchronized the retrieval of system properties in mmm Agent . java and added a new AgentCMETest . java file to ensure thread safety when accessing system properties
o tweaked source to compensate for bug in xml dsl
refactor AbstractDoubleArrayAssert in the mmm and ppp files to improve code readability and maintainability
add boundary check to legend , do n ' t account for odd entry space when calculate width / height
added testDelay and testAbort methods to CodeFirstSpringmvcIntf and TestResponse classes to enhance test coverage for delay and abort handling in Spring MVC
replaced ` get ` method with ` getValues ` method and added a loop for retrieving values to improve data retrieval efficiency and ensure term frequency is processed correctly
replaced CxxLink rule require method with BuildTargetSourcePath instantiation to simplify code by using a more direct method for obtaining the source path
add disable message to the console for beta and release build .
replaced Collection with List for filePaths in MediaFolder . java and added numberOfFiles variable to enhance type specificity and clarity in the code structure
removed the " - b " argument from AidlStep and updated format strings in GenAidlTest to streamline argument handling and ensure consistent formatting
do n ' t delete java . sql . statement when compare obligation
removed a TODO comment in FakeHttpLayer . java to address the test failure in future development
replaced ` handleError ` method with ` revokeLeadership ` in ` EmbeddedLeaderService . java ` to ensure the leader is properly revoke before handling errors
compositediscoveryclient : replace flowable stream with single array ( # 3630 )
replaced ` applySystemConfiguration ` method calls with ` applyQualifiers ` method calls across multiple files to unify method naming for better clarity and consistency
[ flink - 18315 ] [ doc ] improve option description of jobmanager . configuration option ' jobmanager . retries . num '
update methods to handle RecyclerView visibility for widgets and search results to improve code clarity and ensure widgets are displayed correctly based on adapter type
fix : check if wstxoutputfactory be find before use it
refactor test setup in AuditAliasCommandIntegrationTest for improved clarity and structure to enhance maintainability and readability of the test code
removed debug logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up unnecessary logs and improve code clarity
camel - 16400 : camel - cxf : disabled test that can be fix in junit5
added error handling for the update method in CachedStore . java to improve robustness by logging exceptions during the update process
refactor ` ChainingAuditPrincipalIdProvider ` to use required arguments constructor and modify provider handling to improve flexibility and maintainability of the provider management logic
bug 56711 : extra background color check when replace a palette with a hardcoded color
updated ZonedDateTimeFormatterBenchmark . java for improved functionality to enhance test coverage and maintainability of ZonedDateTimeFormatterBenchmark
added a method to determine if an update should buffer based on the state and updated the conditionals accordingly to improve the control flow for update operations in the distributed update processor
added a condition to check if the rocket stage is null along with the motor to ensure that the system can handle cases where no stages are available
updated command syntax to improve readability and maintainability to enhance clarity of the command usage and manage allowed blocks more effectively
cloudstack - 7223 : fixed typo in code comment within extendedmastersecretextension
changed the declaration of the processor variable to be final to ensure immutability of the processor variable for better code safety
added a listener to notify when the end of stream is reached to ensure proper handling and error reporting when the write operation fails
added " CUBE " to the MySQLDatabase class to support compatibility with CUBE - specific database operations
added a try - catch block around the rm operation in TestReplicationHandler . java to handle potential IOException when cleaning up the snap directory
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and introduce new test runner functionality to enhance support for multiple API versions in Robolectric tests
replaced reflection - based access with direct method calls in DefaultOkHttpClientFactoryTest to improve code readability and reduce dependency on reflection
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the OS variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions when OS is not initialized
ticket # 4810 : do n ' t hide the panel in case it ' s not center
updated the jailerMain method to include a boolean parameter for fromCli and modified the RuntimeException message in UIUtil . java to improve functionality by allowing the argument to be optional
updated documentation to include initial content on callback - still more to add
fix : set default pull _ unread preference ( # 2537 )
fix inconsistency between nullnode . equals and inlining .
updated graphics dimensions and refactored camera initialization in Box2DTest , Pong , and TinyImage classes to improve memory handling and simplify camera setup
fix comment detail scroll in post detail screen
fix cliservice aborted error log at warn level instead of trace
only convert method instance to interface if they be abstract
mow - 513 handle mouse up more robustly on ie 10 +
fix duplicate user in notification device link
update base url for cgiar provider from droppr . org to srtm . csi . cgiar . org
removed specific action listeners and added a new class bug6520101 for testing file chooser functionality to ensure proper cleanup of the JFileChooser UI and implement a simple execution case for automated testing
make hollowfinder and hollowhistoryui more effective after upgrade to jboss 2.0 . 2
refactor methods in BuildRuleResolver to streamline optional rule retrieval and improve exception handling to enhance code clarity and ensure better error messaging when rules cannot be resolved
added visibility control for transport spinner based on makingShortcut status to improve user experience by hiding the transport spinner when not making
added null check for attributes _ field and created two new classes with annotations to ensure proper handling of null values and implement demonstration of annotations
replaced direct calls to backPressed ( ) with conditional checks in multiple fragment classes to improve code readability and prevent unnecessary processing when the back button is clicked
added support for long view index functionality in QueryServices and QueryServicesOptions to enhance functionality for handling legacy view index data types
update string appending syntax in SDRTrunk . java to ensure correct formatting of V values in output
fix privatekeypathparsertest on window by remove trail slash
no need to pass columnposition a we do n ' t need to track it
updated IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure consistency in versioning across the codebase
hbase - 3668 : unmatched column family check should disable use - d option ( gopal v , review by thejas nair )
[ java ] : use correct log subscription id for archive start / stop
replaced startActivity with startActivitySafely for handling voice button events and modified voice button visibility to enhance activity management and improve UI responsiveness
added a conditional check to return early if only one node is " i " to improve performance by avoiding unnecessary processing for single - node scenarios
hbase - 26367 Procedure . addendum : fix typo in @ throw tag description
added default locale and system class loader parameters to ResourceBundle method calls to ensure compatibility with different locales when loading resources
[ j2kt ] implement normalizearraycreatationskotlin pas which can be use with kotlin .
lucene - 4433 : fix off - by - one bug in persegmentsinglevaluing
replaced Optional with Objects . firstNonNull for retrieving the author list to improve null safety and clarity in handling processed fields
added a new file OSGiTest . java to test dependencies for Gson annotations to ensure proper handling of unsupported JDK features and improve test coverage for dependency resolution
nifi - 10357 : ensure that the controller service graph be always enable when it ' s dependent
hbase - 17777 remove dead code in htable # clearbufferonfail ( colin ma )
fix : add java 8 compliance for pretty - printing ( # 1181 )
simonstewart : add hasuserdata a an alias of hasuserdata in simplefeatureimpl
removed unnecessary throws from method signatures in DDLPlanUtils and ExplainTask to simplify code and improve readability by removing unnecessary dependencies
renamed RelyingPartyRegistration class in the codebase to improve clarity and maintain consistency in naming conventions
7096170 : should remove unused support for enable javac logging
added a new class InJavaSourceSet to manage Java source set markers to enhance code support for source set selection in the Java search functionality
tika - 2311 -- make the testGDALparser skip test for ' gdalinfo ' command base on this file
add a static method ` createGetter ` to the ` ReflectionHelper ` class for creating getter instances to facilitate the creation of getter instances with specified attributes
simplified conditional check for external storage usage to enhance code readability and maintainability
added a new constant INDEXER _ NO _ COMMIT in IndexerMapReduce and updated related classes to support a no - commit option to improve indexing performance control during job execution
bug 8553 : do n ' t require disk offering id when create a volume
updated content assignment in ToHtml . java and modified assertions in BaseTestCellComment . java to ensure that non - empty notes are handled correctly and improve test clarity
added checks for ` Period ` and updated calculation methods in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to enhance robustness by ensuring only calculations for ` Period ` instances
added a new file ` Issue382 . java ` to test handling of specific error types in request handling to ensure proper error management and response handling for specific error cases in the application
remove unnecessary code and use static import in positionutils
set the visibility of text holder to GONE in AttachmentAdapter . java to ensure that the text is displayed appropriately when certain conditions are met
fix : fix bug which occur when there be no reference to ctimport ( # 4088 )
[ java ] fixing null point when use firefoxdriveroptions . profile ( )
fix liquid block not be pickup properly ( # 54691 )
[ amq - 6022 ] avoid test failure due to concurrency issue
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate time zone representation for applications
[ java ] distinct error log : do not log error for already exist distinct observation .
updated TEST _ NIGHTLY to retrieve test group options dynamically based on class annotations to enhance flexibility in test configuration by allowing additional options based on the annotation ' s enabled state
fix sonar warning : the logger should n ' t be close here
update graalcontext to prevent access check [ j2me ] .
change to use getaster ( ) to avoid call getrgb ( ) and updatepixels ( ) if it do not implement
updated the method to use partition . getSd ( ) instead of table . getSd ( ) to ensure correct retrieval of partition data for transactional properties
refactor the logic for determining if the overlay should scroll to improve clarity and functionality of overlay scrolling behavior
hhh - 12709 - create batchbuilder for uncoverollected jdbc batch to reduce memory consumption
improve analysiserror . shouldnotreachhere ( ) error message
added a test for spying on a class retains state and created a MockWithStaticStateDemo class to ensure that partial mocking behaves correctly with static state values
add a new test method for parsing UNION with brackets and order by to ensure correct parsing and deparsing of SQL queries involving brackets and orders
added null check and exception handling for the action execution in SecurityUtil . java to improve robustness by ensuring proper exception management during action execution
replaced direct call to alGetError ( ) with an structured error code variable in OpenALMusic . java to improve error handling by providing more context for the error
camel - 3916 : rename the method reslovestringparameter to resolveparameter to be consistent with previous commit .
hive - 23737 : fix scale cast in rexnodeconverter ( zoltan haindrich review by ashutosh chauhan )
updated the retrieval of vendor and device properties to use Optional to avoid null pointer exceptions whenAttestationMetadata is null
fix bloom filter test ( ` ` testname ' ' should be ` ` current ' ' )
replace ` AxialStage ` with ` RocketComponent ` and simplify selection logic in ` DesignPanel ` to improve code clarity and streamline selection handling for rocket components
added a new parameter ' longRunningTime ' to the Args class and updated the singleton instance based on its configuration to allow dynamic configuration of the long running time in the virtual machine
updated priority adjustment from AT _ MOST _ medium to AT _ MOST _ LOW and added a new class for comparison logic to ensure compatibility
updated import statements and modified service loading methods in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to improve code clarity and utilize a more robust service loading mechanism
geot - 5378 : fixed xsdecimalbinding to return plain string instead of decimal . tostring ( )
replaced the use of Mockit ' s Expectations class with direct calls to Assert . assertEquals in TestRestClientRequestImpl . java to streamline assertions for better readability and maintainability
added a check for the equality of the comparison database in the MissingUniqueConstraintChangeGenerator to ensure that the same database is used as missing unique constraint handling
refactor AndroidProperties handling in IjProjectTemplateDataPreparer . java to streamline proguard configuration to improve code readability and reduce redundancy in parameter setup
replaced assertions with await statements in multiple test classes to improve test reliability and readability by using a awaitility
added user _ args and timestamp fields to ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance traceability and provide additional build information
substitute static resource bundle retrieval to fix jdk 11 compatibility .
fix typo in hepplanner trace message ( # 868 )
added new file TheRockMetaDataDemo . java to demonstrate fetching exchange metadata to enable users to access and print exchange metadata for TheRockExchange
added a strictfp class to FloatingDecimal and FormattedFloatingDecimal , and implemented a strictness check method to enforce precision during decimal conversion operations
hive - 15432 : remove column name parsing from column name builder in columnstatssemanticanalyzer . ( zhihai xu , review by ashutosh chauhan )
added a test method ` replaceField ` to the ` JavaTemplateContextFreeTest ` class and modified the contextFreeTemplate method signature in the ` BlockStatementTemplateGenerator ` to include a cursor parameter and ensure proper context usage when replacing fields in Java code
updated static method check to exclude synthetic instances in InstantiateStaticClass . java to ensure proper handling of non - synthetic classes during static analysis
update method to use basePath directly to improve accuracy of path handling by removing unnecessary method call
added functionality to register and unregister RescueInfo resources in IkStepDefinition . java to improve resilience during Ioke message handling
updated equals and hashCode methods in multiple type classes to remove final modifiers and provide a consistent hashCode implementation to ensure consistent comparison and hash code generation across different type implementations
added a static method ` getSyncLevel ` to retrieve the default SyncLevel value and improved enum initialization to enhance clarity and maintainability of sync level configuration
test : make test use try - with - resources
added a check for the RECOVERY state in the RecoveryStrategy condition to prevent processing of recovery slices
fix issue with ` opencv _ core . create ( ) ` without ` image . getwidth ( ) `
added SDKPath to AppleBundle and SwiftStdlibStep classes and modified ProcessExecutorParams to accept a ExecutionContext parameter to enable dynamic SDK deployment by setting the SDK path dynamically
[ flink - 23454 ] [ runtime ] clean up unnecessary storage path in blobserver and cache
bug 9373 : correct spelling of static nat in log .
rename PasswordEncoder and StandardPasswordEncoder classes to improve clarity and consistency in password encoding functionality
hive - 23275 : disable row type conversion for sort / union projections ( # 4875 )
betterblockpos : add a comment about why it should never be null .
fix servletcontext lookup in case of integration with jboss .
replaced hardcoded version strings with a method to retrieve the nightly build status to improve clarity and maintainability of the version handling logic
added conditional logic for handling trailing / whitespace characters in SQL statements to ensure consistent formatting of statements that may lead to errors in Oracle databases
add new constant unknown _ value _ are _ pn to detect if a nullderef should be use
fix # 1348 : allow the test server to run on a machine other than the one use localhost
ggb - 1568 slider move to the end , and change the delay to the onetime callback to the end .
added a method call to add the multifactor authentication provider bypass to enhance multifactor authentication functionality in the application
fix code style issue in build file
( chore ) camel - kie : cleanup javadoc from error in java 8
added help page functionality and refactored related code to improve help page management and enhance user experience with better responsiveness
added GeocodeProviderFactory and Constants interfaces for managing Omni Notes Beta to improve code organization and facilitate the representation of Omni Notes Beta in the application
updated import statements for CharArraySet from the correct package to ensure compatibility with the latest version of the Apache Lucene library
refactor test cases to remove JUnit ' s ExpectedException rule usage to simplify exception handling logic and improve test readability
[ java ] make sure we do n ' t delete the object if it ' s already delete from the gateway
modified conditional checks in SegmentsInfoRequestHandler and updated collection creation in CollectionsAPISolrJTest to improve clarity and functionality of document handling logic
modify the calculation of numPredictiveAppCols to be conditional based on device type to improve accuracy of app column estimation for non - phone devices
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated related calls in ` DrillJoinRelBase ` and ` NestedLoopJoinPrule ` to streamline scalar subquery handling and improve code maintainability
test : add blockbuildcraft to test if a block can be remove from the inventory .
modified layout parameters to ensure proper placement of the search bar to improve layout flexibility for better user experience
fix for long running yahoo session in order to prevent race condition when close the session .
hive - 20752 : metastore memory leak in hivemetastore code ( prasanth jayachandran review by gopal v )
updated getDisplayScript method to accept a category parameter and added a test for bug 779486 to ensure the display script is correctly configured for different locales
updated static imports for BASE _ URL _ PROP and CORE _ NAME _ PROP in Replica . java to ensure consistency with static imports for cleaner code
replaced ThreadLocalRandom with a direct Random instance to improve performance by utilizing a more efficient random number generator
refactor backup logic to check if the launcher is ready before backuping assets to ensure that the backup process executes only when the launcher is properly initialized
updated exception messages to include descriptive strings for illegal arguments to improve code readability and facilitate easier debugging
camel - 16182 : added reilience4j test to show how to use pooled exchange with time out .
renamed variables and methods related to body space to bar space for consistency to improve clarity and maintain uniform naming conventions across the codebase
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
use temporaryfolder in test to avoid test failure
added multiple logger level settings to Grasscutter . java to configure the logging level for debugging purposes
lucene - 7598 : make spanscorer . sethighlightCnstScrRngQuery static and update related test .
update state check in Launcher and add getState method in Workspace to ensure proper handling of workspace states and provide access to the current workspace state
rename various assertion classes and constants across multiple files to improve clarity and consistency in naming conventions
added a conditional check for the cacheability in SnippetTemplate . java to ensure templates are notified only when caching is enabled
added support for ` SCOPE _ SOLR _ CORE ` in the context management and session management to enhance the handling of Solr core scope sessions across different contexts
added a primary key definition for the measurement table in DatabaseMetaDataTest . java to ensure that the measurement table behaves as expected with primary key information
update the permission configuration argument name and related code from " -- permissions - config - path " to " -- permissions - config - file " to enhance clarity and consistency in handling permissions configuration files
refactored session handling logic in HttpSessionContextIntegrationFilter . java to improve clarity and structure to enhance maintainability and readability of session management during testing
added a new file TestIfWithDeadRegion . java that includes a method for retrieving strings from a string using a Supplier to facilitate testing of string operations with potentially dead region conditions
update the model file to reflect the addition of usd instead of ud .
replaced the direct access test with a call to ` HighResolutionTimer . enable ( ) ` and ` HighResolutionTimer . disable ( ) ` in the test to ensure proper management and performance of concurrent access tests
added a static UI settings and updated the hideToastBar logic in MainFragment to enhance user experience by allowing customizable visibility of the toast bar based on user settings
refactor anonymous inner class to a lambda expression that uses LocalFree for memory management to improve code clarity and ensure local free location is released after use
updated method names to use putIfAbsent for setting parameters and improved null checks for client IDs to enhance code reliability and prevent potential NullPointerExceptions during logout operations
updated JOptionPane usage to use localized messages for better localization to improve user experience by providing custom error messages throughout the user interface
tika - 3195 -- upgrade poi - ooxml and poi - ooxml to 1.3 . 0 , and add magic for x - tika - ooxml and x - tika - poi
added logging mechanisms and refactored code to use wildcard types for better type safety to enhance code clarity and maintainability while ensuring correct handling of multiple object types
camel - 7999 : fix xml output for eip and documentation - enricher goal .
do n ' t wait for migration from remove node , mention flag to skip
- fix bug where default capture device would not be enable when no audio device specify
added WebSocket configuration to ShenyuConfig and updated WebSocketClient instantiation to enable flexible WebSocket connection settings based on configuration
fix : cachevalidationlistener should only register the late test runner
updated content length handling in MoreIndexingFilter to ensure it is trimmed only when it is not empty to improve robustness of content length management by avoiding potential errors
refactoring : move solvingTerminated ( ) to a separate method to make code reentrant .
ignore pathalreadyexistsexception during concurrent insert ( # 5883 )
added a new method ` check ` to the ` Authz ` class to provide a way to check if a boolean result is verified
changed access modifiers from public to protected for several methods in multiple classes to enhance encapsulation and restrict access to implementation details
bug 9989 : do n ' t finalize the owner if it be set to reserve / allocated state ( # 9969 )
removed the condition checking for RFC2616 compliance in HttpParser . java and updated test methods accordingly to simplify the code and improve test coverage for HTTP compliance
refactor thread initialization to use a dedicated method for improved error and output handling to enhance code readability and maintainability while ensuring proper charset management
added a method to create an external cache directory and implemented tests for external storage state functionality to enhance functionality and ensure accurate testing of external storage behavior
[ jbrules - 3684 ] add test case for mvel type coercion
updated generic type declarations and improved formatting in LoggingConfig . java to enhance code readability and maintain consistency across the logging framework
added exception message to log ( ) when construct ( ) throw an exception
fix issue with convert tel : to http : / / validator . google . com / p / mybatis / issues / detail ? id = 557
updated visibility logic for shared file icon in FileListListAdapter to enhance user experience by showing shared file status accurately
deprecated the deprecated dynamic partition configuration in HiveConf . java and updated test cases in TestTxnCommands3 . java to encourage the use of the new sorting option with a threshold
updated the ` ExecuteStatementOperation ` and ` Operation ` classes to include a ` confOverlay ` map for better configuration management to enhance the functionality and maintainability of configuration overlay handling in operations
replaced usage of ` Lists . newArrayList ` with ` ArrayList ` and simplified import statements in ` BTCMarketsStreamingService . java ` to improve code readability and maintainability by using standard Java collections
fix unit test break by change from name to type name
added a method ` onErrorInStep ` that returns null in ` StepListenerSupport . java ` to provide a default implementation for handling exceptions in step execution
fix link in wallet . notifytransactionisinblock ( ) javadoc .
camel - 8461 fixed the issue that camel - netty - http do not support port numbering and set exchange charset
use juli log instead of system . out for some test
added a check to return false if the row does not exist to ensure the database connection list does not exceed the intended size
fixed bug 1312723 - add a false positive test for method with the same name a enclosing class .
added support for extended platform MBean handling in ManagementFactory and created a new ExtendedPlatformComponent class to enhance JMX management capabilities and improve organization of platform - related data management
replaced single quotes with apostrophe in SQL queries to ensure proper handling of backslashes in SQL queries
updated resource paths in BleutradeDtoTest and BleutradeExtendedDtoTest to include " org / knowm / xchange / bleutrade / dto / " to ensure proper organization and access for Bleutrade DTOs
updated methods in TextEscapeUtils for better text formatting to enhance readability and maintainability of the code
added a filter parameter to the FunctionQuery creation and modified the return statement to use it to improve flexibility in query filtering based on user - defined parameters
removed progress bar updates in GpsLoggingService and updated result email handling in AutoEmailHelper to streamline auto - email display and improve user experience
replace ArrayList with HashSet for inlinks and update iterator methods to enhance performance and prevent concurrent modification issues
remove discovery result after stop ( ) ( # 1539 )
updated testFilterForPartition method to accept a boolean parameter for filtering logic to enable blocking mode filtering at the server side for better control over partition filtering behavior
added ` Abandoned ` status to the workflow lists in ` TicketModel ` and updated related logic in ` TicketBasePage ` and ` TicketsPage ` to manage the status of closed tickets effectively
remove null columnAliasPrefix assignment across multiple platform classes to simplify the code and avoid unnecessary null assignments for clarity
updated LlapRowRecordReader and LlapRowInputFormat to use BytesWritable instead of Text to improve data handling efficiency and compatibility with the latest Hadoop API
feat : detect non - native jvm on a 32 - bit jvm
fix a bug where the top page of the page in the pdf file be be only copy if the method name be the same a the page name .
added DAEMON option to the OptionEnum and implemented a daemon mode in TerminalClient to enable better integration with the terminal server in daemon mode
added a new class FlushIndexTask to handle index writing operations using PerfRunData to improve indexing performance by flushing the next buffer when necessary
avoid use guessed size for memtable size , keep track of disk size
added support for SEASONS output in MediaLibraryFolder checks to ensure proper handling of SEASONS conditions
added a new file ` LocalSocketAddress . java ` to create a DatagramSocket with a specified local address to test network addresses with IPv6 loopback functionality
updated grid size coordinates in GridSizeMigrationTask . java to align grid size points with new configuration requirements
replace occurrences of getName ( ) with getName ( ) and getFields ( ) in SerializerPojo . java to improve code clarity by directly referencing the actual name instead of just the name
added a read - only option and modified transaction handling in the Context class to enhance security by allowing users to use read - only contexts
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and ease of understanding
update lastRunStart calculation and adjust index check in BlockBoxing . java to ensure correct handling of box index boundaries during execution
added EOFException handling to the assertion in GracefulStopTest . java to ensure proper exception handling for both closed channel and eof scenarios
replaced manual lock acquisition with direct calls to listeners . get and listener removal methods to simplify code and improve readability by reducing unnecessary lock management
networkparameters : remove obsolete reference to acceptableaddress in javadoc
set allowAccountAssetOptimization based on CommonParameter instance to ensure account asset optimization is applied correctly in the configuration
added a new constant J9 _ GC _ POLICY _ NOGC to control the behavior of GC policies without GC
remove the validation of transaction prototypes in TransactionCapsule . java to handle invalid protocol buffer exceptions more gracefully
ast : remove unused class exceptiontypechecking ( unused )
fix ( help ) : fallback to english when there be no localization file
added a new file ` ProcessorInfo . java ` for managing CPU core processors to provide a mechanism for determining the number of CPU threads allowed in a Linux environment
add switch to generate html output ( default stylesheet be default . xsl ) for easy debugging
logbackloggingystem : set logbackxmllocation to non - nullable instead of optional < string >
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve data handling and import statements to enhance code clarity and maintainability by consolidating related data management logic
updated the method to create a handler by default and modified the conditional check for whitelisted keys to improve clarity and flexibility in handling tag propagation with user configurations
refactor conditional logic for ` rustDepType ` based on ` crateType ` to utilize a switch statement to improve readability and maintainability of the code
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter for error handling to enhance flexibility in OAuth2 login links based on query parameters
hbase - 7039 generalize how we seek to the first key in hfilestorefilereader ( chiaping tsai )
hhh - 8594 - add timing ( ) to hibernate - tuple to support @ always and @ never
nd4j2 : added test for layer normalization ( # 99 )
refactored showShareFile method across multiple activities to use a centralized helper method to improve code maintainability and reduce redundancy across the file sharing functionality
added a new test class LiquibaseUpdateMojoExecutionTest for verifying Liquibase update functionality to ensure the correct execution of updates with relative CLOB files
convert proxyType to uppercase when setting it to ensure consistency in proxy type handling
move minecraftforge to src / mod _ minecraftforge . java so that mod _ minecraftforge can change version . also add dedicate code to forge .
performance improvement for mondrian - 1471 - enhance jdbc snapshot query performance
added a new Container instance and included a new Label with a border to enhance styling capabilities for UI elements in the UI
refactor RetryAutoConfiguration to include @ ConditionalOnClass annotation and create RetryableStatusCodeException class to enhance configuration flexibility and improve error handling for retryable service status codes
change fill _ parent to match _ parent in celllayout to ensure the layout occupies the intended area
updated the calculation of parentTaskName to use milliseconds instead of nanoseconds to ensure accurate timestamp tracking for task resources
added error handling for invalid AddServiceRequest input in ServiceResourceProvider . java to ensure robust logging and provide clearer error messaging when parsing fails
refactor conditional checks in IndexDatabase . java for better readability to enhance code clarity and maintainability by streamlining the return logic
[ giac ] make sure x < 2 and not x = 0
modify the AnonCipherWithWantClientAuth class to improve encryption handling to enhance security by ensuring proper encryption behavior
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these classes are outdated and should not be used in future development
refactor JLayer class to improve code organization to enhance maintainability and readability of the code
make eviction test more robust by use asserttrueeventually
updated the Md5PasswordEncoder to directly use the saltedPass variable instead of the internal method to streamline the password encoding process for improved clarity and maintainability
replaced the initialization of ViewTreeObserver with direct calls to getViewTreeObserver ( ) to streamline the code for better readability and maintainability
updated Response class for improved error handling to enhance reliability of response processing
fix : use long . max _ value to prevent overflow
set the preferred size of security panel to 200 minute to improve user experience by providing smoother security
added null and empty checks for replies in various adapters to improve code robustness by preventing potential NullPointerExceptions when compressing replies
added enhanced ` HitbtcBalance ` class with improved ` equals ` and ` hashCode ` methods to improve object comparison and hash generation for better performance and clarity
fix ( sql ) : fix issue when use order by clause in where clause . ( # 1747 )
hbase - 21902 retriesexhaustwithdetailsexception # tostring ( ) should return actual addrs
added OpenCookie import and simplified the file opening logic in EditGcodeFile . java to improve code clarity and streamline the file management process
updated HTTP client imports from ` org . apache . okhttp . http - client5 ` to ` org . apache . hc . client5 . http - client5 ` to utilize the new version of Apache HttpClient for improved compatibility
updated energy adjustment logic in PipePowerWood . java to correctly adjust energy parameters to ensure energy retrieval accurately reflects the current energy and eliminate unnecessary checks
added a check to delete the tmp output file if it exists to ensure that the output file is properly removed before usage
added a " id " parameter to the BitstampWebSocketTransaction constructor and implemented a test for retrieving trades in BitstampStreamingMarketDataServiceTest to enhance transaction data structure and ensure proper validation of trade data retrieval
[ beam - 3390 ] do n ' t try to peek state by time if the collector have be shut down
update expectedCitation string format in CitationStyleGeneratorTest . java to correct the formatting of Citation content
add ` ` hDRformat ' ' column to mediatablefiles for video quality
ggb - 2118 show definition for equation in exam , but not ineqs
fix a npe in the SIPCommTextFieldUI when there be no component to display .
hbase - 6019 add a caching mechanism for meta scan when startrow is null and scanRoot is not initialized
fix ( sql ) : init script for minimr should be ` ` q _ test _ init _ for _ minimr . sql ' '
8273092 : doc of [ strict ] math . floordiv ( long , int ) erroneously document int in @ return tag
added a new BooleanFlag ` ENABLE _ TRANSIENT _ TASKBAR ` to FeatureFlags . java to provide a debug option for enabling transient taskbar functionality
[ flink - 33925 ] [ runtime ] fix incorrect documentation of nested class archivedexecutionvertex
fix issue with scale set to 3x when scale = = 3
rename the ` optional ` boolean variable to ` vararg ` in the ` Parameter ` class to clarify the purpose of the variable and improve code consistency
hbase - 25819 add exception to info log of hbase - server ( # 3219 )
[ hotfix ] [ test ] remove unnecessary asserttask in testclusterupgradeutils
updated warning messages in AsyncHttpConnection and refactored test classes for clarity and consistency to improve code readability and ensure accurate handling of asynchronous requests
added a boolean parameter ` showArrow ` to the constructor of ` SearchUiManager ` to enable arrow visibility in search functionality
added a break statement to handle read committed mode in database logic to ensure proper lock mode handling during database operations
sulong : skip amd64 test on linux
# 373 : improve the getstring method of scalar for inttype ( # 373 )
update primary key validation logic to handle empty and multiple primary keys to improve error clarity for invalid identifiers
added conditional logic to set drawable resources based on LMP status in multiple classes to improve app visuals for devices running the LMP theme
add check for currentflutterisolate to prevent no isolate to query ( # 4437 )
added new header writer methods and replaced them with dedicated methods for content type options and caching to enhance header configuration capabilities for improved security and performance
renamed methods in ObjectEnumerableAssert for clarity to improve code readability and maintainability
[ grid ] move smoketest to the router package
added type attribute to @ aggregateroot to fis test failure
added support for handling prebuilt libraries in Python binary to enhance the flexibility and usability of Python in - place binary configurations
added client authentication handling to NetServerOptions and HttpServerOptions classes to enhance security by allowing client authentication in JSON format
updated the centralized the root directory configurations in HiveConf and MetastoreConf to ensure that the centralized root directory paths are appropriately identified based on the user ' s name
refactor visibility check for task views in RecentsView . java to simplify logic to enhance readability and maintainability of visibility logic
make test timeouts configurable since it can take too long
removed clearAll ( ) method from DataTableTopComponent . java to streamline data management by eliminating unnecessary method
changed variable name from ` controller ` to ` flowController ` in multiple classes to improve clarity and consistency in variable naming
added a new test method to verify the removal of the exchange sum number in the child pipeline to ensure the correctness of child exchange operations in the pipeline generation process
added ClassLoaderHandler import to the module - info . java file to enable custom class loading capabilities within the project ' s classpath
fix to make solver and gui work again in event thread
added JsonIgnore annotation to ApplicationSettings . java to exclude sensitive fields from JSON serialization
inverted the null check for throwable to ensure that the condition is met only when throwable is not null
refactor query - info retrieval in QueryTimeManager for clarity to improve code readability and maintainability
fix an exception with auto - workbench where the crafting result be empty .
fix index out of bound exception from gl200 decoder ( fix # 4824 )
updated variable names from ` timeColumnName ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to improve clarity and consistency in naming conventions
removed duplicate calls to waitToProduceOneBlock in HttpShieldTrc20Token004 . java to ensure proper synchronization of HTTP node production
fix bug with initializable factory in dih
add ` ` active ' ' tag to time interval timer for active meter
changed the data type of SYNC _ DELTA _ RATE from float to double and updated fetch interval calculations to improve precision in calculations and ensure fetch time adjustments
adapt abstractfragmentinsertiontagprocessor to use the complete syntax of fragment expression instead of the current fragment expression
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when accessing the attributes
resolve : http : / / issues . apache . org / activemq / browse / amq - 2840 - copy message before process the ack
added new color constants and improved extractInto method to handle fallback color extraction to enhance color processing logic and support for dark text hints
add data folder accessibility check to input folder list
removed debug build type check from OmniNotes and modified related methods in NotesHelper and NotesHelperTest to includeTitle to enhance code readability and improve handling of note titles
removed initialization of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify sessionRegistry initialization process
add log when reconnection complete to netty stream
replaced Factory with Proxy in multiple test files to utilize Java ' s Proxy class instead of Default Factory
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` for thread storage to improve performance by using a more efficient data structure for threads
updated exception message formatting to include the destination address in the exception creation to improve clarity of error messages by providing more context about the destination
added a method to check if the view directory is under the repository to provide feedback and improve error handling when the view directory is not under the specified repository
remove unused tab header area fix
added the use of ` UseCompressedClassPointers ` JVM option in multiple test files to ensure proper handling of compressed class pointers during testing
remove error log when update log not in active or replaying state
deleted the ConnectionHook . java file to the project is no longer needed for the current project architecture
solr - 12313 : remove the configuration of testinjection # waitforreplicasinsync which cause some test failure
camel - 9665 : fix parameter assertion in java - rest - dsl - java
updated version handling in ApexLanguageModule and added a new test method in TestAccessEvaluator to ensure compatibility with current versioning and improve access handling functionality
fix some javadoc warning that break the build
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread management to improve performance and maintainability by utilizing a singleton instance of AggregateEngine
updated WebSocketAsyncConnection to accept a ByteBufferPool parameter to improve buffer management by utilizing a more efficient byte buffer pool
added scrollToPositionWithOffset functionality to the LinearLayoutManager to enhance user interface by allowing scroll position to the end of the thumbnail
fix ( sql ) : fix sql code generator sample by timestamp ( # 1846 )
refactored animation handling in LauncherAnimUtils and added transition animation methods in LauncherStateTransitionAnimation to improve animation performance and readability during transitions
added a check to disable the default user agent when configuration to improve flexibility in user agent management
added pubsubhubbub functionality to the FeedRefreshUpdater and ApplicationSettings classes to enhance subscription handling based on configuration settings
changed the access modifier of the finalize method from public to protected to enhance encapsulation and restrict overriding capabilities
update to support spring boot 2.6 and 3.0
( scott phillips ) commented - out web app code from dspace - web . jar
added table alias retrieval logic in CalcitePlanner and implemented a method in RowResolver to ensure table aliases are present and improve error handling for missing tables
[ flink - 23454 ] [ runtime ] add description when job identity be modify .
feat ( db ) : optimize log of transaction broadcasting
improve test stability of basicmaptest
removed unnecessary line breaks in HiveClientConfig and TestHiveClientConfig to improve code readability and maintain consistency in method definitions
added a new enum ` TlsClientCertPolicy ` and refactored client certificate policy handling in ` GitBlitServer ` to simplify the handling of client certificate policies and improve code maintainability
do n ' t send alert message when they ca n ' t be subscribe to authenticated feed
added HTTP headers support to WebSocket routing in WebsocketRoutingFilter to enhance websocket handling by allowing customizable WebSocket protocol settings
added a debug log statement to HiveQueryResultSet to facilitate debugging by providing visibility into query result sets
updated the string formatting in HolidayEventFormatter to remove unnecessary placeholder for dimensions to simplify the output and improve readability of the displayed event dimensions
renamed ` InnerClass ` methods to ` InnerStaticClass ` and updated related logic to clarify inner class handling and improve code readability
updated UnexpectedJobExecutionException . java file to improve exception handling clarity and maintainability
removed unused import and simplified buttonShouldBeOpaque logic in AquaLookAndFeel . java and AquaUtils . java to streamline code and eliminate unnecessary complexity
updated the handling of document enums and max cost in DrillSidewaysQuery . java and DrillSidewaysScorer . java to improve accuracy in determining maximum cost values during query processing
added a new map for GeoDegeneratePath in classRegsitry to support GeoDegeneratePath handling
remove prefill parameter from pool constructor and related classes to simplify object creation and ensure consistent initialization
added a condition to update the taskbar state and updated flags in TaskbarStashController to ensure correct state management when the launcher is not in the launcher
added null check for the default style in CascadeDeleteVisitor to ensure robustness by preventing potential NullPointerExceptions
refactor GuiUtil to utilize a unified setSize method for better structure to improve code readability and maintainability by centralizing size management
simplified icon assignment for file types in FileTreeViewHolder . java to improve code readability and maintainability by reducing complexity in icon selection logic
updated assertions in ParallelUniverseTest to check for contains method instead of isEqualTo to improve test accuracy by allowing multiple variations of " v18 "
add synchronize when iterate over synchronizedmap a per java specification
add native test runner for native probability function
added shutdown thread to shutdown logic to ensure proper resource management and prevent memory leaks
hhh - 9967 - do n ' t drop temporary table after use for sybase when use temporary table
simonstewart : applying patch from josh from bug # 139228 to the htmlunit driver
refactor multiple classes related to SolrCore , XMLWriter , DocIterator , and QueryParsing to improve code organization and maintainability across the codebase
updated LinksIndexingFilter to improve functionality to enhance indexing performance and maintainability of the code
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability of memory allocation logs for better debugging
fix refresh source info for at least period ad group
added a suppression warning for UndefinedEquals in MultimapSubject . java to suppress warnings about the contract of this method when comparing with another method
use unit _ hz instead of deg _ text for wave frequency button
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
replaced the method of populating a TreeMap to use an initializer to improve performance by reducing object creation overhead
optimization - avoid npe in case of format null
add grpc . message _ sent . visible to the messagerequested and clientinterceptor ( # 1362 )
replaced ` ZoneId . of ( ) ` with ` TimeZone . getTimeZone ( ) . toZoneId ( ) ` in ` ScheduledTrigger . java ` and updated test to reflect this change to improve code clarity and ensure proper timezone handling
added AsyncBucket and InMemoryExtension classes and modified methods in Bucket and ConfigurationBuilder to use InMemoryExtension to enhance functionality for better memory management and support for async operations
modified the resexhausted003 . java to allow dynamic directory resolution for test classes to enhance flexibility in determining the correct test environment
removed unnecessary line breaks in AbstractConnector . java and improved code formatting to enhance code readability and maintain consistency across the codebase
updated OngoingStubbing class for improved error handling to enhance fault tolerance during stubbing operations
added support for reusing WebServer instances in the Main class to improve flexibility in managing web server connections based on configuration
renamed the variable ` productConstructor ` to ` constructor ` for clarity and consistency to improve code readability and maintainability by using a more descriptive variable name
added error handling when thread allowlist is cleared in ParametersInterceptor . java to ensure that resources are properly cleared and avoid IllegalStateExceptions
updated output source setting in TransformerWriterItemProcessorTests to ensure the correct item writer is used during testing
[ ddt2 ] fix dmn analysis in legacy mode ( # 2844 )
add a test for sliding windows and add accumulators functionalities in CombineTest . java to ensure that the Combine functionality works correctly for different window configurations
added conditional check for ` allAppsDirty ` before binding all apps and improved logging message format to ensure apps are only bound when necessary and to provide clearer log output
camel - 11446 : fix unit test failure on hudson when file watcher restarts
Removed unnecessary whitespace and formatting in the Solution class to improve code readability and maintainability
8048549 : [ macosx ] disable usage of system menu bar if awt be embed in fx
add fall control to setrawlocation ( location ) to avoid infinite loop
replace the query creation method in ` SimpleJpaRepository ` to use a new criteria query to improve code clarity and maintainability by utilizing a more expressive criteria handling
fix genesis block not correctly set difficulty and number
remove safepoint insertion phase to make sure that we do n ' t have safepoints
updated loop structure to improve null and empty checks for child nodes to enhance code robustness and prevent potential NullPointerExceptions
modified access modifiers of methods in ArtifactResolver and added public access modifier to improve accessibility of class and method declarations for better usability
fix : thread leak when client be shut down
added validation to ensure maxBufferedDocs is at least 1 to prevent IllegalArgumentException when maxBufferedDocs is invalid
added state management for login during instance state changes in LoginActivity to improve user experience by during the login process
added null checks for source and value extraction in Pump . java and implemented a test for reverse order in PumpTest . java to improve error handling and verify functionality for UUID sorting
modified access modifiers of several methods and fields in HttpShardHandlerFactory and LBHttpSolrServer to protected to enhance encapsulation and improve code maintainability
changed the order of authentication service selection strategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added unit tests for the DefaultAuthenticationServiceSelectionStrategy to improve the ordering behavior and ensure the strategy operates correctly in tests
added Jetty server configuration and handler setup to TestJNDI . java to enhance server functionality and improve context handling during tests
hive - 21980 : fixed checkstyle violation in SortedDynPartitionOptimizer . java ( ferdinand xu , review by gopal v )
modify return value from NioEventLoop to true in FileStreamChannel . java to ensure the method correctly returns true for event loop handling
hive - 20160 : table stats : do n ' t create table with zero result ( gopal v , review by sergey shelukhin )
camel - 18312 : camel - jbang - export should detect kamelet from camel - kamelet - java to avoid circular dependency issue with camel - kamelet
updated OSMJob . java to utilize AuthState and AuthorizationService for handling OpenStreetMap upload to improve authorization handling and error logging for authorization failures
remove debug info from test to reduce noise in the output .
[ iotdb - 6370 ] rest service - add client _ auth property to expose trust store path ( # 4068 )
replaced ` mocksToBeInjected ` set with ` injectCandidates ` in ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSameParentFieldInjectionTest . java ` to streamline the injection process and ensure the test accurately verifies the behavior of the service
[ her - 1546 ] add getters and setter to bloomuriuniqfilter and bloomfilter64bit class to enable dynamic setting of hash and batch size
updated getCursorAdapter to true and set refresh _ me preference to enable it in the TweetPager to enable refreshed functionality and maintain user experience
update immediate header height ratio from 1f to 75f to improve layout responsiveness for better user experience
updated import statements and introduced a new RecompilationEvent class to improve event handling and logging consistency for better code organization
added functionality to manage and check if hosts are prepared in various classes to facilitate easier troubleshooting by providing configuration options for host system preparation
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and modified its behavior to control log file extensions based on the specified criteria
added logic to delete the first character from the location if it is a slash to ensure that the location string does not start with a forward slash
added entity and score properties to the StaticPipeline class to enhance functionality to manage and validate the number of scores in specific entities and their properties
refactor file path handling in Frame . java and add conditional logic in WhoopsModule . java to improve file path resolution and enhance application behavior based on configuration
[ gsip - 14 ] improved catalogrepository to not throw npe if datastore do n ' t exist in the workspace
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
rename ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and add tests for multi - line text behavior to improve clarity and ensure proper functionality of multi - line text editing functionality
try to fix the unit test error of camel - core
[ iotdb - 4833 ] remove useless writeMeasurementscheams list ( # 4740 )
reformatted code for better readability and updated memory usage calculations to improve code clarity and ensure accurate memory usage measurement
updated the logging jar reference from Log4j12 to Log4jReload4j to ensure compatibility with the new logging framework
wait for the bridge status to be online before check for error in osgi environment
changed package structure for multiple activities and updated import statements to reorganize the package structure for better clarity and organization
jbrules - 1276 disable test until it can be fix
added a constructor to PullRequestMergedEventsStream for reading Avro schema and personal access token to improve error handling and streamline the process of reading the Pinot schema
update doc to reflect new implementation
[ hotfix ] remove ' null if not allocate ' from taskslot comment
replaced instances of FIRE _ EXCEPTION _ ON _ FAILURE with CLOSE in NettyWebSocket and NettyWebSocketTest classes to improve error handling by using a more robust channel listener
modified lock release logic to include exception handling when attempting to release a lock to enhance robustness by ensuring that locks are only released when they are not explicitly released
replaced properties loading with resource bundle retrieval in JRubyBackend . java to improve flexibility and maintainability by leveraging built - in resource management
remove constant from transaction . receiveaddress and use byteutil . empty _ byte _ array instead
do n ' t read classinfo twice in classgraphclassloader . loadclass ( )
improve test stability of blob storage directory
chore : [ clouddatastream ] update ruby namespace to match open source code ( # 9366 )
added an extras bundle to the builder in FileDisplayActivity . java to enhance functionality by allowing extras to be passed during file display
fix issue with particleemitter # loop ( ) where the loop would terminate prematurely .
updated cluster name expectations in AmbariManagementControllerImplTest . java to return a single cluster instance to enhance test accuracy by allowing more flexible cluster request handling
removed the nullable attribute from the TransientSessionTicketImpl class and added handling for NoResultException in JpaTicketRegistry to simplify the column definition and improve error handling for ticket retrieval
8203182 : fix copyright year for test from jdk - 824286
refactor argument handling by using a pathRelativizer function to improve flexibility in modifying file paths during the deletion process
change requestFullState method to accept a boolean parameter for initial request status to enable dynamic updates to the handler ' s state based on whether the initial request is successful
refactor ShibbolethCompatiblePersistentIdGenerator to allow an attribute attribute attribute to enhance flexibility in generating persistent IDs based on principal attributes
updated the injection annotation in RequestValidationService . java to ensure consistency and correctness of the injection process
refactor keyboard hiding logic to utilize a Bundle for message data management to improve code readability and maintainability when handling keyboard messages
updated error handling and improved resource management in multiple test classes to ensure consistent execution flow and prevent potential memory leaks
modified NavigableMap and NavigableSet in multiple files to enhance data structure handling and improve performance
move testslurpfile ( ) to it own testslurpfile ( ) , since not quite a true dependency
updated access modifiers and added @ FunctionalInterface annotations in various classes to improve encapsulation and enable functional interfaces for lambda expressions
refactor span retrieval logic to use a new utility method for name validation to improve code readability and maintainability by centralizing span name retrieval logic
added support for DateWritable type conversion in Hive schema processing to enable handling of date data types in Hive
updated regex pattern in StyleConverter to use a centralized comma separator to improve code readability and maintainability
wly - 129 only parse positive double if the step value can not be parse
refactor column count comparison logic in SemanticAnalyzer . java for clarity to improve maintainability and readability of error handling for table column mismatches
refactor scoring logic in WandScorer . java to improve handling of empty head cases to ensure correct scoring behavior based on the number of documents being processed
clarify the example of exception handling in correspondence . compare by use an explicitly cod correspondence instance .
updated import statements in PaintSetEnabledDeadlock . java to use specific classes instead of wildcard imports to improve code clarity and reduce namespace pollution
initialized ` curPixVal ` to a default value and created a new test class ` WhiteTextColorTest ` to ensure consistent pixel value handling and verify the proper rendering of white text on a black background
replaced list of subtypes with a collection of supertypes to improve clarity and efficiency in handling supertypes
rename variable ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve readability and maintainability of the code
updated test annotation to use stability conditions for local and production environments to improve test stability for specific flavors and platform variations
updated package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
updated logFileSuffix validation to ensure it is not empty to avoid potential errors with leading or trailing spaces
refactor PythonBuckConfig . java for improved configuration handling to enhance clarity and maintainability of the code
added unit tests for system shared library names in ShadowPackageManagerTest to ensure correct functionality of system shared library management
add alarm info info for meiligao ( fix # 3725 )
fix # 1092 , check that the tile be not null before calculate total battery size
added cache trimming functionality using AsyncTask to improve user experience by informing users when a cache is deleted
* fixed build error due to the moved import of java . util . list
updated exception handling in various classes to throw NotAuthorizedException for non - basic authentication errors to ensure proper error handling and consistency in authorization logic
added a new method ` schedulePeriodically ` to the ` Scheduler ` class and updated related method signatures to improve code clarity and suppress warnings for unused parameters
replace the method call to refresh the file list with an item click listener to improve user interaction by displaying the file ' s remote path instead of a regular file
added a random file selection mechanism for multiple streams in StreamUtil . java to improve error handling and logging for file matching issues
hive - 21930 : do n ' t set the catalog name for temp table creation when create hive metastore client ( thejas nair , review by ferdinand xu )
fix potential race condition with track task not start
updated indentation logic in multiple parser classes to ensure proper indentation handling to prevent parsing errors under varying indentation levels
added NetworkWifiStatusReceiver and ChangeWifiStatusEvent classes to manage Wi - Fi status changes to facilitate the management of wifi - related network status updates within the user interface
simplify the condition for checking the FIN status in the ProtocolException to improve code clarity and reduce unnecessary complexity in the validation logic
added a line to hide the collapse handle in the WidgetsBottomSheet to improve user interface by making the handle visible
added new test classes for escaping HTML and JavaScript scripts in the Jooby framework to ensure correct handling of special characters in HTML and JavaScript inputs
added a conditional check to return early if units to scroll is zero to improve performance by avoiding unnecessary processing when there are no units to scroll
inverted the condition for checking the contract list size to ensure that the contract list is not empty before proceeding
added methods for adding and putting enums in JsonArray and JsonObject classes to enhance handling of enum values and ensure null safety in JSON serialization
added hashCode method in IPPPrintService and created TestRaceCond class for validation to ensure consistent hashCode implementation for print services
refactor code to replace getter with direct version object in db2idialect
do n ' t generate payment context for transaction that do n ' t have fee
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
set clear data first subsample by when the buffer be encrypt for playback
removed public access modifier from multiple anti - nested classes to enhance encapsulation by restricting instantiation access to these classes
added import of Retrofit in Part and PartMap classes to enable Retrofit functionality for better rendering of parts
updated JsonBuildHelper , ParamsBuildHelper , and DocGroup classes to improve handling of generic types and streamline code logic to enhance maintainability and clarity when dealing with single object types
added a new constant ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to ` AbstractFloatingView . java ` to support handling of overlays in the taskbar functionality
fix : update gapic - generator - java with mock service generation fix ( # 759 )
update alpha calculation logic in ClipAnimationHelper and add hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on task states
removed the boolean parameter from the createRenderScript method call to simplify the method signature and improve code readability
whitespace change to trigger full ci build ( incl . regression test )
disables the system bundle header check if the plugin manager be enable .
refactor IntegrationTestSparkBulkLoad . java for improved code formatting and readability to enhance maintainability and clarity of the code
change randomness to avoid false positive rnd in keychaingrouptest
refactor Configuration handling to use a single Configuration instance instead of a rocketConfiguration instance to streamline the configuration retrieval process and improve code maintainability
server : fix npe if hostid be not pass in patch
fix for npe in defaultrecordstore when get the value of a record from the centralized store .
kvm : throw error instead of return null when host discovery fails ( # 5823 )
refactor NO _ NAME and NO _ VALUE messages to use constants for clarity to improve code readability and maintainability
add constructor to preparation for change to support 2.0 . x
added a method to strip method parameters from the methodName address to enhance method name handling by removing unnecessary parameters
update version name and code for GreatVoyage to reflect changes to ensure users receive the latest updates and features
mow - 1248 set allowedcommands = > set instead of arraylist to preserve order
[ geot - 7844 ] symbolizer should use constant instead of string literal ( # 4077 )
ggb - 2118 center popups in applet , disable overlap feature for now
update method references to use hyphens instead of hyphens in the ValidationSuite class to improve clarity and consistency in wording
replaced an anonymous inner class for the StartingWindowListener with a private final instance of StartingWindowListener to improve code organization and encapsulate the handling of start window listeners
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code documentation and maintain consistency with inherited methods
updated exception messages in CheckPackageAccess . java to specify PackageAccess and PackageDefinition security exceptions to improve clarity and accuracy of error handling in package access security checks
increased the timeout duration for awaitTermination from 30 seconds to 90 seconds and added an assertion to verify that the executor service is termination after a certain timeout
changed the loggingEnabled variable type from boolean to Boolean and added a null check for logging initialization to enable the logging feature only when logging is disabled
added @ JsonIgnore ( true ) annotations to mmm Schema . java and ppp Schema . java to prevent serialization of sensitive data during JSON serialization
testnontxindexbuilder : increase test timeout to 10 second
updated the train method and related calculations in SimpleNaiveBayesClassifier . java to improve accuracy and clarity of the training process
renamed CheckHelperModule to CheckHelperControllerModule and introduced CheckHelperAuditModule to enhance functionality with audit logging capabilities
modified the Prototype class to improve structure and readability to enhance maintainability and facilitate future feature additions
added a check to initialize tableIsTransactional if it is null to ensure that the tableIsTransactional property is retrieved correctly from the metastore configuration
[ java ] remove unused method in recordingwriter . writefragment .
fix ( cea ) : return all cue if timeus be negative
added alias to datastore metric query so that kairos work
updated CurrencyPair instances by removing the " CAD " and " CAD " suffix and replaced them with " USD " to standardize currency pair identifiers for consistency and clarity
hhh - 11879 close EntityManagerFactory on test teardown to fix resource leak
updated import statements for KafkaSender from ` kafka11 ` to ` kafka ` in Zipkin configuration and tests to align with the latest package structure
added two new test classes , GwtBinaryIntegrationTest and A , to integration test the Gwt binary build process to ensure that the Gwt binary build process works correctly and produces expected results across different environments
added checks to hide loading cause label during mouse event handling and improved exception handling in SQLConsole to enhance user experience by preventing interaction with loading state while providing clearer error logging
reformatted code for consistency and clarity in EnhancedRandomImpl . java and EnhancedRandomImplTest . java to improve code readability and maintainability
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance security property management by managing XML security properties consistently
added default methods to interfaces and implemented them in subclasses to demonstrate inheritance and method overriding with default interface methods
updated SQL query strings to use " * " suffix instead of " LIKE " to enhance clarity and consistency in SQL filtering operations
drools - 3397 dmnsemblerservice . getmlnprofiles should be protect to allow for subclass access ( # 2397 )
fixed - script loading should n ' t be execute on slave node . # 2055
remove the unsafe . setwordfieldvolatile and replace it with unsafe . array _ byte _ base _ offset in the static object .
updated debug log statements to use verbose level instead of debug for various messages to improve log verbosity and provide more detailed information about the number of targets
fix race condition when send proxy packet in target dispatcher
added HTTP _ JETTY _ SERVER _ HANDLERS constant and modified thread pool size in WebServer to dynamically set the maximum number of threads based on user configuration
replace the handling of shortcuts to manage removed shortcuts and bind updated shortcuts more efficiently to improve shortcut management and ensure proper deletion of unpinned shortcuts
remove httpclient bind for non - string value ( # 2745 )
removed the case for android . R . id . home in DetailFragment . java to simplify navigation to the correct fragment
added a check for AndroidMarket ( ) before includingPlayServices to ensure services are only included when the Android market is present
update TableBlockParser to handle leading and trailing whitespace correctly to ensure accurate parsing of tables with out - of - space headers
added bridging header handling to NewNativeTargetProjectMutator and updated ProjectGenerator to use it to improve functionality for bridging headers in the build process
refactor the code to enhance the handling of methods in the dead code structure to improve clarity and maintainability of method - related functionality
added diamond finder option to type inference and created new classes for handling redundant arguments to improve type inference accuracy and handle redundant arguments more effectively
refactor invocation stage trace calls in HighwayClientFilter and RestClientSender classes to unify request handling for better maintainability
removed an unused import of Utils and modified a debug log statement for registering cachemetrics to streamline the code and improve performance by reducing unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper propagation of authentication failures to the application
modify the condition checking for zero in the float comparison to ensure accurate detection of zero difference between two float values
added a local path for " logback . dev . xml " in JoobyMojo and Main classes to ensure proper loading of the logback configuration file
add a new class JaasEventCheck to handle authentication failure and success events to facilitate event capturing in the Jaas authentication process
refactor QuickstepTransitionManager to use a list for managing visible views instead of direct assignments to improve code readability and maintainability by reducing repetitive code
updated the comparison of string distance in ConjunctionSolrSpellChecker and added a test for non - identical StringDistances to ensure the correct exception handling for different string distance comparisons in Solr
replaced HashMap with Map for storing fetchers in ShadowSystemServiceRegistry . java to improve performance and simplify data structure usage
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
bug 10964 : make storage pool command wait longer from 60 second to 5 minute .
http : / / issues . apache . org / jira / browse / amq - 3108 - add jdbc schema to the jdbc info
corrected the spelling of " SQL _ UPDATE " in multiple files to ensure consistency and accuracy in terminology
replaced the synchronized map implementation with a synchronized map implementation to improve thread safety and performance when accessing the schema type cache
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to maintain header integrity during write operations
ignore the licensing demo test because it relies on files available from cru
added directory creation for storage in TestCollector . java to ensure storage directory is available for saving data
set the chunked streaming mode for the HTTP request to improve data handling efficiency during streaming operations
refactor : add test for new basictype syntax checker
hbase - 22211 use org . apache . hbase . thirdparty . com instead of com . google . protobuf in hbase - thirdparty
added a test to ensure that the BeanPopulator correctly identifies nested structures and maintains the expected stack overflow exception
added IOException to the getRemoteName method signature to improve error handling by ensuring remote operations are properly invoked
catch illegalargumentexception when get current owncloud account
refactor WebSocketConnection and ExplicitDemandTest files to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser and introduced a new aspectJ method security interceptor to enhance security configuration by controlling aspect - j behavior with protect - pointcut definitions
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by implementing proper hostname verification for SSL connections
added a remove method in the OHLCSeries class and modified test cases to validate its behavior to ensure that the item removal is implemented correctly and to validate its functionality through unit testing
updated method calls to use invokeUrgent instead of invoke and refactored test case to improve clarity and maintainability of the code
the world destroy joints ( ) method now properly close the joint before destroy it .
add a null check to the searchfilter for when we can not find the phone number .
[ flink - 22398 ] [ test ] add license information for test source reader
added multiple null checks for documents in DocumentsStorageProvider . java to ensure proper handling of missing files and improve error management
added new files ` HookDefinition . java ` and ` JavaHookDefinition . java ` to define a hook definition for hooks to enable registration and management of hooks within the Cucumber runtime
added a private method ` flushIfDeadlockRisk ` to manage buffer flushing behavior to improve clarity and manage potential deadlock scenarios when flushing query results
updated the setExoOptions method to include a boolean parameter for live TV to enhance flexibility in setting Exo options based on live TV status
fixed - rnn decoder remove user from identifier collection ( # 5390 )
added a static constant INVISIBLE and modified the toString method in Color . java , and updated imports in RailButtonShapes . java to improve code readability and maintainability by centralizing color management
add support for count ( * ) with option ( enableNullHandling = true ) . ( # 4767 )
set the deep attribute to - 1 in InternalTransaction . java to ensure that the deep state is properly initialized during transactions
updated buffer appending to escape the name in XML format to ensure proper handling of special characters in names
updated work directory initialization to use configurable values in multiple classes to allow for greater flexibility in specifying the work directory
[ drools - 7252 ] add support for deprecated rule in drl ( # 825 )
do n ' t use dummy label in jmp code , a that should n ' t occur
fix problem in timerange # isalltime ( ) and make it static final
renamed BitDocIdSet class in the codebase to improve clarity and maintain consistency in naming conventions
refactor the connection handling by extracting metric JSON emission logic into a separate method to improve code readability and maintainability by consolidating metric emission logic
updated method calls in DetailFragment for consistency and clarity to improve readability and maintainability of the code
make tank drain logic more robust , when player be not a player
updated CsharpLibrary . java to conditionally handle DotnetLibraryProviderInfo for better compatibility to ensure proper handling of provider information in the rule processing logic
fixed npe when receive a PEPService packet of type ' get ' to ensure that it receives a valid PEPService
add a null check for runtime in the intrinsic graph condition to ensure that intrinsicGraph is only initialized when the runtime is not null
[ beam - 13541 ] fix npe when dataflow have no active
pdfbox - 5624 : detect and seek to last position in brute force search
added constructors to LwjglApplet that initializes the canvas and disables native loading to improve application behavior and control during application lifecycle
updated string representation method to handle null DockerClientConfig to improve code robustness by avoiding potential NullPointerExceptions
fix for http : / / issues . apache . org / jira / browse / amq - 3219 - apply password policy only when ldap authentication be enable
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to use it to enable dynamic resolution of LDAP attributes during authentication
updated Readable . java files to improve code readability and maintainability
replaced the method of reading a PDF document with a more concise method using TestSupport to improve code readability and simplify the document loading process
use correct resource for share menu item and share icon in captureactivity
fix to detect java 9 + with major java 8 . introduce regression from last commit
connect to is _ jdbc41 only if the driver be a non - jdbc 41 compliant one
genericcontainer : fix typo in javadoc ( # 1897 )
replaced Set with ArrayList for filtered classes in Enclosed . java to improve performance and memory efficiency when adding classes to a list
added multiple @ Override annotations to the authentication and protocol validation classes to ensure proper method overriding and improve code readability
reformatted the variable declarations for consistency to improve code readability and maintainability
always use application ' s working directory for database , and a small bug fix
modified JavacParser to return an empty list instead of a block statement to streamline the code by eliminating unnecessary empty block creation
added handling for " AFTER " and " BEFORE " keywords in the User class and updated related tests to improve user retrieval functionality based on the creation time
modified Test15FloatJNIArgs . java file to improve test coverage and functionality
refactor PlotPlayer and TaskManager classes to use direct variable names instead of raw strings to improve code readability and reduce redundancy in version management
nifi - 12413 fixed an off - by - one error in mockprocesscontext . decrypt
[ java ] throw a meaningful exception if call during archive creation , which could result in an infinite loop .
added a null check before merging the dependency in OpProcFactory . java to avoid potential NullPointerExceptions when the dependency is not present
updated SslBytesServerTest to include a timeout of 10 seconds to prevent test failures caused by timing issues
fix s / connectiontimeoutmillis / connecttimeoutmillis / in a javadoc . resolve issue 284 .
refactor ` RealtimeIndexingCoordinator ` and ` StreamProviderConfig ` classes to improve method naming consistency to enhance clarity and maintainability of the indexing functionality
modified FailureWatcher to check if exportedData is null before calling writeTo to improve null safety and prevent potential NullPointerException during data export
refactor popup position calculation and add visibility check for popup visibility to improve accuracy of popup positioning and ensure proper visibility management
updated message to clarify that restarting IntelliJ and improved tool window handling to enhance user experience by guiding users on restarting the IntelliJ environment
added a platform check for Windows when setting the prevent sleep checkbox to ensure that the prevent sleep feature is only enabled for supported systems
updated servlet package imports from ` javax ` to ` jakarta ` to comply with the latest Jakarta EE specifications
added parameters for start and end images based on layout conditions to enhance app launching behavior across different device orientations
added full - screen exclusive mode state management to the XWindow and XWindowPeer classes to improve user experience by ensuring the correct display state based on exclusive mode
fix played _ duration string handle in stringutil . played _ string ( )
added URI handling functionality to DagUtils for DAG processing to enhance security by ensuring required URIs are added for authentication
( chore ) camel - base - maven - plugin : use map . entryset ( ) to avoid inefficient map iteration
[ java ] trim the thread name to remove leading and trailing spaces when setting the thread name to ensure proper thread handling by removing leading and trailing spaces
updated the error message to include " to " in GpsMainActivity to improve clarity by specifying that the information should be available to the file
[ hotfix ] [ javadoc ] fix typo in job class javadoc
add a new abstract class ` Unused ` with methods for methods in ` Main ` to check for unused types to ensure compatibility with Java ' s AutoValue implementation
ambari - 21143 . update the parameter name of hbase _ master _ host to hbase _ master _ hosts ( aonishuk )
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused interfaces to streamline the codebase
modified the performJoin method to return a list of GenericRecords instead of a single GenericRecord to allow handling multiple output records efficiently
updated boundary conditions for maxDelegateLockPeriod in ProposalUtil . java and adjusted related return values in DynamicPropertiesStore . java to ensure delegation lock period is limited to a maximum of 10512000 milliseconds and improve type safety
do n ' t allow to configure nicsfrom , nicsprofile , and nicprofiles to be zero .
removed initialization of CmcExchange and modified applySpecification method to streamline the exchange configuration process and improve code clarity
updated the configuration handling in ` GossipLocalNode . java ` and changed constants in ` Constant . java ` to improve clarity and consistency in managing seed addresses
make tpc configurable through sysprop ( # 15390 )
bump up swagger - ui version for 4.2 ( # 5195 )
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality of big integer operations and facilitate modular arithmetic
refactor key initialization logic in NamedObjectList . java to ensure a default value is used when the name is not provided
update cleanupEmptyDir method to cleanupEmptyTableDir for better clarity and consistency to improve code readability and maintainability by using a more descriptive method name
refactor AsyncCache and Cache classes to improve code readability and maintainability
added RCFileInputFormat import and registered it in Kryo to enable support for handling RCFile input formats in the serialization process
added methods to retrieve Java type and category of a column in TypeMapperComponent to enhance type mapping functionality for improved column handling
added error handling for invalid host headers in Request . java and introduced a corresponding test in RequestTest . java to improve robustness by throwing a proper HTTP error for invalid host headers
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for finding time zones to improve code maintainability and leverage existing utility methods for better test accuracy
remove some unused method in standardop ( # 1472 )
changed variable declarations and methods in SegmentCoreReaders and SegmentReader classes to improve code clarity and ensure consistent directory handling
added main thread profile checks to AggregateDao and AggregateRepository classes to improve management of main thread profiles during rollup operations
added a check to prevent annotation definitions from Buck rules with required _ for _ source _ abi to ensure compliance with required rules for non - required rules
updated the constant NAME from " greekLowerCase " to " irishLowercase " across multiple filter factory classes to ensure consistent casing for improved readability and consistency
fix javadoc warning from r1715839 bug 58365
change internal logic to use discoverysearchrequestprocessor , due to dspace 4.0
8254982 : ( tz ) upgrade time - zone data to tzdata2020c
updated SurfaceSyncGroup instantiation to include a specific name " TaskBarController " to improve clarity on the context of the taskbar ' s controller being displayed
updated GridFsTemplate to use file ID directly instead of ObjectId to simplify ID retrieval and improve code clarity
added unit tests for ` totalSize ` and ` BytesSoFar ` retrieval in ` ShadowDownloadManagerTest ` and implemented methods in ` ShadowDownloadManager ` to track and retrieve total sizes of downloads
modified the enter key handling logic in TextField . java to improve clarity and maintainability to streamline text insertion by consolidating enter state checks
fix npe in groupnodeviewmodel when target = = null
added a method to handle the afterSetStatements method in Block and updated return behavior in BlockLexicalContext to improve statement state handling and ensure correct terminal state management during block operations
added hashCode method to IntervalXYDelegate and modified comparison in XYSeriesCollection to improve hash computation accuracy and ensure proper equality checks
close hazelcast in clientqueuestostopetest [ hz - 1053 ] ( # 21849 )
removed redundant method calls and updated method names for clarity in CloudWatchAppender and RegisteredServiceScriptedAttributeFilterTests to enhance code readability and maintainability
replace Gson ' s serializeSpecialDoubleValues method with GsonBuilder ' s serializeSpecialFloatingPointValues method to ensure compatibility with floating - point data serialization
added ` waitToProduceOneBlock ` and ` waitProduceNextBlock ` calls in ` HttpTestZenToken002 ` and ` WalletTestZenToken007 ` classes to ensure block production is appropriately awaited in the test environment
modified language tag canonicalization and added tests for language tags to improve accuracy in language tag processing and verification
cloudstack - 8229 : allow ssh to agent to be configure ( # 5078 )
refactor ScheduledAction class to remove public access modifiers and simplify access modifiers to enhance code readability and maintain encapsulation practices
fix # 519 move PagerSlidingTabStrip import to viewpager - library
added a condition to check if the string does not contain a hyphen to ensure that valid input handling for more flexible search functionality
updated sort column labels to use " Natural column order " and improved UISettings methods to enhance clarity and consistency in sorting preferences
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` to optimize array copying for improved performance
updated the write method to include HTML encoding to ensure that the remote address is not whitespace
[ smarthome ] fix itemstatetriggerhandler ' s check for invalid path ( # 3340 )
remove unnecessary sync block thanks to lgtm . com
added threading support for file moving in Hive to enhance performance by allowing threads to move files asynchronously
added new trigger methods with an argument to WrapTimer class to enable periodic timer execution with configurable period options
[ flink - 20542 ] [ table - common ] support localtimestamp and localtimestamp type in type parameter
added verbose option to error handling in AbstractStatusReporter to enable better error reporting based on user - defined verbosity settings
add menu toggle to item control , close # 483
cloudstack 3.0 api : limit on which vpn connection can not be esitablished between different account and customer gateway
removed redundant error handling logic in CursorReadingTask and updated related tests to ensure proper exception propagation and improve code clarity
pdfbox - 1975 : check for encrypt pdf document and log error if decryption fails
fix zk watch thread issue ( # 10377 )
rename AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve clarity and consistency in naming conventions
update the URI handling in the deleteItem method to use the ContentUris class to improve URI management and ensure proper deletion of content URIs
refactor Java6Assertions and Conditions classes for improved readability to enhance maintainability and ease of understanding
changed the method signature of replaceOrderBulk from a Collection to a List of String to improve flexibility in handling order bulk operations
refactor ` enterDefault ` method to ` enterIdentNode ` and introduce a new method ` enterFunctionNode ` to improve method clarity and functionality for handling function nodes
added a new class J9ConstantHelper and updated ObjectHash to utilize it for runtime flags to improve accessibility and maintainability of runtime flags in Java
add a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for testing concurrent modification behavior to ensure proper handling of concurrent modifications in multi - threaded scenarios
re - add the ability to remove offline roster item from the transport .
hive - 16315 : optimize tabledesc . getproperties ( ) for non - overlay table ( eugene koifman , review by jesus camacho rodriguez )
removed extra whitespace in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check for extTypeCustomDesers in MessagePackFactory and enhanced test cases in MessagePackFactoryTest to improve robustness by preventing potential NullPointerExceptions during deserialization
remove system property setting for mock server log level to WARN to improve visibility of log messages for better debugging
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test execution and avoid conflicts
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to improve code clarity and reduce unnecessary dependencies
updated scoreMap to use String - based types and added termScoreMap for improved scoring handling to enhance type safety and clarity in scoring management for search terms
replace bitwise operations with direct comparison for parameters in U64 . java to simplify the code and ensure correct handling of data parameters
fix the font size and font size in the example app ' s main view
updated the condition in notifyChange to include support for dark text to ensure the change notifications accurately reflects the text theme
[ flink - 25937 ] [ checkpoint ] fix the bug that checkpointrequestdeider return early if all pending request be pending
updated the maximum pool size and renamed constants for idle time to improve clarity and maintainability of the code
replaced filter with anyMatch for better performance in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to enhance code readability and efficiency by using anyMatch for better performance
[CV ] add not windows and not arm requirement to the test
http : / / issues . apache . org / activemq / browse / amq - 2613 - allow to configure the prefetch size on the underlying connection factory
modified the getReturnValue method to throw a Throwable and updated the exception handling accordingly to improve error handling by throwing the underlying Throwable instead of just returning a null value
added a new annotation ` Issues ` with a repeatable annotation to the ` Issue ` class to facilitate repeatable handling of issue data in a multithreaded environment
corrected a typo in the user property key from " hcat _ user " to " webhcat _ user " to ensure accurate user configuration for improved security
modify socket connection to use unresolved address conditionally to ensure correct address resolution based on system property
[ hotfix ] [ runtime ] fix checkstyle violation in slotstatus
replaced the import of ClassUtils from Apache Commons Lang with Apache Commons Lang to simplify dependencies and improve code maintainability
replace HashSet with LinkedHashSet for protocols and cipherSuites in SslContextFactory . java to ensure consistent ordering of protocols and cipherSuites
added a static final reference to systemResource and updated the logic to return it to ensure that a system resource is returned when it is the same as the one used as a resource
[ java ] limit the size of plaintext segment to 16 byte when decrypt data .
added a test for circuit breaker invalid fallback URI and updated filter logic to ensure that the circuit breaker can throw an exception for invalid URIs
fix # 4269 : avoid sslcontextfactory violation ( # 4278 )
modified the setSizeLimit method and removed the call to resetBytesReadCounter to optimize byte reading by setting the size limit to allow for more efficient byte handling
pull the getters and setter from standardprotectionpolicy to protect against the change for the use - case
( chore ) camel - opentelemetry : use logger instead of system . out
[ beam - 12105 ] remove ebs - hvm load balancer test ( # 12105 )
changed method name from setAlarm to setRingtone in AlarmReceiver . java to improve clarity and consistency in method naming
added exception handling for file creation in DiacriticTest . java to ensure graceful failure and inform users about file creation configuration issues
hhh - 14364 - fix test failure with oracle 11
updated file handling and error management in TextureUnpacker . java to ensure safe access to the Atlas file and improve error handling clarity
refactor AmbariManagementControllerImpl to use cluster write lock for concurrent access to improve thread safety when modifying service configurations
updated FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to enhance security handling capabilities
added unit tests to verify statement closure behavior to ensure proper resource management and prevent potential resource leaks
remove inputstream . marksupport ( ) check in inputstreambodygenerator since it be no longer need
added logic to remove pre - deleted databases from the schema map in ClusterSchemaManager to ensure that only outdated databases are retained for processing
fix bz 65384 - avoid flush empty chunked writer
updated conditions in EnhancedBrowseFragment and added a delete item confirmation dialog in FullDetailsFragment to ensure that items are only deleted when the base item is properly identified
added a new interface ` RuleBank ` and modified ` RuleFinder ` to implement it to improve rule handling capabilities in the CSS parsing framework
tweak to recover from untested test suite .
added TestMonomorphicObjectCall and Object classes for testing native method calls and object handling to facilitate testing and management of native objects in the Java environment
replaced direct session removal with a call to toFront ( ) method in DataBrowser and Desktop classes to improve code clarity and separation of concerns for better maintenance
fix the nullpointerexception in the shouldseek method when the store do n ' t contain the column family
[ hotfix ] [ runtime ] remove the need to use the root directory in the taskconfiguration
modified the ` AlterTimeSeriesStatement ` constructor to accept a boolean parameter and updated the corresponding setter method to enhance flexibility in handling the alteration of time series statements
alexeibarantsev : fix # 1313 matchtext condition should not display whole content a regex
fix routetablebuilder can not be initialize on shutdown ( # 4590 )
avoid concurrent modification error by copy params map to streamline putifabsent method
( chore ) camel - test - infra - jms : replace string with char [ ] for good flexibility
bug 14215 : api server return incorrect list of child domain from regular user instead of not search for system vms
remove ` ` tolerance ' ' utility method from Counters . java . modified equality checks to use ` ` = ' ' instead of ` ` Math . abs ( ) ' '
updated the parameter name in the initialize method and added warnings to the BasicTumbleStatus to enhance clarity and ensure that warnings are preserved during the simulation status initialization
add truffle boundary to getcurrenttimenode and use it to access system . currenttimemillis ( ) .
delombok now read ` ` var ' ' from the ast tree properly . fix issue with ` ` type ' ' in the ast .
phoenix - 4675 : fix nullpointerexception in lrucictionary when init size be too small
8053963 : ( dc ) use datagramchannel . receive ( ) instead of read ( ) in connect ( )
testqueryns : migrate queryns module to junit 5 ( # 4422 )
add a new file NutchServerInfo . java for managing NutchServerInfo to facilitate the management of server - related job information in the application
replaced offset and length attributes with a direct copy of attributes in EdgeNGramTokenFilter to simplify attribute management and improve code maintainability
added timestamp handling to multiple query components in CqlInserter and ThriftInserter classes to enable accurate timestamp representation in query results based on user - defined settings
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in the use of BigInteger type
fix ( num ) : int2rgb , int4bit and int64bit to support negative value
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for new IP address ranges
added checks for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper . java to ensure proper handling of SQL exceptions related to constraint violations
[ issue # 4193 ] fix some formatting error , # 4193
added methods for adding and inserting tabs with specified icons in a panel to enhance tab management functionality by allowing users to specify their component sizes
replaced array size specification with zero - length arrays in multiple files to improve performance and reduce memory overhead during array conversion
[ hotfix ] [ runtime ] pass taskmanagerruntimeinfo into mockenvironmentbuilder for test
add ' if ' to break the mavenvisitor logic ( # 772 )
updated test cases to reflect new mock variable names and added necessary updates for selector and rule data to improve clarity and functionality of test cases related to data updates
added a new file FormatCheckingTest . java to validate Java class name format errors to ensure proper handling and reporting of ClassFormatError exceptions
updated line number assignment logic in CodeGenerator . java to enhance clarity and maintainability of line number handling
added exception handling around property retrieval in ConfigHelper . java to ensure robustness by catching potential exceptions during configuration retrieval
added methods to toggle between strings and commands in the RadioButton class to enhance flexibility in managing radio button selections
reduced the size of the cache in LRUCache and increased the chunk metadata cache size in MetadataQuerierByFileImpl to optimize cache management and improve performance for chunk metadata caching
int - 708 , int - 708 : fix documentation for default capacity and messagebus
camel - 5040 : fixed npe in osgomanagernamestrategy when no symbolic name be specify in bundle
add support for mode contribution with resource at startup ( fixes # 3418 )
added error handling for adding and removing the shutdown hook in IOManager and improved waiting logic in YARNSessionFIFOITCase to enhance robustness and prevent application from hang during shutdown operations
replace ` projectRoot ` with ` androidManifestPath ` and update related methods to align the code with the new Android manifest structure
abstractreplyproducingmessagehandler should propagate ` ` notpropagatedheaders ' ' header if present
refactor CompareMode class for improved comparison logic to enhance performance and maintainability of the comparison process
added HasTests interface implementation to Arg class in RustBinaryDescription and RustLibraryDescription to enable better testing capabilities for build targets in the Rust rule structure
remove the suffix from the placeholder and error drawable resource in the FileMessageVH class to simplify the icon usage and improve clarity
refactor OnExitTest . java to enhance exit handling to improve code clarity and maintainability
added a method to recreate the taskbar when the user preference changes to improve user experience by ensuring the taskbar is refreshed when the user preferences change
refactor heap dump functionality to support IBM VM environments to enhance compatibility and compatibility with different Java versions
fix session not close if commit fails in mybatisproducer and commit fail after session close . fix # 320
simonstewart : fix the problem with close the ie driver in the ie driver .
replaced JDK5 source version with Java 5 for loop in the implementation to ensure compatibility with the latest Java features
added a line to set the application state to UNAVAILABLE to ensure proper handling of application state in the application
updated assertions to check position and limit in multiple buffer - related classes to improve bounds checking accuracy and prevent potential errors in buffer operations
removed the call to ` toUri ( ) ` method in ` ConditionalResolverMergeFiles . java ` to simplify the code by directly using the string representation of the directory
added multiple ` setEmpty ` methods across various array and filter classes to enhance functionality for managing empty arrays and improve memory management
changed enum declarations to public access in VirtualAuthenticatorOptions . java to allow external access to these enums for better usability
updated document handling in TestMultiPhraseQuery to use a new Document instance to ensure correct tracking of documents and maintain expected count in tests
# 319 update reservationcontroller . assigntickets to use paymentproxy . offline . status when assign tickets
added a timeout thread handling mechanism in HttpChannelState . java to ensure proper management of asynchronous listeners during timeout operations
replaced printStackTrace ( ) with logging warning ( ) and updated logging statements to use debug level instead of info to improve log detail for better debugging without excessive logging
updated package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
update the default quorum value when no consistency be applicable to local _ serial
[ feos ] add support for 3.0 . x without a serial number
added a new ` Wait ` class and updated ` PlainSelect ` to support setting and retrieving wait values to enhance SQL parsing capabilities by allowing specification of timeout settings
refactor Neo4j to use AttributeController for node and edge data handling to enhance attribute management and improve code maintainability
added a null check for serverName in the session manager to prevent potential NullPointerExceptions when serverName is not set
nifi - 7181 : move rocksdb metronome class to controller package
updated the method call to retrieve the boolean value from results to ensure consistency in accessing the result object ' s property
added a log statement to display the javascript execution and updated the URL validation logic to improve debugging capabilities and ensure the URL does not start with " javascript : "
camel - 4289 : fixed the camel - cxf unit test error on macos
modify column modification logic in LoadTestTool . java to ensure correct handling of column definitions based on new column descriptor
implemented the Disposable interface in the Texture class to enable handling of disposable text assets
added null checks for tldBundleLocation and updated related classes to use WebBundleDeployerHelper to improve robustness and ensure proper handling of web application registration
refactor checkgoquorumcompatibilitymode into a separate method to improve code readability and ensure genesis file be not empty
replace IOException with Throwable and modify the handling of IOException in HttpInput . java to enhance error handling by providing more informative exceptions
added a condition to check if the country code is " JP " in the LocaleTest . java file to ensure that the JVM is now available as part of era to avoid issues
updated response type in ApiOperation annotations from Wrapper to HostResponseWrapper across multiple services to improve clarity and consistency in API response representation
added boost comparison to FilteredQuery ' s equals and hashCode methods to ensure accurate hash code calculation based on the boost value
removed unnecessary line breaks in the FileMenuFilter constructor to improve code readability and maintainability
add bind for symbol table ( fix data - param - showlogging = true )
add a new Java file for testing CMS class unloading behavior in a garbage collection scenario to verify that the CMS class unloading is disabled and the full GC is triggered correctly under specified metaspace and young generation sizes
fixed npe in spongepowered event factory when no entity be available
refactor ColumnMapKeyMappingPreparedStatementSetter and MultipleColumnJdbcKeyCollector classes to use ItemPreparedStatementSetter instead of KeyMappingPreparedStatementSetter to improve consistency and maintainability of prepared statement setting functionality
optimize the range creation in compactionstest
add error handling for invalid resource types in MiniAapt . java to improve robustness by throwing a ResourceParseException when an invalid item resource is encountered
[ dubbo - 4370 ] add spel support ( # 4391 )
fix check for misuse of bigint type in localexecutionplanner
bugfix # 218229 , use lookup . getdefault ( ) . getdefault ( ) instead of javax . swing .
updated multiple Java files related to Conscrypt and removed an unused import to streamline code and enhance maintainability by reducing dependencies
updated reference variables to use ` 0L ` instead of ` 0l ` for consistency in type handling to ensure proper memory allocation and prevent potential errors when attribute resolution fails
[ java ] remove java 1.5 and java 6 from the setuphid test jar file
[ multistage ] [ multistage ] [ table ] fix projection pushdown rule when use dynamic source
replaced direct calls to localized names with a sorted list of localized names to improve code clarity and maintainability by using a centralized list
fix : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 848 )
added a conditional check for live streaming before refreshing preferences to ensure shared preferences are updated appropriately based on user settings
added the exception cause to the MappingException constructor to improve error reporting by providing more context in the exception
( chore ) camel - core : file test fix and cleanup
updated generic type declarations for CompositeType and DynamicCompositeType to use wildcards to improve type safety and prevent potential ClassCastExceptions
added a transport support check in GitClientApplication and updated repository URL handling in RepositoryUrlPanel to enhance transport functionality and ensure proper permission checks for repository URLs
added delegation names to multiple consumer classes and modified the reason string in TouchInteractionService to enhance clarity of delegation identifiers and improve logging consistency
fix : do n ' t apply version comparison when there be no parent pom
8309352 : [ testbug ] jfr testlargepageuseforheap . java fail with some linux kernel
bug 10929 : check db existence before migration of event
added IOException handling and modified the sample configuration directory path formatting to ensure compatibility with Windows systems in directory path formatting
implemented a new test class for ObjectStreamClass functionality to verify serialization behavior with custom objects
refactor conditional checks in ZoneAwareDiscoveryFilter to simplify logic to enhance readability and maintainability of the code
[ trace ] downgrade log level to warn in opentelemetrytracer
added a toString ( ) method to the Generator class to provide a clearer representation of the generator state
updated URI handling to correctly quote commas in the ` doquote ` variable to ensure accurate parsing of URI authority strings and improve code readability
added a check for non - existing resources in ClusterControllerImpl . java and implemented a test for NoSuchResourceException in ClusterControllerImplTest . java to ensure that requested resources do not exist to prevent runtime errors
refactor response handling in AccepttoApiUtils to check for null responses before processing to improve error handling and avoid potential null pointer exceptions
added conditional logic to allocate or set vertex size based on application type to ensure compatibility with devices running Android versions below 5
update references in SybaseASADatabase . java to ensure consistency and maintainability of the code
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated related methods to ensure compatibility with backward compatibility while maintaining backward compatibility
added a new method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` sd ` variable for better functionality
added immutable and extended pending intent flags in AndroidImplementation . java to ensure compatibility with various Android SDK versions
added methods to append read column IDs and updated configuration handling in HiveFileFormatUtils to improve code clarity and maintainability by consolidating read column ID configuration management
replaced occurrences of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java ` to ensure accurate retrieval of IPv4 multicast addresses for improved security
added multiple instances of DisplayTemporaryToast ( ) in SavedExperiments . java to provide a user - friendly toast message when an image is saved
added version resolution logic to ensure the ServiceModule ' s version is set to ` parentInfo ` when no version is specified
added a new test class RawSerializationTest for Gson serialization testing to ensure the correct JSON serialization of various collection types using Gson
kristianrosenvold : rename seleniumserver to sslcertificaterenerator , so it can be instantiate with a sslcertificategenerator interface
modified the iteration method for processing replies in ExpansionViewHelper to improve code readability and ensure proper padding for the status view
increase expiry in url test to 60 second
add a test method for the NGramFilterPayload function to validate the correctness of the PayloadAttribute handling in the token processing
refactor AclImpl class to improve code structure to enhance maintainability and readability of the code
added a new test method to verify array size consistency between instances in EasyRandom to ensure that the randomization logic behaves correctly with different array sizes
cloudstack - 8259 : fix npe , log failure to start / stop vm
added a ThreadLocal for managing periodic write operations in SslConnection . java to improve handling of concurrent write operations in a multithreaded environment
refactor code to improve the structure and readability of the Actor class to enhance maintainability and ensure proper handling of actor parent relationships
log rolling - update step failure on deployment group name and message
[ hotfix ] [ table ] fix javadoc typo in sinkprovider
added AuthenticationFailureUsernameNotFoundEvent class and updated DaoAuthenticationProvider and LoggerListener to handle authentication failures to improve error handling for missing username during authentication
refactor AtMostXVerificationTest . java to improve code clarity and maintainability
updated default QParserPlugin to use " qParserPlugin . NAME " instead of " lucene " to ensure consistency and clarity in default QParser configuration
updated SimpleDateFormat instantiation in WeekDateTest . java to use Locale . US to ensure consistent date formatting across different locales
added a new method ` isInitialized ( ) ` to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` while also creating a new test class ` LocalsCompletionTest _ template ` to improve code clarity and functionality by decoupling the initialization check logic and implementing a template for testing purposes
updated the ` test _ fetch _ token _ from _ authorization _ code ` method to include a default value of ` shouldHaveIdToken ` to ensure that the token is validated against the expected ID instead of being false
added transaction management methods and refined transaction handling in DatabaseAdapter and GncXmlHandler to improve account management and ensure consistent transaction handling during operations
replace byte array reading with ByteArrayOutputStream for reading bytes to improve performance and reduce memory usage during file reading
fix the npe of the messagingtemplate # send method when the client have not receive .
added an override for the isAcceptable method in AutoFormatVisitor to ensure compatibility with source file type checking
updated TestIndexWriterMergePolicy to set maximum buffered docs and ram buffer size to improve performance by optimizing buffer allocation for better resource management
added a method to update witnesses and created a test for updating witnesses in the ManagerTest class to ensure accurate job management and validate the functionality of witness capsule updates
hbase - 17492 fix possible NoSuchElementException in CopyOnWriteMap . java to ensure robustness by preventing potential index out of bound
- remove level parameter from flume logging method ( we already log at info , not debug ) .
added reindex collection test and updated authentication metrics minimum assertions in BasicAuthIntegrationTest . java ; modified DaemonStream . java to use a ExecutorService for stream handling to improve testing accuracy and reliability of authentication metrics during reindexing
use linkedhashmap in dependencyutil to preserve order of graphnode
add a jersey error mapper ( # 4162 )
modified header validation logic in Http2TestBase . java to use a utility method to improve code readability and maintainability by centralizing header validation logic
added a switch - case structure to handle specific Java property keys in systemProperties to improve property management by skipping specific keys for better compatibility
changed method signatures to accept ` CharSequence ` instead of ` String ` in ` StringSubject ` to improve type safety and flexibility when handling different character sequences
8309240 : [ jvmci ] jfr : add jvm information to checkgraalintrinsics list
rename IntUtilsTest class to PrimUtilsTest to improve clarity regarding the purpose of the test class
updated the connection factory logic in PersistenceManagerProvider to use ds2 instead of ds to ensure correct database connection handling based on the forCompactor condition
updated DeploymentOptions class to improve configuration handling to enhance application performance and maintainability
fix market icon size on tablet
refactor try - with - resources to use try - with - resources in XmlParser and YamlParser to improve code readability and ensure proper resource management
added support for the COALESCE function in RexNodeConverter and registered it in SqlFunctionConverter to enhance SQL functionality for handling coalesce expressions in the conversion process
camel - 7467 : fix the unit test error of camel - hl7
added context class loader management and adjusted proxy factory initialization in JavassistProxyFactoryFactory to ensure proper class loading and exception handling during proxy factory generation
replaced the constructor of DefaultDateTypeAdapter with a constructor that initializes the format field and synchronized the serialize and deserialize methods to improve thread safety and ensure consistent initialization of the adapter
refactor formatting of method declarations in DocumentUtil . java for consistency to improve code readability and maintainability
updated HttpClientRequestBase to simplify URI handling and query parsing to enhance code clarity and maintainability by reducing redundant checks
removed the filterOldEntries method and its associated logic from FeedRefreshUpdater . java to streamline the entry filtering process for improved performance and readability
hbase - 14811 change log level from fatal to warn in log . close ( ) of walexception
refactor NodeMap to use a class NodeMapIterable for iterator functionality to improve code organization and maintainability of iterator functionality
replaced ` predicate ` with ` subPredicate ` for clarity in code to enhance readability and maintainability of the code
added a check for non - empty fields before adding it to operations to avoid potential NullPointerExceptions when processing fields
of - 1699 : display ' admin ' in the server info screen instead of default one
replace MultiFields with SolrIndexSearcher for retrieving terms to improve performance and reduce dependency on MultiFields for better performance
updated the ` toString ( ) ` method to include class name and identity hash code to enhance debugging information by providing more context about the bean
simplified the retrieval of the primitive type by removing the line number check to improve code readability and streamline the type resolution process
remove string . hashcode ( ) , it be not need for uninterruptible code
updated timeout values in SedaBlockWhenFullTest . java to increase the offer timeout for better synchronization during tests
add a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level documentation for resource management in the Lucene framework
update calculation of readLen in MessageUnpacker . java to ensure correct positioning based on buffer size constraints
align with new nullable dependency in test
updated SQL query to include user filter to ensure icon retrieval is user - specific for data integrity
[ rocketmq - 368 ] fix defaultmqproducerimpl # getbackpressureforasyncsendsize check correct value
do n ' t show whitelisted resource for classfiles only
fix baremetal foreign key issue in 4.4 . 2 upgrade path
removed the IJava2DRenderer interface and simplified the Java2DRenderer class declaration to streamline the code and eliminate unnecessary complexity
add ontear down callback to audio listener in defaultaudiosink
added scheduled thread pool executor and modified upstream task handling in UpstreamCacheManager . java to enhance performance and maintainability of upstream task scheduling
refactor StreamType class to improve code readability to enhance maintainability and simplify future updates
enhanced assertion in Recording . java to include an additional context message to improve debugging by providing context on the output verification failure
updated FilestorePage and RootPage to handle admin roles more effectively to improve accessibility and user experience when the filestore is not authenticated
camel - 9090 - camel - elasticsearch : ignore test that fail on ci
fix for http : / / issues . apache . org / activemq / browse / amq - 2287 - allow to use reflection to resolve component .
change style to make ` ` buy ' ' not ` ` button ' ' not ` ` right ' '
restlet producer : if invalid url do not match the path , camel should return 404 instead of 404
fix test flakiness with coinbase .
removed the Serializable interface from BTreeMapJava and updated related tests to streamline serialization handling to enhance code clarity and ensure proper exception handling during serialization
improve error message if a nullpointerexception occurs
rearranged conditional check for commandMode in Main . java to improve readability and maintainability of the code
replaced mFilesAll with mFiles for file index retrieval to ensure consistency in file index usage across the application
deleted the PlainVerifier . java file to the project is no longer needed for the current implementation
added a condition to close the system windows when triggered from the alt tab to ensure that the functionality is properly closed when triggered from the AltTab
updated DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog display functionality and manage preferences more effectively
updated MimeUtil to use UTF - 8 encoding when parsing charset in RestAdapter to ensure proper handling of character encoding in API requests
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper initialization sequence and prevent memory leaks
replaced manual serialization code with utility method for LogFormat serialization to streamline the serialization process and improve code readability
updated logical generator logic to use ` previousUntilLastClause ( ) ` and improved fill handling in ` GroupByFillDataSet ` to enhance duration parsing accuracy and allow for additional fill types
updated array size validation logic and added handling for negative lengths in JAXWSExceptionBase . java to ensure proper exception throwing for negative array sizes and improve argument list management
test : migrate ctunresolvedimporttest to junit 5 ( # 4520 )
updated thread join duration from 10 seconds to 60 seconds to allow for a longer wait time before the thread execution completes
[ flink - 23738 ] [ runtime ] change default jobmanager . scheduling . strategy . type default to ' region '
added title handling and updated i18n safety annotations in multiple classes to enhance user experience by providing a consistent title across activities and improving localization
replaced Apache Commons Logging with Apache POI Logger in POIFSFileSystem . java to improve logging capabilities and maintain consistency across the codebase
instar motion detection , replace old alarm with new one and update the channel state to improve clarity and functionality of alarm handling code
use nanotime to remove map entry from localmapstats ( # 12479 )
modified the status check in Response . java to use a switch statement to improve readability and maintainability of the code
modified the way javac locations are located in CheckResourceKeys . java to improve accuracy of javac location retrieval
add project name to stable channel api ( # 621 )
added a new test class ` DeprecatedStubbingTest ` for verifying stubbing behavior to ensure proper functionality and interaction of mock objects in Mockito
updated import statement for DispatcherType from org . eclipse . jetty . server to javax . servlet to ensure compatibility with the latest Jetty API changes
minor change to mt / scripts - private / add support for npml / nx interface
add boolean system property to allow rsa key exchange in fips mode
updated variable names from ` output _ reader ` to ` reader ` for consistency to improve code clarity and ensure proper resource management
[ refactor ] remove the access token when an error occur ( # 10971 )
updated interpolator references in TaskbarEduView . java to use EMPHASIZED instead of AGGRESSIVE _ EASE to improve animation consistency across the application
[ iotdb - 6125 ] [ iotdb - 6125 ] support updatesegionlocationplan during confignode startup ( # 9188 )
added a new file ` FileDialogLeakTest . java ` implementing a test for FileDialog to ensure proper resource management and cleanup of the FileDialog instance
hbase - 21076 addendum : move testopentableincoprocessor to the coprocessor package
[ gr - 32200 ] fix trufflefeature support uninterruptible method .
[ flink - 24552 ] [ protobuf ] fix derive row type method from the pb message
update condition in DrillSidewaysScorer . java to check for non - null dimensions before accessing disi to ensure that the dimension ' disi ' is valid before proceeding
fix sourceinfo refresh race between test
fix error message when jdk 9 be detect ( # 4821 )
fix broken test by remove expect exception
updated the method call from ` isFalse ( ) ` to ` isTrue ( ) ` for end - to - end encryption keys existence to improve clarity and accuracy in the condition being evaluated
added menu item handling for the home button in DirectMessageConversation to improve user navigation by allowing users to navigate to the home screen directly
added user handling functionality and protocol version adjustments in the RpcServlet and RpcUtils classes to improve user management and ensure proper authentication handling
added a @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable the test for amd64 or x86 _ 64 architecture to ensure compatibility with amd64 architecture
updated the handling of the notFound method to use the originalStartClass to ensure the strategy is accessed without relying on the original class
add new local to try / catch block to preserve register
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl . java ` to improve code clarity by using a more appropriate method for handling asynchronous responses
Known look and feel : use default look and feel ( nimbus )
fix a bug in the regex that cause the version field to be invalid
refactor AnimatorListenerAdapter implementations for improved animation handling to enhance code clarity and maintainability by consolidating alpha and translation logic
updated exception message to include version instead of base58 to improve clarity of error reporting for network availability
fix to edit the extra data for the offer
modified the creation of milestoneParameters to use ` newOpenTicketsParameter ` or ` newRepositoryParameter ` when the milestone is open to ensure the correct milestone is used based on the state of the milestone
fix wood pipe crash when wood pipe have more item than 80
added a method to retrieve cluster key and updated the getStateMachineClusterInstance method to include blueprint name and version to improve functionality for managing cluster information within the state machine
modified the ` downgradeAllowed ` variable to default to ` true ` and added a test for the ` isDowngradeAllowed ` method in ` UpgradePackTest ` to enable dynamic downgrade handling and ensure the upgrade process operates correctly without downgrade
updated QName and NameType usage across multiple classes for consistency to ensure accurate entity type handling during XML scanning operations
allow to emulate system load library from the classloader ( # 6370 )
replaced direct collator usage of APP _ NAME _ COMPARATOR with a new getAppNameComparator method in LauncherModel to improve code readability and maintainability by centralizing the comparison logic
add directory check on fileinputstream and create it if it do n ' t exist
refactor the ` doTest ` method to include detailed output in the assertion to enhance test clarity by providing more context in assertion failures
tidy up routebuilderfinder and make it less complex to use directly from camel - spring
updated descriptions to clarify the requirement of reporters based on identifier - based configurations to enhance readability and maintainability of the code
hbase - 28009 fix testfulllogreconstruction failure by disable dfs
added reuseAddress property and its setter methods to DatagramSocketOptions to enhance flexibility in configuring transport settings for DatagramSocket
modify server shutdown message to use the actual shutdown message from the server config
[ java ] remove deprecate locatable interface from the selenium api
updated error message to clarify that the field must be searchable and has docValues to improve error messaging for better clarity and debugging
replaced equalityPredicateColumns with predicateColumns and updated related logic to streamline predicate handling for improved clarity and efficiency
reformatted code in HelloMessage . java for consistency to improve readability and maintainability of the code
fix indentation by add a space between closing brace and newline
add test to make sure we can set a custom reader for parquet reader
added support for GTE and LESS _ THAN _ EQUAL queries in MongoQueryCreator to enhance query filtering capabilities for improved query accuracy
refactor GROUP BY expression handling in CalciteSqlParser to streamline group by expression checks to enhance readability and maintainability of the code
replaced unsupported operation exception with a cleaner invocation in MappedByteBuffer and introduced AtomicInteger for buffer reference count to enhance memory management and ensure proper cleanup of mapped byte buffers
replaced repetitive calls to getValidator ( ) with a single validator variable to improve code readability and maintainability by reducing redundancy
added a schedule method to CircuitBreakerImpl and updated test circuit breaker to use a wait timeout to improve the responsiveness and performance of circuit breaker operations with better timeout management
removed the FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS flag from intent settings to simplify the intent settings by always setting the intent flags
change ajax upload default value to progressbar in submissioncontroller and fileuploadrequest
updated display name for test and added a disabled annotation to clarify the purpose of the test to improve test stability by allowing the retrieval strategy to be disabled
add synchronize to addexportedcount and getexportedcount to fix thread safety
updated import statement for IntRangeUtil from IntRangeUtil1 to IntRangeUtil to ensure compatibility with the latest version of IntRangeUtil
modified HttpParser to improve character handling with bounds checking and simplified string appending logic to enhance error checking for illegal characters and ensure correct encoding / decoding
updated content view from trends _ activity to configuration _ activity to ensure the correct layout is displayed for the configuration functionality
fix slwttextlisting ' s log message to good reflect position
refactor ` ForceLeaderTest ` to conditionally use tlog replicas and add a new test class for it to improve testing efficiency and ensure proper handling of log replica behavior
updated Thread . java files to improve thread management to enhance performance and maintainability of the code
refactor RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES to separate static Set instances into separate sets to improve code readability and maintainability by consolidating template suffix management
camel - 8190 fixed the issue of cxfrs soap body be null
removed unnecessary line breaks in YamlRepresenter and RepresentConfigurationSection classes to improve code readability and maintainability
fix to _ char to handle negative year input
added validation checks for transaction and write ID configurations in GenericUDTFGetSplits . java to ensure that operations are validated before setting them to avoid potential errors
refactor JsonSerDe to use ` Collections . emptyList ( ) ` for empty checks instead of ` ArrayList ` to improve code readability and avoid potential NullPointerExceptions
added null check for bookpath and improved error handling in data loading logic to enhance robustness and clarity when no book files are available
reformatted code for improved readability and consistency in SSTDeserializer . java to enhance maintainability and ensure proper handling of record IDs
modify grid column handling in AppPreferencesImpl and adjusted scale initialization in ExtendedListFragment to ensure default grid column is used when no grid columns are specified
update terminology from " empty - differences in line breaks ? " to " line contents match " to clarify that line contents match specifically specifically for line - break characters
ignore the waitingforkeys flag in decoderinputbuffer for fast debugging .
remove / api prefix from margin / v3 to avoid conflict
updated conditional checks to use subtraction instead of x1 and y2 in LineUtilitiesTests . java to improve precision in determining if conditions are met based on precision
added error logging for varargs and old array syntax handling in JavacParser . java and created new classes VarargsAndOldArraySyntax . java and T6569633 . java to improve debugging capabilities and manage varargs syntax usage more effectively
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
added METHOD context to the VariableContext class and updated related tests to enhance functionality to support method calls in the context
added unit tests for invalid compilation unit and profile string parsing to ensure correct error handling for invalid JSON outputs
fixed an issue where the buffer size be set to zero but not the full capacity of the message .
added HttpClientProperties and integrated response timeout functionality to NettyRoutingFilter and GatewayAutoConfiguration to enhance HTTP client performance by allowing configuration of response timeouts
updated link target retrieval methods to use getNativeLinkTargetTargetGroup and deprecated getNativeLinkTargetTargetInput to improve clarity and maintainability of native link target handling logic
camel - 11123 : rest - dsl - add unit test for camel - main
added support for RexFieldAccess in ASTConverter and updated RexNodeConverter to handle ExprNodeFieldDesc to enhance field access handling in query parsing
log4j2 - 1428 fixed memory leak in querylogger
fix # 2396 - relative uri be not relativized to a proxy .
modified PKCS12KeyStore and StoreSecretKeyTest to handle trusted certificates more effectively to improve certificate management by correctly managing trusted certificates in the keystore
added reflection access checks and refactored method names for clarity in Bootstrap and ReflectionCheckLinker classes to enhance security checks during reflection access and improve code readability
modified the constructor visibility of CollisionMap from public to package - private to restrict instantiation to the package for better encapsulation
deprecate getrawinputfromtransactioninput ( ) because it should not be null
simplified log level checks by using a switch statement to improve code readability and maintainability
bug 7997 : fix issue in configurationserverimpl , do n ' t set region id to null
bug 60284 : throw encrypteddocumentexception when file encode do not support encryption
[ gr - 34733 ] enable native image builder for mx java benchmark with -- add - exports
removed unnecessary conditional check for setting image visibility to streamline code for improved readability and maintainability
fix flaky test : wait more time for scheduler to finish
modify directory creation logic to handle null type case and improve directory deletion process to enhance robustness by ensuring the directory is created appropriately when type is null
refactor exception handling to use Class . forName for better readability to improve code maintainability and reduce boilerplate code
updated WAIT _ TIME _ MS constant from 10 , 000 ms to 60000 ms to allow more time for operations to complete before timing out
added audience handling to ConnectRequestParameters and updated related classes to support audience claims in OAuth2 authentication
camel - 14263 : camel - kafka : remove the default value of the option ` ` kafka . breakonfirsterror ' ' .
added a new constant for a selected item background to support color selection functionality in the application
consolidated multiple import statements into a wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for future stop order functionality
updated event type assignment for consistency to ensure correct handling of entry types based on the presence of a record
move resumablerandomaccessfilelistener to resumable listener to allow the listener to react when resumable
changed class name from AccessLogValve $ 3 to AbstractAccessLogValve $ 3 to improve clarity regarding the purpose of the class
bug 57721 : fix bug in hssfdataformat when save workbook contain data format that have only 1 row
[ flink - 31543 ] [ kafka ] deprecate apis in flinkkafkaproducer that should not be use
updated the condition for calculating the compressed chunk length in CompressedInputStream . java to ensure the check meets the maximum compressed length limit
camel - 17514 : camel - spring - data - dsl - add idempotent operation to spring data - dsl .
fix vanilla bug where item metadata be not be use instead of damage .
[ mng - 4392 ] only copy artifact version to local repo , so that legacy local repo will work
added checks to ensure the TaskManager is initialized before starting to improve stability and error handling during task manager initialization
add deploy feature to org . drools . cfg . config . abstractartifactresolutionexception # doprivileged
updated the temporalPath retrieval method to include a context parameter to enhance file management by providing a consistent temporary path across different contexts
replaced existing imports with Google Commons libraries and added a new method to retrieve FeedEntryStatus by entries to improve code organization and enhance functionality for handling feed entries
added task execution for Vertx threads in the ContextImpl class and refactored related tests in BlockedThreadCheckerTest to improve thread handling and ensure proper execution of blocking operations
updated the FormatterConverter to include a formatterString parameter in the instantiate method and adjusted related method references to improve clarity and error handling when no output argument is provided
modify LoadContactsTask . java to handle file input stream compatibility for devices running Android O and above
replaced setter methods for remoteAddress and remoteHostname with direct assignment to improve code readability and avoid unnecessary setter methods
added null check for realClass in Robolectric . java to ensure that shadowClass is not annotated with @ Implements to prevent runtime errors
camel - 8189 : camel - netty - ssl - require tlmutualauthenticationcertificatechain setting to ensure ssl certificate chain be require by default
updated import statements and added a test for handling SSL exceptions to ensure proper exception handling for HTTP requests over HTTPS
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to these methods for consumer and producer access
[ ds - 3952 ] when the select item be a sitemap widget , only send the sitemap widget event once .
fix warn message when either no address / subject / text be present or SMS be not configure
# 174 - enh : add ebean . draftqueryoptimise ( query < t > ) ... for query optimization
added handling for IOException when a resource is unavailable to improve robustness by retrying writing when a resource is unavailable
refactor : fix typo ( # 2203 )
8184679 : clarify sslcontextfactory property ' s default sslcontextfactory behavior
modify file attach action to correctly set working directory when it ' s already set
added LoadOptionsBuilder to enhance schema crawling options configuration to improve flexibility in loading schema information for better schema retrieval
changed package of TestLoadLegacyLibrary and modified test method names for clarity to improve organization and readability of test code
testreader : return null for unknown operation instead of throw an exception
added methods to set the name , enabled , and expanded properties from the prototype object to ensure the system property reflects the correct property representation
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ doc ] fix typo in datastreamjob java doc
updated file output handling to use try - with - resources for ErrnoException to ensure FileOutputStream is closed correctly and handle specific error cases appropriately
camel - 4237 fixed the cxf unit test error of camel - cxf
fix # 274 - h2 - 14 be not compatible with h2 - 14
updated method symbol handling in LambdaToMethod . java and added lambda detection in ClassFileVisitor . java to improve method signature processing and ensure correct bridge handling for lambda expressions
add a qualification to the phrase in the whnp rule , so that it match the phrase in the phrase .
increase cache size to reduce load on slow machine
added phraseSlop setting to the mpq configuration to ensure correct phrase alignment during query processing
fix test which randomly fail on slow ci server
increased the default port from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to improve flexibility in server configuration settings
refactor game scheduler to use a parallel execution method instead of reactive programming
updated visibility condition for the compound view to account for available edit options to ensure the component behaves correctly in response to user preferences
limit the percentage of progress to 1.0 value to ensure that the progress bar does not exceed a valid range
remove session . packetreceived , it do n ' t seem to be need anymore .
added logging for authentication failures and refactored authentication handling in the DefaultCasDelegatingWebflowEventResolver and DelegatedAuthenticationGenerateClientsAction classes to improve debug logging and enhance handling of unauthorized authentication scenarios
add null checks for the service object in multiple classes to ensure robustness and prevent potential NullPointerExceptions during service registration
enable the pantheon cli ` ` enable account level permission ' ' cli option by default
added doNotInstrumentClass to exclude CoroutinesRoom $ Companion class to improve performance by avoiding unnecessary instrumentation for specific Room classes
modified the ` isSupported ` method to synchronize it properly to ensure thread safety when checking the support of ` HttpCallerInfo `
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the initialization process by eliminating an unnecessary setter
camel - 7999 : fix issue with thread name in persistent and temporary queue response . thanks to benjamin graf for reporting .
updated AuthenticationProvider and TargetObject classes to improve code structure and maintainability
save text block in pdfs when the writer be a tagged pdf document ( this be require to open and close image ) .
log4j2 - 3334 add test for pattern selector . apply patch from josh from bug # 4442
simonstewart : start the selenium server in an ide and use the hta mode instead of throw an exception
added mwThankPostResponse class and changed the ` thank ` method signature to improve response handling by encapsulating success and recipient information
implemented a new interface SocketBased and updated ChannelEndPoint to implement it to enhance socket handling capabilities for better integration with Jetty ' s socket management
removed unnecessary method calls and adjusted the revokingStore initialization in Manager . java to improve code clarity and ensure proper handling of the revoking store state
add test to demonstrate the bug with implicit join in collection
normalize line endings in assertions to ensure consistent comparison of expected and actual text
lucene - 5611 : npe in indexwriter . close when assertnounreferencedfilesonclose be true
added @ Final annotation to multiple methods in BaseError . java to indicate that these methods are not final to improve code readability and prevent accidental final modifier usage
added validation to ensure percent is within the range of 100 to prevent invalid contract input
added a conditional check for the legacy login display in AuthenticatorActivity to provide configurable visibility for the legacy login feature
polish : fix a typo in the test class name
redirect to correct page when team creation fails
fix error message to reflect the initialization of plugin credential
fixed # 211 - npe in connectionmanager . close ( )
refactor Rocket class to improve method organization to enhance readability and maintainability of the code
add a method ` createDynPartSpec ` to consolidate logic for handling dynamic partition specifications in the AST to improve code readability and maintainability by reducing duplication
forbid round hack for 3d number template ( fixes # 2138 )
implemented the visitDirectory method to JarDirectoryStep to handle directory entries to improve directory traversal by skipping directory entries to avoid duplicates
added a new file JWKSetEditor . java for managing JWK set functionality to enable customizable text input in the application
replaced the finish method in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to manage pending terms more effectively to improve code clarity and ensure proper handling of pending terms during term processing
truffle : add truffle boundary for instrumentation of throwable method .
changed the default value of byIP from true to false to align fetch behavior with user - defined settings
updated conditional logic for query timeout handling in StatementUtil . java to enhance clarity and maintainability of query timeout logic
added configuration hash logic to generate generated file paths based on configured target configurations to ensure generated paths are appropriately configured for improved security
refactor ReplicaPosition class for improved clarity to enhance code maintainability and readability
bug cs - 15437 : fix network stats update task initial delay
updated interpolator definitions in animation classes to use a constant for final frame to improve code readability and maintainability by reducing verbosity
adjust the height parameter of navBar ' s visible bounds to improve layout responsiveness based on display density
added a new module - info . java file for the org . eclipse . jetty . http3 . server package to define module dependencies and enhance code organization
fix for mondrian - 243 . checking if the value be null before assign the variable . the variable should be my _ json _ object .
simplified code syntax by removing unnecessary parentheses in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ checkpointing ] make the default value of tolerable failure number configurable
refactor ` reportInnerClassReferences ` method to use ` Element ` instead of ` TypeElement ` to improve type safety and compatibility with package annotations
add spaces around the System . getProperty ( " test . tool . vm . opts " ) in the command string to ensure consistent formatting of system property values
replaced FluentIterable with MoreCollectors for listing files to simplify code and improve readability by using modern Java features
remove the default value of register to true and add a constant for the register parameter to improve flexibility in configuration throughout the application
end session if security _ otr _ mode _ enabled be set to disable .
added constants for outline size and transparency properties and modified the render method to support dynamic outlines to enhance rendering flexibility based on user - defined properties
renamed ProxySelector , URL , and URLStreamHandler classes to improve clarity and consistency in naming conventions
updated the boolean parameter from false to true in Win32FontManager . java to enable or disable functionality related to font rendering
added null check and cursor setting in TreeVisitor to ensure proper handling of null values during visit operations
fix error handle policy for no class path
added methods to set content alignment point and text anchor in LabelBlock and updated drawing logic in LabelBlockTests to enhance flexibility in rendering LabelBlock with specified anchor properties
rename mmm and ppp classes for clarity to improve code readability and maintainability
modified the IndexReader class to enhance search functionality to improve the performance of document retrieval operations
replaced boolean isLoopback with Boolean isLoopback and added null checks for networkInterface to improve flexibility in network interface handling and avoid null pointer exceptions
added a Locale parameter to the fromRfc1123DateString method and updated its usage across multiple classes to ensure proper formatting of date strings across different locales
# 2638 - fix flaky test : download miss file with . pdf extension
nifi - 9359 - enh : add property to indicate no hit find for a query in elasticsearch plugin ( # 3973 )
server : fix usage calculation with standalone time
[ java ] restructure switch in election for clarity .
do n ' t close the directory on close ( # 18323 )
simplified widget event handling logic in PageChangeListener to enhance readability and maintainability of the code
fix bug # 44536 - fix bug in read input stream which could result in an eofexception
added error handling around unregisterInvalidatedSessions ( ) in PluginMonitoringFilter . java to improve robustness by logging warnings when exceptions are encountered during session checking
refactor CategorizationFragment class methods for improved clarity to enhance code maintainability and readability
updated status message from " Bridge reports light as reachable = false " to " bridge reports light as not reachable " to clarify that the status is now marked as not reachable
add a loading flag to fmlclienthandler and make it accessible to the gamesettings . json file as well .
added localization support for unit . millions and unit . thousands from resource file to improve localization and accessibility of UI elements
refactor MessagePackParser to use a switch statement for handling byte and string types to improve code clarity and ensure proper handling of different data types
add test for reserve word query with reserve keywords as identifiers in HQLQueryTransformerTests and JpqlQueryTransformerTests to enhance test coverage for querying with reserved words as identifiers
add tests for JSON serialization and deserialization of a map in MapTest . java to ensure the correct handling and deserialization of nested maps in JSON
geometryutils : fix line offset for geometryutils # getenvelope
introduced sorting order dialog functionality and updated related methods to enhance user experience by allowing sort order selection based on user preferences
if the test plan be empty , print an error and exit immediately
updated method names in GeneratedEntityTranslator and JdbcManagerSupportImpl to use " final " and added Lazy annotations to improve code clarity and ensure lazy initialization for DbmsType and OperationHandler
updated the argIdent assignment logic in the parser to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is only added to parameters when not null
updated default protocol setting to use the protocol from scf object instead of a hardcoded value to enhance flexibility by allowing dynamic protocol selection based on provided configurations
bug 9675 : default value of displayVolume to true in VolumeVO . java to ensure that volume display is enabled by default
modified the version method to accept a boolean parameter and updated the message retrieval logic to enhance flexibility for version handling based on the full version flag
refactor conditional logic to prioritize global change log parameter handling to improve logic clarity and ensure correct behavior when processing ChangeLogParameters
changed log level from warn to debug for missing transaction to reduce verbosity in CMT error handling
hhh - 13654 skip test for oracle due to bug in basicformatterimpl
moved the startHandshake and setSoTimeout calls to maintain socket timeout settings before establishing SSL connection to ensure that the socket timeout is preserved during the handshake process
updated status bar size calculation to account for popup state in the new condition to ensure accurate status bar height for better user experience in popup displays
[ gr - 27920 ] enable simpler performance by default and nosuchclasshierarchyOracle .
http : / / issues . apache . org / jira / browse / amq - 4162 - restore current thread context classloader when re - creating activemqresourceadapter
replaced specific imports and refactored test methods in JodaTimeRangeRandomizersTest . java to simplify imports and enhance test clarity
update Jakarta EE handling to conditionally redirect entities based on servlet version to ensure compatibility with newer Jakarta EE versions and improve user experience
fix # 411 : readiness . isready return false for node that have no status
fix # 8581 - use handler . endpoints instead of liveendpoints in storageproxy .
added a null and empty check for creationStatements in IdTableHelper . java to avoid potential NullPointerExceptions when processing database creation
drill - 1585 : update user rpc version due to change in rpcfailure behavior .
added security checks using System . getSecurityManager ( ) before accessing Reflection . getCallerClass ( ) in ObjectStreamClass and ObjectStreamField to enhance security by ensuring access checks are only performed when allowed by the security manager
added methods for time formatting and enhanced file processing in Utils . java and XLCDCommunicator . java to improve code clarity and ensure consistent handling of GPS commands
refactor DefaultMetricsTagProvider to use a HashMap for storing tags instead of an ImmutableMap to improve code readability and maintainability by simplifying map handling
swapped the order of the test suite addition in ClientDriverSuite . java to improve clarity and maintain consistency in test suite configuration
changed default level from OFF to ERROR in opt2 from OFF to ERROR to ensure that the application logs a specific error when an option is unavailable
updated fields to be final and modified log message formatting for clarity to enforce immutability and improve code readability
added support for first call prepare do configuration in the PrepareInterceptor to enable or disable the first call prepare do for improved action invocation flexibility
clean up home / back behaviour in overview mode ( issue 10965421 )
replaced eager singleton binding with standard binding methods in AuthWithStoreFeature and Auth classes to simplify the binding process and improve performance by avoiding unnecessary eager singleton creation
modified the incomingAssociations method to accept a boolean parameter for ignoring invisible associations to enhance flexibility in association handling during graphical data model rendering
remove private ip from op _ capacity table when delete pod
fix link in profile servlet for linux 4.6 +
fix : correctly set require flag on @ schema ( required = false )
updated class names for consistency and clarity in configuration classes to enhance code readability and maintain uniform naming conventions
updated feature toggle logic in FeatureFlags . java to improve application performance and user experience
update unique generation logic to include a new identifier format and adjusted the corresponding test cases to ensure the unique identifier is properly generated and to validate the new identification format
set image drawable in TimeLineCursorAdapter and TimelineArrayAdapter to ensure images are properly loaded from the cache
updated documentation for minor compaction settings in HiveConf . java to clarify that compaction operations are only performed using queries for improved efficiency
added a null check for storage path when mWaitingToSend is down to ensure that the operation only proceeds if the storage path is not null
replaced ` resizeThreshold < = keysAssigned ` with ` checkResize ( ) ` in multiple classes to improve resizing validation logic and ensure accurate resize threshold evaluation
guacamole - 220 : reword description of ldapconnectionservice for clarity .
camel - 4053 : fixed spring boot xml dsl to not allow @ xmlattribute to be use directly .
remove duplicate log statement for debug
fix : ignore softassertions in junit test
update assertions in TestMultiSearcher to compare hits2 instead of hits to ensure correct length of hits2 for accuracy in tests
add a new class LucenePackage that initializes the Lucene package to provide a mechanism for obtaining the Lucene package information
adjust sizeInBytes calculation to use the non - existing sizeInBytes value to ensure that sizeInBytes does not exceed existing ' s sizeInBytes
[ flink - 18552 ] [ table - planner - bloom ] fix estimation of average value per table
added a null check for the getDrawerToggle before starting the animation in MainActivity . java to avoid potential NullPointerExceptions when the drawable toggle is not available
added a @ SuppressWarnings annotation to the convertToAuthentication method parameter to suppress unused warnings during method execution
fix # 825 , make sure that getsystemclassloader ( ) be call when classloaders be overridden
fix export format with corporate field in bibdatabase
refactor CoreContainer to manage core recovery cancellation using a dedicated method to improve code clarity and maintainability by centralizing the core state cancellation logic
refactor time measurement and position difference calculations in bug5070081 . java to improve accuracy of time measurements and clarify the output calculations for better readability
allow more than one edit in RepoEditView by click on the first option only
fix some typo in javadoc ( # 1977 )
added security - related imports and updated SecurityExpressionRoot initialization to handle additional fields to enhance security functionality by ensuring proper role hierarchy and default role prefix settings
added a condition to set the exponentSize if it is 0 to ensure the exponentSize is always correctly defined based on primeSize
refactored file retrieval logic to use a new method for obtaining the used space for account names to improve code maintainability and consistency across the codebase
fix distinctsqlaggregation . combine to support multiple value
added a test method to verify the execution of PostLoginActivities during user authentication to ensure that the application correctly executes post - login activities after user authentication
add fix for nutch - 1073 extractorframeresponse where extractorspanishstrippedverb be never set properly .
refactor CharArraySet to simplify character array length calculations and improve performance to enhance readability and efficiency of the code by eliminating unnecessary type checks
update muxerwrapper to correctly check if the track type be audio or video .
replaced references to ` JsBundleAndroid ` with ` AndroidPackageable ` in the ` JsBundleGenrule ` and updated test cases accordingly to improve type safety and ensure correct asset directory handling for Android builds
added UTF - 8 character encoding support and improved string handling in the PinotClientRequestServlet and StringDictionary classes to ensure consistent character encoding and prevent potential issues with string index operations
changed the case of " Logical Analyzer " to " Logic Analyzer " and updated resource resource identifiers to improve clarity and organization of drawable resources for the application
added instanceClassName and instanceClass fields to AbstractVector . java to improve flexibility in vector instantiation by differentiating between instances
removed syncMetaLeader ( ) method call from CMManager . java to improve performance by reducing unnecessary synchronization
[ # 7694 ] make contrib question contribution question response less verbose ( # 7696 )
added TestLoggingExtension import and annotated DiagramRendererTest with TestLoggingExtension to enhance logging capabilities for better debugging and monitoring
do n ' t map property name to camel case when it ' s the original case
added support for the viomi internet electric water heater ( 1A ( 60L ) ) in MiIoDevices . java to enable compatibility with additional viomi water heater devices
replaced calls to ` getSslSessionData ( ) ` with a local variable ` sslSessionData ` for clarity to improve code readability and maintainability by reducing method calls
add a new file ` CreateNewSpreadsheet . java ` to implement spreadsheet creation functionality to demonstrate the functionality of creating Excel sheets in a workbook structure
rename ` ttl ` variable and related methods to ` timeToLive ` for better clarity to improve code readability and maintainability by avoiding abstraction
updated content URIs to use CONTENT _ URI _ NO _ NOTIFICATION for favoriting operations to eliminate notifications during insertions
update version number of the testCompile group from 2.14 . 0 to 2.27 . 2 to ensure compatibility with the latest version of the test
updated synchronization to use the current instance instead of lucidaFontName to improve performance by reducing unnecessary synchronization
updated condition to include a check for the character ' < ' when ltLen is 1 to ensure proper handling of specific character sequences during document generation
removed unnecessary String formatting for workspace _ scroll _ format to improve code readability and reduce unnecessary formatting
added import for Liquibase Scope and implemented a message for no validation errors to improve user feedback by providing feedback when no validation errors are found
updated IntegrationTestContextLoader to improve resource loading and configuration logic to enhance functionality and maintainability of web application context handling
updated method calls to use getComponentAt instead of getResponderAt for consistency to improve clarity and functionality when handling component interactions
standardized spacing in the conditional statement for clarity to improve code readability and maintainability
added a new class ` ClientStat ` and updated references from ` Long ` to ` String ` in multiple classes to facilitate more precise data types for client identification and improve performance
updated the expression variable to support multiple line characters to ensure consistent formatting of output values for better readability
add some more regexp at the end to make test case more readable
mondrian : fix for bug # 1743819 , document mondrianproperties . jdbcfactoryclass
8027163 : sun / management / jmxremote / bootstrap / customlaunchertest . java should be update for jdk8 removal of solaris - 32bit support
removed the testEmbeddedImage method from TumblrRipperTest . java to streamline the testing process by eliminating unnecessary test cases
added a conditional check before conversion storeType to ensure storeType is only converted if there is a slot for it to avoid potential conversions
fix bad result when a track file that do n ' t have a load point
added encoding handling and improved output formatting in BaseLockFactoryTestCase . java to enhance debugging capabilities by providing clearer information on index writer settings
tika - 3748 -- make sure to identify if service loader be dynamic , default to what to do ( # 1313 )
updated imports and changed type parameters in DocLint . java and DocLintTester . java for clarity and consistency to improve code readability and ensure correct handling of package - info files
added IMPORT _ CMD constant and modified the condition in DataImportHandler to ensure both DELTA _ IMPORT _ CMD and IMPORT _ CMD are checked to enhance data import functionality
add a test to verify that Inner classes are not modified when ignoreDefinition is true to ensure correct handling of inner classes during rewriting to maintain code integrity
removed import of android . util . Log from JettyService . java to eliminate unused dependency for cleaner code
modified the ` checkItemPlacement ` method to accept an ` ArrayList < Long > ` parameter for workspace screens to enhance functionality by allowing for additional workspace screens to be loaded
add a kill switch servlet to kill the jvm with exit code 0
no need to cast to collection < genericrow > since we do n ' t have to cast it into a collection < genericrow >
added a check for Windows OS to skip processing of Teredo nic names to ensure compatibility with Teredo in Windows environments
fix for duplicate local host name error dialog when add contact .
changed bean registration method from ` getReaderContext ( ) . getRegistry ( ) ` to ` BeanComponentDefinition ` to improve bean management by ensuring a single bean instance is registered
be dee6975a : be 76367e432 : fixing issue where fastbitmapdrawable be not scale the draw into the correct bound . ( bug 9075810 )
fixed date format issue in meitrack and totem protocol decoder .
changed method access modifiers and updated method calls in SunFontManager and X11FontManager classes to enhance encapsulation and improve font path retrieval logic
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to mark methods for future removal to discourage their use
fix test break by refactoring of exception handling
add an option to keep empty sentence ; default to false to provide an option inlining .
- better error reporting if artifact subdirectory creation fails
refactored JavaCompiler to remove unused LazyTreeLoader and updated method returns to no _ module _ compiler to simplify code and ensure consistent usage of JavaCompilerService for module compilation
fixed npe in directagentattache when resource return null
modified the sendEmail method to throw a MessagingException to improve error handling by propagating the MessagingException directly
add some null check to theObsidian pipe , and add some api documentation for api .
refactor date parsing to accept a Locale parameter for improved flexibility to enhance flexibility in parsing date mathes across different locales
added a boolean property ` includeDecals ` and associated getter and setter in ` StorageOptions ` , and integrated it into ` StorageOptionChooser ` to enable users to include decal details in storage options
updated the method signature of ` generateDocumentation ( outputDirectory ) ` to include a nullable parameter to ensure proper documentation generation without unnecessary parameters
updated HiveProtoLoggingHook to handle performance logging more effectively and improved test assertions to enhance performance logging accuracy and ensure accurate verification of edge cases
updated log messages in ` SolrIndexConfig . java ` and ` DocExpirationUpdateProcessorFactory . java ` for consistency to improve clarity of log messages regarding deletion of expired documents
updated version check in ignoreRecordAttribute to use the major version to ensure accurate version validation for class file compatibility
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP password authentication to ensure correct handling of user password in the LDAP provider
updated input format check in TaskCompiler to use BasicStatsNoJobTask to improve the accuracy of footer scan usage based on the table ' s input format
only open save all notification on save ( # 6158 )
refactor VisibleAdvance class for improved readability to enhance maintainability of the code
fix # 4565 : reconnect should not happen in case of terminal exception
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance data handling for dynamic number columns in addition to numeric columns
added null checks for groupId and getVersion in ResolvedGroupArtifactVersion class to enhance code robustness by preventing potential NullPointerExceptions
updated API assignment to ensure fallback to the existing API when apiInfo is null to improve robustness by preventing null assignment to the API variable
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added shader disposal logic and improved light setting in PhotoPanel and FlameRenderer classes to enhance texture management and ensure proper disposal of lights during rendering
updated scene size and added local variable handling in InsnListEditor and InsnProxyListEditor to enhance scene responsiveness and improve local variable management during method invocation
fix arrayindexoutofboundsexception in cssparser
added a check for the default look and feel decoration setting in UIServiceImpl . java to ensure that the application respects the application ' s Look and Feel decoration settings
removed redundant exists check from COMPLETED _ REQUESTS _ SQL statement and simplified method calls in HostRoleCommandDAO . java to improve code readability and maintainability by reducing redundant calls
renamed test functions and their references in LJ1200Message . java to improve clarity and consistency in naming conventions
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
replaced HostDatabase with ColorStorage in ColorsActivity . java to utilize a more efficient data structure for managing color data
updated method signatures and documentation in String . java to improve clarity and maintainability of the code
removed unused SLF4J logger imports and final logger definitions across multiple classes to improve code cleanliness and maintainability by eliminating unnecessary dependencies
added a method to retrieve global entries from the map to facilitate easier retrieval of entries from the global map
added assertions to verify the correctness of sendcoin method in MultiSign34 . java to ensure the correctness of the sendcoin method in the PublicMethed class
test : migrate CUfiltertest to junit 5 ( # 4422 )
replaced a hardcoded string " ; " with a system - dependent path separator in JavadocReport . java to improve flexibility in path handling across different operating systems
change access modifier of augmentSuccessViewModelObjects method from static to instance to allow subclasses to access the method without creating a new instance of AbstractServiceValidateController
added assertions to verify field presence in inheritance for AbstractEntity and Person classes to ensure correct field resolution and avoid potential null pointer exceptions
remove unnecessary conf parameter from Outlink constructor calls across multiple parser classes to simplify outlink initialization by eliminating unnecessary parameters
removed the ` LexicalContext ` parameter from multiple methods to simplify method signatures and improve code readability
updated method to return a list of modifiers and removed unused imports in UseLambdaForFunctionalInterface . java to ensure proper handling of unused imports during type expression processing
remove a call to appendClassSelector when adding file sets to the m _ classFilesets list to simplify the code by eliminating unnecessary method calls
removed unnecessary check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to simplify the code and prevent unsupported behavior for aggregating root inputs
add registryevent . pool field for cache registry ( # 5568 )
removed redundant lines of code for clarity to improve code readability and maintainability
added methods to retrieve decoding parameters for SBE in MessageDecoderFlyweight class to establish a foundation for SBE - related functionality
test : use current cluster version in test ( # 2749 )
fix thread safety issue with peermessage . parse ( )
added version ID handling to ClusterDefinition and updated related classes to support new cluster versioning functionality
remove duplicate ' setconfiguration ' ( accidentally duplicate ' setconfiguration ' ) .
[ zeppelin - 3745 ] show error message when dependency not find for interpreter
modified local variable initialization logic in ` Gen . java ` and created a new test class ` NoLocalsMustBeReservedForDCEedVarsTest . java ` to ensure correct handling of dCEed variables to verify code validity
added a check for basic constraints in ForwardBuilder and created a new class BuildEEBasicConstraints to ensure proper handling of X.509 certificates based on their initial constraints
added initialization logic for database metadata and modified SQL insert statements based on database version to ensure compatibility with PostgreSQL versions prior to 9.5 and improve data integrity
set a maximum message size for the WebSocket and enforce a minimum buffer size in AbstractWebSocketConnection to improve performance by limiting the WebSocket message size and enforce minimum buffer size constraints
replaced boolean flags for undeleting all documents and added assertions for pending deletes to improve clarity and ensure correct deletion behavior in the index reader
updated assertions in ClientRegistration to check for non - null scopes before validation to ensure that scopes are not empty , preventing potential NullPointerExceptions
added null checks for orderBy before adding the expression parameter to avoid potential NullPointerExceptions when orderBy is not initialized
[ 3.0 ] changed assertion from junit to hamcrest assertion ( # 9090 )
cloudstack - 2120 : fix for kvm inconsistency when delete snapshot
refactor logging initialization in HiveServer2 to store the initial log4j message to improve debugging by providing visibility into a variable
added a check for empty tasks before accessing the first element in AssetManager to prevent potential NullPointerExceptions when accessing asset tasks
[ openpgp ] return false when fail to delete pubsub node ( # 8725 )
fixed usage of relationentity a suggest by lorenz pahl
added check for empty result strings and exception handling in multiple Reader classes to ensure robust error handling for invalid data formats
replaced TreeSet with LinkedHashSet in SSLContextImpl . java to maintain the insertion order of ciphers
added a check for control characters in the Escaper class to ensure proper handling of control characters to avoid formatting issues
modified the handling of provider method signatures to check for CharSequence and changed return type handling to improve type safety and ensure compatibility with CharSequence data types
updated the handling of aliasChildren in InternalMNode . java to improve null safety and avoid potential NullPointerExceptions
added a method to calculate the layout transition offset for a page to improve scroll positioning accuracy in the user interface
updated the Java template processing logic to use ` pruned ` for improved performance and clarity to optimize the handling of generated templates and enhance code readability
added accessibility setting for the method in WidgetInterceptor to ensure that the method is accessible for use in subclasses
added a conditional check for " database . server . id " in the ConnectorConfigGenerator to ensure that fields are not set for " database . server . id " configurations
updated the Mozilla version to use Windows NT 10.0 and AppleWebKit for compatibility to enhance compatibility with newer Android versions of the application
added a menu item to open a web interface in the application to provide users with an easy way to access the web interface
refactor value type references and assignments in HandleGetter . java for better clarity and maintainability to ensure consistent handling of value types during getter operations and enhance code readability
fix deadlock on encryptedSlideshow # buildrecordatoffset .
[ hotfix ] [ checkpointio ] improve logging of atomic directory movement
fix npe when postload the avatar for the player
updated Docker image version and modified command - line options in PortForwardingContainer . java to ensure compatibility with new SSH features and improve command - line options
added a large array and invoked garbage collection to ensure the system is forced to avoid potential memory leaks during garbage collection
added checks for log names in StdErrLog and modified test assertions in StdErrLogTest to improve log handling and verify proper debug messages during tests
fixed - spring data redis add service name to rremoteservice ( regression since 3.18 . 1 ) # 2925
added methods to manage and set the selected state of emblem in the MultiButton class to improve functionality by allowing dynamic selection of selections based on user preferences
updated the intent from UpNextActivity to NextUpActivity to ensure the correct navigation to the NextUpActivity
[ issue # 6382 ] fix replicasmanager not initialize after broker startup ( # 6383 )
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection handling to improve resource management and ensure connection is closed in tests
updated background color retrieval methods to use the current theme color dynamically to improve code clarity and maintainability by centralizing theme color management
renames occurrence of participanttransportaddresschanged to peertransportaddresschanged to be consistent with other occurrence of peer transport address change .
replaced multiple type adapter registrations with a single method call for various classes to streamline type adapter registration and improve code readability
removed one unused import from TestPayloadCheckQuery . java to clean up the code and improve readability
refactor ConsoleReader to improve mask handling and add tests for reading lines with mask to enhance input processing and ensure correct functionality of masking
added user information display in the exit status and command line to enhance user feedback during application termination
move test to graalvm . compiler . api package for good organization
[ hotfix ] [ runtime ] remove unused constructor in slotsharinggroup
modified the condition for returning Java9Specific in StreamExInternals . java and updated the hasDropWhile logic in StreamExTest . java to improve compatibility with Java 9 and provide a clearer condition for dropWhile handling
updated texture paths in DecalTest , MusicTest , and SimpleDecalTest classes to use " sys . png " instead of " wheel . png " to ensure compatibility with the latest audio format and improve music management
be 06636351 : be b0ee0810 : be 2ca0e432 : fix 2300792 - all apps zoom when you come back from an app .
updated import statements for consistency to ensure code clarity and maintainability
updated the refresh token handling and added support for introspection in the ClientDetailsEntity and IntrospectionEndpoint classes to enhance token introspection functionality and improve error handling for client interactions
encode user and session attribute data in HtmlSessionInformationsReport . java to ensure that special characters are properly escaped in HTML output
added PhrasePrefixQuery and SpanQuery to the query section to improve query processing by linking to specific components in the search functionality
replaced size ( ) = = 0 with isEmpty ( ) for better readability to improve code clarity and maintain consistency when checking emptiness
replaced the isLiteralString method with a direct parent check in NoValueOfOnStringType . java to simplify the logic for determining if the parent is a literal string concatenation
updated method parameters in AbstractAssert , Assert , DateAssert , Assert , and DescriptableAssert classes to use Object instead of A to simplify type safety by using more general Object types
updated import paths for ThrowingFunction to reflect the new package structure to ensure compatibility with the new exception handling mechanism in the JWT plugin
refactor uploadBehaviour methods to use preferences directly instead of PreferenceManager to improve code clarity and maintainability by consolidating preferences management
fix : avoid noisy exception when get final field from constructor ( # 3007 )
updated BitmapDrawable instantiation to use Robolectric ' s newInstance method to improve compatibility with Robolectric ' s Bitmap handling
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and removed the character variable to improve method clarity and reduce potential errors in handling character input
updated PageMarkerResources to use a different drawable resource for the current page indicator to improve visual clarity by distinguishing the current page indicator
added volatile variable ` reinvocations ` and updated log messages to include reinvocations information to enhance debugging capabilities for the backup invocation process
modify the formula for calculating topPadding in DefaultLookAndFeel . java to ensure accurate vertical alignment by using the actual executable height instead of the original height
added a ` break ; ` statement in the ` Recognize . java ` file to terminate a case when no recipe is found during processing
added home screen lock functionality to Workspace , FolderNameEditText , and PopupContainerWithArrow classes to enhance user experience by allowing users to lock the home screen under specific conditions
updated ExcelBatchReader to handle string cell types and added a test for formula parsing in TestExcelFormat to improve formula processing accuracy and ensure proper handling of text cells
fixed bug 1312723 - immutablefield no long report an error on assignment in anonymous inner class .
added a private UserAgent field and updated user agent assignment logic in HttpGetter . java to ensure the user agent is only set when it is not already set
camel - 8195 : add javadoc to model class so we have eip documentation out of the box
change log level from info to debug for file not found message to improve verbosity of log output for better debugging
rename ` QueueTest ` to ` QueuedPipeTest ` to clarify the purpose of the test class for better understanding
updated the version check to reflect the new method for retrieving unique ID to ensure compatibility with older server versions
camel - 3633 : camel - jbang - terminate run app with ctrl + c then have little to no output
added a vertexColor property and modified color handling logic in PShape3D to allow dynamic color control based on the vertex color state
updated ` SchemaDotFormatter ` to include ` isPkColumnFiltered ` and modified related method signatures to enhance filtering logic for primary key and foreign key columns
replaced Shadow . extract with matrix . getValues in ShadowMotionEvent . java to simplify the code by directly using the matrix object directly
change package structure for MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser ` to simplify package structure by removing unnecessary dependency
simplified the class definition and retrieval logic in GroovyEngine . java to enhance code readability and efficiency by eliminating redundant checks
move branding plugin context initialization to hawtconfiglistener so it can be use by web
removed redundant print statement for command logging to streamline output for better readability and maintainability
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) to streamline event handling for better responsiveness
added tests to validate exception handling in the ThrowableAssert _ hasCause _ Test class to ensure proper handling of expected exceptions and improve test coverage
updated string construction for model and pack in AutomaticDependencies . java to improve clarity and functionality when dealing with model and package names
updated scope handling logic in ClientDynamicRegistrationEndpoint to use allowedScopes instead of requestedScopes to ensure correct retrieval of allowed scopes from the service
simonstewart : fix nightly fail test on non firefox .
camel - 7382 : route should allow to provide a description to a route definition . thanks to benjamin graf for the patch .
refactor JavacTreeMaker class for improved readability to enhance maintainability and ease of understanding
added a weight setting to the edge in ImporterCSV . java to ensure that the edge weight is correctly configured for data import
reduce tariff cost per month to the current day of the month instead of use a constant
updated SQL query to use an additional ' adsrc ' field instead of a hardcoded ' null ' to ensure correct data retrieval from PostgreSQL attributes
throw an assertion error when binarized sentences do not have a parser
enhanced user class to provide more detailed information about the user to improve debugging and traceability of user - related functionalities
update method to retrieve the body as a string and handle null values safely to improve error handling and ensure valid body retrieval
[ hotfix ] [ runtime ] rename ` fromexecutionvertex ` parameter to ` fromexecution `
improve group visibility check to only allow the owner of the subscriber group
added a new project reference for " maven . test . classpath " in AbstractJRubyMojo and removed a suppress warnings annotation in CucumberMojo to ensure proper dependency management and reduce unchecked warnings
updated MethodHandleImpl to ensure correct type comparisons and added a user method in MethodHandlesTest to improve type safety and demonstrate the use of user - defined methods with signatures
added import statements for StopFilterFactory and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilterFactory to enhance functionality by integrating new filter implementations
increase width and height comparison conditions in URLImage class to allow for more flexible image handling when dimensions differ
updated class name handling to include a check for " META - INF / " prefix to ensure proper processing of class names that start with " META - INF / "
added final modifiers to parameters and scheduled tasks in ImageDownloadService for better encapsulation to improve code readability and prevent unintended modifications to method declarations
updated StackWalkerTest to use a dynamic version check for asserting the expected number of values to ensure compatibility with the current API and improve test reliability
change the access modifier of the addViewportJob method from protected to public to allow external access to the addViewportJob method
removed the partition parameter from buildFlow method and related tests to simplify the flow logic by eliminating unnecessary partition handling
updated server configuration settings in TestDatabase . java to ensure server starts on shutdown and check running status correctly
added null and empty checks for the block in NodePathsConvertOperator and improved indexing handling in SchemaQueryMergeOperator to enhance robustness by preventing potential NullPointerExceptions and ensuring currentIndex is valid before accessing children
added total harvesting time retrieval to the call info frame and transport manager to provide better insights into the information sent to the server
updated font size settings in ParticleEditor . java for better visual spacing to improve visual consistency and readability of the user interface
add logic to update the keyserver port in the Hadoop environment configuration to ensure it defaults to an empty port when no key server port is specified
add a transparent background to the SvgViewerFactory to enhance visual consistency by allowing transparent backgrounds
removed the minSdk attribute from ShadowKeyguardManagerTest and its implementation to simplify configuration and improve code clarity
updated the method signature of ` containsExactly ` to accept an ` varargs ` parameter to improve flexibility by allowing multiple varargs in the method
updated Bucket4jFilterFunctions to use bandwidth settings and added validation for bucket keys to enhance resource management and ensure that only authorized keys are processed in the request
add comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve clarity and maintainability of the code
added a new boolean variable ` isMaterializedView ` and updated the ` Generator ` class to accept a hooks parameter to enhance transformation handling for materialized views and improve hook evaluation logic
added exception handling for NoClassDefFoundError in REngine . java to ensure supported status is set to false when no class is found
added ` SpanAndScope ` class to manage span and scope in ` TraceWebFilter ` to enhance tracing capabilities by ensuring proper scope management during tracing
update report error handling to account for null cause to improve error reporting by providing a default message when there is an error
updated SolrServerException instantiation to include the base URL as a parameter to improve error handling by providing more context for error messages
modified landscape setting and return value logic in HSSFPrintSetup . java to correct orientation based on specified conditions
update return statement to handle null values in JavaVoidObjectInspector to ensure proper null handling by returning null when the object is null
added validation to ensure the argument name does not contain tab characters or spaces to prevent illegal argument names during execution
fixed location update not work on android 5 . x
updated the condition to check if primitiveType is equal to GL10 . GL _ POINTS instead of negating it to allow for more flexible handling of different primitive types
improve trufflestring comparison by different check order .
added command list setting in ComboBox . java to ensure the component correctly reflects the command list status
nifi - 3742 - fixed incorrect handling of client DN in tl toolkit
updated command usage for zkcli to specify the localhost for shellexception to ensure the application connects to the correct Zookeeper environment
[ fwemo ] fix equal ( ) not equal ( # 11434 )
added a conditional check for remoteGrpcStatus before posting the severe event to ensure graceful handling of build failures only when the remote Grpc status is OK
refactor method signatures in XYItemRenderer and related classes for improved readability to enhance maintainability and clarity of the code structure
add entity id to entity tick data so they can be save without unload event
added a method to return the error string representation of error codes in GLSurfaceViewAPI18 . java to improve error reporting for better user experience
simonstewart : add support for query parameter in info server . this close # 163
updated the server URI format in RFC2616BaseTest . java to ensure proper formatting of the response for the specified host
added a method call to the helper list to enhance functionality by providing access to helper lists
added handling for the first of " [ [ ] ] " sequence in GlyphLayout . java to correctly process the first element of the array
added security permissions handling in mmm Transport . java and mmm TCPTransport . java to ensure safe context class loader manipulation and thread naming in privileged actions
implementation of # 1193 - optimize the uploader layout and take user configure sort into account
fix npe when service loader be null ( # 20855 )
removed debug logging statement from BarrowmanCalculator and modified the calculation of deltap in TubeCalc to improve performance and reduce unnecessary logging
added type checking for node and edge tables in TimelineControllerImpl . java to ensure correct handling of column settings based on type
added a method to register extra components for the broker admin application to provide better control over component registration for better application management
added a test method to verify bug4658 ( ) in MultiCfQueryExecIT . java to ensure correct handling of edge cases in query execution
peergroup : use a peer version message to choose the best peer if the client version support it
delay out a critical change to reduce cpu usage while trigger cycle .
[ iotdb - 6125 ] [ ratis ] add ratis maxretryattempts and dataregionratismaxretryattempts config ( # 6939 )
replaced a closing brace in multiple Java files to ensure consistent formatting and maintain code style
mondrian : only unregister jmx when it ' s a managed service
tika - 6259 -- improve package parser to support non - Unicode entry name
8239823 : c2 : c2 : c2 : assert ( ! failure ) fail : problematic division result in segfaults
added methods for locating generic types and their subclasses in TemplateRegistry to enhance type resolution to support generic type declarations in various scenarios
increase default buffer size to 1028 for performance optimization
added comments to the languagesExcluded array for clarity on unavailable symbols to improve code readability and maintainability when dealing with unavailable symbols
update byte array initialization and transfer logic in TransferCompletionHandler . java to optimize memory allocation for better performance and prevent unnecessary operations
remove duplicate window focus listener and replace with windowadapter .
added null check for ASTNode before throwing a semantic exception to improve error handling by providing a clearer message when the source node is null
fix to use a bounding box ' s center extent when render the skeleton
added a method to get the Solr home path in the DistributedClusteringComponentTest and BaseDistributedSearchTestCase classes to provide access to the Solr home directory for testing purposes
added ComponentScan annotation to SpringWebConfig . java to enable dependency injection for component scanning in the Spring framework
removed the getAccount method from the UserListItem class to streamline the account retrieval process for improved clarity
added a unit test for installing package defaults and modified package management logic to handle null processName to ensure that package information is correctly set when processName is not provided
improve documentation ( javadoc ) of org . hibernate . cfg . availablesettings . cdi _ bean _ manager
added TransactionCapsule objects and their initialization methods to TransactionTrace for managing transaction and receipt data to enable better handling and management of transaction information in the application
add a client property to not shuffling member list ( # 15882 )
replaced the type of ' Text ' with ' CrawlDatum ' in SegmentReader . java to ensure the correct data type is returned for processing
refactor JsonDeserializer class to improve code readability to enhance maintainability and reduce complexity
move fetch size to threadlocal to fix fetch size issue
updated the method call from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to align with the intended functionality of trunc operations
removed the import of ExecutionContext from TaskletStep . java to streamline dependencies by eliminating unnecessary imports
initialize the title variable to an empty string to avoid null pointer exceptions when no title is provided
use empty body for empty response instead of null body for empty response . fix # 1450
refactor : deprecate empty io . micronaut . runtime . server in favor of io . micronaut . runtime . server . Embeddedserverinstance
fix macref protocol event not be register on macos
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated method signatures accordingly to improve clarity and maintainability of the token fetching functionality
added a return statement to the ` toEnum ` method when the type is ` Enum ` to ensure proper handling of enum types when the current type is ` Enum `
fix : make hideunprivilegedobjects final ( # 753 )
fix a bug in the audio data source that result in too many audio file on startup .
fix : fail to save video on android q
act - 662 : fix variable value save in second service task issue
renamed several classes related to caching and authentication to improve clarity and maintain consistency in naming conventions
refactor logger retrieval logic to use computeIfAbsent for improved readability to simplify the code and reduce boilerplate code
hbase - 6776 remove unused file dataoutputoutputstream . java from hbase - connector - hbase
updated configuration for Hive statistics in TestAcidOnTez . java to ensure correct initialization of data processing
changed log level from info to debug for enhanced class logging to reduce log verbosity and improve performance during development
introduced a method to get the default provider name and updated provider names to " Conscrypt " across multiple files to enhance provider functionality and ensure consistent identification across different platforms
added Captor annotation processing to MockitoBeforeTestNGMethod . java to ensure Captor fields are not annotated with Captor . class during test execution
added checks to print meaningful error messages for missing test cases to ensure that classes and methods may exist and be present to avoid runtime errors
updated import statements and refactored conditional checks in GroovyAutoComplete and GroovyLanguage classes to improve code readability and ensure proper handling of empty prefix scenarios
move osm - specific code from import . java to import . java
kristianrosenvold : use clientconfig to set connection timeout for kristianrosenvold
changed the visibility of mHideSysUiScrim from final to non - final and added dynamic updates based on preferences to allow for dynamic visibility of the UI scrim based on user preferences
modified method signatures for ` enqueue ` and introduced a ` canceled ` flag in ` OkHttpCall ` to ensure proper cancellation of calls before execution and improve code clarity
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
updated RequestMatcher to extend from Spring Security ' s matchers package to ensure compatibility with Spring Security ' s dependency management
updated the loop in DeferredAttr . java to include an additional ' IF ' parameter and created a new abstract class ImplicitLambdaConsideredForApplicabilityTest . java with multiple interfaces and methods to enhance functionality by supporting conditional return behavior for lambda expressions
add test for j2kt type to reproduce issue with boxed params .
initialize displaymetrics on deviceconfig ( # 640 )
replaced IOException with RuntimeException and modified timestamp initialization to improve error handling and simplify timestamp initialization
change icon reference from ` logo ` to ` ic _ launcher ` in RootCursor . java to ensure the correct icon is displayed in the launcher
added functionality to set the content text of the error builder to ensure the error message is correctly displayed during file upload
updated the implementation of ConcurrentHashMap . java to improve performance and maintainability of the code
added methods to adapt user trades in AbucoinsAdapters and updated related services to use this new method to improve code clarity and maintainability by centralizing trade data handling
modified conditions in the claimPlot method and updated player clearing logic to ensure correct behavior of plot claiming and deleting operations
simonstewart : we now support the proxy of the firefox driver in the htmlunit driver . this will change browser browser version when use the chrome version in the firefox driver .
added handling for VARBINARY data type in BlobType to ensure proper initialization of VARBINARY data type handling
apply patch 04 from jboynes to improve cookie handling .
added synchronization to the arrayTypeMap access in LibFFIContext . java to ensure thread safety when accessing language ' s data type
updated the context handling in InboundBuffer to utilize ContextInternal and VertxThread to improve type safety and ensure compatibility with the Vert . x context
refactor timeout handling in LdapTimeoutTest and introduce a new test method to improve code reliability and ensure proper timeout behavior during LDAP operations
corrected a typo in the command line usage message for UniocdeData to ensure accurate usage message for Unicode data
camel - 2649 fixed the unit test error of camel - cxf
initialized ` textRect ` and ` iconRect ` fields in multiple UI classes to ensure consistent instantiation and avoid potential null reference issues
updated BoosterSet handling in ComponentAssemblySaver and modified return value in BoosterSet to enhance functionality to include boost details for better data representation
enable proxy authentication by default for jabref server ( # 7381 )
replaced instances of ` MetricsKey . BLOCKCHAIN __ FORK _ COUNT ` with ` MetricsKey . BLOCKCHAIN _ FORK _ COUNT ` and removed unused method to streamline metrics configuration by eliminating unnecessary method calls
replace InternalError with a return statement in the Class . java file to indicate that compile stub is intended for JEP 359 support
replaced mortbay log statements with standard logging statements and added a static final Log instance to improve logging consistency and ensure consistent logging practices across the application
removed the chunked transfer logic from the NettyRoutingFilter class to simplify the request handling by directly using the httpClient
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that attributes are reset before processing new data
updated VerificationAfterDelayImpl to include a polling period and improved error handling during verification to enhance reliability by ensuring proper polling behavior and provide clearer error reporting during verification operations
added SQL std authorization manager and session state management in multiple classes to enhance authorization handling during query execution
[ zeppelin - 3645 ] [ zeppelin - 3645 ] copy image to lib directory when copy interpreter to docker
hbase - 521 metatable gettableregions api return wrong list size ( liu shaohui )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
refactored x - bounds calculation in BarLineChartBase and Renderer classes to improve consistency and efficiency of chart positioning calculations
refactor XML parsing to ensure proper resource handling to improve resource management and prevent potential memory leaks
release the header buffer when reuse the connection pool to prevent memory leak
added a new test class UseDiamondOperatorWithVarTest to implement a recipe that uses diamond operators to ensure variable conversion behavior without diamond conversions
added null and closed check before closing the result set in JdbcExecutor . java to prevent potential NullPointerExceptions when closing the result set
updated the driver version version from - 1 to 10 and 6 in DerbyDatabase . java to support newer versions of the driver
fixed bug 1244479 - usestringbufferlength no longer flag literals with a null value .
replaced error logging with trace logging in RemoteSparkJobMonitor to improve error reporting and traceability of job execution failures
modified the createDb method to return a connection and ensure it is closed after use to improve resource management and prevent potential memory leaks
created custom metric and resource classes for improved functionality to enhance project structure and maintainability
hbase - 27351 reduce the maximum number of compact for off - peak compaction
modified the ` BitstampDepositAddress ` class to handle both ` address ` and ` response ` formats correctly to ensure accurate representation of deposit addresses in JSON format
replace IllegalStateException with abort in BufferingResponseListener to handle capacity exceeded cases more accurately
update linkPath parameter to be absolute in ProjectView . java to ensure proper handling of absolute paths when linking directories
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` instead of ` Event ` and modified metrics handling in ` DefaultMetricsRegistry ` to improve type specificity and performance in metric tracking
8157428 : sun / net / networkinterface / optionstest . java need to handle multicast support
refactor the validation of valid checksums to ensure all relevant conditions are considered in a loop to improve code clarity and reduce redundancy
added a clone method that throws an UnsupportedOperationException to the BufferedChecksumIndexInput class to enforce the use of an unsupported clone method for better functionality
updated mathematical calculations in the Circle class to use a radius value to improve precision in circle detection logic
added a check to assign frequencyBand to only if it matches the own link channel identifier to optimize the frequencyBand assignment logic by avoiding unnecessary field concatenation
rename tap square to gesture rectangular , so it do n ' t intersect
change default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false to disable replication on write operations
added a lastFillTime parameter to the nonce header and implemented date formatting utility to allow users to specify the last fill time for better cryptocurrency data representation
added ` getDelegate ( ) ` method to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests to provide a delegate implementation for tracing callable and runnable
added sharing functionality and improved error handling in FileActivity and FileDisplayActivity to enhance user experience by providing clearer error notifications and enhancing fragment checks
added a method to manage stream writableness in ` Quiche _ h ` and updated references in ` ForeignIncubatorQuicheConnection ` and ` JnaQuicheConnection ` to enhance stream handling and ensure proper management of writable streams
douniaberrada : fixing eval support in android 4 . x
removed unnecessary Align values from TableCell constructor and related calls to simplify the code and improve readability by using default padding values
added a new file TracingAutoConfiguration . java to configure tracing with MDC and ThreadLocal variables to enhance tracing capabilities for improved asynchronous handling in the UAA
fix for issue # 217 : attachment create in submission form
refactor ` getPrunedQueryableSegments ` method to accept ` List < IndexSegment > ` as a parameter and handle segment incrementments more effectively to improve code clarity and functionality by accommodating more flexible segment management
refactor VertxBufferTest . java for improved test coverage to enhance reliability and maintainability of the test code
fix bug # 52616 - fix stringindexoutofboundsexception in messagesubmissionchunk . substring ( )
changed the access modifier of mContext from private to protected to allow subclasses to access and override the mContext variable
removed unused imports for SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation to improve code cleanliness and reduce redundancy
added a new class MongoDataIntegrityViolationException for handling MongoDataIntegrityViolationException to improve error handling by providing additional context for data integrity violations
[ hotfix ] fix the jobcompletionfuture method return null
refactor ` bitsToHumanReadable ` to ` mimeType2HUmanReadable ` for better handling of various image mime types to improve code maintainability and clarity regarding the conversion between different image types
replaced the instantiation of ` MergePolicy ` with a direct instantiation of ` TieredMergePolicy ` to simplify the merge logic by removing unnecessary type checking
added a conditional check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not activated
update error log link to point to the correct repository when binaries cannot be run
updated the loadSettingModels method to accept an InputStream parameter to allow for flexible handling of reference properties
added null checks for incoming fields , TermsEnum , and term ids in FilterLeafReader . java to ensure that incoming fields , terms , and positions cannot be null to prevent potential NullPointerExceptions
github # 625 - add default key size to ` jcecrmfencryptorbuilder `
modified IOException handling to include the exception message to improve error reporting by using the exception ' s message instead of the exception object
remove unnecessary @ inject injection ( # 7682 )
updated assertions in ` BundledDistributionTest ` and added new assertions in ` PostgreSQLTest ` to validate database users to ensure correct number of elements and improve test coverage for database attributes
[ flink - 23798 ] [ doc ] add a job name option to user - defined name
update scale calculation based on device profile conditions to ensure correct scaling behavior for different device orientations
replaced GrassyBiome with SnowyBiome and updated the PopulatorTree implementation to enhance functionality by integrating sapling and ensuring random values are applied
removed unnecessary zones parameter from the getMinTime method and related code to simplify method calls and improve code readability
thisreference should be require to have an qualify name qualifier ( and not the qualify name )
xhamster ripper now download all image ( # 3282 )
use entity . getall ( ) to reduce memory consumption
hhh - 14271 oracledialect should prepend ` ` . ' ' to feature type name if schema be null or empty
fix quoting of console path ( # 3921 )
added a new variable ` numberOfAllFiles ` and updated the constructor of ` FileMenuFilter ` to include it to control the number of files displayed in the menu based on the number of files
[ java ] fix a term offset bug in network publication .
fix example in documentation for modifymemberroles event ( # 1588 )
modified the inPortalTicks increment logic to ensure it always starts with a consistent number of 80 to prevent incorrect tracking of inPortalTicks on non - creative devices
fixed # 2239 . changed color for chart title and value in cluster monitor ui .
refactor codecs to improve code organization to enhance maintainability and readability of the codebase
change variable types from int to long for length calculations in Base64 . java to prevent potential integer overflow when handling large binary data sizes
removed the null check for header in RendererConfiguration . java to simplify the condition since the renderer is null
cloudstack - 8254 : disk offering should not be modify when new disk offering have use custom service offering
updated import statements and builder pattern in HitbtcAdapters . java to improve code clarity and align with new order and limit orders
added a new variable ` consecutiveIdleCount ` and updated associated references to clarify the purpose of the variable ' s purpose in the code
updated the service annotation for JRubyScriptEngineFactory to maintain consistency to ensure clarity in the service description across the application
replace name concatenation with display name concatenation in ConfigCategory . java to improve code clarity by using a more descriptive variable name
updated the condition for determining if preciseExchangeAmount is less than or equal to zero to ensure accurate handling of negative values in the logic
added a loop and limit condition to the number of iterations in FeedUtils . java to improve performance by controlling iteration behavior
add a new test method ` testHDF4 ` in ` HDFParserTest . java ` to validate HDF4 file parsing to ensure compatibility and correctness of the HDF4 file handling in Java 5
added a constant for CALCITE _ 6092 _ FIXED and updated SQL test assertions to use this constant to improve code maintainability and ensure correct handling of invalid time values
fix a nullpointerexception cause by a nullpointerexception in editor . java
added methods to quietly close all AutoCloseable objects and updated the loop to iterate over them to improve performance by minimizing unnecessary closure of closeables
replaced the fixed position button with a constant from ` common _ yes ` in the dialog to improve clarity and maintainability of the dialog ' s functionality
added null checks before drawing the image in Pixmap to avoid potential NullPointerExceptions when image dimensions are not initialized
replaced ReflectionHelpers with direct method invocation for defining class in UnsafeAccess to improve compatibility with Java ' s Unsafe API and enhance error handling
fix invalid regexp at the end of file , and add test
replace boolean conflict with long conflicts for better clarity to improve error handling for row conflict scenarios
validate the pubspec . yaml file in place ( # 5368 )
added a condition to check if the reference is the current reference before proceeding to improve functionality by ensuring the reference state is maintained
refactor input handling in Injector to check for multiple seed files before adding the input path to improve the robustness of the injection process by ensuring only valid input files are processed
added condition to hide original view only when it is not hidden to ensure that original views are not shown when not needed
update maxNodes calculation to ensure it does not exceed zero to prevent potential negative values from being processed
bugfix : do n ' t attempt to generate unusable uv coordinate for combined texture
added error handling for file deletion and adjusted supplemental info retrieval logic to improve robustness and prevent potential errors when processing empty results
camel - 14263 : camel - core - tracer should propagate the duration to the delegate
make sure we always parse the length of the oldprefix instead of search for the handle
replaced addition of elements to convertedValsList with a constructor call to improve code readability and efficiency
deprecate abstracttimer constructor that accept only a timeunit parameter ( use by reflection )
added a nightly warning message for users when the Universal Gcode sender is nightly to inform users about potential issues related to compatibility with nightly builds
[ # 8803 ] instructorfeedbackresponse : filter response by team name ( # 8803 )
updated return message to clarify the removal of unnecessary ` throws ` declarations to improve code readability and accuracy of the returned message
deleted the CacheApplication class and updated related references in CommonsApplication and ShareActivity to streamline cache management by consolidating CacheController functionality
replaced references to ` realObject ` with ` RuntimeEnvironment ` for service and activity starting methods to improve code clarity and maintainability by centralizing runtime environment handling
renamed StatisticsServlet . java to improve clarity to enhance code readability and maintainability
updated RuntimeEnvironment to conditionally update configuration using ResourcesManager to ensure compatibility with Android KitKat and improve resource management across different Android versions
added a constant to indicate a version definition for update link existence to ensure proper handling of repository update links in stack operations
updated implementations in ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix rare npe in addindexes ( )
add new package imports for internal resolver helpers and readers in CheckPackageAccess . java to ensure access to necessary packages for better organization and functionality
rename methods persistExecutionContext to add and update in JobRepository and related classes to clarify the method ' s purpose for updating execution context
fix # 1658 restore the state of loopexitnode when the return value be an edge .
replace RecyclerView with WidgetsRecyclerView and update related methods to improve handling of RecyclerView visibility and manage vertical margins more effectively
added a conditional check for terminal support in ConsoleReader to ensure compatibility with devices running Console
changed ` long ` to ` int ` for time allowed values and added time checks for nanoseconds in ` LBHttpSolrClient ` to improve handling of timeout behavior and ensure robustness against transient timeout values
added session validity check before flushing response commit in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure valid sessions are before flushing responses and enhance session management reliability
refactor ` ChangedIndexChangeGenerator ` to check for null column names before processing to enhance robustness by avoiding potential NullPointerExceptions
replaced Vector with ArrayList for buttons and added action listener methods to enhance functionality for dynamic button management
refactor UserManagerCompat to use a new UserManagerCompatVM class for handling demo users to improve code organization and encapsulation for better maintainability
added methods to retrieve database major and minor version in MockDatabase and AbstractDatabase classes , and modified ReorganizeTableStatement to handle this method to ensure compatibility with different database versions and improve error handling
updated ActionGraphCache to include mismatchedRules and refactor related logging for better clarity to enhance mismatched rules reporting and improve user understanding of mismatched rules
added new classes LockDatabaseDesc and UnlockDatabaseDesc to provide database - related database - related descriptions to provide a structured way to lock and unlock database states in the system
updated RankingTopComponent , RankingUIModel , and RankingToolbar to initialize data directly from the model to streamline code and ensure consistent initialization of UI elements
added handling for disconnect messages in HandshakeHandler and updated logging in NodeImpl to improve disconnect management and clarity in log output for better debugging
[ iotdb - 4067 ] add test case for delete user in storage group ( # 8042 )
replaced occurrences of " DocumentAi " with " DocumentAI " in multiple proto files to ensure consistency in naming conventions across the codebase
add more check to vardeclarations to prevent crash
added afterTestClass and beforeTestClass methods to StepScopeTestExecutionListener to enhance test lifecycle management for better test management
[ java ] increase the cache for counter label to be utf - 8 .
refactor logging statements in MultiSteps and SendEmail classes to improve clarity and consistency to enhance readability and maintainability of log messages
added cloning of joinKeys array if it is not null to ensure that the joinKeys array is not modified externally
added PrincipalResolver to the authentication handler registration in WebAuthnConfiguration to enhance principal resolution capabilities for better authentication management
updated the ` addSettingsFromFile ` method to accept an ` ImmutableList < Path > ` parameter for enhanced flexibility to allow users to specify search paths when parsing XC configuration files
make instance variables final to enhance immutability and prevent accidental reassignment
[ hotfix ] [ doc ] remove unaligned checkpoint option from documentation
[ calcite - 2184 ] unsupportedoperationvisitor should throw hazelcast sql - equivelater if query be invalid ( jin xing )
add option - dgraal . compiletheworldtest . log = true to disable log output
- remove dead code , no longer need anymore
added support for MySQLDatabase in CreateTableGenerator to handle timestamp data correctly to ensure compatibility with MySQL databases that require timestamps
added context class loader management in EnvConfiguration . java to ensure proper context class loading during environment configuration
added a condition to set a delay when the stage number is zero in SimulationListHandler . java to adjust the ejection delay based on the current stage state
attempt to fix some javadoc warning in springapplicationtests
updated method implementations in TransactionUtil2 . java to improve performance and maintainability of transaction handling logic
updated the ` validateIssuer ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance the flexibility and correctness of the issuer resolution process
updated the string concatenation and handling of collection references in ClusterState . java to improve clarity of string representation and handle potential null cases gracefully
replaced getStyle ( ) with getAllStyles ( ) for setting alignment to ensure compatibility with the current style object
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance foreign key management capabilities in the database schema
[ java ] warn rather than retry to wait for cluster member to be cluster safe .
replaced static shadow imports with a private method for extracting the PackageManager to improve modularity by using a more direct utility method
drill - 4192 : fixed selection root to work with drill - returned file
replaced oninventorytick method with itemstack . tick , deprecate since 1.20 . 1
rewrite export . java and ioutil . java to handle war . jar signature
added a null check before invalidating the options menu in SingleUploadFragment to avoid potential NullPointerExceptions when accessing options menu
updated widget binding logic to support options to ensure proper handling of widget options for improved functionality
[ ecobee ] added new capability constant in ecobee sensor thing ( # 15967 )
format if statements for consistency and clarity in the OperationSetServerStoredContactInfoFacebookImpl . java file to improve code readability and maintainability
added environment variable " AAPT " and " AAPT2 " to the Genrule class and updated tests accordingly to enhance the environment variable handling for AAPT and Aapt2 executables
only dump access table at the end of the execution if trufflecompilationoptions be enable .
fix npe on shutdown ( ) if message be null
made the ` db ` field final in ` TronStoreWithRevoking ` and added initialization methods in ` TxCacheDB ` and ` TransactionCache ` to enhance encapsulation and improve cache initialization functionality
- disable logwatcher warning , will be enable by default for now .
replaced printStackTrace ( ) calls with return statements for cloning failure handling to improve test failure reporting by explicitly indicating failure when cloning fails
updated IOSImplementation to use SmallByteArrayOutputStream for output stream handling to improve performance and simplify memory management when handling input streams
* shader will now handle ordinal attribute in order to avoid oom crash
removed the third parameter " territory " from the JDBC connection string to simplify the connection string usage and improve clarity
( chore ) camel - route : handle null attribute for exchange timestamp ( # 4395 )
8209533 : htmlunitdriver should use non - default language should render correctly
updated condition to check if the result is incomplete before accessing items to ensure that processing only occurs when there are more items to complete
updated time column name handling in HybridClusterIntegrationTestCommandLineRunner to improve clarity and accuracy in command line usage instructions
updated output format handling to dynamically set the output format to ensure consistent file extension based on the output format being used
inverted the conditional check for QSB margin in DeviceProfile . java to ensure proper handling of QSB display when not using QSB
fix a few bug in the equality check code and add hashcode to animationlist
added date handling to AbstractGenerator and updated HttpGenerator to set the date header correctly to improve date representation and ensure proper handling of request and response timestamps
replaced Adler32 with CRC32 in the Store class to utilize a more suitable CRC implementation for better performance and compatibility
cloudstack - 7119 : remove the ' any # of seconds ' config value from xen . heartbeat . interval global config
added new warning constant for zero area fines and updated conditions in FinSetCalc . java to enhance clarity of warning messages and improve handling of negative area cases
[ beam - 10563 ] implement back compatible json serialization for elasticsearchio
hhh - 16189 : add trunc ( ) to sql function that use it for date , timestamps function
added checks for memory - related error messages in MetricUtils . java and updated corresponding test cases in MetricUtilsTest . java to improve error handling by distinguishing between memory - related and memory - related errors
fix build with jre 2.6
fix validation task to correctly instantiate runtime type
change backfill endpoint from / generateanomaliesInRange to / replay to streamline replay process
updated the creation of data structures in PrecompiledContracts . java to initialize with a specific ID of 1 instead of a default constructor to optimize data handling by reducing unnecessary object creation
fix badge update when new app be animate .
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
clarify the start ( ) method ' s usage , not the start ( ) method .
fix workspace . equals ( workspace _ custom ) crash
remove assertion because lookupmodule be not null from jdk . lookup module
added an @ Ignore annotation to the test method and corrected a typo in the test to temporarily skip the test until the method is turned on by default for unshadowed classes
updated import statements to use the correct package for ItBitExchange and its subclasses to ensure compatibility with the latest version of the ItBit library
ww - 3971 make null check more explicit and avoid a classcastexception .
changed classes from non - final to final and added private constructors to prevent instantiation
return null when read xstream from stream in RegionsApiUtil . java fails
refactor code to use string literals for class types instead of calling getClass ( ) to improve readability and maintainability of the code
[ iotdb - 6295 ] [ retention ] fix log bug when table name with type be not specify ( # 7358 )
add trimming to trimming of fragment lists in QueryExecutorImpl . java to ensure that empty or leading / trailing spaces are handled correctly
fix incorrect file path when throw resourcepackfilenotfoundexception on mod .
added clearing selection for nodes and edges in PartitionToolbar and improved conditional logic for transformer builders to enhance code clarity and ensure proper handling of transformer UI updates
removed unnecessary condition for showAsGrid ( ) and added checks for task view focus and visibility to improve task view handling and ensure proper visibility before proceeding
updated CalculatorRestEndpoint and CalculatorService to use BMIViewObject instead of Map to improve data handling by utilizing a BMI view object for better data representation
removed the comparator prefix from the thenComparing method in QueryCommand . java to simplify the comparison logic without unnecessary method calls
fix incorrect damage calculation for hay bale
refactor the use of ` LinkedList ` to ` List ` for better readability and performance to improve code clarity and efficiency in handling environment symbols
added support for custom plugin configuration options in OptionsParser to enhance flexibility in configuring plugin configurations
updated condition to check if hashTable is not empty before accessing it to improve null safety by avoiding potential NullPointerExceptions
updated timestamp validation logic and renamed test methods for better clarity to improve the robustness of timestamp handling and enhance test coverage for different scenarios
[ java ] clone archive context to simplify cluster service agent .
added a condition to check if the compilation is not active and updated assertions accordingly to ensure that the optimization logic only executes when the compilation is not active
[ geot - 6477 ] imagemosaic / db2 be now portable to jdk < 8.0 . x
refactor TogglableFlag class to improve default value handling and add a change listener to enhance feature flag functionality and ensure responsive updates when configurations change
fix : log more info when log problematic docker setting
added a condition to return early if the current platform is the ANDROID platform to enhance performance by avoiding unnecessary processing on unsupported platforms
use hamcrest assertion instead of junit in examples / microprofile / http - status - backport main ( # 1749 ) ( # 6247 )
added new functional interfaces for various primitive type predicates in the common package to provide functional programming capabilities for handling byte , float , and short data types
changed the return type of getSubsColor from int to String and updated related methods for better handling of bitrate limits to ensure better representation of bitrate settings and improve logging for bitrate limits
fix memory leak with invocation .
replaced control frame byte appending with output method in AbstractWebSocketConnection to streamline WebSocket connection handling by using a dedicated output method
added logic to launch WelcomeActivity only when the redirect button is enabled to ensure user experience by preventing abrupt navigation during activity transitions
added a new class ShadowCheckedTextView for testing purposes to enable testing of CheckedTextView functionality in Robolectric
implemented Serializable interface in ParserState class and added serialVersionUID to GETTER _ CACHE in AccessorProperty to ensure proper serialization of instances and prevent serialization
8225072 : add expiry exception for identrustdstx3 alias to verifycacerts . java test
removed redundant calls to setAttribute ( TEMPDIR _ CONFIGURED , null ) in WebInfConfiguration . java to streamline code by eliminating redundancy
added patch to fix illegalformatexception that result in wrong presence of nickname .
modified constructor parameters in QuicConnection and QuicSession classes to streamline connection handling to enhance code clarity and ensure consistent context handling across connections
updated merge policy configuration to use the LogMergePolicy class to ensure compatibility with LogMergePolicy configuration for better index management
fix sonar warning : remove useless paren ( ) call
add handling for ComputedDateValue and ComputedNumericValue in the AddDefaultValueChange class to improve default value parsing and support for ComputedDateValue types
fix : remove obsolete scoreboard doc
fix issue with saml service provider metadata from classpath resource
changed access modifier of ` printer ` to protected and refactored creation logic in ` GraphPrinterDumpHandler ` to enhance encapsulation and improve code readability
added BigDecimal rounding to adjust order average price calculation to ensure accurate order data is processed for improved order accuracy
updated projections handling to use target fields instead of name fields to improve clarity and consistency in field mapping operations
fix fakeplayer # addviewer0 ( ) not send any viewer
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve memory efficiency and drawable state handling
refactor SPDYClient to streamline connection creation and compression handling to enhance readability and maintainability of the code
fix protostuffobjectoutput . readserializable ( null ) logic ( # 3905 )
pdfbox - 4892 : fix formatting , a suggest by valerybokov
refactor BarrowmanCalculator class methods for better readability to improve maintainability and ease of understanding
ggb - 1958 show more than one ax and there be no more ` ` visible ' ' element
replaced setWrap method calls with unsafeSetFilter for setting filter and wrap to ensure consistent handling of filter values and wrap settings
fix indentation by add newlines .
updated the custom URL handling to enable trusted certificate validation for HTTPS connections to enhance security by enabling HTTPS connections for HTTPS connections
remove deprecate getclockrate method ( already in java 8 )
refactor TextureAtlas class to improve code readability to enhance maintainability and ease of understanding for future developers
updated method to return module name instead of product name in ProjectGenerator and added a method to set module name in AppleLibraryBuilder to improve clarity and accuracy in handling Swift module names during build process
make sure to release registry lock in testslot .
# 1344 - enh : add test for findids ( ) with inheritance
replaced the variable ` closeFrame ` with ` rbuf ` and added an assertion for the response header to improve clarity of the buffer usage and ensure proper validation of the response headers
[ wasm ] properly clear reference to original reference in a function
fix build break when ` ttl ` be miss
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related logic in CustomPreconditionWrapper and XMLChangeLogSerializer to enhance serialization handling for named fields and improve consistency in serialization logic
replaced the usage of QueuedThreadPool with a Server and HandlerCollection in the DeploymentExceptionTest class to improve server management and context handling during tests
added error handling for initialization in CommonsApplication and improved null handling in NearbyController to enhance robustness by catching potential exceptions and providing a default debug tree
modify the return statement to handle null or empty objectName cases to ensure that objectName is not empty before trimming whitespace
8220555 : jfr tool show potentially misleading message when it can not access a file
[ flink - 24335 ] [ table ] introduce new constant for old planner and blink planner factory
renamed the variable ` owner ` to ` issuer ` for clarity and improved the handling of certificate subject names to enhance code readability and ensure the correct issuer is used
[ flink - 23.0 ] deprecate the java . base . runtime . options with forremoval = true
replaced manual byte array conversion with direct string conversion to improve code efficiency and readability by using a direct method of converting the string to bytes
added a new interface PermissionEvaluator for permission evaluation in Spring Security to provide a mechanism for checking permission permissions in authentication contexts
added a new option ERASE _ LINE _ ON _ FINISH in LineReader and modified the LineReader to handle it to enable the cleanup process when an early line is on completion
fixed - masterfs . onlineservers be n ' t check properly
updated exception types in P2pException and related files to use BLOCK _ SIGN _ ERROR instead of CALC _ MERKLE _ ROOT _ FAILED to improve clarity and consistency in error handling related to signature errors
use the jar file in the jetty process output , instead of the file directly
bug : handle httpclientresponse . geterrortype ( ) for good logging ( # 15462 )
updated the container initialization to center it on the absolute position to ensure the spinner is positioned correctly relative within the layout
refactor the recycleMemorySegments method to accept a size parameter and adjust the total required buffers accordingly to improve clarity and maintainability of the code
change to fix flakiness in testjmxintegration . testconnectionclose
replaced JUnit 4 test runner with RetryTestRule in AbstractIT . java to improve test reliability and retry behavior
removed the autoCommit parameter and related logic from QueryStateMachine and CallTask classes to streamline transaction management and improve clarity in the code
add a package - info . java file ( ` ` package - info . java ' ' ) to the test package .
updated the condition to check for " javax . microedition . khronos . opengles . GL " alongside " javax . microedition . khronos . opengles . GL " to ensure compatibility with OpenGles EE and provide additional configurations
[ hotfix ] minor cleanup of unused code in streamtasktimertest
refactor request handling logic to improve clarity and structure for handling HTTP CONNECT requests to enhance code maintainability and ensure correct URI resolution for different HTTP methods
updated method for retrieving storage points and modified version code handling in the MainApp and WhatsNewActivity classes to improve code clarity and ensure compatibility with newer Android versions
hide offline message when client session be no longer available
added the package " liquibase . pro " to the ServiceLocator class to enable scanning of pro files in the application
replaced the ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` to simplify the method and enhance clarity in deleting synced folders
modified the ` loadWithNewGlobal ` method to accept a variable number of arguments to enhance functionality by allowing additional parameters to be passed when loading a new global context
fix bug where fail fast path resolution if the scheme be ` ` http : / / ' '
updated the method to use ` toIntExact ` for retrieving the length of a footer and stream to ensure that the size of slices accurately reflects the returned content size
corrected spelling of " hasExceedRandomizationDepth " to " hasAlreadyRandomizedType " across multiple classes to improve code readability and prevent potential bugs in terminology
added support for LEAD and LAG functions in UnsupportedOperatorsVisitor to ensure proper handling of LEAD and LAG operations as unsupported
clear proxy request header when stopping
8215284 : skip test that fail on non - sa attach platform
added a null check for bgColor in GraphicsDevice and created a new TranslucentWindow class for handling window translucency to enhance robustness by preventing potential NullPointerExceptions during transparency checks
added checks for null phone and address , and updated error message handling in UserInfoActivity to improve user information validation and handle cases where no user information is present
added ` PrecompiledHeaderSerialization ` class to handle Boolean serialization and deserialization to ensure that leading headers are not serialized on different machine
[ flink - 24126 ] [ table ] properly handle ' append ' mode legacy property
added a new test class ` MultipleOutputsIntegrationTest ` to validate the functionality of named output groups in project builds to ensure correctness and functionality of named output handling in the build process
updated regex to improve whitespace handling and content comparison in FileSettings . java to ensure consistent formatting of the content when updating the settings
nifi - 6733 : fix nullpointerexception when process variable from versioned group
replaced array creation with ArrayUtils . EMPTY _ OBJECT _ ARRAY in BinaryCipherExecutorTests . java to improve code readability and maintainability by using a more descriptive constant
added a taskbar mode switch annotation to the TaplTestsQuickstep class to enable persistent taskbar behavior in the test cases
added device status entries for leaving and saving modes in DeviceStatus . java to enhance user experience by providing additional device options
expand modelloader error log to include blockstate and normal exception
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
pixeldensity ( opengl ) : fix getcurrentpixelscale ( ) on mac
refactor RussianLowerCaseFilter class to improve readability to enhance maintainability and reduce complexity of the code
removed unnecessary server and client properties and simplified the test driver setup in CsvBulkLoadToolIT . java and QueryUtil . java to streamline the code and ensure consistent default behavior for HBase connections
replace all file separator characters with underscores in displayName to ensure consistent path formatting across different operating systems
made ` in ` and ` inRead ` protected in ` LittleEndien ` , introduced ` ResettableInputStream ` class , and modified ` readDataChunkIfNecessary ` method in ` WAVLoader ` to enhance accessibility for better resource management and implement a resetable input stream functionality
added support for a repeat first line indentation feature in the ColumnText class to improve indentation handling flexibility based on user preference
cast the ` oid ` to ` Object ` before comparison to ensure correct type handling and avoid potential ClassCastException
move metricstrackerfactory and healthcheck configuration back to hikaripool before it be initialize .
fix : use controlflowanchored instead of controlflowanchornode in loopex .
added a line to disable focus on the buttons button in WindowsPlacesBar to improve user interface by reducing the rendering of the button
updated the condition to check for instances of UniqueConstraint , PrimaryKey , and ForeignKey in DatabaseSnapshot . java to ensure proper handling of potential cases where the backing index is not handled correctly
added a deprecated method for retrieving account ledgers parameters in KucoinAccountServiceRaw . java and updated the API definition in AccountAPI . java to mark the method as outdated and to discourage its use in future development
add doc and check if dc . title metadata do n ' t contain dc . title mdv
attempt to fix crash when utterance do n ' t have any word
added unit test base on user forum issue
updated thread management in FeedRefreshUpdater and added getter / setter for databaseUpdateThreads in ApplicationSettings to improve resource management by allowing dynamic specification of the number of database update threads
reduce the fast scrolling threshold from 40 to 10 to optimize performance by reducing the number of concurrent modifications
updated the SystemClassName to use " Ljava / lang / System ; " to ensure consistency in class naming across the application
hhh - 13644 fix npe in getresultstream for procedure call
updated APIProperties initialization to handle null values gracefully to avoid potential NullPointerExceptions when API properties are absent
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text frame data efficiently to improve the handling of binary and text frame data in the WebSocket generator
replaced the usage of ` localDriver . findElement ( By . id ( " peas " ) ) ` with ` WebDriverWait ( localDriver , 10 ) ` in page loading tests to improve reliability by waiting for element availability before executing them
fix randomized double computation in random geo3dshapegenerator .
added a keepAlive method to manage ClassLoader references to prevent premature garbage collection of the ClassLoader
changed the return value from false to true in SQLiteDatabase . java to enable successful operation of database operations
improve timer priority for jsr166 util concurrent call .
added MkdirStep calls in multiple classes to facilitate output directory creation to ensure proper directory structure during operations
* fixed issue with index out of bound . also add some more debug info to exception .
[ rhdmml ] disable applypmmlmodelcommand if jpmml be unavailable ( # 4408 )
updated locationMode check to thermalStatus in ShadowPowerManager . java to ensure correct handling of energy status updates
modify temporary directory creation to support macOS to ensure compatibility with macOS temporary directories
[ geot - 7462 ] disable use of memory - mapped buffer on window for this feature
added a check to ensure that Plugis are required for the pom . xml file to enforce required organization and prevent runtime errors
added license agreements reference in SepPostingsWriterImpl . java to ensure the correct license information is distributed with license agreements
deleted the TerminateWebSessionListener . java file to remove deprecated functionality from the codebase
update method to use the Java class path instead of an empty string to ensure compatibility with different operating system path configurations
replaced ArrayUtils . EMPTY _ BYTE _ ARRAY with new byte [ 0 ] in KM200Device . java to simplify the initialization and usage of byte arrays for improved performance
added JUnit Pioneer annotations and a test method to the AddLicenseHeaderTest class to ensure that Javadoc does not change while addressing issue 3198
change the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the launcher3 physical scaling feature
added a new line to the HTML structure in HtmlThreadInformationsReport . java to ensure proper rendering of thread information in the report
updated the main version of LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and updated test version references to reflect the latest version of Lucene
added private long fields for macosx symbolicator and task in BsdDebuggerLocal . java and updated OS detection in PlatformInfo . java to support additional macOS X environments
nifi - 8613 : use of weakreferences to prevent memory leak in netty client ( # 8598 )
do n ' t log ` ` connection reset by peer ' ' exception a debug
[ java ] set a default admin buffer when there be no conductor .
added a ` break ; ` statement in the ` TouchImageView . java ` file to ensure that a switch case terminates when no specific condition is met
fix : [ cloud ] remove unused proto import ( # 9682 )
remove unused ssl handshake listener from feeder body generator
added conditions for type validation in TypeUtils . java to ensure correct handling of varied Java types during type validation
use concurrenthashset instead of nonblocking hashset in memtablespendingflush . patch by jbellis ; review by jbellis for cassandra - 148
added null checks and improved error handling in MemberEnter and JavaCompiler , and created new classes TestParseErrors to enhance error management and ensure proper handling of missing annotations
fix ` ` no background ' ' warning in bug info view
update dialog cancel method to use dialog . cancel ( ) instead of finish ( ) to ensure proper handling of dialog cancellation
fix stamp folding for int overflow when subtraction be use by div .
added a method to read a stream from an InputStream and updated the image creation to use this method to improve image handling by using a buffered input stream for better performance
added variable handling methods and a test for bug fixing to improve variable management in CaseStmtToken and ensure its correctness through testing
updated the initialization of the Cipher provider to handle exceptions related to Oracle JCE provider to improve error handling and provide clearer logging for cipher provider issues
added " psapi . lib " to the " AdditionalDependencies " attribute in WinGammaPlatformVC10 . java to ensure proper handling of additional dependencies for compatibility
updated newline handling in SQL code for consistency to ensure correct line endings across different operating systems
added new import statements and modified the malicious javascript syntax to properly handle special characters to ensure compatibility and correct HTML output formatting for better compatibility
replaced ByteArrayInputStream with byte array conversion for reading input to improve performance and readability of the code
code clean up . remove useless ` ` final ' ' modifier
increase verbosity of email - reporting if testng . testngEmailableReporter is not set
408904 enhance commandlinebuilder to not escape string inside single quote
updated interface access modifiers from public to package - private in multiple Java files to enhance encapsulation and restrict access to internal implementation details
added a line to set the number of reduce tasks in FreeGenerator . java to allow configuration of reduce tasks based on the number of fetchers
do n ' t overwrite exist object field of default object value if it ' s the same a the default
bug 532077 - create a serviceloader to allow easy plug of new caffeine class
added support for checking OES _ texture _ float and GL _ ARB _ texture _ float extensions in FloatTextureData . java to ensure compatibility with desktop rendering engine
added utility method to fileserver that allow write to a file value multiple time .
updated output directory handling logic in ClassDump . java to account for null jarStream to ensure the output directory is set before using it
added PerfStatsCollector import and modified return statement to measure SQLite performance to enhance performance tracking capabilities for SQLite tasks
updated usage of JDKToolFinder from getCurrentJDKTool to getTestJDKTool in JMapHProfLargeHeapTest and JDKToolLauncher to ensure testing is consistent with expected test environments
[ geos - 8042 ] add enum for handle resourceleakerequesting error because of miss configuration variable .
added a check for buffer position in RAMInputStream and implemented EOFException handling in TestRAMDirectory to enhance error handling and prevent potential eof exceptions during file reading
add message to error reporting for miss resource
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class for permission testing to enhance thread behavior control and facilitate security permission testing in the ForkJoin framework
updated CHECK _ EVERY _ N and CHECK _ EVERY _ N values for better memory management and added logging functionality to enhance resource management reliability and debugging capabilities
hbase - 7039 testsplittransaction # testsplittransaction fails due to improper cleanup
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerExceptions during selection area selection
add a new test method to the DemoModulesTests class to verify the jaas demo functionality to ensure the server correctly binds to the Jetty server during testing
added spanX and spanY checks to folder creation and calculation to ensure proper spacing when folders are created based on specified span
updated CacheOffHeap class implementation to improve performance and memory management
improve error message when attempt to create a table with dependency on another table
added a row check for maximum layer height before parsing values and log a warning for potential XML gid issues to ensure proper handling of cases where extra XML data is missing
tilecache : synchronize setworkingset to avoid concurrent modification
added a new Java class to calculate the minimum and maximum occurrences of a given integer to implement functionality to determine the feasibility of a given step based on user input
add checker interface for checker request that reject invalid ip address
fix translucent model , cause npe in multilayermodel
[ # 4270 ] remove default tag from the description of global configuration option ( # 4271 )
change the data type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and update related references to ensure consistency in data type representation and improve clarity in handling values
added null check for recieptents before sending a mail to prevent potential NullPointerExceptions when the recieptents array is null
refactor logic for determining the isSingle method in RoutingInBoundHandler to improve readability and maintainability of the code
updated DockerClientFactory to introduce a failFast parameter and improved logging mechanisms to enhance error handling and performance monitoring during image pull operations
added a new parameter ` resourcesMode ` to ` AndroidMetadata ` and modified the usage of it in ` PerolectricTestRunner ` to allow configuration of resource mode for better performance metrics
fix npe in historicprocessinstancequeryimpl : date . tolocaltime ( ) , dateutils . truncate ( ) and date . addseconds ( )
fix ( gradle ) : import android project core instead of project
added error handling for CommandFailedException in LiquibaseCommandLine to improve user feedback for command execution failures
refactor TreeMap class implementation to improve performance and maintainability of the code
added methods to enable asynchronous stack traces and introduced an exception handling mechanism in Display . java to improve asynchronous stack trace management and handle exceptions more effectively
added a method to set the glow color in BubbleTextView and updated the Folder to use this method to improve UI consistency by allowing dynamic adjustment of glow colors
set the text row for link and description elements to improve readability of the displayed text
added a test case for the ` alltypes ` table in ` ResultSetMetaDataTest . java ` and modified the return statement in ` AbstractJdbc2ResultSetMetaData . java ` to ensure the correct retrieval of class names from the database
removed the use of IOUtils for file deletion in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify the code and improve performance by directly writing the file without deleting exceptions
added null check for _ info in HttpConnection before accessing its status code to prevent potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class that initializes the provider to provide a way to initialize the provider instance
fix issue where particle max ram could exceed 2048 mb in all apps
add miss stats per host for local map ( # 23333 )
added logging mechanism to detect missing file in profile activation to improve debugging by providing visibility into file profile checks
use a more descriptive error message when there be a failure to parse the pdf
use toset instead of list to avoid npe .
updated the condition for selecting uploads in ExpandableUploadListAdapter to use a constant for maximum number of uploads to improve code maintainability and reduce the risk of errors related to magic numbers
added assertions to verify the deletion of a record in the dashboardUserMapperTest class to ensure that the delete operation behaves as expected and is functioning correctly
update instructorfeedbackresultspagedata to use primaryparticipant instead of recipient
sulong : use manage address to manage pointer in llvm .
added a method to retrieve the buffer size to provide access to the buffer size for better resource management
add note about -- headless to help troubleshooting
add ` ` new interactions ' ' functionality to the action bar title logic in ` DrawerActivity . java ` to ensure that the action bar displays the most recently modified interaction message
refactor CommandLineParserTest to improve test coverage to ensure more robust validation of command line input handling
tweak all apps fade - in animation to match current state
refactor the method to retrieve Java name from external instead of using a method to improve code readability and maintainability by reducing redundancy
removed unused native methods from CWrapper . java to streamline the code and improve clarity by eliminating unused functionality
added null and constant checks in mmm Checker . java and created a new ValueTest . java file with various constants to ensure that constant values are validated correctly and facilitate testing of constant values in the application
8151540 : [ backout ] [ testlib ] add / ignore to runtime / intrinsics / squaretolen / testsquaretolen . java
remove unnecessary null check ( sorry )
fix javadoc issue that break the build
updated log message format to remove brackets for failed and coverage failures to improve readability and consistency of log outputs
modify bounds settings in DeviceProfile . java to adjust layout parameters to improve layout positioning and accommodate search bar offset
fix client disconnect bug ( # 4687 )
refactor launcher initialization to run on the UI thread for better responsiveness to enhance user experience by preventing UI interruptions during specific actions
refactored the method ` getSourceGroup ` to return a ` Pair < String , ImmutableList < AppleSource > > ` to improve code clarity and remove unnecessary assertions
increased the timeout values for trigger latch synchronization in TestSimTriggerIntegration . java to allow more time for trigger to become triggered before timing out
fix ( core ) : fix checkstyle violation in floatreaderreader
fix a bug in abstractnodecostsearch : if the mean distance be square , do n ' t build the graph for the node cost search .
added a conditional check to skip processing for specific UI components in ResourceEditorView . java to ensure that only valid UI components are processed by avoiding unnecessary processing
fix crash when launch some apps which require icon to be load on
added a check to assign a default commit point based on the latest commit timestamp to ensure that the commit point is properly initialized before proceeding
added unit tests for IMEI andMEID retrieval methods in ShadowTelephonyManagerTest . java and implemented methods in ShadowTelephonyManager . java to ensure correct handling of IMEI and MEID settings for improved functionality
removed redundant code and improved debug logging in SimpleHostRoutingFilter . java to enhance code clarity and reduce potential errors during debugging
added a ` destory ( ) ` method to ` IndexSegment ` and implemented it in ` BitmapInvertedIndex ` and ` IndexSegmentImpl ` to ensure proper resource management and cleanup of resources to prevent memory leaks
[ issue # 4796 ] fix the ut failure of normalmessagesendandreceiveit ( # 4806 )
use standardcharsets for instead of resolve charsets dynamically
hbase - 24456 bulkload should not fail if there be multiple file on the same partition ( navis ryu shaohui )
added a nullable BigDecimal parameter for commission in DefaultWithdrawFundsParams to support additional withdrawal parameters in the withdrawal process
removed an unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and improve readability
solr - 13151 : simplify exception handling to not create morphlineruntimeexception
improve error message when overload method be use without a parameter
replaced the file session deletion method to use StacklessLogging to improve logging capabilities for better debugging and monitoring
added Serializable interface and changed access modifiers to public for XML , HTML32 , and HTML40 entities in Entities . java to enhance data handling and encapsulation for better data integrity
modified test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a null check for claimRequestString before parsing to avoid potential NullPointerExceptions when processing the claimRequest string
replaced FilterFactory with HiveRelFactories for the HiveFilterSetOpTransposeRule to utilize a more efficient builder pattern and improve code flexibility
updated the ` processTypeHintForNestedDocuments ` method to handle null source cases and added unit tests for various generic types to improve type safety and ensure correct mapping behavior for generic types in the database
updated the Solr core management in ` CollectionsAPIDistributedZkTest . java ` to use ` CoreStatus ` instead of ` CoreAdminResponse ` to improve code clarity and flexibility in handling core status requests
initialize transformers and locators lists with ArrayList instances to ensure that the lists are properly instantiated to avoid null pointer exceptions
refactor : fix typo in querydsl error message
make debug graph parse error message more descriptive ( unimplemented )
replaced instances of ` setOf ` with ` copiedSetOf ` and updated related method implementations to improve clarity and maintain consistency in handling the original sets and lists
( chore ) camel - mailmessage : use objecthelper for clean up the tostring ( )
check for null to avoid npe . patch by jbellis
fix for identifier name to be correctly set if it be a property name .
refactor : start wave generator activity in an intent
fix npe when there be no sheet , log a warning
fix # 4246 : wait for event to be send to the pod before wait for the event to be received
added a test method for handling no writer scenarios in the TestReplicationHandler class to ensure that no FSFactory is used during indexing and a new index creation process
make sure we set the return value to null when do a method that do not have a return value
make defaultmxrecord implement comparable so that the record be save in the same order
refactored thread creation in XToolkit to use a privileged action for improved security to enhance thread management and encapsulation during application shutdown
added validation method and selection setting for the select box to ensure the user interface is updated for proper selection
replace IllegalStateException with printStackTrace method output to improve error handling by providing more context for exceptions
updated the createState method to include a parentSplit parameter and modified related logic in the FlowBuilder and SplitState classes to enhance state management by associating the parent flow with the flow
change connectionState variable to be volatile and update its usage in the return statement to ensure thread safety for connection state access
increase default polling period to 1 second to avoid race condition .
replaced ByteBuffer variable declarations with int variables for length and updated encoding methods to use a long argument to improve performance and maintainability by reducing object overhead
6978886 : javadoc show stacktrace after print error result from disk full
[ java ] unusedmodifier : fix false - neg with enum
refactor various lambda expressions to use method references for consistency to enhance code readability and maintainability
disable ssl by default in abstracthttpclientservertest
improve error handling and logging in TransformationHelper . java to provide clearer feedback to the user when a transform fails
replace userPermissions with activeConnectionPermissions in ActiveConnectionRESTService to ensure proper access control for active connection permissions
replaced direct equality check with a custom EqualsBuilder for better code readability to enhance code clarity and maintainability by utilizing a standard library for string concatenation
fix error when fileprocessor pass a null root path to fileprocessor . process ( )
pdfbox - 2516 , pdfbox - 2516 : add annotation filtering , a suggest by ralf hauser
removed deprecated methods from StackTraceCleaner to improve code maintainability and reduce technical debt
updated content disposition header to set content type based on path end with " . css " and " . js " to ensure proper content type is set for CSS and JavaScript files
hhh - 13654 skip test org . hibernate . ejb . test . criterialiteralinselectexpressiontest for oracle
updated method parameters and logic in ForkController . java for version handling to improve code clarity and ensure correct handling of null or empty stats array
added getStats ( ) method to AbstractDataImportHandlerTest and ContextImpl classes , and changed AtomicInteger to AtomicLong in DocBuilder to enhance statistics tracking for better performance monitoring and debugging
[ scb - 2852 ] fix long poll timeout problem ( # 3247 )
replaced gesture margins and fling methods with scroll methods in the LauncherInstrumentation class to simplify the scrolling process and improve code readability
replaced the initialization of the unlocks dialog and added a button to the PausedDialog to improve clarity and functionality of unlock display in the user interface
fix : clear drop buffer when player event be cancel
added a new constant DEFAULT _ PARAM to the StreamResult class to provide a default parameter for the input stream result
updated exception type in the test method from MalformedURLException to IOException to improve error handling and clarify the failure condition
updated the output message to include the chunk type and adjusted spacing in the TsFileSketchTool . java file to enhance clarity of output by including the chunk type in the output
exclude Swift header files from the umbrella header to avoid unnecessary errors during header processing
removed unnecessary whitespace in method signatures of GrizzlyAsyncHttpProvider . java to improve code readability and maintain consistency
added encode method to RequestPlugin . java to ensure proper handling of request data
mondrian : fix nullpointerexception in sql server with db2 .
hive - 27048 : ldap authentication should fail if a blank password be specify ( krisztian kasa , review by alan gate )
pdfbox - 4892 : simplify string . tostring ( int ) , a suggest by valerybokov
added a conditional block to clear the complexWriters when the condition is not met to improve resource management by clearing the complex writers when certain conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress serialization warnings for clarity and maintainability
adjusted visibility of the ClassGraphClassLoader class and improved null - checking logic to enhance code readability and prevent potential NullPointerExceptions
fix parse schema error when location be an empty string ( # 942 )
added constructor to eventsourcingrepository to initialize the event store with optional dependency
refactor symbol handling logic for binary nodes in mmm Attr . java to improve clarity and maintainability of symbol definition and scope handling
modified text handling in SearchedPeopleCursorAdapter to prepend user information to enhance readability of search terms by displaying user - specific information
[ Nuvo ] enable standby mode for ' on ' command ( # 10462 )
# 786 tiff : incorrect tag for planar configuration in tifffilereader .
fix nullpointerexception when try to remove an item from the item list
move averagemetrics util class to utils package . also tidy up comment .
added two new classes , SigInt and SigIntBarrier to handle interruptions to provide a mechanism for signal interruptions in the application
refactor graph handling to support hierarchical graph relationships in ExporterGEXF . java to enhance functionality and flexibility in graph processing based on hierarchical status
tctlseparatedprotocol : use text instead of byte for null text buffer
[ 4563 ] fix rubric question index in response
updated the condition to check for CatalogAndSchema . ORIGINAL _ CASE in CatalogComparator . java to improve accuracy in identifying catalog and schema cases
simonstewart : clear the browsermob proxy server before and after test
fix for npe when report diagnostic error on the service
removed a redundant call to mTextWatcher . reset ( ) in InPlaceEditView . java to ensure that the text watcher is reset correctly before further operations
trufflestring : fix typo in javadoc .
[ flink - 21197 ] [ euphoria ] fix type extraction of out - edges parameter
updated Java 6 assertion classes to improve consistency and functionality to enhance reliability and performance of assertion methods across the codebase
8025076 : fix for jdk - 8017248 break jprt submission for non - unicode locale
[ java ] replace countdownlatch with a cylinderbarrier to make it more robust .
add validation for the reactorReader in DefaultMaven and adjust project collection logic in DefaultGraphBuilder to ensure consistent handling of workspace readers and improve project activation request validation
[ scb - 2681 ] fix ssl config for dynamic service registry ( # 2372 )
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
removed unnecessary whitespace in the constructor of Jdbc3Connection to improve code readability and maintain consistency
refactor the creation of the Servlet instance to improve thread safety and error handling to ensure proper servlet initialization and provide clearer error messages when not needed
added logging functionality and modified server time handling in BinanceExchange and BinanceBaseService to improve traceability of server operations and ensure accurate time tracking
[ ci ] update doc for tomcat 8.5 / 8.5
updated the deregistration logic to handle null getComponentForm to ensure that the application retrieves the current form when it is null
updated the ` decodeResource ` and ` drawBitmap ` methods to accept an additional ` Options ` parameter and implemented new methods for bitmap describeing and drawing to enhance flexibility and functionality for drawable bitmaps in the shadow rendering context
[ java ] expose configuration option for number of message and use a executor to reduce load .
added preventNextClick and updated tweet click handling in TimelineArrayAdapter to enhance user interaction by allowing long click actions more effectively
added " text " to the immutable data types in PostgresDatabase and modified logic for handling numeric parameters in NumberType to ensure compatibility with PostgresDatabase ' s handling of numeric parameters and improve code clarity
shutdown instance after test to fix bounce thread issue
updated state checks to use removeRemovableState ( ) instead of isHardDeletableState ( ) to improve clarity and correctness of state representation in the management controller
modify bridge creation logic to check if the thing registry can be null before adding the result to ensure proper handling of null values and prevent potential NullPointerExceptions
refactor CrawlServer to improve handling of robots expiration and synchronization to enhance readability and maintainability of the code
update the condition checks for network interface display names to include null checks before filtering for " Teredo " to improve robustness of code by avoiding potential null pointer exceptions
[ add ] spritebatch constructor take a default shader , so it can be reuse across thread .
added synchronous commit option with the value of " - c synchronous _ commit = on " in TestUtil . java to enable synchronous commit functionality for improved performance
added elementTypeCoercer to SortedSetTypeCoercer for better handling of duplicate elements to improve type coercion and ensure robust error handling during element collections
modify confirmation button logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality based on file type and favorite status
added a check to ensure the character index is within a valid range to prevent potential ArrayIndexOutOfBoundsException
fix for issue # 666 : address already use ephemeral port in node discovery .
updated the expectation in HostResourceProviderTest to check for existing clusters to ensure that the test correctly verifies that the data is returned as empty
[ flink - 7201 ] [ yarn ] remove unused logger parameter in yarnentrypointutils # loadconfiguration
remove border from frame , remove final on some platform , fix layout problem on mac o x .
removed the ShadowHtml class and updated HtmlTest to use a plain toString ( ) method directly to simplify the codebase and improve test readability
add a new class ` StarTreeRecordStoreFactoryBlackHoleImpl ` for the ` StarTreeRecordStoreFactory ` to facilitate the creation of StarTree record stores in a structured manner within the project
updated logger names to include " http3 " and " quic " alongside " Jetty " to improve logging clarity for HTTP / 2 support
changed the visibility of the ` addListeners ` method from private to public to allow access to ` addListeners ` from other classes
updated methods in StateHandleStore . java for improved functionality to enhance performance and maintainability of the code
updated import statements to use the correct Constraint class for consistency across test files to ensure compatibility with the latest Jetty security library structure
[ 4543 ] instructor : add parameter ` ` < section > ' ' to the user guide ( # 8353 )
use try - with - resources to close fileinputstream
camel - 11246 : camel - jetty - use a unique port to lookup for camel 1145 so we can run camel 11 port etc .
add library target in java library rule for prebuilt java library
do n ' t use an anchor in the message ( they change too often )
bug 9452 : remove the overridden getpagesizeval function in listcapacity and use it from baselistcmd which have the change for default pagination to unlimited .
added a case for CLOSED in IteratingCallback . java to prevent further processing when the callback is closed
added an ` isAuthorized ` boolean to the ` AccessControlContext ` class and modified related methods for better access control handling to ensure proper authorization checks are performed sequentially
modified the event sending logic to handle cases where the application is not an instance of AbstractOSGiApp to ensure proper registration and event processing for non - AbstractOSGiApp instances
added handling for " tiff " codec type in DLNAMediaInfo . java to ensure proper mime type is assigned for Tiff media resources
refactor OptimizedCallTarget to use final variables for types and assumption , and improve null checking to enhance code maintainability and prevent potential null pointer exceptions
added a new file ` CubocDesktop . java ` and modified the application logic in multiple classes to implement a Cubocy application for better rendering and visualization
updated PolicyMonitor initialization to use the target directory instead of test resource directories to ensure proper handling of test resources during different test contexts
added a call to remove all files from the trashbinListAdapter to clean up the trashbin file list before processing
replaced the import of ` org . eclipse . jdi . Bootstrap ` with ` com . sun . jdi . Bootstrap . allConnectors ( ) ` to ensure compatibility with the correct JDI class
[ gr - 3859 ] implementing llvm . llvm . runner . checkglobalnode for more flexible global variable storage .
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted event data accordingly to enhance event handling by associating item information with their component details
burningmanpresentationservice : set a maximum burn amount to 100000 ( # 219 )
simplified import statements and enhanced the snapshotObject method for UniqueConstraintSnapshotGeneratorSnowflake to improve code clarity and efficiency in handling unique constraints
modified the construction of the item string in DMLTransformer . java to handle empty insert statements to ensure that the item defaults to " namedValues " when the insert statementBuilder is not available
downgrade to https for service _ validate to align with http standard
updated ` getDefaultValidFunctionName ` method to accept a boolean parameter for statement handling to enhance functionality by allowing the default name to be displayed only when a statement is present , improving error handling
updated JarLauncher . java file to improve functionality to enhance performance and maintainability of the codebase
updated generic type declarations for collections and methods across multiple classes for better type safety to enhance code clarity and prevent potential type safety issues with generics
fix a crash when there ' s no video device to open up in a call .
added tests for the PGobject update functionality in ResultSetTest . java to ensure that the database correctly updates date with PostgreSQL objects
updated password reset logic to validate SCIM user credentials to ensure proper handling of bad requests and non - UAA origins during password reset
replaced direct child node retrieval with getDocumentElement method to obtain the document element to improve efficiency by directly accessing the document ' s document element
refactor caching logic in Cache . java to improve performance and reduce load times
fix typo : timeinsec - > timemillis .
add a check for valid binding , and remove some dead code .
added a new ` Chainer ` class and updated the ` contains ` method to return a ` CollectionSubject < T > ` instance to enhance functionality by providing a chainer pattern for assertions
refactor Model class to improve code organization to enhance maintainability and readability of the code
updated recordedTime calculation to include a value of 619315200000L to ensure accurate time tracking across different environments
added a condition to resize the status if the terminal type starts with Windows to ensure proper handling of Windows terminals
updated log message format and added state checking for host versions in ` UpdateDesiredStackAction . java ` to improve clarity of log messages and ensure only valid state is set for host versions
remove dependency between third _ party / java _ src / java _ src / java _ java _ library . jar and
[ mng - 2638 ] maven plugin : use linkedhashset instead of hashset to maintain predictable order of artifact
avoid load operation object from memory by not need exception handling
reformat code for better readability by adjusting the method call order
make commitlog archiver thread pool name consistent
added connection calls to CloudSolrClient and implemented a test for cloud Solr client uploads to ensure proper connection handling and validate functionality when interacting with CloudSolrClient
make binding management more thread - safe .
added clearFilesAndCache method and refactored file creation in ShadowContext to improve code maintainability and reduce redundancy in file handling operations
added LinkedHashSet and TreeMap imports to SecureXStream and modified the getStyles method in XStreamPersisterTest to ensure proper ordering and retrieval of styles in the XStream persistence layer
[ drools - 987 ] allow kiehelper to inject kiemodulemodel into a kierepository ( # 989 )
updated the block event handling logic to check for Farmland instances instead of hardcoding the type to improve flexibility and control over the behavior of the Soil dry flag
added a default implementation of the getLocalIp ( ) method in FinishedSpan . java to provide a default implementation for accessing the local IP
updated JdbcStepExecutionDao to use SerializationUtils for deserialization of object values to improve data handling and maintain consistency in key usage
update byte calculations in multiple classes to use simplified character literals to improve code readability and maintainability by removing unnecessary character references
* bundle the ` python37 ` and ` python37 ` program , executable via ` - python ` on window
refactor PluginTab to encapsulate the plugins list and add a refresh button to improve code organization and enhance user experience by allowing refreshing of plugins
change log level to warn for load error in defaulthistory
cloudstack - 3223 , cloudstack - 3223 : fix attach volume to vm with detached volume in vmware
camel - 9682 : sftp component should use daemon stop . thanks to stephan siano for reporting .
rename ExperimentalMockitoJUnitRunner . java file to improve clarity and consistency in naming conventions
updated serial handling in GpsSettingsActivity and Session to use Utilities . GetBuildSerial ( ) instead of Build . SERIAL to ensure that the correct serial ID is displayed based on the configuration
replaced old implementation with new implementation to enhance performance and maintainability of the code
remove skeletoncontrol from the spatial if it ' s null to avoid potential null pointer exception
added functionality to set and retrieve the smartReplies in ShadowRanking to improve the notification channel handling for smart replies
[ java ] simplify listing of file in archive conductor to avoid recursive call .
refactor the calculation of carrot2ResourcesDir for clarity to improve readability and maintainability of the code
added null check for testRect in WindowsTreeUI and created a new file for bug8004298 to improve robustness by preventing NullPointerExceptions during mouse movement
updated ASM API version from ASM7 to ASM9 in ScriptUtils and CompilationConfig to ensure compatibility with the latest ASM framework version
replaced null return statements with exceptions in RecommenderMapper . java and added null check in CacheTest . java to improve error handling and prevent potential null pointer exceptions when accessing map files
added client information handling to the SurrogateAuthenticationEventListenerTests to enhance testing capabilities by providing client information for surrogate authentication
added isUserView variable with a default value of false to initialize the user view when necessary
replaced calls to ` GraphvizJavaExecutorUtility . isGraphvizJavaAvailable ` with ` GraphvizUtility . isGraphvizJavaAvailable ` for consistency and clarity to streamline the code by eliminating redundant functionality and enhancing maintainability
fix checkstyle issue in util / logdispatcherthreadmetrics . java ( # 722 )
added a new module - info . java file for the SQLite module to define module dependencies and exports for better encapsulation and control
added a 5 - second sleep in StreamResetTest . java to simulate a delay for better synchronization during stream reset
removed conditional checks for " new " and " api " configurations before initializing the permissionsManager to streamline permission management by ensuring only necessary permissions are instantiated
updated DateParser and TestDateParser classes to improve date parsing functionality and test coverage
added a depth method that returns a constant value of 0.5 f in SpringLoadedState to provide a default depth value for better resource management
avro - 2704 : improve binarydecodertest performance by use arrays . copyofrange .
[ hotfix ] [ doc ] fix typo in executiongraph . java
removed swipe - and - left layout from the notification and replaced it with a direct removal method to streamline the notification handling process and improve code simplicity
[ scb - 2687 ] fix npe when convert none to invocationexception ( # 2695 )
fix checkstyle issue in inventory / glowcontainer . java ( # 773 )
replaced MethodHandle method invocation with getDeclaredMethod method call for better method access to improve compatibility with reflective method access and enhance exception handling
mondrian : fix integer overflow in testmondrianbasictest .
updated return statements to simplify the formatting of metrics and datasets in BaseEmailContentFormatter to improve readability and maintainability of the email output
added functionality to manage and hide a JPanel in the LayoutPanel class to improve user interface by managing the visibility and functionality of the layout
updated condition to handle null location in ServerCallable to ensure robustness by preventing potential NullPointerExceptions
move pipeline relate method to other class , and add some more javadocs .
added a check for null key parameters in DSAPublicKey and simplified the return statement in BasicChecker . java to ensure proper handling of missing parameters and improve code clarity
refactor MediaTypeRequestMatcher to use a separate method for checking ignored media types to improve code readability and maintainability by encapsulating the logic for checking content type
hive - 27373 : llap : log the task number when submit work info to llap ( sergey shelukhin , review by prasanth jayachandran )
added property to the SpringBootTest annotation to allow bean definition overriding in tests to enhance test flexibility by allowing bean definitions to be overridden
added null check before closing indexReader to prevent potential NullPointerException
updated package structure and class names for BTCMarketsStreamingService to improve organization and clarity of the package structure
add test for fixed part of fenced code parse error
add a new file CompatibilityTest . java for testing XML property parsing to ensure correct parsing and validation of properties in the Compatibility . xml
added new utility classes for push notification and security handling to enhance the application ' s capability to manage push notifications and improve security measures
fix the number of instance during rebalance process for target and current replica
bump version to 2.7 . 0 and tidy release note
fix some whitespace issue in log4j - core ( # 1546 )
add a fix for bz 66692 . we should throw a sockettimeoutexception when a read fails .
initialized friction , restitution , density , and isSensor variables to zero in FixtureDef . java to initialize values to avoid potential null reference issues
updated method names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and consistency in method naming conventions
added a try - catch block to handle IOException during the shell command execution to improve reliability by logging the failure when the broadcast idle command fails
added unit tests for font and link tags to ensure correct formatting of string resources to improve error reporting for missing font and link tags
fix guistatscomponent ' s move on the correct source folder . close # 537
added permission handling for CALL _ PHONE in the launcher to ensure proper functionality for making phone calls in the application
updated return value from 32 to 36 in SimulationPanel . java and modified import statements in BasicEventSimulationEngine . java and Startup . java to utilize flightData for enhanced functionality and maintainability
updated GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoEncodingUtils , GeoPointInPolygonQuery , and GeoEncodingUtils classes to improve distance query performance and equality checks to enhance code clarity and reduce redundancy in byte manipulation logic
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to ensure thread safety and prevent potential IllegalStateExceptions
added a new constant VPX in CodecTypes . java to define the codec type for decoding
added coordinator address option to the DistBuildFactory and DistBuildRunCommand classes to enable configuration of the remote coordinator thrift server address
added a new method ` match ` in ` FsUtils ` and modified timer methods in ` WrapTimer ` to improve path matching functionality and enhance timer management
added a conditional check before adding the value in TestTaxonomyFacetSumValueSource . java to avoid unnecessary operations when the value is zero
do n ' t show boolean info for non - boolean input but non - boolean booleans
added a test annotation to the TestPerfBenchMarkDriver class to ensure test methods are recognized and executed within the test suite
update the materialization time in ObjectStore and add a test for updating creation metadata in TestObjectStore to ensure accurate materialization time updates during object creation for better management
added handling for UnsatisfiedLinkError in VoskSTTService to improve error reporting for native dependency resolution
remove ` ` is _ one _ widget ' ' property when sampler start ( see bug 3992 )
updated break weight logic in GlyphView . java to handle edge cases more explicitly to ensure accurate break weight evaluation for better text rendering
refactor sync check reading logic to use a buffer for improved efficiency to enhance efficiency and reduce memory usage during sync processing
added an awaitsFix annotation for the AutoAddReplicasPlanActionTest class to address issue SOLR - 13028 that is expected to be fixed
replaced direct usage of ` getSortedByCounts ( ) ` with a LinkedList for steps and processors to improve readability and maintainability of the code
removed unnecessary parameters and simplified the DataFlavorComparator implementation to improve code clarity and maintainability by reducing complexity
hbase - 24456 : thrift : use random free port for info port in testthriftservercmdline ( gopal v , review by ashutosh chauhan )
added a check for EOF in RegExpScanner . java to ensure proper handling of EOF scenarios during regular expression processing
replace Boolean . getBoolean with Set < String > for managing enabled metrics and timers to improve clarity and efficiency in checking for existing entries
fix npe in findchatroom jabber message when the list of chat be not null .
add check for null and empty string and improve error message formatting
refactor refresh token creation logic into a separate method called createRefreshToken to improve code readability and reduce duplication in token handling
updated error message formatting for path transformation failures to enhance clarity and maintain consistency in error reporting
[ flink - 11341 ] [ yarn ] remove high - availability job clearing mechanism from yarnapplicationmasterrunner
added a method to return a HardwareBuffer and an implementation of it to provide a placeholder for future implementation of hardware buffer retrieval
added SSL URI to BTCChinaExchange by setting the SSL URI to ensure the exchange can access the BTCChina service ' s SSL URI
pmd : use relative path for output file in ant task
added OauthController and Oauth2PluginTest classes to implement OAuth2 integration testing to facilitate the testing of OAuth2 integration within the application
make a semgrex reference an actual link for use in javadoc
implemented the ` flatMap ` and ` flatCollection ` methods in ` AbstractStreamEx ` and removed the old implementation from ` EntryStream ` to streamline stream handling and consolidate functionality in ` EntryStream `
[ scb - 2687 ] fix the type of error log message in exceptiontoproducerresponseconverters
added comments to the condition of the ` shouldComeFromThisClassLoader ` to improve clarity on the class being considered to run with Maven Surefire for Android projects with mixed scala Java tests
fix typo that result in incorrect judgment when disconnecting .
changed the type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java to ensure correct handling of database functions as input
geot - 5131 : added test for station 3gml31 and st _ gml32 station .
added a volatile flag to indicate whether the network was invoked and updated variable names for clarity to improve thread safety and enhance code readability by explicitly indicating whether the network was invoked
do n ' t expand regex mapping if configure to avoid some bug
added a constant for seek length and refactored the splitIntoThirtyParts method to improve clarity and maintainability of the code
added XLCDCommunicator and XLCDController classes , and modified FirmwareUtils to use the new switch - case structure for handling Grbl commands to enhance firmware handling and improve command management in the universal Gcodesender
[ bz - 115533425 ] move kie - api from kmodule to kie - api ( # 9952 )
replaced the infinite loop with a retry mechanism and added assertions to ensure that retry attempts is greater than zero to improve reliability of event queries
replaced the handling of thread states to use a constant for better maintainability to improve code readability and reduce redundancy in thread state management
updated the equals and hashCode methods in DelegatingMethod and added a corresponding test class to ensure proper functionality and validation of DelegatingMethod instances
updated FREEZE and UNFREEZE values from 20000 to 10000 in EnergyCost . java to reduce the time interval for better resource management
updated the ` command ` method to throw ` ConfigurationException ` and added configuration saving operations to ensure that configuration is properly managed during the command execution
deleted ` SpringTransactionHooks . java ` and replaced it with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest . java ` to streamline transaction handling by consolidating transaction hook logic
rename AbstractClassAssert in the files to improve clarity and consistency in naming conventions
8014240 : improved jdi test for stringreference . uninitializedstringvalue ( )
added support for provided dependencies in AndroidLibraryDescription and updated related classes to enhance dependency management and improve flexibility in dependency handling
added a new BooleanFlag to enable keyboard transition synchronization to allow the keyboard open and close animations when transitioning between home and all apps
replaced the logic for saving bug reports with a boolean flag to improve clarity in tracking bug report state
added a constant for " cinepack " format in FormatConfiguration . java and utilized it in LibMediaInfoParser . java to improve code readability and maintainability by centralizing format definition
added camera bobbing animation to player , fixes # 468
cas : use digest . tostring ( ) instead of data . describe ( ) to save blob
deleted the HSQLDBServerFilesFilter class and refactored file listing in TestUtility to eliminate unused code and improve code maintainability
added an additional condition to the return statement in WalletAppKit . java to ensure that null checks are executed only when necessary
updated API call to use APIUtils . getApiDataVideoVersion ( ) instead of APIUtils . getApiDataVideoVersion ( ) and added logging for missing title to ensure compatibility with API responses and improve traceability for missing titles
added a method to retrieve method invocation based on type existence to ensure type consistency in method invocation handling
replaced hardcoded array size with a constant for better maintainability to improve code readability and reduce repetition
bugfix # 207373 - display ` ` current mode ' ' reset message when switch the current mode of the method system
hive - 2480 : when mask zero , return the same number ( a l á szl ó bodor review by jason dere )
use temporary folder instead of create temporary file in test
make itemstack damageable check the itemstack object , and apply a gethassubtypes method instead of itemstack itself .
fix incorrect rendering of line width with optional value . close # 3821
simonstewart : force the firefox driver to start a page on the first startup
updated the condition to check for HTTP HTTP CONNECT and GET headers in Http1xClientConnection . java to ensure proper handling of upgrade requests alongside HTTP status codes
change task type from " compile " to " process - classes " in JoobyMojo . java to align with the new naming conventions for processing classes
bug 51882 - httpclient4impl should use closeidleconnections ( ) and not shutdown ( )
added a conditional check for aggregate function suffix before processing metrics to avoid unnecessary processing when aggregate function suffixes are not present
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use this new method to improve flexibility in handling fullscreen display parameters
added a new Java file containing a solution for counting values based on user - input frequency
[ java ] initialize socketchannel to null in clusteredagentmanagerimpl . onclose ( )
rename MutisignOperationerGodicTest . java file to improve clarity and maintain consistency in naming conventions
added error handling for file reading in StaxEventItemReader to ensure proper restart behavior based on the end of the fragment
refactored text rendering in ShadowTextView and added null check in TestAttributeSet to enhance code robustness and prevent potential null pointer exceptions
updated import statements to use ` net . minidev . json ` instead of ` com . nimbusds . jose . shaded . json ` to resolve dependency issues caused by refactoring
updated OS name handling to support AIX systems to ensure proper identification of systems that start with " Linux "
cloudstack - 5229 : fix access detail for dhcp and dhcp command which do n ' t use private ip
added a method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to enable synchronous execution of Runnable tasks without blocking results
int - 181 remove @ ignore test for now
replace integer calculations with Math . round for position adjustments to ensure consistent rounding for rounded positioning
mahout - 492 - fix formatting by adjusting line length
hbase - 16231 fix the alignment issue of keyvalue . rowcache
camel - 14263 : camel - core - optimize type converter to avoid reflection . work in progress .
added support for conditional tasks in Spark cross - product check to enhance task execution capabilities for better performance
refactored profile update actions in Launcher and LauncherModel classes to ensure consistent handling of profile updates
updated conditional logic in LoginInfoEndpoint and added new test cases in LoginInfoEndpointTests to ensure correct handling of account chooser and discovery states when there is at least one active OAuth provider
hbase - 21975 add toddescriptivestring method to make it easy to debug region status
renamed the ` message ` variable to ` msg ` and introduced a new ` result ` variable in the ` HuobiAccountInfo ` class to better reflect the purpose of the messages and ensure that the error message is properly identified in the response
added support for adding a reserve words for the " PERIOD " column in MariaDB to enhance SQL generation capabilities for the MariaDB database
[ java ] update documentation for default environment of portable worker to 8 or 11 .
added suggestions for Android 7.1 - related changes to the dictionary loading mechanism to enhance user engagement with recent changes in the dictionary
updated the access modifier of NUM _ MILLIS _ IN _ DAY from private to public and moved it from IndexExpressionIT to TestUtil to allow external access to the constant while maintaining encapsulation
remove system . out . println introduce by mistake
[ java ] use aeron client invoker to reduce allocation when client do not need to invoke aeron client
updated validation for implicit lambda parameters and refactored type assignment in method calls to improve type safety and ensure correct handling of raw parameter types
refactor visibility and functionality of menu items in FileMenuFilter and FileDetailFragment to improve code readability and reduce duplication by encapsulating logic in dedicated methods
[ btc - e ] update withdrawal to include btc _ deposit
updated data structures from List to Set for series and exceptions in RetryFilterFunctions . java to improve performance and prevent duplicate entries in the list
added a @ Deprecated annotation to the PluginLoader class to mark the class as outdated to discourage its use in future development
[ iotdb - 3370 ] fix last query execution bug when sequence time be less than last query time ( # 6667 )
replaced a newline character in the request string with a space to ensure consistent formatting of the output
add a static block to set the logging system property to ERROR in BuildImageMojo . java to ensure that the application handles errors gracefully during image processing
added a call to setSafeArea on the titleBar to ensure safe area visibility for the title bar
reversed the iteration order in the TimeSeriesChunkMetaDataList processing to improve performance by using the correct index for accessing TimeSeriesChunkMetaDataList
added SQL syntax for renaming columns in AlterTest . java to enable correct parsing and deparsing of the ALTER TABLE statement
make copystate ( ) public in abstracthikariconfig .
fixed - execution of completablefuture . get should n ' t be return by asyncexecutorservice . executecallable
fix # 2 - improved file name splitting .
[ flink - 24772 ] [ table ] integrate flink - streaming - java and flink - sql - java for flink - streaming - java
fix npe in comparefunctionsprocessor when name argument be null
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task before reduce scope
updated the ` toString ( IndexReader ir ) ` methods in ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to improve method utility clarity by providing meaningful string representations
added checks for invalidated states in AbsSwipeUpHandler and unregistered a task stack listener in TaskAnimationManager to ensure proper handling of gesture state and prevent potential null pointer exceptions
added lock timestamp methods and updated lock timestamp handling in AppPreferences and PreferenceManager to improve code clarity and maintainability by consolidating lock timestamp management
refactor artist retrieval logic in MediaInfoParser to use a separate method for better readability to improve code clarity and maintainability by centralizing artist retrieval logic
added null check for remoteMessage before accessing its data to avoid potential NullPointerExceptions when accessing remoteMessage ' s data
nifi - 3994 : fixed npe in splittext for empty header file .
added support for Windows key store in HttpsConnectorFactory to enhance security by loading the keystore directly when using Windows
updated the default CHECK _ TIMEOUT value from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to allow more time for validation in tests
added handling for FILE _ NOT _ FOUND result code in FileSyncAdapter to ensure proper handling of file not found scenarios
added animation control methods and updated value handling in the Slider class to enhance animation control and improve user experience with smooth transitions
reordered assertions in LineSeparatorProcessorTest for consistency to improve code readability and maintainability
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to improve texture packing capacity for better performance
added a test for the ` negatedTernaryNotUnwrapped ` method and updated the type checks in the ` UnnecessaryParentheses ` class to ensure correct handling of negated ternary expressions in code formatting
camel - 3569 : fixed npe in hazelcast consumer if empty body be provide to process method on hazelcast .
added TextFeedbackTest to the test suite and implemented a normal operation in TestRunner to enhance testing capabilities for text feedback in JUnit tests
replace Math . round with Float . compare for score comparison to improve precision in handling score values
updated DENSITY constants and modified file writing logic in ResourceEditorApp to support new features and ensure proper resource management with try - with - resources
make arraycopysnippets respect the array class offset when copy array .
log4j2 - 1349 - fix log4j2 - metric and log4j2 - metric test .
added support for remote SCM in multiple classes to enhance remote system configuration flexibility
expanded the condition to check for additional state values in MieleApplianceHandler to enhance state management by allowing additional states such as end and launcher states
replace ` StatsLogCompat ` with ` SysUiStatsLog ` for event logging to standardize event handling and improve code maintainability
( chore ) camel - local - zookeeper : fix typo
added tests for ProjectGenerationEvent finished and started events to ensure accurate serialization of project - related events
ggb - 2118 preview point need to be enable for polynomial [ need backport ] + support for polynomial [ need backport ]
refactor JavaCompiler class methods for improved readability to enhance maintainability and ease of understanding
hbase - 21975 log an error message if the amount of data be not small enough to execute random read ( # 4239 )
updated multiple Java files related to heap and test functionality to improve code organization and maintainability across the project
added " -- gc - sections " and " nocopyreloc " options to the ldflags initialization to enable better management of garbage collection sections in the NdkCxxPlatform
updated URI handling in SpringCloudCircuitBreakerFilterFactory to dynamically expand fallback URI to ensure correct URI formatting for circuit breaker variables
simonstewart : replace a few new line at the end of the file with one line at the end of the file
bug 56711 : avoid name clash of readonlysharedstringstable attribute when saxon be use
added a method to retrieve account addresses via HTTP requests in HttpMethed . java and created a corresponding test in HttpTestAccount001 . java to enhance account retrieval functionality and ensure proper handling of HTTP requests
added a check for available text width before setting the text layout in SwingUtilities2 . java and modified the GTKLookAndFeel setting in Test6635110 . java to avoid potential errors when accessing the GTKLookAndFeel property
refactor FlatteningIterator to remove dependency on an anonymous class and streamline object handling to enhance code clarity and maintainability by simplifying object management
replace single HTML tags with empty string replacements for title and body in NotificationUtils to ensure proper formatting of text in notifications
doc : generate sample code in the java microgenerator ( # 419 )
[ 2203 ] instructor : session : fix erroneous behavior of edit question
bug 55425 : if row be not first row in hssfsheet , row num should be 1 or last row in firstrownum ( )
added permission checks for launcher activities to enhance security to prevent malicious intents from being executed without proper permissions
[ java ] send ok event outside of consensus module when cluster client session go offline .
added hashCode method implementations for AbstractParquetMapInspector and refactored equality checks to improve hash code functionality and ensure proper type safety
added a condition to flush the buffer when remotelyClosed to ensure proper resource management when the stream is closed
updated SplitReader interface to extend AutoCloseable and removed the close method to improve resource management and allow for automatic closure of resources
updated the deepCopy method in GsonBuilder to include additional properties to enhance the functionality of GsonBuilder by allowing deep copying of properties
sulong : cache the not _ found state of a source for consistency
refactor file handling in RestClientRequestImpl to use a more direct iteration over futures to improve code readability and efficiency by simplifying asynchronous processing
modified the method call for dispatching status strings to ensure proper handling of status strings in the controller
updated ClassLoader handling in MockFactory and created SearchingClassLoader for improved class loading to enhance class loading capabilities and ensure consistent usage across different class loaders
add a test case for flag refresh bug ( # 156 )
added support for LEFT _ SEMI _ JOIN in the condition checks to ensure proper handling of left semi - joins in the ConstantPropagateProcFactory
refactor response completion checks in HttpReceiver and HttpSender classes to improve code clarity and handle HTTP status codes appropriately
replaced arrayLengthOffset with arrayOopDescLengthOffset in multiple files to standardize the length calculation for array operations
fix some failing test case due to time issue
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added a check for the app context ' s running state before stopping it to ensure that the application does not start if it is running , preventing potential errors
modified the drawItem method to return the GlyphLayout directly to improve method usability by providing the result of the drawing operation
replaced direct retrieval of metrics with a utility method to improve metric handling and error management in the Springmvc client
removed the SAFE _ ACCOUNT _ AGE _ DATE constant and updated the return statement in AccountAgeWitnessService . java to streamline the code by eliminating unnecessary complexity in the mapping operation
refactor spacing and switch statements for clarity and consistency to improve code readability and maintainability
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated related tests to utilize it to improve the handling of resource URL resolution during webflow operations
add dexreturninliner for dex body that provide additional information like the return statement .
add more property to enrich rule ( # 2719 )
removed the NOFOLLOW _ LINKS option from the directory check in PathResource and modified test cases to include symlinks to ensure proper handling of symlinks during directory checks
[ flink - 24806 ] [ table ] remove sql dialect from configuration
refactor rDotJavaPackages handling to use a Supplier for better clarity to improve readability and maintainability of the code
add test case for pmd package declaration
added configuration for min cross compaction unseq file level to ensure proper configuration settings for cross compaction behavior
[ hotfix ] move activeresourcemanager into ` active ` package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to disable the test due to its disabled state
updated URI creation method in ZipResource to handle URISyntaxException to improve robustness of URI handling and prevent potential issues with spaces in paths
update progress listener formatting and enhance thumbnail generation logic to improve code readability and ensure thumbnails are updated correctly when uploads occur
refactor RobolectricTestRunner to handle class hierarchy when retrieving configuration annotations to improve flexibility and correctness in managing test class configurations
filter blocks and items from their registry to only include those with non - null names to improve filtering of null values during data loading
changed abstract methods to non - abstract in AbstractDataChangedListener and improved session handling in WebsocketCollector and WebsocketDataChangedListener to enhance method usability and ensure proper session management during data changes
modify JSONPojoConvertor to handle enum types and update test cases accordingly to enhance type safety and improve color handling with enum values
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the deprecated option is removed soon
changed the type of ` originalPayload ` from ` String ` to ` byte [ ] ` and updated the method for parsing Gwt RPC method to optimize memory handling and enhance character encoding support
implement orientation correction listener in GyroControl class to enhance mouse responsiveness for different device orientations
change biome _ list _ size to use biomegenbase . getarray ( ) . length instead of a hardcoded value
updated print method names from ` println ` to ` print ` and made interfaces public to improve consistency and clarity in output handling
remove a redundant assignment of the environment variable in FileCompilerConfig . java to streamline the code for better readability and maintainability
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a standardized way to handle byte - to - long operations in a streamlined manner
added a preload parameter to MMapDirectoryFactory to enable dynamic preloading based on user preferences
added custom metrics for various enabled components in BukkitPlatform to provide detailed metrics on component usage for better analytics
updated QuickConnectREST class to improve connection handling to enhance performance and maintainability of the connection process
added aspect ratio setting and default card image initialization in CardPresenter . java to enhance image handling capabilities for better visual representation
# 2029 - do n ' t count implicit authentication for logout page .
update cloning logic for decimalValues and byteLengths in VectorHashKeyWrapper . java to ensure proper handling of empty arrays and avoid array allocation when their lengths are greater than zero
added methods to test system nanotime Jit and its associated logic in TimeChangeTest . java to improve robustness and accuracy of system time calculations during JIT testing
added line trimming to MultiPartFilter and debug print statement in MultipartFilterTest to ensure clean input handling and improve test output clarity
fire experience drop event ( # 3421 )
updated error messaging for improved clarity in OpenUVBridgeHandler and OpenUVReportHandler to enhance user feedback by providing more descriptive error context
[ beam - 8470 ] remove unsupportedoperatorsvisitor from beamqueryplanner . validate ( sqlnode )
updated GraphEnhancementQueryEnvironment to enhance the handling of optional target graphs and introduced a new test for RdepsFunction to improve dependency management and ensure proper functionality in the query environment
refactor Character class to improve code readability to enhance maintainability and simplify future updates
added logic to scale all rockets in the selection option based on whether it is a single rocket to ensure the selection option reflects the currently selected rocket instead of a single one
replaced ` Arrays . toString ( ) ` with ` bytes ` in the assertion for better readability to improve code clarity and reduce unnecessary object creation
updated time boundary handling in BaseBrokerRequestHandler to improve retrieval of time boundary information and streamline pinot query initialization
fix keep - alive break with apr / native .
updated regex for extracting image names and modified album title extraction logic to improve clarity and accuracy of image handling in the ripping process
replaced calls to ` mDevice . wait ` with ` TestHelpers . wait ` in multiple test files to improve code readability and consistency by using a centralized ` TestHelpers . wait ` method
updated conditions in QuickstepLauncher to include phone profile check to ensure proper layout behavior for phone devices in non - landscape orientation
replaced calls to ` getValue ( query , PROPERTY ) ` with ` unwrap ( QueryImpl . class ) ` in ` PartTreeJpaQueryIntegrationTests . java ` to improve query handling and maintain consistency in the code
replaced direct usage of ` Files . readAllLines ` with ` readMatchingLines ` for reading lines to improve code clarity and encapsulate the reading logic in a separate method
added dynamic check for the presence of the getResultStream method in JpaQueryExecution to enhance functionality by dynamically accessing the result stream for JPA queries
fixed an issue where an entity with no type is present in it would cause a nullpointerexception
add test to ensure that deleteentryprocessor clears map when value attribute be indexed
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 250
updated color manipulation in mmm Utils . java and modified htmlMessage in mmm UtilsTest . java to simplify color handling and improve test content for font rendering
set disable state on menu item to match new behaviour
updated the scratch path format and added recursive step configuration in Aapt2Link . java to improve code readability and ensure proper reference to the link tree path
updated instances of ` new capture < Supplier < > > ( ) ` to ` newInstance ( ) ` in ` ExternalJavacTest . java ` and changed mock creation methods in ` ThriftOverHttpServiceTest . java ` to improve instantiation flexibility and consistency in mock creation
ticket # 2506 : clear select geos selection initially ( prevent inf . loop )
small fix to the ysld validator to not throw a runtimeexception when parse the cql expression
Implemented the ` isCanceled ` method across multiple classes to standardize the cancellation check and ensure consistent behavior across different call implementations
refactor multiple classes to implement a default method for checking annotation presence to improve code consistency and reduce redundancy across these classes
replaced the implementation of the ` removeAllWidgets ` method with a default implementation to indicate that the method is not yet implemented yet
[ flink - 21980 ] [ yarn ] log info message for easy debugging in yarn test
opensslcipher : do n ' t use the deprecated output size calculation ( # 492 )
added logic to determine usage of VLC based on Fire TV Stick and high - res content to ensure compatibility with Fire TV Stick and improve media management
[ beam - 8470 ] add show ( ) to the sample dataset source mock ( # 17808 )
updated listener management logic in GpsLoggingService . java to handle specific listener conditions to ensure accurate reporting of GPS and passive listeners for better user experience
modified the ` putString ` method to accept a byte array instead of a boolean and updated the handling of wide width to enable compatibility with JNI by providing fallback width measurement
added import for BaseItemDragListener and modified item creation logic in FolderIcon . java to enable handling of BaseItemDragListener during drag operations
added methods to create an empty artifact for various data types and updated logic for handling empty values to enhance type safety and prevent runtime errors when parsing configuration values
removed unnecessary whitespace from configuration lines in RabbitMQPublisherImpl . java to improve code readability and maintain consistency
removed unnecessary Aug1 check from the video link validation to simplify the condition for ensuring the video link contains " . m3u8 "
camel - 6056 : fixed sftp component to work on unix with sftp . thanks to benjamin graf for reporting .
camel - 14284 : adjust unit test for new mockito version
renamed groupSortStr to sortWithinGroupStr for clarity to improve code readability by using a more descriptive variable name
double plant - do n ' t allow dual plane to create block that can no longer be place .
change from focusable to request focus for the tree to improve user experience by reducing focus
throw all exception from cleanup ( ) method ( # 4417 )
removed unnecessary license handling in DB2TestSystem and updated conditions in DockerDatabaseWrapper and TableIsEmptyGenerator to streamline code for better readability and maintainability
made ` units ` a mutable variable and added a method to set its value and updated unit handling logic to improve flexibility in unit management and maintain consistency across behavior
added a new static final CurrencyPair BTC _ ZMW in CurrencyPair . java to support new currency pairs for BTC and ZMW
added logic to set the number of samples based on context ' s sample settings to ensure that the application uses the configured sample count for optimal performance
removed redundant prefix " job . step " in test cases to streamline test cases for consistency and clarity
added ' final ' modifier to variables in CentralAuthenticationServiceImplTests . java to ensure immutability of variables and prevent accidental modifications
[ calcite - 2652 ] add parentheses around ` ` ( ) ' ' to debug output
added multiple calls to addServiceOutput ( ) and adjusted the handling of service outputs in DDLSemanticAnalyzer . java to enhance the functionality of service output management and ensure proper error logging during tasks
[ drools - 2284 ] fix integertype coercion in drlxparser ( # 2651 )
added a reference to " org . eclipse . jdt . " in WebAppContext . java to hide JDT usage to improve code clarity
changed the return value from super . useAuthCache ( ) && cacheSPNEGO to false to simplify authentication logic by bypassing unnecessary caching checks
convert namespace to lowercase from segments [ 0 ] to ensure consistent namespace handling for case - sensitive data
camel - 5604 : direct component must throw the notavailableexception when it be not available to ensure backwards compatibility
added null check for the ZooKeeper object before accessing its state to prevent potential NullPointerException when accessing the ZooKeeper instance
updated progressBar step message formatting to improve readability of the progress bar message
added a UI helper thread running method for vibration in AllSetActivity to enhance UI responsiveness by allowing the vibration callback to be executed on the UI thread
added a method to update the last remote stream ID to ensure the correct last modified stream ID is used for tracking
set antialiasing render hint when hide header / toolbar to avoid text problem
[ java ] : remove usage of configuration . subscriptiontermwindowsize and use configuration . receivedposition directly .
refactor : remove static import of enums in ctannotationimpl . java ( # 2588 )
update exoplayer . builder javadoc to mention duration of init
replaced the method ` getRGBPixelImpl ` with a new implementation using ` getRGBPixels ` to improve performance by utilizing a rectangle for pixel retrieval
add a new method ` newPrintStream ` to handle specific encoding for output streams to improve flexibility in setting output stream encodings based on system properties
touchablemovementmethod : increase vibration to 25 vibration instead of 1
add some more import statement that be miss some data
modified the constructor of WebSocketClient to remove redundant parameters to streamline code for better readability and maintainability
do n ' t always open a new html test page when i18n be disabled
replace handleBootstrapMethodError with handleLoadConstantException and update method names accordingly to improve error handling logic for constant loading issues
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper state management during integration tests
added a new ` LowercaseComparator ` class to implement case - insensitive comparison for string inputs to enable case - insensitive comparison of strings regardless of input settings
refactor parsing logic to improve clarity and efficiency to enhance error handling for source file declarations and streamline the parsing process
simonstewart : adding test for fix for issue # 643
added validation to ensure the length of keys is 9 to prevent processing errors caused by incorrect key count handling
added error handling for retrieving attributes in HDF5BatchReader to ensure robustness by logging a warning when the attribute retrieval fails due to Huge object BTrees with 1 record
[ beam - 7970 ] use ` writeresult ` instead of ` pdone ` a return value .
rename ` copySnippetRequestEntity ` to ` createTemplateRequestEntity ` and update the annotation to include the ` @ ApiImplicitParam ` to improve clarity regarding the purpose of the template upload process
8014138 : [ testbug ] need a test to cover multi - dimensional class file
cloudstack - 4439 : change default value of ' secondary . storage . vm ' to ' true ' in config
refactor block ID retrieval logic in SyncBlockChainMsgHandler . java to improve clarity and ensure consistent handling of block IDs based on head number
added a line to set the theme of the preview tab content to ensure the correct theme is used for better user experience
added a null check and close method for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a new test method for HTTP idle time configuration and modified the idle timeout handling in the ` ConnectorTimeoutTest ` class to ensure proper idle timeout behavior and validate the server ' s idle timeout behavior
add a couple of property into the coref constant , and use it to make the property configurable .
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve clarity in parsing tag names and enhance code readability
refactor JpaPagingItemReader and JobLaunchingGatewayParserTests to remove unnecessary type specification to improve code readability and maintainability
change log level from warn to debug for child node detection message to improve log granularity for troubleshooting issues
refactored color extraction logic to utilize a dedicated method for palette updates to improve code readability and maintainability while ensuring compatibility with newer Android features
added methods for setting default data table entry and cell transformers in TypeRegistry to enhance data table entry handling across the application
removed an assertion check for newAvailableShared to simplify the code by eliminating unnecessary assertion
doc : change relative url to absolute url to fix broken link . ( # 956 )
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` to streamline the project generation process by always tracking the generated state
[ java ] fix checkstyle issue in util / driverutils . java
added new Contact class and modified the application controller to handle contacts forming to enhance the application ' s ability to process and display contact form data effectively
guac - 587 : do n ' t cache permission and improve performance .
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version of the software
fix checkstyle issue after cherry - pick
updated method names to include alias handling in queries to enhance clarity and accuracy in configuration retrieval
replaced manual resource closing with IOUtils . closeSafely to simplify resource management and improve code readability
fix javadoc issue that break the build
replaced direct menu display with a click listener to improve user interaction by allowing click on the overflow button
update error messages to be clearer about null references to improve clarity and accuracy of assertions in tests
ggb - 2221 fix line height of help button .
move test to correct package and import
fixed auto - width divider to correctly get the width of the container .
add crossreference support ( sub ) entry to aux file by reference
[ geos - 4346 ] refactored code to use abstractmetadatatype instead of map
rename extractTypes to dataTables in RecipeDescriptor . java to improve clarity and consistency in variable naming
fix scroll behaviour when the update of the contact avatar .
updated import statements to use the correct package for Command class to ensure compatibility with the new package structure in the codebase
added a test for cleaning the audit log table post parameters by position in AuditLogTest . java to ensure that the audit log table is removed and does not affect data integrity
add a suppresswarnings annotation to the inject method in componentcontext . java so that it ' s not obvious to be particularly visible to the user .
added regex patterns for parsing comment lines in ACLFileParser to ensure that comment lines start with ' # ' are accepted correctly
updated the isReadable method to include a storage engine name parameter and modified import statements to enhance functionality for better file management in drill - based operations
added ancestorDimensionValues to StarTreeImpl and updated node formatting for dimension and record names to enhance node organization by incorporating ancestor dimensions
added a check for user unlock state before dumping plugin manager data and refactored closeOpenViews method calls to improve code clarity and ensure consistency when managing user unlock states
change condition from widthStr to positionStr in Photo . java to ensure correct validation of positionStr
refactor PKIXValidator logic to improve certificate validation structure to enhance readability and maintainability of the validation process
[ flink - 26011 ] [ hadoop ] [ test ] [ hadoop - fs ] [ hadoop - fs ] [ test ] add archunit test for the test code
rename package declarations for AlibabaDubboIntegrationBootstrap and ApacheDubboPluginTest classes to ensure consistency in package naming conventions
server : when create a vm , do n ' t call getiprange ( ) for every acl type to avoid regression in search
actually remove type from json json instead of use remove ( ) to fix test
add back storeundirectinfo ( ) method in app , and in response to undo info
7127878 : jre8 : javaws fail to launch on oracle linux due to xrender
fix flaky test : streamclosetest # testcloseonstreamstream by add timeout
removed the doAfterFlush method from DocConsumer and adjusted related implementations to handle null perFields gracefully to avoid hang issues caused by previous document processing
ignore non - critical deprecation warning during jpa configuration
replaced the capacity variable with a final variable and updated return values in BiInt2ObjectMap and Int2ObjectHashMap classes to enhance immutability and ensure proper handling of array sizes
increased the number of threads from 25 to 15 in HiveConf . java and updated file renaming logic in Hive . java to optimize resource usage and ensure consistent handling of file paths
add some extra trace log statement to try and trace fail test
added a null check for the context before creating a new SchemeAndroidIDE instance to prevent potential NullPointerExceptions when the context is not initialized
make native - image - runner use the current thread ' s context classloader
change return type of modifyGrantedAuthorities method from void to List and modify authority processing in SwitchUserProcessingFilter to enable retrieval of granted authorities from the list for improved functionality
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and created new test classes for better organization and organization to improve organization and maintainability of test structure within the application
fix # 1797 add the switch statement . setquerytimeout ( ) method .
added DataProviders for general and supplementary character tests in XslSubstringTest . java to improve test coverage and organization for XSL substring functions
update staxeventitemwriter to call delegateeventwriter . close ( ) when closing
added support for MariaDB sequences and updated handling of sequence parameters in the CreateSequenceGenerator to enable proper sequence functionality in the MariaDBDatabase implementation and enhance sequence creation logic
updated formatting of multiple Java files for consistency to improve code readability and maintainability
added TableDataManagerProvider to set server metrics in multiple test files to enhance metrics tracking for table data management in the tests
added a condition to check both " jsse . enableMFLExtension " and " jsse . enableMFLNExtension " to ensure proper configuration by includingMFL support
refactor ObjectIterator to remove generic type parameters and simplify iterator initialization to enhance type safety and code clarity in iterator usage
update character count logic from 22 to 23 in multiple classes to accommodate a new functionality and improve user experience
added datapoint ttl to cassandra datastore ' s configuration
updated the method ` checkForAndKillXcodeIfRunning ` to accept a boolean parameter for enabling prompt functionality to improve flexibility in handling Xcode execution based on user preferences
add a new method to get the terrain at a given cell from a given cell coordinate to enhance functionality for retrieving terrain coordinates at a given cell coordinate
added default value handling in expression printing and implemented a new Java class for compiling annotations to ensure default values are printed correctly during annotation processing and facilitate testing of annotation compilation
added error handling for FileNotFoundException in ResourceLoader to improve robustness by logging when the quest keys file is missing
modified the return condition to exclude push status checks to ensure that only non - push requests are accepted
refactor PointValue class to improve structure to enhance maintainability and readability of the code
replaced blockCapsule . sign ( ByteArray . fromHexString ( args . getLocalWitnesses ( ) ) ) with blockCapsule . sign ( ) to standardize the signing process by using the correct key format
return the first root or null if no roots exist in FileSystemView . java , and added security checks in Win32ShellFolder2 . java to enhance robustness by handling empty root cases and enforcing read permissions during folder access
take the last row from the table into account when calculate the max height of row in the table .
refactor undo handling in ListFragment to utilize a SparseArray for notes management to improve clarity and maintainability of the code when managing notes
[ # 7323 ] incorporate feedbackquestionattributes into the feedbackquestionattributes object
removed null check for data and exception throwing for non - null data to improve error handling by preventing potential null pointer exceptions
# 727 - remove pstmtdelegate ... migrate to serverconfig
replace custom Padding class with Rect from AppWidgetHostView for widget padding calculations to simplify padding retrieval and improve compatibility with widget framework
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code organization and enhance argument filtering for ConsString type
fix some javadoc issue that break the build
rename CountDownLatch variable and adjust assertions in IdleTimeoutTest . java to improve clarity and accuracy of idle timeout handling
replaced ` getMessage ( ) ` ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in failure assertions to improve readability and maintainability of failure message assertions
replaced ` ThreadLocal ` with a direct reference to ` Workbook . currentBook ` in multiple classes to simplify the management of the ` Workbook ` instance
added a method to check if a class supports and updated the vote method to handle the object type to enhance type safety and prevent potential null pointer exceptions
removed unused import statements for GachaHandler and Tools in DataLoader . java to clean up the code and improve maintainability
added functionality to track the number of row affected in the post update log functionality to improve monitoring of update process performance by tracking the number of row affected
ggb - 2118 margin should be set at the top , not the center .
set foregroundFPS and backgroundFPS to a default value of 60 to ensure consistent initialization of frame rates
added ObjectReleaseTracker import and assertions in HdfsTransactionLog and TransactionLog classes to ensure proper tracking and release of objects during logging operations
replaced DefaultWebSocketFrame with a ChannelFutureListener for closing the WebSocket frame to improve handling of WebSocket closure events more efficiently
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and introduced ` OnStateMachineError ` class to enhance event handling test coverage and improve listener functionality
replaced the activity launch method with a new implementation that sets the background color for the list to improve user interface by using a default background for the app ' s navigation
updated the import statement from ` org . apache . commons . lang3 . StringUtils ` to ` org . openhab . core . util . StringUtils ` and added a null check for the line to ensure compatibility with OpenHAB ' s StringUtils and handle potential null values gracefully
added an accumulate method to the JavaUserDefinedAggFunctions class to enable sum and count calculations with optional values and string parameters
ninja - fix minor typo in put and replicationsink javadocs
replaced VALID _ CACHE _ SET with REGEXP _ CACHE for improved cache management to enhance performance by reducing redundant checks for compiled regular expressions
added a static method to reset the gameThread instance to provide a way to reset the game thread state
added a login method implementation to the DigestAuthenticator class to ensure that the login service is valid before proceeding with further operations
updated parameter handling in SavedRequestAwareWrapper to improve clarity and efficiency to enhance the retrieval of request parameters and their values for better maintainability
updated info log message to include the class name instead of the hidden singleton to provide more context in log output regarding the default configuration
replaced the countDown call with a wakeup method in CommitLog and HAService classes to ensure thread safety during shutdown notifications
added a check for Android O and updated conditional logic in PhotoViewerActivity . java to ensure compatibility with Android O and improve user experience
updated schema info level from minimum to basic to ensure accurate schema information is used for better testing
replace the output stream handling with a BufferedOutputStream for better efficiency to improve performance by reducing the number of buffered output streams
updated byte and string conversion methods to use UTF - 8 encoding to ensure consistent handling of binary data and avoid issues with UTF - 8 encoding
fix mc - 103516 by return false for entity that do n ' t have a location in the world .
add new container adapter entries for Tomcat 10 and Tomcat101 to ensure compatibility with the latest Tomcat API changes
[ drools - 7 ] fix regression when use accumulate with a multiple parameter
refactor case handling in NowSearchTerm and SearchTermBuilder to ensure correct comparison logic to improve code clarity and maintainability
pdfbox - 2852 : remove public access , a suggest by valerybokov
added HTTP method and headers using Spring Expression Language in RemoteEndpointServiceAccessStrategy to enhance URL handling capabilities for better attribute management
added a new method ` newResponseBuilder ` to encapsulate response building logic to improve code readability and maintainability by centralizing response creation
added a call to notify the start notification to initiate a command start notification for better notification handling
refactor ` computePreviewDrawingParams ` method to public and add a null check for ` mReferenceDrawable ` to improve accessibility and prevent potential NullPointerExceptions
replaced SimpleOrderedMap < Object > with CharFilterFactory for tokenizer and filters to improve filtering performance and flexibility in token processing
replaced null checks with a utility method for checking ' null ' arguments to improve code readability and maintainability by centralizing null check logic
added verbosity support to ExecutionContext and related classes to enhance error handling based on the console verbosity setting
added schema upper case handling for Oracle database types to ensure consistent schema formatting for case insensitivity
[ log4j2 - 2602 ] fix asyncloggerallthreadcontextimplementationsstest bug
add a new file TestShrinkToOneRegion . java that tests the garbage collection of the garbage collector to ensure that the garbage collector functions correctly and handles potential memory leaks
replaced custom package splitting implementation using Splitter to improve code readability and maintainability
updated context handling in AnalyzingInfixSuggester and added a test for binary context in AnalyzingInfixSuggesterTest to ensure correct encoding of input values and improve test coverage for binary data analysis
update the handling of local attachments in PushsaferMessageBuilder to ensure correct encoding of the data URI for both HTTP and image formats
fix return value of stripprovenancetest . testoutputidinfo ( )
pdfbox - 2852 : remove unneeded null check a suggest by valerybokov
replace final static variable with static final in multiple test classes to simplify the function declaration and improve code readability
updated the evaluate method to handle Double parameters and rounding modes to improve robustness by ensuring proper rounding behavior when inputs are not null
[ jsscripting ] fix npe by use config . valueasorElse ( )
changed class declarations to public in Test1 . java and Test2 . java to ensure visibility of these classes are accessible in the same package
update permission message to use ` deny . no _ enter ` hint instead of ` permission . no _ permission _ event `
fix optimizations for conditioninconstantset , now take the session into account .
lucene - 6698 : test norm : use norm norm index document value instead of store field test
added friction reset functionality for each contact in the Box2DCharacterControllerTest to ensure correct friction behavior across multiple contacts during testing
8014844 : [ testbug ] upgrade freememoryoptions to leverage system bufferize
removed redundant checks for " must be a multiple of 8 " in ObjectAlignment and Options classes to streamline code and enhance clarity for error handling
added abstract method getTargetPackage ( ) and its implementations in AndroidInstrumentationTest classes to retrieve the target package name from the manifest for improved functionality
updated the DocHelper class to improve documentation to enhance code readability and maintainability
create a copy of the acceptablethrowawayitems setting to avoid the race condition
removed unnecessary generic type arguments from invokeExact calls and used explicit casting to improve type safety and clarity in the code
messagehandler : fix a bug that prevent thread from starve if a lot of fetcher thread be use
updated the Inflection class to improve its functionality to enhance clarity and maintainability of the Inflection process
fix for nutch - 598 : allow language to be set in the evaluation context
removed unused import of Plugin in SummaryPrinter . java to streamline code and reduce unnecessary dependencies
added a ` break ; ` statement in the ` DrawerActivity . java ` to correctly terminate a switch case in a switch - case structure
updated import statements and logging method to use query object retrieval to improve code clarity and ensure accurate logging of query objects
added system property xwork . loggerfactory to enable custom loggerfactory implementation
renamed test methods in AdminAddPeerWithP2PDisabledAcceptanceTest to clarify that these tests are differentiate between target and input nodes for better error handling
align bean name in auto configuration with spring boot
added ConcurrentMap support for PStore configuration and modified return logic in LocalPStoreProvider . java to improve concurrency handling when writing is disabled
changed the visibility of the ` deleteFiles ` method from public to private to encapsulate the method to restrict access and improve usability
replaced ` Provider < T > ` with ` ServiceProvider < T > ` in ` ServiceLoaderSpliterator . java ` and updated related methods to enhance service provider functionality and improve code clarity
remove check for illegal access exception in javainterop reflect . findfield and use try catch instead .
added toolchain creation checks and corresponding test cases in DaemonLifecycleManagerTest and DaemonLifecycleManager classes to ensure proper invalidation of SDK changes when toolchains are present
fix removecontext ( ) call in polyglotengineimpl . destroy ( ) to avoid possible deadlock
replace - 1 ! = indexOf with contains ( ) for version and fails field handling in AbstractCheckDescriptor . java to improve code readability and maintain consistency in string containment checks
updated exported linker flags in PrebuiltCxxLibrary to use them to ensure proper configuration of exported linker flags during library builds
refactor methods related to recent rotation handling in AbsSwipeUpHandler and RecentsView to improve code clarity and ensure accurate recents rotation updates
updated type checks in multiple classes to use generics for better type safety to enhance code clarity and maintainability by restricting type safety
fix gethashasstring in abstractblockchain to account for new signature .
[ rocketmq - 367 ] fix defaultmessagestore # getsystemproperties method
stop register jvmgcmetrics in jvmheappressure ( # 2674 )
http : / / issues . apache . org / jira / browse / amq - 47
hhh - 10726 - deprecate jpaquerybase and jpacommonquery in favor of jpaquerybase
added a method to check if a system UI object exists and execute a shell command to handle keyguard status view interactions to improve UI responsiveness by ensuring the system UI is accessible before executing the keyboard command
changed static modifier of logger to final and made sessionIds variable final to enhance immutability and prevent accidental reassignment
check that the cookie jar be empty before remove it , to avoid nosuchelementexception
address bonsai self - closing bug fix ( # 5036 )
changed the method parameter type from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to improve compatibility with character sequences for text retrieval
[ java ] ignoring again a test fail because of marionette regression
added a finally block to ensure the destination connection is returned to prevent potential resource leaks when an IOException occurs
renamed ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and updated related references to improve clarity and functionality of process escape handling on Windows
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety during shutdown and prevent potential deadlocks
refactor the caching logic in CachingBuildEngine to use a new method for wrapping build results with tracing and cancellation to improve code readability and maintainability by consolidating similar logic into a single method
add a method to fix for drag - selecting text out of the bounding box
added Hadoop file path configurations to the TestInformationSchemaWithPrivilege class to specify temporary directories for testing environments
refactor graphics configuration retrieval logic for clarity and efficiency to streamline the process of obtaining the graphics configuration and enhance readability
tika - 3748 -- add an option to disable oom in legacy mode .
camel - 16189 : camel - core - optimize pipeline to reduce object allocation .
updated the PrintTagList class to load models from the command - line arguments and refactored the parsing logic to improve usability and error handling when parsing input arguments
replaced getFullyQualifiedName ( ) with toString ( ) in InsertDeParser . java and added a new test for alias parsing in InsertTest . java to ensure correct string representation of SQL insert statements and validate alias parsing functionality
http : / / issues . apache . org / jira / browse / amq - 4795 - fix test and rework comment
[ java ] connect to cluster after startfromtruncatedrecordinglogtest if cluster be ready .
modified the calculation of the outer rectangle ' s arc parameter to use a float instead of an integer to improve accuracy of rectangle rounding in line borders
fix : avoid npe in postgallerytypeimagerecyclerviewadapter when no gallery image
updated the DEPLOYMENT _ ID column definition in the StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to ensure proper handling of deployment IDs during database operations
pdfbox - 4071 : update pdf - file help text to reflect the new interactive form
refactor index - related methods to remove the boolean parameter for more columns to simplify method signatures and improve code readability
camel - 5480 : quickfix - spring - boot - engine should not be start after initialization and shutdown .
added a new boolean field ` displayZoomControls ` and modified methods for setting mixed content mode to enhance flexibility in zoom control handling based on application settings
added corporea brick and sslab block to mod and corporea spark . close # 81
refactor ConnectionFactory class to improve code readability to enhance maintainability and simplify future updates
added methods to enable menu item functionality in GpsMainActivity to improve user experience by providing appropriate icons based on logging conditions
updated the message displayed for the empty favorite headline in the ExtendedListFragment to improve user experience by providing a more descriptive icon for favorite files
hhh - 163554 update test to use spring @ setting instead of @ serviceregistry
updated MotorMountConfigurationPanel constructor to use subpanel parameter to improve the instantiation of MotorMountConfigurationPanel by utilizing subpanel as a parameter
update LINE _ SEPARATOR initialization to use system property for consistency to improve flexibility in line separator handling across different environments
added getter and setter methods to the POIXMLProperties class and created a test for document properties to enhance functionality by allowing manipulation of XML document properties
reformatted the method call in the HandlerWrapper class to improve code readability and maintain consistency in method invocation
[ java ] fix handling of empty cnc file on server .
renamed the Marker class and refactored related methods to use FooCommand instead of NonMarkedFoo to improve clarity and better represent the command ' s purpose in type constraints
added methods to handle Jmod file extensions in ClassFileSourceImpl . java to improve class loading flexibility for Jmod files
updated TreeBackedElement to accept nullable PostEnterCanonicalizer and added null checks to ensure proper handling of null values and improve code robustness
added PublicTokenRequest initialization and request parameters to Saml2TokenGranterTest and UserTokenGranterTest classes to enhance token request functionality by specifying client ID and request parameters
replaced array length with value range object in AbstractFromPropertyValueRangeDescriptor . java to ensure the correct handling of value range objects
hbase - 2698 zookeeperwatcher do n ' t need to wait for the zk client to complete on shutdown
add check for gl _ no _ context to prevent crash
[ drools - 7 ] only remove ruleflowgroup when it be active .
added a return statement in HystrixDashboardConfiguration . java to prevent further processing when the method is unavailable
remove error handling for PipeNotExistException in DropPipeProcedure . java and add assertions in IoTDBPipeIT . java to improve robustness by ensuring that the DROP PIPE statement does not already exist
close hazelcast in clientqueuestostopetest [ hz - 1053 ] ( # 21849 )
refactor : use getstring ( ) instead of getsignature ( ) to avoid ( pretty ) nosuchmethoderror
make registertest . validateinstance protect to allow subclass .
refactor GeoPointInPolygonQuery and associated classes to improve code organization and clarity to enhance maintainability and readability of the codebase
added a new class FakeBuildable and refactored tests to use it to simplify the buildable setup to improve code clarity and maintainability by consolidating buildable functionality
updated conditions to check for non - empty itemstack before accessing it to improve code reliability by reducing null checks
changed the variable name from ` path ` to ` timeseries ` in ` TSParser . java ` and updated the corresponding BitSet in ` SQLParserTest . java ` to improve clarity and accuracy of handling timeseries in SQL parsing
fix issue # 154 , negative infinity infinity
fix gc pinotfs list inconsistency ( # 7981 )
fix flakiness in testhighwaytransport . testcloseVertxbyname ( ) by ensure vert . x transport be always close
# 86 - postgres - offline ddl - fix for history table not recreate with history view
updated test to check for clustering engine with a different parameter value to ensure functionality with the new expected behavior of clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored due to it need to be refactored
introduced a new class ` ParserStateObjectInputStream ` and updated ` ParserCacheCommand ` to use it to improve object deserialization handling by allowing parsing state classes into a specific input stream
added null checks and initialization for objectQuotingStrategy in ChangeSet . java and DatabaseChangeLog . java to ensure robust handling of object quoting strategy based on change log state
updated MetainfoParser instantiation from parse method to fromXmlStream to improve handling of XML content from the provided file
deleted the CsrfControllerAdvice . java file to streamline CSRF token handling in the application
update path handling to properly quote file paths to ensure proper formatting of paths in the output
added scrim animation functionality to enhance user experience during screen transitions
[ iotdb - 5368 ] fix the ` ` long ' ' int default value for type inference ( # 6668 )
regenerate client with updated copyright year ( # 4382 )
added path wildcard handling in WindowsPathParser and improved path validation in PathOps to ensure only valid Unix - like paths are used within absolute and negative paths
replaced InetSocketAddress with a direct instantiation of MulticastSocket in Promiscuous . java to simplify code and improve readability by removing unnecessary parameters
removed duplicate writer . close ( ) calls and corrected formatting in the wildcard query instantiation to improve code clarity and ensure proper resource management
return a clone of nBits instead of the original reference to ensure that the original reference remains unmodified when returning the result
changed the visibility of the deriveCollectorName method from private to protected and added a new test method in TestProfilerCollector to enable subclassing and enhance the functionality of the ProfilerCollector without restricting access to the method
added a method to check if the entity type needs a type hint in the MappingMongoConverter to improve type handling for documents with simple types
add performance measurement to proxy creation to improve performance of proxy creation .
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
added exception handling to exception messages in TCPConnection . java to improve error reporting by providing the original exception context
refactor reinflateWidgetsIfNecessary ( ) method to the Workspace class for better organization to improve widget management by encapsulating widget inflation logic within the Workspace context
added a new file named DeleteInsideFileDialogTest . java to test file deletion in a dialog to ensure functionality of the right - click deletion feature in the file dialog interface
add miss call to display . update ( ) in lwjglabstractdisplay ( ) when renderer be set to autoflush ( ) .
add image verification , test case for the new feature
add ignore condition for test that be not applicable to environment variable
removed the pointer parameter from the fling method signature to simplify the method signature for better readability and usability
datajpa - 410 - fixed npe in querydsljparepository . findall ( ) when pageable be null
add convenience method to compute memory size considering fraction of zero or 1
no - jira - update test timeout for rout engine to avoid lock contention ; fix test timeout for rout engine .
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and simplify future updates
replaced the initialization of ` previousIndex ` to ` - 1 ` and removed the null check for ` previous ` to simplify index management and avoid potential null pointer exceptions
make null check fail with plugin error message more explicit
added a new method ` stream ` to ` StreamSupplierComponent ` that calls ` computeIntensityDefault ( ) ` to provide a default stream operation that requires a specified identifier
updated logging messages to clarify the context of file moving and movement to improve clarity and functionality of file management operations
updated access modifiers and constructor usage in InjectorProxy , StandardInjectorProxy , and InjectorTest classes to public to enhance accessibility and consistency across the codebase
[ flink - 26394 ] [ python ] remove extra close ( ) from flinkstreamingcreatefunction
add tests for parsing and deparsing SQL statements in ShowStatementTest and CreateTableTest to ensure correct handling of unsupported operations and improve test coverage
return type from ` null ` to ` ImmutableList . of ( ) ` to ensure proper handling of the returned data structure
- fix name set test to work with new algorithm
updated WebSocket connection state management and modified related logging in ` DeconzBridgeHandler . java ` and ` WebSocketConnection . java ` to enhance connection handling and improve logging clarity during websocket connections
replaced ` setAttribute ` with ` removeAttribute ` for managing authentication and target URL keys to simplify session management by removing unnecessary null checks
hbase - 27411 testregionreplicateendpoint should retry table creation when table creation fail ( # 5657 )
added configuration to the Pms class in FormatRecognitionTest . java to ensure proper initialization of Pms configuration for recognition testing
server : transition to ready state when create ovum template ( # 7886 )
updated test classes to use JUnit4 and simplified import statements to improve code maintainability and ensure compatibility with JUnit4
added @ Override annotations to multiple classes to ensure proper method overriding and improve code readability
updated the primary key constraint from " metricVal " to " metricVal1 " in the AppendOnlySchemaIT class to ensure consistency in data handling across different components
added a check to verify document count consistency in SegmentReader to ensure accurate document count handling for deleted documents
add some getters and setter to the logger so that it can be use by plugins .
fixed silly bug in filamentfactory ' s startbarline method ' s javadoc
set handleFileUploads field to true in VertxPlatformHttpServerConfiguration and update its usage in VertxPlatformHttpEngineTest to enable file upload handling by default
added a case - sensitive test for CsrfFilter ' s default CSRF protection method to ensure proper handling of requests that require CSRF protection
remove static final field to prevent memory leak in hotspotobjectconstantimpl
renamed the method ` add ` to ` addFrequency ` for consistency and clarity to improve code readability and maintain uniform naming conventions
replaced the direct invocation of ` Instant . now ( ) ` with a new variable ` now ( ) ` in the ` FileIO ` class to improve clarity and maintainability of the code by explicitly setting the watermark
fix # 2668 - stackoverflowerror when copy cte definition
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable the usage of ResultSetMetaData for SQL queries
updated library output format to include root path and project filesystem to ensure proper logging of the project root path for better traceability
updated slider radius calculation in RailButtonConfig . java to ensure correct sizing of the slider relative to the current angle model
fix a sporadic game crash with javac ( # 6073 )
added expression language support to KerberosProperties to enable flexible expression language handling
removed null check for remoteMountPointComponent before setting its scale in ThirdPersonRemoteClientSystem . java to simplify the code and avoid potential NullPointerExceptions
updated the setupViews method to accept a ScrimView parameter across multiple classes to enhance animation consistency and visual feedback during view setup
add an option to enable periodic materialization for changelog ( # 10563 )
protocol - 2161 add ' value ' attribute to < protocol / > tag so value can be write back to the xml
add test case for bz - 105638 : Chunkingservlet now support any header value
added bisped flag to the CheckRouterAnswer class and modified the parseDetails method to handle it to improve the functionality of the parsing details and provide better error reporting
added Content - Type header with value " application / x - www - form - urlencoded " in SwitchToPostInterceptor . java and updated SearchRequestUnitTest . java to ensure proper handling of form submissions
updated EmbeddedClientConnector . java file to improve functionality and maintainability of the code
replaced SQLFeatureNotSupportedException with a warning log warning message indicating unsupported fetch size to improve error handling and provide clearer logging for ignored settings
[ fix ] oom in androidDaydream . java due to miss net initialization
[ pinot - 6628 ] fix the formatting of the consume rowcount parameter in llvm SegmentDataManager . java
removed the boolean parameter from the getDepositAddresses method calls across multiple method calls to simplify the code and improve readability by reducing unnecessary parameter usage
hbase - 7911 remove unused prefixtree class from tablemapreduceutil ( nick dimiduk )
added a mechanism to handle back navigation in DesignerActivity and made the root variable final to improve back navigation handling and enforce immutability of root in XMLLayoutInflater
modified PushbackInputStream . java file to improve streaming functionality for better performance
make loweringphase work in a schedule phase so that it can be use from a schedule graph
updated the string resource key from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to accurately reflect the purpose of the resource being used
improve makefiles parser ' s handling of new line character
replaced direct calls to ` delDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` for better compatibility to ensure proper handling of deleted documents in the multithreaded environment
fix simplebatchnode . updatetransform to not invoke setboundrefresh .
[ gr - 35628 ] do not insert safepoints for uninterruptible method .
added framebuffer size callback to set the window size correctly to ensure the window displays correctly when the window size has changed
updated translation logic in LauncherAppTransitionManagerImpl to use mRecentsTransX instead of v . getTranslationX ( ) to improve animation responsiveness by centering theParallax offscreen animation
updated ` LiteralNode ` implementation to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` and modified the static methods accordingly to enhance type safety and functionality when handling null values
added length adjustment functionality to CompoundFileWriter , FSDirectory , and IndexOutput classes to ensure the output size accurately reflects the file size for better resource management
updated AndroidNdkScriptGenerator and modified GdxTest instantiation in LwjglDebugStarter to improve directory handling and replace SpriteBatchShaderTest with Mpg123Test to enhance code clarity and functionality while aligning test classes with their intended functionality
camel - 14028 - camel - aws2 - s3 : use sourcebucket / sourcekey instead of copysource when write s3 data .
added wildcard authorization handling and updated request mapping in RuleBasedAuthorizationPlugin and TestRuleBasedAuthorizationPlugin to ensure proper authorization status management and improve request handling consistency
updated import statements and refactored URI registration logic in ZookeeperClientServerRegisterRepository . java to enhance code clarity and improve handling of node registration events
rename methods and variables for clarity and consistency in the ReturnsDeepStubs class to improve code readability and maintainability by using more descriptive names
modified call value handling to check if the call value is empty before proceeding to avoid potential ArrayIndexOutOfBoundsException when no call values are available
fix exception message to avoid npe
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the PBE algorithm string to use " DES " to ensure proper handling of cryptographic algorithms and improve security by using a specific algorithm ID
tmi - tiff : better handle invalid offset . tiff structure .
added validation for job parameters in CommandLineJobRunner to ensure that invalid parameters are provided to improve error messaging for better debugging and clarity
changed the assertion in SmtpTests and MailTests to check for a non - carriage return string to simplify the comparison by removing unnecessary carriage return handling
replaced string literals in case statements with lambda expressions to improve code readability and reduce boilerplate code
added an AtomicLongFieldUpdater for managing lastSequenceId in LongSequenceGenerator to improve thread safety and ensure lastSequenceId is used in a concurrent environment
added a new file Test . java containing a static method sum and a main method to provide a utility for computing the value of loop boundaries
updated minSdk and maxSdk configurations and changed access modifiers in WifiUsabilityStatsEntryBuilder to protected to ensure compatibility with newer Android versions and improve accessibility of class members
added a new Java class named Solution to implement sorting functionality to provide a solution for identifying unique query sequences based on user input
go back to old autosstables map in order to avoid concurrentmodificationexception
updated the recreate logic in TaskbarManager to improve handling of screen size changes to ensure accurate screen size management based on orientation changes
refactor SyncFutureCache . java for improved synchronization handling to enhance performance and maintainability of the cache management process
updated the default DUBBO protocol version from 2.0 . 1 to 2.0 . 2 and modified the future version to ensure compatibility with the latest release and incorporate recent updates
[ java ] uselessstringvalueof : fix bug with literal
add a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest ` for the behavior of the nosecone drag calculation to ensure that the calculation function correctly considers the nosecone drag coefficient when accurate
add option for target type shard size to producer
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to ensure compatibility with the latest configuration
updated CompilationTask . java to improve functionality to enhance performance and maintainability of the code
updated assertion message to check for " mydb " instead of " mydb . db " to clarify that the location is not shown in test mode
added a command to clear the database change log table statement for liquibase catalog and schema to improve database management by executing clear database change logs
modified the RestClient and CallPath classes to handle versioning and path extraction more robustly to ensure accurate version handling and robustness in path comparison
updated exception messages and introduced a new closed check in the PhoenixDriver class to improve error messaging and ensure proper handling of closed drivers
fix a few javadoc issue report by intellij code inspection
added integration tests and modified visibility settings for UI elements in various activities to improve test reliability and ensure correct visibility of UI elements
[ gr - 36289 ] ensure sulong phase be always remove in dev mode .
added checks for length of the copy object and implemented a test for removing leading and endings , along with corresponding unit tests to ensure correct handling of edge cases and validate the functionality of string manipulation
refactor JpaQueryCreator to improve type checking and add method to UserRepository to enhance clarity and support for " NOT _ CONTAINING " keywords in query results
add auth timeouts check in sipsecuritymanager to avoid problem with branchid conflict
added a dispatch method to P25Message to facilitate message dispatching with alias lists
added null checks for handler before invoking checkClosed ( ) in WebSocketImpl . java and implemented a test for clearing client handlers on end to ensure that handlers are not null to avoid potential NullPointerExceptions during socket closure
[ ds - 2058 ] refactored indexeventconsumer and discoveryit to use indexabletask object instead of pooltask .
fix widget padding not work in all apps
added methods to hide the all apps view in TaskbarUIController and updated closeOverlay method in BaseActivityInterface to improve user experience by allowing the overlay to be closed appropriately
removed ` synchronized ` keyword and replaced ` Thread . sleep ( 1500 ) ` with ` launcher . join ( ) ` to improve performance by reducing unnecessary thread synchronization
update calculation of mouse coords in JavaSEPort . java to account for canvas ' s orientation to ensure accurate point positioning within the canvas ' s orientation
fix deadlock when upload to upload fails
add final modifier test case to make sure final modifier be correctly mark a final
hbase - 24536 : fix flaky testthrifthbaserecoveryservicehandler . testthrifthbaserecoveryservice ( ted yu )
log that message have have be committed / rolled back at debug level instead of info
do n ' t crash if no root resource can be find
added a new method ` getTickers ( ) ` to ` Bittrex ` and created a new ` BittrexTickersResponse ` class to streamline tickers retrieval and enhance the API structure for better organization
fix nullpointerexception when parse enums of entityentry . java
remove getendpointclass ( ) method for good readability
add new characters to the character array for clarity in FileUtils . java to improve the representation of character sequences for better readability
added methods to handle stylesheet retrieval and storage in ResourceService and DefaultServlet to improve resource management and ensure stylesheet is properly retrieved and returned
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before further operations
replaced ObjectParameterStrategy with PointerParameterStrategy in X86MethodGenerator . java to ensure compatibility with pointer - based method handling
updated database checks in CreateSequenceGenerator to include CockroachDatabase to ensure compatibility with CockroachDB ' s database behavior
revised conditional check for the name of the object stream class to simplify the logic for identifying string types
replace UnsatisfiedLinkError with SymbolNotFoundError and create a new SymbolNotFoundError class to improve error handling by providing a more descriptive error message
update binaryresponsewriter to handle return field correctly
added WebSocket pause and pong handling to WebSocketImplBase and implemented a corresponding test in WebSocketTest to ensure proper management of ping and pong responses in WebSocket connections
updated the NON _ IDENT _ ESCAPES regex to include a hyphen to ensure proper handling of identifiers with non - identifier characters
cloudstack - 7822 : fixed duplicate dns cache configuration in dnsresolverprovider
added a conditional annotation to check for the MessagingTracing class to ensure compatibility with Spring ' s messaging tracing functionality
jdbc2 initiate sql fail - fast when ` ` store ' ' be empty
updated import statements in IDELanguageClientImpl , EditorTextActionMode , and IDEEditor classes to streamline dependencies and improve code organization
http : / / issues . apache . org / jira / browse / amq - 4212 - add closing tag to xml lightweight
change the visibility of the TouchCharInput to GONE to ensure the input field is invisible to avoid flicker
fix a npe in group equality check due to a null pointer .
updated the method for setting properties in JSObjectLinker to handle negative index cases to ensure proper initialization of object properties when the key is not valid
refactor DefaultUniqueTicketIdGenerator to use constructor parameters instead of final variables to improve code readability and ensure consistent initialization of the generator
mark the SecurityConfig class as deprecated to indicate that this class should no longer be used in future development
added @ Deprecated annotations to multiple classes to indicate that these classes are obsolete and should not be used in future development
deleted ` JoglDebugAdaptor . java ` and modified ` RocketFigure . java ` to remove it to streamline the code by eliminating unnecessary logging functionality
add aws trace support to extrafieldspropagation ( # 3335 )
added PendingIntent import and modified contentIntent assignment in FileDownloader and FileUploader classes to ensure the notification content has the correct intent after updates
refactor the ` nextOrd ` method to use a dedicated ` set ` method for better encapsulation to improve code readability and maintainability by separating concerns
updated DateTimeFormatter . java for improved date handling to enhance date processing accuracy and performance
removed unnecessary try - catch block while putting properties in desktopProperties to streamline code for improved readability and maintainability
added null and empty checks for administrator credentials in the setAdministratorCredentials method to ensure proper handling of null or empty principal values
added logic to adjust the maximum width for tablet and two - panel layouts in BaseWidgetSheet to ensure consistent display across different device configurations
workaround for # 3540 ( graphics2d ) bug in opengl
refactor Hashing class to improve code readability to enhance maintainability and simplify future updates
modified the ` accept ` method to use ` Files . getBaseName ( ) ` for file name matching to improve accuracy in identifying file paths regardless of their structure
added string resource for user information in the ` addToListIfNeeded ` method to enhance localization and provide a more descriptive user information icon
removed redundant null check for newType and when it is not null to improve code clarity and prevent potential null pointer exceptions
low initial activity start delay to 800ms to reduce false touch in all apps
added a static path for the WEBAPP _ HOME and updated its usage in JettyWebappTest to improve portability by ensuring the correct web application path is used
reset selectedMotorSet and clear selection when the motor is removed to improve code clarity and prevent potential null pointer exceptions
added import for BufferUtil and called clearToFill method on ByteBufferPool to ensure buffer is properly cleared before reuse
fixed api notification rule creation via rest api .
changed authorization to authentication in LDAP configuration properties to align with updated authorization standards
added delete exchange and queue delete operations in DurableOnTransient . java to ensure proper management of exchange and queue operations
[ flink - 21743 ] [ test ] remove unnecessary timeout from bulkslotproviderimpltest
updated connection handling in ServerInfoService . java to improve error handling to ensure the server connects to the correct server and provide clearer error messages when an error occurs
refactor CompositeHandlerAdapter to improve code readability to enhance maintainability and simplify future updates
updated the implementation of Quartz2Adapter to improve performance and maintainability of the adapter
do n ' t crash when we ca n ' t call lookup . execute ( )
update Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with Spring Security 6.3 features and standards
updated the method signature of ` newNameResolver ` to accept ` Args ` instead of ` Helper ` and modified synchronization logic in ` DiscoveryClientNameResolver ` to enhance flexibility in configuring NameResolver arguments and ensure thread safety during concurrent access
added conditional handling for non - empty annotations and introduced method to determine earlier position to ensure correct positioning of annotations while maintaining compatibility with existing code
added " com . sun . naming . internal . " to the CheckPackageAccess file to ensure internal package access is properly exposed
set strict variable to true in StaxEventItemReader to enable strict processing for improved performance
updated OfflineSorter to handle unhausted responses and modified related tests in TestOfflineSorter to improve error handling and ensure correct functionality of partition reading
refactor ActionResetingPool class structure to improve code readability and maintainability
added a null check for ` getXY ( ) ` in ` LightStateConverter ` to ensure that the code only returns the appropriate X - coordinate type when in XY mode
refactor DraggableView logic to use a target cell array for folder creation to enhance flexibility and maintainability of folder creation logic
replaced the call to showLoadingDialog ( ) with a call through FileDisplayActivity in FileOperationsHelper and removed it from FileDetailFragment and OCFileListFragment to streamline loading dialog handling by consolidating functionality in the same class
added null checks for uigestureFile before accessing its properties to avoid potential NullPointerExceptions when accessing configuration files
updated case handling in FieldNamingPolicyTest to use Locale . getDefault ( ) to ensure consistent behavior across different locales when checking field naming policies
fix : set the list of listener in xmlresult .
added a new global method ` loadWithNewGlobal ` and modified multiple method calls to utilize it to enhance functionality by allowing load functions with new global settings
added JSON serialization methods to StarTreeIndexSpec and updated TableConfigTest assertions to validate this class to improve handling of JSON string inputs and ensure proper property retrieval in tests
added import for ObjectPostProcessorConfiguration in HttpSecurity and related classes to enhance security configuration capabilities in the application
use string . replace ( char , char ) where possible - this be much faster than string . replace ( string , string )
[ rhdm - 3769 ] avoid npe on null in inoperator # fireallrule ( )
added import for FieldCache and invoked commit method to ensure there ' s more than one segment to avoid FC insanity
added test coverage for message boundary event on a subprocess
add fallback to static method resolution if caller method be not static .
resolve http : / / issues . apache . org / activemq / browse / amq - 2108 - avoid redundant hash bucket assignment
8214540 : nss internal module should not require fips slot
added alignment parameter to the dialog group resize method and modified the return type of startRenderering method to enable better control over the rendering behavior in the layout
[ hotfix ] ignore unalignedcheckpointitcase until fix
6738524 : jdk13services allow read access to system property from untrusted code
add conditional check before updating keyword reference in mode to avoid unnecessary updates when keyword is already in the reference map
camel - 7314 fixed the native component test error of camel - core
remove dead code ( and unneeded )
fix statsd flavor with escaped character in name
mondrian : added udp port to member package , and updated serialization class to use it .
refactor ( scheduler ) : rename operatormulticast to operationmulticast . it should be more generic and be more generic .
updated the timeout configuration in EventBusTracerTestBase . java to increase the timeout duration for sending messages to improve the test ' s responsiveness by reducing the timeout duration
encapsulate latch handling in a try - finally block to ensure proper resource cleanup to improve code reliability and prevent potential thread leaks
fix : clear cached event listener registry on destroy
remove the / login and / home from the local storage , a it store token in a local view again
fix ( pytorch ) : add miss test case for pytorch input
added a task stack change listener in RecentsView for managing task stack animations to ensure proper handling of pinned stack animations
debugger : added profiling test for fix stringindexoutofboundsexception .
camel - 4490 fixed the npe issue of camel - cxf with thanks to krzysztof
refactor pending animation handling code into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
add log to debug playtime crash and band aid fix for release build .
add - h : bailoutonexception option to avoid bailout
remove hardcoded signup and passwd value , since it be never null .
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
( chore ) camel - time : avoid lock on locale sensitive value
set GC _ NODATA property in the image in GeoTiffReader and update its test to ensure no data container is rendered correctly during tests
sulong : fix npe from sourcesection # createsection if source section be null
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and its test class to ensure consistent byte array handling by converting output to string format
lucene - 8242 : avoid pathchildrencache event blocking . ( # 2270 )
refactor ArrayTypeHandler by moving null checks to a more concise structure to improve code readability and maintainability
replaced the deprecated ` RegexpTunnel ` class with direct access to the ` prefix ` method using reflection to improve compatibility and simplify the code by eliminating the need for a separate class
pick the application by class , not null , so that the new one can be instantiate from the cli
[ bz - 1062572 ] avoid npe on mutable global when use the kbuilder
updated asset issuance validation logic by adding validation checks for asset names , URL , and description in AssetIssueActuator . java to ensure that invalid asset names and descriptions do not cause contract errors
mow - 1299 copy pasting do n ' t work for textfield anymore ( see r13728 )
updated property names and descriptions in LGWebOS - related classes for consistency and clarity to enhance readability and maintain uniformity in status descriptions
replaced node setting methods with bulk addition of seed and active nodes to streamline node configuration for improved code readability and efficiency
enhanced assertion messages in BaseTokenStreamTestCase to include context for assertion failures to improve debugging by providing more context in assertion failures
refactor getNextTime method to include a modulus parameter for better flexibility in incrementing calendar instances to improve the flexibility of time interval incrementing based on user - defined modulus settings
moved performItemClick and findItemContainingText methods to ShadowAdapterView and ShadowListView to improve functionality for handling item click events in the adapter view
pdfbox - 3353 : avoid classcastexception a suggest by valerybokov
graphdecoder : add methodscope handler and log state after graph be initialize ( fixes # 657 )
replaced the way session attributes are retrieved in ` HttpSessionDestroyedEvent . java ` to improve clarity and maintainability of session attribute handling
added a test to verify the service name change in Zipkin using a manually provided name to ensure that the tracer correctly reflects custom service names in span reporting for improved observability
added logging for excluded classes from the JAR and modified spooling behavior in the Java compilation process to improve debugging and clarity regarding the behavior of the JAR processing
rename SeparatedProjectGenerator to SeparatedProjectsGenerator and update related imports to improve code clarity by using a more descriptive class name
test fix : increase timeout in try - lock
updated the ConfluentSchemaRegistryDeserializerProvider to utilize a constant for the default cache capacity to improve flexibility and maintainability of the cache management code
rename JCheckBox ' remind ' to ' checkAtStartup ' and update associated tooltip text to improve clarity and consistency in user interface
modified NodeGenerator . java to use method variations and added new methods for querying node factory to enhance method resolution and provide flexibility in handling different node types
hhh - 15437 - fix regression with nullpointerexception when use @ transient with a proxy
added constants for proto property names and modified method handles for getting and setting them to enhance flexibility in handling proto conversions within the ScriptObject
updated the default read mode from " heap " to " mmap " and improved the instantiation of ImmutableSegmentImpl to optimize memory usage and enhance logging information for successful segment loading
added import for ByteArrayTemplate and condition to return its instance to enable handling of byte data type in ArrayTemplateBuilder
add Hipchat configuration and associated getter / setter methods in SamlServiceProviderProperties . java ; introduce HipchatConfiguration class to enhance SAML service provider configuration for improved SAML integration
changed the type of ` commandRegistryUrls ` from ` List ` to ` Set ` to improve performance and ensure uniqueness of command registry URLs
updated log warning to include current context and added debug logging for uncovered HTTP methods to improve debugging information for better troubleshooting
camel - 7462 : camel - sftp - allow to change password from user to admin
camel - 8563 : camel - activemq - make it easy to configure lazycreatetransactionmanager = false a the default of lazycreatetransactionmanager = false .
cloudstack - 2675 : fix formatting of message in vmwareresource . java
refactor Timers class for improved performance to enhance efficiency of time - related operations
updated references from OVERWRITE _ EXISTING to APPEND _ TO _ ZIP in DefaultDefectReporter to ensure consistency in naming conventions and improve code clarity
removed deprecated String constants from UAX29URLEmailTokenizer and related classes to clean up code and encourage the use of updated constructors
removed redundant Map implementation from ScriptObject class and updated related assertions to improve code clarity and maintainability by using a more concise class structure
updated EventBusMetrics . java for consistency to improve code maintainability and readability
[ ds - 418 ] extract method getescapedlocale from i18nutil to be public
updated JaversTransactionalDecorator to implement InitializingBean and modified ensureSchema method to improve bean initialization handling and ensure schema ensurement after properties are set
removed null check for pgTypeName before adding it to the _ pgNameToSQLType map to simplify the code by eliminating unnecessary null checks
added server initialization in ScopedHandlerTest . java to ensure consistent server behavior across multiple handlers
fix calltimeoutexception bug ; call timeouts should not increment retry count and should not be delegate to caller .
added StringUtils . isEmpty ( ) check for blank username and password in RestLoginProcessingFilter to avoid potential NullPointerExceptions when username and password are empty
updated permissionNode comparison from ` Objects . equals ` to ` . equals ( " * " ) ` in ` CommandMap . java ` to ensure proper handling of permission checks for wildcards
rename ` encoding ` to ` sourceCharset ` and update related methods for clarity to improve code readability and maintainability by clearly indicating the purpose of the variable
changed the data type of postLogin from byte array to String across multiple classes to improve performance and simplify the handling of string data
refactor simulation and related components to use final modifiers instead of manual simulation modifications to improve code clarity and enforce immutability of simulation components
camel - main - add option to turn on context reload .
updated console configuration settings in CommonTestUtils . java to streamline logging setup for improved clarity and consistency
refactor PrologSizeSanityCheck class for improved readability to enhance maintainability and clarity of the code
refactor NearbyListFragment to improve code readability to enhance maintainability and ease of understanding for future developers
only reset requestbody . content - stream content - type if not the mark supported ( # 667 )
[ spring ] fix bug when server be disable
make movementdebugcommand respect the player preference
modify the random method to include a half - length total weight parameter to enhance randomness by incorporating half - length weights in the random number generation
refactor GsonParser to simplify cache string construction and enforce start relative time validation to improve code readability and enforce stricter validation on query parameters
added comments to clarify sorting parameters in ApacheHttpClientMediaWikiApi to improve code readability and maintainability
introduce transaction isolation level to reduce load time
pipe : improve logging and reduce lock contention ( # 11914 )
modify SDK version handling to conditionally use preinstrumented Jars based on system property to enable dynamic version management based on the Robolectric settings
modified the conditional check from ` ! isSilent ` to ` if ( silent ) ` to ensure correct behavior when silent mode is enabled
solr - 7016 : improve error message for dynamic field in indexschema
remove unnecessary - it ' s useless to randomlyreadrepair ( )
replaced ImmutableSortedSet with Iterables for system include roots and added a test for including include directories to improve code readability and ensure that include directories are correctly resolved in the project ' s filesystem
refactor ` AdaptableX509CertSelector ` by initializing start and end dates without default values and introducing flags for sensitivity to enhance clarity and control over sensitive key identifiers and serial numbers
replaced manual buffer size parsing with AbstractAppender ' s parseInt method to simplify code and improve readability by reducing unnecessary exception handling
added a deprecation notice for the GuiScreenEvent class to indicate that this class is no longer recommended for use
removed redundant methods for adding and removing categories in CategoryEditSearchRecyclerViewAdapter to streamline category management logic for improved performance
# 727 - enh : add serializable to cache bean ( fix for # 727 )
replaced the direct assignment of massOverriddenBy and CGOverriddenBy with a loop for each rocketComponent to improve clarity and ensure proper handling of overridden properties in child components
modified the compiler initialization and modified synchronization task methods for improved resource management to enhance code clarity and prevent potential memory leaks during compilation
refactor the handling of tasks in MultiThreadedBuildRuleResolver to use a Supplier for improved readability to simplify the code and ensure null safety for the work function
fix findbugs warn in wanreplicationserviceimpl . java unnecessary final field
added null checks for d and table locations in Partition . java and modified Driver initialization in DDLSemanticAnalyzer . java to improve robustness by handling potential null values gracefully
address review comment . remove superfluous anonymous inner class in serviceregistryclientimpl
added a new test class ` FilesTest ` for file deletion functionality to ensure proper handling of temporary files and check for non - null values
removed unnecessary try - catch blocks around socket close calls to simplify code and improve readability by reducing unnecessary exception handling
update class name check in SSLLogger to use logger class instead of System class to improve accuracy in identifying the logger ' s class
refactor the way the working directory is added by using the ` addWorkingDir ` method to improve code clarity and encapsulate the logic for adding working directories
added a null check for the cn variable in ItemInfo . java and set insets in Workspace . java to ensure proper handling of null values and maintain proper insets initialization
changed access modifier of GeneratedEntityDecorator from public to private to enhance encapsulation and restrict access to class internals
removed the localhost from the Java Dtype URL configuration in SimplePostTool . java to allow for dynamic URL resolution without needing to be hardcoded
apps - 2457 fix issymbolicdiffers for max and min command
refactor startup logic in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to ensure proper resource management and shutdown handling
inverted the conditional check for the type variable to allow for null checks before validating the type
ensure webapplication context be clean up after each test
added search functionality to the RemoteBrowseHandler to enhance user experience by enabling search for users based on input
hide the neutral button in SetupEncryptionDialogFragment to improve user experience by hiding the neutral button when not needed
ds - 2879 : speed up item count by include withdrawn only for non - archive collection
updated SQL syntax in DDLTask . java to properly escape table names to ensure that SQL syntax is properly managed in the generated output
added logging for OAuth2 exceptions in CheckTokenEndpoint to improve error handling and debugging capabilities for OAuth2 authentication issues
updated multiple Java files to replace class implementations with updated implementations to improve code maintainability and ensure compatibility with the latest API standards
updated the identity zone retrieval test to use a parameterized endpoint and modified response handling logic to improve the accuracy of identity zone retrieval and ensure accurate response handling
reduced dismiss delay value in ExtractionModelFrame and DataBrowser classes and updated tooltip text in SQLConsole to improve user experience by reducing dismissed delays and clarifying tooltip content
enable run single test method withurefire 2.22 . 0 compatible version
changed exception handling from HumanReadableException to RuntimeException in WorkerShellStep . java to improve error messaging by providing more specific exception types
[ flink - 23094 ] [ connector / flink ] add experimental annotation to flink api documentation
[ hotfix ] fix typo in streamcepstrumsource . java
fix arrayindexoutofboundsexception in list . trimfirst item . patch by jbellis
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct type identification for expressions using Parenthesis
added confirmation option to the DebugPaste class to enhance user experience by providing a more flexible debug paste option
replaced ` . get ( ) ` method calls with ` . orElseThrow ( ) ` in multiple configuration classes to improve error handling by throwing an exception when no endpoint is found
ticket # 4810 : only focus on touch up , not touch up
updated GoBinaryDescription . java to replace Arg with AbstractGoBinaryDescriptionArg and updated related method signatures to improve consistency and leverage immutability in argument handling
updated environment configuration handling in Jooby . java to ensure proper retrieval of the application environment if it is not already set
in progress - batch - 567 : split retrylistener into new retrylistener interface
fix reporting of decimal in counter ( # 498 )
replaced the declaration of email and author variables to final and modified the constructor to initialize them to improve immutability and ensure that these variables are not null
replaced a loop with a do - while loop to improve performance and readability of the JUnitFormatter class
refactor initialization of ` elements ` to handle potential ` LinkedList < E > ` type to improve type safety and avoid unnecessary object creation
include resource url in error message for good debugging
fixed testmultirendertarget . simpleupdate ( ) to work correctly in jme3
updated the client retrieval logic to handle potential null currentProfile to improve robustness by ensuring that a null client is returned when no associated client is found
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure namespace declaration is added to the correct element
added BigInteger imports and implemented DSA parameter specifications to KeyStoreManager . java to enable handling of cryptographic parameters for improved security
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape ` and ` MeshCollisionShape ` to retrieve indices as lists directly
set engine version to process definition ( # 2056 )
updated resource loader property names and modified property settings in the velocityEngine to ensure consistent naming conventions and improve clarity in configuration
[ gr - 36425 ] allow current thread verification to be attach to isolate thread .
updated GenericUDFMapValues to handle null maps more gracefully to improve robustness by preventing potential NullPointerExceptions in null maps
corrected the method name from " interceptors " to " handlerInterceptors " to ensure consistency in naming conventions for clarity
add config option to disable oil generation ( # 4866 )
added a check for the existence of " . clean - me " files before setting the directory to ensure the directory is valid before proceeding with operations
synchronize with api change in memoryrealm
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and reduce redundancy
move constant to zipconstants64 so it can be share with other constant
refactor ZipFileSystemProvider to improve file handling and error checking to enhance robustness by correctly managing file existence and errors during creation
change condition panel width toGlue to improve layout consistency for better user experience
no effective change - add miss @ override annotation
added Gson annotations for baseUrl , mirrorsList , and repoName in ServiceOsSpecific . java to improve JSON serialization compatibility for the services
fix : delete all book not delete database when delete a book
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
fix regression in previous patch for bz 59219
- restart admin server on shutdown to avoid memory leak .
replaced the unregisterHandlers method and updated message consumer handling to use wildcard generics to improve type safety and eliminate unnecessary synchronization
added configuration methods to set device ID transformation method and ID table configuration to ensure proper handling of device ID transformations and log file paths in the IoTDBDescriptor
reduced the number of documents and updated assertions in ExitableDirectoryReaderTest . java and added a new DelayingSearchComponent . java to improve test efficiency and ensure that delayed search functionality works as intended
correct typo in the condition check for mock TSP initialization to ensure the correct condition is checked for the mock TSP access method
p2p : add ` ` hashcode ' ' to the p2pkhoutputscript output , fix # 465
added " / schema / types / fieldType " to the expression in IndexSchema . java to support additional field type handling in the schema
updated the NullCompleter logic in Completers . java and added a new OptionCompleterTest . java file to enhance completer functionality and ensure proper handling of null values
fixed checkstyle issue due to commit 0b6c540a20353580bb76a0d0a0
changed the type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to accommodate larger peer IDs and improve performance
added file upload support for ZIP files in FtpHelper . java to enable proper handling of file uploads for both zip and file formats
added alpha adjustment for the reply button in TweetFragment to enhance visual feedback during user interactions
fix flaky accesslogsupporttest ( # 5571 )
use tmp / testfiles - deleteme to avoid conflict
remove null usage in settingimpl . subscribers , which be never null
added a check for a null marshaller in AbstractSamlObjectBuilder and removed initialization logic from AbstractSaml10ResponseView to improve error handling by providing clearer error messages when obtaining the marshaller for an object
replaced stack trace printing with warning logging in DataBrowser . java to improve error handling by using a more suitable logging framework
modified the conditional check in AssetsController and added a new test case in AssetsControllerTest to handle file existence in development mode and ensure correct asset directory resolution
[ hotfix ] [ roksdb ] add writeoptions to rocksdbkeyedstatebackend ' s db
updated the default format constant in CoreLabel . java to ensure consistency with the expected value format
force dijkstrabi hint to be honor in the web interface . fix # 419
change default to true for native key to be more robust ( # 937 )
changed the class name from DuclsSandboxTest to SandboxTest and updated all references accordingly to improve clarity and consistency in class naming
camel - 2649 : camel - cxf should use exchange . getexception ( ) when catch exception .
make forwardpropagatetree public so that it can be use elsewhere
fix group by ( ) example for oracle performance
check if file path do n ' t contain $ { project . basedir } in profile activation
refactor Style class to improve code organization to enhance maintainability and readability of the code
added zoom handling functionality to ShareActivity to enhance user experience by enabling back navigation to the app
added a conditional check to skip processing for deprecated fields to ensure that deprecated fields are skipped when they are missing
added animation handlers for layout visibility changes in LauncherFragment to enhance user experience by improving animation responsiveness during floating compose transitions
reformatted the method call for obtaining the token storage file for improved readability to enhance code maintainability and clarity
added Progressable parameter to multiple Writer creation methods in Utilities . java and HiveBinaryOutputFormat . java to enable progress tracking during writer operations
[ hotfix ] [ doc ] fix typo in the description of sourcecoordinatorprovider
remove contribution from panelByContribution and updatePanelOrdering and updateColors methods to ensure proper handling of contribution display and color updates
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and update related method references to improve clarity and consistency in naming conventions
added a default value for dPath if it is empty to ensure the application uses the user ' s current directory as a fallback
fix : audio channel sample rate be set to 48000 by default .
log4j2 - 1343 add a method to filter on mapmessage to determine if a message match on it .
8190202 : disable test verificationinorderwithcallstest . java until jdk - 8190200 have be resolve
bugfix : quaternion . getfromaxis ( ) return wrong value
corrected the spelling of " colelction . delim " to " collection . delim " in the code to ensure consistency and accuracy in naming conventions
add a test case to show that connection state listener ca n ' t be establish after the server be start .
refactor string building logic in DocRenderer . java for better clarity to improve readability and maintainability of generated documentation
replaced system property retrieval with a boolean field for one - handed mode support to improve code clarity and maintainability by centralizing the one - handed mode logic
fix thread leak in appscustomize ( issue # 5638 )
add dictionary resource support for morfologik language - specific stemming ( patch from christophe marchand )
replaced the count variable with a thrown flag in ResultSetTest . java to simplify the exception handling logic
changed the argument of InitializeProjectMessage from " debug " to an empty string " " to improve clarity on the purpose of the message for better debugging
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for ` preventedByLocking ` and updated exception handling logic to improve clarity and control over exception management for better maintainability
refactor tooltip text application logic in ComponentTreeRenderer to streamline code for better readability and maintainability
updated await timeout in ZipkinStreamTests from 5 seconds to 10 seconds to allow more time for the test to complete before timing out
added configurable deviantart authentication and age gate setting to improve session management and ensure proper handling of age - gate login
refactor GOOGLE _ SIGNATURES to static final String keys for better organization to improve code readability and maintainability by reducing redundancy
fix test by use createsolutionBusiness ( ) instead of solutionBusiness ( )
add a method to notify window state changes in WWindowPeer . java to improve event handling for window state transitions and enhance logging
add email description to the templateData in EntityGroupKeyContentFormatter and set a test description in TestEntityGroupKeyEmailContentFormatter to enhance email formatting capabilities by including the configuration description
phoenix - 1500 fix data connection bug ( jesus camacho rodriguez , review by gopal v )
refactor the language retrieval logic for improved clarity and correctness in ` Locale ` and ` LocaleTest ` to ensure correct language handling and validate the returned language code for locale objects
refactor ChangeLogParser instantiation for improved readability and reusability to simplify the creation of the ChangeVisitor object
added a condition to check if the screen is pinned to avoid processing when the screen is pinned
added feature to hide ` ` no chart data available ' ' text
replaced direct calls to checkValid ( ) with synchronized blocks in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety when checking head status
simplified the chunk handling logic in NettyResponse to improve readability and maintainability of the code
added " : scheme " header to multiple test methods and updated header limits to ensure headers are correctly set for HTTP / 2 compliance
fixed - rlocalcachedmap . putifabsent ( ) method use keyset and valueset method . # 5241
camel - 7999 : camel - jpa - allow to configure component from application .
allow set the jump speed directly in physicscharacter instance .
added a condition to check if reparsedFunction is null alongside the existing syntax extensions check to ensure the function is only processed when reparsedFunction is not set
refactor logger naming and improve error handling in BitstampPusherService . java to enhance code readability and maintain consistent logger naming conventions
update to pick up http and https uris from config file
updated the method call to include a filter parameter to ensure that the tracking object is fetched with the correct filter context
added assertion to check that the expression be not null .
bound alpha to the minimum of 0 to ensure the alpha value is within the valid range of 1
corrected the syntax for removing the " version " attribute in ManifestReversion . java to ensure proper string replacement for version strings
updated method names and configurations in DataSyncConfiguration . java to improve clarity and maintainability of the code
added import and initialization for JavaSnippetRepository in JavaLanguageServer to ensure proper initialization of snippet data for better snippet management
modified time bucket handling in StarTreeRecordStoreCircularBufferImpl . java to ensure sums are updated only when appropriate to improve performance
simonstewart : update the url to point to the new storage page
camel - 9289 : fixed the issue that camel - pgevent , camel - pgevent - jdbc do n ' t work with the pgjdbc driver
fix for tika - 1435 : close stream when parse feed .
add content - length header to transferhelper . fix # 1055
modified the implementation of the Dialog class to improve user experience and performance
removed the superclass constructor from EnhancedRuntimeException to simplify the constructor and avoid unnecessary constructor usage
log4j2 - 1342 add latch to fix test failure
camel - 14274 : camel - core - remove unused endpointbuilderfactory class
fix log message when use byte [ ] with unaligned varargs
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve touch event handling to prevent erroneous input interactions
camel - 6770 : fixed the restletdomainservicetest by relying on the service registry
removed the currentIdx parameter from the resizeAndRehashIfNeeded method to simplify method signature and improve code clarity
move module - info to hazelcast - test ( # 22220 )
polish ` ` add configuration property java . source . directories ' '
updated menu item ID from menu _ open _ web to menu _ mute _ hashtags to better reflect the functionality of managing hashtags in the section pager
updated method names and assertions in tests for consistency and clarity to improve readability and ensure correct assertion checks during node ancestor checks
added safety check for negative y - values in WorldEditPlayer . java to prevent potential errors on negative position values
added PathNotExistException handling for partial insert operations in InsertNode . java to improve error management for non - existent data types during partial inserts
removed extraneous quotation marks from the end of a method to correct syntax and ensure proper compilation
[ hotfix ] [ operator ] remove duplicate mailboxexecutor in operator factory
hbase - 20545 : add precheck to fix table state in meta ( # 5067 )
updated method reference syntax and enhanced output message formatting to improve code readability and provide clearer context on the failure
fix formatting in new junit runner .
[ drools - 2362 ] fix last time data delete event ( # 2362 )
updated the calculation for allAppsCellWidthPx to adjust based on padding to improve layout consistency for app display in the interface
[ flink - 15608 ] [ core ] move everything into flink - core directory .
replaced direct calls to ` doc ( ) ` with calls to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to improve consistency and clarity in referencing the document instance
added a call to ` writer . forceMerge ( 1 ) ` in the TestMultiPhraseEnum class to optimize the merging process during testing
hhh - 8532 - implement session . close ( ) instead of return a connection
fix up header from geoff wright
simonstewart : do n ' t print stacktraces when the exception be null
pdfbox - 2852 : do n ' t wrap checkedioexception a suggest by michael klink
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
ruby flavor : fix buffer out - of - bounds
updated logging level from warning to debug for error messages and added null checks for user and password before processing to improve log granularity and prevent potential null pointer exceptions
( chore ) camel - nio : remove the boolean parameter to simplify the code
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for city , country , and cache retrieval to improve code clarity and ensure proper handling of maximummind database configuration
update html content to reference new helper view
updated the ` useEncodedQualifierListOptimization ` method to accept a ` Scan ` parameter to enhance functionality by allowing additional processing of raw data processing
removed public access modifier from several methods in ApprovalStore and ApprovalControllerService to enhance encapsulation by restricting access to these methods within the same package
added a timing tracking mechanism for managing download progress in FileDownloader to improve user experience by notifying when the downloader has completed
replaced ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in ` AbstractFloatingView ` to streamline view retrieval logic and enhance code readability
updated project version from 1.0 . 11 to 1.0 . 13 and correct the opyright reference in JFreeChartResources . java to reflect the latest version and ensure compatibility with recent updates
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure consistency in thread termination handling
updated GsonBuilder class functionality to improve JSON handling to enhance performance and maintainability of JSON parsing
add null check for centerGeo and fixPoints in ProverBotanasMethod . java to ensure that null safety for center handling
add a truffle _ espresso option to configure the home path to / to / espresso / home
doc : fix issue relate to javadoc in java 8
refactored the deletesessionaction so that it be private . also remove redundant getters / setter .
corrected spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and accuracy in exception class naming
initialized ` sz ` to 0 and modified handling of empty values in ` JoinQParserPlugin ` , modified field extraction logic in ` SolrIndexSearcher ` , and enhanced ` TestJoin ` with bounds checking to improve code robustness and ensure correct handling of edge cases in document indexing
updated the method call to include an additional parameter for media scan triggering to enhance functionality by associating media scan events with the provided file
simplified the logic for posting test results based on verbosity to enhance readability and maintainability of the code
added multiple calls to retrieve custom G - code settings in MainWindow . java to improve flexibility and maintainability of custom G - code settings
camel - 17962 : fixed outputstream encoding for additional jaxb mapping
refactor JsonElement class to improve structure to enhance maintainability and readability of the code
added exception handling for resetting sys property in TestBadConfig . java to ensure that system property settings are preserved during tests
added a method to remove fragments and the action bar in GpsMainActivity to improve resource management by ensuring the current fragment is properly removed and hide the action bar
update spanishTokens and spanishTokens2 to include parentheses to ensure correct formatting of token definitions for improved readability
updated the ` RemoteMediaHandler ` and ` RemoteRawHandler ` classes to utilize ` Byte ` for range creation and handling cases to enhance performance and correctness when handling binary data
updated the G - code file path and implemented bounds formatting in the VisualizerCanvas . java , and modified GcodeViewParse . java to enhance file handling and improve rendering accuracy for various G - code formats
added support for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " in TestBackwardsCompatibility . java to ensure compatibility with the latest version 8.4 . 0
fix formatting of test assertion methods in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve readability and maintain consistency in the test code
added a condition to handle cases where the output stage is null and the query state is completed to ensure proper resource management and prevent potential null pointer exceptions
revise integritycheck : no need to recursively call getfiledirectory ( )
added import statement for SolrClient and declared shardToClient in SolrMonkey . java to enable the management of SolrClient instances in the code
added null check for fas before initialization to avoid potential NullPointerExceptions when fas is null
removed unnecessary line breaks in NestedRepositoryTreePanel . java to improve code readability and maintainability
modified the constructor of ExtensionTypeHeader to be public and added validation to ensure the type is within the within - 128 range to 127
pdfbox - 2852 : catch ioexception , a suggest by valerybokov
align default of deleteonshutdown and pushonshutdown by default
added error handling to the ReactiveStateMachineExecutor to manage state machine trigger errors to improve error reporting and logging for better debugging
added a test to verify that Python executable is set on the first path in BuckConfigTest . java to ensure that Python execution handling works correctly when multiple Python executables are available
added a default button to the root pane in InitialAccountRegistrationFrame to enhance user experience by providing a signin button
added a new configuration variable for dynamic semi - joins in HiveConf . java and updated TezCompiler . java to use this new property to enable the use of a semi - join branch for map - joins when processing
added exception to log message when an error occur on the registration endpoint
rename reflection to util to avoid conflict with reflection
added a method to the OidcIdTokenClaimCollector class and created corresponding test cases to enhance the categorization of claims in OIDC
removed the ` center ` Vector2 from multiple classes to streamline the representation of geometric shapes across multiple classes
[ flink - 23454 ] [ runtime ] fix bug that prevent registerandprocessbundleoperation . processbundle ( ) from be call twice
update SslContextFactory configuration parameters to enhance security and compatibility with latest SSL / TLS standards
replaced hardcoded maximum expectations and log entries with dynamic values from configuration properties to improve flexibility and maintainability of the configuration logic
update the return value from " access _ confirmation " to " access _ confirmation _ error " to accurately reflect the error state of access confirmation
set the context classloader when expose ranger class loader ( # 8619 )
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method to control row height resizing behavior for improved flexibility
updated the icon setting method from ` setRolloverIcon ` to ` setRolloverPressedIcon ` to clarify the purpose of the pressed icon for better visual indication
updated grid translation handling in TaskViewUtils and RecentsView classes to improve grid translation logic based on task state
assertion # bylessthan : fix javadoc warning
added a check for ` currentDateTimeFunction ` in multiple database - related classes to ensure robustness by returning ` currentDateTimeFunction ` when not null
added an anonymous path method in IOUtils . java and updated Log4jUtils . java to use it to improve path handling and logging clarity by distinguishing between anonymous and anonymous file paths
updated the method signature and implementation to include content description for task retrieval to enhance the readability and maintainability of the task description displayed
hbase - 7000 addendum add upper bound on timeout to wait for meta available
updated LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
0.9 . x : fix genericitem to provide the option instead of throw npe ( # 9276 )
added integration provider and additional properties to the BidirectionalOneToOneNPlusOneTest class to enhance functionality and ensure proper handling of PostDTO instances
fix issue where extra page hang around ( issue 11634172 )
updated HashMap and HashSet initialization to optimize memory usage to improve performance by reducing object creation overhead
updated MessageFormat calls to use double quotes for double quotes in GoogleLineChart and GooglePieChart classes to improve consistency in formatting for string literals
refactor wait loop to avoid spin loop when all batches have be interrupt by the executor
hbase - 13077 add ' position ' property to ` hbaseprettyprinter ` so that it can be write to a file w / o it
fix # 2789 - avoid port clash in testnettytransceiverwhenfailtoconnect .
refactor event handling in SimpleReport to sort events before generating the report to improve the accuracy of event reporting by ensuring sorted events alphabetically
add a test method to verify CSV line formatting to ensure proper handling of double quotes in CSV descriptions
fix a bug with the chinese benchmark test case
fixed npe when try to send iq to remote server . jm - 993
removed the @ JniImpl annotation from VM . java to eliminate unnecessary dependency on internal implementation
updated Fetcher2 . java to use constants for protocol constants instead of string literals to improve code readability and maintainability by reducing hardcoded string usage
added a condition to check if the video HDR format is not " dolbyvision " and removed multiple print statements related to these features to ensure compatibility with dolby videobridge formats while removing unused code
updated package names from ` other _ package ` to ` other _ package2 ` in ` AstTests . java ` to ensure consistency in package naming across different packages
fix worldborder . setDiameter ( ) dimping by percentage to avoid npe
hbase - 25823 addendum . getwalgroupreplicationstatus ( ) do n ' t return online / user region status
remove the caller view from loginoperation when it be cancel
( chore ) camel - observation : routingtable realtime performance improvement
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
o add test to verify that this issue be correct
removed redundant condition checks in PropertyMap . java to simplify the code for better readability and maintainability
refactor getControllerId method to accept a configId parameter and update related logic to improve code readability and simplify the retrieval of controller ID
replaced sessionFactory . close ( ) with session . close ( ) to improve clarity by directly closing the session object
removed the condition checking for the refresh token being generated in OidcConsentApprovalViewResolver . java to simplify the logic for handling refresh token usage
removed the print statement for finishing the HTTP client close to clean up the output and avoid unnecessary logging during shutdown
replaced a direct null extractor method with a NoopGetter enum to encapsulate the extraction logic for better code readability and maintainability
refactor ConditionalOnEnabledResourceChain class to improve code clarity to enhance maintainability and readability of the code
added a condition to check if the treeRoot has children before processing to ensure that the treeRoot is not empty before proceeding with further operations
replaced ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java ` to ensure the correct stream is used for improved performance
updated log messages and introduced a runnable for permission handling during Facebook login to improve clarity of log messages and ensure asynchronous login processes
updated return values for skeleton and modified test cases to remove " h : mm a " prefix to enhance code clarity and maintainability
removed the KeyguardManager dependency in the TouchInteractionService class to simplify the code for better readability and maintainability
cloudstack - 9603 : fix npe when disk offering be not configure ( # 2539 )
replaced FileChannel with AsynchronousFileChannel and added position variable to improve synchronization handling in file write operations
refactor the SigInt and SigIntTest classes by removing unnecessary try - catch blocks and formatting to improve code readability and maintainability
remove text . update ( ) method , not need
modify return value from - 1 to 0 in Asset . java to correct the logic to return the intended error value
refactor the benchmarking code to use a constant for the number of iterations and lambda expressions to improve code readability and maintainability by reducing the number of lambda expressions
added setOnRefreshListener to UploadListFragment to notifyDataSetChanged when the adapter is refreshed
refactor to use ` Optional < Path > ` instead of ` File ` for file handling in ` BibDatabaseContext ` and related classes to improve handling of file paths in the database context
replaced the usage of ` emitters . items ` with direct access to ` emitters ` to improve code clarity and reduce direct dependency on the ` emitters ` object
refactor service and engine initialization in Tomcat . java to streamline service retrieval and enhance engine management logic
updated error message to include a period after " desired file " to improve readability and consistency in error reporting
added a condition to check if playback state is not PLAYING before proceeding to prevent further processing when playback is not in the playing state
updated the method of obtaining the service component ' s desired state entity to use a direct ID instead of a primary key to simplify the code by directly accessing the service component ' s desired state entity
refactor inner class handling and add a new test for InnerClassFieldClash to improve clarity and functionality in handling inner class declarations
[ grid ] add follow - redirect filter option to allow user to configure log filter .
replaced direct call to displayChanged with awtUnlock and awtLock for better resource management to ensure thread safety and prevent potential deadlocks during display changes
hhh - 10183 - fix unit test on sql server 2008
re - enable revert ( ) of opcpackage and ziphelper .
make storeclassfile public so that it can be use elsewhere
add a new test class ` TestSortedSetDocValues ` and modify the assertion in ` SingletonSortedSetDocValues ` to allow for missing values without a check for more ords , enhancing test coverage
[ gr - 33925 ] fix handling of interrupted exception in javavm .
added additional newline and newline character checks in LineReaderImpl . java to improve handling of new line characters in the code
refactor multiFetchSourceFiles method to use Set instead of List to improve performance by reducing the number of entries returned
android : fix crash when no vertex be present in ogre
updated the method name and implemented error handling in verification in multiple tests to enhance clarity of the verification process and improve error messaging for better debugging
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to create a folder instead of a data file when deleting items
improve javadoc for implicitcast and other minor tweak .
updated JsonObject class to improve data handling to enhance performance and maintainability of JSON operations
added a check for maxIdleTime in SelectChannelEndPoint and modified idleTime comparison logic in HttpConnection to ensure idle time is accurately checked before proceeding with resource management
fix farmlandblock . cansustainplant not be call on the client ( # 8105 )
added new primary key handling in QueryDatabaseMetaDataIT and updated queries in UpgradeUtil to support multi - valued keys and ensure accurate metadata retrieval in the database
updated date formatting in HttpCookie . java to use US locale and added a new test class B6791927 . java to ensure consistent date formatting and validate cookie expiration settings
removed multiple redundant null checks before closing the database connection to optimize resource management and avoid potential NullPointerExceptions
increase poll timeout in batchmessagelistenercontainerintegrationtests
[ gr - 33820 ] trace register phase for economy optimization if traceRA be enable .
added save key binding to codearea and highlight pattern ( # 777 )
refactor ObjectMapper initialization to use a static block instead of an instance to ensure consistent line separator handling across different operating systems
fix issue with nested env variable name on window
refactored the application setup in multiple test classes by consolidating services and their lifecycle handling to improve code organization and maintainability by removing redundant references and ensuring proper initialization
[ java ] remove validation of record log exist in order to simplify test logic .
test : use errorgroupname instead of groupname when it be use only in java 8
remove unnecessary sleep and more debug message from testfuzzoptimizations
replaced the initialization of a shared preference check with a private boolean variable for reverse image to improve code readability and maintainability by eliminating redundant preferences retrieval
replaced ` equals ` method with ` equals ` for string comparison in multiple files to enhance code readability and avoid potential null pointer exceptions
[ mdm ] fix for failure in mdmmatchlinkservicetest and mdmmatchlinkservicetest
updated JUnit import statements and modified method visibility in AuthenticationSuccessListenerTests . java to migrate to JUnit 5 and improve code structure for better maintainability
replaced the initialization of ` Collections ` with a dynamic approach using ` ArrayList ` based on ` COLUMN _ NAME _ RULES ` to improve performance and memory efficiency by utilizing a dynamic list size
refactored methods in TypeUtil for improved readability to enhance maintainability and reduce complexity of the code
updated the trigger time initialization to use LocalDateTime with default time zone to ensure accurate time representation in the application
added a method to handle AbstractMethodError during method resolution to improve error handling by creating and propagating abstract method errors
camel - 5708 : camel - core - optimize simple language to short - circuit if invalid ognl expression
remove redundant check for empty toExplore in AbstractParser . java to streamline code by eliminating unnecessary return statement
camel - 14574 : fixed jcloudspayloadconverter to copy the connection input stream
camel - 10146 : camel - consul - do not run camelconsul unit test on osgi bundle .
updated the condition to check for the ACC _ STRICT access flag in both implicit and default methods to ensure that the access flag is validated correctly for default methods in class files
[ java ] increase driver timeout for channel validation test to avoid error with slow driver .
add a new class FileExtensions with CLANG _ SOURCES and CLANG _ HEADERS to manage multiple file extensions to facilitate the handling of language standards for the application
replaced the initialization of ` ThreadLocalDateFormat ` with a method that initializes ` DateFormat ` using a factory method to improve date format handling and simplify thread - local date format management
updated deprecated options in VMDeprecatedOptions . java to reflect changes in memory management to ensure compatibility with the latest configuration and improve memory management practices
added display name property and updated related classes to handle custom properties to enhance the display name handling in the client configuration across environments
replaced RuntimeException with EarlyTerminationException in multiple classes to provide a more descriptive exception for early termination issues
no effective change - code cleanup , remove extra whitespace
updated request handling methods to correctly set and retrieve response for connections to improve error handling and ensure proper continuation state management during binding
fixed npe when event . has capability ( ) be call with null parent .
wallettool : do not catch keycrypterexception in catchblock ( )
mark the AsyncCompletionService and SubmitOrderedCompletionService as deprecated to indicate that these services should no longer be used
updated HyphenationTree class to properly recalculate and return the adjusted length to ensure accurate hyphenation representation by incorporating the original length
added a sleep delay of 200 milliseconds in IQRegisterHandler . java to ensure proper timing between operations in the application
move the simple account registration into the base bundle and use it if need to be initialize .
corrected the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED string in ParameterBinder . java to ensure consistency with Java 8 and improve clarity
added a boolean variable providersChanged and initialized it to false to ensure that providers are correctly initialized before usage
added a method to manage SQL token usage in the SemanticAnalyzer class to ensure proper handling of SQL identifiers in Hive queries
pdfbox - 4892 : avoid ` ` missing ' name ' entry for postscript name in font
updated type safety and suppress unchecked warnings in SolrResourceLoader . java to improve code clarity and reduce unchecked cast warnings
modify conditional logic in Window . java to include additional checks for the current actor ' s parent to ensure proper handling of actors when accessing their parent
added a null check for the appManifest before retrieving the targetSdkVersion to avoid potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator to improve the configuration and deserialization handling to enhance clarity and maintainability of the code
added userName field and corresponding getter and setter methods to HiveSemanticAnalyzerHookContext and HiveSemanticAnalyzerHookContextImpl classes to facilitate user identification in the query execution context
camel - 4996 : fix camel - xslt to support spring 3.0 . x
added HadoopShim import and updated related classes to utilize it to enhance Hadoop shim functionality capabilities in the application
updated test cases for consistency and corrected variable assignment in ShadowAssetManagerTest and ShadowDownloadManagerTest to improve code reliability and maintainability by ensuring proper URI usage
fix npe if a request do n ' t have a context ( see http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 55454 )
removed unnecessary trace logging and improved message formatting in ThroughputLogger . java , and updated test cases in ThroughputLoggerTest . java to enhance code clarity and ensure accurate logging of messages received
8274394 : improve vm option check in diagnostic build
remove dependency on meterstatisticsmanager in favor of hashmap in the abstractlogpublisher .
[ grid ] fix ` ` java . lang . runtimeexception : logback file should not be find ' '
added null checks and improved class naming conventions in multiple classes to enhance code robustness by ensuring required fields are not null
change references from ` BASH _ ESCAPER ` to ` SHELL _ ESCAPER ` in multiple files to implement a more specific command handling mechanism for Windows environments
refactor code to use try - with - resources for better resource management to ensure proper closure of resources to prevent potential resource leaks
renamed the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to accurately reflect the functionality of the test class
removed unnecessary lines in RelativeDateFormatTests . java to improve code clarity and maintainability
added a method to generate a shield address in RpcApiService to facilitate the generation of shield addresses for the wallet
changed the return type of readConsoleInput ( ) from byte [ ] to String and updated related implementations to improve performance by avoiding unnecessary byte array conversion
updated regex patterns and initialized sRunFlavor in TestStabilityRule . java to simplify platform detection logic and ensure consistent default value for run flavor
added a condition to limit the number of values for multi - valued fields in DefaultSolrHighlighter to optimize performance by reducing the number of value being used for multi - valued fields
modified the tryToLogin method to accept parameters for username and password to enhance authentication flexibility by allowing users to configure their credentials
updated entity handling logic in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp classes to improve entity management and reduce life state changes to enhance code reliability and clarity while ensuring proper handling of entity properties
tidy up the code comment base on http : / / issues . apache . org / activemq / browse / amq - 2560
removed the wrapCollection parameter from the update method to simplify the method call by directly using the parameter
added logging for illegal currency exceptions and modified currency parsing logic to improve error handling and ensure accurate currency representation
[ durableconduit ] do n ' t register the subscription for every consumer if it ' s already on the same client
pdfbox - 4892 : correct default value , a suggest by valerybokov
added tenant management methods and updated method signatures for better handling of broker and server tenant to enhance tenant management capabilities and improve code clarity
simplified the return statement by directly returning the response value to enhance code readability and reduce boilerplate code
added a check for non - empty attribute sizes in the ProjectWorkspace class to ensure that the size of attributes is valid before proceeding
added methods to retrieve project JDK name , JDK type , and language level in AbstractIjProjectConfig and updated IjProject class to use these methods to enhance project configuration management and improve code clarity
corrected a typo in the exception message related to bucket count compatibility to improve clarity and accuracy of the error message for better debugging
added unit tests for ` GrantedAuthorityEffectiveAclsResolver ` to handle user details as principal strings to ensure correct parsing of user details in addition to user authentication
adapt to api change in jdk 9 ( previously only on jdk 9 ) .
added button management logic by introducing a variable for the number of buttons and a maximum button support to improve flexibility in button handling when no input button is present
updated import statement for assertion from jdk . testlibrary to com . oracle . java to ensure compatibility with the correct Java library path
added a new MessagePackFactory class and refactored MessagePacker to use it to improve flexibility and separation of concerns in handling message packing and unpacking
add is _ desert and is _ cave tag to make terrain happy
updated method names from ` present ` to ` draw ` in multiple screen classes to improve clarity and consistency in naming conventions
fix issue with componentgroup uiid assignment for non - horizontal ux .
remove dependency on doi _ url _ pattern a it be not need anymore
updated conditional check in AndroidInput and AndroidLocklessInput to use ` hasMultitouch ` instead of ` touchHandler instanceof AndroidMultiTouchHandler ` to improve clarity and maintainability of multi - touch handling logic
[ java ] make commitposition a closed counter in cluster service agent to be more robust .
# 320 - enh : add support for cascading to authenticate itself at a time .
refactor HttpConverterRegistrar to handle URL parsing and port retrieval more robustly to improve error handling for invalid addresses during URL parsing
bug 9452 : listcapacity - when the host > 200 the host _ id and storage _ pool _ id start colliding , to workaround that also compart the capacity type .
replaced ` openInput ` method with ` fileLength ` method in ` NRTCachingDirectory . java ` to improve file handling by explicitly indicating the length of the directory
lucene - 5207 : remove reflection usage , a no need to do anything for these class after the static import , a suggest by michael klink
modified synchronization of the store method in UISettings . java to improve performance by reducing unnecessary synchronization
added a check for native text input and changed the access level of fireDataChanged method from private to public to enhance input handling and allow external access to data changes
improve spannerio retry logic for aborted transaction
replaced explicit generic type parameters with diamond operator in multiple Java files to improve code readability and reduce redundancy in type declarations
updated the type check from double array to short array in ObjectInputStream . java and added a new CloneArray . java file to ensure correct handling of short arrays in deserialization for improved type safety
updated nonce retrieval method and logging messages in OIDCAuthenticationFilter . java to improve clarity and correctness of log messages related to ID claims
added logic to match the relationship field type in DCInputSet to ensure proper handling of relationship fields in the input set
added capability references for server slogan in the file storage management to enhance user experience by displaying sensitive capabilities information
updated menu item handling logic in DrawerActivity . java to ensure proper color tinting based on the menu item state
replaced failure message with a print statement and added assumption for network connection to improve test output clarity and ensure no exceptions are caught during network connection tests
do n ' t process miss symbol event when no symbol exist
add test for new data ( 5 - 4 ) format in stringhelpertest
added warning log for data provider retrieval errors in parameters . java to provide clearer warnings when the data provider returned an empty array or iterator
( chore ) camel - maven - plugin : replace collections . empty _ list ( ) with collections . emptyempty ( ) .
use default node style for ogre version 14 and above
fix restitution object not assign to restitution object in physicsrigidbody
added a new file ` AutoFtpActivity . java ` that implements an ` IActionListener ` for ftp test scenarios to implement and respond to FTP feedback notifications in the application
refactor token type handling in BaseSemanticAnalyzer to improve readability and maintainability to enhance code clarity by separating token processing logic
added methods to retrieve and set component states across multiple classes to enhance component state management functionality and improve UI responsiveness
added a new class RemoteExecutionEnabled for serializing remote execution options to enable conditional remote execution settings in the buildable rules framework
fix typo : parameter should be null instead of baremater
fix sonar warning : remove wrong usage of deprecated class fileinputstream
added assertion to validate working score and complete state to ensure that shadow variables are not stale to maintain data integrity
updated SEMIJOIN _ CONVERSION configuration from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " to optimize performance by reducing unnecessary operations
issue # 5248 - ignore message content that be not an io . netty . buffer . ByteBuf instance
replaced ` removeFile ` method with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated related logic in ` FileDisplayActivity . java ` to improve directory removal handling and enhance user feedback when the current folder is removed
update unit test to account for new transaction _ hash property
mark schemaregion . deletetimeseries a deprecate ( # 5587 )
add a check for null sampleMimeType in MediaCodecRenderer to ensure that a valid sampleMimeType is provided to avoid runtime errors
replaced calls to ` this . notify ( ) ` and ` this . wait ( ) ` with ` notifyAll ( ) ` and ` lock . notifyAll ( ) ` in QueryExecutorImpl and AbstractJdbc23PoolingDataSource to improve code readability and ensure consistent synchronization behavior
updated the @ AllArgsConstructor annotation to include JsonCreator mode to ensure that the constructor accepts properties during JSON creation
throw exception early on not support create index ( # 3210 )
add a new class Website and update tests in PopulatorImplTest to implement the Website interface and ensure its functionality is correctly implemented
added a setup method with a default locale to BSFormatterTest to ensure consistent locale for testing purposes
add a warning log message if a badly download jar file be detect by the coremodmanager
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase for sha1sum to improve clarity and accuracy of assertion failure message
added a check for single parameter and the associated token checks in SimpleExprGenerator to ensure proper handling of variable expressions during analysis
camel - 4258 : make vertx component thread - safe to create the vertx instance .
modified the writeAttributes method to accept a NodeModel parameter instead of null to enhance code clarity and reduce potential null pointer exceptions
updated log messages to include a space for better clarity to improve log readability and prevent potential null pointer exceptions
added a new boolean field ` ignoredReadStatus ` in ` Entries ` and updated its usage in ` CategoryREST ` and ` FeedREST ` to handle the absence of the unread flag in requests
replaced usage of ` MavenTestingUtils ` with ` MavenPaths ` for resource directory resolution to improve modularity and maintainability of resource handling in the testing framework
[ type : refactor ] optimize the uri register procedure ( # 4128 )
updated the condition for isPlaying to ensure the sound is not played when it is used to improve sound playback responsiveness
added permissions _ admin _ SUDO _ AREA to the Captions class and modified the existing permission check in MainCommand to enhance access control for administrators with the admin area
replaced ImmutableMap with HashMap for query options and introduced a new method to update query options to enhance tracing capabilities and improve query execution consistency
updated conditions for name comparison in ReloadableJava parsers to ensure accurate filename matching across different file systems
updated assertions in ResourcesTest to expect different emoji formats to enhance clarity and accuracy of assertions related to text attributes
modified the method signature of NMTWaitForDataMerge to NMTOverflowHashBucket and added a new method NMTMallocWithPseudoStack to improve method clarity and provide additional parameters for hash bucket operations
[ flink - 30613 ] [ serializer ] migrate javaeitherserializersnapshot to new typeutils
add an option to addressresolver to disable ndots resolution and improve configurability
added a call to the superclass ` __ associate ` method in ` RequestRockerTemplate ` and created a test for its functionality to ensure proper contextual association of ` DefaultRockerTemplate ` and validate behavior through unit tests
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated paths in multiple classes to use the correct namespace for DBchangelog to ensure consistency and correct access to the dbchangelog namespace
move commonmimetypelocator to test package to avoid conflict .
updated the initialization state from INIT to NOT _ REQUIRED in multiple classes to ensure that the repository version state is accurately defined for better error handling
updated the comparison logic in GenerateChangeLogTask to include specific schema types to enhance the comparison functionality by associating catalog and schema with specific criteria
chore : update test to work with new version of junit4
add a new file ProgressiveJPEGTest . java to implement a test for rendering a progressive JPEG file using SpriteBatch to facilitate the testing of progressive PNG rendering in the scene2D framework
* fixed crash in materialloader when tessellate be off .
make window native - toolchain target architecture error message more user - friendly
added a null and empty check before setting the size in the Label class to ensure the text size is only adjusted when the text is not empty
fix ( core ) : workaround variable int overflow issue in sparc
changed class declarations from non - final to final in PushUtils and ThumbnailsCacheManager to enforce singleton pattern and prevent instantiation
[ fix # 3396 ] remove unnecessary code from rocketpanel . getlength ( )
removed unnecessary casting of MockDirectoryWrapper to MockDirectoryWrapper to simplify code for better readability and maintainability
updated the pattern for loading presets from " . * " to " ( ? i ) . * " to enhance flexibility in keyword matching options
added a conditional check for duration before announceing accessibility in TaskbarStashController . java , modified animation handling in InvariantDeviceProfile . java , and introduced temporary object arrays in FloatingIconView . java to improve accessibility management and ensure compatibility with newer Android versions
replaced direct argument retrieval with RefreshTask call in Node initialization to improve code readability and maintainability by using a dedicated method for refreshing tasks
added support to enforce ant task execution on jdk 1.5 and jdk 1.4
fix quotaresponsebuilderimpltest by use mockito instead of powermockito
added error and output stream handling in TestSchemaToolCatalogOps . java to improve error tracking during schema test execution
added DFSClient parameter to several methods in FanOutOneBlockAsyncDFSOutputSaslHelper to enhance security by ensuring the DFSClient is properly managed during operations
updated MongoQueryMethod and MongoRepositoryFactoryBean to include RepositoryMetadata in constructors and method calls to enable better metadata handling in query methods
add a wrapper class to allow replace property source to be able to load property file from external entity resolver .
updated import statements and modified method names in MetaDataEndpointImpl . java to streamline code and improve clarity for byte type handling
increased the allowed repeated deadlock values and added a retry interval for transactions to improve transaction management and prevent premature resets of the deadlock count
refactor variable name from ` xl ` to ` xAxis ` for clarity and consistency to improve code readability and maintainability
added character validation logic to check if a name is valid and defined defined win system names to ensure that only valid characters are considered in the name for better compatibility
refactor : rename selenium * method in to using ( ) , since it be not obvious to be consistent with other method
osgi - fix : do n ' t propagate plugin config to project building
avoid int overflow in generated code , a this should be intend to be intend to prevent potential integer overflow
test : make itystemtest respect google - cloud - vision . src location
guacamole - 539 : do n ' t return ` ` stub ' ' a a suggest by oliver schmidtmer
( scott phillips ) add admin permission to the community list servlet
add thread counter for long and short compaction thread to improve monitoring of compaction operations
updated the method of obtaining the package name in WallpaperChooser . java to ensure the correct resource package is used for better resource management
refactor method to retrieve players in the plot ' s visibility to improve code clarity and ensure only visible players can be displayed in plots
refactor AndroidManifest , ResName , ShadowMediaPlayer , and Activity classes to improve code organization and maintainability
refactor MlibOpsTest to improve test clarity and organization to enhance maintainability and reduce complexity in testing code
replaced string literals for system implementation with a constant for better maintainability to improve code readability and maintainability by using a named constant instead of a hardcoded string
updated the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a test for the buildable reference property in SchemeGeneratorTest . java to improve clarity and ensure that the referenced container is correctly referenced during the SchemeGenerator
remove file check ( it be always true )
[ java ] mark workprofiletest a stability on local / platform _ postcommit
added a condition to skip processing if the bucket version is not set to ensure data integrity by avoiding unnecessary checks when bucketing version is not set
replaced setCursorPosition method call with input . setCursorPosition to ensure consistent cursor position handling for improved functionality
refactor ` LockFreeBucket ` to extend ` AbstractBucket ` and add new classes ` LockFreeBucketContendedTimeMeter ` and ` LockFreeBucketLayout ` to improve object encapsulation and provide a structured way to handle final fields and cache line padding
add support for print thread pool stats from jmx . patch by jbellis
update max bitrate retrieval to use user preferences instead of default values to ensure maximum bitrate is calculated based on user preferences
updated ZipkinHttpSpanExtractor and added new utility methods for handling missing span IDs to improve code clarity and ensure proper handling of span debugging conditions
simplify code and implement getuserpaymentaccountsets ( )
remove reflection use for right alignment ( # 4104 )
added code to set the file label in the filesystem to ensure the filesystem is correctly initialized for processing
added ProjectFilesystem as a parameter to various classes for better root path management to improve filesystem access and facilitate better root path resolution in the build process
updated multiple Java files related to envelope and databinding functionality to enhance code organization and maintainability of the data handling components
updated MetricsDSLContext . java for consistency in import statements to improve code maintainability and readability
removed the VersionConfig interface and modified the VersionBuckConfig class to simplify its implementation to streamline code and improve maintainability by eliminating unnecessary interfaces
added a try - catch block around the bindShadowClass method to handle potential TypeNotPresentException when binding shadow classes
fix visibility of validatetypes method and improve exception message
fix : update gapic - generator - java with mock service generation fix ( # 1249 )
added SLF4J Logger imports and a static logger instance in SimulationStatus . java to enhance logging capabilities for simulation status tracking
change VERSION _ POSITION _ Y value from 138 to 150 and update the font version to reflect the new design specifications
replaced direct addition of notifications with a runLater call to ensure notifications are added in a separate thread to improve responsiveness and prevent potential UI blocking
updated the mock return type in ReturnsElementsOf . java to ensure correct element count is returned for testing purposes
[ hotfix ] fix typo in error message
add a test method for line file documentation in BaseStoredFieldsFormatTestCase . java to ensure proper handling of indexed documents during indexing operations
added a method to retrieve the version code from MainApp and updated references in FeatureList and WhatsNewActivity to use this method to improve code clarity and maintainability by centralizing version code retrieval logic
camel - 5726 : fixed issue with beaninfo . getmethodinvocation ( ) handling of string and inputstream .
replace ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in tests to retrieve the correct subtitle file name instead of the filename
added initialization and disposal logic for buffer properties in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and prevent memory leaks when buffers are owned
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through the login form
refactor JerseyClientConfiguration class to improve readability and maintainability to enhance code clarity for future development
int - 786 fix checkstyle issue with ' org . springframework . integration . stream ' package
updated variable names from ` s ` to ` o ` and changed collections to ` List . of ` in multiple files to improve code clarity and consistency by using more descriptive variable names
fix for arrayindexoutofboundsexception on string ( trunk )
added ` @ Deprecated ` annotations and implemented ` createContainerCmdHooks ` method in ` GenericContainer ` to improve code clarity and enable customization of command creation commands
changed log level from info to error and refactored exception handling in RendererConfigurationTest to improve error logging clarity and ensure configuration exceptions are handled properly
added support for " schemapattern " option in the BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector classes to enable the configuration of database schemas within the application
bcjsse : do n ' t return null session id when get invalid ssl id
modified the calculation of the ratio and bitmap creation parameters to improve the accuracy of bitmap resizing and rendering
update Base64 class implementation to improve memory usage and performance
[ gr - 38506 ] use explicit fallback value in llvm _ get _ stack _ from _ threadnode .
jasonleyba : suppress more test on the iphone for unimplemented feature .
updated FlowBuilder and FlowJobBuilderTests files to improve code clarity and maintainability
changed the ` ResName ` parameter to ` int ` in the ` AttributeResource ` class and updated related references to simplify resource handling by using a string identifier instead of a class name
fix tl verify configuration on docker start ( # 5351 )
camel - 16836 : migrate to junit 4.11 . 0 for simplereactivemoderepositorytests
added type variable capturing logic in ` mmm Attr . java ` and created a new class ` T6450290 . java ` to handle generic type variables and demonstrate the usage of ` Box ` with generics
added logging level configuration and updated related classes to allow users to specify a default logging level , enhancing flexibility in log management
add log to help debug incorrect launcher app icon removal
added allFilesOption method implementations across multiple activities to handle file listing functionality
added new methods for processing operation sets and matching in MutationOperationGroup . java to enhance functionality for handling operation collections and matching operations
modify the calculation of numPredictiveAppCols to be conditional based on device type to improve accuracy of app column estimation for non - phone devices
updated the initialization of the ' value ' variable to ensure proper handling of character encoding in the content
added RequestMatchers class for enhanced request matching functionality to improve the security framework ' s request handling capabilities
ggb - 2118 fix warning ( temporary mode ) , remove dead code
adjust position calculations in the ProgressBar to account for a new vertical positioning to ensure correct rendering of the knob position relative to the background height and width
[ native ] fix test path for spark native function
fix : make extr _ l0 final in bruteargumentmoverhandle . permuteargs ( object [ ] , object [ ] , object [ ] )
added a condition to check if the handler is invalidated in the gesture state check to improve state management by ensuring the handler only processes valid gestures
update conditions and metrics retrieval in CellLayout and DynamicGrid classes to ensure correct layout behavior based on orientation and improve metrics accuracy
added a condition to exclude the ' / robots . txt ' file from the redir check to ensure the correct directory is used for robots . txt files during processing
remove the third part of the code that be comment out by netbeans - server and netbeans - server .
fix ( gui ) : update advanced game setup screen to handle back navigation
updated UDFOPDivide to handle zero values in addition to null values to ensure accurate evaluation of UDFOPDivide instances with zero values
Added a condition to return true for ABANDONED status in job execution to improve job flow control and handle ABANDONED status during job execution
replaced direct property assignment for filterProcessesUrl with a matcher definition in multiple classes to streamline the handling of authentication request matchers for improved maintainability
added onDestroy method to unbind the upload service connection in ShareActivity and ContributionsActivity to ensure proper cleanup of the underlying service when the activity is destroyed
corrected the spelling of " thumbnailNail " to " thumbnail " in WallpaperPickerActivity to ensure consistency and accuracy in variable naming
updated multiple Java files in the project to improve code organization and maintainability across the project
refactor RaftServerConfigKeys to set the request timeout for RPC requests to improve RPC request handling by ensuring the correct timeout configuration
updated logging level from error to debug and modified exception handling in TsFileResourceManager . java and modified test cases in ResourceManagerTest . java to improve log granularity and ensure proper resource management during sealed time index degrade
added system properties to the model source configuration in MavenModuleLoader . java to ensure that system properties are correctly initialized for the model source
add readiness check metric ( # 6640 )
fix animate torch not register the default itemblock in the client
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when writer is not initialized
add a method to retrieve Hive configuration from a specified directory to facilitate dynamic configuration loading for different test environments
added a new link to the muting users page to provide users with an available link on the current page
added initialization for using direct method handle in ` System . java ` to disable direct method handle usage for improved performance
hbase - 15176 fix splitonLeadingVarCharcolumnspolicy to extend steppingsplitpolicy instead of constant sizesplitpolicy
[ flink - 14331 ] [ yarn ] fix add lib / plugins folder to shipfiles in yarn cluster
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getPronunciations ( ) correctly to improve code readability and maintainability by reducing redundant method calls
corrected the newline character in JSON output to ensure the correct formatting of the JSON output
added extra ID handling for the compose in TimeLineCursorAdapter and TimelineArrayAdapter to ensure the compose ' s unique ID based on the correct tweet data
add warn log when underlying ring buffer data be lose .
tweak to good error message if no class to analyze in classpath
replaced Key import with PublicKey import in KeyFetcher . java to ensure compatibility with the current security framework
modified the initialization of the ` isIncompatible ` variable in ` DLNAResource . java ` to ensure the correct initialization of the compatibility state
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and consistency in contract handling within the API
pdfbox - 3353 : avoid out of bound exception for empty range array
fix : do n ' t set the throwable cause for dlq ' d message
set default startree format version to ` ` off _ heap ' ' ( # 1417 )
truncate the title to a maximum of 2048 characters to ensure the title does not exceed the limits of 2048 characters
refactor JColorChooser and BasicColorChooserUI to utilize a specific JComponent for the preview panel to improve panel management and ensure consistent color rendering behavior
changed log level from info to debug for extension checking message to reduce log verbosity and improve performance during extension checks
fix potential npe in androidtilebitmap . gettilebitmap ( ) when reusablebitmap be null
added import for ViewGroup and a method to retrieve layout parameters to enable retrieval of layout parameters for improved layout management
added check to prevent illegalstateexception when a cursor be already close .
pdfbox - 3353 : avoid arrayindexoutofboundsexception when look up a page in a dictionary
@ ignore this test because it reliably fail on window ( 5.5 . x )
add a ` ` ts ' ' attribute to message , for easy configurability .
[ type : fix ] generalize logging and add exceptionmapperutils class
change access modifier of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
add test for legacy hint ( # 10019 )
replaced ` public ` access modifier with package - private for multiple test classes to enhance encapsulation by restricting access to these test classes
refactor csrf setting logic into a separate method ` setCSRF ` to improve code readability and maintainability
fix issue with shadowclassloader creation when bootstrap mode be enable .
add option to disable number cell ( # 4217 )
change log level from info to debug for default value message in HiveConf . java to improve log management by reducing log verbosity in production environments
added checks for null axes and joystickButtons in Lwjgl3Controller . java and modified controller management logic in Lwjgl3ControllerManager . java to improve stability by preventing null pointer exceptions and ensure proper controller management
updated ObjectFactory import statements in WeldFactory and WeldFactoryTest classes to align code with the latest Cucumber library structure
refactor the savePortForward method to retrieve the host database directly from HostDatabase to improve code readability and maintainability by reducing redundant checks
added a flag to control whether snapshot data should be modified to provide better control over the snapshot data behavior based on the Liquibase configuration
replaced the PersistableBundle instantiation and job scheduling mechanism with a conditional check for non - null file names to enhance error handling and improve logging clarity for file paths
refactor LocationMarshaller class and update related references to improve code clarity and maintainability
refactor touch event handling logic to simplify conditions for trackpad motion events to improve code clarity and maintainability by consolidating logic
refactor VectorReader to a concrete class instead of an interface to simplify the structure and improve code organization
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to improve code consistency and reduce potential issues with mock object creation
updated method calls to use getRelativePath ( ) instead of getRelativePathName ( ) and getRelativePath ( ) to improve clarity and efficiency by utilizing a more direct retrieval of relative paths
update ` SegmentMapper ` and related classes to use ` RecordReaderFileConfig ` instead of ` RecordReader ` to enhance flexibility by allowing customizable record reader configurations
fix argument extractor to only deal with specialized extractor , and fallback to original argument extractor
cloudstack - 2120 : when resource limit be delete , do n ' t sync to zone primary storage
add system event to change skew speed after fml change ( # 961 )
deprecated a deprecated constant COLD _ READS _ TO _ OMIT _ KEY and updated uncheckedOptions to remove it to improve code maintainability and encourage the use of a new constant
close http connection when run test
[ issue # 3111 ] fix the issue of pop message metric ' isretry ' be duplicate
fix layout and add javadocs to keyboardAddonsettingsfragment
replaced the ` @ Test ` annotation with an ` @ Ignore ` annotation in ` ShadowDateUtilsTest . java ` to mark the test as ignored for future removal of the test
upgrade mongodb driver to mongodb 4.0 . 0
added upgrade request handling to the JettyTrackingSocket class and implemented tests for upgrade request in ClientConnectTest to enhance websocket connection functionality and ensure proper validation of upgrade responses
added a timeout parameter and its getter / setter methods in AndroidImplementation . java to enable dynamic adjustment of connection timeout based on user preferences
updated methods to return appropriate permissions for user and team access in ` GitblitClient . java ` to streamline permission handling and improve user and team permission management
added a test forQuoted cast expressions in SelectTest . java to ensure correct parsing and deparsing of SQL queries involving quoted casting
8197511 : jdk / jfr / tool / misc / iswritable / misc . java should be execute on window
added logging for thread group and thread per group and refactored executor selection logic to improve debugging capabilities and simplify thread management using dynamic properties
added null check for the field variable in AbstractChangeGenerator . java to prevent potential NullPointerExceptions when accessing fields
updated CasEventListener method signatures to use InitializingBean and RegisteredServicesEventListener to improve bean initialization handling and enhance event listener functionality
refactor animation end handling by introducing a separate ` endAnimation ( ) ` method to improve code readability and reusability
added an overridden close method to the DeflaterOutputStream class to ensure proper resource management and prevent potential memory leaks
add a new file ` gsp001 . java ` implementing a class for testing system property retrieval in JVMTI to facilitate testing of system properties at early phase agent _ OnLoad functionality
do n ' t crash on non - inherited inherited method . fix # 2784
* add output capsule name for camera and light node ( issue bytedeco / javacv # 617 )
refactor PopupNotificationPanel to utilize a customizable parent window for popup notifications to improve flexibility and maintainability of the popup window management code
7187173 : inference cleanup : remove redundant exception class in infer . java
added a method to retrieve the feature value to provide access to the feature value for external use
changed the parameter type of the after method from int to long to accommodate larger milliseconds in the method
added " onBuild " property and its getter / setter methods to ContainerConfig and Info classes to enable configuration and retrieval of execution driver information in the application
added conditional logic for setting the icon in the Toolbar and FlowLayout based on RTL status to improve user interface behavior for non - RTL layouts
added a enablePositionIncrements boolean and modified the StopFilter initialization to allow configuration of position incrementments during the creation of StopFilter
updated InternetAddress initialization in EmailsTest and SystemErrorEmailReportTest classes to include TEAMMATES Admin to ensure proper representation of the internet address for email notifications
added a new boolean variable mTryShareAgain and initialized it to false to reset the share state during the file sharing process
improve tty detection when run on jansi
refactor bandwidth calculation to use a variable byteSize instead of a temporary variable to improve code readability and maintainability when dynamic properties are enabled
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to improve test stability and allow for asynchronous task completion
replaced multiple static URL constants with a single API base URL in EaseeBindingConstants . java to streamline API integration and improve code maintainability
[ beam - 13430 ] set kafka container startup retry count to 3 second
search : remove search by uuid and name from search result
added SSL context handling for client and server certificate validation in OkHttp . java to enhance security by enabling SSL connections securely
[ overview navigation ] remove the long click action for a11y button
added a new file ` HyperlinkFormula . java ` and modified the ` StringPtg . java ` to use ` int ` for field length handling to improve formatting and ensure proper handling of unsigned byte values in Excel sheets
added nullable fields for stdout and stderr , and added null check for working directory before escaping the path to improve handling of null paths and prevent potential NullPointerExceptions
increase test timeout for fix github action
refactored escapeDatabaseObject methods for consistency and clarity to improve code maintainability and promote functionality
added inputchanged flag to manage the state of the input field in MaterialRenameDialog to ensure that changes to input fields are handled correctly
add display state change functionality in ShadowDisplay and test for display state changes in ShadowDisplayTest to ensure proper behavior of display state changes when using Lollipop SDK
[ geos - 8042 ] direct service invocation can be use directly via getoperation ( )
ggb - 2657 fix : shift + x and + y should work for edit outside the web gui
remove incorrect pg _ catalog . pg _ depend dep usage in postgresql 9.0
remove the nullable message declaration from the QueueChannel class to allow for more flexible handling of null messages
modified the method signature of ` getPathsFromResource ` to use ` URI ` instead of ` String ` for URI handling to improve URI generation accuracy and eliminate potential null pointer exceptions
added logic to handle monitoring paths for Jenkins nodes in the remote collector to improve monitoring capabilities for better application monitoring
refactor attribute resolution in HeadersBeanDefinitionParser to use a helper method for better readability to improve code maintainability and ensure accurate handling of secure header configurations
hbase - 2594 fix the log reset position warning at the end of file in the Protobuflogreader
[ 3.0 ] destroy nacos service on destroy ( ) of defaultapplicationdeployer
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to handle SPDY versioning and status code processing to ensure proper handling of SPDY version compatibility
refactor AuditEvent initialization and JSON conversion for clarity to enhance code readability and maintainability
added checks to ensure the value of ' a ' is non - negative before returning ' 0 ' to prevent invalid rounding errors during calculations
fix default folder path to match current behaviour
store the absolute path of the executable in a variable before adding it to the builder to improve code readability and maintainability by reducing redundancy
added multiple assertions for PointRangeQuery instances in TestPointQueries . java to ensure correct handling of PointRangeQuery instances in tests
hbase - 7167 testhfilecleaner should use a temporary directory for archive file ( testhfilecleaner )
receivefileconversationcomponent : fix file name mismatch when download file be already copy
temporarily disable exception throw by jedisclustercommand . getconnection ( )
fix : set chain strategy to always for rowtime ( minibatchassginer )
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to improve URL parsing functionality to support anti - path patterns
fix high memory usage issue with qmap benchmark ( # 1265 )
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to store graphical world information for further processing
added a check for empty fields and introduced a new method to convert method names to identifiers to enhance error handling and improve the logic for processing method identifiers
make sure undo / redo button do n ' t disappear
hive - 23702 : add an option to disable TCP keep - alive for read socket ( prasanth jayachandran review by sergey shelukhin )
corrected a typo in the method name from ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve code readability and ensure method clarity
no effective change - remove logging
remove dependency on joda - time library ( # 4597 )
vpc : remove the redundant success variable when call startvpc .
fix bug in launcher app , when shape reveal be not visible
update the fatal error message to reference Spring Security 4.0 instead of 3.2 to ensure correct schema usage and clarity in the error message
updated multiple classes related to proto assertions and removed duplicate test for proto3 to enhance clarity and maintain consistency in handling proto assertions
added ' final ' modifier to fields in multiple classes to enforce immutability and prevent unintended modifications
hive - 18116 : add testconfigure udf to be able to customize user - defined function ( nishant bangarwa via ashutosh chauhan )
fix ( logmessagelaterstrategy ) : explicit line ending not match by a wildcard ( # 944 )
replaced explicit logger variable declarations with direct method calls for debug and warn methods to simplify code and improve readability by reducing verbosity
replaced calls to ` updatePurgedShardNodes ` with ` deletePurgedShardNodes ` and updated related SQL queries to streamline deletion process by removing unnecessary fields and improve code clarity
add java 17 - preview language to javalanguagemodule ( 16 ) by default
make fileappenderresiliencetest more tolerant , add code wait for compression job in timebasedrollingpolicy
volatilereadnode : do not assume there be no location access to maintain state
added a method to retrieve all steps and corrected formatting in the getStep method to improve code readability and ensure consistent formatting of the method
remove from _ base58 and to _ base58 from json - rpc response
refactor currency pair handling by storing it in a variable before checking for its existence to improve code readability and maintainability by avoiding repeated object creation
fix duration base time unit in longtasktimer ( # 2184 )
# ! [ euphoria - flink ] fix illegalargumentexception when generate hashkey
updated color handling in HostEditorActivity to use CharSequence for better type safety to improve performance and maintainability by avoiding unnecessary string conversion
replaced IncompatibleDatabaseHandler with DatabaseVersionHandler and refactored related methods to improve code clarity and maintainability by consolidating version handling logic
added a constant for maximum replies in the query processing to ensure that the loop does not exceed the maximum number of replies in reps
increase refresh interval of AbstractCachedLDAPAuthorizationMapLegacyTest to allow more time for map updates during testing
fix : fix issue with commit tail page size
fixed checkstyle issue in entity / glowserver . java ( # 773 )
refactored the grow method to use a dedicated grow method for improved readability to enhance code clarity and maintainability by reducing duplication
added import statement for DataOutputStream in GdxSetup . java to facilitate the use of output stream loading in the Gdx setup process
camel - 8205 : add getsubmittedfilename ( ) into partdatasource to retrieve file name specify by the client
added markReadForLoad ( ) method in LauncherFragment . java to ensure that the fragment mark read for loading functionality
added handling for NegativeArraySizeException in JarInstrumentor . java to improve error reporting for negative class instrumentation failures
added a method ` checkForSpillPossibility ` to ensure proper handling of partition creation in ` HashAggTemplate ` to prevent potential OutOfMemoryException when partition operations are attempted
replaced repetitive calls to getDocStoreSegment ( ) with new variable names to improve code readability and maintainability
added a default name ID format for SAML SAML names to ensure the system supports a valid name format for SAML services
fix bug : failure to delete the password page when the user cancel a password change
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent potential compilation issues
add a new method getmaxidletime to the nio receiver mbean to retrieve the maximum idle time of the network interface
deleted the FontScalingTest . java file which implemented a font size comparison between Metal Look and Feel and the system ' s Look and Feel to eliminate an obsolete test that is no longer relevant to the project ' s requirements
added date validation logic using ZonedDateTime for start and end dates in RRD4jPersistenceService to ensure robustness by preventing invalid date ranges during filter processing
added a check to return early if the number of vectors is less than or equal to zero to prevent potential errors when the number of vectors is invalid
test : migrate Executablereftest to junit 5 ( # 4489 )
added null checks for view and glassPane before setting them to avoid potential NullPointerExceptions when accessing methods
camel - 5388 : fixed wiretap eip to not eagerly create endpoint in dynamic mode .
collectionadminrequest : set action to protect so subclass can use it
added a new option ` TOPN ` to the planner settings and updated the corresponding implementation to enable the topn planner feature based on its settings
[ java ] remove redundant aerondirectoryname in test .
fixed - rbatch object should n ' t be execute if it ' s already queue . # 3078
replaced InputStream with FileOutputStream for configuration variable loading to improve file handling efficiency and reduce memory usage
[ api ] fix invalid model creation with null device ( # 2789 )
updated the onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to ensure options menu inflation and item selection handling correctly
doc : fix docstring formatting ( # 306 )
modified the way the home directory is determined by adding a fallback for " hawtio . dirname " to improve flexibility in locating the application ' s home directory
added a check for empty comments and empty whitespace in Space . java to ensure correct handling of empty comments and improve code clarity
updated fields in multiple dictionary classes to be volatile to ensure thread safety for concurrent access to these variables
removed printStackTrace ( ) from ContextHandler . java to improve error handling by avoiding stack trace printing during exceptions
make custom item drop test a integration test and not a mod test .
added conditional check for partition existence in DDLTask and updated related classes to enhance functionality to ensure partitions are only added if they do not already exist
nifi - 21268 : fix handling of 2gb file in secondary storage
[ java ] remove invalid controlrequeststreamid from eoservicenode
[ geot - 5358 ] wfs support : spatial operator support in wfs 2.0
added import for LuceneTestCase and annotated BasicDistributedZkTest with AwaitFix to address issue SOLR - 2161 in the test suite
netbeans - 921 : fixed handling of client present event without keep - alive .
[ java ] do n ' t replicate cluster ingress exclusive mode .
hbase - 3675 remove hbase . bucketcache . ioengine and hbase . block . cache . size from job property ( chaoyu tang , review by gopal v )
updated the record tracking mechanism in JSONRecordReader to improve clarity and tracking of running record tracking
added filtering logic to remove out years from the mergedItems list to ensure only valid year categories are processed in the application
update drawColor method calls to use a constant instead of a hard - coded value to improve code readability and maintainability by using a more descriptive color format
[ fix ] mesh . render ( ) now throw an exception when use opengl 2.0 .
set the context to the invocation when creating / updating a background process
added a method to retrieve the database name and modified parameter names for consistency to enhance database handling and improve clarity in table identifier management
added a connection timeout configuration and changed the count variable to be final to ensure proper connection management and immutability of the count variable
add more test for approx _ percentile ( ) query , and fix it to not throw npe
updated idle and write timeout handling to use constants instead of singleton instances to improve clarity and maintainability of timeout management in the WebSocket implementation
fix crash when fetch share of local file from non - local local account
refactor Inet6Address . java to use generics for enumeration and improve type safety to enhance code clarity and prevent potential ClassCastException at runtime
refactor methods in PlaybackControlView to streamline button enabling and visibility management to improve code clarity and maintainability by consolidating button functionality
updated session handling to use a long ID instead of a Session object to improve accuracy in session identification checks
updated the method from getTransitiveClasspaths to getImmediateClasspaths for JavaLibrary to ensure all relevant classpath elements are included in the builder
updated default value of useexceptionprobability to ___ ( currently untested ) .
updated the color handling for themed icons in PredictedAppIcon . java to improve visual consistency with the app ' s accent color based on icon state
ticket # 269 : simplify creation of user with blob and salt .
added " centre " alias to the aliases in the Middle . java file to support localization and translation of centre - related functionalities
added DirectUpload class import and injection method to CommonsApplicationComponent to facilitate dependency injection for managing direct uploads
added space to left and right axes in BarChartActivity and adjusted spacing logic in BarLineChartBase to improve chart readability and formatting for better visual representation
added conditions to check for additional ABI types in AndroidLibraryDescription and JavaLibraryDescription to ensure proper handling of ABI sources in the library description
added requestParams to store operation event status type in CompositeLogService and modified the initialization of the services list to ensure the services list is initialized with the correct event status handling
add debug statement to diagnose miss annotation
[ beam - 8257 ] remove the try / finally block for ensure we do not have to finish the bundle
updated the process initialization to use a variable for the classpath to improve code readability and facilitate easier debugging
updated the resource loading path construction in PackageResourceLoader . java to ensure consistent path formatting across Android applications
[ flink - 24770 ] [ table - common ] fix checkstyle violation of organize method
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable the test due to bug b / 243855320
updated error message formatting to escape percent signs to ensure proper formatting of stack traces for better readability
fixed - jcache . close ( ) method npe if redisson - jcache . yaml configuration file do n ' t close it cache
fix : reduce log level from error message to info for already claimed exception
added an empty block around the initialization of the ALPNClientConnectionFactory in HTTP2Client . java to ensure that the ALPNClientConnectionFactory is only instantiated once for proper functionality
fix invalid field in serialization of instance . getbasevalue ( )
[ onos ] fix crash when thing be not initialize ( # 9040 )
increased the timeout duration in countDownLatch . await calls from 500 milliseconds to 5 seconds to allow more time for countdown latch to become available in tests
changed log level from info to debug for light type determination failure to improve visibility of the warning log for better troubleshooting
bug 14314 : use a fixed thread pool size for the asynctask when the db . properties file be available
updated imports and method signatures in Reporter and ReturnsSmartNulls classes for consistency and clarity to improve code readability and maintainability by using positional parameters directly
remove unnecessary cast to DataFrame in DataGenerator . java to simplify code by eliminating unnecessary type casting
removed an unnecessary newline in multiple package - info . java files to improve code readability and maintain consistency
added a check for non - empty physicalColumnNames before matching the default column name pattern in OrcPageSourceFactory . java to prevent potential errors when the input file is empty
fix bug in mixplay ( input , amp ) with multidisplay ( input )
refactor JComponent and SynthTextPaneUI classes to improve code organization and readability
improve rotation to account for potential rotation problem of qr code detector .
removed checks for empty leadingIncludePaths in PreprocessorDelegate . java to simplify the logic for validating leadingIncludePaths
( chore ) camel - core : fix npe in stringtemplate when multi - threaded use
make $ $ . find ( ) and $ $ . findall ( ) work for firefox 4
fix : audio channel sample rate be set to 48000 by default .
bug 59170 : add a getformula ( ) and setformula ( ) method to name to allow it to update the formula text of the name
lucene - 3878 : reduce the range of highdimensionstest . testscale from 60000 to 90000
fixed an arrayindexoutofboundsexception in simple typeGT . parse ( ) .
added unit tests for ClassPathXmlJobRegistryContext to ensure proper job resolution and context handling in the job registry
fixed # 148 integer overflow in motion pause detection
camel - 12320 camel - restlet fixed restlet endpoint with more than advanced uri option
camel - 14263 : camel - log4j2 - remove default showout method that take a string parameter
refactor the ` submitTraceEvent ` method to ` writeChromeTraceMetadataEvent ` for improved readability and reusability to enhance code clarity by consolidating metadata event creation into a dedicated method
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to improve the accuracy of limit orders by filtering out irrelevant order statuses
added pixel offset calculations and validation to ensure correct image layout to improve image processing accuracy and handle potential layout errors
fix # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
added logic to return the resource ' s real path if it does not exist to ensure that the real path does not exist in the web application context
updated the ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER to ensure the correct type is handled in the constructor
updated variable names and logic in JEditTextArea . java for consistency to improve code clarity and align with naming conventions
refactored variable assignments and stage flags in GraphDecoder . java to improve clarity and logic flow to enhance readability and ensure proper handling of caller loop scope
test : migrate spoon . support . sniperjavaprettyprinter to junit 5 ( # 4528 )
refactor URLOutputStream initialization to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added Entity annotations to Mail . java to enhance entity management within the application
changed default values of " includeTablespace " to true and added a default option " -- includeTablespace " to enable index inclusion for tablespace configuration
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffers for better data encapsulation
added a check for empty files in ScanBatch and implemented a corresponding test in TestJsonReader to ensure the JSON directory clears memory when reading empty data
modify failure message formatting in StringSubject and add a test for string names in StringTest to enhance clarity of failure messages and improve test reliability
ignore cpu instruction if it be not cuda
updated exception handling to catch more general exceptions to improve error handling robustness and maintainability of the code
hbase - 7008 check if we be in safe mode before write a file ( jerry he )
updated error message formatting in TranslatingJavacPhaseTracer . java to provide clearer context about the problem with JavaTask loading failures
remove defaultplugincache . clone ( ) , it do n ' t do anything since this cache
fix update of contact status , sometimes when go offline .
remove a deprecate requestdetails . withresourceandparams ( ) - migrate to requestdetails .
added integration test for fetching account information in the BTCE exchange to ensure the PollingAccountService correctly retrieves account info from the BTCE exchange
added mouse wheel functionality to VDUInput and vt320 classes to enhance user interaction by allowing mouse wheel interactions with specific conditions
only write lwjgl . librarypath if needjinput be enable
# 427 - remove @ columnhstore annotation - no longer use
fix ( metadata ) : update player ' skinflags config
replaced RequestFieldMatcher with Client configuration for managing master URLs to enhance URL validation and improve test clarity
mapservice : fix npe in event handling when some client want to operate without a member
replaced System . getProperty ( ) with AccessController . doPrivileged ( ) for retrieving OS version to ensure thread - safe access to OS version retrieval
added a new configuration constant for Freemarker file suffix and updated the fileSuffix assignment to improve flexibility in handling different file formats based on configuration
updated hash code calculation and added new test cases for message selection to ensure correct hash code calculation and verify the functionality of message selection with different order IDs
fix dock panel animate when cancel
fix caret bind regression in gui builder
added declaredPlatforms field and updated methods in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to utilize it to enhance platform management by filtering dependencies based on their declared platforms
updated imports and instantiation from SimpleParameterAccessor to ParameterAccessor across multiple files to improve parameter handling by utilizing the more efficient parameter accessors
added a null check for passwordAttribute before setting the password attribute to prevent potential NullPointerExceptions when passwordAttribute is not set
added default value handling for byte and string arrays in DataUtilities . java to ensure correct initialization of default array values when dealing with different data types
update SslContextFactory to ensure proper SSL engine instantiation to allow correct host name verification based on authentication requirements
updated assertions in TestFSTableDescriptors to check for cache hits against fewer than or equal values to improve test reliability and accuracy of cache hit count validation
simonstewart : make delete cookie work by default
added a boolean field ` mHasEndedLauncherTransition ` and updated logic in ` AbsSwipeUpHandler ` , and modified behavior in ` RecentsView ` to track if the launcher transition has not been handled to ensure proper handling of gesture state and avoid unnecessary updates during orientation changes
update HTML structure by adding metadata charset for title to ensure proper handling of special characters in titles during HTML rendering
modified the IndexReader class to enhance search functionality to improve the performance of document retrieval operations
hive - 17441 : increase hive . stats . key . prefix . max . length to 150 . ( ashutosh chauhan via navis )
added a new class Bug6337518 to test JComboBox with custom UI behavior to address bug 6337518 related to arrow button behavior
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and reduce complexity
updated UserInfoActivity . java to improve user information handling to enhance user experience and performance
added HomeContentProvider import and called notifyChange method in multiple services to ensure consistent notification of content changes in the service
added functionality to manage the state of the BubbleTextView in order to improve user experience by ensuring the correct background is invalidated when the view is resumed
updated getFallbackResponse method to include Throwable parameter to enhance error handling capabilities in the fallback policy
8057551 : let the - d flag dump _ all _ generate class to disk and work outside -- compile - only mode
added null check for tags before accessing them in ChannelUri . java to avoid potential NullPointerExceptions when tags are null
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 47979 - use correct regex pattern for database query
added functionality to set and retrieve the action bar title in FileActivity and FileDisplayActivity to ensure the action bar title is correctly updated and displayed when the file is displayed
updated method to use ` Iterables . getLast ( convertedElements ) ` instead of ` Iterables . getOnlyElement ( convertedElements ) ` and added a test for appending a list with select in ` ConfigSettingIntegrationTest ` to ensure the correct handling of elements in the PythonDsl project build file parsing and verify functionality through testing
camel - 15618 : camel - cleanup - schedule with a default schedule time of 0 minute instead of all minute .
updated TransactionalValidationListener to handle partitioned tables using FieldSchema and Path to improve table path validation for better compatibility with partitioned tables
refactor ReplicationHandler and SnapPuller classes to enhance replication functionality and improve code clarity
changed the type of generatedKey from int to long and modified SQL execution logic to ensure proper handling of generated keys in database operations
updated lambda expression syntax in SimpleReferenceCache . java to improve code readability and maintain consistency in variable naming
updated error messages to indicate the failed inlineations to improve clarity and accuracy of error reporting during test failures
http : / / issues . apache . org / jira / browse / amq - 3872 - increase keepalive timeout to 10 second by default . fix and fix issue with webflux .
deleted the ` HttpTestAccount001 . java ` file to the test class is no longer needed for the current functionality
[ refactor ] dispatcher . handle ( ) now catch throwable instead of exception
camel - 8094 fixed the cxf attachment set issue with camel - cxf component with thanks to krzysztof
added a case ' ~ ' to ClientUtils . java to handle specific edge cases in the client logic
camel - 16815 : camel - slack - allow to configure consumer delay .
fixed issue with blockutil . dropblockfromblock fire even if the drop chance be less than 1 .
updated the layout size from 4 to 5 columns and modified the string concatenation for the encoded audio passthrough checkbox to improve UI layout consistency and enhance user interface clarity
added a new file ` bug8057791 . java ` implementing a NimbusLookAndFeel for list selection to address a specific bug related to list rendering in a Swing application
updated conditions for flag setting in LambdaToMethod . java and introduced a new interface LambdaInterfaceStaticField . java to improve code clarity and ensure proper handling of lambda interfaces
update util runnerbuilder to work with websocket api change
changed the null check for the ' to ' variable from checking its length to checking if it is not null to improve null safety and prevent potential NullPointerExceptions
added support for using BigIntDictionary in ParquetFixedWidthDictionaryReaders to enhance data handling and ensure correct reading of records with dictionary
update conditions for landscape orientation in PortraitPagedViewHandler . java to ensure proper rendering of the divider based on device orientation
added logging aspect and annotation for improved logging functionality in the application to enable unified logging before and after method execution , enhancing monitoring and debugging capabilities
updated the logging statement in QueuedThreadPool . java to handle empty trace cases to enhance readability by preventing potential ArrayIndexOutOfBoundsException when trace is empty
modified the ` CacheGenerator ` and ` CacheProvider ` classes to introduce an ` Implementation ` parameter and updated related methods to enhance type handling to provide better cache implementation management
fix bug in fallback to total frame size when create reference map in framemap
updated TypesafeConfigurator . java with new import statements to enhance code organization and maintainability
add karaf feature for camel - graphql component . also add karaf karaf test for the feature .
replaced the main method with new static methods for bug1 , bug2 , and bug3 in RFE2891944 . java to implement a new test case for BigDecimal operations
do not url - encode key and value in client so it can be do with other entry
replaced the unsupportedPlatformTool implementation with a new class UnsupportedPlatformTool to simplify the code and improve readability by encapsulating the unsupported tool logic
updated loopCount calculation to use a constant for both int and int type and improved logging message format to enhance code clarity and ensure accurate logging of recovery delay values
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way to retrieve the size of the map dynamically
modified test classes to declare exceptions for address manager access and refactored index initialization to improve error handling and randomness in address management tests
updated COL _ SPEC and ROW _ SPEC values in VLCVideo . java to correct layout specification to improve the visual consistency and appearance of the VLC video component
updated web page links from " bisq " to " bitsquare " in multiple Java files to reflect the new repository structure
updated the AUTHORITY string from " talon . provider " to " twitter . provider " to reflect the correct application context for Twitter integration
fix user home path for m2 local repository and clean up log message
added a call to bind the buffer with the bufferHandle in VertexBufferObjectWithVAO . java to ensure proper buffer binding for rendering performance
updated ServerHttpSecurity configuration methods to enhance security features and improve request handling
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests due to instability issues
added default headers functionality to HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration flexibility by allowing dynamic header management
added new exception class for password validation and updated error handling logic in the application to improve robustness by differentiating between authentication failures and password violations
deleted the NoOpConfigPathGetter . java file to eliminate unused configuration path retrieval functionality
replaced Codec . base16decode with Bytes . fromHexString for signingKey decoding to improve code readability and reduce potential errors with hex conversion
updated CSS handling by replacing CascadedStyle with constants for float values and modifying inline block position logic to improve code clarity and ensure proper rendering of inline blocks based on current style
planner - 280 : fix javadoc relate toFact collection property
[ scb - 1738 ] restore getdefaultheaders ( ) method to avoid create a new object in the restutils
proxyserver , realm , proxyserver : remove unneeded method to get encode string from charset
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to enable retrieval of the job ID for better context management and validation
replaced usage of ` Long . valueOf ( ) ` and ` Long . valueOf ( ) ` with ` Long . compare ( ) ` for comparison operations to improve code readability and reduce unnecessary boxing
reduce log level for client to debug ( # 1783 )
updated import statements in LegacyAuthenticationHandlerAdapter . java to streamline dependencies and improve code clarity
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
filtermanager : only remove filter from the network when their owner have their public key .
github # 525 - now allow static wrap for pgpstream object to be use directly .
updated data output stream handling to use BufferedOutputStream and ensured proper resource cleanup to improve performance and prevent potential resource leaks during flushing and closure
hive - 15176 : add test case for selectall ( ) and fix a bug in hive - 15176 ( matt mccline , review by xuefu zhang )
refactor FocusTransitionTest class for improved clarity to enhance code maintainability and readability
fix import to avoid a compile - time ambiguity
added null check for sourceTask before accessing counters in CounterStatsAggregator . java to avoid potential ClassCastException when accessing MapRedTask instances
updated the initialization of the _ readListener variable to ensure consistency in null checks for the readListener parameter
add ChangeListener to color chooser for dynamic color setting to improve the responsiveness to color changes in the color chooser
updated the constructor call from ` false ` to ` hidden ` in ` TaskHelper . java ` to correctly reflect the behavior of the constructor with an hidden state
only use exponential backoff for failover timeout test , to avoid time issue with slow ci server
pdfbox - 3017 : close randomaccessfile in ccittgfactory # readfromfile and add test
added import statement for DefaultParameterHandler in LanguageDriver . java and BoundSql . java to utilize DefaultParameterHandler for improved parameter handling in SQL queries
fix LIROptlsraoptimizespillposition option in linear scan
add test to ensure we can compile script
fix : call close ( ) twice on pgresultset . getresultset ( ) . closeinternally ( )
initialize serviceAdvisorType with Python type to ensure compatibility with Python service adherence
avro - 2498 : make resolvaredexecutor thread - local to reduce contention .
changed the type of ` subpaths ` parameter from ` Collection ` to ` List ` in several classes and optimized the method calls to improve performance and ensure better performance when accessing elements
replaced hardcoded byte array initialization with dynamic byte generation using the Wallet class to improve flexibility and maintainability of the code
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class for setting personality based on date and locale to enhance functionality for setting personality based on date and distinguisher parameters
removed redundant code block from CodeGenerator to streamline logic to enhance code clarity
updated scroll method calls to remove the percentage parameter for direction to simplify the scrolling logic by using a fixed margin value
changed the access modifier of the pointer variable from private to public and added reset and reset methods to allow external access to the pointer and ensure proper state management within the FlatRecordReader
rename ` ContentDigestHistory ` class to ` BdbContentDigestHistory ` and update related references to improve clarity and maintain consistency in the content digest history management
remove unnecessary method . implicitlycastto ( ) call from castexpression .
replace ArrayList with a boolean flag for handling accepts all conditions to improve code readability and efficiency in handling accepts
removed a redundant import statement and added a default value of false to streamline the code for better clarity and functionality
added a method to check if the table ' s auto - increment status is true and provided a corresponding method to determine whether the table is auto - incrementing or not
added default value for errorText and initialized it with an default value of " Command failed due to Internal Server Error " to improve error handling by providing a clearer description of the command failure
updated imports and modified command line arguments in LocalManagementTest . java to improve compatibility with the testing library ' s process tools
replaced ` add ` method calls with ` push ` method calls for current status and booster status to improve clarity and functionality of event simulation handling
added AJPConnector support and modified port handling in GitBlitServer . java to allow dynamic configuration of AJP port to enhance flexibility for server communication
added type coercion logic in TransTypes . java and created a new Intersection03 . java file with assertions to enhance type safety and validate functionality of intersection types in the code
convert the EmbeddingTest class to EmbeddingITest to facilitate integration testing with the integration framework
modified the initialization of the toolkit thread to only start if it is not currently started to improve stability by preventing unnecessary thread creation
add the option to compress the bundle content in parallel .
add window hide code to control the visibility of the surface ( )
update the temporary directory name in AbstractRecordExtractorTest . java to enhance clarity by using the class name instead of a hardcoded string
added new boolean flags ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` to manage HTTP service configuration to enable or disable HTTP services based on configuration settings
added a service property to GoogleCloudFirestoreTicketDocument and updated related classes to support service - specific ticket management in GoogleCloudFirestore
updated the Generate class implementation to improve code readability and maintainability
removed the nullable parameters from the scalar function and added new test cases for JSON null handling to simplify the scalar function ' s behavior and ensure correct handling of null inputs
updated conditions for text and icon handling in BadgeRenderer and adjusted related color settings to improve clarity and functionality of badge rendering with a new color format
make freemarkermanager . getconfiguration method package - private .
add test to verify behavior when exclude package name pattern be miss .
refactor the retrieval of the device Udid for macOS in AppleTest . java and update IdbRunTestsStep . java to handle the SDK name correctly to ensure compatibility with macOS and improve SDK identification logic
updated logging levels and response handling in DefaultHttpClientFilter and tests to improve clarity of error messages and ensure proper response status codes for 403 scenarios
refactor the binding and execution of the root script and state saving logic to ensure scripts are correctly initialized and executed during the initialization process
added a TEXT _ BURN option to control the shadow layer for text rendering to enhance the visual appearance of the text background in the UI
added teardown method to drop tables and views in TestColumnAccess and TestReadEntityDirect classes to ensure cleanup of database resources after each test case
added code to retrieve the parser using a key from the parsers map to improve retrieval of security context related to the specified name
added tests for cache operations in BoundedLocalCacheTest . java and adjusted conditional formatting in BoundedLocalCache . java to ensure correct behavior of cache operations and improve code readability
added methods for asynchronous WebSocket connection complete and flushing in the RawConnection and WebSocketAsyncConnection classes to enhance data handling and management of frame data during WebSocket operations
added new test methods for all assertions in SoftAssertionsPerfTest to enhance coverage of soft assertion functionality
added a TEST _ FAILURES _ EXIT _ CODE constant and modified the execute method in PythonRunTestsStep to ensure exit codes are set correctly for test failures to improve error handling during testing
add a check for markup rendering in GlyphLayout to ensure that subsequent runs are on the next line without unnecessary wrapping
fix a flaky test ( testbooleanrerites )
update method to use ` getSuperclass ( ) ` instead of ` getEnclosingClass ( ) ` to ensure correct class resolution for anonymous classes
remove cast to player socket connection to reduce code duplication
added a check for whether the drawing process has already started to avoid redundant operations to improve performance by preventing unnecessary execution of draw listeners
refactor multiple classes including CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
replaced specific imports with wildcard imports and added a condition to check if the match status is not appLICable to simplify import statements and ensure that only valid status conditions are considered when assigning
changed the boolean flag from false to true for MEDIAPARSERV2 to enable media info parsing by default
fix aop not be able to process method define via aop and stereotype . fix # 778
added assertions and a method to truncate a table in FolderPermissionBase . java to ensure that the table exists and the response code is correctly called
when a provider be already register , make sure to send a status change event to the ui
updated color calculation to use a fixed color base to ensure stable color representation across different environments
modified the ScriptEngineFactory class implementation to improve performance and maintainability of the script execution process
updated the handling of bitmaps in the HolographicViewHelper to include original and outline variants to improve rendering quality by ensuring correct bitmaps are applied for different view states
fix nullpointerexception when cloudclient throw an unsupportedoperationexception
when unigram tagger break tree , infer complete phrase of each unigram
added import statement for IOException in IOChannelUtilsTest . java to handle potential IOException related to IO operations
updated the class loading logic to handle Hive pass - through output formats to ensure correct output format is used for Hive queries with different output formats
refactor ChunkListener , AfterChunk , BeforeChunk , and AfterChunk classes to improve code organization and maintainability
added bounds checking to prevent potential negative array index exceptions to ensure robustness by preventing potential index out - of - bounds errors
refactor graph - related classes to use HierarchicalUndirectedGraph for visibility handling to improve clarity and correctness of the graph structure in the UI
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , fixed c
add a new file for PublicStaticInterfaceMethodHandling to handle static and default methods in interfaces to provide a structured way to handle static interface methods in Java
camel - 3490 : added support for property placeholder in camel - main . properties file .
replaced the handling of ThreadDeath exceptions with a direct throw statement to simplify exception handling for ThreadDeath and improve code readability
updated various Java classes to maintain consistency in naming conventions to enhance code readability and maintainability across the management framework
update JGit version from " 1.0 . 0 - 2011060607 - r " to " 1.1 . 0 - r " and sort the jars list before updating it to reflect changes in JGit 1.1 . 0
updated the logic for retrieving the path variable in HttpClientIntroductionAdvice . java to ensure the clientKey is correctly set when it ' s not empty to avoid potential null pointer exceptions
added integrationnamespacehandler . transformer ( ) as an endpointparser so it can be use directly from the spring - integration - config . xml
replaced the BACK _ FACTOR constant with a new REWIND _ TIME constant and updated related conditions to improve code readability and maintainability by using a more descriptive variable name
added a method to check if scroll wheeling is enabled in CodenameOneImplementation and JavaSEPort classes to ensure proper handling of action events based on scroll wheeling behavior
updated usage formatting and added command usage checks in UtilityCommands . java and DocumentationPrinter . java to improve readability and ensure valid usage output based on command input
add collection attribute to community page , since it be use in ajax request .
removed redundant setter methods for seq and unseq files in CrossSpaceCompactionResource . java to streamline code by eliminating unnecessary methods
remove @ override on interface method that implement interface instead of override superclass
only synchronize rule when rule be change ( # 903 )
fix a synchronization issue . when two thread resolve sootfieldrefs with phantom field , this could lead to a concurrentmodificationexception .
apply name normalization to the index registry ( fixes # 318 )
added methods for listener management and Gcode command creation in IController and its implementation in TinyGController , and updated BackendAPI to use IController instead of AbstractController to improve flexibility and functionality of the controller interface while standardizing the controller type used throughout the application
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to validate rendering behavior for horizontal horizontal rules in the application
replaced System . out . println statements with TTY . print statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to improve code readability and maintainability by using a dedicated TTY class
updated various Java classes to remove redundant definitions to streamline code for improved readability and maintainability
updated frame length check from ` = = 0 ` to ` < = 0 ` to ensure valid range for frame length handling
updated return statements in IntFloatMap and IntIntMap classes to handle zero values to ensure consistent handling of zero values and default values
fix a bug in imagedownloadservice that cause image to become corrupted when update the component form .
added a null check for registered before demand in the HandlerRegistration class to prevent potential NullPointerExceptions when registered is null
remove hashtreenode method - it be not need anymore .
fixed - npe be throw in redisdistributedmapcacheclientservice if getcachesults ( ) return null # 2001
added logging statements to mobFileCache initialization and updated visibility of the MobFileCache to improve visibility of caching behavior and ensure appropriate logging during configuration
modified ColConvCCMTest . java file to enhance test coverage and fix existing issues
replaced instance variable declarations with local variables for ` target ` and ` allowCovariantReturns ` , and updated method calls accordingly to enhance code clarity and maintainability by reducing instance variable usage and improving scope handling
pdfbox - 2852 : add optional constructor to pdftextstripperbyarea , a suggest by michael klink
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new ` X ` class with a main method to improve handling of JSON serialization and deserialization processes
camel - 7999 : fix bug in genericfileconsumer that cause the channel to be close before the response be read . ( # 5520 )
added a new Runnable inside EventQueue . invokeLater for asynchronous execution to improve UI responsiveness by ensuring tasks are executed on the Event Dispatch Thread
log4j2 - 1343 fixed the max size of binary message when the default policy be not enable
update steering value calculation in TestAttachDriver , TestFancyCar , and TestPhysicsCar to correct the formation of steering values for accuracy
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve code readability and maintain consistency with security standards
replaced direct conversion of rowVal to boolean and updated date handling with LocalDateTime and LocalDateTime to improve clarity and accuracy of date representation in JdbcSerDe
updated version from 2 to 3 and modified metadata handling logic to include version control to ensure compatibility with a broader range of data types in the application
added conditional configuration for Flyway and introduced a custom bean for JPA adapter to ensure compatibility and improve database initialization for Flyway with JPA
fix : make classnamesimpl . getmethods ( ) return sorted list by class name
introduced a method ` getCurrentStableState ( ) ` in ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest ` to improve clarity by encapsulating the current stable state retrieval logic
refactor SharedInformer class method names for consistency to improve code maintainability and readability
refactor memory scope handling in TestCloseScope0 . java to accommodate different Java versions to ensure compatibility and improve code maintainability across different environments
updated the test method to allow for a longer timeout value to improve stability during network tests by allowing more time for responses
polish ` ` remove comment code from captchachannelprocessortests when it be n ' t use
fix incorrect metadata import so that multiple collection be resolve .
added retry logic for managing property save failures in AbstractRegistry to improve reliability by allowing retries on cache file save failures
updated TrackingDirectoryWrapper initialization to use a more descriptive parameter name to improve code clarity by using a more descriptive parameter name
implement rfe 1072747 - unusedimports now catch more case .
hive - 26464 : iceberg : prevent insert overwrite query on bucket partitioned table ( # 3511 ) ( adam szita , review by laszlo bodor , naveen gangam )
updated assertions in BootstrapTests to reflect correct expected number of SAML keys and verify Legacy SAML key availability to ensure accurate testing for various SAML configurations and identify legacy SAML keys correctly
rename methods to check for both local and non - static local classes to improve clarity and accuracy in determining the validity of local fields
do n ' t send an email if an unexpected e - mail address be unexpected
removed WAITING _ FOR _ LINE _ COMMENT and WAITING _ TO _ LEAVE _ BLOCK _ COMMENT constants from CommentsParser . java to streamline the code by eliminating unused constants
lucene - 6565 : fix possible thread leak ( lock . release ( ) )
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to organize the test classes under a more appropriate package for better organization
updated transformation logic for unary operators in SpelExpressionTransformer and simplified return statements in LiteralNode and OperatorNode to enhance code clarity and maintain consistency in operator handling
updated ByteBuddy instantiation to include TypeValidation . DISABLED to ensure compatibility with the dynamic bytecode generation settings
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` to improve type handling by using a more general ` TypeElement `
fix timeout for lockmodepessimisticreadwriteintegrationtest ( # 2455 )
refactored setSystemProperties method to remove unnecessary parameters and streamlined log file handling to improve code clarity and ensure that log file properties are properly referenced for use
updated the connection handling in ServiceApiRequest . java to improve URL redirection logic and ensure proper connection management to enhance security by ensuring proper redirection behavior
added constants for service and version mappings and modified MicroserviceFactory to use an EnvironmentConfiguration to enhance flexibility in specifying service mappings and improve application identification logic
update process name retrieval in ToeThread . java to ensure the correct process bean name is used in the step configuration
updated database path regex and added static prefix for test context to improve code clarity and ensure database properties are immutable
update return statement to retrieve unread count from HomeDataSource to ensure accurate tracking of unread count for the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method with Jre version to improve clarity of the test purpose and ensure compatibility with Java 20 features
modified the ` getAllOrder ` method to include a limit parameter and updated related logic to handle pagination limits more effectively
added null check for the user before retrieving user settings to ensure safe access to user data and prevent potential null pointer exceptions
[ hotfix ] [ core ] properly handle relative path in localfilesystem . match ( )
added maximum dimensions for rectangle dimensions and updated instance bounds to ensure dimensions do not exceed defined limits
added logging functionality and deprecate the request method in CommonsHttpSolrServer to improve error handling and provide clearer logging for connection manager settings
update exception handling in PrintController to use the existing exception variable to improve error reporting for document creation failures
refactor file path handling in CrateType . java to use a mapping for file names to improve readability and maintainability of the code
added input validation for number and character checks in SpellChecker . java and created a test for it in SpellCheckerTest . java to ensure correct handling of number separators and verify functionality through testing
updated the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and consistency
refactored file action handling in FileDisplayActivity to utilize a separate method for fragment instantiation to improve code clarity and maintainability by reducing duplication
set the daemon property to false in ReplicationHandler and handle exceptions in SnapPuller to ensure proper cleanup of resources and improve error logging during replication process
updated the method call syntax for consistency to ensure correct argument order in the update method
renamed the parameter ` materials ` to ` theMaterials ` in the ` StreamerLoader ` constructor and removed the ` MaterialColumnParser ` from the fileColumns to improve clarity and consistency in parameter naming
added new dependencies , CoreLibrary , Rigid , and Controller classes , and modified version strings in DependencyBank . java to enhance support for additional library dependencies and improve code clarity
added recycled view pool configuration for AppsGridAdapter in LauncherAppState . java to optimize visual layout for better user experience
added a new test method ` testBuildingBinariesSeparately ` to validate the behavior of building binaries across different Android platforms to ensure that the build process behaves correctly with different SDK and NDK configurations
added mining check to prevent crashes when no world location ( # 1597 )
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to support parsing and access control in the procedure change process
add support for range filtering in FilterOperatorUtils and implement a corresponding test case to enhance functionality to handle null value vector scenarios and ensure proper functionality through testing
added argument validation for bootstrap methods in JDynamicInvokeExpr . java to ensure correct handling of method parameters for dynamic invocation
try to fix the ci test error of camel - jms
clear method names in runtime options to ensure consistent behavior when clearing runtime options
updated the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` in ` AbstractRegisteredService . java ` and improved handling of null values in ` PrincipalAttributeRegisteredServiceUsernameProvider . java ` to enhance type safety and ensure consistent handling of null values during username resolution
updated the logic for hiding workspace labels based on cell size and icon padding to ensure that workspace labels are only visible when appropriate to improve layout consistency
refactor assertions in ReplicationFactorTest to use a more descriptive method and add cluster state information to improve clarity and traceability of assertions for better debugging
[ gr - 23196 ] llvm be pre - initialized by auxiliaryenginecache because it define llvm # patchcontext ( ) , but llvm do actually not support pre - initialization .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to ensure all tests are skipped to avoid failures
replace RuntimeException with JsonIOException in error handling to provide a more specific exception for JSON - related issues
fix build with jdk 1.4 .
update error messages for clarity and correct argument handling in the copy functionality to improve user understanding and prevent potential errors during file operations
refactor segment name validation to use a dedicated method for low - level consumer segments to improve code clarity and maintainability by centralizing segment name validation logic
added methods to start an activity via ` Fragment ` in ` ShadowFragment ` and test cases in ` FragmentTest ` to ensure proper handling of activity lifecycle in fragments and prevent runtime exceptions
updated date conversion to use the current time from clockReader instead of the current time to ensure accurate time representation in date handling
updated the return value to include x86 _ 64 _ none - linux - android architecture to ensure compatibility with x86 _ 64 ' s 64 - bit architecture
added a method to delete all file paths for a given account in FileDataStorageManager to streamline file deletion process across different accounts
updated the help option format in SchemaCrawler command line to ensure correct usage of help for the SchemaCrawler application
add method to create description with unique id and use it to improve description comparison .
replaced the hashtags with a direct call to decodeBarcode to simplify the bitmap decoding process by using the correct method for barcode decoding
removed source handling from BuckTarget constructor and related code to simplify the target creation process by reducing unnecessary dependencies
added unit tests for range past handling in GWCZoomContextFinderTest . java to ensure correct functionality of range containment checks
added dependency tracking configuration to JRubyScriptEngineConfiguration and integrated it into the script engine to enable dependency tracking functionality for better tracking of script executions
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct handling of servlet paths in the authorization logic
do n ' t fail when try to add already exist table
add anti - aliasing feature to splash screen so the splash screen only happen when the window be resize .
updated tuner configuration handling and improved error logging in TunerManager and RTL2832TunerController to enhance tuner execution flow and provide clearer error messages for buffer resubscription failures
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a test for sh binaries with a test in ShBinaryRuleIntegrationTest to enhance functionality and ensure functionality works correctly on Windows platforms
added conditional logic to include string " db : hsqldb " in TestFilter . java to ensure correct configuration for SQL databases
fix indentation by add newlines .
do n ' t materialize host exception if no stack trace available .
refactor service loading logic to use an iterable for improved clarity and efficiency to enhance code readability and maintainability when handling service services
added test for duplicate command handler resolution .
[ flink - 20865 ] [ runtime ] introduce a fine - grained shuffle mode to all - blocking job
fixed entityfish not firing correctly ( # 4714 )
camel - 14263 : better component doc summary of camel - ftp4 to avoid use getters
update method names from ` getCommandRunner ` to ` getStepRunner ` across multiple classes to improve clarity and consistency in method naming
rename the ` useShortNames ` boolean to ` compressPackageNames ` in ` GangliaReporter ` to indicate that package names can be compress instead of consolidated
added a check for empty items in AppsContainerRecyclerView to prevent accessing empty items during processing
added a conditional annotation for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration to ensure the bean is only created if it is not already present
- add support for mdc property in xmllayout a find in lbclassic - 22 contribution
added support for omit headers in multiple response classes to enhance functionality for handling response headers based on request parameters
updated the property retrieval method to use ` getPropertyNumber ( ) ` instead of ` _ id ` and added unit tests for properties to ensure correct retrieval of property identifiers and validate functionality through unit testing
replaced direct call to ` Description . getBuildRuleType ` with a method call to ensure consistency in method reference usage
modified hierarchy management to ensure modifications to the scene ' s method numberer to improve resource management by automatically modifying the hierarchy when the scene is removed
check for null to prevent error at build time
added a method ` getObjectHash ( ) ` in ` AbstractNamedObject ` , modified method signatures in ` DatabaseSchemaCrawler ` , and updated ` TableRetriever ` to include a ` NamedObjectList ` to improve hash code handling and enhance the functionality of column retrieval
wallet : set wallet confidence type to not _ acquire _ in _ isolation . resolve bitcoin - 206 .
allow header to be pass from the request body . fix # 3964
fix gdx - model bug relate to json library ( # 711 )
hbase - 15815 catch throwable when close hregion and log the exception
refactor conditional checks to improve clarity and maintainability to enhance code readability and ensure consistent length comparison logic
[ java ] subscription should be check for image registration id if they do n ' t have one .
refactor the destroy method to use waitFor instead of invoke invoke to simplify the process destruction logic and improve readability
added support for Oracle database in the condition to enhance compatibility with Oracle ' s database connectivity
camel - 3908 : only check if the mailstore be connect to the broker . thanks to benjamin graf for spot this .
fix for antlr - 352 : when a document have stop token , throw a parsecancellationexception instead of a npe
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete
added getter for data file and modified model initialization logic for HMM model based on its duration and F0 model to improve data handling for better model management in the voice
added email domain handling methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable flexible management of user accounts in LDAP identity provider and identity provider configurations
added new configuration constants for request read and connect timeouts and methods to retrieve them to improve configurability and allow for configurable timeout values in the application
do n ' t process deferred concept if we have no link to save later
added RedisCategory imports and categorized RedisServiceRegistryTests as RedisCategory to enhance test categorization capabilities for Redis services
fix npe when use finddeprecateduses without typepatterns ( # 3153 )
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of components during rendering
removed unnecessary import statements from multiple classes to clean up the code and improve maintainability
updated event signature handling in ContractEventTriggerCapsule and LogEventWrapper classes to improve clarity and accuracy in event signature formatting
modified filter condition to check if the session ID ends with an underscore to ensure that only valid session names are processed further
fix issue with npe due to white rectangle in mapview .
split up the compilation process so that it do n ' t fail if there be a compile method that do n ' t have invoker
removed unnecessary print statements from various graph - related classes to clean up the code and reduce unnecessary console output
added a null check for score values before validating document equality to ensure accurate testing of scoreDocs against NaN values
replaced the method of obtaining entity keys with a method that creates a new set to ensure that the keys are fully copied from the device profile
added functionality to handle zero - time strings in ` ColumnSnapshotGenerator ` to improve SQL behavior for date defaults with non - zero time values
rename takerMultiSigPubKey and takerMultiSigPubKey to offererBtcPubKey and takerBtcPubKey , respectively to clarify the purpose of the key representation
updated map type parameters to use wildcards for improved type safety to enhance code clarity and prevent potential type safety issues
[ drools - 5022 ] allow to set kiesessionmodel directly ( # 4417 )
updated HiveMetaStoreClient instantiation to use ' this . conf ' reference to improve code clarity by referencing the current instance context
make modal base ui change in taskview only if modalness change
added a test for codec capabilities using AVCProfileLevel and implemented a native method in ShadowMediaCodecList to ensure accurate codec identification and functionality for different media formats
fix : enter key do n ' t get focus anymore ( # 5460 )
added validation for width and height , handled potential OutOfMemoryError , and ensured valid XRSurfaceData instance is used to improve robustness and error handling in image creation processes
updated thousands separator in FormatData _ uk . java to ensure correct character encoding for thousands input
replaced integer array for loops with AtomicInteger for thread - safe access to improve concurrency handling and ensure thread safety
added beta flavor functionality to AchievementsFragment and LeaderboardFragment to enhance user experience by providing visual feedback when beta data is unavailable
updated SearchMethodVisitor to initialize access , name , and desc with context ' s details to ensure proper initialization of the context for method resolution
added sleep calls before catching InterruptedException in IoTDBInsertWithoutTimeIT . java to ensure proper handling of interrupted exceptions
removed redundant code lines in DLNAResource . java to improve code readability and maintainability
( chore ) camel - resequencer : remove the need for the name attribute on the ressequencerdefinition
fix ( core ) : avoid lock contention with multiple thread
flume - 2404 . remove keymanager and trustmanagertype from context .
refactor the ` getSingleSourceApplicableTest ` method to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to simplify code and improve readability by utilizing ` Applicability `
fix jumper not exit when press tab in repeat mode .
replace references to PACKAGE _ PRIVATE with NONE in multiple classes to standardize access specifier usage across the codebase
renamed the method ` unHandled ` to ` unhandled ` and updated related logic to improve clarity and consistency in terminology related to handling unhandled overrides
updated stripes and stripeStats assignment logic in OrcInputFormat . java to improve clarity and efficiency in retrieving stripe statistics
added a null check for the exception before proceeding with cache operations to avoid potential NullPointerExceptions during execution
myhentaicomics ripper now use https , not http , .
add a - v option to the cli to show the current jar version
fix for export list ( bug # 1408 )
update the rotate handling in ConsoleActivity and implement input connection methods in TerminalView to improve user experience by ensuring proper input connection management and enhancing text editing capabilities
updated the type of the priorityQueue in ParallelMultiSearcher to use ScoreDoc as the type to ensure type safety and avoid unchecked cast warnings
added a null check for ownerConnectionAddress in ClientSmartListenerService to prevent potential null pointer exceptions when accessing ownerConnectionAddress
camel - 7462 : camel - jbang - allow to configure the headersmapfactory with jolokia annotation . added a getheadersmapfactoryclass ( ) method to the jolokiacamelcontroller interface .
replaced closing brace formatting in JavaCompiler . java and Diagnostic . java to improve code readability by adding a space between closing braces
int - 1212 jmsoutboundgateway now support the < connectionfactory / > and < messagechannel / > parameter in the < outboundgateway / > configuration
updated the index parameter in the method call from ` i + 1 ` to ` i2 ` to correct the logic to correctly expect the second element of the array
refactor the script engine initialization logic in AbstractScriptProcessor and InvokeScriptedProcessor to improve error handling and ensure proper context class loader management
updated PooledConnectionImpl to include PGStatement class in proxy instance creation to ensure compatibility with PostgreSQL JDBC handling
refresh row estimate after flush mem table . patch by jbellis ; review by jbellis for cassandra - 263
change log level from error to warn for memory fragment limit to improve the severity of the log message for better debugging
fix race between reset ( ) and getalltimestamp ( ) .
fixed - redissonblockingdeque . toseconds ( ) and redissonblockingqueue . writeasync ( ) method throw busy exception . # 3336
remove the format argument from jobinspectcommand ' s usage to avoid unnecessary string usage
fix documentation for miss engine class ( # 6695 )
fix stack overflow in childholder # tostring ( )
refactor AclClient to use SessionCredentials for ACL handling to simplify authentication logic and improve code maintainability
updated condition from numIndexDims to numDataDims in BKDWriter . java to ensure correct handling of data dimensions in the BKDWriter class
[ zeppelin - 5481 ] fix npe in notebookserver # stop
theorem proving : fix typo in the variable name
removed the public access modifier from the verifyIdsAreStable method and getNodeId method to enforce encapsulation within the NodeIdAccessor class
update the error message in createsnapshotpolicy to specify that the volume attach to a vm do not have a valid storage pool .
clean up itemwriter api ( remove unnecessary public modifier )
updated the test ThingTypeUID to use " test " instead of an empty string to ensure proper test identification for the ThingImpl
add a tostring ( ) method to the ImageNameSubstitutor class and corresponding test in ImageNameSubstitutorTest to enhance the string representation of the ImageNameSubstitutor to provide a clearer indication of its description
replace FSDirectory with RAMDirectory for better performance to improve test efficiency by utilizing much faster temporary directory management
attempt to fix line height under small screen without scroll .
updated WalletAppKit . java by modifying method implementations to improve code functionality and maintainability
remove support for oracle nashorn engine ( # 13187 )
fix remove chat transport menu item when the select chat transport be empty .
added abstract methods ` resolve ` and ` replaceTokens ` in multiple classes to handle string manipulation for variables and templates effectively
set bsqblockchainexplorer to null if no bqblockchainexplorer field ( # 5022 )
add a session attribute api that can be retrieve and remove from the standard session . this be useful for other protocol .
added assertions to verify the correct primary bean name and alarm in TestDbJson _ List . java to ensure the correct retrieval of the primary bean properties for better test reliability
[ java ] : use correct initial page count when calculate the averages array in monotonicappendinglongbuffer .
[ hotfix ] fix checkstyle violation in batchcommandliner
added embedded database configurations and transactions to BatchMetricsApplication . java to enhance database compatibility for HSQLDB in batch processing
make glowrootloghttpservice a http service so it can be use without authentication
pdfbox - 4892 : set strokejavacompositepanel to this , a suggest by petr slaby
removed synchronization from close method and added synchronization for deleter handling to improve performance by reducing unnecessary notifications and ensure proper refresh of the deleter resource
added methods for handling multiple choice options and validation constraints in UiBinding . java to enhance functionality and ensure consistent property access across different UI components
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for better clarity across multiple classes to improve code readability and ensure consistent handling of string representations
save ( ) now also update the stored copy of the root tree , if full save be enable .
kristianrosenvold : store regex in seen pattern for backwards compatibility
replaced explicit type parameters with the diamond operator in KrakenAdaptersTest . java to enhance code readability and adhere to modern Java conventions
removed unnecessary import and initialization of CharTermAttribute in DefaultIndexingChain . java to streamline code and enhance maintainability by eliminating unused dependencies
updated import statements in NBJavacTrees . java to replace LogUtil with OutputUtil to ensure consistency in utility usage across the codebase
drill - 8016 : remove unsupported operation exception in vectorizedprimitivecolumnreader . readfields ( )
added SLF4J warnings and improved logging mechanisms in HttpSolrCall . java to enhance debugging capabilities and ensure consistent logging practices
added a call to destroyMetadataServiceProxy method to ensure proper cleanup of the metadata service proxy
added maxlevel constant to defaultentityqueryrepository and improved getlooprelations method
refactor message construction in HubChangeExecListener . java to handle null changelog ID to improve clarity and specificity regarding the registration of changelog with Hub
try harder to handle failed text decoding in plain barcode mode
changed the return type of ` executeCompilation ` method from ` int ` to ` ProcessExecutor . Result ` and added a test for compiler error reporting to enable better handling of compilation errors and ensure comprehensive testing of compiler errors
updated event range logic in ObjectStore . java to ensure correct handling of event counts by setting the range to the default range
refactor validation checks in ValidatedLocalValidatorFactoryBean to streamline logic to enhance clarity and maintainability of the validation validation logic
fix aware world save issue ( # 1864 )
[ intrinsify ] remove useless check from copyphase
enable debug log to investigate gump failure
far refactoring of exception message to make it easy to debug
added null checks for owner address and key address in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure proper validation of account and key addresses to prevent contract errors
replaced the usage of ` Comparator ` with a custom TreeMap for command sorting to improve command sorting efficiency and maintainability
fix : [ resource ] add new ruby namespace in proto option
replaced ` addProperty ` with ` setProperty ` for better clarity and consistency in property management to improve code readability and maintainability by consolidating property setting
modified the AsmLoader constructor to accept a ClassLoader parameter to ensure the AsmLoader can be instantiated directly from the interface class loader
pdfbox - 3353 : avoid division by zero when rlineto be call without initial move , a suggest by michael klink
updated Java2TypeScriptTranslator to conditionally export ` declare ` or ` export ` scope based on class declaration to ensure proper export formatting for definitions in TypeScript
replaced the EmptyServerHandler with an AbstractHandler that initializes the input stream and writes to the output stream to ensure that the server correctly handles requests and writes to the output stream without throwing exceptions
replaced String array parameters with direct string literals in inputManager listeners to simplify code readability and reduce repetition
fix bug in abstractsqmpath . getlightpath ( ) : return the right hand path if just one of the lhs be null
corrected package declaration in multiple test files to ensure consistent package structure across the project
refactor BufferedImage initialization and optimize image rendering logic in AwtCanvas . java to improve code readability and maintainability by reducing redundancy
[ gr - 27243 ] fix initialization of jvmci native library via graal .
[ beam - 8470 ] remove dataflowportabilityapiunsupport and use timeouts in pardo test .
replaced ` remove ( ) ` method with ` poll ( ) ` method and updated null handling for response to improve code efficiency and prevent potential NullPointerExceptions
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
remove todo for watch support , since this be now support .
log warn when max - size per _ node config do not allow any data in map
changed all instances of AST to LST in multiple Java files to improve clarity and accuracy of error messages regarding LST operations
update the calculation of nThreads and improve scoreable list initialization in ThreadedAcousticScorer . java to correct calculation of scoreables per thread and ensure correct handling of list sizes in job creation
replace ` throw new AssertionError ( x ) ` with ` return null ` in ` NetHooks . java ` to improve error handling by returning null instead of an assertion failure
update applicationcontrollerfluentleniumtest to work with window . title ( ) instead of server address
add a new ` makeString ` method to multiple iterable classes for creating strings to provide a consistent way to handle string creation across different types of collections
updated the order constant in OidcServicesManagerRegisteredServiceLocator to use a constant instead of a hardcoded value to improve maintainability and readability of the code by avoiding magic numbers
enhanced the ` WeakAssociationsAnalyzer ` to accept a ` Predicate < ProposedWeakAssociation > ` parameter to improve the handling of weak associations by ensuring no rules are provided
refactor Deflater class for improved performance to enhance compression efficiency and reduce latency
added exception handling to ensure original IOException is thrown to improve error management and prevent application crashes due to transient issues
added a null and empty check for the content in VersionTypeBinding . java to ensure that a Version object is returned when no content is provided
refactor NearbyListFragment to store the place list directly instead of storing it in a variable to improve code readability and maintainability by eliminating redundancy
camel - 19949 : fixed copy / paste error in camel - mail
add rsa format check to openssh private key to ensure compliance with the late security model
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding behavior to control the behavior of item location updates in the database to ensure that the folder name suggestions are updated in a transactional environment
replaced Hibernate ' s Cache and CacheConcurrencyStrategy with a wildcard import and modified entity handling in InheritanceCacheTest . java to simplify import statements and improve entity management during tests
updated import path for DefaultOAuth2RequestFactory and added a method to retrieve user approval requests in TofuUserApprovalHandler to ensure correct usage of DefaultOAuth2RequestFactory and enhance request parameter handling
fix influxdb naming convention ( fixes # 645 )
simonstewart : remove debug code and add a dump method to help diagnose test failure
6986400 : change cookie to cookie2 in 6980004 fix
refactor - tidy - up : move platform . getcapability ( ) to platform . getcapability ( )
added a clear all button with preference preferences in OverviewActionsView and updated its click listener in RecentsView to enhance user experience by providing clear - all options based on application settings
modified the ` desiredRepoVersion ` variable to be final and adjusted timeout settings to improve immutability of the ` desiredRepoVersion ` variable and ensure proper persistence of cluster versions
remove memoryleaktest since that be a fragile way to check memory leak , we can detect memory leak in our stabilizer
allow the javatests to run on localhost . see issue 4752
added a conditional check for MVDWAPI in ServerListener and introduced a new Settings constant in Settings to enable MVDWAPI functionality when the plugin is disabled
fix partition assignment test by assert cluster size before terminate node
implement a SingletonHolder class to dynamically instantiate FFIProvider based on JNA usage to enhance functionality by allowing FFI provider instantiation with JNA support
tika - 2716 -- add test case for bug in tika - batch processing
added null checks and updated entity handling in MongoTemplate and MongoTemplateTests to improve robustness and prevent potential NullPointerExceptions during save operations
changed the default value of position variables from 0 to NODE _ LIST in Position constructor to ensure consistent handling of position values for direct input and success scenarios
added a new field ` accTradeValue ` in ` BithumbTicker ` and updated related methods to store and retrieve it to enable better tracking of trade values using a specific JSON property
replaced string concatenation with parameterized logging in RealtimeSegmentDataManager . java to improve log readability and performance by avoiding string concatenation
replaced a hardcoded value for maxParallelThreads with a static final constant MAX _ PARALLEL _ TASKS to improve maintainability and scalability of the executor service
replaced ArrayList with CopyOnWriteArrayList for header and data readers to improve thread safety for concurrent access
updated various dictionary implementation classes to maintain consistency in naming conventions to enhance code readability and maintainability across the dictionary implementation classes
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during transition handling
try to fix the unit test error of camel - msv
updated condition to check if beginCycle is less than or equal to accountCapsule to ensure that the validity of the initial cycle before proceeding
increased the size of the random value string generator from 6 to 10 in JdbcExpiringCodeStore . java and updated related assertions and tests accordingly to optimize memory usage and ensure correct validation of code generation functionality
added a type check for UniqueConstraint in StandardObjectChangeFilter . java to ensure correct matching of unique constraints based on their table
refactor MediaDetailFragment to simplify description processing and manage language codes more effectively to improve code readability and maintainability while ensuring accurate processing of language codes
do n ' t swallow arrayindexoutofboundsexceptions when we ca n ' t find bug
add reference filter to listimagesscmd ( # 716 )
camel - 8042 : limit endpoint option to allow to configure bridge error handler on jms endpoint
added checks for specific line patterns and set all ops to true in OpExclusionUtils . java to ensure correct handling of specific conditions and improve clarity in operation exclusion logic
added return statements to the DatabaseCommand class to ensure the method indicates a successful outcome
- change politician example to use db corruption rather than db corruption .
[ zeppelin - 5481 ] fixed check for empty init file
camel - 7999 : restlet component should use port for url if explicit port number be specify
remove redundant worldedit . wall _ sign block support in schematicformat .
set the maximum query length to 100MB in QTestUtil and removed the override configuration in SessionState to ensure that query limits are set correctly and avoid potential issues with overridden configurations
jetty - 9 remove send server version from http configuration after ssl be complete .
[ flink - 21754 ] [ connectors / kafka ] change name of sink into ` ` kafka ' ' topic for consistency
updated condition in HiveConf to check if the application name is not equal to " spark . app . name " to ensure proper handling of configuration when the application name is not set
fix # 2204 : use same name for property comparison in micronaut .
simonstewart : make the maximize window handle configurable via the remote server .
reapply : do n ' t ignore main cell ' s buck - out when create projectfilesystem
added a null check for the exception message in TestXMLEntityExpansion . java to ensure that the assertion fails only when the message contains " entity expansions "
update table offset and length calculations to mask out sign bits to ensure consistent handling of integer values within positive range
remove the customize method that always called from DirectMethodHandle to enforce a non - null customization of the form
modify the initialization of mLineBuffer and handle coordinates more effectively to improve code robustness by ensuring only the last coordinate is processed in the buffer
refactor flavor handling in AndroidBinaryDescription to streamline compilation checks to enhance readability and maintainability of the code
modify buffer assignment from ` offset ` to ` i ` to ensure correct buffer index is used for rendering
added new classes ` Property ` and ` PropertySuper ` and implemented ` TestClassResolutionFail ` for exception testing to enhance property management and validate class resolution errors
add a shutdown hook only if groupProperties . SHUTDOWNHOOK _ ENABLED be true
updated FilterChainProxy to remove the URL parameter and directly use UrlUtils for building request URLs to simplify code and improve readability by reducing redundancy in URL handling
fix percentile function sort not work ( # 6340 )
added checks to ensure schemas are loaded before loading them to prevent potential errors when the schema is not loaded
set baseType to null and set literalPrefix and localizedTypeName to empty strings to improve handling of unknown schema types by avoiding unnecessary object creation
replaced hardcoded href values with placeholder placeholders in multiple Java files to improve maintainability and readability of the code
refactor EvaluatorFactory to use singleton methods for ObjectEqualEvaluator , ObjectContainsEvaluator , BooleanEqualEvaluator , and ObjectNotEvaluator to improve memory efficiency and ensure consistent instantiation of evaluator instances
updated version strings from " osx _ x86 - 64 " to " nbuck _ config " in multiple test files to ensure consistency and correctness in configuration management across the application
added sound effect handling in AllAppsView . java to enhance user experience by enabling sound feedback on interactions
update the main method signature to throw IOException instead of Exception to provide more specific error handling related to IO operations
enable granularity for leftAxis in BarChartActivitySinus to improve chart readability by enhancing granularity
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by reducing duplication
updated file handling in ContextHandlerGetResourceTest to use MavenTestingUtils for better path checks to enhance compatibility with different operating systems by validating file existence
added close methods to various classes for better resource management to ensure proper resource handling and prevent accidental closure of resources
improve mockappender to reduce time sensitivity
[ beam - 4142 ] improve error message when resourceid . isdirectory ( ) return false
isometrictiledmaprenderer . added license info , small cleanup
call the unbindhandle method on the item service rather than on the item service itself
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the configuration logic
removed redundant conditionals in gesture handling for screen shot to simplify touch event logic for better performance
updated navigation button color setting based on the current navigation mode to ensure dynamic button appearance based on the user ' s dark mode settings
[ minor ] bug fix : set process language to null if file do not exist
6996563 : 6984311 change forget to update vmstructs . cpp for new field _ operands
added BlockFormattingContext parameter to Box findBox and findElementBox methods to enhance layout adjustment for absolute elements in the UI
added error handling functionality to WorkerProcess and WorkerShellStep to improve error reporting and provide better feedback during process execution
added null check for operator and improved error handling in CheckedListReplaceAll to ensure robust handling of null operators and provide clearer debugging information
added a callback for writing data in SslConnectionTest and implemented a test for write operations on a connection to enhance testing capabilities and ensure proper handling of asynchronous writes
added device configuration change listener registration and made default value in FeatureFlags to improve responsiveness and ensure default values are correctly initialized
added an import statement for JUnit ' s Ignore annotation and marked the test class as ignored to temporarily disable tests related to issue # 1114
removed an unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and reduce unnecessary dependencies
[ fix # 75570740 ] instructorfeedbackeditpage should also reset the focus to the end
refactor synchronization logic in KrakenStreamingTradeService . java for improved readability to enhance code maintainability by reducing redundancy
change log level from err to sys . out in changeableurlsp . java
mahout - 1581 , add parameter to Sparserowmatrix constructor to skip randomaccess check to reduce memory usage
bug cs - 15425 : check if the volume be null before create usage event
refactor file input and output stream initialization to handle local configurations to ensure correct file path resolution based on the configuration settings
[ beam - 5904 ] upgrading beam - v26 _ 0 _ jre to late stable version of guava
[ gr - 30832 ] memorycallgraphbuilder must not register memorycctprovider until after registermemorycctprovider be call .
fix npe if no operation set be provide when create conference message .
added file writing check and reset functionality for the saving process to ensure that the file is writable to prevent illegal user actions
added FolderSyncActivity to handle folder synchronization in DrawerActivity to improve user experience by allowing folder synchronization during navigation
[ flink - 26363 ] [ test ] fix the resource leak in sequentialchannelstatereaderimpltest
well spanish punctuation handling ( thanks to antoni myl )
replaced reader ' s pointValue ( ) with heapPointWriter ' s getPackedValueSlice ( i ) to improve efficiency by directly appending the packed value slice
added a new LocaleRandomizer class and its corresponding test to handle locale randomization functionality to enhance the randomizer functionality to support dynamic locale selection
tika - 1443 mime magic for x - font - printer - metric plus improve unit test
# 140 : update installer and autoupgrade version to ` ` 10.0 ' '
move the ` AccessController . doPrivileged ` call to encapsulate the ` run0 ( ) ` method execution to enhance security by ensuring ` run0 ( ) ` runs with elevated privileges
do n ' t set timeout to zero by default for read with timeout of 0 .
change default metric batch interval from 120 to 600
fix typo in exception message for primary key validation to ensure correct formatting of error messages for column restrictions
added date formatting capability to issue builder in ThirdEyeJiraClient . java to improve date representation for better user experience
use the header generator to generate the priority header .
added a constant for maximum scalar replace code size and updated the boolean scalarReplace variable based on whether it is too big to optimize scalability by limiting the maximum allowed scalar replace code size
do n ' t order by file by foldersort by total file length ( # 10770 )
updated rectangle calculations in TexturePacker2 . java to account for image dimensions to ensure accurate rendering of images based on their dimensions
added WebSocketUpgradeFilter integration to JettyWebSocketServerContainer and related classes to enhance WebSocket handling capabilities to ensure proper filtering during servlet context initialization
added shutdown calls for validateSignService and trxHandlePool , and changed the NodePersistTaskTimer initialization to improve resource management and prevent potential memory leaks
added RawJsonRequestBodyAnnotationProcessor to handle raw JSON request bodies to enable the processing of raw JSON data in the Swagger generator
added a new method ` newTarget ` to create a ` Target ` instance with specified extensions to enhance logging capabilities by allowing dynamic target creation with custom extensions
replace ListBeanContainer with ArrayList in BeanContainer . java and add unit tests in AllUtilTestsSuite . java to improve performance and flexibility in handling entries efficiently
hbase - 27492 fix typo in metric name in testmetricsregionserver
camel - 2844 : camel - core - optimize stream cache to close when exchange complete .
fix : set deviceid for teltonika ( fix # 358 )
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( ) . readFirstLine ( ) ` to improve readability by explicitly using ` asCharSource ( ) `
added null check for operator in JCAssignOp and created a new Test class to ensure operator is set to empty when no specific operator is present
added an enableAccountHandling flag to control account handling in BaseActivity to ensure proper handling of account creation based on configuration
fix # 883 ` ` max polygon can not be find ' ' error
added a path field to the DrillViewTable class and updated its constructor to use it to improve flexibility in handling view paths and ensure proper functionality with schemas
provide system property io . netty . allocator . maxorder and io . netty . allocator . cacheforallthreads to configure the allocator configuration
updated the type check from double array to short array in ObjectInputStream . java and added a new CloneArray . java file to ensure correct handling of short arrays in deserialization for improved type safety
hive - 17926 : make thread pool size configurable in llapio ( gopal v , review by sergey shelukhin )
work around issue with java 11 / 8 bug
updated latitude and longitude range validation logic in LatLonGrid . java and added a new test method in TestLatLonGrid . java to ensure valid range checks and enhance testing reliability for polygon growing
simonstewart : expectedconditions . invisibility ( ) refactoring to make w3c compliant .
added an additional boolean parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified related logic to handle file operations more effectively regarding resource management
added a test for the reflector ` getOuterClass ` method to ensure proper handling of inner class references in tests
added " auto _ generate _ android _ facet _ sources " to configuration and modified the boolean value in IjProjectBuckConfig to enable automatic selection of Android facet sources based on configuration
refactor message handling in HubChangeExecListener to use a structured message format to improve clarity and maintainability of log messages during communication failures
added properties property handling to the Link class and corresponding tests to enable configuration of link properties in the quick link system
removed duplicate @ EqualsAndHashCode annotations and implemented the toString method in YamlConfigFileDTO to streamline code and enhance object representation for better readability
updated generic type parameter usage in AwaitableServerClientCallConfiguration to improve type safety and reduce the risk of ClassCastExceptions
refactor class loading methods to use caller - sensitive classes to enhance security by ensuring caller - sensitive class loader management
[ ds - 3762 ] fix authentication against token in test
replaced LinkedBlockingQueue with ThreadPoolExecutorEx in GroupExecutor . java to accommodate a more resilient range of thread management
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes or packages
refactor TimeStepdefs to use Jchronic ' s Transformer and Calendar classes instead of Cucumber ' s runtime . xstream . converters to improve code maintainability and reduce dependency on runtime - specific classes
swapped the order of parameters in the addPattern calls for Spark isolated and recessive to improve readability and maintain consistent logic in the code
replaced ` ExchangeSpecification ` with ` url ` in multiple proxy creation methods to improve URL handling by directly using the URI instead of a class reference
generator : remove superfluous system . out . println from recordgenerator
camel - 16193 : camel - kafka - allow to turn off auto commit . thanks to bob bastian for the patch .
removed lock release logic from Liquibase and updated output statements in LoggingExecutor and StandardLockService to streamline lock management and ensure proper execution of SQL statements
updated suppress warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests classes to improve code clarity and maintainability by following updated suppressions
fix miss synchronization of database . closefiles ( )
camel - 14354 : fix maven plugin to resolve nested type property correctly .
updated the method parameter from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to ensure the correct currency pair is used for ticker adaptation
camel - 13374 : fixed the c error of camel - core
replace UUID generation with system property retrieval for testId to improve flexibility and avoid potential conflicts with external system properties
add synchronization to dateformat and longnumberformat to fix concurrentmodificationexception
updated package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
updated height scale parameter in FractalHeightMapGrid from 256 to heightScale to ensure consistent sizing across different screen sizes
updated instance checking in SecurityConfig and changed assertion from assertEquals to assertNotSame in SecurityConfigTests to improve type safety and correctness of security attribute comparisons
fix dumppartitionid default value to false ( # 654 )
added test cases for TronTXOutput and TronTXOutputs in UTXOSetTest . java to enhance testing capabilities for transaction outputs handling
[ java ] fixed false positive with implicit unused field
pdfbox - 4892 : avoid npe a suggest by valerybokov
added a test for new job parameters overriding previous restart parameters in JsrJobOperator to ensure proper functionality of job properties during configuration changes
added a protected boolean field ` disallowBatchOnCascade ` and a getter method in ` DatabasePlatform ` to manage batch operations cascade options for better control of batch operations
removed redundant declaration of principal variable to streamline code for improved readability and maintainability
replaced MDCLoggingContext with a new ExecutorService for core closure to improve thread handling and enhance error logging during core closure
removed unused imports and set visibility of mActionsView if it is not null to streamline code and ensure mActionsView is always visible when fullscreenProgress is zero
refactor parameter handling in RunIdIncrementer to use a ternary operator to improve code readability and reduce boilerplate code logic
refactor BasicEntity and TestUtil classes to improve code organization and readability
added tests for ` getMatchedDevices ` method in ` SchemaRegionBasicTest ` to ensure correct retrieval ofMatched devices from the system
fix multi - threading issue in metriceventbus ( # 8633 )
added a conditional check for the max value before updating the mSumChange calculation and created a new EigenvectorCentralityBuilder class to ensure accurate calculations when the max value is not zero and provide a builder for statistics plugin functionality
updated the registry creation method to use a dynamic port instead of a static one to ensure flexibility in registry resolution by using a dynamic port
use model attribute in geometry generator for vertex and vertex color ( # 6373 )
replace theAmplifier value from 2 to 0 in BlockEntityBeacon . java to ensure that theAmplifier is set correctly when certain conditions are met
refactor TubeCalc class to improve code readability to enhance maintainability and simplify future development
[ scb - 937 ] enable health check by default
update the type of ` DEFAULT _ GROUPS ` to use wildcards and add validation checks for inherited groups to enhance type safety and ensure only valid group classes are processed
8057791 : [ testbug ] add @ key headful to test8057791 . java
modified the scheduler to set daemon threads to allow the application to exit to the main method completion fix # 322
fix lexicon version string processing on window
added ReflectionCheckLinker . checkReflectionAccess method call in JavaAdapterFactory . java to ensure security by validating reflection access for the specified type
disabled lazy session creation to prevent failure in some test
updated the initialization of HadoopRecordReader to include a RecordReader parameter to enhance record processing capabilities and improve context management
deleted ClassLoaderHolder and LoaderManager classes along with their associated methods to simplify the code structure and eliminate unused components
added a method to update workspace roots and modified checks for file existence and writable states to ensure that only writable files are processed and improve file management reliability
added try - catch blocks around session callback registration and unregistration to ensure handling of potential exceptions during registration and unregistration
updated index file paths in TestBackwardsCompatibility . java to be relative to the correct directory structure to ensure compatibility with the latest Lucene version
refactor AkkaRpcServiceUtils to accept a Supplier for creating AkkaRpcService instances to enhance flexibility by allowing different constructor implementations
added a conditional check to set the maximum number of map attempts to 3 to ensure that retry attempts do not exceed the maximum allowed value
pdfbox - 3017 : use the font - specific encode scheme to determine if the font should be symbolic , a suggest by michael klink
added a new test class ` SslConnectionTest ` to verify SSL connection handling to ensure proper SSL connection management and exception handling in the server
added validation for address family types in InetAddress and NetworkInterface classes to ensure only valid addresses are accepted to maintain data integrity
added a test method for serializing date data in a collection in DefaultTypeAdaptersTest . java to ensure proper JSON serialization of date objects in different locales
message : correct the description of ` ` first ( ) ' ' to ` ` last ( ) ' '
nifi - 8709 : fix bug in getkey ( ) for putdatabaserecord to skip the first update key if it ' s not there
update loop condition to correctly calculate running width to ensure proper alignment of the table output based on the specified width
pdfbox - 4892 : avoid npe , remove unneeded null check
fix : priority issue in format string checker because of odd number of format argument
add property to ignore non - final loop variable in for - each statement .
added PDF version setting and full compression settings in PDFExporter , modified sample file to use Java . gexf , and adjusted PDF output properties in PDFExporterTest to improve PDF format compatibility and ensure proper display of node labels
add unit tests for LdapUserDetailsMapper to ensure correct mapping of user roles and their authority attributes to their respective authorities
add the read timeout to ldap start
8209500 : [ graal ] vmtestbase / nsk / jvmti / scenarios / sampling test fail with ` ` too small stack of resume thread ' '
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
renamed ` shouldCacheIterator ` to ` shouldAvoidAllocation ` and updated related conditions across multiple classes to improve clarity and reduce redundancy in allocation checks
added a condition to check if the handler is invalidated in the gesture state check to improve state management by ensuring the handler only processes valid gestures
updated the calculations for mMaxDistanceForFolderCreation and mOldRotationYs in Workspace . java to improve the responsiveness of folder creation by reducing unnecessary space
updated property handling to use ConfigProviderResolver instead of manual assertions to enhance code clarity and maintainability by consolidating property checks
updated Testjsig . java file to improve test coverage and functionality
fixed mana contain wrong amount of mana in creative . close # 3555
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 182 )
remove the serialVersionUID field and add a @ SuppressWarnings annotation in P11TlsPrfGenerator . java to suppress the warning about the serialVersionUID field
fix origin file not exist error when validate tsfile ( # 219 )
[ jdk21 ] add use of lambda expression in switch21 and switch21
updated error messages in ComparableSubjectTest . java to use " test . MyTest . " prefix to improve clarity of error reporting for test failures
refactor StreamHelper to set XML standalone flag for XML content and create a test case for it to improve XML processing functionality and ensure correctness through testing
update the capacity validation condition and enhance string formatting in Int2ObjectCache . java to improve capacity validation accuracy and enhance readability of string representation
replaced sorting for security filter chains with Order on bean definitions to ensure consistent ordering of security filter chains in the application
removed the ` TimeInForce . GTC ` parameter from the order type arguments in ` BinanceTradeService ` to streamline the order handling by eliminating unnecessary parameters
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and simplify constructor calls to enhance code maintainability and enforce value validation for min and max values
update KEY _ SEP character from ' \ 0 ' to ' \ t ' to ensure consistency with newline handling in key handling
camel - 14399 : camel - jms - dsl - make it easy to configure component option .
[ gr - 3448 ] fix getbound for type parameter .
refactor the logic for returning filter builder instances based on the Parquet type to use a dedicated method to improve code clarity and maintainability by centralizing filter creation logic
updated artifact name handling in BatchPropertyBeanPostProcessor . java and added cleanup methods in StepContextFactoryBeanTests . java and StepContextFactoryBeanTests . java to ensure proper resource management and prevent potential memory leaks
add debug info to debug ssl test failure ( # 557 )
modified the handling of default values in mmm Config . java and added a new DnsFallback class for testing to improve type safety and functionality of default settings in the configuration
ww - 4640 add extra javadocs to default theme and fix a log message
changed the ` success ` variable to ` url ` and updated related JSON properties in ` DepositAddress . java ` to improve clarity by explicitly representing the URL and associated properties
refactor anonymous inner class to a lambda expression that uses LocalFree for memory management to improve code clarity and ensure local free location is released after use
removed " address " and " phone " scope from the OAuth2 provider to simplify scope management for registration
replaced direct assignment of _ started with a dedicated Start class to improve thread management and encapsulation of the selector handling
added new constants for hue and saturation in WLedBindingConstants and updated the sendGetRequest calls in WLedHandler to improve color management and ensure correct color usage based on segment index
replaced the stream validation method with a Set of valid functions in VectorizationProvider . java to improve performance and simplify the code by eliminating unnecessary stream operations
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to provide a support for JSR instance management
added transactionmanager to the basesubscriptioninterceptor for subscriptionactivatingsubscription ( # 5390 )
updated SQL query construction to dynamically handle update and insert operations to enhance performance and maintainability of database operations
remove elevation from ContactItemInflater for devices running SDK versions below Lollipop to ensure compatibility with devices running Android O and above
replaced ` typeInformation ` with ` identifier ` throughout the ` Identifier ` class to enhance clarity and maintain consistency in naming conventions
wrap file reading and writing in a privileged action to enhance security by ensuring that file operations are executed with proper permissions
updated Groovy parser and printer to handle binary operations with an additional space after an array to enhance functionality for handling binary expressions in Groovy
updated warning message format to include the exception class name to improve clarity of logged exceptions for better debugging
patch from danielwagnerhall to support unsigned unsigned number in unicode string
add a test for norway character in file name when download via proxy .
replaced RuntimeException with CancellationException and added isCancelled methods to AsyncResource and FingerprintScannerSample classes to manage cancellation scenarios more effectively and improve error handling
added a null check for statistics before processing the cache in TimedMemberStateFactory . java to avoid potential NullPointerExceptions during cache processing
refactor MongoTemplateTests to improve code readability and add a test for removing an object from explicit collections to enhance test coverage and ensure correct behavior of the remove operation in explicit collections
added copyright notice to several sketch project , plus prepare for release
[ beam - 6170 ] fix checkstyle issue in util / coder . java ( # 787 )
added a new boolean flag ` mIsClearAllButtonFullyRevealed ` and modified scroll handling logic in ` RecentsView . java ` and ` PagedView . java ` to improve the handling of the scroll behavior for RTL layouts
introduced a new constant COMMON _ HMS _ PROPERTIES and updated references to use it for setting parameters to improve code clarity and maintainability by centralizing the management of HMS properties
added a method to check if a message is already in use and updated exception handling to improve error checking for binding issues
add a command - line argument for the Test NestmateAttr class to ensure proper initialization of the test class path during execution
removed unnecessary logging imports and updated the verbose schema text detail type to streamline the code and improve clarity by using a more descriptive variable name
add a few annotation miss by idea of fix the eclipse warning
# 2007 - add support for nested transaction ( test )
changed the type of fetchSize from a primitive int to a ThreadLocal < Integer > in QueryProcessExecutor . java to improve thread safety and prevent multiple fetch calls
fix default strategy for ping pong to not use backoff .
fix issue with return type for non - functional interface . fix # 2643
added logic to set the HDP version in SliderAppsViewControllerImpl . java to ensure the system properties are set with the appropriate version if configuration
added private fields and modified the service loader handling in JavacProcessingEnvironment . java to ensure proper resource management and prevent potential memory leaks
added DeepCloner class and modified method definitions in ParameterizedRobolectricTestRunner and RobolectricTestRunner to improve parameter handling and ensure consistent class loading during method calls
webserver : hide stack trace by default ( fix # 467 )
8022598 : object . getprototypeof should return null for host object rather than throw typeerror
updated the import statements and refactored OopField declarations in SystemDictionary . java to improve code organization and maintainability by using a more consistent import structure
updated JwkKeyListView to register a hierarchy adapter for RSAPublicKey and ECPublicKey to enhance type handling by supporting RSAP key types with base64 encoding
[ gr - 36769 ] do n ' t write the image heap data if useonlywritablebootimageheap be enable .
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage and fix existing issues
removed import of OrderClassLoaders from MavenPluginCollector . java to eliminate unused dependencies and improve code clarity
replaced the ` Validator ` method with ` getOwnerAddress ` in multiple actuator classes to define the owner address as a ByteString for better data handling and serialization
add a simple main ( ) that can be run from your ide easily to run a broker without do a full multi - project maven build
updated binary command sending logic to handle double minimum and maximum values more efficiently to improve error handling and provide clearer byte array representation for invalid range values
add support for proto annotation with an empty edge .
[ java ] remove operation after active correlation id to allow for future correlation id to be re - used .
added conflict saving logic in FileDataStorageManager and invoked it in FileDownloader and FileUploader to ensure that conflicting files are not processed to maintain data integrity
upgrade to spring 3.0 . 5 . final and polish our javadocs
replaced usage of ` StrUtils ` with direct method calls in multiple filter factory classes to simplify code and reduce dependency on external libraries
added conditional logic to set " remarksReporting " and " useInformationSchema " properties for Oracle and MySQL drivers to ensure proper handling of remarks and MySQL configurations
added a serialVersionUID to the MockMethodInterceptor initialization and suppressed deprecation warnings in PartialMockingWithConstructorUsingEasyMockTest to ensure proper serialization and suppress deprecation warnings during proxy initialization
replace Date with current time retrieval in FileChangedExclusiveReadLockStrategy . java to improve accuracy in tracking trigger times during file changes
hhh - 12415 wrap the executioncontext class loader in the correct place so that it can be reuse
added buffer change handling and updated terminal height calculations in TerminalView and TerminalTextViewOverlay to ensure correct display of text after UI thread changes
fix the service pid namespace when there be no file extension in the config file
feature : remove unused freeze and unused method from operationregistry
add support for insecure tl config ( # 7372 )
refactor code to simplify source and class path handling in JavadocTool . java to improve code readability and maintainability by reducing complexity
replaced nodeColumns with edgeColumns for case - insensitive comparison to ensure consistent handling of attribute columns regardless of their case
added cascade option to the OneToOne annotation in DefaultUserInfo . java to ensure that the relationship is ordered by default
change message . hashcode ( ) to be consistent with equal ( ) and hashcode ( ) .
replaced URL encoding with Unicode escape sequences in the test to ensure proper encoding of special characters for URL handling
[ flink - 31843 ] [ test ] remove the useless iskeyserializertypevariablesized method
added a method to retrieve static permissions in ProtectionDomain and updated usage in SubjectDomainCombiner to handle this method to improve access control for static permissions in subclasses
add a check to ensure that the recipe be not null , and fix some minor formatting .
fix a bug in tika parser that would cause an out of bound exception if a command line syntax error occur .
added a method to show a connection error popup in UploadMediaDetailFragment and modified error handling in UploadMediaPresenter to improve user experience by providing a clearer dialog for connection errors
added a new test class ` Issue596 ` and modified ` HttpHandlerImpl ` to handle unsupported media types to ensure that the application correctly identifies and handles unsupported requests appropriately
fix integer overflow bug introduce by intellij inspection
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the layout management functionality
refactor ConsoleUIService to support environment variable stdin usage to enhance flexibility and improve console input configuration based on environment settings
replace mock account manager callback with a custom TestAccountManagerCallback to enhance test reliability and maintainability by using a more descriptive test class
replaced the enclosingType variable with a direct retrieval from wrapped ' s enclosing type to streamline the type retrieval process by eliminating unnecessary state
renamed methods in Pairs and InPairsExpression for consistency and clarity to improve code readability and maintain uniform naming conventions
nifi - 259 : fixed flaky putallcallable . testasyncputall ( )
[ rocketmq - 3246 ] fix npe when unsubscribing from a non - existent mq consumer
[ java ] generate source id after send a correlation to the driver .
added a new file TopTabAction . java that implements a toolbar presenter to provide a top tab ' s action for better user experience
camel - 15133 : camel - dynamic - router - should restart when all match mode be all _ match .
refactor AggregateItemReaderTests to use JUnit 4 annotations and structure to improve test structure and maintainability
updated Procedure method signature to use generics to improve type safety and avoid runtime errors
added functionality to count and display Wikidata edits in the application to enhance user experience by providing easy access to wikidata changes
added a validation check for the length parameter in OfflineSorter . java to ensure that the length is within short . MAX _ VALUE to prevent illegal argument exceptions
do n ' t clear the accumulator and report it for min _ value if it be too big
renamed several dataset classes to maintain consistency in naming conventions to enhance code readability and maintainability by standardizing class names
enhanced error message for InvalidTopologyTemplateException in ProvisionClusterRequest to provide clearer diagnostic information about the unsupported credential types
updated vector initialization to use a fixed range for random values to ensure consistent random number generation for vector values
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the time comparison logic to improve precision of time comparison and enhance code readability
fix testutil and add ssl property to pgpropertytest .
# 887 - disable safebrowsing mode for now
add null check before cloning oldConfig in BaseMotorMount and RecoveryDevice classes to ensure that oldConfig is not null before cloning its value to avoid potential NullPointerExceptions
added a condition to check if transcoding is disabled in DLNAResource to ensure transcoding behavior is consistently applied based on renderer settings
updated methods to handle empty lists gracefully in DataTable and TableDiffer classes to improve robustness by preventing exceptions when accessing empty list elements
added a static string ` CustomIgnoreTag ` and modified the logic to remove it to ensure proper handling of specific native code formats when parsing
optimisticlockingexception handler now throw optimisticlockingexception rather than runtimeexception
fix regression with wrong nationality for @ configurationproperties ( parent = @ configurationproperties )
updated PreferencesActivity to extend LimitlessIDEActivity and modified padding methods to improve UI responsiveness and maintain consistent padding handling
deleted the ClusterNodeInfo class from the codebase to the class is no longer needed for the current functionality
formatted return statement in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output for legacy ciphersuite chosen in ServerHandshaker . java to improve visibility into the ciphersuite being used for debugging purposes
refactor template selection logic to handle single templates correctly to improve user experience by hiding the file list when only one template is selected
added a nodeLabelMap to track duplicate nodes and updated related logic to improve error handling for duplicate nodes during node import
created a new file R2303044ListSelection . java for list selection functionality to implement a simple GUI that tests item selection in a list
[ java ] do n ' t keep a reference to a aeron client timeout field when create a new registration in the driver .
added a null check for mWorkspace in Launcher . java to prevent potential null pointer exceptions
added a test method to verify the compound property in StepScopePlaceholderIntegrationTests . java to ensure the correctness of compound handling in the step execution context
replaced the initialization of new row count with a new variable rowCounts that adds the current row count to streamline the row count computation for better accuracy in row count management
fix ( * ) : fix path parameter handling in spring - boot example
in progress - issue batch - 159 : make guidisplayertest . xml more robust by only look up the handler for the active event
updated DistBuildSlaveExecutor to use CachingBuildEngineDelegate and LocalCachingBuildEngineDelegate based on remote configuration to improve caching behavior for better performance in distributed builds
updated RuntimeException to include additional JSON parsing options to improve error handling by providing more descriptive error messages for better debugging
added a conditional check for DEBUG level before logging the message in WidgetsModel . java to improve logging performance by avoiding unnecessary string concatenation in debug mode
refactor Console and Scanner classes to improve code readability and maintainability
updated ` numTerms ` calculation in ` SimilarityBase . java ` and added a test for discount overlaps in ` TestSimilarityBase . java ` to ensure accurate calculations and validate the behavior of disjunction logic in the similarity logic
added checks for the presence of the " send " method in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to ensure that the mailSender is validated before sending items
added new exit and quit methods with corresponding properties to Global . java and removed the duplicate quit method from ScriptingFunctions . java to standardize exit functionality and eliminate redundancy in the codebase
optimization - comment out javadoc and comment out unused code .
renamed methods in InvocationsAnalyzer , NoMoreInvocationsVerifier , and NumberOfInvocationsVerifier for consistency to improve clarity and maintain uniform naming conventions across services
cloudstack - 8126 : fix npe in vmwarecontext . getservicecookie ( ) .
swapped the order of authority retrieval in the ResinAcegiAuthenticatorTests class to improve test accuracy by aligning assertions with expected roles
updated bigIntegerToBytes method calls to use a consistent byte value to ensure proper handling of integer representation for better performance
fix typo in the system property ` ` fml . modstates ' '
refactor account selection handling in ReceiveExternalFilesActivity by extracting account selection logic into a separate method to improve code readability and maintainability by consolidating state management
[ java ] provide more information when ioexception happen in collectsink . connect ( )
fix ( sql ) : throw exception when unexpected result from validator smart contract
modified TexturePackerFileProcessor to handle empty JSON files more gracefully to improve error handling by preventing null pointer exceptions
removed unnecessary null check for the source source in PooledConnection . java to simplify the code for better readability and performance
updated the TARGET _ MB constant value and modified the window size from 10 , 000 to 1 , 000 and changed the size calculation to optimize memory usage and improve performance by reducing allocation size
ignore exception when write to system ( fixes # 3418 )
[ flink - 18552 ] [ kinesis ] set kpc credential refresh delay to 100ms to avoid intermittent failure
replaced instances of AlertDialog . Builder with showInfoAlert method for media detail alert to streamline the code and improve maintainability by using a centralized alert method
modified the ` test ` method to include a ` pack ` parameter for enhanced functionality to support packaging scenarios in the processing logic
update Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest and TestBadUseCases to ensure compatibility with newer Java versions and maintain compatibility
pluginbundlemanager : exclude plugin from dependency resolution ( for open sourcebim )
added a HashSet to manage ZipFileInputStream streams and adjusted resource management to ensure proper resource management and prevent potential memory leaks
rename a variable of datamatRIX to data _ matRIX across multiple files to improve clarity and consistency in naming conventions
[ flink - 3390 ] [ datastream ] mark generate source a temporary idle when there be no key range
[ hotfix ] fix typo in blobservergettest
replaced ` findAny ( ) ` method implementations with ` getAnnotations ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java ` to streamline method usage for better readability and maintainability
added support for " ppc64le " architecture in Bits and ByteArrayAccess classes to ensure proper handling of additional architectures in the system
added details to the RuntimeException message for better context in RoboMonitoringInstrumentation . java to provide context about the activity resolution issue and issue details
use long . max _ value instead of minUTES for timeout in transactionimpl
( chore ) camel - dateutiltest : use instant instead of new date instance
refactor BytesRef class to improve memory management to enhance performance and maintainability of the code
added a Toast message to indicate that YouTube Player does not work on Lollipop yet to improve user experience by providing feedback when the player is not available
added checks in Parser and StatementTest for various SQL syntax errors to ensure proper handling of unterminated escape sequences and improve error messaging for SQL syntax errors
fix issue with npe in case mvibrator be null
updated border and column background colors for table elements in DotRenderer . java to improve visual distinction of UI elements based on primary key properties
added a method to check if a string is encoded in HiveConf . java and updated SetProcessor . java to use this method to enhance configuration handling for encoded parameters in Hive queries
pdfbox - 2852 : catch more exception , a suggest by ivan ridao freitas
modified the X509Certificate class to enhance certificate validation logic to improve security and reliability of certificate handling
add uri validation to wavefrontconfig ( fixes # 3903 )
updated TimeLineCursorAdapter to utilize NetworkedCacheableImageView and added image loading functionality to improve performance and enhance image loading efficiency
simplified the constructor of ValueAnimator by removing unnecessary ' this ' parameter to streamline the code for better readability and maintainability
added method to store the gdxControllersVersion in DependencyBank and updated related classes to use this version to ensure the controller version is accurate and consistent across the project
updated LaunchedURLClassLoader . java file to enhance class loading functionality for improved URL handling
adapt jdbc test case to new check of correct result set column count
( scott phillips ) add expires header when no cache be enable
updated the warning message format in ZkController . java to use Locale . ENGLISH to ensure consistent message formatting across different locales
modified the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility in allowing different parser implementations
updated copyright year in multiple Java files to 2014 to ensure compliance with licensing requirements and improve licensing information
remove a semicolon from the end of a method in MainTest . java to clean up the code and improve readability
refactor TypeContributions class to improve readability to enhance maintainability and ease of future modifications
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector when available
replaced templateName with request name in the StatementGenerator to ensure proper context is referenced for the request
removed the isTypeMatch method from AbstractConfig . java to simplify the configuration addition by directly adding the composite configuration
[ java ] : add ' timestamp ' to session header after publication . offer ( )
updated method names from ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll ` and ` maxTrustedIndex ` to improve clarity and consistency in method naming
manifold : exclude the no - bootstrap annotation from the bootstrapinserter ( fixes # 374 )
hbase - 15815 fix npe in tabledescriptorchecker ( ted yu )
updated branch navigation logic to ensure the number of commits is requested instead of the maximum threshold
8023475 : [ test bug ] test javax / swing / jslider / 6794831 / bug6794831 . java do not wait long enough for test result
added a new constant ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method to improve metadata handling for build - related data to enhance code clarity and maintainability by centralizing build metadata retrieval logic
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to streamline code and improve maintainability
removed a redundant call to markAsDone ( future , channel ) in HttpProtocol . java to streamline code by eliminating redundancy
added import for TezConfiguration and a static TezConfiguration instance to facilitate configuration management in the Tez process
added null check for keyPurposes in TimestampedSigner . java to ensure proper handling when keyPurposes is not initialized
modified the conditional check to simplify logic in CustomPlaybackOverlayFragment to improve code readability and maintainability by using a clearer condition
fix bug where forget would n ' t start the most recent sound
simplebaseplayer : clear discontinuity only on first frame frame
added DecimalFormat and NumberTickUnit instances for X - axis representation to improve precision in number formatting for better readability
refactor the creation of TargetGraphAndBuildTargets to use a more streamlined method for building target graphs to improve code readability and simplify the construction logic
removed the IndexFileNameFilter class and updated condition checks for file names to simplify code and improve readability by using a direct string comparison
add the feature to do n ' t use texture stitcher for entity collision bounding box ( # 4032 )
added a default compression level parameter to ApkBuilder and updated related methods to allow configurable compression levels for better handling of certificate compression
added a test method to include static fields in the MirrorTest class to ensure that static fields are included in the compiled JAR for correct processing
updated constants and constants related to undefined metrics size in various classes to enhance handling of byte data types in metric calculations
refactor string building in AssertJ multiple failures error handling to improve readability and maintain consistent formatting of error messages
replaced direct hash code usage with Objects . hashCode in Trade . java and removed unnecessary constructor in KucoinDealOrder . java to improve code readability and leverage utility methods for null handling
added caching capabilities and cache management to several classes to enable caching capabilities for posts and their associated data retrieval
- fix for ticket : 340 -- only include locale - specific prefix in property file
added null post handling and configuration options in ` SimpleHttp ` and updated tests in ` TestHttpPlugin ` to enhance POST request validation and improve test coverage for null post scenarios
added dispatcher and executor service shutdown functionality to ClientSideSlb and ClientSideSlbTest classes to ensure proper resource management and shutdown of HTTP client connections
modify texture positioning logic in TextureRegion . java to differentiate between horizontal and vertical flip to ensure correct height calculation based on the islipY state
handle unknown property in discovery service more gracefully
modified contextPath initialization to allow for null context path to improve reliability by avoiding potential NullPointerExceptions
[ drools - 3640 ] allow reinitialization of class from drools - runtime after reinitialization
added a new constant B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap and updated its usage in SerializationHeader to ensure the correct header value is used during serialization
added precompiled header handling and validation in AbstractCxxSourceRuleFactory . java to ensure proper usage of precompiled headers and improve error handling for PCH compatibility
replaced WeakReference with a custom AccWeakReference to incorporate security context handling to enhance security by ensuring privileged actions are executed with the correct access control context
made the findNextIndex method private and added a return statement in ObjectSet . java , and updated removal logic in OrderedSet . java to enhance encapsulation and improve functionality
updated the value of isDirect from true to false in VertexBufferObject . java to ensure correct initialization of the direct state
bug fix : do n ' t read all audio effect text if it ' s already there
updated method signatures to return the local coordinates instead of void to enable retrieval of coordinates for improved usability
pdfbox - 5664 : use ` input . limit ( ) ` instead of ` input . capacity ( ) ` when reading at end of pdf
added null check before removing the close hook from the context to avoid potential NullPointerExceptions when the context is not initialized
fix folder cell border spacing for folder layout in landscape
refactor value numeric parsing to use a custom ValueNumeric class to improve code modularity and maintainability by encapsulating parsing logic
updated the condition in FormAuthenticator to check if the response is deferred before returning the login status to improve handling of deferred responses during login validation
updated command - line option checks from " -- module - start - ini = " to " -- add - to - start " to streamline command - line options handling for improved clarity and usability
added a default partition value initialization and modified the handling of dynamic partition values to ensure that a default partition value is used if it is not provided , improving robustness
[ flink - 29334 ] [ runtime ] add null check for operatorfactory in streamnode and streamgraph
updated return statements in DefaultArtifact . java to correctly format conflict ID and classification to ensure accurate representation of artifact IDs and classification information for better debugging
[ camel - 2918 ] fix flaky test kafkaconsumerrebalancetest
ambari - 21193 . should better handle noclassdeffounderror with a user error message ( dlysnichenko )
changed configuration key from Gmail notifications _ ENABLED to ENABLE _ GMAIL _ NOTIFICATIONS to enable gmail notifications for better account registration and security
doc : [ crypto ] fixed docstring formatting ( # 87 )
make lumberjackmultithreadtest run only on multi - threaded environment
do n ' t show scoreboard name in gui if player be in dead state
[ core ] fill out the miss @ return tag description
bug 10625 : rename api _ key and secret _ key parameter to api _ key in updateuser api call
replaced switch - case statements with if - else statements for better readability and consistency to improve code clarity and reduce boilerplate code
fix incorrect javadoc since tag of abstractmetadataexportmojo do n ' t use it
added handling for SQLIntegrityConstraintViolationException in Hive . java to ensure that a required table is dropped only when the required materialized view definitions are used
changed the property name from " githubAccessToken " to " gitHubAccessToken " to maintain consistent casing for property naming
added a new file for the RoboExecutorService class to deprecate its usage in future development
added group removal and sorting options to the menu in GroupTreeView . java to enhance user interface functionality by incorporating subgroup management
changed method names and improved path validation in BraveClientExecutionInterceptor . java to enhance clarity and ensure only valid paths are processed
8076995 : gc / ergonomics / testdynamicnumberofgcthreads . java fail with java . lang . runtimeexception : ' new _ active _ workers ' miss from stdout / stderr
updated methods in CxxPlatforms to return Flavor instead of ImmutableFlavor to simplify type safety and improve handling of host flavors
updated SQL command construction to handle optional parameters to enhance flexibility in creating table creation based on user - defined options
chatviewer : add alpha scale to the background of the chat after creation of account .
test : migrate ctiteratortest to junit 5 ( # 4528 )
clear token collections in CharTokenizer , KeywordTokenizer , and StandardTokenizer classes to ensure that each token is clear before use to prevent memory leaks
fixed bug 1213319 - unusedprivatefield no longer crash on block statement .
updated state machine configuration classes to remove enums and add checks for missing configurers to improve error handling and clarity when configurers are missing
simonstewart : remove a redundant link check , no longer need
updated the StringConverter to handle float and minimum fraction digits more accurately to improve flexibility in formatting floating - point values
fixed issue where current unitofwork be never reset to scope . getcurrentscope ( ) .
update touchable insets handling in TaskbarDragLayerController . java to ensure correct touchable insets are set for user interface
fenced code parser : remove useless check for ~ line
added socket timeout functionality to manage socket timeouts in various classes to enable flexible control over socket timeout settings during data source operations
add sleep to fix randomly fail test .
updated InputStreamReader to use UTF - 8 encoding when reading from URL to ensure proper handling of character encoding in HTTP streams
refactor List class implementation to improve code readability and maintainability
fix write stream error in asyncfileimpl
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to specify that these classes are stable with API documentation
cloudstack - 5388 : fix npe when there be no physical network id ( # 2388 )
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated its implementation for clarity to improve code readability and accurately reflect the purpose of the method
updated Java version handling in ConstantPoolTagTests to reflect Java 9 to ensure compatibility with Java 9 and later versions
clean up error command line , also speed up old build
added a method to remove all client headers in AsyncHttpClient to improve client header management by allowing client headers to be cleared
replaced Vector with ArrayList and updated method calls to improve performance and simplify vector handling
updated the default grid column value from 4.0 f to 3f to improve data storage efficiency in the application
updated the condition in ` CalcitePlanner . java ` to include a check for ` ! forViewCreation ` to ensure proper handling of table creation in the query planning
updated datePattern and assertion logic in TestHS2HttpServer . java for improved accuracy to ensure accurate replacement of date patterns in the test assertions
[ gr - 46711 ] avoid npe in snippet reflection . getparameterstream ( class , constant ) when parameter be null .
simonstewart : fix the build for firefox 6 on travis
replaced direct addition of byteOffset with a method that adds it to ensure proper handling of large allocations in ByteBlockPool
changed static modifier of firstEncoder and secondEncoder to instance variables and modified string formatting to use Locale . ENGLISH to ensure consistent behavior across different locales and avoid potential localization issues
resolve : http : / / issues . apache . org / activemq / browse / amq - 1425 - add additional error handling in tcp transport
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress the warning about the missing serialVersionUID field
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and updated the constructor of ` OcamlDebugLauncher ` to use ` context . getSourcePathResolver ( ) ` to simplify the class design by eliminating unnecessary dependency on ` SourcePathResolver `
add ` ` discard change ' ' and ` ` discard change ' ' to warning dialog
added checks for response types and registered service access policies in OAuth20DeviceCodeResponseTypeRequestValidator . java and improved error logging messages in OAuth20AccessTokenEndpointController . java to enhance error handling and ensure proper access control for registered service access
added a validation check for the index in DrillBuf . java to ensure that the index is within the valid range before proceeding with operations
hive - 17428 : add tableinputformat class parameter to job initialization ( jesus camacho rodriguez , review by gopal v )
removed redundant call to append method in AbstractJRubyMojo . java to streamline code for better readability and maintainability
sulong : throw more descriptive error when language be not find and language be not internal
added deprecation for the RESERVE command and improved logging for reserved commits to ensure compatibility with Solr 7.1 and provide clearer feedback on commit settings
camel - 7999 : dih - cache should use cacheForeignKey instead of cacheVariableName to improve clarity and consistency in data source
replaced long array handling with Object array handling in ECKeyPairGenerator to improve type safety and simplify the key generation process
[ flink - 29096 ] [ runtime ] change suspend method to support cancellation
replaced singleton instance of ` RotationTouchHelper ` with a direct constructor to improve encapsulation and reduce potential memory leaks
refactor UniFiControllerCache to streamline port table handling and improve readability to enhance code maintainability and ensure consistent handling of port overrides
updated the method signatures and variable names from ` int lwp _ id ` to ` long unique _ thread _ id ` across multiple classes to improve clarity and accuracy in handling unique thread identifiers
use candidate to remove offer from the list to avoid duplicate offer
clean up tl 1.3 and 1.5 code use constant instead of magic string
modified MockitoMethodInvocationControl to handle Class mock cases and updated mock handling in SystemClassUserTest and SystemClassUserCases to improve mock handling accuracy and clarity in system property retrieval
updated NotLoadedException constructors to accept a reference to the current instance to improve code safety by preserving the context of the NotLoadedException
removed an unused import and updated intent data handling in FileDisplayActivity to streamline code by eliminating unnecessary dependencies
added error handling and improved file management in StoreDirect and StoreWAL to ensure proper resource management and provide clearer error messages during file renaming failures
add a UI _ HELPER _ EXECUTOR to execute a screenshot task in AbsSwipeUpHandler to improve the responsiveness of the swipe action during gesture transitions
added hidden property and corresponding getter / setter methods to CommandArgumentDefinition and LiquibaseCommandLine to control the visibility of command arguments based on its value
[ flink - 24090 ] [ kafka ] [ test ] fix log plugin test instability
[ geos - 8125 ] support geoserver extension styleinfo . getld ( )
added permission checks for launcher activities to enhance security to prevent malicious intents from being executed without proper permissions
added an ID field and getter / setter methods to TiledMapTile and its implementations to ensure consistent identification of tile IDs across different map implementations
refactor Manager class to improve method organization to enhance code readability and maintainability
updated JDBC and Session connection string to include version parameter to ensure compatibility with version 0.13 . 0
added schema properties and modified DiffOutputControl initialization to support optional schema inclusion to enhance functionality for better schema handling during change log generation
correct putifabsent performance issue with jmxregistry
add exception to log for singlebenchmarkrunner ( # 1272 )
changed the visibility of the doPutRecord method from final to non - final to allow for subclassing of the method in subclasses
fix # 1451 : make sure we return a relative path for file selector
added tests for handling large response content and client in FastCGIProxyServletTest to ensure correct processing of large and slow response scenarios
added a call to start the ReadInteractionsService in MarkReadService . java to enable the service to interact with read actions
added a conditional check for ' lintClassfile ' before logging warnings for missing annotation methods to improve clarity and control over when to log warnings based on linting preferences
[ ds - 3908 ] email send to mail server should use default port 25
retry sslfactory reload when max change to determine sslfactory reload rate ( # 6521 )
corrected the date format from 24 - hour to 24 - hour to ensure correct representation of time in milliseconds for better interoperability
updated the assertion message in SpyingOnRealObjectsTest to reflect the absence of a mocking private class to improve clarity in error reporting related to class visibility issues
added functionality to handle line endings in InlineBoxing and LineBox classes to improve formatting handling of line breaks for better user experience
updated filePathString initialization to handle null cases to ensure proper string concatenation and avoid potential NullPointerExceptions
added import statement for DocCollection in TopicStream . java to utilize Solr ' s DocCollection functionality in the code
refactor input stream initialization and add a test for handling Windows - 1250 parameters in multipart requests to improve code maintainability and ensure correct input handling for multipart requests
fix resource leak with exposure
added validation to ensure the current graph is a dynamic graph to prevent illegal argument exceptions when the current graph is not a dynamic one
handle disabled bean exception . fix # 2734 ( # 2734 )
add jsonpath expression option to suppress exception
removed redundant line of code in HelixServerStarter . java to streamline code by eliminating unnecessary line
updated usage messages in CLHSDB and HSDB to reflect command - line syntax changes to clarify command usage for improved user understanding
removed duplicate duplicate configureChunkProvider method and improved code clarity to enhance maintainability and reduce redundancy in the FaultTolerantStepFactoryBean class
[ beam - 4307 ] re - enable org . apache . beam . sdk . io . write by default
refactor accessibilityManagerTest to use a singleton instance instead of multiple calls to improve test clarity and maintainability by consolidating accessibility manager tests
change the notification GOUP _ ID to a new group display identifier to improve the clarity of the notification usage tracking
replaced ` SourcePathResolver ` with ` AbstractBuildRule ` and removed unnecessary ` resolver ` parameter from several classes to simplify code structure and improve clarity by eliminating unnecessary dependencies
refactor ` enumDataTypeHelper ` to a dedicated class and update its implementation to improve code organization and promote reusability of enum data handling
updated log path assertion to use File . separatorChar to ensure compatibility with different operating systems ' log file path conventions
replaced instances of ` getMapLocalWork ( ) ` with ` mapRedLocalWork ( ) ` in multiple files to ensure consistency and utilize the updated local work implementation
added an UnsupportedOperationException for dropping index tables in HiveMetaStoreClient . java to ensure that operations cannot drop index tables , preventing potential issues
added a check to ensure the visibility is not VISIBLE before updating disabled flags in RecentsView to ensure that the disabled state does not affect the user interface
added a platform - specific highlighter for non - Windows environments to enhance compatibility with non - Windows environments
new , xss _ request _ parameter _ to _ http _ header , and xss _ request _ parameter _ to _ http _ header to show bug information about request parameter
replaced the method of converting the file path to a string using ` toString ( ) ` to simplify the code and improve readability by using a more concise method
updated the method call to removeCaptureListener in SelectBox . java to ensure the listener is properly removed from the stage
changed the value of the _ metaDataComplete variable from true to false to disable metadata completion functionality for improved application stability
modified the ` removeTaskTarget ` method to execute tasks using ` THREAD _ POOL _ EXECUTOR ` for execution to improve performance by executing the task removal from the current thread
added environment variable handling for JavaScript bundle flavor in JsBundleGenrule to ensure proper resolution of environment variables and release flavor in the build process
6500701 : enhance for loop with generic generates faulty bytecode
added tests for crlfNewLinesInComments and modified the AutodetectGeneralFormat to ensure correct formatting of new line characters in comments and Javadoc
added hubMode configuration to AbstractLiquibaseChangeLogMojo and declared it in AbstractLiquibaseMojo to enable dynamic configuration of HubConfiguration based on the provided hubMode
simplified null checks for processedItem in JsrChunkProcessor . java to enhance code readability and maintainability by removing unnecessary null checks
added a check to ensure the linkDb exists before adding it to the input path in IndexerMapReduce . java to improve robustness by handling potential IO exceptions during indexing
replaced a manual method lookup for setting the indexer thread pool with a direct method call to simplify the code and improve readability by removing unnecessary try - catch blocks
removed the trailing colon from the SMS address in GameCanvasImplementation . java to simplify the address format for better readability
added serialization and copying functionality to ` MapJobExecutionDao ` and updated tests for consistency to enhance data handling and ensure proper serialization of job executions
add a new file ` DownloadTest . java ` for testing image download functionality to implement automated tests for rendering texture assets using SpriteBatch
fix : wrong language variable use for tcks .
updated exception handling in GenericUDFRound to use UDFArgumentTypeException to improve type safety and error handling for ROUND arguments
update managedependencies to ignore managed dependency which have no version
added multiple AntPathRequestMatcher instances in SecurityConfig . java to enhance routing capabilities for various HTTP endpoints
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable the test due to known issues
do n ' t generate bean definition for self - inherited superclass . fix # 2804
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to instability issues
[ openwebnet ] fix the order of openwebnet energy and humidity ( # 15490 )
remove unnecessary code from aprendpoint . execute ( )
deleted the SunToolkitSubclass . java file , which contained a method to flush pending events in the AWT toolkit to the functionality was deemed unnecessary or redundant in the current codebase
fix issue with render sort in non - default world .
add unit tests to validate type handlers before primitive types in TypeHandlerRegistryTest . java to ensure proper registration and retrieval of type handlers between different types
pdfbox - 4892 : try to convert white space space to rgb one , a suggest by oliver schmidtmer
updated references to constants in CommonsApplication and PageTitle to use BuildConfig instead of CommonsApplication to improve maintainability and consistency in configuration management
camel - 18131 : camel - health - add health check to camel - main
added a null check for the block position before retrieving the block and accessing its properties to prevent potential NullPointerExceptions when handling block positions
added a test method for altering tables with indexes extend primary keys in AlterTableWithViewsIT . java to ensure that the table alterations functions correctly with indexes extending primary keys
lucene - 4877 : fix equal ( ) and hashcode ( ) to work properly on document with multiple field
removed a field ID from the fields collection in MongoRecordReader to eliminate unnecessary dependencies and streamline the code
added disconnect method to YeelightHandlerBase and DeviceBase classes , and improved WifiConnection command handling to ensure proper disconnection of the connection and manage resources more effectively
check compatibility with innodb auto _ increment = 3 charset = utf8
fix # 4556 : add synchronization period to custom informer
bug 7553 : fix listtemplates api to return only the template it for the user vm
modify image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage to improve image processing accuracy and enhance code clarity
removed deprecated constants related to shortcut and URI in LauncherProvider and LauncherSettings to streamline code and eliminate unused ones
move data file to examples / broker / examples / broker
added legendTop and legendTop variables along with updated calculations in PieChart . java to improve legend positioning and ensure proper rendering of the legend
added a conditional check to return early if the world transform is empty to improve performance by avoiding unnecessary processing when no world transformations are available
added a new file MaryScriptCreator . java for command - line output handling to facilitate command - line input processing and output formatting based on user preferences
added a line to put the remote source host attribute in the flow file to ensure the request receives the correct remote host information
fix compaction log file deletion error ( # 5099 )
remove xlink : href reference , since it be no longer need .
aws s3 stream upload : set a constant for the timeout checker executor
hbase - 25836 only log a warning with no match procedure find for closed regionserver
updated logging logic to check for null spans before logging warnings in ` Slf4jSpanLogger ` and ` DefaultTracer ` to enhance robustness by avoiding potential NullPointerExceptions
trim whitespace from active options before adding them to ensure consistent handling of whitespace in active options
added depth preference handling to wallpaper zoom settings in DepthController to enable dynamic wallpaper zoom based on user preferences
removed the assertion that verifies success count of the overseer to ensure that the success count is accurately represented as lowercase
removed version check for kernel attributes in ` LinuxFileStore . java ` to simplify logic by always returning true
refactor ExecConstants to improve code organization to enhance maintainability and readability of the code
removed import of ScreenRecordRule and the associated annotation from ThemeIconsTest . java to eliminate unused dependencies and maintain code cleanliness
phoenix - 4448 : create a new scan attribute for paging during scan scan ( addendum )
fix # 16334 : lowrange = 0 should n ' t be influence by integer . max _ value
changed visibility of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and updated cache size estimation logic in AsyncWriteCache . java to allow subclasses to access these members and improve cache size estimation accuracy
cloudstack - 2120 : fix cloudstack - 2229 - listhost api return wrong zoneid when host be delete
[ zeppelin - 2381 ] fix encode issue in livy interpreter
updated the removal of a zipfile in ZipFileSystemProvider to ensure the correct file system is removed
changed the variable ` obj ` to ` json ` and updated related methods for JSON serialization to improve data handling and consistency in JSON output
updated poll method parameters in SoftAutoCommitTest to use milliseconds instead of milliseconds for better polling behavior
fix flaky test ` ` selenideloggertest ' ' by add listener error message
refactor the Dial classes for consistency in naming and structure to improve code maintainability and readability across the dial package
added whitespace for consistency in log message formatting to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to incorporate the latest features and improvements in the container
updated method to return additional bootstrap paths and added a new TestHook class to improve bootstrap class loading and facilitate testing of boot class loading behavior
fix broken patchy library discovery on osx .
[ hotfix ] [ yarn , test ] remove yarnclient dependency from yarnitcase
add stats per host for localmap when there be no data to include
deleted the AllTests . java file to the test suite is no longer needed in the project
add support for Unicode characters in AbstractWordConverter to handle specific character inputs to improve compatibility with various character characters in string processing
add a new test class ` ShouldNotStarMemoryOnLargeStackTraceInvocationsTest ` to verify memory starvation behavior on large stack traces to ensure that large stack traces do not starve memory when they exceed expected limits
updated the method call to retrieve result mappings for a row key to improve code readability and maintain consistency in method usage
added an eventHandled flag to the UIText class to ensure that events are properly handled during processing
deleted the ` Controller . java ` file and changed class name from ` Weldby ` to ` WeldModule ` to improve code clarity and consistency in naming conventions
fix nfa group unregression when use nfa map with no group
replaced the initialization of ` liquibaseProLicenseKey ` with a protected declaration to allow subclasses to access and manage the license key more effectively
mondrian : fix bug introduce by this change introduce with http : / / github . com / manifold - systems / manifold / issues / 2486 .
[ gr - 36403 ] fixed debug info generation with - g flag .
mondrian : fix for bug # 1743819 , document mondrianproperties . jdbcfactoryclass
added support for friend paths in Kotlin compiler and Kotlinc classes to enhance the build process by incorporating friend path requirements
added aliases for " BATK " , " BRAH " , " MANDAIC " , and " MANDAIC " in Character . java and modified file reading logic in CheckScript . java to improve alias handling and streamline file reading logic for better code maintainability
updated equality checks in ExecutionCommand and added JSON serialization / deserialization method in StageUtils to improve code clarity and enhance JSON processing capabilities
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
refactor OCFile class methods for improved readability to enhance maintainability and ease of understanding
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope class
modified CSS parsing logic to handle both number and percentage types to enhance functionality and improve error reporting for invalid cmyk parameters
added a new test method to verify the reverse scan functionality of local indexes to ensure that the local index updates correctly return all rows when the corresponding row is fetched
updated import statements and modified test method names for consistency and clarity to improve code readability and maintainability by using a more descriptive method name
updated toast messages to include detailed strings for better clarity to improve user feedback by providing more context on warning messages
refactor index boundary checks and update assertions in RendererUtilities . java and RendererUtilitiesTests . java to ensure correct handling of edge cases and improve code clarity
replaced Iterator < JsonNode > with ArrayNode for ask and bid lists in KrakenStreamingAdapters . java to improve handling of decimal values in ticker data
added error handling for SQLiteException when adding a column in FileContentProvider . java to avoid potential conflicts when the database upgrade process fails
removed unnecessary print statement from AsyncServletIOTest . java to improve code cleanliness and prevent unnecessary console output
hive - 21630 : join on mapjoin : do not recompute data size of the online data if it be too small . ( addendum2 )
updated the ` buildView ` method to accept a ` Context ` parameter and set background resources for selected items to enhance flexibility by allowing theme attributes to customize the selected item background
added authentication support to SecurityMockMvcResultMatchers by introducing a consumer for assesrt authentication to enhance flexibility in authentication handling during tests
vpc : set default vpc id to null to avoid npe on uninitialized vpc
[ beam - 10955 ] skip flink savepoint test in 1.11
fix the position of intdef annotation on field in the ui module
updated loop condition and iteration order in Actor . java to ensure proper handling of action execution based on the size of actions
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to improve compatibility with the Bitmex trading platform
[ task 71440 ] add it to prove that the relationship endpoint return the parent and child orgunits
* fix npe in case of invalid input from lodcontrol
lucene - 3890 : fix bug when tokenfilter : set positionincrement in fixedshufflefilter
fix unsafe . storenode and unsafe . storefieldnode to not use the graph . unique
replaced super . putAddress with io . putAddress in BoundedMemoryIO . java to ensure correct address handling during memory write operations
added an assertion to verify that the CAS event repository ' s load method returns an empty list to ensure that the event repository correctly identifies and returns non - empty entries
removed unnecessary parameters from AuthenticationAttrProcessor . java to streamline code by eliminating unused parameters
added null check for custom key in MacOSXPreferences and created a new RemoveNullKeyCheck class to ensure that null keys are validated to avoid runtime exceptions
added a runtime exception handler for the setTypeface method in CodenameOneTextPaint to ensure proper error handling when setting the typeface
added ` open ` method implementations for various file systems in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS ` to enable opening files with specified URIs for improved functionality
[ java ] delete deprecate method webdriverrunner . fail ( string )
solr - 1392 : remove unneeded size check , a this be already do anyway .
refactor result set handling in DefaultResultSetHandler to use instance variables instead of static inner class to improve code clarity and maintainability by reducing duplication
fix create table test on window ( # 2366 )
updated filtering logic in VectorizationContext to handle boolean mode correctly to ensure proper handling of boolean columns in regular expressions during vectorization
specify type parameter for move selector config to improve type safety and clarity in configuration handling
replace ReorganizeTableStatement with modifyDataTypeStatement to streamline data modification process for better clarity and maintainability
updated cluster name handling by replacing string literals with constants for better maintainability to improve code clarity and reduce duplication in cluster configuration management
improve connection handling in peergroup . do not swallow exception
added multiple conditional checks for style strings in Nano . java to ensure proper style handling for various style strings
fix handling of binary data for schematic ( # 627 )
change default return value from " Use ` String ` " to " No # toString ( ) on String " to improve clarity of the error message for debugging purposes
8236106 : [ testbug ] shenandoah : make testthreadfailure more resilient
dataprovider : refactor retry logic to return the failurecontext instead of an integer
updated return statement to use a variable for the bandwidth value to ensure accurate retrieval of token data based on the specified bandwidth index
alexeibarantsev : implementing backdoor support for selenium - backed selenium
simplified the doPrintEntry method by removing the printWarning parameter and organized public key handling to enhance code clarity and maintainability by reducing redundancy
fix checkstyle violation of taskasynccalltest . java
added checks for dialog and background properties to ensure they are valid to prevent illegal component state exceptions when applying custom properties
changed the ` state ` field to be ` final ` to ensure immutability of the ` state ` field after initialization
added RedisStandaloneConfiguration to RedisObjectFactory for connection configuration to improve Redis connection handling with sentinel configurations
add functionality to store and update lastseendelayedmessage in chat room property .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to optimize the handling of response content notifications
replaced the CreateShareOperation instantiation with a new OperationsService implementation to streamline the sharing process and improve code maintainability
simplify boolean value assignment in BeanDefinitionInjectProcessor . java and add dependency injection in FieldPropertyInject . java to enhance code clarity and maintainability by reducing redundancy
fix : do n ' t use static min build height if plexception be occur
modify test framework to handle nullpointerexceptions more gracefully
tmi - tiff : fix a problem with nested jpeg / interop sub directory .
added support for enabling version target graph features in VersionTargetGraphMode and VersionedTargetGraphCache to enhance functionality for different version target graph configurations
added checks for video format in conditional statements to ensure proper handling of video formats during parsing
doc : generate sample code in the java microgenerator ( # 419 )
[ add ] lwjgl native to enable loading of native service ( lwjgl 2 )
introduced a new escape parameter and modified CSV strategy to handle escape characters to enhance control over CSV encapsulation and improve error handling
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure only the appropriate OAuth2 grant type is accepted in the response
update error messages to include the self - suppression context and improve exception handling to enhance debugging capabilities and prevent potential null pointer exceptions
added new SQL query and assertions to test the results of row count calculation in DerivedTableIT . java to ensure correct retrieval of row information and verify expected results in client aggregate queries
added " RSquare " to the RegressionEvaluator map and tested its value in StreamExpressionTest to ensure accurate representation of the RSquare value in regression scenarios
added enumeration for request headers in ThreadContextMDCServletFilter . java to enhance the handling of request headers when available
replaced direct casting of work to MapWork with a local variable and updated related method calls to improve readability and maintainability of the code
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport classes to improve code readability and ensure proper image handling based on country
updated caching strategy in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer handling to improve cache management and ensure correct authentication behavior for trusted issuers
fix database initialization fail if there be no location
[ gr - 45390 ] return type of interop function should be cache if the function be not a method .
removed a redundant sleep call in AbstractBasicMockingIntegrationTest . java to simplify the code by eliminating unnecessary sleep duration
added a new file KernCrash . java that implements a graphical rendering framework to render and display kerning crashes dynamically in a graphical interface
added a call to fail ( ) method in LinkedHashTreeMapTest . java to ensure that the test properly fails if it fails
added a method to retrieve network interface addresses with a prefix to enhance functionality for identifying network interfaces by including prefix information
fixed # 2324 call schedulewithfixeddelay inside hikaripool . getconnection ( ) will cause thread leak .
[ ambari - 24862 ] remove client address from sync state check ( # 2486 )
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
added a new test class ` Issue247Test ` with a test method for creating and retrieving values from a MapDB file to ensure the functionality and correctness of map data handling in the application
changed the type of the ` results ` set from ` Set < CategoryItem > ` to ` Set < String > ` and modified several methods to handle larger result sets to improve type safety and enhance the handling of larger datasets
add a check for max age great than 1 day to avoid the assertion error ` ` field do n ' t exist ' '
add grbl error code to console output ( # 3740 )
updated return string formatting for workspace scroll format based on available screens to ensure correct display of the home button label when there are no screens available
removed the count parameter from the getTrades method across multiple classes to simplify method signature and improve code clarity
removed unnecessary flush calls and adjusted index condition logic in ConsoleReader and MemoryHistory classes to improve code readability and ensure proper handling of null inputs
updated the path for jdkPath in JavaBuild . java to simplify the file path retrieval process
refactor code to replace calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple files to improve code readability and reduce redundancy in accessing the description
updated JFCModel and related classes to accept a logger parameter for logging warnings to enhance visibility into the warning messages during execution
prevent infinite recursion in maximuminscribedcircle . gettoleratepoints ( ) if tolerance be negative .
added methods for creating and drop views in TestUtil and DatabaseMetaDataTest classes to improve code organization and facilitate easier testing of view privileges
refactor the NaNTest class to conditionally test stable floats and double values based on platform to improve flexibility in testing across different platforms
added DesktopTaskbarUIController class to manage taskbar UI updates to enable better user experience with taskbar features starting from the current package
added progress tracking functionality for task counts in ModItemAdapter to enhance the user experience by ensuring task counts are accurately updated during the mod operation
modified file handling logic in Files . java to improve performance and maintainability of the code
refactor ` setApplicationContext ` method to use ` Collection ` instead of ` Set ` and add the ` GrpcServerFactory ` class to improve code clarity and enforce immutability of bean definitions
updated the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` to allow for better inheritance between the interface and maintain code consistency
fix resourcepackloader ' s handling of mod file path . close # 5489
chore : update gapic - generator - java version to 2.1 . 0 ( # 560 )
added grow and growX methods to the Cell class to enhance page manipulation capabilities for better visual representation
refactor bindings and currentBindings to use HashMap and ActionListener directly to improve code readability and maintainability by reducing dependency on StringTokenizer
http : / / issues . apache . org / jira / browse / amq - 4798 - handle in case of timeout exception
replaced long array with byte array and updated iteration logic in MetricsMemoryTester . java to optimize memory usage and add a memory fail count check before proceeding
deleted the JobParametersPrototype . java file to the functionality was deemed unnecessary or redundant within the project
added securityEnabled property to MappingsTable and updated related methods to handle security checks to ensure data connection behavior is validated when security features are enabled
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJJC _ CXX _ HEADERS and update references to ensure consistency in naming conventions for supported Objective - C C++ headers
update the DUMP _ TO _ FILE constant from true to false to disable serialization functionality for file processing
updated the method signature of `NeedsEosPropagationWorkaround ` to accept ` MediaCodecInfo ` instead of ` String ` to enhance functionality by ensuring only necessary propagation for additional codec information
[ java ] fix race condition when spy position be great than zero .
updated the condition to check for no info output options to ensure that the output options are meaningful when no info is available for database information
[ # 12043 ] enable ssl by default with 443 ( # 12643 )
replaced direct usage of DOMOutputOptions with a new import and updated DOMOutputOptions to utilize it to improve error handling by allowing customizable DOM output options
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
[ java ] allow publish publish with a retain option to specify the topic for retained message .
test only : remove testcasename from eventserializationtest ( # 2192 )
[ calcite - 5727 ] [ table - planner - blink ] support $ tumble in windowed view ( minji kim )
remove deprecate fastparse . core in favor of fastparse . parsed
protect against race between new ssl _ ctx _ new ( ) and newssl ( ) .
updated condition checks , improved output formatting , and refactored watcher initialization to enhance code readability and ensure proper handling of event processing
now use the analysis tool instead of the calcite dialect in sqlnodeconvertcontext .
changed log level from debug to trace for firmware update handler messages to reduce verbosity and provide more granular logging for debugging purposes
added tests for handling null dates and timestamps in ObjectTest . java to ensure correct retrieval of date and timestamp data types from database
refactor string concatenation to use a local variable for better readability to improve code clarity and maintainability
added a test method to verify repository permissions across multiple teams to ensure proper functionality of permission handling for different repositories in the user model
added a new file ` Test7088020 . java ` that demonstrates the use of ` invokeExact ` with various exception handling to demonstrate the behavior of method invocation with various exceptions
replace the method for matching audience restrictions and adding a new method to check audience URIs to enhance clarity and maintainability of audience validation logic
refactor cache update methods for clarity and consistency across AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code readability and maintainability by consolidating cache refresh logic
updated error handling in StdErrLog to check for null values of _ stderr to ensure consistent behavior when null is provided for stdout
added a new warning constant SEPARATION _ ORDER and logic to manage stage activation in BasicEventSimulationEngine to enhance warnings related to active stages in the simulation logic
fix ( pinot - broker ) : fix the pinot query optimization bug
refactor aggregation table SQL execution to handle configurable split points to improve flexibility in aggregation table handling based on configuration
updated SavepointV2 and FileStateHandle classes to enhance functionality and maintain consistency across file handling components
added BluetoothClass handling to ShadowBluetoothDevice and its test cases to enable the retrieval and modification of Bluetooth class for better Bluetooth integration
fix checkstyle issue in generator / config / glowpinot - player . java ( # 778 )
sumfunction : allow empty string for empty input list ( # 5824 )
replaced graphModel . getGraph ( ) with graph . readUnlockAll ( ) in DataBridge . java to streamline the code by directly accessing the graph object
updated the construction of the coreNodeName to include the core name directly to ensure the correct core node name is generated for better clarity and maintainability
replaced direct calls to update methods with UpdateBackpressure . UpdatableObject for better handling of recent chats to improve code maintainability and ensure UI updates occur on the correct UI component
updated TaggerParserPosTagCompatibilityITest . java with new test cases to improve test coverage for parser position tag compatibility
added a suppression annotation for the SimpleText codec in BaseVectorSimilarityQueryTestCase to avoid issues with codec compatibility during testing
updated element type checks in ` mmm Types . java ` and added tests in ` T7005671 . java ` to handle different data types to ensure correct handling of different data types in type safety
updated calculations for superTriangle values in DelaunayTriangulator . java and changed test class name in LwjglDebugStarter . java to improve triangle positioning accuracy and testing accuracy
added ` @ Override ` annotation to methods in multiple classes to ensure proper method overriding and maintain coding standards
refactor JWTClaimsSet initialization to use builder pattern to improve code readability and maintainability
fix performance regression for stack overflow ( un ) protection .
added shadow methods for SQLiteDatabase and ContentValues in Robolectric to enhance functionality and flexibility of object shadowing in tests
replaced ` initiateGLInstances ( ) ` method with ` initiateGL ( ) ` method in ` LwjglCanvas . java ` and added a new method in ` LwjglGraphics . java ` to improve rendering capabilities by consolidating OpenGL instantiation logic
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` for byte array comparison to improve handling of unsigned values and ensure consistent comparison operations
updated Locale . java to include a script parameter and improved the instance retrieval logic to enhance functionality by allowing users to specify a script file , enhancing flexibility in locale management
updated the method to return the last set text alpha instead of the current text alpha to ensure the view reflects the most recently set text alpha value
corrected a typo in the warning message for Confimap PropertySources to improve clarity and accuracy of the warning message
replaced specific test class imports with a method call to ` UaaJunitRunner . allSuiteClasses ( ) ` to simplify test suite initialization and improve code readability
trim whitespace from input tokens in GzipFilter and set default values in GzipFilterTest to ensure clean input handling and maintain consistency in test cases
updated the formatting of the output type assignment in Response . java to improve code readability and consistency
updated regex implementation property from JDK to JONI to use the preferred regex implementation for improved performance and compatibility
updated the ViewCapture class to use Executor and FutureTask instead of LooperExecutor and Message to improve handling of asynchronous tasks and enhance readability of the code
added support for query parameter styles in the feature processor and related classes to enhance flexibility in style handling throughout the system
added checks to ensure the parent folder exists before creating it to prevent errors when attempting to create a folder without throwing an exception
updated default bind IP addresses from 0.0 . 0.0 to 127.0 . 0.1 in Args . java to ensure compatibility with the latest application version
camel - 16400 : camel - jbpm - change work item handler to use in / out instead of camel - workitem
pdfbox - 2184 : fix javadoc , remove static import , make private class final
updated TextView initialization and renamed WorkModeToggleContainer to WorkFooterContainer to improve clarity of UI elements and maintain consistent naming conventions
fix a few javadoc issue report by eclipse
refactor ( prettyprinter ) : eliminate implicit type reference from defaultjavaprettyprinter .
[ flink - 21143 ] [ runtime ] free memory in operator context after operator completion .
updated formatting in QueryByExamplePredicateBuilder and StringQuery classes to improve clarity and consistency to enhance readability and maintainability of error messages
replaced evictionCounter and cumulativeStats with an AtomicLong and refactored statistics handling in ConcurrentLRUCache and FastLRUCache classes to improve cache eviction tracking and consolidate cumulative and non - live statistics
fix deadlock with javafx thread in source tab
update logic to check if the intendedDestination is an instanceof Inet4Address instead of localHost to improve clarity in determining if the destination is an Inet4 address
fix : set the data root and source root for the database in the main frame
add logging for when admin client or server have be mark a enabled
[ hotfix ] [ table - api ] fix typo in tableenvironment . java
updated timeout handling in MapperBuilderAssistant and modified fetch size in MappedStatement to ensure proper timeout configuration and improve fetch size flexibility
` ` hangingtstranspilationtimeout ' ' be now an option instead of an option
added serialization for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enhance the handling of GeoLocationResponse data structure
updated precondition checks for source artifact types in ArtifactFilesystem and refactored tests to utilize artifact factory to ensure that destination artifacts are a BuildArtifact and improve test accuracy for artifact filesystem operations
tika - 3666 -- upgrade poi - ooxml to 2.6 . 10 . final and further unit test for xls document
apps - 4247 avoid concurrent modification on the conditionals list
add sleep after the channel be close to avoid sporadic failure in nio2
added value validation in GuavaOptionalSubject to provide clearer error messages to enhance error reporting for cases where values are not equal to expected values
added VERTICAL _ SWIPE _ INDICATOR to the visible elements of BackgroundAppState and modified alpha calculation logic in ShelfScrimView to enhance visual handling of app states in the launcher
fix a npe in the shader node editor when the navigator panel be collapse
set bound for classic bound if center = true ( fixes problem with scale with image )
camel - 8193 : fix incorrect javadoc due to miss closing brace
astro : use fix delay instead of scheduleatfixeddelay
fix regression with light logic ( # 694 )
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang unexpectedly
camel - 15831 : fix guicefactorytest to work on google 3 . x
added a ` systemFeatureList ` to manage system feature features in ` RobolectricPackageManager ` to enable dynamic management of system features for improved functionality
introduced a new constant for path postfix and modified property handling in RCAFrameworkLoader . java to support multiple path variations in configuration properties
[ hotfix ] remove duplicate log statement in task
added a null check and initialization for enumerationValues in RADProperty . java to ensure that null values are used when enumerationValues is empty
swapped the boolean variables and conditions related to inline properties in BoxBuilder . java and InlineBoxing . java to improve clarity and correctness of handling inline properties
mondrian : change the way send telemetry data to use aynchttpconnection ( ) to avoid deadlock
removed conditional logic for altering database column type in UpgradeCatalog260 . java to streamline database change logic for improved clarity and efficiency
improve error message for directory creation failure to warn user about available space and write - permission
[ hotfix ] [ javadoc ] fix typo in datasetutilities
added a line to append the selector ID to the key in mmm Matcher . java to enhance the clarity of the selection identification process
corrected string concatenation syntax in the debug log statement and transformed point transformation to improve code readability and consistency
updated taskbar visibility logic and added alpha control to enhance user experience by improving the animation behavior and visibility of the taskbar while interacting with different states
reformatted the KeyExchange class for consistency to improve readability and maintainability of the code
added a type check for JdbcConnection before accessing its version ( ) method to prevent potential ClassCastException when accessing the database connection
modified index retrieval logic to distinguish between log files and 1 log files to improve clarity and accuracy of log file indexing in the server tests
added methods to retrieve the media recording MIME type for media recording in multiple classes to enhance the functionality for accessing media recording mime types dynamically
fix up a few static analysis warning for the shader config code
fix druidadaptertest and fix test case
updated the initialization of ZkStateReader in CloudSolrServer . java to ensure consistent usage of ZkStateReader initialization
pdfbox - 4071 : disable xmp entity sniffing , a suggest by michael klink
added a new interface ClientRegistrationIdentifierStrategy in the Spring Security OAuth2 client registration package to provide a mechanism for retrieving client registration identifiers in the OAuth2 client context
changed the condition from an if statement to a while loop for processing script elements to improve code readability and ensure all relevant script tags are processed correctly
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated the varargs access logic accordingly to improve clarity and accuracy of varargs access checks in the resolution process
bug 59753 : borderpropertytemplate : avoid extract template property that have be not set if border be empty
reduce log level for reconnect backoff from info to debug . ( # 3705 )
updated import statements and modified method signatures to accept HubRegisterResponse in InternalDropAllCommandStep and HubUpdater classes to enhance the handling of HubRegisterResponse for better integration with the command hub
replaced bitwise operation with Byte . toUnsignedInt for byte manipulation in multiple classes to improve code clarity and ensure consistent handling of unsigned integer values
removed extra whitespace in OpenTracingTransactionProducer . java to improve code readability and maintain consistency
change the default value for CachingBuildEngine . DepFiles from ENABLED to CACHE to ensure caching behavior is enabled by default for better performance
changed the rangePannable property from true to false in CategoryPlot . java to disable range pannable panning for improved user experience
fix work mode switch from home screen to work again
modified access modifiers of glCaps and renderer variables in Visualizer2TopComponent . java to improve encapsulation and consistency
added handling for CancellationException in FunctionTest . java to improve error handling for cancellation scenarios
changed access modifier of constructors in JarFileResource and JarResource classes from package - private to protected to allow subclasses to access these constructors for better inheritance management
fix javadoc @ see with a url need for it
fix compaction unseq concurrent bug ( # 1045 )
updated the currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure accurate representation of the currency in the user trading
refactor database schema and improve test method names for clarity and consistency to enhance readability and maintainability of the test code
refactor Unicode class methods for improved readability to enhance maintainability and ease of understanding
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added methods to manage LLAP settings accordingly to ensure proper service handling during the auto instance installation process
[ java ] do n ' t swallow exception in sendheadersfirstpublisher ( # 4088 )
add support for ` @ json POJOBuilder ` for SSECustomerKey and update key handling in ` awsModule ` to enhance JSON serialization and deserialization capabilities for better compatibility with JSON standards
added support for BIG _ DECIMAL values in RangePredicateEvaluatorFactory to enhance functionality to handle decimal values correctly
rename inner to javacprocessingenvironment for good clarity .
remove debug code and extra debug output in parameterinfo class
add support for ac3 stream mode in exoplayer2 .
[ grid ] return json content from localnode . getresponse ( )
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address deprecation warnings for DBCP and FileUpload operations
[ iotdb - 5877 ] fix exception when select string in template ( # 7093 )
- add javadoc to rtimertree to explain the difference between the timer and the timer object
refactor package structure from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graphbuilder ` across multiple files to improve organization and clarity of the codebase
jme3 - examples : fix rendering of centered test text
updated client executor and scheduler initialization to include unique names to improve debugging and tracking of client instances
viewresultspageuitest : improve ux by add checkbox to display error message
added documentation for phone numbers in ScimUserEndpointDocs to enhance clarity and usability of the user interface
updated class modifiers to public and added private constructors to improve accessibility and prevent unintended instantiation of classes
added null checks for responseMap and status codes in JsonHttpPropertyRequest and URLStreamProvider to improve error handling and logging for null HTTP responses
refactor SolrRequestHandler class to improve code readability to enhance maintainability and simplify future updates
fix : do not run test for default suite parallel configuration
correct wrong annotation in a couple of test code
add handling for SCARD _ E _ NO _ SMARTCARD in error check to improve error reporting related to smart card presence
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary console output during test purpose
[ object ] [ object ] fix object bindy key - value pair serialization issue
disable owner / timestamp by default ( # 6863 )
updated method signatures to accept a ThrowingRunnable instead of Runnable to improve error handling by associating exceptions with the appropriate throwable
updated hash calculation to handle null values for ' via ' , ' viaContext ' , and ' pathFromSeed ' to improve robustness by avoiding null pointer exceptions
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in LiquibaseXMLTransformer to improve versioning accuracy and enhance code readability by reducing redundancy
bug 60589 - change default proxy cert validity to 90
added a ` smoothDelta ` variable and updated calculations involving time handling in ` ThreadHandler . java ` to improve time tracking and accuracy in the game mechanics
added null check for paginator in HttpBatchReader and updated HttpScanBatchCreator to handle JSON pagination with tail to improve handling of pagination and ensure correct API query results
added null check for IMetaStoreClient in Worker . java and implemented a test case in TestWorker . java to ensure that the FindNextCompactRequest handling is properly logged and does not cause a NullPointerException
added functionality to save and restore fragment states in ShadowFragmentActivity and its tests to ensure proper handling of fragment state preservation during instance state saving
fix formatting by adding line breaks and reformatted code for consistency to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure correct color value is returned for Android color references
added exception handling for NoResultException in AbstractJPAQuery and created a test for unique results to improve robustness by gracefully handling cases where no results are found
add all parent community to the collection , to help identify it
updated depth preference retrieval to use LawnchairApp directly to improve compatibility with Lawnchair ' s application context
removed an unused import of ProcessTools in LocalManagementTest . java to clean up the code and improve readability
removed the parameter from the ` updateTotalEnergyAverageUsage ` method across multiple classes to simplify the method signature and improve code readability
fix extensionstack to correctly handle null in tostring ( )
2 . x : fix flowable . flatmap onerror when delay error ( # 5783 )
added connection manager timeout configuration and improved exception handling for connection timeouts to enhance connection management reliability and provide clearer diagnostics for timeout issues
removed redundant line breaks in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
updated the model test class from NewModelTest to ModelTest to utilize the more appropriate testing framework for the model management
removed redundant duplicate fetchers and adjusted image setting in BaseImageService to streamline code and ensure consistent behavior for image handling
added a new test for output hash calculation when caching is not writable in CachingBuildEngine to ensure that the output hash is correctly calculated when the cache is not writable
camel - 14263 : camel - netty - allow to use bytebuf directly from endpoint uri . thanks to stephan siano for the patch .
update the table name retrieval in the alterPartitions method call to ensure accurate partition alteration by using the correct table object
updated the exception message to provide more context for the Vertx instance creation to improve clarity on the requirement of the preferredNativeTransport option for domain sockets
add test to make sure color value be deserialize correctly .
[ # 133 ] add javadoc to streamex # openstream javadoc ( # 1337 )
removed redundant hint settings for Javaee query and lock timeout to streamline code by eliminating redundant timeout settings
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` interface to facilitate the use of SLF4J ' s static logger functionality in the logging framework
replaced multiple invocations of ` familyMap . put ( ) ` with ` familyMap . put ( list , list ) ` in various Java files to eliminate redundancy and maintain consistency in list handling
added orientation comparison in TaskbarManager to ensure accurate taskbar size comparison based on device orientation changes
add apache common lang3 import and fix invalid xml escape on occupant
db : fix exception in ` ` java . lang . nullpointerexception : call ` ` commit ( ) ' ' after ` ` db . compact ( ) ' '
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable state and certain elements
( chore ) camel - base - engine : move the executionflowcontroltest to the unit test
fix indexoutofboundsexception when check for video format
make testnonblockingapi more resilient to unlimited write request
fix : update totaldifficulty when import a block ( # 424 )
check if the player be still seekable before set action
replace synchronized list with CopyOnWriteArrayList and update related methods to improve thread safety for known libraries and enhance the handling of JceSecurity class synchronization
addedUniformAlloc conditionalization for graphical dimensions in AllAppsView . java to enhance rendering accuracy by ensuring correct memory allocation
added a check for the presence of a colon in the key alongside the existing index check to enhance validation logic for processing headers in HttpURLConnection
added a PrincipalResolver bean name to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance principal resolution capabilities in the authentication process
replaced ObjectMapper with Noggit ' s ObjectBuilder for JSON handling to enhance JSON parsing capabilities and improve error handling
added a method to remove trailing slashes from StringBuilder in IoUtil . java to improve character handling for trailing slashes in StringBuilder
added methods to check for pattern matching in PatternsMatcher and created corresponding tests to enhance functionality and ensure correct handling of pattern matching logic
hbase - 21955 add a period after ` ` hfofdir ' ' in loadincrementalhfiles exception message ( # 4247 )
fire potion event cancel when place ( # 1597 )
updated the call to beginOrAdjustReorderPreviewAnimations in CellLayout . java to ensure proper handling of reorder preview animations
modified calculation of decreasePercent in ContractStateCapsule . java and adjusted formatting in ReceiptCapsule . java to improve code readability and maintain consistent formatting
added debug logging for isReady ( ) method and modified logic in AsyncContentProducer . java and BlockingContentProducer . java to improve readability and ensure correct handling of input readiness
removed mandatory weight field validation from DocumentDictionaryFactory to ensure that weightField is mandatory to avoid runtime errors
added plist variable substitution functionality and tests in AppleBundle and AppleTestIntegrationTest classes to enhance plist handling and ensure correct functionality on macOS
speed up turret functionality and make it only happen when the team be n ' t a team
replaced direct casting of orders in KucoinAdapters with cast to Object to enhance type safety and eliminate unchecked cast warnings
added a new file ` PreParseGrammarTest . java ` with XML grammar parsing functionality to facilitate testing of XML schema grammars by using the XMLGrammarPreparser
8035948 : use @ suppresswarnings ( ` ` doclint : missing ' ' ) consistently
added FontManager import and overridden font settings in ExtendedEditText . java to ensure custom font rendering is applied to the current context
added null check for currentUser in AuthorizeTag and created a test for unauthorized access to ensure proper handling of cases where no user is found during authorization
camel - 8293 fixed the cxf endpoint url encode issue
added an override for the setUpData method in JDBCGeometryTestSetup . java to ensure proper setup of data before running tests
removed import of DumpHandler from MultipartFilterTest . java to eliminate unused import and improve code clarity
[ flink - 23471 ] [ task ] add restore - attempts check for already cancel task in BackendRestorerProcedure
add a server . rmi . create property to enable enable of rmi registry creation for remote jmeter testing
remove space from the end of sstables when log the anticompact range
added display metrics configuration to ` ParallelUniverse ` and updated test cases for qualifier handling to ensure accurate display metrics are set for improved debugging and functionality
[ java ] : add cluster member id to service heartbeat counter .
added conditional assignment for ` numAttributes ` based on version to ensure compatibility with Java 21 and above
modified the evaluate method to handle negative and positive infinity safely to ensure accurate evaluation of double values and prevent potential negative results
( chore ) camel - aws2 - request : adjust log level for non - resumed / suspended continuation
added routes and methods for authentication in the AuthenticityController and created a corresponding test case to enhance authentication functionality and ensure correctness through unit testing
snippettemplate : ensure that the next node be still alive after lowering
updated logger initialization to reference HttpClientRequestImpl instead of ConnectionManager to ensure correct logging context for the HttpClientRequest implementation
update track selection to prefer content over technical preference .
updated RuntimeSerialization class methods for improved data handling to enhance performance and maintainability of the serialization logic
fix crash on crop in image
( chore ) camel - base - engine : fix typo in comment
added a new variable ` allAppsCellWidthPx ` and updated its usage across multiple classes to facilitate the management of all apps display in the launcher
tika - 3745 -- make sure to set file - name as part of the content - type header
updated URI construction and logging URI format in ThumbnailsCacheManager . java to improve clarity and functionality of URI generation for the file
added mark support checks and reset functionality in the source class to ensure proper handling of input marking and resetting state
mark multiple classes as deprecated to indicate that these classes are outdated and should not be used in new development
added functionality to hide or show error stacks in the configuration to enhance error handling by allowing users to choose whether to show or hide the error stacks on the error page
bug 11487 : add more logging when cleanup domain and account
remove redundant null check for jdk . vm . ci . bailoutexception
[ rhdm - 3769 ] prevent compatibility with legacy drool 5.0 api ( # 303 )
change order of initialization to wait for result to avoid race condition
increase default timeout of unboundedsourcesystemtest to allow for slow ci server
refactor code to remove redundant string replacement for style extraction to improve code clarity and avoid potential issues with string manipulation
deleted two files , MrefStat . java and MrefStat1 . java , and added relevant classes to introduced new class implementations for improved lambda method reference statistics
added an import for StringUtils and modified scope retrieval logic in DependencyInsight . java to handle blank scopes more robustly
added error handling messages for no trades and bad status in BTCETradeServiceRaw to improve error management and provide clearer error messaging when no trades are available
use hamcrest assertion instead of junit in integrations / cdi / common - cdi / eclipselink - core - processor - backport main ( # 1749 ) ( # 6295 )
add a method to retrieve payment request URLs from BitcoinURI and corresponding tests in BitcoinURITest to enhance functionality for processing payment requests in the URI
planner - 383 fix invalid type error on collection parameter .
removed redundant line setting folder information to streamline code for better readability and maintainability
fix deadlock in jfrbuffernodelinkedlist and jfrchunkwriter
refactor null value handling in BasicAbstractTuple to utilize a loop for better readability to improve code maintainability and clarity in error messaging
refactor linter configs file handling to use InputResourceUtility and improve resource management to enhance parsing and error handling for linter configs files
refactor updateBackgrounds and updatePaddings calls to execute in a Runnable to ensure UI updates are executed on the main thread for thread safety
fix inventory tick not be increment correctly . close # 3541
added handling for OCELOT _ BABY event in PlayerEvents . java to ensure proper event processing for player balance management
[ flink - 25322 ] [ state ] add miss @ publicevolving annotation for public api
added null check for handling null values in PreparedStatement and Array classes to ensure proper handling of null values during set operations
[ java ] add description of catalog command line option to describe command
replaced double quotes with single quotes in the append0 method to improve consistency and performance in character handling
add a new test method for JSON snapshot handling in the SiteSnapshotVariationsTest . java file to enhance testing capabilities for JSON serialization in the database
add a method to remove the transaction and block cache and update import statements to improve test clarity and reusability
introduced conditional checks for LensMask and LeLensMask in AmcrestHandler and DahuaHandler to ensure proper handling of firmware messages based on conditions
removed the exception declaration for NoSuchBuildTargetException from method signatures to simplify method signatures by eliminating unnecessary exception handling
refactor ChangeLogIterator constructors to accept changeSetFilters directly to improve flexibility by allowing specification of ChangeSetFilter lists
exit ( 1 ) on guest exception in polyglot launcher
use getenvorsystemproperty instead of env to avoid npes .
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization and version control for these classes
modified the spacing visitor logic to check for the parent of the J . Annotation annotation to improve clarity and efficiency of space handling in the visitor
add copy ( boolean ) to servercacheoptions ( # 5708 )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest ` to address the issue of not visible border on floated elements with overflow
updated the projectGraph variable type from ActionGraph to TargetGraph and modified associated method calls to improve type safety and ensure the correct usage of the target graph in the project graph
replaced LIVE _ URI with PROD _ URI and updated exception handling for MalformedURLException to improve clarity of URI usage and enhance error logging for sandbox host exceptions
replaced ` classpath : ` with ` classpath * : ` and simplified path replacement logic to improve code readability and maintainability by reducing redundancy
update doc to reflect new unit
updated method call from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure compatibility with shaders with size packing
deleted the Tls12SocketFactory . java file as it was no longer needed to streamline the codebase
fixed duplicate of entry in tex bib database ( # 7954 )
added a method to check if Robolectric is running with legacy resources to ensure compatibility with legacy resources when running in Robolectric
added a check for FirebirdDatabase to return " DOUBLE PRECISION " to ensure compatibility with Firebird ' s data type handling
added null checks for dataSource and transactionManager initialization in DefaultBatchConfigurer . java to ensure that the initialization of the transaction manager only occurs when the data source is not provided
add mockito a a test dependency for module and package .
updated the ping command in OutputStreamTest to use 127.0 . 0.1 and increased test timeout to 60 milliseconds to improve test reliability and ensure consistent timeout configuration during tests
# 2055 - refactor to use try - with - resources in ebeanserver _ savealltest
modify the creation of TermScorer to conditionally set the scoring mode to none to ensure correct scoring behavior when scores are not needed
[ beam - 2941 ] fix npe from dataflowmetrics . getmetrics ( )
cloudstack - 3229 : do n ' t return incorrect data in listvirtualmachines call
refactor DynamicPartitionPruner to use the target object inspector directly from ExprNodeColumnDesc to improve efficiency by reducing redundant object inspector retrieval
added a method to remove build artifacts and corresponding tests in the ArtifactFilesystem and ActionExecutionStep classes to provide a method for removing build artifacts that exist during execution
added logic to update the selected row in the table to ensure that the UI reflects the current selection state of rows
add a static method assertthrowsarraystoreexception that can be invoke by a runnables .
refactor PropertySource class to improve structure to enhance maintainability and readability of the code
add user - agent parameter to allow configurability of the environment
refactor session management to use a computeIfAbsent for creating and restoring sessions to improve code readability and maintainability by consolidating session creation logic
updated test assertion to provide a custom error message and changed the type of the results set from Set to Set < Object > to improve error handling and ensure consistent data provider behavior in the tests
modify the content type handling in ConsumeEWS . java to ensure a default value is used when none is provided
added event for handle activation request error
fix ( graphics2 ) : miss @ override annotation , avoid warning
added updateTaskViewsSnapshotRadius method to TaskView and updated its invocation in RecentsView to ensure consistent snapshot radius updates for task views
added SLF4J logging for schema generation in StaticMicroserviceVersions . java to enhance visibility into schema generation for better debugging and tracking
change the return type of the ' put ' method in ArrayMap from void to int to enable retrieval of the index for better usability
updated KafkaContainerCluster to use a minimum startup timeout and simplified the way brokers are handled to improve reliability by ensuring minimum startup timeout is set and simplify the code for better readability
do n ' t swallow exception when send back ( fix # 355 )
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy by preventing duplicate header additions
added package access check before loading a listener type to ensure security by verifying access permissions for the listener class
added custom adapter for building and displaying applications in the application list to enhance user interface by providing a centralized list of application content
modified the applyIcon method to accept an additional nullable Task parameter to improve flexibility in handling icons when no task is available
fix : fix unclosed cursor in downloadmanager
fix : fix a bug in sqm - to - sql - ast converter ( # 2649 )
added JUnit test annotations and modified method visibility in HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to improve test coverage and simplify transaction handling in the test suite
added a Poller class to manage asynchronous pollers and modified byte handling in DataInputStreamWithTimeout . java to improve efficiency and handling of interrupted exceptions during polling operations
added ENABLED _ TS case to VersionTargetGraphMode and VersionedTargetGraphCache classes to support ToposortBasedDepsAwareExecutor functionality in the versioning process
updated UpgradeCatalog150 . java file to improve catalog versioning functionality
rename networkparameters . testnet3 to . oldtestnet to avoid confusion .
fix random bug in propertiesview ( last update of object panel without selection )
updated onboarding preferences handling in AppsDividerView and added null safety in ActivityContext to improve code reliability by ensuring onboarding preferences are checked for null before use
replaced Apache Commons FileUtils with Apache Lucene ' s BufferedIndexOutput and refactored methods in HdfsDirectory to improve resource management and simplify the output stream handling
pdfbox - 4877 : avoid exception when get the clipping path , a suggest by g á bor stefan
remove unnecessary sync in solrc channelimpl . isopen check ( )
refactor the row handling in TemplateTransformer to use a dedicated method for adding values to improve code organization and maintainability by encapsulating value addition logic in a separate method
added a method to check if the operating system is Windows and refactored file renaming logic to improve compatibility with Windows systems and enhance file renaming error handling
replaced the original representation of ALPHABET and ASTERISK _ ENCODING with a constant CHECK _ DIGIT _ STRING to improve code readability and maintainability by reducing redundancy
update NodeGenFactory to handle unexpected return types more effectively to improve type safety and ensure proper casting of return types to avoid runtime errors
removed unnecessary check for fieldType . stored ( ) in IndexingChain . java to streamline code for better readability and maintainability
fix ( griffin ) : timestamp _ sequence ( ) may yield incorrect result for negative number
removed unnecessary conditional checks before adding to the runnables list to improve code readability and maintain consistency by eliminating redundant checks
fix documentation for default storage url override
replaced ` assertInitialized ` with ` waitUntilInitialized ` and added a wait mechanism for initialization of ` FakeConnection ` to improve synchronization handling during connection initialization
changed the default directory parameter from null to a string " single " in multiple test files to improve clarity and expressiveness of directory retrieval operations
replaced the size and filter count handling in FaultTolerantChunkProcessor and tests to track and manage filter counts more effectively during data processing
updated tabbedMethod ( ) method formatting and improved error handling in T4994049 . java to enhance code readability and maintainability while ensuring robust handling of tabbed methods
replaced multiple redundant return statements with a single assumeTrue method for WindowsTerminal checks to enhance code readability and reduce redundancy in conditional statements
[ # 8243 ] remove unnecessary admin check ( # 8244 )
adjusted the calculation of newSelection and adjusted conditions for currentPageCol in AllAppsView . java to ensure that the newSelection reflects the correct column alignment and alignment
bugfix # 135701 , do not track profile info availability if profile info be not available
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog , modified connection list handling in DbConnectionDialog , and enhanced file existence checks in ExportPanel to improve data loading reliability and ensure a valid directory structure during export
replaced writeBufferSize with WRITE _ BUFFER _ SIZE and updated constructor calls to use String . valueOf ( s ) to improve memory management and simplify constructor calls
updated segment size calculation in DocumentsWriter and added a test for noDocsIndex in TestIndexWriter to improve segment size handling and ensure robustness against missing document indices
bugfix : fix a bug that occur when load an object ' s dvert attribute within a bone modifier .
modified FileDisplayActivity . java by refactoring methods and updating imports to improve code readability and maintainability
replaced an unsupported operation exception with a custom one using a predefined UnsupportedOperationException to avoid filling in stack traces for better error handling
fix calculation of label height by use average value
replaced singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing display configurations
optimize the processing of quoted strings in ` valStr ` to improve code clarity and efficiency by eliminating redundant length checks
replaced ` Long . valueOf ( s , 16 ) ` with ` IdConversion . convertToLong ( s ) ` and modified the state handling logic in ` ServletHandlerInterceptor ` to ensure the correct ID conversion and handle cases where the parent ID is not present
add a test case that illustrate the bug i introduce with http : / / github . com / codenameone / codenameone / issues / 2106
updated the assertion to check for the last part of the URL to ensure accurate query results for the COUNTRY _ CODE _ s property
refactor caching logic in Cache . java to improve performance and reduce load times
renamed variable ' e ' to ' ev ' and updated claims handling in ResourceSetRegistrationEndpoint . java to improve clarity by using a more descriptive variable name for the event
lucene - 7167 : fix testunifiedhighlightertermvector . testunifiedhighlightertermvector ( ) to work correctly with parallelleafreader
added JFrame and JTextArea classes to create a JTable with a text area to enable users to add row numbers to the GcodeTable using a text area
make connect timeout configurable ( # 6012 )
updated the handling ofvelopedTransform and improved error logging syntax in various classes to enhance code clarity and ensure consistent error reporting for better debugging
modified TestMediaService . java file to improve test coverage and maintainability of the test functionality
added a new constant ` HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK ` to the messages class to support user guidance in the dialog
add new file ` MarketsPrintTool . java ` for printing market currency data to facilitate visualization of market currency codes in a desktop environment
validate the accountid to accept alphanumeric character in the host name ( # 3953 )
added methods for registering security keys in AccountProxy and HttpAccount classes to enhance security key registration functionality for improved authentication handling
modified the ServerSpanThreadBinder class structure to improve thread safety and maintainability
update the user reference and adjusted the index for the ADDITIONAL _ ALLOWED _ PENETRATION constant to ensure correct user reference usage and improve layout constraints for the block
[ geot - 7432 ] csv2shape . tostring do not return ` ` location ' '
updated gas cost parameter from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve code clarity and eliminate unnecessary dependencies
updated parameters handling in the Parameters class to improve clarity and maintainability of the code
added setIgnoreNullValues ( true ) to the piePlot configuration to avoid null value warnings during rendering
refactor bundle loading logic to streamline cache management to enhance readability and maintainability of the code
change default value of ' c ' to ' - ' to ensure consistency in format string representation
refactoring : allow setallowedduringediting ( ) to be disable by default
added a userModified flag set to true in LoginSamlAuthenticationProvider . java to track if the user was modified during authentication
added a new file TestSealedObjectNull . java for testing SealedObject behavior with null cipher to ensure proper handling ofaled objects and verify behavior with null cipher algorithms
replaced onOpen method with setResponse and added succeeded method in ConnectPromise to streamline response handling and enhance clarity in promise management
added a static final set of Material and updated the logic for checking for tagged states to ensure compatibility with server version 1.17 and prevent compatibility with newer Material API versions
added a lastTradeId tracking mechanism for trades and modified Trade constructor to include an ID parameter to enhance trade tracking by tracking the last processed trade ID for better traceability
added error handling when closing the synchronized MSC connection to ensure proper resource management and logging during connection closure
change server seed parse to use random long from random string ( # 798 )
updated device profile settings and modified icon size in DynamicGrid . java to ensure proper handling of Nexus 5 instances in the user interface
3 . x : fix refcount reset issue ( # 7008 )
replace type ' s newInstance method with ReflectUtil ' s newInstance method in SynthContext . java to improve instantiation handling for SynthContext
support # 4635 ` ` and ' ' and ` ` XOR ' ' operator ( # 4635 )
added checks for file existence and writability condition in SaveTask . java and introduced new tests for saving tasks in SaveAndLoadTaskTest . java to ensure that file operations are only performed on valid files to avoid errors
added synchronized keywords to several methods in MLogWriter . java to ensure thread safety during concurrent operations
log4j2 - 1349 add support for mutable log event ( # 788 )
updated the PADDING property to use NonNegativeLengthLike instead of LengthLike to ensure that the padding value is consistent with non - negative length requirements
remove user parameter from createcontext ( ) in favor of createcontext ( )
extract methodirbuilder . parseexceptionentries ( body , unit ) to first methodirbuilder . parseexceptionentries ( body ) instead of re - processing all trap unit
add additional error information about Android SDK Manager to AndroidPlatformTarget . java to improve clarity of error reporting regarding empty build tools
updated cacheSize calculation from maxMemory / 16 to maxMemory / 8 to improve memory management for performance
added a check for start is zero in InvocationStageTrace and updated test data structure with new metrics to ensure proper handling of start states and improve data structure for better performance measurement
added work around for npe issue with fips keystore and empty stream .
updated the port handling in UpstreamCheckUtilsTest to use a dynamic port instead of a hardcoded value to allow dynamic port assignment and improve test reliability
ticket # 3703 : one of the bug fix with the wrong parent component in the perspective view .
add a check for gl _ arb _ compute _ shader , gl _ arb _ geometry _ shader _ 4 and gl _ tessellation _ shader _ blocks in the renderer so it do n ' t fail on unsupported system
refactor PopulatorContext class to improve PopulatorContext handling to enhance performance and maintainability of the PopulatorContext functionality
fix the save - all notification on project reload ( # 2226 )
added file encoding handling and improved JSON processing in ZQLJobManager to ensure proper handling of character encoding for better file transfer reliability
add a check for an empty argument in the condition for argument validation to ensure valid input handling and prevent potential ArrayIndexOutOfBoundsException
replaced hardcoded string literals with a constant from a dedicated header decoder class to improve maintainability and reduce code duplication
deprecate empty - suffix - strategy option and encourage it to be use from generate - java - sources
removed detailed debug log messages from DerbyDatabase . java to clean up the code and reduce clutter in logs
[ ksession ] avoid flakiness in test that can cause intermittent failure
replaced parallel stream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance by reducing processing time
check if liquibase . hub . api be already set to ` ` all ' ' before set a property
added new constants for Java version information in Constants . java and implemented a test case in TestDDRExtensionGeneral . java to facilitate version validation using Eclipse OpenJ9 VM
updated font addition log message formatting and added a new DebugFonts class to improve clarity of font request messages and facilitate debugging of font font functionality
removed SSLEngineResult import from ALPNNegotiationTest and added HTTPVersion import in NegotiatingServerConnectionFactory to streamline code and ensure compatibility with HTTP / 1.1 protocol
updated RateControl configuration in MaxConcurrentStreamsTest . java to disable rate control for HTTP / 2 requests
added a new file ` Test6741426 . java ` implementing a Runnable with a JComboBox and a NimbusLookAndFeel to demonstrate the use of NimbusLookAndFeel for UI testing
update error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest to include exception message to improve debugging by providing more context when the CSRF token is missing
added checks for non - null values for dbMgdPath and dbExtPath in conditional statements to ensure that operations are only performed when necessary , preventing potential NullPointerExceptions
added package declaration for S3CopyObjectRequest . java to organize code under a more appropriate package
removed accentColor parameter from setupCategory methods and related calls in SettingsActivity . java to streamline category setup processes by eliminating unnecessary accent color handling
updated the exception message to include the fileAtRoot variable to improve clarity in the error message for better debugging
replaced raw types with enum values for map and collection types to improve type safety and reduce boilerplate code
add check that address be not empty or null to clientnetworkconfig . setaddress ( )
8225072 : add exception for expire docusign root to verifycacerts test
change how the worker loop compute method to return the count of the result .
added conditional checks before setting the mode in the mode toggle menu to ensure the menu only displays when appropriate and the popup state are met
pdfbox - 2852 : fix arrayindexoutofboundsexception in memoryttfdatasource . read ( )
8191818 : assert ( finalizer _ info ( ) ) fail : finalizer _ info ( ) do not return exit code
camel - 12727 : camel - core - optimize rout engine to reduce rout engine contention
allow select a issuance receiver address for the compensation request if none be specify
refactor StringSubject class to improve method organization to enhance maintainability and readability of the code
increased the size of longData from 1 , 000 , 000 to 1000 , 000 and added the @ Ignore annotation to temporarily disable the test to avoid intermittent failure
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to maintain consistency with naming conventions
replace " from : " with " from : " in recent query saving logic to ensure correct handling of user mentions in recent suggestions
added a conditional check for rebalance in SimulatorDiscoverer . java to enable conditional execution based on rebalance behavior
added a new endpoint for importing YubiKey accounts in the YubiKeyAccountRegistryEndpoint to enable users to import accounts directly from the YubiKey registry
updated shader program identifiers and modified texture handling in multiple classes to ensure compatibility with the latest shader API changes and improve asset resolution accuracy
added null checks for count before painting the on - top loop and adjusted padding for menu visibility to improve code robustness and ensure proper rendering of menu items
avoid warning in the AbiWriterProtocol . java file
added a null check for subName before assigning the caption to avoid potential null pointer exceptions when subName is null
change data flag from IMMOBILE to GRAVITY in EntityItem to accurately reflect the intended behavior of the item
added null checks and modified variable names in CustomExpression . java to improve robustness by preventing NullPointerExceptions
add missdatarequestservice . sendrepublishrequest ( ) instead of private method in voteresultservice
add simple jdbc test that will randomly fail if postgresql driver do n ' t support it
replaced double quotes with single quotes for character literals in SubtitleUtils . java and RemoteUtil . java to ensure consistency in string handling across the codebase
fix ( comment ) : improve parsing of comment on java doc
refactor snapshot handling to use a static atomic updater with a single instance to improve thread safety and encapsulation of snapshot management
added checks to ensure only valid filters are included in the query list to improve robustness by preventing potential NullPointerExceptions when excluding main queries
extend thinghelper . addchild to support child of Bridge ( # 2729 )
replace printHelp ( ) with error ( ) for invalid commands to improve error handling by providing clearer feedback on command input
added a check to return the file output if it exists to prevent potential errors when the output file does not exist
added date parsing logic to handle negative time formats in DateConverter to ensure accurate parsing of date strings that may include timezone information
added assertions and querying for posts by slug in Spring Data JPALock test to ensure that the Post entity is accessible and retrieval functions correctly
replaced boolean variable ` canAccessDbaRecycleBin ` with ` Boolean ` and improved the access control logic to enhance code clarity and prevent potential errors when access dba recycle bin on offline connections
added a static factory for SimpleClientHttpRequestFactory in ClientRegistrations . java to configure connection timeouts for the RESTful API
document that the path in sourceroot can not be canonicalized
[ gr - 34720 ] remove jvm property ' graalvm . version ' usage .
added validity checks for refresh token and access token expiration in ClientAdminBootstrap . java to ensure proper handling of client token expiration settings
updated the method to return the default SDK version based on the Android API version configuration to ensure compatibility with different Android API versions
removed ' this ' prefix from instance variables in PropertyPlaceholderHelper . java to improve code clarity and maintain consistency in naming conventions
removed the optional parameter from the Owner key in Resources . java to simplify the key usage by excluding unnecessary options
replaced the use of CountDownLatch and Set with CountDownLatch for managing collection processing to improve the efficiency and accuracy of collection management in the Solr client
added BigInteger import and addition to simpleTypes in MongoMappingContext . java to enable handling of BigInteger data type in MongoDB
added a condition to check if the button text is null in addition to the toast showing condition to ensure the user experience is accurately displayed when the button text is not applicable
added a condition to check if MEncoder is no out of sync when using MEncoder ' s auto - sync to improve control over audio playback behavior during certain conditions
reduce event loop size down to 15
changed access modifiers of several fields and methods from abstract to protected in several classes to enhance encapsulation and restrict access to subclasses for better inheritance
updated the ` ExternalFileField ` class to enhance sorting functionality and introduced a new test class ` ExternalFileFieldSortTest ` to improve the handling of file float sources and ensure functionality through unit testing
fix wrong url error message in donop fetcher ( # 6695 )
added functionality to include a source ID in the event string representation to enhance event tracking by identifying the source of events during processing
make check ( shapetype , ... ) final to allow subclass to override
added synchronization handling for file operations in FileActivity to improve user experience by managing file synchronization processes effectively
updated the URI construction and request header settings in ThumbnailsCacheManager . java to enhance file sharing functionality by using encoded file paths
added a check for the initialization state and a client property in InfiniteContainer . java to ensure that the method handles an infinite loop gracefully when the client is not initialized
reduced the total value by 1 instead of 0 and adjusted its calculation to ensure accurate tracking of values within the specified range
added a lock check before updating the entry in FeedRefreshUpdater to ensure that entries are only updated when a locked state is detected , preventing potential errors
refactor conditional logic for user user casing in SolarisAclFileAttributeView . java to improve clarity and maintainability of user input handling
replaced list of edges with an array and simplified edge creation logic in LatLonTree . java to improve performance and maintainability by using an array instead of a loop
added IOUtils import and ensured it is closed in a finally block to ensure proper resource management and prevent potential memory leaks
change to bibtex parser to only print line break for comment .
added strict property handling and tests for property parsing to ignore unknown arguments when strict mode is false to improve configuration management for property file parsing
pas always invalid constraint to the validator , fixes # 837 ( # 837 )
camel - 14284 : camel - http - verify should use http4 a the default value for the verifier
lucene - 10495 : make this test more robust to time
removed redundant length checks for Integer and Long in UBJsonWriter to simplify code for improved readability and maintainability
updated test cases in ApplicationTest . java to improve test coverage and reliability of application functionality
replace String concatenation with StringBuffer for handling parameter details to improve performance and reduce memory overhead when manipulating parameters
refactor Type enum to RoboType for better type handling to improve code clarity and maintainability by using the more specific RoboType enum
[ java ] abort action if no dispatch complete for archive and subscription .
added cache key and lookup to EntityProcessorBase and updated tests accordingly to ensure ' cacheKey ' and ' cacheLookup ' are validated before proceeding with entity queries
added a new file PutfieldError . java that demonstrates the throwing of IncompatibleClassChangeError to validate that the expected error is thrown during runtime exceptions handling
aws common ip address : do n ' t return data which be not on local ( # 3368 )
add log message for memtable flush after threshold and memtable cache
replaced the use of ` Space . build ( ) ` with ` SINGLE _ SPACE ` in multiple files to improve code clarity and consistency by using a uniform constant instead of a standard string representation
replaced the existing ` encodedLength ( ) ` method with a new implementation to ensure proper handling of encoded length data
updated TestMethodResultMapBuilder . java file to improve test coverage and fix existing issues
added handling for specific Java method sizes in FindNullDeref . java to improve error handling for method invocations with varying try sizes
[ hotfix ] [ runtime ] remove unnecessary constructor from tasklocalstatestoreimpl
updated time formatting methods to return specific time representations instead of a simple string to improve readability and consistency in time representation
update conditions for handling ` DeepShortcutView ` in ` Utilities . java ` and ` FloatingIconView . java ` to improve support for deep shortcuts and ensure proper drawable retrieval
changed the type of the ` validator ` field from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > ` to improve flexibility in handling claim values during JWT validation
renamed methods related to buy and sell quick rates for consistency and clarity to improve code readability and maintain uniform naming conventions
added a new configuration class ` CoverageConfig ` for cobertura coverage control to enable conditional loading of project data coverage in the application
added a check to ensure the EventBus is registered before registering sticky to prevent potential registration issues when already registered
added ASCII - only check to normalize method in NormalizerBase . java to optimize normalization process by skipping unnecessary operations for ASCII strings
[ hotfix ] correct check of migration task allow
added error handling for SQL updates in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that updates fail correctly when the statistics collection is disabled
( chore ) camel - cometd : migrate camel - test - junit to junit4
updated HR to include OK style for width specification to ensure compliance with HTTP specification vulnerabilities
added a new line to the HTML report in HtmlCoreReport . java to improve code readability and formatting for better debugging
lucene - 6353 : do n ' t divide by zero when score be null .
add test for custom type adapter use in gson serialization / deserialization .
fix : fix miningparameters extra data not be set when construct the payload
added a static final Map for number of arguments passed to the DependencyParser class and modified the properties conversion method to enable more flexible argument handling by allowing variable - line arguments
camel - 14263 : camel - http - optimize to avoid costly object allocation .
[ migration ] fix race condition during migration
updated parameter name from ` part ` to ` partOrList ` in the ` attach ` method and related references to improve clarity and maintain consistency in variable naming
jbrules - 1352 : fix 500 error due to miss bootstrap static resource
remove simplecategory # basiccategory method , no longer necessary
hhh - 17355 add load method with lockoptions to abstractentityloader
hbase - 21975 remove cancellation message from task pool on abort ( liu shaohui )
add special case for image ( 0 , 0 ) on mac ( issue # 2208 )
fix # 779 fill the pool at startup time not to create a new one .
replaced assureMatchVersion ( ) method calls with a direct assignment of Version . LATEST in multiple factory classes to simplify code and ensure consistent LuceneMatchVersion initialization
fix : do n ' t output default method for interface method in default aop
fix for lgtm alert : do n ' t attempt to parse expression that lombok .
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
fix a check for negative payload length . report an ioe if the payload length of the frame be invalid .
move publish subscribe channel from ' channel / config ' to ' dispatcher ' and move it to ' abstractchannelparser '
updated the type of executionId from String to Long across multiple classes to enable better handling of larger execution IDs and prevent potential overflow issues
added multiple byte checks to the digest update method in ImageProcessor . java to ensure accurate digest calculation for image dimensions
added imports for MessageFormat , CoreAdminParams , and LocalSolrQueryRequest in SolrConfigHandler to enhance functionality by providing clearer parameter handling for overlay versions
increased the delay duration for mSyncResult from 60 seconds to 3 seconds to provide more time for synchronization to avoid too many automatic synchronizations
fixed build error due to file . lastmodifiedtime ( ) change
replaced string concatenation with Path object creation in QueryProcessExecutor . java to improve code readability and maintainability by using a more explicit Path instance
fix classloading in jar url with + char in them
[ flink - 20516 ] [ table ] fix invalid sql when generate timestamp
added new file SpringSecurityAuthenticationSource . java with methods for retrieving principal and authentication information to streamline authentication handling in Spring Security
updated AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve concurrency handling and performance
change minimumSdk from LOLLIPOP to KITKAT in ShadowAlarmManager . java to align with the new SDK requirements for alarm functionality
replaced auto - suggestion dialog with a form dialog to retrieve and display the custom file name to improve user experience by using cached file list
added a new test method ` testNewput ` and updated assertions in ` StoreAPITest ` to improve test coverage and ensure correct behavior of asset issue management
updated variable name from ` collection . getName ( ) ` to ` collectionName ` in ` MongoTemplate . java ` to improve clarity and consistency in variable naming
simplify zoom calculation by using rounded and log values to improve zoom handling accuracy and maintain consistent code style
updated KNearestNeighborClassifier to accept a Similarity parameter and modified related tests to enable custom similarity handling to improve classification accuracy in the KNearestNeighborClassifier
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query performance by using a more efficient constant scoring range query
replaced toString ( ) with getReason ( ) for reasons in LowResourceMonitor . java to improve clarity on the reason being returned
updated package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
added MTU request handling and tests in ShadowBluetoothGattTest . java to verify proper MTU request behavior with callbacks in BluetoothGatt
refactor the creation of the ServletOutputStream in TestPayloadNameRequestWrapper to use a dedicated method to improve code organization and clarity by separating concerns
[ oskstt ] log unsatisfiedlinkerror at warn level instead of error
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety for concurrent access to processing chains
shortened strings for user interface messages in Japanese localization to improve clarity and conciseness of the displayed messages
use boolean . class instead of byte . class to avoid off - by - one error
fix race condition in scenesScene . addplayer and removeplayer
added regex patterns and refactored accessibility handling in TerminalView . java to improve code clarity and efficiency in determining accessibility state
added support for saving navigation navigation in the MenuBar and SideMenuBar classes to enhance user experience by allowing more flexible icon management in response to navigation
replaced the Disposable variable with a direct connection handling in the PoloniexManualExample . java and added error handling in WampStreamingService . java to enhance code clarity and ensure proper handling of connection states
updated energy limit validation logic and adjusted corresponding test assertions to ensure correct validation of energy limit values and improve error messaging for invalid contract types
renamed variable ` url1 ` to ` javaUrl ` for clarity and added protocol handling to improve code readability and ensure the correct protocol are used
camel - 5405 : add getter and setter to fix namespaceprefixref to be able to set data format namespace prefix .
fix date comparison logic to account for timezone difference .
added a check for the existence of a local port in BasicAuthIntegrationTest and improved security status handling in ZkStateReader to enhance test reliability and ensure correct security status management during server restarts
fix for # 1034 : update trade stats view with currency code
refactor replication configuration in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to ensure consistent server port configuration across tests
8015349 : ` ` abc ' ' . lastindexof ( ` ` a ' ' , - 1 ) should evaluate to 0 and not - 1
added file downloading functionality using FileDataStorageManager in FileDownloader . java to ensure the application can handle file synchronization effectively
[ java ] : make sure to set the length of the filechannel when open a log file .
added methods to check if a registry is running and delete a file if it already exists to improve functionality for checking registry status and gracefully handle file deletion failures
updated import statements in EditTest , Quick3dMain , and TextureTest classes to streamline initialization process for improved code clarity and maintainability
added @ SuppressWarnings annotations and removed redundant fields in multiple classes to improve code readability and maintainability by reducing unnecessary variable declarations
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions when accessing instance variables
updated isolation level handling in SQLExceptionCode and adjusted logic in PhoenixConnection for better configuration to ensure compatibility with transaction settings and provide clearer error messaging when isolation levels are not enabled
added transactionAttribute handling in AbstractStepFactoryBean and improved exception management in ItemOrientedStep and SkipLimitStepFactoryBean to enhance transaction management and ensure proper rollback behavior during processing
refactor CasManagementSecurityInterceptor to use DirectCasClient instead of CasClient to enhance security handling capabilities in the application
added functionality to the menu item for adding categories in the navigation drawer to enhance user experience by providing easy access to category options
renamed the method ` cancel ` to ` cancelMatchingOperation ` and updated method names for consistency to improve clarity and maintain uniform naming conventions
pdfbox - 3675 : avoid classcastexception , remove unneeded cast
updated font size handling in TerminalView and TerminalBridge to use a constant for font size to improve flexibility and maintainability of font size management
do n ' t copy the fact for valid constant when we ca n ' t parse it
renamed multiple classes and updated their imports to improve clarity and consistency in naming conventions
replaced the return statement to create a new ArrayList instance to ensure that the returned ArrayList is ready for further use
removed lock service waiting for database change log table access and adjusted formatting in Liquibase . java to streamline lock management and improve code readability
added a method to set the revision in MicroserviceVersions and adjusted its usage in InstanceCacheChecker and TestInstanceCacheChecker to ensure the correct revision is set when creating MicroserviceVersions
added string formatting for foreign key and index names based on column details to improve clarity and reduce redundancy in foreign key management
camel - 16175 - aws2 - s3 : configuring endpoint should set uriendpointoverride to true
removed currency pair handling in BitstampAccountService and adjusted method signature in BitstampAccountServiceRaw to simplify transaction retrieval logic and improve error handling during user transactions
added exception handling for retrieving component instance in BlueprintContainerRegistry to improve robustness by returning null when the component instance is not found
make it possible to disable the push notification when the remote setting be enable .
rewrite legacyaddresstest . testcompareto by use a data reader , not hardcoding the mainnet
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor Snackbar usage in NotificationsActivity for improved clarity and functionality to enhance user experience by ensuring a Snackbar is displayed appropriately during push notification handling
improve handling of ioexception due to context . close ( ) .
updated null checks for warning and valid days attributes and improved logging messages to enhance code readability and ensure clearer error reporting
updated DefaultAnnotationEngine and Stubber files to improve code structure and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840
nifi - 7404 added timezone awareness to the aboutdto and flowresource
avoid arrayindexoutofboundsexception in split method
no effective change - code cleanup - remove useless catch
fix issue with circular reference in connect timeout . fix # 275
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using a more general exception type
flume - 211 . remove need to cast source / sink to eventdrivensourcestrunner
gh - 351 : do n ' t log full error when bind fail ( # 356 )
updated ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance the efficiency of focus traversal handling in the application
updated return type of getPointLength methods from double to int in multiple classes to accommodate larger geographical coordinates
formatted the constructor by adding a space before the comma in the parameter list to improve code readability and consistency
refactor database connection handling and implement execution logic in Executable . java to improve resource management and ensure database connection is closed properly
bump default tl version to v1.2 with a fallback for old jdks
[ hotfix ] [ test ] fix typo in countermanager exception message
refactor the audio stopping logic in MediaManager . java to enhance clarity and correctness in audio queue handling during repeat state
removed debug logging checks in HttpConnection . java to streamline logging for better readability and performance
added support for transient properties in JpaPersistentPropertyImpl and JpaPersistentPropertyImplUnitTests to ensure proper handling of transient properties during persistence
updated version ID assertions and versions in UpgradeResourceProviderTest . java for consistency to ensure correct identification of stack versions in the cluster upgrade process
truffle : make eval method return object ( not symbol ) .
changed the access modifier of the isBinaryType method from private to public and updated debug logging statements for better accessibility to enhance accessibility of the method and ensure proper handling of binary content type checks
corrected the spelling of " hive . tez . dynamic . partition . pruning . max . data . size " in HiveConf . java to ensure consistent configuration for dynamic partition pruning
remove unnecessary code duplication , also add comment why we ca n ' t reproduce it later
fix the deprecated dictionaryindexconfig . default _ offhouse ( ) method
updated string concatenation to use a configurable line separator to ensure consistent line endings across different operating systems
updated DebugHelper class to improve debugging capabilities to enhance application performance and error tracking during development
added texture ownership check in ParticleEffect . java to ensure only texture structures are owned in the particle effect
hive - 7272 : add ldap and base dn to hiveconf configuration ( ashutosh chauhan via jesus camacho rodriguez )
[ geos - 9047 ] update javadoc for new datacatalog api
added soft input method toggle functionality in DetailActivity . java to improve user experience by providing soft input methods more efficiently
add test case to cover conversion from map < string , object > to object
removed the file " memfs : fsMem . mv . db " and updated the size variable from 100 to 50 to optimize memory usage and adjust the size for better resource management
update error message to good indicate that we need to close open resource
made the ` dropSequences ` method abstract in multiple database classes and added a ` MigrationFailedException ` declaration to provide a consistent exception handling for migration failures across database implementations
added a null check for the status variable in MainWindow . java to prevent potential null pointer exceptions during execution
assign the destination field to the variable before creating it to improve code clarity and maintainability by explicitly defining the field variable
bug fix : de - tree icon inherit from logicalstylemodel ( fixes # 413 )
datamongo - 1087 - add test for upsert with non - existing object return the inserted entry .
hbase - 24277 correct the calculation of the mid variable in binary data structure ( liu shaohui )
added methods to record app launch statistics and modified broadcast intent handling to improve tracking of app launches and ensure null handling for shortcuts
fixed black background issue with simulator . http : / / github . com / codenameone / codenameone / issues / 2147
[ # 8252 ] fix issue with session result page when no response
fix incorrect id generation for player inventory ( # 854 )
fix a bug where we do n ' t exit if the config description service be not find .
updated method parameters from ` returnType = = null ` to ` returnTypeAnnotations ` across multiple parser visitor classes to ensure consistent handling of return types in parsing logic
updated the initialization logic for blended tiles in TileMapRenderer to handle potential null values gracefully to improve robustness by ensuring a default empty array is returned when no tiles are available
4094090 : no need to expose package package in com . sun . tools
actually calculate the area ' s averages wrt the last [ 1 ] coordinate
replaced null assignment with key assignment and simplified throttle rate assignment logic to improve code clarity and prevent potential NullPointerExceptions
pipe : fix potential bug in configuration of pipe ' s extend logic
updated timeout value in ZkController instantiation from 1000 to TIMEOUT to increase the ZkController ' s timeout duration for better testing reliability
added a test for handling client parameters in the TokenMvcMockTests class to ensure correct authentication and authentication handling for client credentials
added LengthFilter constructors to brokenOffsetsConstructors in TestRandomChains . java to ensure proper handling of input parameters for the token processing
removed unused JUnit Ignore import from RandomPlaneTest . java to clean up the code and reduce unnecessary dependencies
fix sulong memory issue and support unsigned long argument .
replace manual creation of ` cPtr ` with ` getInstance ` method in ` btCollisionObjectArray ` and simplify the ` upcast ` method in ` btRigidBody ` to improve code readability and reduce redundancy when accessing ` cPtr `
added a new method to retrieve the copyright year and updated the OPENROCKET _ URL in the AboutDialog to ensure accurate copyright information and clarify the build ownership
add getdistributedobjects method to jetclientinstanceimpl ( # 1390 )
added debug output statements in FinSet and modified variable values in MassCalculatorTest to improve debugging visibility and ensure accurate calculations forMOI values
update memory management to use MAX _ MEMORY instead of TOTAL _ MEMORY to improve memory tracking accuracy in the SmartDexingStep
[ iotdb - 3840 ] fix exception handler when build align timeseries ( # 7012 )
remove validation check on delayed payout tx and replace with a new output prefix for burningman
updated the input string format in JsonLoaderTest . java to use a JSON utility method and added handling for big integer exceptions to improve code clarity and ensure proper JSON input handling
updated the capacity validation condition in ObjectSet . java to allow for a maximum size of 0x40000000 to improve flexibility in handling table size limits
core - 2748 null check for data _ scale in columnsnapshotgenerator . java
removed @ AddToRuleKey annotations from several fields in AppleTest . java to simplify the fields and avoid unnecessary serialization
added security exception handling to FileHelper and modified content trimming in TextHelper to improve stability by preventing application crashes due to security issues
added a new constant ` StyleWithMultipleAttributes ` and implemented multiple attribute resolution tests in ` ShadowThemeTest ` to enhance theme attribute handling and ensure reliable functionality of attribute resolution
updated sheet name comparison logic and created multiple sheet instances in TestHSSFWorkbook to ensure correct handling of sheets based on their size and improve test coverage for sheet creation
updated the method to retrieve the element color instead of the primary color to ensure the correct color is used for UI consistency
updated DefaultEventBus to handle null replyHandler cases and modified path resolver in DefaultPlatformManager to improve null safety and simplify path resolution logic
added binary collation configuration and updated related methods in MariaDbDbmsType , DbmsType , and FilterSortedSkipOptimizer to standardize collation naming for database types across the application
added a default method ` whenType ` to return an ` Optional < T extends Tree > ` to improve handling of tree types by providing a default implementation
itemlauncher : return the item view destination to the jellyfin sdk ( instead of call it directly )
replaced the response success annotation with a temporary redirect mechanism to enhance user experience by providing a temporary redirect URI for the application settings service
[ flink - 14inesis ] improve error message when create non - serializable deserializer
camel - 4619 : fixed javadoc warning in camel - core
replaced a fixed sleep duration with a timed execution mechanism for closing the zk client to improve reliability and prevent potential resource leaks during testing
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity and consistency in terminology regarding the transition progress of tasks
refactor read method in ProxyHandler to use a separate read method to improve code readability and maintainability by centralizing the read operation logic
replaced instances of ` BufferUtil . allocate ( length + 11 ) ` with ` ByteBuffer . allocate ( length 11 ) ` to standardize the code and improve readability
modified the method ` prepareStreamsToUpload ( ) ` to return a boolean indicating success or failure to improve functionality by ensuring that the method returns a boolean indicating success or failure
[ scb - 2687 ] config loader : compare order by integer rather than integer ( # 229 )
added a new file PicOfDayAppWidget . java to handle image widget updates to improve widget functionality by displaying images of the daily API
cloudstack - 6597 : default internal lb service offering will be used instead of use uuid a a fallback ( # 2519 )
updated import statements and modified join condition logic in HiveParserCalcitePlanner . java to enhance compatibility with Hive ' s QL optimizer and improve join handling
[ flink - 23802 ] deprecate transformation class with a new version in favor of the one from the already exist
added user and password options for the remote jmx access in NodeToolCmd . java to enable secure access to the remote jmx through configurable credentials
removed duplicate initialization of BytesRef instance to improve code clarity and reduce redundancy
updated parameters in AppsCustomizePagedView . java to adjust widget handling based on the number of pages to improve widget rendering accuracy based on the number of available pages
mow - 3649 check for 3d view ( not 3d view for thumbnail )
modified rotation positioning logic in GcodeRenderer . java to ensure proper positioning by clamping rotation coordinates to the valid range of 180 degree
added a new WORKSPACE option to the OptionEnum and updated TerminalClient to utilize it to enable configuration of the workspace directory for daemon mode
fixed typo in option file name from ' apt ' to ' html '
updated JUnit test annotations to use JUnit 5 framework and added PollutionPreventionExtension to enhance test reliability and maintain compatibility with newer JUnit features
updated the OAuthConfirmationController to use a model attribute for authorization requests instead of a model attribute to simplify the access control logic by removing unnecessary model attributes
refactored the test to check for a second level cache hit count asynchronously to improve reliability of test by ensuring that cache hits are retrieved after all sessions are cleared
rename EventBusHook . java to improve clarity to enhance code readability and maintainability
updated test cases in MultiPaintEventTest . java to improve test coverage for rendering events
changed the assignment of mNewScale to be non - final to allow for potential modification of scaleAndTranslationY
refactor SyncFactory class to improve synchronization logic to enhance performance and maintainability of the SyncFactory class
added unique key handling to the LukeRequestHandler to ensure proper uniqueness of unique fields during schema extraction
fix # 2250 color doc do n ' t apply round border color to color doc
[ gr - 39694 ] add a compilation assertion that never part of compilation .
[ hotfix ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchschedulingtest
added logging for pending requests and modified return value in PingPongApp to improve debugging capabilities and ensure proper handling of pong scenarios
added a toolbar menu item click listener to the RecentChatFragment to enhance user experience by providing access to recent chats through a toolbar
refactor InfoDropTarget and UninstallDropTarget classes to replace ButtonDropTarget with UninstallDropTarget and update method implementations to improve functionality by differentiating between install and details activities
replaced ` add ` and ` remove ` methods with ` push ` and ` pop ` versions across multiple classes to improve clarity and maintain consistency in scope management
update URLs in CommonsApplication from " test " to " commons . wikimedia " to utilize a more widely compatible Commons application for testing purposes
refactor index handling logic into separate methods for clarity to improve code readability and maintainability
replaced usages of ` Collections . sort ( ) ` with ` list . sort ( ) ` in multiple classes to improve code readability and reduce redundancy
added multiple date and time pattern constants to the HR formatting system to enhance date formatting capabilities for better consistency and usability
added functionality to clear the focus of the selected view to improve user experience by clearing focus on the clicked view when necessary
fix # 2139 : update with new language code ( # 2511 )
updated time zone strings from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple language files to correct the spelling of " WSDT " across different languages
added native methods and modified the handling of global and weak references in FastGetField to enhance flexibility and control over field registration and access control
added default value handling for UNION and NULL types in ReflectData . java to ensure correct serialization of default values in JSON structures
increase the timeout for seda block test to reduce flakiness .
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerExceptions when remapping the resource class
added constructors to HapiFhirDialect and its subclasses to ensure compatibility with specific database versions in different database types
camel - 8022 : http producer should honor http client ` ` connection close ' ' header if set to http client .
updated socket timeout from 60 seconds to 120 seconds to improve stability during network operations
fix test : condition to return 0 when final _ price _ cts be not defined
refactor the Parser class for improved clarity to enhance code maintainability and readability
refactor CasProcessingFilter class structure to improve code maintainability and readability
refactor the way XML elements are retrieved in multiple parser classes to use getFirstElementChild ( ) instead of getFirstChild ( ) to improve code clarity and eliminate unnecessary casting for NestableNode
[ beam - 8470 ] fix npe in lookup when enum class be not present in the list
[ iotdb - 4022 ] do n ' t wait for cluster node to shutdown properly . ( # 4022 )
reduce warn to info for case when bean cache be not empty .
added content type setting for WebdavEntry to ensure proper handling of binary data transfer
added an implementation of the getQueueSize method in LazyTraceThreadPoolTaskExecutor and created unit tests for it to ensure the correct queue size is returned based on the delegate ' s queue size
add distance check for envelope to avoid too high .
ww - 3988 renames require attribute to requiredlabel to well reflect usage
updated the ` next ( ) ` method implementation in ` PurgingPartitionIterator . java ` to ensure progress is updated correctly during iterator operations
added a method ` getAsUnescapedPath ( ) ` in ` SchemaPath . java ` and updated its usage in ` VectorUtil . java ` to use this method to improve clarity and functionality when handling schema path paths in Drill
add getheight and getwidth abstract to the basemonochromebitmapsource interface .
added validation to ensure polygons contain at least 3 points and updated localVertices assignment logic to improve robustness by preventing ArrayIndexOutOfBoundsException
replaced ObjectMapper instantiation with ObjectMappers in various classes to improve memory management and reduce object creation overhead
fix for ggb - 415 npe on implicit curve without coeff
fix # 47384 - parse ascii name in externalnamerecord
camel - 6377 : fix documentation for jms osgi processor
added logic to exclude username and password from login prompts in LoginInfoEndpoint to improve flexibility in authentication handling during login
replaced ` remove ` method with ` removeIf ` for listener removal to improve listener condition handling
added a case for the toggle spinner in PieChartActivity to enable user interaction with the chart ' s spin algorithm
kill vhd when fail to copy to secondarystorage , clear the previous copy process before throw exception
hbase - 27423 skipping normalizing table that have namespace quota ( # 4188 )
removed unused imports and added a resize method to AndroidInput . java to streamline code for better readability and maintainability
add a static method propertyvaluesof ( ) to expose a list of property value .
ignore test that fail on slow ci server
fix the hopperhock call to the wrong x range when get an item from a laboratory box
added authentication dialog to SsoWebViewClient for user authentication to enhance user experience by providing radio feedback during authentication
refactor term document management methods and improve ID handling in TestStressIndexing2 . java to enhance reliability and maintainability of document management operations
[ flink - 22559 ] [ table ] ignore upsertkafkatableitcase incompatibility
replaced ` pg . types . get ( j ) ` with ` pg . types . computeIfAbsent ( j ) ` and adjusted variable assignments for clarity to improve code readability and ensure a clearer initialization of lists
added configuration to the ObjectMapper to accept single values as an array in DefaultEntityMapper to ensure proper handling of single values in deserialization
updated localization message to include UK and SL to enhance clarity of the localization settings
[ netbeans - 5052 ] remove application a a separator in configurables
drools - 2373 dmn support ` ` and ' ' and ` ` and ' ' ( # 2373 )
nifi - 5080 : added content - type header to gethttp session .
fix # 264 - ` ` ca n ' t delete the resource ' '
replaced ` exitButton ` with ` doneButton ` and added ` searchable ` check in ` SearchBookContentsActivity ` to improve clarity of button functionality and ensure that response is displayed when searchable
camel - 14263 : camel - nats : fixed javadoc ref
refactor invalidateStalePartition method to accept a list of partition names with version as a parameter to improve code readability and maintainability by isolating partition invalidation logic
bug 50489 - view result tree buffer must be circular and unbounded to prevent memory leak
replaced ` ic _ group ` with ` ic _ chat _ bubble ` in multiple adapters to clarify the icon for chat bubble visibility in the user interface
[ java ] fix cursor lookup to be volatile . issue # 3252
renamed test methods to use underscores instead of camel case to improve readability and consistency with naming conventions
added a new constant for the source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to improve clarity and encapsulation of data source handling in the application
updated awaiter timeouts from 10 seconds to 30 seconds in multiple locations to allow for a longer processing time during phaser synchronization
removed the BuildSlaveFinishedStatusEvent class and its associated listener classes to simplify the code by eliminating unnecessary complexity
fix findbugs encode warning in vmwarestoragemanagerimpl . java ovum template uuid name should be utf - 8 encode in it
added test to prove that workflowitem deposit work without a workflow group
filter duplicate classpath file in classloadersupportimpl # loadclassloader ( ) ( # 15858 )
removed the method ` isBoxedPrimitive ` from the class to simplify the code by eliminating an unnecessary method
refactor argument handling in SpecificCompilerTool and add tests in TestSpecificCompilerTool to ensure correct argument order and validate functionality for various encoding and template directories
modified directory deletion logic to skip non - external tables to ensure proper handling of temporary tables when deleting temporary files
hive - 7170 : increase async executor size and queue size in config ( ashutosh chauhan via thejas nair )
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a dedicated EXECUTE _ TASK _ ROLE constant to improve code clarity and maintainability by centralizing task execution logic
fix issue with initial configuration diff in sip
fix an npe from the log view ( # 1588 )
updated return statements to check if the socket is open or not in a specific condition to ensure proper handling of input / output shutdown scenarios
updated the implementation of SetNullableGenerator to improve null safety and performance
add camel - example - reportincident to camel - example - reportincident
replaced specific imports with a wildcard import in NettyRoutingFilter . java and updated content type handling in FormIntegrationTests . java to simplify import statements and ensure compatibility with the current API design
added ` @ ApiOperation ` annotations and implemented the ` hello ` method in multiple service classes to support multiple API operations and ensure proper functionality
refactor lifecycle listener management in Lwjgl3Application and Lwjgl3Window to improve thread safety and remove listeners before invoking update methods
updated FG _ FK color value from 90 to 200 to improve visual distinction between instances
mow - 1039 make mp3 optional since opengl 3 .
refactor SecondaryIndexManagerTest to streamline index checks and enhance assertions to improve code readability and maintainability by reducing redundancy
add the ability to set version number in the help page . http : / / github . com / codenameone / codenameone / issues / 2147
[ flink - 30613 ] [ test ] replace throwables with optional to avoid npe
updated MediaFormatUtil . java for improved media format handling to enhance performance and maintainability of media format utilities
added isCellEditable method to GeneralTab class that always returns false to provide a placeholder implementation for cell editable behavior
added a method to check if only printing commands are specified to enhance the clarity of error messages related to unused dependencies
added a temporary count variable and updated the size of the vscales array in VocalTractModifier and VocalTractScalingProcessor to facilitate performance monitoring of tract scaling operations
updated import statements in TestUDFRound and TestGenericUDFConcat files to ensure consistent usage of BaseScalarUdfTest across multiple test classes
implement hashCode and equals methods in UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for authentication details
* changed testskeletoncontrolrefresh to test animation clips instead of directly use the skinning model .
truffle : rename nodefilter to nodecountfilter to more specific nodecountfilter .
modified the condition to check if the fetch batch size is less than or equal to the buffer size to ensure that the fetch batch size is not equal to the defined constant
updated state codes and type constants in DebugExpressionParser . java to improve clarity and maintainability of the code
updated the method to check for transitive dependencies instead of an empty check to improve filtering of dependencies based on their scope
refactor method names from ` tmp ( ) ` to ` dst2 ( T v ) ` and update parameters in ` lerp ( T target , alpha ) ` to improve clarity and consistency in vector operations
[ grid ] fix nullpointerexception in gridhubconfiguration
updated linker flags handling in RustBinaryDescription to use ImmutableList < String > instead of List < String > to improve flexibility and allow for custom linker flags management
[ # 7270 ] adminemailpageuitest : fix check for travis and appveyor status
added handling of external query name in Hive configuration and enhanced logging in GenericUDTFGetSplits to improve traceability of query functionalities and facilitate better debugging
fix checkstyle issue in block / entity / terrain / tileatlas . java ( # 788 )
[ netbeans - 4294 ] the gradle daemon should gracefully abort if there be an exception when the output stream be close .
updated the ` validateQuery ` method to accept an additional error message as a parameter to enhance error handling by providing more context about the arguments
updated INDEX _ VERSION from 1 to 2 and refactored methods in LuceneExecutor to improve index versioning and simplify repository handling
[ flink - 1111 ] [ kryo ] introduce test for serializer registration
added null check before removing config type to prevent potential NullPointerExceptions during configuration management
refactor boolean handling in MetaStoreDirectSql . java to use BooleanUtils for consistency to improve code maintainability and readability while ensuring proper handling of null values
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user experience by hiding the customization drawer
replaced hardcoded warning key with a static constant and streamlined the warning handling logic to enhance code maintainability and ensure consistent handling of warnings across multiple term vectors
8059231 : verify that octane raytrace now work with optimistic type turn off . add well log for optimistic type in the compiler .
updated expectations handling in Expect . java to enhance clarity and maintainability of the code
add unix socket configuration to DockerClientFactory to enable connectivity with Unix socket in Docker environments
[ beam - 10727 ] flaky closeablabledofiltertest . testevenlowratip ( ) in java 8
camel - 11994 : better error message when reactivestreams have no active subscription ( # 11994 )
hive - 21675 : vectorizer should handle teztask correctly ( navis via ashutosh chauhan )
modified constructors of StringAppender and LogDivertAppender to include a new boolean parameter to ensure compatibility with the parent constructor configuration
fixed npe when save a file without a gui package
[ gr - 12699 ] enable weak linking by linkage . isweak ( ) .
updated multiple Java files to replace class names with their corresponding classes to improve code clarity and maintain consistency across the project
test only execute when h2 be enable ( and height be not set )
added a check for invalid operation handles in the close response to improve error handling for invalid operation handles
rename ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL ` across multiple files to improve clarity and accuracy of column type management
camel - 17644 - support ability to load property from vault / secrets cloud service - aws secret manager
modified the implementation of SimpleTree to improve performance and readability of the code
removed the error message from the internal server error response in UserREST . java to simplify the error handling and improve code readability
added a boolean parameter ` subTree ` to the ` fromContent ` methods and modified the structure to use it to improve the functionality of the Result class to handle subTree scenarios effectively
modified column width calculation in Sheet and added a test for default column width in TestHSSFSheet to ensure correct handling of default column widths and validate functionality through unit testing
added a configPath parameter to the Commands . less method in Builtins . java to properly specify the configPath for command execution
updated method signatures and data structures from Set to Collection in DotWriter . java and GraphExecutable . java to improve flexibility and compatibility with modern Java collections
camel - testcontainers : use 1.0 . 0 a default sshd image for testcontainers
removed assertion for null hostId in AgentManagerImpl . java to ensure that the code only executes when the hostId is not null
refactor the handling of multi - valued columns in DefaultGroupKeyGenerator to simplify key generation logic to enhance code readability and maintainability by reducing unnecessary checks
updated test method names and logic in TestMultiMMap . java to improve clarity and handling of eof exceptions to ensure proper functionality and validation of file pointer limits during seeking operations
fix bcsilicon recipe use new builder ( )
rename put ( ) to putobject ( ) to avoid npe .
refactor visibility logic in CellLayout and introduce a new method in Workspace for handling drag - and - drop events to improve code readability and streamline visibility management during drag operations
updated ModifyRequestBodyGatewayFilterFactory to use original body and added a new test for handling empty request bodies to improve request handling and ensure correct behavior when upstream requests are empty
updated access control checks in ConstructorFinder , FieldFinder , and MethodFinder to include package accessibility checks to enhance security by ensuring only public fields are considered in package - private access
changed log level from warn to trace in LoggingHandler . java to improve logging granularity for better debugging and monitoring
fix stringindexoutofboundsexception in whitewhitelist . fix # 348
added options menu functionality to the GalleryActivity for selecting images from the gallery to enhance user experience by providing quick access to images through the gallery
added singleton instance and service fields to MongoDBServiceFactory to improve flexibility in service instantiation for MongoDB services
patch from stefan penndorf to describe the behaviour of inline constant mutator with booleans
change recordtest . decode ( ) to support black hole .
fix : update gapic - generator - java with mock service generation fix ( # 1249 )
[ knx ] avoid a numberformatexception find via oss - fuzz
removed the call to clear witnesses in ManagerTest . java to ensure that witnesses are properly cleared during tests
make jdbcpagesink log debug instead of throw exception
removed the stack property from the script object and replaced it with getter and setter methods to improve encapsulation and control over stack management
removed a condition that checks if the path name starts with " . " to simplify the path validation logic
corrected the spelling of " onboard " to " autoLoadPinotMetricsService " in the ThirdEyeAnomalyApplication and ThirdEyeAnomalyConfiguration classes to enhance code readability and ensure better understanding of configuration checks
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before further operations
change the constant BOLDWEIGHT _ NORMAL from 190 to 0x190 to improve compatibility with larger data sets
modified the ` fThreadGroup ` field to be volatile and updated the visibility of ` fLookForStuckThread ` in the ` Timeout ` class to ensure thread safety and encapsulate the lookup logic for stuck threads
refactor getValue and setValue methods in ValueResultData class to improve code clarity and maintain consistent initialization style
updated hash code and equality checks in FuzzyQuery . java to ensure proper object comparison and avoid potential null pointer exceptions
removed specific print statements from PushedResourcesTest . java to clean up the output and reduce unnecessary console noise
changed return type of removeFile and removeDirectory methods from SharedRandomAccessFile to void to simplify method implementation and improve code clarity
updated the product version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to ensure compatibility with the latest version of the database
updated the ` retrievePersonAttributes ` method to initialize the principal as an empty map to improve handling of empty attributes and enhance the principal resolution process
updated log level from info to warn for certain log messages in OpenWebNetBridgeHandler . java to improve the clarity of log severity regarding connection issues
updated method names for hashing from int and long functions to hash implementations across multiple classes to improve clarity and consistency in hash function usage
added a constructor for ThumbnailGenerationTask in ThumbnailsCacheManager and updated bitmap check in FileUploader to enhance thumbnail generation functionality by ensuring storage manager is not null and preventing null pointer exceptions
updated the condition in the loop to check if the number of iterations is less than the expected count and the number of retries to improve the robustness of the iteration process
added a new file Bug1933922 . java to implement a demonstration of file compilation in a multi - threaded environment to identify and manage program retrieval efficiently during file compilation
simplified spacing in conditional statements across multiple files to improve code readability and maintain consistency
updated character check from 33 to 32 in FileResolver . java to ensure compatibility with space characters in file names
added requestFocus ( ) method call to Display class to ensure the display receives focus after changes
[ # 9030 ] instructor home : improve test instructor home page ( # 9341 )
rename ` JsonParserAsync ` class to ` JsonStreamParser ` and update related references to improve clarity and accurately reflect the purpose of the class
updated Crouton handling logic in DetailFragment and added onPause method in MainActivity to ensure Crouton is properly canceled and notifying when the app is pause
[ iotdb - 3646 ] fix npe while fetch schema with unrelated template ( # 6895 )
modified the implementation of the Dialog class to improve user experience and performance
replaced the runtime execution method with a ProcessBuilder for better process management to improve flexibility in executing command line arguments
fix unit test which randomly fail on slow ci server
refactor subsystem assignment logic to use a loop for multiple string literals to improve code readability and maintainability by reducing redundancy
skip some test in macosx platform that do not support it
compiler : minor refactor to jvmciversioncheck refactor
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
modified TestLargePageUseForAuxMemory . java file to optimize memory usage tests
updated method calls to use a context parameter for source retrieval in BinaryParser and PlainTextParser classes to improve code clarity and flexibility when handling character sets in parsing context
added a getter and setter for the MultiPartFormDataCompliance in HttpConfiguration . java and introduced a new enum MultiPartFormDataCompliance in Request . java to provide a mechanism for configuring the MultiPartFormDataCompliance in Jetty ' s server
upgrade gradle tool to 7.2 for jdk 17
refactor snapshot handling to use a dedicated ` addType ` method to improve code clarity and maintainability by centralizing container addition logic
refactor term class methods for improved readability to enhance maintainability and ease of understanding
modify the return statement to handle null or empty runWith values to ensure proper handling of null or empty runWith values
[ amq - 7030 ] add a test to verify that the same rm be close on the xaconnection .
Refactor multiple Java files in the project to improve code organization and maintainability
add detector to test image with blackbox 1
update parameter handling in TaskView to assign the tint amount to a variable before setting the dim alpha and icon color to improve clarity and maintainability of the tinting process
drill - 1619 : fix output for sum0 when push out to gaggr
remove unnecessary not null constraint ( # 2053 )
hbase - 16815 improve logging of bucketallocatorexception when allocation fail ( liu shaohui )
added null check before inserting properties into roleObject to avoid potential NullPointerExceptions when accessing property keys
added @ VisibleForTesting annotation to fields and methods in StatusBarTouchController and updated related logic in RecentsView to enhance testability and ensure accurate task removal during touch events
dockerclient : add option to disable stream opening indefinitely .
mvstore : cache performance improvement ( # 12985 )
updated the long value from " L " to " J " in PrimitiveType . java to ensure consistency with the expected data type representation
changed the method visibility of delegatingApplicationListener from instance to static to enable access to the delegatingApplicationListener method without the need for an instance of the DelegatingApplicationListener
camel - 7999 : rest - dsl - clear message body on exchange error to avoid leak
added FileDeletingTasklet and TaskletJobFunctionalTests classes to handle file deletion and tasklet operations to facilitate easier testing of file operations in a batch job environment
g3d - 42 : init view before init ( ) ; fix npe
refactor length calculations in BitUtil , Int2IntCounterMap , and Int2IntHashMap for clarity to improve code readability and maintainability by reducing indexing errors
update sendEventToTest method to accept an integer for stateOrdinal instead of a string to improve flexibility in event handling by differentiating between states
added checks for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnails during processing
fixed an issue with the error checker where problem line would be scroll to the top .
updated layout constraints for the menu button in SideMenuBar to accommodate theme - specific conditions to enhance user interface responsiveness for different theme configurations
added preload attribute to Skia link configuration to ensure compatibility with the new library structure
introduce a new constant for unit testnet and use it to reduce noise in unittest .
added validation to ensure format arguments are not specified to provide clearer error handling for invalid command usage
[ java ] remove unnecessary field in intiterator . grow usage .
updated the walkRuleAndAdd method to include a srcTarget parameter for better dependency management to enhance rule traversal logic based on project configuration settings
make sure patching run with @ source override on module - files
[ java ] do n ' t assume protocol version be below minimum required protocol version .
modify the default policy setting in OwnCloudClientManagerFactory based on SAML authentication to ensure correct policy is always set for client management when not SAML authentication
improve error message when map a table resource be miss
tidy up close method - no need to try and catch potential resource leak
refactor ` AnonymousAuthenticationFilter ` to utilize a more robust handling of security context in requests to enhance code clarity and maintainability by consolidating security context management logic
updated removeActor method to accept a boolean parameter for unfocus behavior to enhance flexibility in actor removal operations
replaced multiple instances of the prompt method with a single validConfigs string to improve code readability and maintainability by reducing redundancy
improve handling of empty response in netty server
updated DatumAliases , AbstractParser , Formatter , and Parser classes with modified import statements to streamline code structure for better readability and maintainability
replaced direct update call with SwingUtilities . invokeLater to ensure updates are executed on the Event Dispatch Thread
( chore ) camel - groovy : enhance scripting to support language cache
remove plugin dependency from plugin manager , since it be now manage by plugin
[ hotfix ] [ cli ] make option public
replaced ShadowSharedPreferencesEditor with TestSharedPreferencesEditor and added a test class for SharedPreferences functionality to enhance testing capabilities and ensure correctness of shared preferences edits
removed storage alias handling and certificate chain logging from HttpsMessenger . java to simplify the code by directly assigning the alias from the storage key
danielwagnerhall : if a response body be not pass , check if it ' s a string to response and handle it
change updateimage ( ) method from private to protect to allow for override
make block # dropblock resource droppable ( # 8240 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enable handling of spatial location calculator configurations across different modules
move component - detection into separate component directory a it be necessary for the godmode .
updated the ` isEmpty ` method to return a correct value based on the root node in ` TreeTrie ` to ensure accurate empty checks for nodes in the trie implementation
updated foreground and background methods in AttributedStringBuilder to use variables directly to improve code readability and maintainability by reducing complexity
solr - 10783 : turn off fingerprint during sync when solr . disableFingerprint be set to true
modified the visibility of the moveFunds method from package - private to public and updated parameters to allow access to the method from other classes for better functionality
updated MongoTemplate and MongoTemplateTests to include a BeforeConvertEvent setup with proper context management to enhance event emission capabilities and improve test coverage for database operations
test ( refactor ) : fix problematic test by use quicktest
- make sure to close the input stream when echo the cli
updated exception handling to use ` ApiException ` instead of ` ApiBag . ExceptionWithErrObject ` to improve compatibility with Solr ' s ApiException functionality
removed unnecessary line breaks in OptionsParser . java to improve code readability and maintainability
[ # 7390 ] instructorfeedbackaddactiontest : fix typo in log message ( # 7391 )
fix codacy - error and remove unnecessary declare parameter
remove the step from displaytextvirtualdatapoint since it ' s now mutable
updated logging messages and introduced shared and exclusive lock handling in PostgreSQLReadWriteLocksTest . java to improve clarity of logging and ensure exclusive locking functionality during document operations
removed the redundant call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline the scheduling process by eliminating redundancy
simonstewart : fix test for i be more complex and faster
replaced static Deque with a ThreadLocal Logger instance for better logging management to improve thread safety and encapsulation of logger state management
made the convertToCompilationUnit method private and updated test cases using MockitoJUnitRunner to enhance encapsulation and improve testing capabilities
modified type checking and boxing behavior for better handling of primitive types to ensure type compatibility and prevent errors related to unboxed primitive types
updated the task view orientation handling in RecentsView . java and modified the initialization method in TaskView . java to ensure proper orientation management for task views during updates
hbase - 24975 fix flaky test testflushfromclient . testflushfromclient . testflushfromclient
fix rollback when a contract be move away from the cache
updated balance calculations to use dynamic properties instead of a fixed value to ensure accurate representation of asset issue fees for better resource management
refactor RealisticRenderStrategy to use URI for texture caching and update related methods to improve performance and maintainability of texture management based on a given URI
refactor raster creation and composition in Blit . java and create a new Bug7049339 . java file to improve code clarity and ensure correct graphics handling for composite contexts
added functionality to retrieve string width based on unselected styles in Label and updated related classes to improve text rendering by accounting for unselected text styling options
updated ArrayList initialization to specify initial capacity and improved action list handling to optimize memory usage and enhance readability of the code
removed the unused flags parameter from multiple method signatures in ShadowApplicationPackageManager to simplify method signatures for improved readability and maintainability
refactor PingRequestHandler to improve code readability to enhance maintainability and simplify future updates
move the test for device that do n ' t support muxing .
[ tradfri ] improved warning log on old firmware
fix javadoc warning of ajaxelementlocator
updated layout logic to replace InlineLayout with DefaultLayout and modified display condition to include " table - cell " to enhance layout handling for better handling of cell displays
refactor JsonDecoder logic to improve handling of token tokens and add a new test for unordered fields to enhance code efficiency and ensure correct deserialization of JSON data with ordered elements
fix invalid listener use in blockcache . tryadder
disable savepointtestbase . testsavepointandsavepoint until fix
( chore ) camel - mvel : disable test for now
changed fields from non - final to final in ContextRegisterListener . java to ensure immutability and prevent accidental reassignment
refactor ObjectHashSet initialization to allow for configurable caching behavior to enhance flexibility in iterator behavior based on user preferences
added default byte calculation and updated conditional checks in SparkReduceRecordHandler and ReduceRecordSource classes to ensure accurate boundary checks for batch size and reduce record source
changed context modes from mode _ WORLD _ READABLE and mode _ WORLD _ WRITEABLE in AppSettings and UpdateUtils to improve flexibility in managing data access within the application
updated logging messages to clarify close ( ) behavior and added handling for abort ( ) method to enhance error reporting and ensure proper connection management during closure
fix workspace animation for accessibility
reduce log level of some malformed edit message from warn to debug .
update scope handling in UaaTokenServices and enhance test coverage in UaaTokenServicesTests to ensure proper expiration date persistence behavior for different token scopes
refactor AvailableJDBCDrivers to use Java ' s built - in Java classes and update logger initialization to improve code organization and enhance logging clarity by using Java ' s built - in utilities
refactoring : move executablecommand to kie - api ( # 901 )
( chore ) camel - jms : clean up reference to datasource in test
added padding getter methods to CellLayout and modified bitmap creation logic in Launcher to improve readability and maintainability of padding calculations for different orientations
refactor cands initialization to handle empty values conditionally to improve robustness by ensuring cands are only assigned when the provided string is not empty
refactor SamlMetadataUIParserAction to use Action type and improve null safety for flow handling to enhance code clarity and prevent potential null pointer exceptions in the SAML metadata processing
added a method to check opening LDAP ports with a specified port to ensure proper port configuration and improve test reliability
[ hotfix ] use 0 a a shutdown hook for executorservice
updated URL handling and logging in Fetcher and HTMLMetaProcessor classes to improve URL processing logic and enhance logging clarity for redirect states
updated SolrQuery in TestSpellCheckResponse to use " name : samsang " instead of " * : * " to standardize spell check query format and improve clarity in test assertions
refactor console initialization to use Karaf Console API based on argument length to enhance compatibility with newer Karaf Console features
* blender loader : fix a bug that cause a crash when load a blender file without blender information
added a file filter to exclude temporal report directories and updated file copying logic accordingly to improve performance by reducing unnecessary file handling during data copy operations
renamed test methods to use parameterizedTest for consistency and clarity to improve code readability and maintainability by separating test methods
pdfbox - 2852 : remove unused private method , a suggest by michael klink
applied patch from oliver jowett to improve error message when form error be not bind to the expression
removed unnecessary print statements from JoglInput . java to clean up the code and improve readability
added a flag to allow extracting private fields and updated the method call in FieldSupport to enable flexible handling of private fields during field extraction
[ hueemulation ] fix the device name issue in web data handler ( # 1588 )
refactor constructor retrieval to use MethodHandles for improved compatibility with Java 8 to enhance constructor resolution for better compatibility across different Java versions
deprecated the weights method and updated its usage in ZParams and SortedSetCommandsTest to improve type safety and clarify the method ' s purpose for better code maintainability
added a Database parameter to the writeCustomHTML method across multiple writer classes to enable custom database management when writing custom HTML files
removed unnecessary type casting for keys in BTreeMap . java to improve code clarity and reduce unnecessary type casting
updated exception handling to throw specific exceptions for BalanceInsufficientException and InvalidProtocolBufferException to improve error handling consistency and provide clearer error messaging for insufficient transactions
bugfix # 205188 , write zero to memory only if profiler heap zerofile be enable
updated message handling to use Scope for better clarity and functionality to enhance error reporting and improve user feedback during Liquibase Pro license checks
reduced the size of the buffer from 14 to 13 elements in HortonworksEncodedSchemaReferenceStrategy . java and updated the writer to always use generic records to optimize memory usage and ensure correct data handling
added import statements for core . ChunkListener , ItemReadListener , and ItemWriteListener in multiple Java classes to enable handling of new batch processing processes in the batch framework
refactor code formatting and improve readability in AbstractProviderModule . java to enhance code maintainability and ensure proper handling of null properties
updated print statement to use ` title ` directly instead of ` doc . get ( " title " ) ` and simplified method call in ` SortedSetDocValuesFacetCounts ` to improve code clarity and efficiency by eliminating redundant calls
8153933 : remove intermittent key from timezone / bugfix / test7005594 . java
polish ` ` fix typo in resource validation error message ' '
updated TopKRollupPhaseOneJob class to improve handling of top - k rollup processes
server : fix npe while list virtual network in basic zone
fix event notification not fire in case of rotation .
add iterablesubject . iteratesover ( iterable < t > ) overload to support list
camel - 9833 : add camel - http to allow to turn off map by default
added tests for native query counts in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the count function correctly accounts for various edge cases
updated BarChartActivityMultiDataset to modify value generation logic and introduced a new LargeValueFormatter class to improve random value generation quality and streamline label handling
replaced hardcoded string representation for ' z ' with a constant for INNOCUOS _ CHAR to enhance code readability and maintainability by using a defined constant instead of hardcoded strings
remove @ SuppressWarnings ( " argument . type . incompatible " ) from Platform . java to eliminate unnecessary warnings for incompatible arguments
fix : fix typo in before register changelog entry
added a TODO comment to the NullAssertionValidator class to address the auto - generated method stubs
added import for RuleKeyAppendable and updated rule key appending logic to enable handling of appending rules in the build system
added system profile directory creation and adjusted test methods for better configuration management to ensure that the system profile directory is available and facilitate proper setup and teardown processes
swapped the instantiation of the DefaultThreadFactory to use the TESTCONTAINERS _ THREAD _ GROUP directly to improve code clarity and reduce redundancy in thread factory creation
refactor inMessages handling to use a separate method for obtaining message counts in HttpChannelOverHTTP and HttpReceiverOverHTTP classes to improve code clarity and maintainability by centralizing message counting logic
added " image / * " attribute to the element in ImageFileInputDialog . java to enable handling of images in the dialog
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and changed header handling to improve transport performance and clarity in client initialization
updated the formatting of witnesses output in ForkController . java to enhance clarity of logged witnesses by including the class name of the witnesses
added a new file ` APITests . java ` to test handling of null pointer and empty URLs to ensure that the application handles null URLs correctly and handles them appropriately
remove support for handling generated source paths in IntelliJ project configuration to simplify codebase and improve maintainability
added a method to construct a wildcard pattern with any character delimiters and modified wildcard handling to enhance wildcard processing to handle special characters correctly
added validation checks for invalid aliases in MapWork processing to ensure proper validation and prevent errors for more than one TableScanOperator aliases
fix build after upgrade to mockito 3.11 . 0
added error handling for setting values in TinyGFirmwareSettings . java to ensure that firmware settings are correctly set and logged , improving robustness
simplified import statements and updated the ` getLangs ` method to return a set of strings instead of an array to enhance code readability and prevent potential null pointer exceptions
reformatted import statements and modified assertion method in LazyTraceScheduledThreadPoolExecutorTests . java to improve code readability and ensure correct validation of tracer properties
hbase - 7170 takenapshothandler should check if the table be available before take snapshot ( vladimir rodionov )
[ wasm ] add isnull support to implement finally , and fix # 1199 .
added a test to verify that the explorer should have a modified HTTP RPC endpoint to ensure the explorer correctly updates the HTTP RPC endpoint for improved performance
added a volatile boolean field ` isSuspended ` and modified logic in the ` Thread ` class to handle thread suspension to ensure proper thread state management and prevent illegal state exceptions during thread termination
updated Javadoc visitor classes to replace ' Author ' and ' Since ' with ' Hidden ' and ' SerialData ' implementations to enhance Javadoc handling and improve clarity in the representation of reference elements
camel - 8563 : fixed the npe of camel - spring on camel 2.7 . x
removed multiple @ Override annotations across various security - related classes to clean up code and improve readability by enforcing best practices
added module import handling and modified eval method to use static fields to enhance module management and improve test accuracy for enum expressions
update language declaration to use http : / / www . w3 . org / 2001 / XMLSchema to ensure compatibility with HTTP protocol
add content description handling for badge items in BubbleTextView to ensure accurate representation of app notifications based on badge status
added MouseWheelListener to manage mouse wheel movement to ensure correct direction of mouse wheel interactions in the scroll pane
# 364 - fix for issue with absolute positioning in pdfboxrenderer
rename currency pair variables and their references from BTC _ ETH to XRB _ BTC to improve clarity and consistency in currency representation
- get rid of generic location in vacuumview , use string literal to avoid classcastexception .
removed redundant currency assignment for DSH and QTM in BitfinexAdapters . java to simplify code and improve readability by always returning the symbol
replaced Set with ImmutableSet and introduced new classes for handling default values in the JsonFormat class to improve type safety and maintain default value output during message processing
remove fix for http : / / issues . apache . org / jira / browse / amq - 3855 - this be already fix in jacksonxmlformatmapper
updated variable names and logic in VirtualThread . java for clarity and consistency to improve code readability and maintainability by using descriptive constants instead of string literals
refactor DirectoryTaxonomyWriter to separate category term initialization and cache handling to improve code clarity and ensure proper cache management
refactor VetoableChangeSupport class for improved clarity to enhance code maintainability and readability
modified the calculation of the owner ' s height by adjusting its value to ensure proper positioning by accounting for the trailing space
pdfbox - 2852 : remove throw of invalidpasswordexception , a suggest by valerybokov
add unit tests for setShortSupportMessage and setLongSupportMessage methods in ShadowDevicePolicyManagerTest . java to ensure correct handling of security exceptions in the device policy manager
add close button button in web , for default help button .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory files to improve code organization and maintainability
refactor code to use ThreadHelper for better readability and introduce new wait mechanisms to enhance code clarity and ensure proper handling of controller state transitions
updated the logic for updating the last update preference in SwingStartup . java to handle exceptions more accurately and maintain consistency in release status handling
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5055 - add option to disable comment in migration
updated usage syntax by replacing ` < player > ` with ` < player | * > ` in multiple Java files to improve clarity and syntax in usage instructions
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused components to streamline the codebase
camel - 14284 : camel - core - option should use camelcased name instead of camelcase to be consistent with the camel dsl .
fix testngcontenthandler . testparallelprocessing by disable processing of class in parallel mode
http : / / issues . apache . org / jira / browse / amq - 4373 - avoid npe when register first when version broker be not active
refactor : remove static import of enums in ctmethodimpl . java ( # 2588 )
added serialVersionUID to multiple Java classes to ensure proper serialization compatibility across different versions
renamed DeadLetterEntry and JpaSequencedDeadLetterQueue classes to maintain consistency in naming conventions
updated the ShibbolethCompatiblePersistentIdGenerator to allow customizable separator for SHA keys and improved test coverage to enhance security by ensuring the correct string encoding is used
updated parameter handling for system actions to improve null checks to ensure robustness by preventing potential NullPointerExceptions
added a new file ` Person . java ` in the ` org . apache . maven . it0074 ` package to provide a structure for object representation in the Maven framework
remove deprecate fbutilities . getlocaladdress ( ) usage in camel - cli
bug fix : fix case - sensitivity issue in a jdk7 client
added assertions to verify the presence of timeColumn , timeUnit , and totalDocs in the metadata to ensure that the metadata accurately reflects the expected data after processing
updated the color import and changed the foreground color used in SimulationPlotPanel to ensure compatibility with the latest OpenRocket API and improve color handling
added a new asynchronous call to disconnectEmitters to ensure that the disconnect event is triggered after a subscription
camel - 4806 : fix @ scopehierarchy annotation type mismatch .
danielwagnerhall : fix visibility check for element in parent overflow . fix issue 2918 .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
resolve http : / / issues . apache . org / activemq / browse / amq - 2560 - allow user to specify a custom jndiregistry
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
remove library . hasfunction , it be not use anymore .
replaced the variable ` enabledCiphers ` with ` result ` for clarity and consistency to improve code readability and maintainability by using a more descriptive variable name
[ beam - 4837 ] [ table - planner - blink ] make beamrowstostorageapi bigquery timestamp type conversion to timestamp
replaced null checks with requireNonNull method for buffer and user credentials to simplify code and improve readability by reducing repetition
reuse default value from inputmap instead of input field ( # 2918 )
added bounds checking for row and column parameters in FlightConfigurablePanel . java to ensure valid bounds on the table ' s rows and columns
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure that the scroll selection is visible when necessary
[ java ] unnecessarylocalbeforereturn : fix false - neg with nested member
replaced the singleton scriptEngineManager with a local scriptEngine variable and updated its initialization logic to improve code readability and simplify the management of the script engine
[ zeppelin - 5115 ] fix distinction between 0 and 1 - based distribution of euclidean distance similarity .
avoid backup an sstables when there be no reference to it
refactor relativize method to accept two Path parameters and update tests accordingly to improve path handling and ensure correct relativization functionality for empty paths
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper initialization and formatting of decimal values
fix test which fail from time to time on window .
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` to ensure proper formatting of hexadecimal string representation
rename ErrorHandlerController to Error403Controller and create new Error404Controller files to improve clarity and organization of error handling controllers in the application
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal . java and WindowsTerminal . java to ensure that terminal resets only when necessary
updated import statements and modified the trigger patterns for ` $ collection . toarray ( ) ` in ` Tiny . java ` to ensure compatibility with new array structure and improve code clarity
fixed - concurrentmodificationexception in connectionpool # acquireconnection ( )
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` for consistency to ensure clarity and uniformity in naming conventions
pdfbox - 4892 : check for existence of idtree in destnames , a suggest by valerybokov
improve ` ` fail to create ' ' message to include classloader
give test a little more time for slow machine
updated page type handling in HomeFragment to conditionally set extra page based on user preferences to improve user experience by allowing more than one extra page for the application
fix issue with image in android port be break in some case .
update to parboiled 1.4 . 2 and remove suppression for subnodes
lucene - 7698 : fix hdfparser handle ( # 769 )
deleted the file TestDocInverterPerFieldErrorInfo . java to the test file is no longer needed for the current implementation
added shell command to input key event in AbstractLauncherUiTest and removed the assertion in LauncherInstrumentation to enable keyboard input functionality while ensuring the device is locked
added JSON serialization functionality to the filenameToUrl map in FileDumper . java to enable proper handling of file paths with special characters in URLs
bugfix # 253737 - reset result notified flag after close an profilerserver
bugfix : fix a bug that cause blender get stick when an old blender file be load .
updated assertion to use " application " instead of " application : " in multiple test files to ensure consistency in application identification in unit tests
updated the randomizer test data from " 9781797745008 " to " 9781797845005 " to reflect a change in randomness to " 9781797845 " for the isbn randomizer
fix wrong ringtone notification sound on android 8 device
added a method to report loop counts in the RootNode class to enable better tracking of loop counts for the calling target
added finalization of cluster version in the FinalizeUpgradeAction class and updated cluster entity merging in ClusterImpl to ensure proper stack version management for clusters during upgrades
bug 14567 : fix listregionidandstate search by regionid ( # 1588 )
removed redundant call to streamManager . open in ItemOrientedStep . java to streamline code by eliminating unnecessary method invocation
added a new file ` CountedLoopProblem . java ` that implements a random integer loop to report the number of loop iterations and report an error when an unexpected result is encountered
remove unused parameter from signature of compilertovm # executecompiledmethod and compilertovmimpl
[ gr - 26354 ] harden calculation of jlong : pending _ failed _ speculation for jdk9 support .
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities and return value in the transformation process
added a new method to format response points in the FeedbackConstantSumQuestionDetails class and updated test cases accordingly to enhance readability of response points in test results
removed call to applyToActivitiesIfAvailable ( this ) in BaseApplication . java to streamline the application launch process by avoiding unnecessary call
added thread management and stack dumping functionality in CloseRace . java to improve error handling for child threads that do not finish gracefully
updated return value to use intValue ( ) for consistency to ensure proper handling of integer values in the return statement
updated the arc size calculation and adjusted height based on width to improve layout accuracy by incorporating dynamic adjustment of button sizing
update image dimension from 768 to 640 to improve image sizing accuracy and appearance
disable shrink - whitespaces - in - sql by default
refactor waitForStateTransitionToEnd method for improved clarity and consistency in AbstractLauncherUiTest and WorkProfileTest to enhance code maintainability and reduce redundancy in state transition logic
added multiple configuration classes into the DefaultMultifactorAuthenticationProviderResolverTests and related test files to standardize imports and improve code organization for better maintainability
volume : fix volumeparseexception when read volume large than 4xreadlong
camel - 8205 : camel - http : improve httpproducer with header code a suggest by michael klink
refactor the boot classpath creation to use a dedicated boot classpath variable to improve clarity and maintainability of the code by separating the boot classpath creation logic
add new mediumscriptscopeprovider for support medium management ( # 3221 )
added methods to get and set a layer manager in AnimComposer and updated animation logic in AnimEvent to improve layer management functionality and ensure correct animation state management
added a check to return early if the queue is empty in DeferredHandler . java to avoid unnecessary processing when the queue is empty
added null checks and improved exception handling in MapRecordProcessor and TezProcessor to enhance error handling and ensure runtime exceptions are properly logged during runtime
replaced ` center ` variable and its usage with ` toVector2D ( ) ` for better vector handling to improve clarity and functionality of center and maxY calculations
replaced static imports of JUnit ' s assert statements with JUnit ' s ExpectedException rule to improve test readability and leverage JUnit ' s built - in exception handling functionality
added null check for subqueries in QueryExecutorImpl and introduced a test for multi - execute in StatementTest to enhance robustness by handling potential null values and verify functionality through unit tests
do n ' t log at info if customization happen on environment
added an additional parameter ` rctag ` to the API request to enable edit content in the ReviewInterface
update test cases in Test . java to improve test coverage for critical functionality
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in variable naming
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
added a method ` writeSectionDefinition ( ) ` to the ` RtfDocumentHeader ` class to enhance the document ' s section definition writing process
added a check for large jump detection and updated a condition in the GpsLoggingService to improve accuracy of jump detection and logging for better debugging
removed debugging print statements from TableCellLayout and TableLayout2 classes to clean up the code and improve performance by reducing unnecessary output
doc : generate sample code in the java microgenerator ( # 320 )
replace boolean fields with object references for rootNameFn and sourceFilterFn to improve memory management and prevent potential memory leaks
simplified the addition of elements to the ` data ` and ` added ` lists by removing binary search to improve performance and reduce unnecessary searching
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and modified related code to simplify theme management by removing unnecessary ` ThemedPreferenceActivity `
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests to reflect the correct usage of the variable in the value generation process
reformatted assertion to improve readability in FST . java to enhance code clarity and maintainability
added an assertion to check the existence and file type of the security policy to ensure that the security policy is present and is a file
camel - 14263 : camel - olingo2 - avoid reflection configuration .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to provide more time for operations to complete before proceeding
removed the exception parameter from the logger message in MongoPersistentEntityIndexResolver to simplify logging by reducing unnecessary details
added command - line option to publish image by http to smack .
camel - 2576 : camel - netty - updated to use the new netty api for a good performance .
fix # 2274 : allow dot in url pattern ( # 2274 )
jetty - 1378 remove the setproperty that do n ' t exist and be n ' t need anymore .
added handling for null string values in CSVRecordReader and its configuration to enable proper formatting and formatting of null values in CSV data output
added LiquibaseService import and annotation to multiple connection classes to enable integration with Liquibase service handling in the connection layer
updated the type of ` aggregateNameScope ` from ` J . CompilationUnit ` to ` JavaSourceFile ` to ensure compatibility with a broader range of Java source files
[ smarthome ] fix topic matching ( # 4349 )
updated exception handling imports from BeanCurrentlyInCreationException to BeanCreationException to improve clarity and accuracy in exception management
updated SolrXmlConfig to replace " zkCredientialsProvider " with " zkCredentialsProvider " and refactored related code to improve clarity and maintainability of the code
fixed mana tablet not show damage properly . close # 389
added assignment of identifier collection to mCurrentCallEvent to ensure the correct collection is used for call events
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter to clean up the code and improve maintainability
changed the executor string format from a percentage to a string in ScryptUtil . java to standardize the format of the executor for better readability and maintainability
renamed class ` GeneratedCode ` and updated its references to improve clarity and maintainability of the code
add an additional safety check to the assertion in TypeDefinitionRegistry . java to improve code robustness by ensuring that the assertion fails gracefully when the definition is not null
hide the share with me icon in local file list view to improve user experience by removing unnecessary content
update HTTP links to HTTPS in multiple classes to enhance security by enabling HTTPS access for Bootstrap links
updated method signatures to enforce non - null constraints and modified null handling for headers to improve code robustness by ensuring required headers are not null and to avoid potential NullPointerExceptions
updated assertion to include additional context about document count and segment count to improve debugging information for better troubleshooting
deprecate multilayer perceptron in favor of networkparameters
added null check for context in CrawlerSessionManagerValve and enhanced test cases for context awareness to improve robustness of context handling and ensure correct context retrieval in unit tests
modified the ` getJspApplicationContext ` method to use a privileged action if security is enabled to enhance security by ensuring privileged actions are executed when not enabled
replaced the calculation of initializable length based on minimum and maximum values in RocketComponentConfig . java to improve accuracy in component configuration handling for fin sets
added a singleton binding for NonceService in the OpenIDAuthenticationProviderModule to enhance security by ensuring the NonceService is in a single - scope environment
fix a bug where non - existing link be not be move to the parent
removed redundant HTTP method parameters and improved error handling in the SpringCloudPlugin class to enhance code readability and maintainability by simplifying method calls
reduce publish delay time from 100ms to 500ms in RetrievalBlockingMessageStoreTests to reduce the frequency of asynchronous operations in the store
implement a feature to always override the shift codes in the keyboard to improve user experience by allowing controlled shift codes
[ flink - 23792 ] [ runtime ] fix the problem that ' isleader ' method should only check if it ' s actually leader of the cluster cluster leader
fixed formatting in the conditional statement in NearbyActivity . java to improve code readability and consistency
modified identity filtering logic to check if the identity is a reference instead of using a null check to improve clarity and avoid potential null pointer exceptions
replaced AbstractCommandOptions with a boolean noop parameter in multiple classes to simplify the instantiation process by directly indicating if no cache is available
fix test which randomly fail on slow ci server
updated argument handling in PatchExtensionMethod to preserve original arguments before creating a new one to ensure correct array allocation for method calls
replaced Map with Set for managing raw native libraries to improve performance and simplify library management
add sequence to default channel and ignore failure ( a per http : / / issues . apache . org / activemq / browse / amq - 2655 )
add support for x509 certificate view ( # 4452 )
updated the logic for assigning the first reader when no readers are provided to ensure that the correct reader is used when there is only one reader
replaced the custom MaxFloatFunction with a new Double2Parser for handling max and min values to enhance functionality to support new edge cases for numerical document values
removed redundant null check before returning the current container to simplify code by always returning the current instance instead of null
removed IOException from the Token method signature and changed variable declarations in Highlighter and SpanGradientFormatter classes to simplify error handling and improve code clarity
add uuid to user list in ' createuser ' command
updated FlowBuilderServices dependency in CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use conditional bean retrieval to improve flexibility and configurability of flow builder services based on application context
modified the connection management and SQL commands in WriteJdbcPTest . java to enhance connection handling and improve resource management
remove default editor . laf , because it be always the normal font
replaced calls to getDesiredStateEntity ( ) with desiredStateEntity for consistency to improve code readability and maintainability by reducing method calls
modify calculations for dX and leftMargin in FloatingTaskView . java to simplify margin handling based on RTL support
added a conditional check in RootFolder . java and updated the status line in NavigationShareTab . java to improve code clarity and provide a user feedback when the operation fails
bugfix # 183640 , no need to increment threadid a the result of getthreadids ( )
allows for change to default perspective after the perspective change ( eg view . getalltools ( ) )
added NetworkAddressChangeListener to HomeKitImpl class and improved error messages to enhance network management and clarity in log messages
hive - 21975 : fix the unstable testhdfseventsinkonminicluster . testleaserenewaltimes ( ) failure in testhdfseventsinkonminicluster . java ( david mollitor review by krisztian kasa )
added a linkStyle attribute to the CxxLibraryDescription class to allow optional configuration of the prefix header and link style
fix nullpointerexception when no message be set ( # 1421 )
modified the ` nextID ` variable to be volatile and updated the ` getSize ` method to ensure thread safety and improve performance when accessing shared resources
http : / / issues . apache . org / jira / browse / amq - 4568 - fix test regression , ensure there be no slow sync case
updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , ` FileListableLinkerInputArg ` , and ` SourcePathArg ` classes to implement the ` HasSourcePath ` interface and provide methods to retrieve the source path resolution to enhance functionality for handling source path resolution and improve code structure
8299494 : [ testbug ] remove unnecessary stringbuffer . append call in java . util . arrays
fix bug with ordinal id field not be set properly in testOrdinalmappingatomicreader . testordinalmappingatomicreader .
8074032 : instant . ofepochmilli ( millis ) . toepochmilli ( ) can throw arithmetic overflow in toepochmilli ( )
fix crash when read buffer attribute with non - ascii character
added block update script functionality to the CopyPaste class to ensure that block scripts are handled correctly during paste operations
8191818 : c2 : assert ( b - > is _ power _ of _ 2 ( ) ) fail : must be power _ of _ 3 ( int )
fix concurrentmodificationexception in audio processing
camel - 8257 - fix parse error with scale token use in camel - sql - stored .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current ownership of the software
refactor console initialization and version printing logic to enhance code readability and maintainability while enhancing version command functionality
replaced the existing token validation logic with a new implementation using EncryptionUtils to enhance security by generating hash values for improved token validation
add check for eofexception to make sure we throw an appropriate error when call read ( ) .
add test for defaultgroupprovider # deletemember , which fail silently if a non - existent member exist .
( chore ) camel - aws2 - processor : remove superfluous object array
deleted the V2ReplicationProtocol . java file to no longer needed for the current replication protocol implementation
replaced instances of ` ImmutableSortedSet < BuildRule > ` with ` SourcePath ` across multiple classes to support source path management for improved clarity and functionality
added a new ` ConstructorArgsDemo ` and ` StrictDemo ` classes for handling constructor arguments and finalization to provide a standardized way to manage and verify the secret state in the application
geot - 6263 : memory leak in directtemplatefeaturecollectionfactory in case of out of memory
fix an off - by - one bug in the assert condition . contribute by gregory chanan .
added null check for indexNumber in ItemRowAdapter to ensure robustness by preventing potential NullPointerException
- fix mapview ancestor filtering ( no functionality change )
ggb - 1844 check if width be big than 12 to avoid increase on large android
updated change log parameter comparison to use ` . equals ( ) ` and added a test for handling non - global properties in inner files to ensure correct comparison of change log parameters and validate functionality through unit testing
changed the visibility of the loggers map from static to final to ensure that the loggers map cannot be modified after initialization
modify return statement to include a method call to ensure that the return value is correctly initialized from the plot object
camel - 10568 : log a warning if upload directory do n ' t exist or have already exist ( # 10698 )
added a sendStatus200 parameter to multiple classes and updated related methods to handle status 200 responses to improve handling of HTTP status responses for better performance monitoring
space : do n ' t cut off multi - line comment with empty line
added file type management logic using BuckFileTypeManager and UnknownFileType to ensure consistent handling of file types in the application
replaced multiple individual import statements with a wildcard import and updated the return type of multiply methods from ToLong to ToInt to simplify import statements and ensure consistency in data type handling
added handling for unsupported RTM OS version and improved error messaging in the test cases to ensure compatibility and clarity regarding unsupported RTM options on different operating systems
format adjustment of test code for improved readability to enhance maintainability and adhere to coding standards
fix styledplayerexception javadoc ( # 1838 )
fix osgi unit test after openhab - > thing - core change
fix variable name in guest host reflective call check .
added context management and reset functionality in FontsContract using Robolectric ' s Reflector to ensure proper context is set for FontsContract during testing
added timezone handling and adjusted time calculations in TimeGranularity and PinotDataSourceMaxTime classes to ensure accurate time representation and improve code clarity regarding time zones
introduced null checks for _ try . getFinally ( ) and updated control flow handling logic in ControlFlow . java to improve robustness and prevent potential NullPointerExceptions during control flow transitions
updated assertion checks in assertEquals for better error handling to ensure better feedback when arrays do not match sizes
[ scene2d ] fix slotitem # isimplicitlyinaccessible ( ) not return false
modified index calculation in MeshBuilder . java to correct the bitwise operation to ensure correct handling of index values within valid range
nifi - 3992 : remove unused controllerserviceprovider from standardprocessscheduler ( # 5992 )
added processing of Java annotation processors in KotlincToJarStepFactory to enhance support for dynamic APKs in Kotlin library processing
updated the scroll delay constant and simplified page navigation logic in the DragController and PagedView classes to improve user experience by reducing unnecessary animation delays and streamline page navigation logic
reload workspace when the shortcut permission change be : 95f3d6ba2c
added handling for HISTORY _ SEARCH _ BACKWARD case in ConsoleReader to improve search navigation functionality
added null check for core name in CoreAdminHandler to ensure proper handling of null values to avoid potential NullPointerExceptions during core reload
added marker selection functionality to the NearbyMapFragment to improve user interaction by managing marker display and bottom sheet behavior
added error handling for Throwable in FileSyncAdapter . java to improve robustness by gracefully handling errors during file synchronization
refactor the output handling in TestMemoryAwareness to use OutputAnalyzer for better readability to improve code clarity and handle potential runtime exceptions during the Docker test execution
removed unnecessary refill call and improved feed handling logic based on application settings to enhance code clarity and ensure only non - urgent feeds are processed based on application settings
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
updated package type handling to use ` Locale . US ` in ` AndroidBinaryDescription ` and ` AndroidBinaryBuilder ` to ensure consistent behavior across different locales when converting input to uppercase
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure consistency in MIME type usage across the application
updated configuration file reference to use the singleton instance to ensure consistent configuration management across the application
updated the waitUntilReadyAndTimeout method call to remove the " sleep 5 " argument to simplify the timeout duration for better responsiveness
replaced IntMath with LongMath for group count checks and updated the handling of negative values to improve precision in grouping ID calculations and prevent overflow issues
added multiple instances of ` GraphicsEnvironment . isHeadless ( ) ` with ` throws new HeadlessException ( ) ` in ` mmm Toolkit . java ` and ` ppp Toolkit . java ` to improve error handling for headless graphics environments
add a check to ensure the current recipe matches before proceeding with the furnace to improve security by ensuring only valid recipe cans smelting
jbrules - 2848 : make move thread count configurable .
# 780 - fix # 780 search do n ' t handle incorrect resourceloader property
db : add test case for issue # 582
[ native ] add more e2e test for bigdecimal overflow
refactor LoadingCache class to improve cache management logic to enhance performance and maintainability of the caching mechanism
pmd : fix # 1095 false positive for constructor constructor
alexeibarantsev : catch staleelementreferenceexception in expectedconditions . java to fix issue 453
refactor ViewExistsPrecondition and JdbcDatabaseSnapshotGenerator for improved view existence checks to enhance error handling and maintainability by consolidating view existence checks
updated DOMUtil . java with new import statements and class names to enhance code readability and maintainability
added translation calculations and a new method for logging matrix transformations in TaskViewUtils and Utilities to enhance visual scaling effects for components in the user interface
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags and RotationHelper classes to disable the fixed rotation transition by default
added a method to walk FST arc in TempFSTTermsReader and modified doc frequency handling in TempTermOutputs to enhance efficiency in processing arc relationships and avoid redundant document frequency updates
updated ` create ` methods to include ` SolrQueryRequest ` as a parameter across multiple factory classes to enhance functionality by integrating Solr query request capabilities
updated trigger syntax and added assertions in SingleTableMySQLTriggerTest . java to ensure correct handling of null values for post content and announcement validUntil queries
refactor comparator assignment in FieldValueHitQueue to use a dedicated setComparator method to improve code clarity and maintainability by centralizing comparator assignment logic
phoenix - 900 fix test failure with quote ( s )
added Spark initialization await to the init method in RequesterTest . java to ensure proper synchronization before Spark processes
added functionality to manage and retrieve total storage pool properties in DynamicPropertiesStore . java to enhance functionality for managing storage usage within the application
added handling for development builds in AssetsController and updated method signatures for better resource loading to improve error logging for file stream issues during development
updated MapMarksManager to use mapMarkKey for checking key existence to ensure the correct mapping of market keys in the map
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance flexibility in handling token rewriting for default values
removed ` throws IOException ` from method signatures in JavaCompiler and JavacProcessingEnvironment to simplify method signatures and manage exceptions differently
fix for file not find exception when start new urlclassloader
added a check for the " AppVersion " property and modified equality checks for image formats to ensure correct handling of the " AppVersion " property and improve string comparison accuracy
[ somfytahoma ] fixed npe when try to start an http client ( # 10356 )
( chore ) camel - core : disabled flaky test on github
clean up the code and make it clean up the test case
add check for nan return value in dynatraceexporterv2 ( # 3251 )
removed a sessionId reference from sessionIdToSessionInfo to ensure the session information is cleanly removed before usage
added hostname setting for all alert types in HeartBeatHandler to ensure valid host names are used for better audit handling
409403 fix illegalstateexception when spdy be use and the response be write through bufferutil . writebytes
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . kie . xsd
added tests for media player seeking behavior in ShadowMediaPlayerTest and implemented seekTo method in ShadowMediaPlayer to ensure accurate functionality of seeking in different SDK versions
rename ` createTask ` method to ` createThrowingTask ` across multiple classes to improve clarity and accuracy of method naming
added empty border for the close button when Aqua LAF is enabled to improve visual consistency and appearance of the close button in the application
updated request handling in TSPTimeStampService and improved test assertions in TestSignatureInfo to enhance connection management and ensure correct validation of signature validity
added new overloaded methods in XStreamUtils for custom XStream creation with ClassLoader reference to enhance security by enabling XStream security with specified ClassLoader references
added error logging for non - generic types and modified diamond application logic to improve error reporting for generic types and ensure diamond application operates correctly
[ calcite - 4215 ] add comment about the meaning of targetType in reloptutil
updated validation logic for setting IDs and values in Http2Settings . java to ensure correct handling of unsigned values and avoid potential errors
deleted the file Issue664Test . java to the test file is no longer needed for the current implementation
removed exception handling for IllegalStateException in SessionsPoolTest to ensure proper error reporting when operations are performed on a disposed session
apps - 3939 start jsonwriter ' s object ( ) and end object ( )
change the method to set the selected index using selectedIndex . intValue ( ) instead of a manual method to improve code readability and ensure proper handling of integer values for the selected index
added a check for manual unstashing in TaskbarStashController to ensure unstashing is only performed when the current state is manual
camel - 3674 : dump route xml a false is no longer need since it be always available in the xml .
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for wait time to improve flexibility in event matching by allowing conditional execution of the event without waiting for expected events
added a new file HeaderFixer . java to process and modify header file content to provide a header file for better file management in the tool
added functionality to broadcast a first load complete action in the launcher to enhance user experience by notifying when the first load is completed
deleted the file SuperJumperAndroid . java to the functionality was deemed unnecessary for the current project
update return value from true to table . isDistributed ( ) to ensure correct identification of distributed tables
removed KeyValuesProviderAware and ObservationConventionAware interfaces to simplify the code by eliminating unused methods
fix a bug where a miss block would not be remove from a remap .
updated return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index ` i ` to a long to ensure correct calculations with potential large index values
added caching and comparison logic for Excel format records in HSSFCellStyle to improve performance by reducing redundant computations for data format retrieval
updated the URL in RemoteAuthenticationEndpointTests to include an username parameter to enhance security by filtering users based on their username
updated the condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure the correct input is validated before proceeding
updated stats logging to use new logging approach with container information and workspace to improve traceability of all apps exit functionality
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 825 )
deleted the DeadlockTest . java file to the test class is no longer needed for the current functionality
fix for issue 569 : npe in contentprovider . updatecontent ( )
added an " Open in the browser " menu item to re - opening the JavaScript server to enhance user experience by allowing users to open the server immediately when it is active
added error handling for multiple outputs in the SemanticAnalyzer class to provide clearer error messaging for semantic exceptions related to output specifications
remove null check from test for addentrylistener ( )
fix # 527 ( fix # 527 )
no actual code changes were made to the code logic in ToolbarPanel . java to improve code readability by applying consistent formatting
fix intermittent failure in unit test .
replaced overview mode check with a showOverviewMode method to simplify code logic for better readability and maintainability
added a method to set the destination in the message dispatch to ensure the message is processed correctly with the correct destination
change default return value from MIN _ VALUE to MAX _ VALUE to ensure compatibility with maximum integer values
fix checkstyle issue in scoreboard / nestedarithmetictest . java ( # 780 )
simplify buffer writing in HttpClientRequestImpl by removing unnecessary writer index calculations to improve code readability and maintainability by reducing overhead
updated the artifact replacement method to handle ' solr ' globbing to ensure compatibility with Solr ' s artifact naming conventions
pdfbox - 1480 : simplify code , remove unneeded cast
removed unnecessary debug print statement in ReferenceUtil . java to improve code clarity and reduce unnecessary console output
refactor the visibility predicate to deal with a particular query type ( # 2918 )
added configurations for solidity node HTTP JSON RPC port and configuration dynamically to enable dynamic configuration of the solidity node HTTP server port
added a type check for ` folder ` before removing it as a drop target to ensure type safety and prevent potential ClassCastException
refactor StubJarTest to simplify stub jar generation logic and improve readability to enhance maintainability and clarity of the code by encapsulating stub jar generation logic in a separate method
added new feature comments to StartPageTopComponent . java to improve clarity on setup wizard configuration and manage complex projects using the workflow helper
move flusher to before read data to avoid deadlock
swapped the condition for checking the availability status of a fixture to simplify the logic for determining if the availability status is null
change the return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository to ensure that the application correctly retrieves all user information
modified the handling of idle timeout and failure callbacks in HttpChannelState . java and added a failure listener in HttpChannelTest . java to improve error handling logic and ensure proper callback execution for failed requests
replaced the existing CreateEndPoint class to extend Invocable . NonBlocking to improve performance by leveraging non - blocking implementations
update TABLE _ HEADER _ SEPARATOR regex to support multiple columns to enhance flexibility in parsing table header strings
change return value from 32.0 f to 31.5 f to improve precision in camera position calculation
added a check for the startonbootup preference and modified the URL in Utilities to disable it to ensure that the application connects to the pro version for better compatibility
updated the client secret encoding from 128 to 512 bits to reduce the size of the secret for better security and reliability
updated assertion to specify that the parameter name is null in MySQL and PostgreSQL stored procedure tests to clarify the intended behavior of the assertion for enabling non - null parameters
disable scheduledmethodmetricstest due to racy condition
fix segmentgenerationandpushtaskexecutor so it do n ' t register the pinotfsfactory scheme manually
added locale handling to date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct date formatting for non - English locales
added MetalLookAndFeel to the UIManager configuration to enhance UI appearance by using a dedicated MetalLookAndFeel
added synchronization and refactored ping message handling in the Bot class to improve resource management and ensure proper cleanup during ping operations
[ type : fix ] fix global exception handling ( # 4259 )
updated method names to use " from " instead of " module " for consistency to enhance clarity and maintain uniform naming conventions across the codebase
updated exception handling to catch the CmdLineException instead of a general Exception to improve error logging for command line input issues
replaced deprecated equals ( ) method with isEqualTo ( ) and added a deprecated hashCode ( ) method to throw an exception for unsupported behavior in collections
refactor boolean variables and update popup menu visibility in CustomPlaybackOverlayFragment and ImageButton classes to improve code readability and ensure consistent behavior in popup menu
zoom control : min / max should be 0 not 0
refactor admin user and group handling code to utilize ImpersonationUtil for better maintainability to improve code clarity and streamline user authentication logic
8028270 : files . readsymboliclink call accesscontroller directly so security manager ca n ' t grant the permission
added argument extraction support to the DelegatedClientAuthenticationAction class and updated service resolution logic to enhance functionality by allowing dynamic argument extraction during service resolution
changed the declaration of defaultGroup to be final to ensure immutability of the default group value
fix tile size changer cache not be properly destroy . close # 897
removed redundant calls to removeViews ( ) in InfoLayoutHelper . java to streamline the code for better readability and efficiency
remove feed without subscriptions from database on cleaning of all feed
replaced calls to CoreAuthenticationTestUtils . getAuthentication ( ) with a single variable auth to improve code readability and maintainability by reducing method calls
nifi - 1097 : remove temporary directory usage from filebasedclusternodet firewall test
improve conic ray [ 1 / 3 , 1 / 4 ] : do n ' t quite work when non - zero
reformatted conditional statements in RandomAccessReader . java for better readability to improve code clarity and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotation to fields and MockitoBeforeTestNGMethod classes to suppress unchecked warnings during test execution
refactor CImage to utilize native methods for converting images into separate arrays to improve code readability and maintainability by consolidating image processing logic
hbase - 14810 fix the usage of writablebytearraycomparable with byte [ ] in maprdbfilterbuilder
rename variable ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` for improved clarity to enhance code readability and maintain consistency in naming conventions
replaced manual null checks with ` Objects . equals ` and simplified null comparisons in multiple classes to improve code readability and maintain consistency and leverage built - in utility methods
updated method signatures to use ` resolveClassFromBinaryName ` instead of ` resolveClassFromCanonicalName ` to improve clarity and functionality of class resolution logic
added verification for specific HTML - related properties in NinjaDefaultTest to ensure proper handling of various error and 404 scenarios
renamed the method from ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and adjusted its logic for better clarity to improve code readability and maintainability by distinguishing between scaling and container width updates
adjusted padding height in DetailFragment and updated listViewPositionOffset values in ListFragment to improve layout alignment for better user experience
solr - 6521 : fix forgotten interruptedexception in zkstatereader . getclusterprops
added null checks for field values in HttpFields and implemented tests for empty headers in RequestTest to ensure that fields are not null and validate functionality through unit tests
server : allow static nat service to be use only when there be no static nat rule for the network ( # 5988 )
added calls to resetHeaderScrollingState ( ) and resetHeaderScrollingState ( ) in OCFileListFragment . java to ensure the UI state is cleared before reuse it
fix issue where extra page hang around ( issue 11634172 )
add a fixedWidth flag to the BitmapFont class and adjust the xAdvances calculation accordingly to handle cases where fixed width is used in a glyph
removed the show title parameter from the ChangeLogFragment ' s createFragment method and refactored related methods to simplify the fragment creation process and improve maintainability by reducing complexity
added preEvent and postTransition methods to AbstractStateMachineFactory for handling state machine events to enhance state management capabilities in the state machine implementation
rename ConfigDescriptionProvider . java to improve clarity and organization of configuration handling
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf usage in StorageBasedMetastoreTestBase to improve compatibility with Windows and ensure proper Hive configuration handling
solr - 4714 : facetcomponent # count will not continue if sort by count fails . also fix broken search test .
updated the properties handling in CheckstyleReport . java for better overriding and updated the cache file path to ensure the cache file is dynamically configured based on the build context
added functionality to manage and stop Jetty replicas in DeleteInactiveReplicaTest . java to improve the handling of inactive replicas and enhance error messaging clarity
added functionality to accept a file name argument in the FileActionsDialogFragment to enhance user experience by allowing the file name to be optionally displayed
updated reorder direction handling to include an INVALID _ DIRECTION constant to improve clarity and performance of reorder direction management
updated the ` payAccountId ` , ` from ` , and ` to ` fields in ` InnerTransferRequest ` , and modified the API path in ` AccountAPI ` to ensure consistency in API endpoints and improve clarity in API endpoint structure
fix job id resolution in jdbc sink stress test [ hz - 2197 ] ( # 25288 )
added a new annotation interface ` EnableAdminClient ` in the project to provide a means for enabling administrative client functionality
replaced specific imports with a wildcard import and modified the visitIdentifier method to handle fully qualified type names to simplify import statements and enhance the handling of identifier nodes in the code
set the action text color to the primary dark mode in AuthenticatorActivity to improve visibility of the authentication process by using a darker color
added a new ` find ` method in ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` classes for improved foreign key constraint handling to enhance functionality and ensure that primary key constraints are correctly set
renamed methods to create test steps for consistency and clarity to improve code readability and maintainability
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` and updated its usage in ` MethodInvokingMessageHandlerTests ` to improve clarity of the test purpose and ensure consistent method naming
added a method to cancel clients and updated the ` startDriver ` method in ` RpcServer ` to ensure proper client cancellation before connecting back
added getImplicitPreCoercionValue method to SkylarkParamInfo and its implementations in DefaultConstructorArgMarshaller and ReflectionParamInfo to provide a default value for implicit parameters when using the default value
initialize lastDisplayedUser with an empty Optional to avoid null pointer exceptions when no user is displayed
added a method ` findAll ( OrderSpecifier < ? > orders ) ` to ` QueryDslMongoRepository ` and updated the corresponding test cases to enhance functionality by allowing sorting results based on specified order specifications
avoid nullpointerexception when stop datanode when restart datanode
planner - 220 : exit the warm - up loop when a test fail
add xread and xreadgroup command support in pipeline xread mode
removed the ` FIXME ` comment and updated method calls in ` LinkedBufferInput ` and ` StreamInput ` classes to streamline code and ensure accurate tracking of read bytes
added WebSecurityCustomizer to CasWebAppSecurityConfiguration and updated HttpSecurity configuration in CasWebSecurityConfigurerAdapter to enhance security customization for WebSecurity in the application
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to use it to improve test coverage and functionality for JDBC token store scenarios
added a static method ` registerProviderInternal ` in ` ShadowContentResolver ` and modified ` ContentProviderController ` to utilize it to enable the registration of content providers while ensuring proper handling of content providers in the content provider lifecycle
updated the constructor to use ClassFile . Version instead of the direct Version reference to ensure compatibility with the correct class reference in version management
fixed - singleconnectionmanager keep alive disable by default
[ java ] check for assign a non - null supplier to a supplier in order to help avoid npe .
apps - 3d : fix npe on locus with no point ( # 3874 )
issue # 5248 - fix bug when closing stream
implement ability to select which selenium browser ( base on the ` ` webdriver . screenshot . location ' ' property ) to use .
use hamcrest assertion instead of junit in integrations / shadow - shadow - shadow - se ( # 1749 ) ( # 6258 )
truffle / instrumentation : remove deprecate method contextreference . getcontextreference ( ) .
fix # 266 : reset mockingprogress ( ) only when the real exception be instantiate ( # 279 )
updated logic to return localCoords when the actor is ascendant and refined exception messages in Actor and Group classes to improve code clarity and ensure proper error handling for invalid inputs
added location permission handling to the LocationPickerActivity to enable users to toggle location access and improve user experience
add countermdb a example ( bean base on activemq - example ) .
added CookieSpecs import and set standard cookie specification in request configuration to ensure proper handling of cookies in the HTTP client
replaced a conditional check with a method call to overlaps to simplify the logic and improve readability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java to enhance audio timing capabilities by utilizing a non - clipping gain mechanism
added monitoring URL functionality to the ScrollingPanel and SystemInformationsButtonsPanel to enhance user experience by allowing monitoring URLs for better navigation
added a new configuration option for the Kubernetes service creation timeout to ensure the service creation timeout is specified as a valid time unit
updated icon resource assignments for different place descriptions in NearbyListFragment to improve clarity and visual representation based on the selected place description
add null check for class with no package ( eg - http : / / search . maven . org / # search | ga | luaj - jse ) . this be a problem when packaging liquibase in a fat jar .
new file PrintInlining . java created with a main method that prints " Passed " to establish a basic program structure for running the printing process
fix : support nested brace in javadoc tag ( # 5348 )
[ java ] remove redundant field to simplify test code .
make sure edge data be save into the repository even if the node have meta data
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration classes to improve code cleanliness and maintainability by eliminating unnecessary dependencies
update playback speed logging to use float values instead of integer values to improve logging accuracy and readability of error messages
invoke RoomRemovedEvent when cluster is started in MUCRoomController to update local room state to ensure correct handling of room removal in cluster mode
updated the minimize value from ' replicas ' to ' cores ' in AutoScalingHandlerTest to ensure that the precision value is accurately represented for better resource management
added flip and mips drawing functionality to the TextureHelper class to enhance visual feedback and ensure proper rendering of keys
replaced ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParserDecorator ` in multiple files to improve event reporting for project - specific parsing events
defer remove normalization pass from normalizer . run ( library ) .
replaced ` retrofit . nextResponseBodyConverter ` with ` retrofit . responseBodyConverter ` and added a new test for the response body converter to simplify response handling and ensure proper functionality with the new converter
[ hotfix ] [ runtime ] memorymanager should only check against unreed memory segment
bug 10732 : add temporal annotation to consolestatementvo field ( # 2064 )
added new files Hbs . java and HbsTest . java to handle handlebar rendering functionality in Jooby to enable customization of handlebar views through template rendering in the jooby framework
added message visibility logic for HintMessage and enhanced setUp method for message items to improve user experience by hiding messages when empty or null values are provided
fix ( importcsv ) : the keyset usage in headermap should be ` values ( ) `
# 1187 add a waituntilalertdialogappears ( ) method to make the alert dialog stable
added a check for distinct column indices in ReduceSinkDeDuplication . java to prevent processing when there are fewer column indices than 2
- fix miscutils to work on window as well a the window
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 673 )
updated dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - client " in TestOSGiUtil . java to ensure compatibility with Jetty ' s naming conventions
samlauthenticateduser : make an unmodifiable map always return the attribute .
make sure that ` ` move ' ' button do n ' t repaint header
fix ( core ) use new double / float constructor to avoid unnecessary object creation
replaced getDate ( ) with getTimestamp ( ) in JdbcDataSource . java to ensure accurate timestamp representation in data source
updated the condition to check for a specific class name in HtmlJndiTreeReport . java to ensure proper handling of context bindings in the JNDI tree report
refactor default database options handling in StorageUtils . java to set buffer size based on database type to improve flexibility in configuring database options for more efficient transaction management
changed edgeType check from " double " to " mutual " to ensure proper handling of mutual edge types
add allow _ slippery _ touches to make statusbartouchcontroller slippery be : 918776ee51
fix stable dimension for array field . patch by brandonwilliams review by jbellis
added methods to retrieve and set the Google Drive folder path in PreferenceHelper to enhance flexibility for managing Google Drive folder settings
ticket # 4810 : implement shuffle suggestions on touch up and down
add @ Nullable annotation to assertThat methods in Truth . java to improve null safety annotations and clarify that certain parameters may accept null values
updated bitwise operations in ArrayUtil for better handling of the 2 case to improve correctness of the array manipulation by differentiating between 1 & 2 and 1
added a new file ` ApiExceptionTest . java ` and modified ` ClassInstrumentor . java ` to enhance testing capabilities for ApiException and ensure constructor can be instrumented
fix infinite loop with anti - aliasing streamin / output processing
added methods to manage keyguard secure in ShadowKeyguardManager and refactored KeyguardManagerTest to use the manager instance to improve keyguard functionality and simplify test code for better maintainability
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization
modified the way overrides are retrieved by replacing single quotes with single quotes and added a length check for the number of parts to ensure correct parsing of overrides from the status string and handle potential array of sizes
updated the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables ` to fix a typo in the test method name for clarity and accuracy
file . close should not call checkdrained ( ) if the drainafterclose be call to ensure that the drain method is not called after the file close
updated light parameters and modified shader initialization in HybridLightTest . java to optimize lighting performance and improve shader configuration flexibility
replaced usage of FakeProjectFilesystem with ProjectFileSystem in multiple test files to improve consistency and utilize the workspace ' s method for better project filesystem management
updated the type of ` rerunPath ` from ` String ` to ` PathWithLines ` in multiple files to improve type safety and simplify the handling of path with lines
refactor Gson , JsonArray , and JsonObject classes to improve code readability and maintainability
remove unnecessary @ notnull annotation in pubroot . test _ distributions ( # 2022 )
added a call to close the ParcelFileDescriptor using Shadow . directlyOn to ensure proper resource management when closing the ParcelFileDescriptor
added thread - local support for managing prefix indices in ` BasisLibrary ` to improve thread safety and isolate prefix index states across different threads
added debug logging capability to TestDistributedStatsComponentCardinality to improve debugging visibility for HTTP connections during testing
added calls to throwIfImmutable ( ) in IntList . java to ensure that immutable elements are properly thrown when necessary
added @ NotNull annotation to the onApplicationEvent method and modified the URI creation in GrpcClientBuilder to enforce null checks and improve URI handling for gRPC targets
fixed jline demo demo not show the work directory when run from the command line
[ gr - 24486 ] fixed insight memory leak in native - image .
added platform detection and formatting for manifest file output in GenerateManifestStep . java to ensure consistent line endings across different operating systems
changed priority of FindNullDeref from LOW _ PRIORITY to HIGH _ PRIORITY and added a new class RFE3531161 to handle null checks more accurately and warn users about redundant null checks
document that configdescription can not be null for a thing type
fix cancellation exception throw by masterjobcontext # createscancellationexception ( )
pdfbox - 3353 : init the cropbox when in the constructor , a suggest by michael klink
refactor ManagerBase class to improve code readability to enhance maintainability and simplify future updates
added a new BooleanFlag for enabling all apps in the system taskbar to provide a debug option for enabling access to all apps in the system taskbar
replaced the initialization of FragmentActivity with a direct creation of ActivityController using Robolectric to simplify the code and improve readability by using a more streamlined method
renamed ` getFileCoordinates ` method to ` processFileCoordinates ` and introduced ` decimalCoords ` method in ` ShareActivity ` to improve clarity of method functionality and enhance code readability
rename ABCase classes to TestABCase1 _ 1 , ABCase2 , ABCase4 , and ABCase7 _ 3 to improve clarity and consistency in test naming
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for the getBlackholeAddress method to improve code clarity and prevent potential null pointer exceptions
refactor handler initialization in OpenRocketViewer to use a dedicated handler to improve clarity and maintainability of event handling logic
add a new class ChangeDependencyGroupIdAndArtifactId to manage Maven dependency group ID changes to improve code clarity and facilitate the replacement of Maven dependency group IDs across different recipes
refactor file system handling in IndexingJob . java and add a validation check in SegmentChecker . java to improve code robustness and ensure input paths are valid
update method name from ` lt ` to ` lte ` in address comparison to ensure consistency with naming conventions for clarity
replaced ImmutableMap and ImmutableMultimap with memoized supplier for replacement paths and modified exception handling to improve performance and simplify the retrieval of source path information
renamed JsonExamples class to Examples in JsonExamples . java to better reflect the class ' s purpose and improve clarity
added debug logging statements in ViewExtractor . java for better traceability to improve traceability of the extraction and copying processes of entries
for # 401 , apply a consistent copyright notice to the java / tree .
add a new Main class for Java source code to facilitate easy debugging by providing a simple main method
fix a problem report by coverity report on sipregistrar .
removed duplicate ' continue ' statements from NativeScanner . java to improve code clarity and prevent redundancy
changed the package of RendererConfigurationTest from net . pms . test to net . pms . configuration and modified imports accordingly to better organize RendererConfigurationTest under the appropriate package and organization
replace usage of ImmutableSet . Builder with Supplier < ImmutableList < BuildRule > > for queried and exported dependencies to improve performance and reduce unnecessary object creation
replaced stream ( ) . count ( ) with size ( ) for remoteContainsResults to improve performance by avoiding unnecessary method calls
added charset extraction from content stream in ExtractingDocumentLoader to ensure accurate metadata handling by using the correct content encoding
fix : do n ' t insert null value into ' account _ name ' field
fix styledplayercontrolview reference in javadocs ( # 1943 )
add -- ignore - transitive - repositories option to maven plugin to skip transitive dependency
removed the duplicate declaration of BackgroundJobManager in ContactsPreferenceActivity . java to improve code clarity by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
added null check before closing selection in NIOTransport . java to prevent potential NullPointerException when selection is null
added a conditional check in the NativeRegExp class to exit early if the index equals the length of the string to ensure proper handling of the matcher input based on its start and end conditions
avoid use random port in integration test , it should not be pick up by ` ` 80 ' '
added a new user - defined function ( UDF ) named " reverse " to the Hive UDF to enable reversal operations in Hive queries
[ grid ] remove unused code and fix getcontextpath encode issue
updated Tracer class to improve performance to enhance the efficiency of tracing functionality
[ hotfix ] ignore rocksdbstatebackendreaderkeyedstateitcase since it ' s no longer need
replaced specific static imports with a wildcard import and simplified the import statements in XMLChangeLogParserTest . java to improve code readability and maintainability by reducing verbosity
added a clear method to the StarTreeRecordStoreCircularBufferImpl class and implemented a test case in TestStarTreeRecordStoreCircularBufferImpl to ensure the buffer is cleared and that metrics are correctly set to zero
updated forecast minutes , hours , and days in OpenWeatherMapOneCallHandler to adjust time forecasting values to ensure more accurate time representation for user data
fix timeout problem ; page operation template will timeout if it fail
updated RemoteTargetGluer and FloatingHeaderView to improve handling of target handles and suggestion modes to enhance user experience by ensuring correct animation and suggestion behavior during app transitions
updated CucumberPropertiesParser to use ` splitAndThenFlatMap ` and changed return type to ` Stream < Collection < FeatureWithLines > > ` , and added new test cases to enhance functionality to handle multi - threaded and ensure correct tag filters are applied to existing runtime properties
add a bunch of block to the botania creative tab with nbt data .
updated assertions in TestRadioButtons to use consistent parameters instead of fixed values to improve code readability and maintainability by using a uniform assertion style
added support for uncompressed file size in RCFileCat and RCFile classes to enhance functionality to accommodate file size changes during processing
doc ( regen ) : fix some javadoc error ( # 208 )
[ pytorch ] improve ndarray error message when use jnautils ( # 1592 )
[ hotfix ] fix typo in blobserver . java
fixed bug 124994 - unusedprivatemethod no longer flags private method which be call from an initializer
refactor lexicalScope variable names for consistency and clarity to improve code readability and maintainability
int - 1485 add test for sftp auto - startup support
added methods to retrieve the root and item boundables in various node classes to enhance functionality and improve object management within the spatial index system
refactor version parsing logic to handle minor version differently based on digit check to improve accuracy in extracting version components
allow tag collection to be disable even if no tag can be persist , fixes # 842
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a corresponding test in ` DateTimeFunctions ` to facilitate the parsing of date strings with specified time zone specifications
hhh - 17100 fix regression in custom type handling of null value
camel - 10618 : improve log4j2 configurerservlet javadoc to make it easy to configure .
replaced the initialization of HiveException and AuthorizationException instances with direct instantiation to simplify exception handling by eliminating unnecessary context
updated CGoCompileStep to use String . join for better string handling to improve readability and maintainability of the code
fix : prevent building / configuring k8s v1beta1 ( # 44 )
refactor methods in Only . java to remove the @ Override annotation to improve code clarity and maintainability
fix ( http ) : make http connection timeout configurable
added new pipeline name parameters to PerBuildStateFactoryWithConfigurableAttributes and updated related usage in RawTargetNodeToTargetNodeParsePipeline to enhance event tracking by providing more context for pipeline configuration
[ java ] add some description of parameter to server definition to make test it more complex
added @ Singleton annotation to ApplicationController . java to ensure proper instantiation of the controller
refactor username retrieval logic to use OwnCloudAccount for better account handling to ensure accurate username retrieval based on user account information
added BatchStatus import and a test for resumed job execution in SimpleJobLauncherTests to ensure proper handling of paused jobs in job execution
added a null check for cacheConfig before accessing its properties to avoid potential NullPointerExceptions when cacheConfig is null
[ grid ] move dockersession to localnode and make it public
refactored code to use a constant for the default package name which be make more sense
pdfbox - 2250 : handle corrupt pdfs a suggest by michael klink
mahout - 943 fix checkstyle error in distributedlanczossolvercli .
modified HttpServerTestBase . java file to improve test coverage and fix existing issues
updated PortletApplicationMapTest to check for the existence of key keys instead of using entrySet to improve test accuracy and ensure correctness of key retrieval in the portlet application map
add test for dynamoDbIgnoreNulls behavior of nested list to ensure proper handling of null values in bean list operations
add support for redissonautoconfigurationcustomizer for spring starter . ( # 1746 )
fix local variable out of bound exception in indicator . todouble ( )
add a new method ` execInContainerWithUser ` to ` ContainerState ` and update its usage across multiple files to enhance functionality by allowing user - specific commands handling during container execution
replaced manual checks for WebSocketByteMessages and WebSocketTextListeners with concise conditions to streamline the code for clearer readability and maintainability
add a test case that check that a negative and positive attribute be a result of a semgrex tree .
added a broadcast intent to send a release action to enable the app to release resources asynchronously
removed conditional logic for pre - gingerbread state in TouchImageView . java to simplify logic for better readability and maintainability
fix # 2370 : allow destroy ( ) to create profile validation service ( # 2373 )
( chore ) camel - base - engine : check if vetoed be null before start the camelcontext
added FloatingActionButton functionality to manage a floating action button in ShareActivity to enhance user interaction with FAB menu when an image is available
added inline Parslet functionality and improved token parsing in ToDateTokenizer . java to enhance parsing functionality and handle edge cases for date formats
updated TestAnonymousClassUnloading . java for improved test coverage to enhance reliability of class unloading tests
updated German error messages to improve clarity and consistency to enhance user understanding by using a more accurate terminology
added server check state before binding operations service to ensure operations service is only bound when the server is not checked
fix : invalid sql for aggregated column in group by expression
added process wait and destroy calls in CxxPreprocessAndCompileStep and implemented waitFor method in ManagedThread to ensure proper process management and handle interruptions during processing
added a new boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and updated related classes to enable conditional handling of repository sources in authentication operations
fix # 2183 - increase default store max size when use cluster .
add support for enabling SSL protocols in NettyWebServer and related classes to enhance security by allowing configurable SSL protocols
replaced AtomicBoolean with AtomicReference for managing object references to improve thread safety and reduce overhead associated with AtomicBoolean
updated the return statement in QueryDslMongoRepository to handle null properties and added a test for path resolution in SpringDataMongodbSerializerUnitTests to ensure robustness by returning an empty string when no path expressions are provided
updated assertions and error messages in RoundRectBorderTest . java for consistency to ensure proper validation of round rect borders to improve clarity and accuracy of assertions related to rounding border changes
disable block repair if there be no genesis config
remove flaky test : java / awt / window / ConfirmTest . java ' s paralleltest class
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' , added validation for the ' sign ' array length , and improved error logging to ensure correct thread counting , validate input parameters , and enhance error information clarity for debugging
inverted the conditional check for non - Windows platforms to ensure proper behavior in the display of process information
refactor collectors methods for better clarity and consistency to improve code readability and maintainability by replacing maxN with greatest and greatest respectively
added null checks and improved WebSocket client extension handling in BitmexStreamingMarketDataService and BitmexManualExample to enhance robustness and prevent potential NullPointerExceptions during WebSocket communication
replaced the import statements and added validation for lat and lon in GeoPointField . java to ensure that only valid lat values are accepted to maintain data integrity
renamed methods and variables to better reflect their purpose and updated their functionality to improve clarity and functionality in handling workflow file operations
8180049 : incorrect gpl header cause re script to miss swap to commercial header for licensee source bundle
updated the ` getTableDocument ` method to accept a boolean parameter for dependency handling to enhance flexibility in retrieving table documents based on the specified conditions
added a condition to check the number of consecutive uploads without coordinates in UploadActivity to improve user experience by displaying a alert dialog when no coordinates are available for upload
added caching functionality to retrieve and cache profile data in the application to improve performance by reducing redundant object creation for profile queries
refactor JpaMetamodelEntityInformation to include additional checks for identifier derivation and enhance property value handling to improve code clarity and ensure proper ID property extraction for nested entity information
added tests for CREATE INDEX statements and refactored method names in UpgradeUtil to improve code clarity and ensure accurate timestamp retrieval for tables and views
add registerdefaultexceptionmappers to abstractserverfactory and remove register method from dropwizardresourceconfig
fix exception when save a field in the entry editor ( # 2207 )
modified the native method signature of ` nativeCreateNSWindow ` to include an ` ownerPtr ` parameter to enhance functionality by allowing specification of the owner ' s namespace window
updated SQL statement to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure consistency in database schema naming conventions
added StOCK case handling and modified event fire logic in the Tile class to enhance stck rendering capabilities and improve event management
fixed - codec be n ' t pass to read / write method in commandasyncclient . # 1855
more verbose logging when verbose be disabled ; add detector flag for non - generic signature
fix bug where we weren \ ' t start the back when return to home .
changed the initial page number variable from final to non - final and added logic to handle content limits based on the initial page number to ensure proper handling of page no values and avoid potential NullPointerException at certain conditions
fix crc computation in jedisclustercrc16 to avoid div - by - zero error
added comment parsing functionality to the FormattedSqlChangeLogParser to enhance SQL comment handling capabilities and ensure correct parsing behavior
oops , have to add jararchiver to abstractjarmojo , so it can be use directly from maven
replace HumanReadableException with BuckUncheckedExecutionException and update the error message format to improve error handling by using a more appropriate exception type
refactored aggregation checks in TSServiceImpl . java and added a multiAggregationTest method in DaemonTest . java to improve code readability and ensure proper handling of aggregation operations
added validation for UNSIGNED _ BYTE and TYPE in GwtGL20 . java to ensure proper handling of pixel data for improved compatibility
added a new test method ` testDebugInfo ` and modified method calls in ` PrintR ` and ` VarDump ` classes to improve test coverage and ensure correct method invocation for dynamic usage
replace UnmodifiableClassException with a custom IllegalStateException for better error reporting to ensure clarity in error reporting for issues related to javac compile issues
[ gr - 21147 ] correct instrumentation of class initialization when instrumentation be disabled .
[ iotdb - 2382 ] fix query timeout error when create schema ( # 5709 )
updated TopicRouteService to use Caffeine ' s CacheLoader and added a load method for topic route data loading to improve cache management and handle topic route loading more robustly
mbtilesdatastore should be read - only to make the database read - only
updated INVALID _ SOURCE _ TARGET _ RELEASE regex to allow optional release number 1.9 to improve flexibility in handling different release formats
refactor URI construction and add conditional check for location intent to improve code readability and ensure proper URI handling for missing availability
handle empty inheritanceparametercontexts ( # 1086 )
8227512 : document the jdk . net . urlclasspath . showignoredclasspathentries system property
added the origin response header in ProxyRequestHelper and implemented a corresponding test to ensure proper handling of request and response headers in the context
added a new ProfileSettingDrawerItem instance to GpsMainActivity to enhance user interface by allowing profile settings to be easily enabled
add an option to disable jaxb processing if validation be enable ( jsp )
simonstewart : fix a bug in the firefox driver ' s string handle code that should work as expect .
added a maxRows variable and updated fetch size handling in IoTDBStatement . java to ensure the fetch size does not exceed the default row limit
refactor isCountOptimizable method to allActionsAreOptimizableFilters and update related logic to improve code clarity and ensure accurate request handling of optimized filters
added node and mouse event handling for node and selection settings in StandardVizEventManager to enhance event management functionality based on selection settings
replaced direct memory setting with a utility method ` zeroBuffer ` to improve code readability and encapsulate memory handling logic
add getxorgroup ( ) and getxorgroup ( ) to Terminalnode , also remove xorgroup from terminalnode cache
removed height and width getter methods from LCDUIImageMonochromeBitmapSource to streamline the code by eliminating unnecessary methods
refactor path resolution logic to use a dedicated method for better encapsulation to improve code maintainability and clarity by centralizing path resolution logic
fix # 716 - properly decode dstu2 identifier in parserstate .
updated WebsocketRoutingFilter to use a static method for changing the scheme and modified the request URL handling to ensure that WebSocket URLs are properly encoded in WebSocket upgrades
rename test suite configuration to avoid confusion
added a private method ` getCxxPlatform ` to retrieve the CxxPlatform based on its arguments to improve code readability and maintainability by encapsulating the retrieval logic in a separate method
added imports for documentation for IndexReader , Field , Searchable , and Similarity classes in the codebase to enhance documentation clarity and maintainability
updated the method to handle null elements in ConcurrentLinkedStack and renamed test methods to improve robustness and clarity of test cases
added methods isMatched and setMatched to BinaryHeapQueueTest and BaseQueueable classes to manageMatched state for better queue functionality
added a null check for mDirectories before initializing mDirs to prevent potential NullPointerExceptions when mDirectories is not initialized
updated gesture condition to check if overview state is not enabled and first layout is not available to improve user experience by ensuring gesture handling only occurs when necessary
added multiple package - info . java files for various Lucene packages to organize documentation and clarify the structure of the package
added localization to the visible auto - leveler panel text to improve user experience by allowing dynamic visibility of the auto - leveler component
added callback handling for optimize events in DirectUpdateHandler and DirectUpdateHandler2 classes to enhance event processing capabilities when optimization is enabled
updated deflate and deflate initialization logic to explicitly set a dummy byte to 0 based on padded length to ensure proper handling of compressed data for better performance
added a check ( user _ data ) method in Shaderc . java to ensure validation of user data availability
updated the condition to include the local MetaStore check to ensure retriesMade is greater than zero when the local MetaStore is active
updated import statements and modified exception handling logic in HeliosSoloLogService . java to improve error handling and ensure proper logging of unexpected exceptions
refactor ` Subject ` class references in ` mmm ` and ` ppp ` files to improve code clarity and maintainability
use weak and strong reference hashmap to avoid memory leak in abstractserializationservice
bug 59210 : correct color calculation in hssfPalette . setcoloratkey ( ) for relative color effect .
doc : replace < tt > tag ( # 956 )
eranmes : make findelementbyid test able to return list of all element by numeric id .
added a flags parameter to the registerReceiver method across multiple classes to enable flag management for broadcast receivers more effectively
update test to account for new version command line feature
refactor input stream handling in Ogg and OpenALMusic classes to manage memory leaks to ensure proper resource management and prevent memory leaks during input stream operations
replaced the hardcoded string " Response was null " with a constant RESPONSE _ WAS _ NULL to improve code readability and maintainability by avoiding magic strings
[ te ] modify condition to always show warning message if no failure
refactor toast handling in BaseActivity and DetailActivity to use a dedicated showToast method to improve code readability and maintainability by centralizing toast display logic
updated the method to retrieve the HTTP method from delegate to ensure the request template is used instead of using the delegate ' s method directly
added name validation checks and modified referral handling in LDAPCertStore . java to ensure valid names and improve referral processing reliability
extracted the retain method logic into a separate retain method for rSockets to improve code readability and reduce code duplication
rename ` AdapterViewTest ` to ` ListViewTest ` and add a test for item click functionality to improve clarity and ensure correct interaction with the list view
[ hotfix ] [ test ] remove the setup method from checkpointfailuremanageritcase
change genericitemuiprovider to extend itemregistry instead of itemregistry ( # 5221 )
patch from josh from bug # 44636 - allow store and retrieve the currently select object from the menu
added JUnit isolation annotation to MetaInfConfigurationTest to ensure that the test accesses the static method of FileSystemPool
fix # 2889 - allow user to set the host for the httpserver
updated token validity settings for different grant types in DynamicClientRegistrationEndpoint to ensure appropriate idle and refresh token management based on the configuration settings
added a CloverInstrumentationFilter class to distinguish between interfaces and interfaces to ensure proper handling of nullable interfaces in Java annotations
added support for Smartmi Evaporative Humidifier in MiIoDevices and adjusted formatting in ReadmeHelper to enhance compatibility with Smartmi Evaporative Humidifier and improve code readability
improve mining duration calculation , fixes # 54
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari - 20827 . log error message when ambari do n ' t have baseurls for install package step before eu / ru ( dili )
updated the boolean return statement to use ' | | ' instead of ' && ' for clarity to improve code readability and logical flow
added Serializable interface to RuleAdministrator class to enable object serialization for RuleAdministrator instances
updated origin handling to use a HashSet for allowed origin and timing origin patterns to improve the efficiency of origin matching
- replace old model test with new one in the new one .
added error logging for invalid solidified position in Manager . java and updated method signature in WitnessService . java to improve error handling and ensure proper initialization of block data
hbase - 14315 enhance null handling in execresult # getclass ( ) ( ted yu )
added permission checking functionality to the HttpServer class to enhance access control for users based on admin permissions
replaced ` writeTo ` method with ` getStubClassBytes ` method in ` ClassMirror . java ` and refactored the creation of ` CreateStubAction ` in ` StubJar . java ` to improve code clarity and encapsulate stub file creation logic
added a TextView bind for the internal link text in FileDetailSharingFragment to improve user interface by displaying specific sharing text based on file type
# 2888 : fix locale - specific test for accuracy
fixed flaky test due to timezone difference
added keyboard hiding functionality to the AllAppsContainerView and updated logging for the keyboard closed event in LauncherAllAppsContainerView to improve user experience by ensuring the keyboard is closed appropriately during interactions
fixed configuration for test embed event store
refactor BsdFileStore to use a new native method for getting mountonname to improve code readability and efficiency by consolidating mountonname retrieval logic
add test case for issue # 1599 illegalargumentexception
added support for optional parameters ` x ` , ` y ` , and ` z ` in the ` SpawnCommand ` class to enhance flexibility in spawn command options
restructured content area calculations to use a dedicated method for getting content area dimensions to improve code clarity and maintainability by centralizing content area width logic
code refactor : move code installation test to graalcompilertest and use a more consistent debug scope
use mock directory to reliably work on window semantics
added plugin check checks in UpgradeCheckRegistry and reformatted database column addition in UpgradeCatalog280 to ensure proper plugin checks and improve code readability
fix minor flaw in source code format of environment . java
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with BadApple annotation to address issue SOLR - 7421 and improve test coverage
modified the home path construction in CodenameOneImplementation . java and adjusted the handling of child types in HashtableContent . java to ensure that the home path does not end with a space and eliminate unnecessary warning for string node types
replace FLAG _ IGNORE _ HDMV _ DTS _ STREAM with FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _ STREAMs and update related code to enable audio streams functionality for HDMV DTS
replaced specific resource imports with a wildcard import and modified resourceAccessor initialization in LiquibaseEntityResolver . java , and modified XMLChangeLogSAXParser . java to use a new resourceAccessor to simplify import statements and enhance resource handling for better functionality
disable the tl algorithm in ComHostnameVerifier and JavaxHostnameVerifier to improve security by preventing unnecessary certificate validation
updated CxxDeps . EMPTY to use a singleton CxxDeps instance to simplify the creation of CxxDeps instances for better readability and performance
rename expectedDirectory and actualDirectory to expectedStubDirectory and actualFullDirectory to enhance clarity by reflecting the purpose of the stub directory
modified the ` resizeThreshold ` annotation in ` Int2ObjectHashMap . java ` to ensure consistency in naming conventions for better readability
updated folder name hint logic to check for empty title to improve user experience by providing appropriate hints based on folder name state
added a string parameter " uaa " to the loadClientByClientId method calls in UaaResetPasswordServiceTests to ensure consistent behavior when loading clients with the UAA service
changed visibility of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated value retrieval in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to handle closed state to ensure accurate value representation in case of closed state
ww - 4871 add a javadoc note about lack of thread - safety .
renamed method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to standardize method naming conventions for better consistency and clarity
added a new test case for the UnnecessaryParenthesesTest class and updated the logic in UnwrapParentheses to ensure the correct handling of instanceof checks in the code rewrite process
added a method to teleport a location using reflection in the Location class and modified how it is instantiated to enable dynamic telephony functionality when necessary
replaced Base64 encoding with Base64Utils for modulus and exponent in TokenKeyEndpoint to enhance security and reliability when handling Base64 encoded URLs
generator - report stats from generate method
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and intent of the annotation ' s purpose
add assertion to objectidentityimpl to ensure that getid ( ) can return a non - null value
modified the ` setUpRevampedTweet ` method to enhance the handling of tweet display based on screen visibility to improve user interaction by ensuring retweeter is properly checked and encapsulated logic within the appropriate methods
modified the way verified text is displayed based on the theme setting to enhance user interface by dynamically retrieving the text view based on the selected theme
cleanup and make the ` timedifffromserver ` field final .
add autowired option to camel - mongo to enable autowired mode on the mongo connection
datamongo - 707 - attributemapping need to support lastindex . for multi - level attribute
improve log when hive corruption in hive metastore
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to ensure that security features are properly enabled for users
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 4767 ] allow escape html for contact email , fix and test
revise ( module ) : also register subsystems with the engine module ( # 4683 )
update mmmf output to reflect the number of feature in output .
apps - 2457 avoid stringindexoutofboundsexception in case of negative input
( chore ) camel - kafka : avoid unnecessary log when debug be not enable
replaced a constant with PlaybackStateCompat for action _ SET _ PLAYBACK _ SPEED and updated related code references to ensure consistency in accessing PlaybackStateCompat and maintain consistency in action handling
updated IgnitionConfigurationHandler , MotorMountHandler , FlightConfigurationID , and IgnitionEvent classes to deprecated the ' automatic ' separation and ensure correct event handling during automated interactions
tika - 3703 -- improve robustness for invalid utf name length in ms owner file parser
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest to mark the test as ignored due to compatibility issues on JDK 1.7 and 1.8
refactor lock file creation into a separate method for improved code organization to enhance maintainability and readability of the code
updated preference checks from version _ 5 _ 3 to version _ 5 _ 3 _ 1 and updated corresponding notifications handling to support additional features and ensure accurate synchronization intervals
added a check to return null if the user is a favorite user to improve handling of favorite users by preventing further processing
do n ' t copy truffleobject instance in execute method node ( # 1853 )
removed unnecessary @ Disabled annotations and streamlined filter logic in JakartaClientShutdownWithServerWebAppTest . java to improve code clarity and ensure consistent filtering behavior
- do n ' t try to delete log file if it do n ' t exist
7057785 : add note about optional support of recursive method for self - referential collection / map
replaced the import of ` Version ` with an updated import in ` CreateIndexTask . java ` to ensure compatibility with the latest Lucene API
added handling for missing primary key changes in OracleDatabase and AbstractDb2Database to ensure proper schema settings for missing primary keys during comparisons
added MetastoreException handling to MsckOperation and enhanced error messaging in TestMSCKRepairOnAcid to improve error handling and provide clearer feedback on invalid partition names
[ flink - 24131 ] [ kafka ] retry commit when a transactional table already exist
[ issue # 4104 ] remove receipt handle from message of forward message to dlq ( # 4104 )
added a service list to DockerComposeContainer and modified the runWithCompose method to handle it to improve flexibility in starting Docker Compose services by allowing dynamic service configuration
add copy set to avoid concurrentmodificationexception
removed HTML cleaner code and simplified XML return value to streamline code and improve readability by returning the xml directly
fix issue where custom content would show up in all apps .
adapt data type to double for energy reactive metric ( # 3825 )
added a new file ` bug4150029 . java ` implementing a JApplet with file chooser functionality to address and manage temporary directories more effectively during application states
added sparkConfigUpdated property and related getter / setter methods to manage Spark configuration updates to ensure Spark sessions are properly closed when updated
added a long press indicator implementation to AppIcon and AppIconMenuItem classes and updated Launchable to accept it as a parameter to enhance usability by providing a flexible long press indicator for better user experience
fix wkbwriter to handle empty polygon empty
refactor UnflavoredBuildTarget to use a custom builder pattern and update builder methods for consistency to improve code maintainability and readability by utilizing interner for better object creation
added a new file MultiplyByMaxInt . java that tests multiplication with a maximum integer to implement a performance test for multiplication by maximum integer values
removed unnecessary onActionViewCollapsed ( ) call and set drawer indicator based on the current file state to streamline navigation and ensure the navigation drawer indicator reflects the current file state
updated package and import statements in TestRAMDirectory . java to align package structure with the correct package structure for better organization
replaced instances of FixedBitSet with BitSet in Automaton . java and Operations . java to optimize performance and memory usage by utilizing the more efficient BitSet implementation
drools - 4899 dmn - warn on empty expression name on node ( # 4899 )
replaced ` @ ContainedBy ( A . class ) ` and ` @ ContainedBy ( B . class ) ` with ` @ Repeatable ( A . class ) ` in multiple Java files to streamline the configuration by replacing ` @ ContainedBy ( A . class ) ` with ` @ Repeatable ( DC . class ) `
updated file sending message to include the current send duration to improve clarity of console output by specifying the duration of file sending
updated class name handling in OpenMBeanAttributeInfoSupport . java for consistent access checking to ensure proper package access validation by using a safe class name method
check the response count in the quorum response rather than just the actual one
updated freeSize calculation by adjusting the value based on a round operation to ensure free size is always within the valid range for better memory management
do n ' t touch down event when touch up
replaced the instantiation of SslContextFactory with SslContextFactory . Server in multiple Java files to enhance SSL context configuration for improved server support
removed the PrivilegedSocket class and directly initialized the Socket object to simplify the code and improve clarity by directly using the Socket constructor
refactored InputTest . java to improve test coverage to ensure more robust validation of input functionality
added pause blur functionality to the AbsSwipeUpHandler and adjusted related methods to ensure proper handling of alpha changes during task finishing to improve user experience by controlling blur visibility during animations
removed redundant code and improved logic for managing current location markers to enhance code readability and prevent potential null pointer exceptions
updated client retrieval methods to use clientDetailsService for consistency to ensure proper handling of client details during secret removal
updated SQL test setup to handle tab - separated strings to improve SQL compatibility for better readability and maintainability
have the producer wait for the thread to shutdown to give the consumer some time to complete before shutdown .
added unit tests to validate handling of unknown key types in SlidingGanttCategoryDataset to ensure correct functionality and exception handling of unknown keys in the data model
updated the conditionDataList handling to use Optional for null safety to avoid potential NullPointerExceptions when processing conditions
* fixed some bug in the control class that cause spot light to fall off incorrectly .
updated conditional logic and improved logging messages in StdErrLog . java to enhance code readability and ensure proper handling of null stack values
added null check for ApplicationContext in HttpSessionEventPublisher to ensure proper context handling and event publishing
added a semantic exception for when the CREATE CQ statement syntax changes from v0.14 to ensure CQ syntax is preserved during the statement creation
fix incorrect file name in flinkiotdbsink javadoc
simplify custom node only once : now only keep track of node that have be simplify
updated the method call to include a context parameter for setting the drawable to ensure the correct context is used when setting the drawable
fix drop schema syntax to work with mysql
fix : read timestamp data in bigquery table ( # 24697 )
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` classes and corresponding tests in ` ViewGroupTest ` to enhance functionality to find views by tag when processing them
updated enumeration type to use generics in multiple classes to improve type safety and code clarity
updated import statements in IndexTool and IndexTool classes to ensure consistent usage of PColumnFamily across the project
added new constants for JSON values and updated method calls to handle specific annotation names to improve clarity in enum value retrieval and enhance functionality for handling specific Java annotations
[ gr - 46711 ] fix resource model with jar file type .
updated CUDA _ R _ 16F and CUDA _ C _ 32I constants to remove inline comments to improve code readability and maintainability
modified the ResourceLoader class to support multiple layout directories to enhance functionality for loading resources from multiple directories within the view package
relate to redstone torch ' s getattachedface ( ) implementation , it return a different type of ` ` light ' ' for ` ` redstone ' ' torch
[ hotfix ] [ table - common ] fix varbinary type in reltocartitionconverter
added import statement for DateHelper in NoteAdapter . java to utilize utility functions for date handling in the note adapter
updated backup action messages and improved error handling to enhance backup workflow feedback and ensure proper feedback during backup creation
mow - 169 fixed position of algebraview1 ' s tool tip
replaced the method of creating a temporary file in ShadowParcelFileDescriptor . java to simplify file creation and improve error handling for temporary files
replaced the use of ` poll ( ) ` and ` offer ( ) ` with ` addFirst ( ) ` and ` removeFirst ( ) ` in ` StackBasedSecurityContextHolderStrategy ` to improve thread management by ensuring the correct context is added to the queue
change rule name from " optimizations " to " controversial " to align with updated naming conventions for better clarity
canonicalization of positive and negative reference in integerequalscanonicalizer to catch more case .
replaced the static final Type STRING _ ARRAY with a new Type definition to improve type handling for String arrays in TypeFactory
refactor keyboard hiding logic to use a dedicated method for improved clarity to enhance code readability and maintainability by centralizing IME hiding logic
force bit density for block state container ( # 4868 )
updated assertion messages for clarity and modified cache management in TimelineMetricCacheTest . java to enhance readability and ensure proper cleanup of cache entries
added a method to retrieve the maximum texture size and a reference to it in the Minecraft library to optimize texture size calculations for improved performance and readability
[ java ] : move trystoplogrecording into trystoplogrecording as late in case of failure .
added a condition to reset startPosn when isInTransform is true to ensure correct handling of movement during transformation
add queryoptions . skipstartree to optimize star tree query performance
added a lockNearbyView flag and modified the refreshView method to control the visibility of the progress bar to improve user experience by managing nearby places more effectively
add a static factory method that will make it easy to create map without have to manipulate the value
updated methods in EmeddedObjects and EmbeddedObjects classes for consistency across data handling to improve code maintainability and clarity in the functionality
added support for handling widget span information in the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to improve widget management by providing better visibility into app widget properties
updated StageSelector and StageAction classes to use StateChangeListener instead of ChangeListener to improve event handling capabilities for state changes
added callingPid and callUid fields to ShadowBinder and implemented their usages in tests to enable better management and resetting of calling process UID in the shadow binder
replaced the ExpectationFailure class to use private final fields for message and cause to improve immutability and reduce object creation overhead
bitcoinserializer : remove log ` ` no support for deserializing message with name ' '
simonstewart : make sure replacement image be scale only when target width or height be non - negative
added handling for escaped characters in Markdown rendering to ensure proper escaping of markdown characters for accurate rendering
added a confirmation dialog button for leaving a password and refactored the password handling logic to improve code clarity and maintainability by consolidating password management
refactor mmap and buffer methods to use a static ` MappingMethods ` class to improve flexibility and maintainability of method retrieval based on file channel implementation
fix remove this ' public ' modifier sonar violation
added support for slider - keytab configuration in the LlapOptionsProcessor class to enhance flexibility for configuring slider during testing
modified the tearOutGraphViewContainer method to accept a JFrame parameter and updated animation control handling to improve the handling of graph view visibility and enhance animation control during execution
added functionality to handle loading of shortcuts after the loader has finished to improve user experience by preventing multiple shortcut executions during the loading process
updated NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to use a Set of node paths instead of a boolean flag to improve code clarity and efficiency by eliminating redundant checks for finished states
renamed the ` ValidationReport ` class to ` JsonValidationReport ` and updated related method signatures to improve clarity and consistency in naming conventions across the codebase
added a method to safely retrieve the Cipher provider name and improved exception handling to enhance debugging clarity by displaying a clearer error message when the cipher provider is unavailable
[ hotfix ] rename containerspecification . getdynamicconfiguration to getflinkconfiguration
changed LOGGER level from WARNING to OFF in CCJSqlParserUtil . java to disable the logging for improved application stability
if processor do not return anything , try to read from output , so that we do n ' t have to flush anything
change BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow external access to the BITMAP _ HEIGHT and BITMAP _ WIDTH constants
removed the @ Ignore annotation from CovariantOverrideTest . java to enable the test to avoid it from being ignored
refactor the curly method to use a dedicated Qtype class to improve code clarity and maintainability by centralizing Qtype management
camel - 13313 : camel - core - add reloadstrategy to allow external route definition to be use during reload
set space minimum and maximum values to 0.5 f to improve visual spacing for better data visibility and readability
fix a syntax error in the ExpressionStringBuilder class formatting to ensure proper formatting of the INTERVAL operator for consistency
added a method to ` shouldPreserveDataStateOnReapply ` that always returns true to ensure data state preservation is controlled on the reapply process
added a check for the presence of the UTF8 key in the properties file to ensure that the UTF8 key is present in the system resources
lucene - 3995 : print out random value in testreproducemessage .
added logging for long - press events on AllApps items to enhance user interaction tracking within the launcher
added a new test class ` Issue112Test ` and modified ` StoreWAL ` to handle null log to ensure data integrity during commit operations without modifications
make showectorlandinfo optional in case it be disable
[ hotfix ] [ core ] fix raw type checkstyle violation in compositetype
refactor Enum class to improve code readability to enhance maintainability and ease of understanding
updated the ` buildNearbyRandom ` method to accept a boolean parameter and added validation checks for null values in multiple classes to enhance nearby selection configuration and prevent potential NullPointerExceptions
remove the lastupdatetime reference from temporarycache , it should never be use
hide create layer import container when we start newlayerpage
initialize availability _ availability to UNAVAILABLE in ContextHandler . java to ensure that the value is set to unavailable for proper configuration
added synchronization check for peer synchronization in FetchInvDataMsgHandler and refactored related method signatures in PbftDataSyncHandler to improve the handling of BFF messages and ensure accurate cache management
fix : migrate retry setting to grpc _ service _ config ( # 192 )
changed the ` _ freeSpaceReclaimDisabled ` field to ` _ freeSpaceReclaimQ ` and updated the constructor to accept a parameter to enable better configuration of free space reclaim settings
changed KDCOptions from public final to private static final and added a new KDCDefaultOptions class to enhance encapsulation and improve code readability
refactor writer initialization and assignment in Json . java to improve code readability and ensure proper assignment of the writer
standardized formatting of code for better readability in ProfilePager . java to improve code consistency and maintainability
rename paintBackground method to paintComponentBackground in Slider . java to clarify that the background paints the component instead of the background
added a method to retrieve the value from object value constants in a configuration class to ensure the correct representation of object properties in relation to FQN
added logging functionality to KafkaService initialization to improve error handling and debugging by logging service initialization failures
updated the static final Set for RESOURCES _ TO _ ALWAYS _ ACQUIRE to use an ImmutableSet containing multiple time zone information to ensure that all resource files are stored in a specific timezone file
improve documentation and default channel registration
added keyword handling to HTMLDocument and implemented a test for indexKeywords in TestDemo to enhance document indexing capabilities and ensure proper functionality through testing
updated the condition to check for R instead of S in the FileUploader class to ensure compatibility with a more appropriate Android version check
refactor the initialization of the _ addresses list in MemcachedSessionDataMapFactory to ensure that the list is only instantiated when there are no addresses to process
replace instantiation of CorrespondenceSubclassToFactoryCall with a direct class reference to improve readability and maintainability of the test code
modified the Builder class to enhance functionality to improve performance and maintainability of the code
update isbntobibtex fetcher to make use of the new url structure
let the keep - alive timeout to 10 second so that it can be speed up .
added null check for text before firing data change listener in TextField to avoid potential NullPointerExceptions when text is null
fill in some blank , such a by reuse code from the dvparser project
added a line to trim whitespace from the line in SuffixURLFilter . java to ensure consistent line formatting across different platforms
added a guard clause to return early if in godmode to avoid unnecessary processing for godmode users
ggb - 854 : registerpopups ( ) and unregisterpopups ( ) in textinputdialogw ( remove bogus boundary check )
modified constructor parameters in LinkedHashMapCache and TCache classes for consistency and clarity to enhance code readability and maintainability by standardizing parameter order
replaced ` _ channel . close ( ) ` with ` close ( ) ` and adjusted buffer length assignment in ` ChannelEndPoint . java ` to ensure proper resource management and avoid potential errors when closing the channel
added null check for keyIndex in FixAcidKeyIndex . java and changed KeyIndexBuilder instantiation in OrcOutputFormat . java and OrcRecordUpdater . java to ensure proper validation and simplify key index handling
updated exception handling in DirectUpdateHandler2 to specify the root locale to improve error reporting by providing a clearer context about the exception being thrown
add store check guard to canonicalization to allow for good optimization
fix a bug where exception dispatch blocks can be follow outside of the bci .
disable the fix for non - unique and non - virtual storage apps by default
replaced ` BuildTarget . copyOf ( ) ` with ` buildTarget ` in multiple files to simplify object creation and improve code clarity
refactor SqlRunner class to improve code readability to enhance maintainability and simplify future updates
changed the type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorageUtils ` to accommodate larger date values and improve type safety
updated the implementation of ` DefaultSdkProvider ` to store multiple ` Sdk ` instances instead of one to improve efficiency and clarity in managing SDK instances
replace progress indicator with confidence progress indicator to allow for user to mark the offer a a confidence .
updated header checks from " Cling / " to " UMS / " in multiple classes to ensure accurate identification of UMS devices in the application
speed up bpt iteration by skip everything that do ( # 1421 )
change message view type in crowdfundingchatadapter to allow user to view message in a specific locale .
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary ` and ` MacOSXLibraryDL ` to ensure proper encoding of names in ASCII format
kristianrosenvold : use $ -- for improved pattern matching
refactor InsertImage method to remove the unused BufferedImage parameter and optimize image insertion to streamline image handling and improve performance by reducing unnecessary object creation
refactor methods in RefactorModule to accept a default apply method for improved flexibility to enhance code maintainability and streamline the refactoring process
added methods to retrieve child elements by name in the Xml class to improve functionality for retrieving child elements by their names
solr - 7221 : do n ' t put ' content - charset ' into http header
added SystemUiControllerFlags and updated UI state updates in multiple classes to enhance UI responsiveness and manage system UI state updates more effectively
removed the private ClientConfigurationService variable from IntrospectingTokenService . java to streamline the service initialization process for improved code clarity
update exception message format to provide more context for Hive split opening failures to improve debugging by providing more context on record reading failures
removed the ownerId field from NodeEntry to eliminate its usage in the code
updated method names from ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` to ensure consistency and clarity in naming conventions
added score calculation to the merge method in TextFragment to ensure that the score does not exceed the intended limits during merging
removed the private Digester field from Md4PasswordEncoder to streamline password encoding process for better maintainability
added validation to ensure maximumUnimprovedStepCount is non - negative to prevent illegal argument exceptions during unimproved step count validation
added a check to return early if the currently opened editors are empty to improve performance by avoiding unnecessary processing when no editors are open
refactor verification method calls and add new test cases in BDDMockitoTest to improve code clarity and ensure correct functionality of mock handling throughout the Mockito framework
replaced the retrieval of the context class loader with the class loader from PathScanner to improve class loading mechanism for better context handling
implement # sayhi2 ( ) as an asynchronous operation ( # 4175 )
fixed checkstyle issue in abstractsplitbraint protectiontest
refactor logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null before adding the logout page to enhance stability by preventing potential NullPointerExceptions during login attempts
remove possibility to convert degree ( ) from giac to giac
refactor logging logic in DockerComposeContainer to utilize a unified log consumer mechanism to improve code maintainability and streamline logging behavior across container instances
fix : fix type inference issue in standardjavatypemappingtest
removed unused imports from AmbariMetaInfoTest . java to improve code clarity and reduce dependencies
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a way to instantiate a supplier using a supplier
replaced a ` break ` statement with a ` return ( true ) ` in ` ConsoleActivity . java ` to ensure the method returns a boolean value as intended
fix post with content - type header to be use in the vertx transport
added methods to handle platform separators in path handling to ensure compatibility across different operating systems
added null check for authorizationContext ' s parameters before processing to avoid potential NullPointerExceptions when parameters are not initialized
replaced the ` loadLibraryOnlyIfPresent ` parameter with a new ` throwExceptionIfFail ` method to improve error handling by indicating the failure condition during library loading
update sdk version to 4514284 and add tests for isStopped ( ) behavior to ensure accurate testing of textToSpeech ' s state after initialization and processing
implement hashcode ( ) and equal ( ) in transactionlogkey . fix # 298
added a new boolean property ` enableSqlWithoutProfile ` and modified related logic in ` JdbcEnvironmentProperties ` and ` JdbcEnvironmentRepository ` to enhance configuration options for SQL profile management without profiling
added a try - finally block around the write method to ensure data is released even if exceptions occur
remove compiler warning and use eventgenerator . fromfunction instead of lambda
pdfbox - 2852 : fix copy / paste error in dateutils
fix threadinfo retrieval in cachedthreadstatesGaugeset to account for stack trace depth
added a protected method ` prevTlogOnPrecommit ` and modified commit logic in ` UpdateLog ` , and adjusted sleep duration in ` LeaderTragicEventTest ` to enhance transaction handling and improve test timeout for better synchronization
updated the file reference for FastAsyncWorldEdit from P2 - V6 to 1.17 to ensure compatibility with the latest version of fastAsyncWorldEdit
fix for npe in segmentgeneratorconfig when path be null ( # 976 )
added a new method ` calculateNormalVector ` to the ` ObjUtils ` class and modified the way normal vectors are calculated in ` TriangulationHelper ` to improve code modularity and reusability by consolidating normal vector calculations
updated JdbcAuditService to include IdentityZoneId parameter in the find method to enhance functionality by associating identity zone identification with the query
updated method names and variable declarations in SpanCollector . java to improve code clarity and maintainability
added a null check for the current session in the authorization condition to ensure that the session manager does not return null to avoid potential NullPointerExceptions
updated the implementation of TransactionIsolationLevel to improve performance and maintainability of transaction management
updated method names from ` printLVgroups ` to ` printLogicalVolumegroups ` for clarity to improve code readability by using a more appropriate terminology
kristianrosenvold : change thread name to be more useful for junit test
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
replaced the ArrayList instantiation with a direct return of an empty ArrayList to simplify code by eliminating unnecessary iterations for component key creation
add a new OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance user interaction with the app ' s touch controller
replace the ` scaleHotseatWithWorkspace ` method with ` getHotseatScaleAndTranslation ` in the ` LauncherState ` and ` WorkspaceStateTransitionAnimation ` classes to improve hotseat scaling functionality based on launcher state
added a check for JUnitRule class in the DefaultStackTraceCleaner and updated the filter logic accordingly to ensure elements outside MockitoJUnitRule are excluded from internal runner
refactor MappedResizeableBuffer to use direct buffer conversions instead of direct buffer references to improve performance and clarity when handling direct buffers
added a private BalanceListener field and updated the balance listener management to improve balance management by separating balance listener registration and removal
modify color conversion logic in RealisticRenderer to handle different edge modes to ensure proper color display when the visual context is different from the Sticker edge
added a null check for httpClientResponse in HttpClientBeanPostProcessor . java to prevent potential NullPointerExceptions when httpClientResponse is null
fix ( gl200 ) : remove patternutil . checkpattern usage in protocol and decodestream
updated playback timing logic in FullDetailsActivity to ensure that playback events are accurately handled based on the last playback time
fixed spanish xml parsing ( ignore case of phonese token )
fix bug : if the select language be non - english , clear the item language .
updated ReactiveLoadBalancerClientFilter to conditionally set the override scheme based on the secure status of the service instance to ensure that the application correctly defaults to " http " when secure
http : / / issues . apache . org / jira / browse / amq - 3872 - remove redundant bytebuffer . duplicate ( ) call
fix a minor bug in the native - image debug info module .
refactor Correspondence creation to use a lambda expression instead of an anonymous class to improve code readability and streamline the comparison logic
replace references to ` isNonENLangSupported ` with ` isNonENLangSupported ` in multiple files to ensure consistency and accuracy in terminology related to non - US language support
localtransactionsigner : remove useless null check
add minecraftforgeclient to allow override the texture of the terrain texture at the block render time
added a return statement in the TxCacheDB class to prevent further processing when the cache is down
use jdk . internal . org . objectweb . asm instead of com . sun . xml . internal . ws . org . asm
update FastDictionary class implementation to improve performance and maintainability of the code
fixed bug in nio connection that be break when the session be close . jm - 819
updated FlightEvent instances for different flight event types and modified test values to accommodate new flight events and improve accuracy
[ beam - 1p26p0 ] update protobuf import to v1p26p0 ( # 2275 )
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure namespace declaration is added to the correct element
[ # 7640 ] instructorfeedbackresultspageuitest : add more information on the instructorfeedbackresultsspage
updated DefaultPasswordValidator to initialize rules list and added a new test for long password validation to enhance security and ensure correct handling of long password inputs
simonstewart : make it a bit more complex to make it easy to add a command to the selenium server .
removed the JUnit @ Test annotation from ProxyClassSerializationTest . java to eliminate unnecessary test imports and streamline test execution
updated the argument format string for scale and padding in DLNAMediaInfo . java to improve clarity and consistency in formatting parameters
fix npe in phase replacetoliveredetest due to speculativerootension refactor
added checks to ensure that authentication manager bean definitions are not overridden in the application context to improve robustness by preventing potential conflicts with authentication manager configurations
updated conditions for handling forwarded fields and modified test cases to improve handling of server and host configurations in the ForwardedRequestCustomizer
added a StringBuilder length setting in ConsoleReader . java to ensure a default StringBuilder is used for string processing
changed access modifier of allowedRoles and disallowedRoles lists from private to protected to allow subclasses to access and modify the visibility of these lists
updated OpenIDE - Module - Specification version from 1. 54 to 1.62 in multiple files to ensure consistency and correct versioning across the project
hbase - 27015 use configurable tl wrap size ( # 47
updated multiple Java files to reflect changes in package names to ensure consistency and accessibility of classes across the project
replaced JUnit 4 imports and added tests for the FixedLengthTokenizerTests class to improve test coverage and ensure correct exception handling for line length tokens
added protocol binding configuration and validation to OpenSamlAuthenticationRequestFactory to ensure proper protocol binding validation for SAML authentication requests
modified the DepthController to utilize AttachedSurfaceControl for applying SurfaceControl transactions to enhance the transaction handling by ensuring actions are executed on the root view
update version return value from " main " to " 2.5 . x " to accurately reflect the release version being used
swap write - > create a both prepreparebulkload and precleanupbulkload to avoid write lock
modify the substring logic for unSeqMergeList and update measurementSchemas index references to ensure correct retrieval of measurement schemas for improved functionality
camel - 4370 : avoid file - to - file conversion if inputstream be not a file type .
added login functionality to the DefaultShardManager and modified the build method in DefaultShardManagerBuilder to enhance security by allowing login checks before executing the login process
removed extra whitespace in DeleteGlobalRef function call to improve code readability and maintain consistency
renamed the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve clarity regarding the purpose of the table
camel - 8205 : do n ' t terminate response on behalf of timeout
modified condition to check if the user is in user student before comparing giver to enhance validation logic to ensure that only user - student data is processed
added checks for linked profile allowance and device path in BMPImageReader . java to enhance profile management by ensuring compliance with linked profile settings
fix argument order bug in plotmanager . java ( # 1880 )
pmd : wait before check the file in this package to reduce flakiness
refactor gridPresenter initialization and size setting logic in StdGridFragment . java to improve code clarity and flexibility based on user preferences
updated return values in ContributionsListFragment from false to true to ensure correct behavior of the fragment ' s behavior
added a test for skipping range queries in DistinctPrefixFilterIT and modified ScanUtil ' s iteration method in BaseResultIterators to ensure proper handling of edge cases in distinct queries and optimize scan performance
pdfbox - 4892 : add test for acrobatcheckboxgroup property , a suggest by valerybokov
added a method to retrieve the last modified timestamp of a file to enable checking file modification times for better resource management
added a condition to check for a valid metadata table in the HiveIcebergStorageHandler to ensure that the system correctly recognizes and handles cases where the metadata table is not valid
add option to select a default currency from a country - select variant in cashdepositform .
changed the exception handling from IOException to Throwable in WriteFlusher . java to improve error handling by catching more types of errors
added a new boolean variable ` mStartedEnterAnimation ` and modified content fill animation logic to ensure animations are only triggered when necessary by the user
added a new public variable activeKeyId to the UaaConfiguration class to store the currently active key ID in the configuration
fix email action link in actionlistener ( # 1747 )
modified the ` isActive ` variable to be volatile to ensure visibility of the boolean value across multiple threads
replaced instances of ` isDesc ( ) ` with ` isAsc ( ) ` in multiple files to ensure consistency in sorting logic based on ascending order
add some type cast to charsequence to avoid compile warning
added a check for the ownCloud app name in the condition to ensure the app is displayed only when the ownCloud app is associated with the ownCloud application
hbase - 7930 hbase can fail if hbase . rootdir . perms be not configure in hbase - site . xml ( rajeshbabu )
changed return values from httpServletRequest to httpServletResponse in JakartaServletWebExchange and JavaxServletWebExchange to ensure accurate localization support for response handling
8196321 : improve javadoc for java . time . instant . getepochsecond
updated the state format handling from int to String across multiple classes to ensure consistency in state format representation and improve clarity in test results
removed specific type from logging in CentralAuthenticationServiceImpl and adjusted conditional check in AbstractTicket to enhance logging clarity and ensure proper handling of ticket types
added check for IllegalArgumentException in PCCBased exception handling to improve error handling by identifying additional exception types
format string in AbstractFileResourceSet . java for consistency to improve readability and maintainability of the code
add support for override pathtranslator in pluginparameterexpressionevaluator ( fixes # 539 )
[ beam - 3949 ] change protobufcoder registry to beam - sdk - extensions - protobuf
updated HqlQueryRenderer to use a boolean parameter for token parsing to ensure that signed numeric literals are handled correctly during query parsing
refactor launch lug generation methods to accept parent length and update position settings to improve clarity and separation of lug generation logic based on parent length
removed the implementation of the getNonceFactory method that always returned null to simplify the code and avoid potential null pointer exceptions
( chore ) camel - mail : use log marker syntax consistently
[ java ] clarify default timeout value in driverconductortest .
changed the initialization of loaded classes from true to false to disable loading functionality during class scanning
added focus call to searchField in FullTextSearchPanel . java to ensure the search field is focused when displayed
refactor NioParams initialization for connection factory to improve code readability and maintainability
test : add comment on getdouble ( ) test for random all case
updated the assertion message format in TestSolrConfigHandler . java to improve clarity and accuracy of error reporting during test failures
replaced HttpMethod and related mock objects with ServerHttpRequest and ServerWebExchange mocks in the CsrfWebFilterTests to enhance test reliability by using the appropriate reactive types for server requests
updated the density handling in FilterResourcesStep . java to ensure accurate representation of display density values when no quality is defined
refactor UIID updates to use elementPrefix for better clarity to improve maintainability and ensure consistent UIID handling based on component type
removed dependency on DisplayMetrics . DENSITY _ 600 to simplify rotation condition in RecentsAnimationDeviceState . java
8270147 : c2 compilation fail with assert ( _ base > = oopptr & & _ base < = aryptr ) fail :
solr - 6157 : disable replication factortest until we can fix the underlying corruption
fixed - npe during execution of runnableservice
simplified the conditionals for determining the needToUpdateCredentials variable in FileDownloader and FileUploader classes to enhance code readability and maintainability by removing redundant checks
refactor code to ensure the scanner is closed properly when it is null to improve resource management by ensuring the scanner is properly closed to avoid potential NullPointerExceptions
replace direct access to iface with getOrDefault ( iface , 0L ) . doubleValue ( ) in NetMetrics . java to avoid potential null pointer exceptions when accessing network metrics
added a nonce parameter and assertion for claims retrieval in TokenMvcMockTests to ensure correct nonce handling for token claims
updated multiple Java files related to the chart editor package to improve code organization and maintainability across the chart editor component
set the width and height of the form layered pane to ensure proper layout behavior for the form component
added a method to adjust the height based on the owner ' s height in BrowserContentPane to ensure proper layout by accounting for the ownership ' s height
modified the database opening logic to return a boolean value indicating whether the database is connected to enhance user experience by ensuring the database is only closed when a connection exists
refactor DOCKER _ COMMAND to use Platform . DOCKER _ COMMAND for consistency to improve code maintainability and clarity by centralizing command definition
8156666 : [ testbug ] test isartorvalidationfromclasspath . java fail with npe due to miss input file
updated the drawLeaveBehind method to accept a color parameter and adjusted related color usage to enhance flexibility in coloring and maintain consistency with the app ' s theme
report a proper error message when the android studio plugin do n ' t support it ( # 668 )
cloudstack - 2120 : fix npe on identityproxy without table name
removed modulePersistEnable and modulePersistDisable lists and their corresponding getter and setter methods to streamline the module persistence functionality by eliminating redundant functionality
updated argument length check and improved error message formatting in GeminiMarketDataService . java to ensure proper handling of command - line arguments and improve clarity of error messages
fix question order for password reset ( # 1052 )
add an example of how to use testermaprealm for test .
updated import statements in AuthCheckFilter . java to include specific setup - related classes to enhance security by restricting exclusion for specific setup components
added a mechanism to manage and queue runnables conditionally in the scheduler to improve efficiency and prevent unnecessary execution of scheduled runnables
update method signatures to use varargs for command execution instead of arrays to improve flexibility in argument handling for command execution
updated XMLParser to handle end - of - stream conditions while reading characters to ensure robustness by preventing potential end - of - stream errors
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to address issues causing overflow on horizontal page overflow
updated arrow positioning logic in DeepShortcutsContainer . java to ensure proper positioning based on icon state
remove call to printstacktrace ( ) in favor of interruptedexception .
refactor the updateThumbnail method to include a refreshView parameter for better control over thumbnail updates to improve handling of new task states during gesture transitions
pdfbox - 2576 : correct usage message , a suggest by michael klink
[ amq - 6562 ] allow a hostname format specifier to use an actual ' host ' type .
refactor references to use ` this ` directly instead of accessing ` this ` in multiple activity classes to improve code readability and maintain consistency across instances
adjusted the calculation and usage of ` _ totalDocs ` and ` _ maxDocId ` in ` SizeBasedDocIdSet ` to improve the efficiency and clarity of document ID handling
added a method to prompt to opening a file with custom extensions in FileDialoger . java to enhance file opening flexibility by allowing users to specify filenames directly
updated widget sleep delay and refactored page count updates in AppsCustomizePagedView . java and AppsCustomizeTabHost . java to improve widget performance and ensure accurate page count updates
optimize flightconfiguration calculation by consider only active components
replace usage of seda : foo with direct : foo in sample app
[ trivial ] [ table - common ] fix date parser for non - english locale
[ ds - 3790 ] permission should be check before fetch metadata from dspace . ( # 4792 )
added a test method to check for missing required dimensions and metrics in StarTreeConfig . java to ensure that the builder correctly handles missing parameters and verifies expected exceptions
camel - 8205 : springroutebuilder should use recipient list a argument for dynamic and static recipient list .
refactor InlineLayoutBox to improve parent relationship handling and adjust style adjustment logic in HoverListener to enhance UI responsiveness by ensuring proper repaint behavior based on message context
replaced the DetectAuthenticationMethodOperation implementation with a ServiceConnection to manage operation services to streamline authentication process and improve code maintainability
