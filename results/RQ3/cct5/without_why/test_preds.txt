fix deprecation warn for socketappender convenience constructor
[ ds - 3762 ] general refactoring of code to reduce duplication .
[ java ] remove use of recorddescriptor . msglengthoffset which be deprecate in java 1.6 .
bugfix # 2745 , cloudstack - 2695 : do n ' t override overcommit ratio in vm detail
added flags property and methods to manage anti - aliasing in ShadowPaint to enhance flexibility in managing paint flags and ensure proper initialization of anti - aliasing properties
update the title for MassSetFieldsDialog to use localized strings to improve internationalization support for better user experience
make eclipse test work even if eclipse be n ' t the same .
added a check to ensure the nonce is not empty when it is not provided to prevent unnecessary checks for empty nonce values
added a RemoteInputListener interface and modified the constructor to accept a connection state to improve the responsiveness of the server when a connection is detected
refactor conditional statements to maintain consistent formatting in OrcEncodedDataReader . java to improve code readability and maintainability
filter out disabled thing from homeconnect handler ( # 1697 )
added a null check before removing and adding policies in AuthorizeAdminServlet . java to avoid potential NullPointerExceptions when the authorization policy is not set
updated JSON assertions in DefaultTypeAdaptersTest and ObjectTest to use matches instead of isEqualTo to allow for more flexible validation of JSON formatting based on Java version
added JSON processing for DAG information in TezTask . java to enhance debugging capabilities by capturing and logging DAG information during execution
bugfix # 212119 , introduce getheaptime ( ) and getheaptime ( ) to take into account the period of time
replaced the ` RxJava2Tasks ` class with a direct call to ` CommonsApplication . getWApi ( ) ` for upload count retrieval to streamline the code by eliminating an unnecessary abstraction
remove lock _ mode _ read _ committed check from mvtable , since it be superfluous .
[ issue # 5898 ] fix commitlog ' s maxoffset bug ( # 5898 )
added logic to check if a folder is open when it is null to ensure that folder information is marked as open when it is not already available
added a test method to verify sorting of pgproperty names in ascending order to ensure that property names are sorted correctly in ascending order for consistency
added a new constant for the list of points that this student gives to others to improve clarity and maintainability of the code by removing unused constants
updated method signatures to use ItemInfo instead of Object to improve type safety and reduce potential null pointer exceptions
updated assertions in RequestBuilderTest to use ` isIn ` instead of ` hasMessage ` to allow for more flexible error message assertion for HTTP methods
updated NearbyActivity to use NearbyListFragment instead of a hardcoded string to improve clarity and maintainability of fragment management within the application
renamed the parameter ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` class to improve clarity by explicitly indicating the variable ' s context
[ te ] add send _ zero _ anomaly _ email field to EmailConfiguration and EmailReportJob classes to enable tracking of zero anomaly status for users
[ flink - 33063 ] [ kafka , test ] fix the bug of open ( ) method in flinkkafkaconsumerbase
added methods to retrieve user and geofence by ID in DataManager . java to enhance data retrieval capabilities for better user management
added constructor to BlockingResponseListener that accepts a length parameter to enable dynamic resizing of the BlockingResponse for improved performance
refactor ` memberBroadcastsReceived ` method to accept a byte array instead of an anonymous Runnable class to improve flexibility and error handling when processing broadcasts
fix ( net ) : fix snapshot path issue on multi - leader
remove trail slash from url ( # 2319 )
updated ConfigMetadataProviderTest . java for improved test coverage to ensure reliability and accuracy of metadata handling functionality
updated import statements and method parameter names in ListFragment and SnoozeActivity classes to improve code clarity and maintain consistency in naming conventions
added a new AcceptAllFilter class and refactored directory entry handling to use it to improve code clarity and maintainability by encapsulating the AcceptAllFilter logic
[ flink - 21743 ] [ test ] fix typo in jdbctestdatasource interface
specify hotspotresolvedobjecttype . lookuptype ( ) to throw classnotfoundexceptions
added validation for Docker image names to ensure valid tag names to improve error handling and provide clearer validation feedback for Docker image names
updated error message for failed authentication in LoginActivity to improve user feedback by providing a more specific error description
added setAutofocus ( " autofocus " ) method in multiple form - related classes to improve focus behavior for better user experience
add a test method to verify SAML properties for different identity zones to ensure correct handling of SAML configurations and configurations in the application
added a check to ensure the list is not empty before adding new items and updated the ComparableVersion class to include a new test case for MNG 7644 to improve code robustness and validate functionality of the ComparableVersion class with additional numeric formats
updated bottom mode settings and modified return values in Sheet . java and UIManager . java to improve UI consistency and ensure preferred dimensions do not exceed sheet dimensions
updated package structure and import statements for ParallelUniverse and related tests to improve organization and clarity of test classes by consolidating internal classes
updated method type handling in LocalCacheFactory and NodeFactory to use a constant for the method type to improve code readability and maintainability by reducing repetition
changed cell style from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to update to support solidity in cell rendering
added self loop drawing functionality in ProcessingPreview . java to enhance graph visualization and improve performance by drawing all self loops efficiently
updated SOLIDity constants from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059 across multiple files to align with the new naming convention for consistency and clarity
rename method addManaged to manage in DropwizardAppRule to improve consistency with Java naming conventions
reset drag handle indicator translation to zero to improve visual clarity during transitions
bugfix : remove some dead code leave over from last commit
updated error messages for query optimization settings in HiveConf . java to clarify the distinction between query optimization and filter management
ignore test that sometimes fail on osx
added Maven bundles for Jetty ALPN client libraries and a debug option for diagnosing OSGi bundles to enhance compatibility with Jetty and facilitate debugging in OSGi environments
fix activiti optimisticlockingexception when try to update a process instance lock
no effective change - javadoc update for transaction . equals ( )
replaced the @ CustomFieldBehavior annotation with @ ExcludeFromRuleKey and updated input annotations to exclude the execution from artifact caching to improve clarity and maintainability of the code regarding artifact caching behavior
simonstewart : applying patch from joakko ' s patch from joakko ' s patch from joakko
added a check to ensure the fam is not added multiple times before adding it to the colFamToDynamicColumnsMapping to avoid unnecessary updates to the mapping , which could lead to race conditions
[ hotfix ] [ runtime ] fix minor code issue in javac
phoenix - 1156 add logic to add derived column and indexes for non - mapped table in metadata endpoint ( karel vervaeke )
[ issue # 7258 ] fix issue that cause issue in accountslogic . addinstructorcontact ( # 7258 )
corrected the import statement for TestCellReference in AllXSSFTests . java to ensure compatibility with the latest Apache POI library structure
add a check to see if a block hardness work on the client . close # 71
fixed bug with long pointer press in native component . http : / / github . com / codenameone / codenameone / issues / 3049
truffle : do not inline the inlining if the inlining be not enable .
consolidated null checks for alias and alias return values in BaseBuilder and XMLConfigBuilder classes to improve code readability and reduce redundancy in null handling
removed unnecessary check for instance of ListBlockParser in ListBlockParser . java and added a new test method in SpecialInputTest . java to simplify the indentation logic and ensure proper rendering of nested lists
added a new abstract class AbstractOptionalAssert for customizable optional assertions to provide a clearer abstraction for asserting optional values and improve error handling
ignore test that fail due to http : / / github . com / spring - cloud / spring - cloud - gateway / issues / 1070
[ test ] remove unnecessary global import and unnecessary native method declaration .
camel - 8727 : fix junit test which fail often on the ci - server .
added a condition to check if the video format is enabled in RemotePlayHandler . java to ensure that web subtitle handling only occurs for video formats
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier classes to enhance security by preventing users from using TLS algorithms
cloudstack - 2120 : cloudstack - 2120 : filter out local storage pool from uservmmanagerimpl . java
hive - 23790 : print cache entry in log . info ( jesus camacho rodriguez , review by vineet garg )
add ` ` skip model update ' ' option to managedependency ( fixes # 2188 )
added a test for sending intents with a request code in ShadowActivity . java and implemented the send method in ShadowActivity . java to ensure proper handling of pending intents and validate intent sender functionality
updated RocketFigure3d to enable GL - disabling FBO and refactored graphics creation to improve rendering flexibility and manage FBO settings more effectively
add disposal of controller listener from accounthandler to avoid memory leak .
added import statements and a static method to beforeClass in TestCoreAdminApis . java to address compatibility issues with Java 9 and ensure proper testing environment
updated the year calculation in TimestampUtils and added a new locale in SetObject310Test to improve accuracy in year handling and enhance date formatting in tests
fix a potential npe when close an already close jabber protocol provider . report by michael klink .
hive - 23794 : add miss ` ` current _ ws _ commit _ id ' ' to txnhandler ( jesus camacho rodriguez , review by ashutosh chauhan )
replaced ByteChunk with ByteBuffer for better memory management to improve performance and reduce memory overhead when handling buffered data
added a new method ` toSync ` in ` AsyncUtils ` to convert an ` CompletableFuture ` to ` T ` and created a corresponding test in ` AsyncUtilsTest ` to improve asynchronous handling and ensure proper exception conversion in the service
added ActionGraphBuilder to multiple compiler factories and updated method signatures accordingly to enhance action graph generation capabilities and improve code maintainability
add test case to cover hidden file input for upload .
removed unnecessary import of java . util . Date and added exception handling for table creation in SQLManager . java to streamline the code for better readability and handle SQL exceptions more effectively
added a check to return super . getLocalMavenDir ( ) if the file does not exist to improve robustness by handling potential missing file scenarios
mob - 1293 : hide hide label from av ( too much )
fix : return null instead of throw exception in ctelementimpl # getmetadata ( # 2008 )
use addflags instead of setflags to avoid oom crash .
fix : skip reorder by entityiterable ( # 1990 )
updated error message for missing method call in verify ( mock ) to clarify the reason for the missing method call for better debugging
added a null check for backupFolder before logging the expiration log message to avoid potential NullPointerExceptions when the backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating a void array using reflection to explore and handle the behavior of Java reflection when attempting to instantiate an array of void type
added @ AddToRuleKey annotation to the ToolType field in ClangCompiler and GccCompiler classes to ensure that the toolType field is included in the build system rules for better rule key management
pincheck : use a constant for the ping timeout ( # 1128 )
camel - 20225 : camel - prometheus - karaf should be sample by default
removed unnecessary @ Ignore annotations from multiple test classes to clean up test files that require MongoDB server
no jira - fix test such that the problem be fix
updated the condition to check if the table is an artifical table to improve accuracy in identifying non - artifical tables
modified file type checks to use isDir ( ) for directory checks to improve clarity and correctness when handling file types
datamongo - 893 - fixed potential npe in mongosessionmanager . clearattributes ( ) .
use setsizefromlayout ( ) instead of set fixed size for camera surface
refactor stopping handling to ensure proper null checks before invoking countDown ( ) to improve robustness by preventing potential NullPointerExceptions during execution
removed unnecessary whitespace in the HuobiStreamingService . java file to improve code readability and maintain consistency
[ camel - 14000 ] fix defaultmessagehistory timestamp to be take into account when calculate elapsed time
test : fix delayedmonopublishertest for error on ci
updated assertions in WebSocketHandshakeTest to check for a specific error type to improve error handling by providing clearer failure messages when an unexpected error is expected
refactored the AllAppsTransitionController class to simplify the layout change listener implementation to enhance code readability and maintainability by reducing verbosity
updated variable names for clarity and consistency in PolicyBasedAuthenticationManager . java to enhance code readability and maintainability by using a more descriptive variable name
camel - 8186 fixed the xpath router ' s default output channel support
updated MessageBundleProperties to use DurationCapable for cache seconds and changed how cache seconds are set in CasCoreWebConfiguration to enable support for duration handling and improve cache management in the application
updated the OpenAPI version from " 3.0 . 0 - rc1 " to " 3.0 . 0 ' ' in multiple Java files to align with the latest API specifications and ensure compatibility
replaced the method ` append ( buffer , true ) ` with a call to ` append ( buffer , true ) ` to streamline buffer management and improve performance
added a method to check for the presence of an alt - rt . jar in the classpath and included a warning check to ensure that the application correctly handles and disables the alt - rt . jar detection feature
updated user deletion queries and modified test assertions in JdbcScimUserProvisioningTests . java to ensure correct data retrieval and improve test accuracy
replaced ` Arrays . asList ` with a ` List < String > ` for configuration options in ` FlightRecorderProfiler . java ` to improve flexibility and compatibility with different Java versions
ggb - 510 do n ' t drop image if there be no webcam stream .
added a condition to check if the content view has content before processing in HttpParser . java and implemented a new test for chunked PUT requests in ProxyServletTest . java to ensure proper handling of chunked responses and validate the server ' s behavior for chunked uploads
add atmosendpoint @ see and @ link to tika - server
added checks for " printf " and " print " methods in Java2TypeScriptAdapter . java to enhance method handling for additional output methods
add a new file TestCapacityUntilGCWrapAround . java to test memory allocation for garbage collection on 32 - bit platforms to ensure that garbage collection methods do not cause overflow issues on 32 - bit systems
update package - info . java files for mmm and ppp to ensure consistency and clarity in package documentation
remove unnecessary if ( ! res . isstampedatstart ( ) )
added unit test base on user forum issue
tmi - 117 : jpegimagereader should not throw an exception when process an invalid icc chunk number .
add terra rod model change check to ensure they wo n ' t trigger the reequip animation
updated JoobyModule and SpringModule to handle entry types more effectively to improve module registration by ensuring only relevant entries are processed
refactor and simplify the creation of loader rule in catalina context to improve code clarity and reduce complexity in class loading logic
bug 53337 - name updater : support namemap in jmeter 3.0 . 3
fixellipsoidregionselector . start ( ) to properly set start flag to true .
updated URLs from " http " to " https " in JavaSEPort . java to enhance security by using secure connections
[ geos - 7109 ] getfeature : validate sort by attribute when get a feature ( # 6695 )
updated the null check for the grantor variable from ` equals ( ) ` to ` null ` to improve code readability and correctness when the grantor is null
added compatibility image creation and flushing in DiagramGenerationTest . java to ensure correct rendering of images on different screen sizes
add an error message to fmlcommonhandler about sideddelegate , if you try to install minecraft . class on top of fml but sideddelegate be null .
refactor DataUtilities and ReTypeFeatureReader classes for better organization to improve code maintainability and readability
fix test which randomly fail on slow ci server .
mondrian : add stringutil . split ( ) method which take string and string into account .
port fix bug 40884 . use senderror instead of response . statuscode for 404
refactor command handling in SystemHighlighter to use a dedicated command index variable to improve code clarity and maintainability by replacing variable names with more descriptive variable names
updated version and version date constants in Constants . java to prepare for the upcoming release and its corresponding date
update buffer position setting to use dimensionSize to ensure correct handling of dimension size during buffer operations
added functionality to check if the shell drag and drop is ready in the system UI to enhance the system UI responsiveness during drag operations
[ log4j2 - 3982 ] skip socketappender socket option test on java 7 only
added a new encryption key for PSK - AES256 - GCM - SHA384 + TLSv1.2 to enhance security by including additional cipher suite
replaced direct text retrieval with long description retrieval in NearbyMapFragment to improve accuracy of displayed long description time
added JsonProperty annotation to ScimGroupMember . java to enable JSON serialization and deserialization for improved data handling
modified HqlQueryRenderer to handle reserved words in query parsing to enhance query functionality by properly managing reserved words in the query parsing
increase the null check for the variable ' d ' to ' s ' to ensure ' s ' is not null to avoid potential NullPointerExceptions
refactor Parser class for improved readability to enhance maintainability and ease of understanding
modified the ` offsetStreamIndex ` method to include a ` indexStartsAtOne ` parameter and adjusted related logic to improve track selection logic by conditionally adjusting the position based on previous selection
tika - 697 -- add detection of ' cpio ' mime type , per tarzanek ' s patch
[ flink - 14731 ] [ table - planner - blink ] remove getmonotonicity ( ) from sqloperatortable interface
added custom equals and hashCode methods to OneTimeTokenAccount and OneTimeToken classes to enhance object comparison and hashing for better data integrity in persistence
updated touch handling condition in AssistantTouchConsumer . java to ensure that fling is only enabled when the assistant is not launched
added a new file SolarisShortDSA . java implementing a key pair verification with DSA and DSA signing to implement a test for Solaris and ensure compatibility with different cryptographic algorithms
added toggleSearchLabel ( false ) method in ListFragment . java to improve user experience by managing search label visibility
cloudstack - 8703 : fix issue in create snapshot command when volume be create on primary
refactor the FileDetailActivity to use a new DetailsServiceConnection class instead of an anonymous inner class to improve code clarity and facilitate the retrieval and unregistration of the service connection
replaced direct failure handling with an AtomicReference for better thread safety to improve reliability and clarity in exception management during SSL connection failures
modified the equals method in ConjunctionScorer to compare Scorer objects directly to simplify equality checks for ` Scorer ` objects
Added a null check before binding items in Launcher . java to avoid NullPointerExceptions when colliding items
fix race condition in cpmemberaddremotetest . waitforleaderelection ( # 11878 )
refactor cache size handling to use a desired size and log warnings when cache is full to improve cache management accuracy and enhance performance tracking
updated API path from " / api / v2 " to " / api / v3 " and modified several methods in CryptoFacilities and CryptoFacilitiesAuthenticated classes to reflect the new versioning scheme and ensure compatibility with the latest API changes
added empty ( ) method to the freenect2 class to provide a way to check if the current state is empty
added handling of null page data in AsyncPageReader and created a new test for empty dictionary pages in TestDrillParquet to improve memory management and ensure correct functionality of the read / write operations
refactor method parameters and add validation for argument types in SerumStreamingService . java to improve argument handling and ensure correct processing of market data types
add config option to disable the animation when an item be charging on top of a mana pool . close # 161
[ java ] handle cluster client time out with aeron client time out with aeron client time out .
improve error handling by logging the exception instead of ignore them while wait for thread to die
make test more reliable on less filesystems
swapped the injection of style scsss in ResourcesInjectorFull . java to ensure that the correct scss is injected for the open screen style
updated ` changeLogFile ` and ` outputFile ` types to use ` FileResource ` instead of ` String ` to improve type safety and consistency when handling file resources in the Liquibase task
replaced direct field access with getter methods for y and z in BlockWorldVector . java to ensure type safety and avoid potential ClassCastException
updated return statements in LongConcurrentLRUMap . java to remove comments and added final modifiers to improve code clarity and enforce immutability for key and value fields
include regex in the resource configuration of ReflectionProcessor to ensure that literal values are safely processed in the resource configuration
modified the cache retrieval logic in FileCredentialsCache . java and modified the cache initialization in EmptyCC . java to enhance security by ensuring the cache starts with a valid file name and improving argument validation
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the new naming convention for the test output
[ nc - 2058 ] check for peer still available and require eth _ sync _ min _ peer _ count ( # 2059 )
danielwagnerhall : fix a classcastexception find via oss - fuzz
ggb - 2337 fix : do n ' t expand ' AreEqual ' expression in order to compare segment [ x , y , z ]
fix a deadlock when re - rendering on large android device
fix flakiness in hazelcasttestsupport . sleepmillis ( ) .
fix issue with write - behind write - behind write - behind write - behind write - behind write - behind write - behind data store
added a line to set the icon for JLabel to null to remove unnecessary space from the group tree
updated test method names to set strict match mode to false instead of true to improve clarity of test intent and ensure correct behavior of the resolver
added tests for the ShutdownMonitor to verify socket status and ensure proper resource management to enhance the reliability of the ShutdownMonitor and ensure proper resource cleanup during tests
fix large chunk fill rate during auto - compacting and persistent data . ( # 4631 )
refactor methods to improve serialization handling and field reading to enhance code readability and provide clearer error messages during serialization
[ hotfix ] [ util ] move componentclosingutils to androidx . util . coordination
bug 7119 : delete the volume during snapshot creation for a vm which have not be transition to error state
cloudstack - 3468 : fix npe in createconfiguration api when get ipv6 address from ipv6 address ( # 2898 )
renamed ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer . java ` to standardize naming conventions for better readability
increased the retry timeout for the halfdeletedcollection2 leader from 15000 to 30 seconds to allow more time for leader retrieval in the cluster
remove extra space in error message ( # 1097 )
updated drawing parameters in URLImage . java to correct positioning to ensure proper rendering of images by considering their vertical position
updated field comparison from solrDocument1 to solrDocument2 in SolrTestCaseJ4 . java to ensure consistency in field name comparison between SolrDocument objects
mondrian : fix for jdk - 8024796 , and refactored ice4j code to use a dedicated method to improve code readability and maintainability
[ hotfix ] [ stream ] make streamtaskexception wrap the underlying exception
improved string handling and parsing logic in Preprocess . java to enhance readability and maintainability of the code
removed unnecessary line breaks in the read method implementation of MessagePack . java to improve code readability and maintainability
added a new annotation file ` Mapper . java ` that defines a default annotation for type to provide a mechanism for configuring types in the Apache POI framework
fix : do n ' t encode empty extension list ( # 2723 )
add extra check to librarymanager to ensure all artifact be not create if there be no internal name
add alias for node _ popup _ scripting in scripting menu entry visitor to enhance navigation by providing a clear alias for scripting options
updated constants and methods in OverviewActionsView and RecentsView to enhance task visibility and interaction based on device profile to improve user experience by refining the behavior of action views in different device contexts
camel - 8071 : camel - jms should use < jmsmessage > instead of < jmsmessage > a the default implementation . thanks to joerg kessler for reporting .
removed IOException declaration from multiple Java files to simplify error handling and improve code readability
deleted deprecated classes AbstractDelegatedVerb and FailureContext to remove unused components to streamline the codebase
added a micro servlet and modified gzip handling in GzipHandlerTest . java to improve gzip processing accuracy and enforce immutability for content headers
2 . x : fix for one test case due to backpressureutils . getandaddrequest .
added logging functionality and improved component lifecycle logging in SpeedmentImpl . java to enhance debugging capabilities and trace component lifecycle events during execution
add a new file LoadDSpaceOAIConfig . java that implements HTTP loading from dspace - config to facilitate dynamic configuration loading in the application
hbase - 16811 improve hbase debugging and fix findbugs warning
camel - 4906 : camel - test should disable jmx if not already on jmx
replaced hardcoded ' / ' with a constant for centralized package separator in SourceLineAnnotation . java and SourceCodeDisplay . java to improve code readability and maintainability by using a consistent constant for the separator
added methods to find Hadoop and Hadoop binary paths , and updated RemoteSparkJobMonitor to print application information to enhance configuration capabilities for Spark applications and improve visibility into application execution status
added support for maria database in the DbConnectionManager to ensure proper handling of database connections involving " maria "
fix round error in split log when dir be empty ( # 469 )
add a new test class ExecuteAndReturnStringTest for testing network error handling to ensure proper functionality and error reporting when interacting with the application
added a new file ` InvokespecialInterface . java ` that implements a dynamic interface with default method invocation to demonstrate the use of ` I ` for invoking dynamic methods in Java
log4j2 - 1343 fix bug in evictingboundedlist javadoc
make sure we do n ' t have turn cost support for turncosts = true , fixes # 657
added validation to check if the selection is disabled and if it is not null to ensure that selection values are valid to prevent illegal state exceptions
hbase - 13053 addendum remove null check for ' md ' in rpcserver ( feng honghua via brock )
updated hotseat cell size calculation to include border spacing to enhance layout flexibility for better UI appearance
update key comparison logic in ExpressionTree . java to utilize values . get method to simplify code and improve maintainability by leveraging existing functionality
add version check to NamedTaskdecorator and fix test failure
use getnewindexdir ( ) instead of getindexdir ( ) because getindexdir ( ) may return null
change the initialization of the equal variable from false to true and update the comparison logic to ensure the equality check accurately reflects the display mode behavior
updated UnicodeToLatexFormatter to handle high Unicode characters and modified corresponding tests to ensure proper formatting of high Unicode characters and improve test coverage
correct handling of embedded apostrophe in embedded apostrophe . close # 81
alexeibarantsev : keep track of the last selection window , and allow for easy debugging .
updated StringSearchPanel and BookmarksPanel to enhance UI appearance and added functionality for clearing tables to improve user experience by ensuring proper icon visibility and functionality for the clear marking file
refactor OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building URI to simplify URL construction and improve code readability
fix softassertions to work in jdk 8
updated the adaptOrders method to accept a reverse parameter and adjusted the order container initialization to allow for limit orders to be reversed , improving order management flexibility
[ delombok ] fix a bug in the handling of annotated variable in delombok . tostring ( ) .
make some test not yet implement . should fix the build .
updated Configuration instantiation to use a default value and removed unnecessary null check for configuration to simplify configuration handling and improve code clarity
changed method call from ` super . drawChildren ( batch , parentAlpha ) ` to ` super . draw ( batch , parentAlpha ) ` to simplify rendering by using the superclass ' s draw method
added unit test base on user forum issue
refactored to make base url easy to fix some issue report by ant .
added tests for the ` bestDateTimePattern ` method in ` ShadowICUTest ` and modified the method in ` ShadowICU ` to correctly handle locale - specific patterns to ensure accurate date formatting based on locale in the ICU implementation
updated the implementation of the hash map to include additional color values to enhance the representation of color data for better user experience
added ZuulProperties to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enable configuration of zuul - related properties in the application
tika - 3772 -- fix for tika - 3773 -- fontparsers should use utc . default time zone and use utc . setdefault ( ) to avoid npe .
add sample application for now , in order to reduce duplicate code .
update calculation of xDist to use the absolute value of mScroller . getCurrX ( ) to ensure accurate positioning of the scroll based on the current screen ' s position
remove the config . xml file ( which be n ' t use anywhere in the project )
removed the null annotation from the countPlaceholders method and related checks in LazyMessage , StandardSubjectBuilder , and CustomFailureMessageTest to simplify the method signature and enforce stricter checks on null input
[ java ] fix format issue in teststream . java
moved template parser class to a separate package and updated import statements accordingly to improve organization and accessibility of template parser classes within the markup package
added a new test method ` testXPathString ` to validate XML output to ensure correct evaluation of string elements in XML output
added @ Nullable annotation to FutureUtils . java to indicate that certain variables may accept null values
add a warning message if a dynamic invoke be not resolve during call graph construction .
update email reference in test to the new example email , not the gmail reference .
updated HTTP response formatting in HttpConnectionTest . java and modified URIUtil . java to use URIUtil . java to improve code clarity and correctness in handling bad URI encoding scenarios
added a method to ` AbstractResultSet ` and ` ResultTableResultSet ` to get the column data type to provide a consistent way to retrieve column data types across different result sets
add default implementation for service client configuration ( # 4841 )
updated HSSFPictureData class to improve image handling methods to enhance performance and maintainability of image processing features
replaced the use of ` System . currentTimeMillis ( ) ` with ` Duration ` for time representation to improve accuracy and clarity of time tracking in the application
added version parsing functionality to LibMediaInfoParser to allow configuration of the media info version dynamically
refactor IdeaDependency handling by modifying proxy creation logic and adding error handling for single entry and module dependencies to improve code maintainability and enhance error reporting for dependency resolution
8014271 : add - xx : + useserialheap a the default constructor for jdk - 8014271
added multiple @ SuppressWarnings ( " serial " ) annotations to the Gson $ Types class to suppress serialization warnings for these classes
make mouse wheel event position aware to canvasimpl
updated MongoQueryCreator to handle null values more gracefully to improve robustness of query execution when dealing with null values
[ flink - 1846 ] [ core ] fix the incorrect default value for multistypeinfo in flink - api
added retrieveByIssuer method to XOAuthProviderConfigurator to enhance functionality for retrieving active providers based on issuer
pdfbox - 2852 : improve cmapparser , a suggest by michael klink
refactor ContactsBackupJob to use a separate service connection and binding for operations tracking to improve code organization and facilitate better handling of service operations
refactored type constraints and introduced new classes T6938454a and T6938454b with generics implementations to improve type handling and provide examples of bounded type parameters
add isconfighidden ( ) method to accountlist .
added a check in DisplayController to log inconsistencies between display state and supported bounds to ensure consistency between old and new display states and supported dimensions during updates
updated schema removal logic in PMetaDataImpl and added a test for schema removal in PMetaDataImplTest to ensure the schema is correctly removed and validate its functionality through testing
ggb - 2338 fire passive login event after login , so that ui be consistent with rest .
added a new Box2DTest class and updated related files to implement it to implement a test case for Box2D on Android applications
add more diagnostics to localbypartioner and columnfamily . patch by jbellis ; review by eric evans for cassandra - 440
[ hotfix ] [ network ] change default buffer request timeout to minute .
chore : update java and python dependency ( # 757 )
add help button to display openoffice help page
use childoption to preserve protocol option order . fix # 854
changed method return types from ` Map < String , ? > ` to ` Map < ? , ? > ` in ` BinanceAuthenticated . java ` and updated import statements in ` BinanceFundingHistoryParams . java ` to improve type safety and eliminate unnecessary dependencies on external classes
fix scanresultobject . loadclass ( ) to not throw illegalargumentexception when class reference be null
fix for nutch - 854 : decoding process result in infinite loop .
datajpa - 433 - fixed regression in querydsl . sort ( ) due to incorrect null handling .
added null check for actor in ParallelAction and SequenceAction classes to ensure safe execution and prevent potential NullPointerExceptions
test ( refactor ) : fix checkstyle violation in cttypetest . java ( # 2279 )
added synchronization to the closing of sfWriters in HDFSEventSink . java to ensure thread safety during concurrent access to the sink data
added a new file ` Issue888 _ JavaI . java ` implementing interfaces ` Issue888 _ JavaI ` and created a test class ` Issue888 _ KotlinI ` to implement and verify the behavior of new methods involving Java I / Kotlin
ambari - 21142 . improve cert revocation logic for openssl ca . ( swagle )
added a check to ensure that empty response bodies are handled correctly in the AbstractHttpTest class to improve response validation by preventing duplicate response bodies
add some more feedback when eval script can not be load .
fix hikaricp connection pooling , add dbcp and hikaricp driver ( # 1656 )
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to ensure consistency in method naming for better readability and maintainability
added a method to filter files based on their locking status and visibility to improve user experience by managing file locking mechanisms dynamically
updated Version . java files to reflect new versioning scheme to ensure compatibility with upcoming features and fixes
clear endpoint cache when keyspace keyspace ' s replication strategy be change
refactor ` waitForState ` method to introduce a new method ` waitForState ` and update its usage for better clarity to improve code readability and maintainability by centralizing state waiting logic
updated method signatures to use SkylarkRuleContextAttr instead of Map < String , Object > to improve code clarity and maintainability by consolidating attribute handling
simonstewart : moving the storage interface to the new storage class to allow for easy reuse
fix redundant view creation in view planner a a result of create view statement ( # 27247 )
changed catch block from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by capturing a broader range of exceptions
modified the query retrieval logic in SpellCheckComponent . java to ensure it uses the correct query string or null to avoid potential null pointer exceptions when accessing the query parameter
added validation for header values to check for illegal characters and whitespace patterns to ensure that header values conform to HTTP specification and prevent illegal configurations
[ gr - 39936 ] fix offset in hybrid layout for hostedinstanceclass .
remove astcommentcontainer instance method asap , remove it ' s not need .
hhh - 16017 - add fetchtype . lazy ( true ) to allow selective use of fetchmode . lazy in destination model
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend from AbstractSpecFilter and simplify the filtering logic to enhance code clarity and maintainability by leveraging a common inheritance structure
added assertions to verify database name and table name in TestCompactionTxnHandler . java to ensure correct retrieval of database name and table information during compaction transactions
camel - 6560 : added graceful shutdown for the timer consumer . thanks to simon steiner for the patch .
added a check to ensure that only processed blocks are processed in TraceBuilder to improve trace management by avoiding unnecessary processing of processed blocks
update ProviderManager to handle null elements more accurately to improve robustness of provider management by preventing NullPointerExceptions
simplified the return value logic for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to streamline code for better readability and maintainability
added a new condition to check the presence of a local index limit in multiple classes to ensure that the local index limits are correctly applied and improve scan processing
add type check when add a collection with the same name before use it in altertablestate .
updated cursor positioning logic in VDUBuffer and refactor cursor change handling in vt320 to improve rendering consistency and maintain cursor state across different screen sizes
added a static final String USE _ RETRIES = " useRetries " to the HttpShardHandlerFactory class to enable retry configuration for HTTP shard handling
[ java ] fix version parsing for java 11.0 . 7 . 0 . 4
added a check to return early if no input gates are present to improve performance by avoiding unnecessary processing when no input gates are available
int - 1952 fix unit test for receive message source parser
fix possible npe in getproperties method in remotecluster .
replaced throwing an IOException with setting the cause of an IOException to improve error handling by preserving the original exception cause
ambari - 20827 . add ambari headless plugin to support ambari - server communication ( dlysnichenko )
fix a bug in update confidence when a tx have be create or delete .
bugfix # 523 , add - xx : + aggressiveopts option to jmxsupport - g1 per gc
removed redundant import statements and updated return logic in NearbyController . java to streamline code and improve readability by eliminating redundant imports
pdfbox - 2576 : make class public , avoid unchecked cast
updated the condition to check for home activity type in BaseSwipeUpHandlerV2 . java to ensure that home activities are correctly handled during swipe up gestures
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to reflect this change to improve clarity and consistency in naming conventions regarding edge client filtering
updated test method names and modified return statements in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity of test cases and ensure proper handling of network and sim country names
added method to set unfreezeAmount in UnfreezeBalanceV2Actuator to ensure proper handling of unfreezing amounts
fix the description of qos notification in conferenceschedulexlsxfileio ( # 3819 )
simonstewart : switch the firefox profile to use the stringutils class instead of the guava one
refactor multiple assertion classes in the project to improve consistency and maintainability of the codebase
clarify return value of publish ( ) in javadocs ( # 1853 )
datadoc - 147 - add support for multiple pushall operation on the same field in update .
added a null check for ` randomUUID ` before setting it in ` MockHubService . java ` to avoid potential NullPointerExceptions when ` randomUUID ` is not provided
added hover event handling to InputConsumer and modified input consumer behavior to improve user interaction by handling hover events more effectively
updated the configuration handling logic in CoreContainer . java to add a delay before proceeding with Zookeeper server checks to ensure that the application behaves correctly when bootstrapping with configuration settings
camel - 10727 : camel - netty - http consumer should use label parameter for max header size . ( # 10727 )
hbase - 22288 set hbase . client . retries to 15 in hbasetestingclusterautostarter
fix ` filenotfoundexception ` when the ` basedirectory ` be a relative path ( # 2750 )
make encodedgraphtest retry a bit more robust by retry the compilation if one fail .
updated the query command in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a test method to verify the result of the query over the output to ensure accurate data retrieval and enhance test coverage for database dump functionality
added logic to retrieve and adapt Kraken currency details from KrakenAssets to ensure accurate representation of Kraken asset quality in the application
added tostring ( ) method to anyof to make it show a string representation of the object
[ te ] fix email format for auxiliary email ( # 4601 )
[ influxdb ] fix npe in influxdbpublisher . publish ( )
refactor method names from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming for better code readability
enable unique local address validation in netutils ( # 4388 )
thirdeye - 637 : incorrect column name in datatext for clustered mode
added methods to set and set properties in WrapSystem , enhanced strUtils , and modified method names in CompileMethodEntity to improve system property management and enhance code readability with clearer method names
added a constructor to the UpdateRequest class that accepts a URL to provide an overloaded constructor to support POST requests
changed enum declaration from static to non - static in multiple classes to allow for better flexibility in enum usage across the codebase
removed an experimental format warning method from the RequestHandlerUtils to streamline the response handling by eliminating unnecessary warning messages
improve jpmsutil logging by format module name
change row - height of various table row to fit on a small screen size
modify the handling of broker heartbeat in DefaultBrokerHeartbeatManager to improve code clarity and avoid potential null pointer exceptions
fix npe in cqlinputformat when query with no parameter
simplified the condition for identifying test dependencies in JUnitTestsShouldIncludeAssertRule . java to enhance code readability and maintainability
[ rulegraphtemplate ] add equal and hashcode method to rulegraphtemplate ( # 3824 )
added import for StageIDsRearranger and modified StageIDsRearranger logic in TezCompiler . java to ensure proper handling of stage IDs based on configuration settings
register mbean on apache cassandra ' s net instead of concurrenthashmap . patch by jbellis
added memory consumption logging in LotsOfOutput . java to improve diagnostics for memory consumption during initialization
added imports for document documentation and modified DimConfig handling in multiple facet - related classes to enhance documentation clarity and maintain consistency across the codebase
update ldap auto - configuration to enable anonymous read - only
refactor DatabaseMetaData class for improved clarity to enhance maintainability and readability of the code
[ e2e test ] fix visibility of echoinputdofn in test
added finishMocking method to MockitoSession and improved error handling in DefaultMockitoSession to enhance Mockito functionality and provide better error reporting during mock creation
replaced the use of ` ImmutableSortedSet < BuildRule > extraDeps ` with ` ImmutableSortedSet < BuildRule > extraDeps ` in ` GoTestDescription . java ` and added two new test methods in ` GoTestIntegrationTest . java ` to improve clarity and functionality of dependency management in tests
refactor SPDYAsyncConnection and HTTPSPDYAsyncConnection to improve buffer handling and handler management to enhance performance and clarity in managing buffer states during asynchronous operations
fix blockliquidwrapper to use getlowingblock ( ) instead of getstaticblock ( )
updated intent data handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to streamline data processing and enhance compatibility with new background location features
attempt to fix the unit test error of apr crash on window
[ hotfix ] [ cli ] fix classcastexception in client
fix craftingmanager ' s getitemhash ( ) to return correct craft id
[ flume - 2487 ] [ test ] fix race condition in testfilechannelrestart and make testutils more robust .
tabsandindentsvisitor remove unnecessary line break
added a pattern to compile " . * pg _ temp _ . * " in NeuteredLinesFilter . java to support additional temporary file naming conventions
chore : remove spurious build warning and update gax - java to 2.7 . 0 ( # 657 )
updated data type handling to distinguish between INTERVAL and NCLOB types to ensure proper type classification for better compatibility and functionality
add publish time in wavefront meter registry ( # 2443 )
updated the handling of springCloudSelectorHandle in ShenyuClientRegisterSpringCloudServiceImpl and modified the upstream URL in DivideUpstreamUtils to warm up the shenyu - server setup to enhance functionality and ensure better resource management
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable registration of listeners with specified parameters for better flexibility and usability
added logging for SocketException in SelectChannelServerSslTest . java to improve error handling and debugging for SSL connection closure issues
camel - 13653 : camel - ignite - osgi should close ignite component if it exist
fix # 1484 - client should not print empty set info . ( # 1485 )
pdfbox - 2576 , pdfbox - 2530 : do n ' t swallow unsupportedflavorexception
added tests for handling HDR capabilities in ShadowDisplayTest to ensure compatibility with different SDK versions and throw unsupported operation exceptions
added a finally block to ensure classLoader is reset to prevent potential memory leaks during class loading operations
improved error messages in SemanticAnalyzer and SemiJoinHint for better debugging to provide clearer context for exceptions related to bloom filter entries and column names during parsing failures
added a default constructor to the Message class to simplify instantiation of Message objects
change default jdk serialization priority to low
added imports for DecimalTypeInfo and HiveDecimalUtils , and modified constructor and method implementations in PhoenixDecimalObjectInspectorFactory to improve type handling and ensure proper serialization of decimal values
refactor CompressionResponseStream to handle response output stream correctly to ensure proper compression behavior when a response is already committed
renamed the parameter variable from WWWAuthenticate to authenticateHeader and updated related method names to enhance clarity and consistency in the authentication process
added a condition to check if a name starts with " EJS " or " org \ omg \ " to ensure proper handling of specific directory paths in DCD
fix possible npe in threadleaktest . findthreadgroupbyname ( ) when use a null threadgroup
added logging for security interceptor and improved error handling in MethodInvocationPrivilegeEvaluator . java to enhance debugging capabilities and maintain cleaner code structure
changed package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` and updated logger name to reflect the new package structure and improve clarity of log messages
updated imports in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy to streamline code by removing unnecessary imports
cloudstack - 3439 . [ vmware ] add iso path to all storage layer . add iso to storage layer
refactor Signal handling logic by replacing the existing signal handler and modifying the test assertions to enhance clarity and ensure proper handling of signal exceptions during testing
replaced the use of ` isEmpty ` with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code readability by using the standard utility method for checking empty collections
fix unit test to not use deprecated discovery client
added multiple @ Override annotations in ColorRGBA class to improve code clarity and ensure proper method overriding
planner - 3458 remove planningentityconfig . setresetinitializedplanningentities ( false ) , deprecate unused method
added build time configuration to two - level artifact caching classes to enhance build information accuracy by associating build time with each artifact
modified GroupByOperator to use arraycopy instead of getFields and adjusted fixedRowSize calculation to improve performance and correctness of the aggregation process
wallet : do n ' t add a block to tx if it ' s null
added CNC _ BTC currency pair and updated related currency pairs to support new trading options and enhance market data functionality
updated skewAllowance values from 5 to 15 and modified related logic in multiple classes to adjust skew allowance handling and improve configuration flexibility
added sorting functionality to the SongListActivity and updated Utils to utilize it to improve the organization and sorting of song data in the application
remove retrofit . utils . readbodytostringfromxml , it ' s not use
make old base block wrapper for signblock compatibility . ( # 1588 )
hive - 26475 : iceberg : do not snapshot create by branch create with non - existing tag ( # 3504 ) . ( ayush saxena , review by adam szita )
replaced newArrayList with Collections . singletonList in AbstractLdapMockMvcTest . java to simplify the code and improve readability
ray trace demo : fix for issue # 605
added validation for requirePasswordChange property and improved error handling in IdentityProviderEndpoints to ensure required properties are set correctly and provide clearer error messages for unsupported operations
added a method to remove non - initialized fields from notInitializedInConstructors to ensure that constructors are properly managed based on reflective conditions
modify the database connection error handling to determine the URL based on the connection state to improve error reporting by distinguishing between closed and non - closed connections
[ cse ] added test for miss user data in cse client
updated regex patterns for user and password patterns in CredentialInjector . java and CredentialInjectorTest . java to ensure accurate matching of user and password for improved security
added a new menu item " Item4 " and a key binding for the enter key in ActionListenerCalledTwiceTest to enhance functionality by providing additional options in the menu
updated print statements to include class details and modified assertion logic in TestCoreParser . java to enhance clarity in debug output and ensure correct behavior when no results are produced
remove id duplication in equal ( ) and use id = = ( other ) .
make PopulatorContextStackItem class package - private to allow for easier access and reuse in other packages
updated the method to retrieve the document count and added a new test for small sample from corpus to improve accuracy in document handling and ensure correctness of the MoreLikeThis feature
reformatted lambda expressions for better readability in QuestManager . java to improve code clarity and maintainability
[ hotfix ] [ test ] let mockito extend testlogger and make the class static .
refactor query appending logic in MongoSessionDataStore . java to improve readability and maintainability of the code
sulong : add unsafe . getlong ( receiver , long offset , boolean condition , object locationidentity ) to sulong for interop with native method .
updated time zone name from ARAST to EET across multiple language files to correct the representation of time zone in the Asia / Amman data
updated the ID from 90000011 to 90000012 in DeprecationLogger . java to reflect the correct versioning of the logger
hhh - 15616 do not try to obtain lock contention when the session be mark a read - only
improve logic to determine if a link have a file extension . no more extension yet .
workaround for laf : do n ' t use system menu bar on macosx
added integration test for piecewise rule ( if ( x ^ 2 ) ) , otherwise ca n ' t work for if ( x ^ 2 )
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods in ` BaseSwipeUpHandlerV2 ` and overridden ` switchToScreenshot ( ) ` in ` FallbackSwipeHandler ` to enhance code accessibility and ensure correct state handling based on the running context
added a whitelist pattern in HiveConf and a test method for configuring the whitelist in TestJdbcWithSQLAuthorization to enforce parameter constraints and ensure correct behavior of the Hive metastore configuration
added functionality to store valid entry values in invalidClasses to ensure that invalid entries are properly added to the cache
updated the method to retrieve theClosest target based on the player ' s team instead of the team ' s sharded version to ensure correct positioning of the target based on the current player ' s team
make test use current domain instead of comp1 a it make useless difference when build the cookie .
added nullable validation logic to the Column and Table classes to ensure that nullable columns are validated correctly based on defined criteria
updated multiple security token service and associated classes for consistency to enhance maintainability and clarity in the security token management system
added a new test method and modified variable definitions in CustomCollectionTest . java and CompositeIdRouter . java to improve test coverage and enhance code clarity
added snapshot handling for PostgreSQL in ` ExecutablePreparedStatementBase . java ` and modified test cases in ` PostgreSQLIntegrationTest . java ` to enhance snapshot management and ensure correct bytea type handling for PostgreSQL
updated conditional checks for cache size and streamlined code formatting in DefaultServlet . java to improve code clarity and ensure proper evaluation of conditional statements
improve drag and drop to create tab ( # 4844 )
replaced direct calls to ` createDescription ` with ` createTestDescription ` and updated test assertions to use new descriptions to improve clarity and consistency in description creation in unit tests
replaced manual string checks for myVersion and buildTimeString with StringUtils to improve code readability and reduce potential errors
removed public access modifier from several methods and classes in TimeUtils . java to enforce encapsulation as these methods are intended for internal use only
refactor method handling and class name checks in RefectionMHTests and MHTests classes to enhance code clarity and maintain compatibility with different Java versions
update file extension check to allow for additional file extensions to ensure compatibility with different file naming conventions
[ gr - 46711 ] fix imagedebuginfoprovider to support host method .
add geticon method in data object and change classdisplayed value to node
fix issue with lastindexoutofboundsexception in counterrequestaggregation ( http : / / code . google . com / p / mybatis / issues / detail ? id = 453 )
enhanced replacement logic in FindAndReplace . java and added a new test case in FindAndReplaceTest . java to ensure proper handling of special characters in regex and improve test coverage
fix a problem where we do n ' t get the remote address if there be no socket . jm - 922
ds - 3533 fix typo in doc of schemaextraprocessor
added a method to copy source and destination directories in IO . java and updated tests in SpecWebAppTest . java to improve file management and ensure proper handling of file paths during copying
added exception handling for unknown datum classes in JacksonUtils . java to improve error reporting for better debugging
updated the way ABI targets are handled in DefaultJavaLibraryBuilder to improve ABI build rule resolution for better dependency management
adjust height calculation for item height in SelectBox . java to ensure proper alignment of UI elements based on their background properties
added normalization of database name and table names in ObjectStore . java to ensure consistent handling of identifiers by removing leading spaces
updated DbSqlSession to handle Oracle databases with a default schema and added logic to determine the schema if it is null to ensure compliance with Oracle database requirements and improve schema handling
remove logout because we do n ' t actually log out ourselves
[ hotfix ] [ test ] correct the test of streaming - based task and their associated task
refactor fastImportAction to handle null candidates before retrieving types to improve robustness by ensuring toolkit defaults are reset when no valid element is found
updated conditional check for managed bean in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to enhance accuracy of lifecycle detection and correct expected values in tests
rename iexecutionattributestatesdialect to iexecutionattributestatesdialect for good clarity
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to enhance the code ' s safety by removing unsafe operations
fix possible npe in the get time command when the location be null
[ iotdb - 5012 ] fix npe in meta data disruptor queue , fix npe in realtime extractor ( # 7041 )
deleted the Session2Token . java file from the project to the class was deemed unnecessary for the project
cloudstack - 5293 : destroy the volume when a destination volume fail to create
added a new ` Install ` class to handle shortcut items in the ` SystemShortcut ` class to enhance functionality for determining if the app is an instant app
added a new LdapAuthenticationProvider with null authorities support to enhance flexibility in managing ldap authentication data
fix retrolambda . jar path issue in build target .
replaced ` buildOrThrow ( ) ` method with ` build ( ) ` method in ` ShadowCamera . java ` to simplify the method call and ensure consistent behavior
replaced FixedBitSet with a more generic sortLiveDocs method to improve flexibility and efficiency in sorting live documents
added handlenullresult to prevent npe
added null and length checks for user authorities in AuthorizeTag . java to enhance robustness by handling potential null or invalid authorities
updated assertions in tests to use ` new ` syntax for better readability to improve code clarity and consistency in URL comparisons
cloudstack - 8164 : fix the error message for vm snapshot with member support for vpgu enabled vm
updated configuration handling in RobolectricTestRunner and Config classes to improve clarity and functionality to support both class and method annotations for configuration merging
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to improve performance and flexibility in handling socket connections
updated partition key comparison logic in HiveAlterHandler to use a new method to improve code clarity and ensure accurate comparison of partial partition keys
added a new BooleanFlag for enabling icon display in text headers to provide a debug option for displaying icons in text headers
[ fix ] extra space at the end of line in comment and comment
replaced SharedBlockingCallback with Callback in StandardDeployer and StandardUndeployer to improve code efficiency and responsiveness by utilizing modern Java features
added workspace listener in PreviewControllerImpl and modified buildGraph method in PreviewUIController to enhance graph building control based on workspace changes
updated reflection checks in ReflectionFactory and modified string containment in ReflectUtil to improve handling of anonymous classes and ensure accurate string containment checks
rename TransportHelper class files for consistency to improve clarity and maintainability of the codebase
correct acegi user realm path so that it work on window a well .
added logging for initialization and starting of the ActionManager in AmbariServer . java to improve visibility into the initialization and initialization processes for better debugging and monitoring
added null checks for initialization and modification handling in JSONWriter . java to improve robustness and prevent potential NullPointerExceptions
refactor ` run ` method signatures to accept ` FileSystem ` as a parameter and update logic for proxy user creation to enhance flexibility in running slider components while maintaining proper user context handling
added a check to ensure backgroundManager is attached before attaching the window to avoid potential NullPointerExceptions when the background is not attached
updated tabbing behavior and adjusted alpha updates in the launcher and workspace classes to improve tab navigation experience and ensure proper alpha updates for child views
added null check for the URL parameter in BaseDataSource and created a test for its validation in SimpleDataSourceTest to ensure that a valid URL is provided to avoid runtime errors
test : add jre 8 support ( # 4251 )
added a dialog to create a new directory and updated the directory creation logic to enhance user experience by allowing users to create a new directory while managing file operations
added functionality to toggle bar border widths in various activities to enhance user interface flexibility by allowing dynamic adjustment of bar border sizes
update SSL URI from " okcoin . com " to " okex . com " in OkCoinExchange . java to ensure compatibility with the latest API changes
jbrules - 3533 : fix java build after jbrules - 3533
replaced FileChannel with SeekableByteChannel for improved memory management to enhance efficiency and support for reading files in bulk
refactor getFlattenFieldTransferPair method to accept a FieldReference parameter and update transfer pair retrieval logic to enhance flexibility and maintainability by allowing field references to be passed directly
renamed ` MockHandler ` to ` MockHandlerImpl ` and updated related class references to improve clarity and consistency in naming conventions
ambari - 3727 . list serialization configuration parser do n ' t handle empty / null key correctly . ( amruta borkar via rlevas )
added debug heap limit configuration in QuickstepProcessInitializer to enhance performance monitoring on debug devices
improve the performance of the collectors ( # 9047 )
log4j2 - 1343 fix bug in abstractloadbundletest .
fix precompactedrow to work with live deletion
modified return statements in ICC _ Profile and ColorConvertOp classes and added a new InvalidRenderIntentTest class to improve code clarity and ensure proper handling of rendering intents
add a MeterRegistryLifecycle bean to MetricsAutoConfiguration and enable it in MetricsAutoConfigurationTests to ensure proper management of MeterRegistry lifecycle within the application
reduce log level to info ( # 5441 )
pdfbox - 3017 : do n ' t swallow exception when generate certificate
camel - 19734 : avoid issue with ambiguous binary operator in simple language
removed redundant code in EditorActivity and added in IDEEditor to ensure windows are dismissed when focus is changed to enhance user experience
add the user . name to the access logvalve error message , to help track down behavior .
* fixed some issue that cause nullpointerexception in gettrainingshape ( ) and gettrainingshape ( )
removed the ` InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature as the method is not needed for its functionality
added @ Deprecated annotation to UpgradeResponse . java to mark the UpgradeResponse class as obsolete for future removal or replacement
added support for -- dtsout option to make d . ts file available when compile the transpiler
[ issue # 10772 ] make kinesis fetch timeout configurable ( # 10773 )
fix dataflow worker timestamp format issue ( # 2642 )
increased the maximum thread count for the metastore server from 100 , 000 to 1000 , 000 to improve performance by allowing more concurrent threads
changed the return type of onTaskSnapshotChanged from void to boolean to allow the method to indicate whether the snapshot has changed
update shadow radius variable from mMaxShadowRadius to shadowRadius to streamline shadow radius configuration for improved performance
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests . java ` to ensure the ` aggregatorInput ` dependency is correctly instantiated and tested within the chain functionality
updated loop condition from limit to end and added failure handling to ensure the loop correctly terminates with the specified range and reports errors
fix interaction between polyglotcontextimpl and guest source in a race condition .
fix npe in createkeytabfileserveraction when previous cache file path change ( # 7271 )
updated LauncherPreviewRenderer to include DisplayController in the WindowManagerProxy instantiation to enhance functionality by ensuring proper display management integration
update tooltip text logic for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent naming of the root directory tooltip across different UI components
replaced getToolkit ( ) . getScreenSize ( ) with getToolkit ( ) . getScreenSize ( ) to obtain the default screen size using the default toolkit
changed method signatures of ` recognise ` from ` List < ? extends RecognisedObject > ` to ` List < CaptionObject > ` in ` TensorflowRESTCaptioner ` and ` TensorflowRESTRecogniser ` to improve type safety and flexibility by specifying the type of input streams
added methods for insert and remove entities and updated test cases in JPASQLBase . java to enhance entity management functionality and ensure correct result count fetching based on factory expression
removed debug code and adjusted dragIndex logic in FreeformFinSetConfig . java to streamline drag handling and improve code clarity
update moe version to last released 1.2 . 0 ( # 4682 )
mark the program a spend allGas call and update the error message to improve clarity of error reporting and ensure correct processing of constant calls
updated error formatting in ElementsShouldSatisfy and ZippedElementsShouldSatisfy classes for improved readability to enhance clarity of error messages by distinguishing between lines for better formatting
mark the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
make unsafe registration in graph builder plugins a little more flexible
added Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and created new classes Sample to handle blacklisted modules to improve code clarity and ensure correct behavior of binary modularity when the module is not visible
changed mCenterPagesVertically from true to false to ensure consistent behavior in the layout
fix a race condition during migration finalization on master node . also fixes # 1855 .
[ deconz ] fix konnectedupnpserver to use base url instead of module _ ip ( # 12494 )
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java ` and updated related method calls in ` WSFederationClaimsReleasePolicyTests . java ` to improve type safety and flexibility when handling attribute values
hive - 13058 : llap : if . database be set to true , use the specific database ( prasanth jayachandran review by sergey shelukhin )
add a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure correct parsing and deparsing of SQL inside brackets
introduced a new method ` startCopyMode ( ) ` for handling touch events in ` ConsoleActivity . java ` to improve code organization and ensure correct behavior on different Android versions
refactor the writeXmlOutput method to use try - with - resources for better resource management to improve XML output handling and enhance code readability
camel - 3490 : fixed potential npe in abstractlistaggregationstrategy when exchange be empty
( chore ) camel - core : move helper method to camelexchangeexception
- move classic package and import to correct package
[ typedataflow ] do n ' t analyze type qualifier for the qualifier dataflow analysis
bug 57193 : remove unused import , no longer need
added a new method ` invokeMethod ` to ` ObjectInvokeHelper ` for dynamic method invocation to enhance flexibility by allowing users to specify parameters for method invocation
renamed multiple classes related to box and whisker calculations and histograms for clarity to improve code readability and maintainability by standardizing class names
[ flink - 25823 ] [ test ] migrate ReadableWritableconfigurationtest to junit5
changed ` NormUpdate ` from a class to a static class and updated equality checks in ` InstantiatedIndexReader . java ` , ` MemoryIndex . java ` , and ` CoreDescriptor . java ` to use ` equals ( ) ` for field comparison , and updated collection name handling in ` CoreDescriptor . java ` to improve code clarity and consistency in field comparison logic
changed the access modifier of the IndexFileNameFilter class from public to private and modified the singleton variable visibility to enhance encapsulation and restrict instantiation to the class
refactor conditional statement tests to use a unified approach for vertex creation to enhance code clarity and maintainability by reducing redundancy in vertex filtering
phoenix - 4994 : tablemetadatautil . getptonlytableheaderrow ( ) should return tableheaderrow directly , addendum to fix gettableheaderrow ( )
refactor the TypeAdapter implementation to simplify null handling and improve read / write methods to enhance code clarity and maintainability by reducing redundancy in null value management
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected output after recent code modifications
add a new file EXIFReader . java for processing image metadata to streamline image processing and enhance metadata handling capabilities
fixed - CloudWatchmeterregistry . tostandardunit return unknown _ to _ sdk _ version when batch to standardunit be unknown .
[ drools - 7322 ] fix pmml model apply with incompatible type
update log message for unexpected case in FluentProtocol . java to provide clearer guidance on potential issues during peer re - sends
added a check to return early if the bubble bar is visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 46711 ] properly handle special case of partial label range building .
added error handling in ` JDKXRLogger . java ` and introduced a ` testConcurrentInitLog ` method in ` XRLogTest . java ` to ensure proper initialization of ` initPending ` and validate concurrent initialization functionality
added a method to find ticket definitions by class to improve ticket retrieval functionality and enhance logging clarity
refactor SSL configuration code for improved readability and consistency to enhance maintainability and clarity of the SSL test logic
[ flink - 25370 ] [ network ] fix sort mergeresultpartition thread safety problem
[ beam - 4287 ] define maxnumrecords default value to long . max _ value in jmsio
added a new parameter ` type ` to the ` queryAllPluginHandlesByPluginId ` method and updated related queries to support sorting options for plugin handles based on their type
updated span creation methods in DefaultSpanCreator and SleuthAdvisorConfig to ensure span starts correctly after creation
added new configuration options for GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , GLKViewDrawableStencilFormat , and GLKViewDrawableMultisample in IOSApplicationConfiguration . java and IOSGraphics . java to allow for additional drawable attributes in the IOS application configuration
fix login test to work again after failed login
feat ( native ) : add handle - 1 check ( # 2372 )
replaced the condition with a while loop for retrieving lock names in SynchronizationStatistics . java to ensure all thread names are retrieved during the synchronization process
refactor Implements and ShadowPicker classes for clarity to improve code maintainability and readability
[ scb - 837 ] make http2 production ready : add default setting
updated conditional checks in DynamicStruct , SolidityFunctionWrapper , and SolidityFunctionWrapperGenerator for better type checking and logging to improve code clarity and enhance error handling when handling struct types
updated font property retrieval to include a boolean parameter in InlineLayout . java and FontUtil . java to ensure consistent behavior in font alignment and size handling
added constructors to ` CopyStep ` that accept ` Path ` parameters and a test for shell command indexing to enhance flexibility in path handling during copying operations
fixed - rsemaphore . acquire ( ) method do n ' t publish value if addpermits be call twice . # 878
camel - 13063 : camel - core - optimize test to avoid unnecessary object allocation .
added a new FlavorParser class and updated BuildTargetParser to utilize it for parsing flavor strings to improve code organization and enhance the functionality of parsing flavor strings
replaced String type with ByteString for witnesses and active witnesses addresses in WitnessScheduleStore . java to improve data handling and compatibility with protobuf format
modified print statement to conditionally display results if not empty to enhance output clarity by avoiding printing empty results
modified the ConcurrentLinkedQueue implementation to handle removal of items and improved comparison logic to enhance the robustness and correctness of concurrent item management in the linked queue
add parameter to huggingfacetokenizer to allow disable add special token for decoding
use collections . nCopies to simplify code and improve readability
fix load single - tsfile load bug ( # 9859 )
added a new constant for session storage context and updated session management in DuoSecurityMultifactorWebflowConfigurer to enhance session management and improve action handling in the webflow configuration
add a new test method for schema validation in JspDocumentParser . java to ensure that the SAX parser correctly handles schema validation and handles exceptions appropriately
added a constructor to TypeAdapter and updated ignore annotations in Java17RecordTest and ReflectionAccessTest to improve code clarity and ensure proper handling of record support
make sure we return a kill ( ) when the vm be kill , so that we can quickly kill a vm .
updated the AntPathRequestMatcher class to improve request handling logic to enhance the efficiency of path validation in the application
[ ds - 3952 ] remove unused null parameter from createResourcePolicy ( )
added null check before releasing and setting _ deflaterEntry in GzipHttpOutputInterceptor . java and modified blocking test assertions in BlockingTest . java to enhance robustness by preventing potential NullPointerExceptions and improve test assertion clarity
added JUnit @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure all tests are executed after each execution
fix checksum error in non - unicode ascii character
refactor command handling and description generation in the Example . java file to improve clarity and maintainability of command execution logic
bugfix # 211550 , keylistener should be final for potential memory leak
updated JSON handling in MongoTemplate and added a new test in MongoTemplateTests to improve type safety and ensure correct functionality of the save method
added functionality to check for multiple remote addresses in the RequestUtils class to ensure proper handling of remote addresses in request headers
updated ` getJobArgs ` method to return ` ObjectBuilder ` instead of ` String ` to improve type safety and compatibility with JSON processing
refactor methods to retrieve the host address and handle exceptions more effectively to improve reliability of host address retrieval and enhance error handling
updated glyph wrapping logic in GlyphLayout and added a test case in BitmapFontTest to improve handling of whitespace and ensure accurate font rendering in the application
added methods to pause or resume splits in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to enable control over split management in the Pulsar split reader
added configuration for the HIVESCRIPTIDENVVAR in HiveConf and implemented it in ScriptOperator to enable proper handling of script operator IDs in the Hive environment
updated the ` getListedTermCounts ` method to utilize ` Stream ` for sorting terms using ` FacetParams . FACET _ SORT _ INDEX ` to improve code clarity and performance by utilizing modern Java features
added a new action class ` UseSeparateStepSizeAction ` for managing jog step sizes to provide users with a configurable option for using separate step sizes in the platform plugin
updated FileMenuFilter to use final fields and improved lock file handling logic to enhance data integrity and maintainability by preventing unintended modifications
hbase - 24827 . java : avoid concurrentmodificationexception in roundrobinsplit . java ( # 2640 )
change header values for BraveHttpHeaders from " false " to " 1 " and update test cases to reflect correct value assignment to ensure proper header behavior for better handling of request headers
pdfbox - 2576 : remove unneeded null check ; use ioutils . closequietly instead of a simple null check
added fullscreen support and modified graphics rendering methods to improve rendering flexibility based on display modes
updated WebfingerIssuerService to use URI instead of String for loading keys and improved URI normalization to enhance the handling of resource URIs and ensure compatibility with URI standards
add unit tests for SoulApacheDubboClientConfiguration to ensure that the Dubbo configuration properties are correctly initialized
updated asset descriptor resolution and texture path initialization in SkinLoader . java to ensure correct loading of PNG files by using the ` resolve ` method directly
tone down log level to info ( # 2744 )
make lock interruptibly in PlayerApiServlet , BrowseHandler , and PlayHandler to improve thread safety for concurrent access
changed package declaration from ` java . lang ` to ` java . lang ` to ensure consistent organization of classes
added logic to handle code exceptions in NullDerefAndRedundantComparisonFinder to ensure proper handling of null exception scenarios based on method pc
use http data source to build mdns for android 4 . x
add configuration property for quartz . execution . scheduler . maxstatementsperconnection to control the number of prepared statement per database connection
change return type of the set method from WritableConfig to Configuration across multiple classes to standardize return type consistency for configuration handlers
added error handling for command operations in AutoScalingHandler . java to improve robustness by capturing and capturing errors in command payloads
updated the CombinedDataset class to improve data handling to enhance performance and reliability of dataset processing
change variable from byte array to byte for reading to improve performance by reducing memory overhead during compression
added methods to remove cryptography restrictions in Utilities . java to enhance security by allowing the removal of outdated cryptography restrictions
fix issue with entity teleport , should cause chunk to disappear
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to verify the functionality of page margins with long text transformations
replaced the initialization of ` vContext ` with a null check and updated its assignment logic in ` Vectorizer . java ` to ensure ` vContext ` is always initialized before usage to avoid potential null pointer exceptions
fix wialon speed correction ( fix # 6049 )
hbase - 24515 disable the metric user enable by default in hbase - regionserver ( # 1990 )
added ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a utility method for checking if an object is empty and ensure proper functionality through unit testing
updated boolean flags for user presence and visibility in Launcher . java to ensure proper handling of receiver lifecycle management
updated AsyncFile , HttpClientRequest , NetSocket , and ReadStream classes with no content changes to streamline code organization for better maintainability
fix getnumerofresults exception in zadd ( ) ( # 4185 )
[ ds - 3952 ] fix checkstyle / eclipse warning and tidy ups
rename testasynessmessages to testperformance since gc delays can introduce false failure .
added a method to handle optional target retrieval and introduced test cases in VersionPropagatorBuilder to improve code clarity and ensure proper functionality in target graph construction
updated time comparison logic for epoch seconds in TimeZoneProvider . java to improve accuracy of time zone handling for better compatibility
fix bug # 45398 - fix arrayindexoutofboundsexception in hssfworkbook
updated variable initialization for row and column in JSONParser . java to correct the order of initial values for better data handling
replaced instances of ` JavaType . FullyQualified ` with a ` Pattern ` in ` FindTypes . java ` and ` JavaType . java ` for type matching to improve pattern matching capabilities in type assignments
added functionality to play and handle local trailer playback in BaseItemDetailsFragment to enhance user experience by allowing users to play and manage local trailer data efficiently
added a method to remove glyph information from the native pointer and updated memory management to improve memory management by ensuring glyph information is properly freed and freed
added terminateallbehaviour method and updated deleteProcessInstanceCascade to be protect
camel - 10684 : fix issue with use of wrong name on camel - netbeans with thanks to kirill
update endpoint URL in SimpleHttpClientTests to use a more secure connection to ensure test accuracy by using a secure connection
add option to reset all preference to default value
hbase - 27405 allow hbase to extend and override hbase metrics * ( addendum )
[ danfossairunit ] remove deprecated channel ( # 9044 )
use hamcrest assertion instead of junit in integrations / cdi / e2e - backport main ( # 1749 ) ( # 6002 )
removed unnecessary null check before stopping expansionHelper to streamline code for better readability and maintainability
bugfix # 211320 , make partitionpanel index safe for equal ( ) and hashcode ( )
kvm : add datadisk size to uservmmanagerimpl - when the new disk size be n ' t specify ( # 6358 )
updated visibility logic for prediction visibility based on user preferences to enhance user experience by controlling visibility based on user settings
[ geos - 8044 ] make bbox parse tolerate empty cr in parse ( bbox , string )
added invalid parameter validation methods in LibrustzcashParam . java and updated the expected value in LibrustzcashTest . java to ensure valid parameters are valid and improve error handling
add deprecation notice to ithrowableentity for future refactoring .
added assignment for x and y in NodeDataImpl . java to adjust the value of this variable for improved positioning within the node
updated method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method to improve clarity of test purpose and ensure correct handling of missing scopes
refactor variable initialization and variable handling in JavacStep . java to improve clarity and ensure proper resource management during class compilation
updated VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to prepare for the release of version 0.9 . 2
added a check for deep shortcuts in LoaderCursor to handle deep shortcuts properly within the application
add hashCode method to TimeGranularitySpec class to ensure proper hash code generation for instances of TimeGranularitySpec
updated access modifiers of BooleanWeight , DisjunctionMaxQuery , and weights in BooleanQuery and DisjunctionMaxQuery classes to allow subclasses to access these fields and facilitate subclassing
added a boolean flag to control proxy response code behavior in HttpURLConnection to ensure proper handling of NTLM proxy when the response code is used
[ gr - 46713 ] aarch64 : use separate stack slot address for register .
cloudstack - 3223 : do n ' t recalculate mem metric of reserve / used vm when create / destroy vm
added a null check for ` maxScore ` in ` JSONResponseWriter . java ` and modified a query in ` TestDistributedSearch . java ` to ensure score inclusion only occurs when ` maxScore ` is not null
change audio record code from 22050 to 44100 to improve audio quality and performance
adjusted calculation of newOriginX by adjusting the formula to ensure proper positioning of the rocket ' s origin based on the subject bounds
updated null and empty check for dataSource in DruidQueryBasedInputFormat . java to ensure that Druid data source is either null or empty , improving error handling
added new ORIGINAL _ TYPE and modified regex pattern matching in CustomProperty . java and CustomPropertyTest . java to enhance the functionality of property handling and ensure its correctness through testing
added a static method to create an instance of the Index with given parent and data to facilitate the creation of Index objects with provided parent and data
removed a boolean variable ' isBetweenGivenPeriod ' from the return statement to simplify the code for better readability and maintainability
[ iotdb - 2955 ] add reader / writer compatibility location to union writer ( # 2328 )
added support for handling persistent attributes in QueryUtils and modified entity path handling in QueryUtils to enhance the flexibility and correctness of entity path associations in persistence logic
added synchronized blocks to the spans list and modified method implementations in TestSpanHandler . java to ensure thread safety and prevent potential issues with concurrent access
changed type parameters from List < Object > to List < ? > in multiple classes to enhance method flexibility by allowing any subtype of Object
added handling for InvocationTargetException and updated log messages in ViewContextImpl . java to improve error handling specificity and provide more detailed logging for authentication issues
refactor OAuth2AccessTokenEntity class to improve code readability to enhance maintainability and facilitate future development
updated error messages to accurately reflect the service ' s request status to improve clarity and accuracy of log messages related to request handling
added new project file entries for " ios / data / Default - 1024w - 1366h @ 2x ~ ipad . png " to support additional image resources in the project
added a ConcurrentMergeScheduler to the TestSearcherManager class to improve thread management during test execution
updated conditional check in QTestUtil . java and improved list handling in GenericUDTFInline . java to enhance code clarity and prevent potential NullPointerExceptions
updated MapIterable , FJIterate , and ParallelIterate classes to improve code consistency and maintainability
ticket # 3874 : in response to the new spinner , a suggest by daniel persson
hhh - 12443 - fix osgi container leak with jmx
fix # 171 hikaripool # getconnectiontimeout should account for elapsed time in the future .
move createcomponentfile ( ) method to non - packaged directory , since component can be move to plugins
updated file path handling in Compat and FileOpener classes to ensure consistent file path formatting and improve cross - platform compatibility
changed the return type of row ( ) from Cell < T > to void row ( ) to simplify the method interface by removing unnecessary type parameters
add a method to check for unique port clashes in BesuCommand to ensure that multiple ports do not conflict , preventing configuration loss
added support for null mask in WebSocketClient and adjusted connection initialization to improve handling of null mask scenarios for WebSocket connections
modified the return type of the genUDTFPlan method to return a Pair instead of a RelNode to improve method usability by allowing multiple return types for better flexibility in plan generation
added statistics tracking for preferred and non - selected nodes in NodeScheduler and NodeSelectionStats classes to enhance statistics tracking for better node selection performance
add a new Person class with getter and setter methods to facilitate the creation and retrieval of Person objects based on their names
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to improve code clarity and ensure proper handling of the owner pointer ' s existence
added a clock to the PlaybackOverlayFragment and updated its lifecycle methods to improve user interface responsiveness and visual feedback during playback
remove unnecessary markDirty ( ) call from multiple classes to streamline code for better performance and readability
lucene - 2207 : make segmentreader . getimpl ( ) a default class , so that it can be use with jdk 1.5 .
[ sudoku ] fix bug that fire cell update event on the ui thread
remove unnecessary defaultinetaddressadapter for backwards compatibility .
added null checks and initialization methods for double , long , and boolean values in the Series class to ensure robust handling of null values and prevent IllegalStateExceptions
updated audio time stretch feature in VideoManager . java to enable better audio control during video processing
lucene - 7114 : make sure maxtodis not equal to minlon , maxtodis should be compare to maxtodis in geometry ( # 788 )
fix npe : get diskofferingbyid return null when do n ' t find diskoffering
fix attempt for issue # 3598 by shut down all test instance at once
add some extra check on getinstance ( ) trigger nosuchalgorithmexception
added functionality to print operation logs in QFileClient to enhance debugging capabilities by providing visibility into operation logs
fix a bug where a proxy would produce wrong type for type parameter . fix # 4209
fix npe in protocolproviderservicesipimpl if currentconnectionaddress be null and use proxySocketAddress .
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` for demand calculation to simplify demand handling and improve code clarity
fix setoutput on window : close file handle instead of npe
refactor search handling by replacing TvApp calls with direct Intent creation in multiple classes to improve code readability and reduce redundancy in activity management
removed redundant ' this ' keyword and improved the toString method in SchemaCrawlerCommandLine and GrepOptions classes to enhance code readability and maintainability by ensuring consistent formatting
http : / / issues . apache . org / jira / browse / amq - 3872 - add support for use webconsole on osgi
added @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests to enable dependency injection for the PersonRepository for dependency tracking
changed the exception type in the stop ( ) method from Exception to InterruptedException to improve handling of thread interruptions during shutdown
update cactus enum to new set of value ( fixes # 3916 )
replaced direct mouse event manipulation with a dedicated mouse motion listener to improve user interaction by handling mouse click events more effectively
added a new abstract class AbstractMinMulticastFlowControlRhsPadding and updated related byte values to enhance the clarity and maintainability of flow control fields by consolidating padding logic
added alignment and vertical alignment to the editStringAt method signatures to enhance the UI layout by allowing dynamic positioning of text fields
check for null modelfile , if not null , throw illegalargumentexception otherwise .
added a check for distinct queries in the query context and modified aggregation logic to improve query performance and ensure correct handling of distinct results
improve the performance of native linkage search by use the stringsimilarity function .
sonar : fix squid : commentedoutfile be miss a ` ` @ see ' ' tag
added null check for children in PartitionPruner . java to avoid potential NullPointerException during execution
added tokenPosition and currentPosition fields to MessagePackParser and updated parsing context handling to enhance functionality for JSON parsing and improve code clarity
set default locale for test - fix for bug
simplified size calculation in LauncherFragment . java to improve code readability and maintainability by removing unnecessary conditional checks
add a new test class MetricsReporterTest for registering and registering metrics to ensure correct functionality of metrics reporting in the Shenyu framework
camel - 4906 : remove unused import of internal crypto dependency in camel - osgi
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class to ensure proper comparison and hashing for instances of ` Rectangle `
[ streamkafkapitest ] fix topic serialization test ( # 1844 )
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in the use of BigInteger type
added support for determining the AM machine ' s fqdn when submitting work to LLAP to ensure proper handling of AM addresses when submitting work to LLAP
fix race condition in clientoutofmemoryhandlertest . testshutdown [ hz - 2418 ] ( # 25828 )
added a method to get the current ObjectId for multiple shape classes and updated the setObjectId method to use it to ensure consistency in object ID retrieval across different shape implementations
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of fetching distinct posts from PostgreSQL
chore ( regen ) : update protoc output to reflect new status
remove extensionadapters from kubernetes client ( # 2184 )
updated subtitle text and added methods to retrieve info rows in DetailsDescriptionPresenter and Utils to improve clarity and maintainability of displayed subtitle information
updated JUnit imports and annotations from ` @ Before ` to ` @ After ` in ` TestAuthHandlerBoot . java ` and ` TestRSAProviderTokenManager . java ` to utilize the newer JUnit 5 features for enhanced test management
do n ' t die if generate a summary for all bug
replaced calls to ` intPool . reset ( false , false ) ` with ` bytePool . reset ( ) ` in ` TermsHash . java ` to simplify the reset calls by removing unnecessary parameters
added multiple @ Override annotations to the FilterInputStream class to ensure proper method overriding and improve code readability
updated ShadowWindowManagerGlobal to utilize WindowSessionDelegateSV2 for TIRAMISU compatibility to ensure proper handling of TIRAMISU versions in window management
updated URL handling logic to include request scheme checks and modified the scheme check to ensure correct port assignment based on request scheme and maintain compatibility with different server configurations
added support for MSSQLDatabase in the AddForeignKeyConstraintGenerator class to ensure proper handling of foreign key constraints for MSSQL databases
hbase - 26558 clean up typo in hbase - replication ( # 3997 )
remove extra system . out . println from containersemzuli , add filtereventhandler for filtering .
allow html identifier to be log in debug mode . html do not need to be in debug mode .
[ flink - 29370 ] [ hive ] fix hivelookuptablesource to use gettableschema ( ) instead of gettableschema ( )
add thread safety check to release listener set .
updated schema name filtering in SequenceSnapshotGenerator to utilize CatalogAndSchema to ensure correct schema retrieval in the snapshot generation process
added color normalization in SpriteBatch and SpriteCache , and updated pixmap properties in LwjglDebugStarter to improve color handling and extend functionality for better performance and flexibility
fixed - batchpromise should be cast to redissonbatchpromise and not redissonconnection ' s join method
added logic to add baseCore to the statisticYearCores list to ensure that only valid base cores are included in the statistic yearCores list
updated TaskActionController , TaskAdapter , IconRecentsView , and TaskActionController to accept ` @ NonNull ` annotations and improved task handling logic to enhance code clarity and ensure proper type safety for task management and launching tasks
lucene - 7958 : make dictionaryloader initialization more robust , by load dictionary from the provided dictionary if available .
updated sorting options in GridFragment to change their order to enhance user experience by providing more relevant sorting criteria
added imports and visibility logic for ViewKt in CustomListRowPresenter to ensure proper handling of ListRow in the custom list presentation
improve exception handle when start the stress action
updated import statements in HttpClient . java to streamline the HTTP client functionality
updated instances of ` isCaseSensitive ( ) ` method to use ` instanceof ` for better type checking to enhance type safety and avoid potential null pointer exceptions
fix : write java . time . instant to jackson 1.10 . 1 ( # 5014 )
( chore ) camel - log : use slf4j instead of log4j
updated type references in PhiTypeResolver for consistency to improve code clarity and ensure proper type casting
modified the formatting of code in CoinbaseTransaction . java for better readability to enhance code clarity and maintainability
added a method to get build targets from BuckConfig and updated ProjectCommand to include a force build condition to improve build target management and ensure that only relevant targets are processed
replaced the idle strategy initialization to use BusySpinIdleStrategy to improve resource management and avoid potential memory leaks
updated ` OCFile ` to use ` ContentResolver ` instead of ` ContentProvider ` to ensure compatibility with Android ' s content handling mechanism
refactored event handling logic in ReportPanel . java to streamline event selection checks to improve code readability and maintainability by reducing redundant checks
[ hotfix ] make sure testinglogicalslot have a slot owner ( # 12212 )
added a new class RemoveCallsToSystemGc to remove calls to ` System . gc ( ) ` and ` Runtime . gc ( ) ` from the Java code to facilitate garbage collection removal from the Java compiler
removed redundant super ( ) calls from multiple exception and parser classes to streamline code and improve readability by eliminating unnecessary super ( ) calls
added a method to set the UIID for the ScaleImageLabel to ensure proper handling of icon updates when using the UIID
updated variable names from ` foundEntry ` to ` update ` in ` FeedUpdateService . java ` to improve clarity and consistency in variable naming
8009844 : sjavac should accept - cp a synonym for - classpath
fix ` ` javac ' ' warning : use compiler instead of options
removed extra whitespace in the initialization state to improve code readability and maintain consistency
8274394 : remove @ ignore from test7196045 . java and move back to jdk - 828579
shaderparameterslightshaft : set default density and decay to 1.0 f , 0.9 f , 0.95 f
added state management functionality to the OidcConfiguration class and updated the builder to utilize this new parameter to enhance the flexibility of state management in the OIDC redirect process
fix - postgres unique constraint with non - nullable column should not be generate inline unique compound
added federated share permission checks and updated user query checks in UsersAndGroupsSearchProvider and EditShareFragment to ensure users do not have federated shares while managing accessibility
added a method ` needsDocValues ( ) ` that returns true to the ` TestBBoxStrategy ` class to indicate that the class needs doc values functionality
[ java ] improved error reporting and javadocs for bufferalignmentagent .
added a new method ` intForEach ` in ` Int2ObjectHashMap ` and modified imports in ` SpecializationGenerator ` to enhance functionality by allowing consumers to be processed for null values
fix the scoreboard save data share ( # 4841 )
changed return type of count methods from Long to long in multiple repository classes to accommodate larger values to prevent overflow
[ mtree ] adjust the timestamp check to be less than the snapshot threshold
lucene - 8334 : fix dot product ( byte [ ] ) to return 0.5 float rather than 1 / 3
added IRREVERSIBLE _ THRESHOLD constant and related methods to manage the last modified block number to enhance configuration flexibility for block confirmation updates
refactor locale handling in GpsMainActivity and MainPreferenceActivity to utilize the Systems class for language configuration to enhance code maintainability and ensure consistent locale management across different activities
added a check to ensure the new database instance is created also in the LauncherClings class to enhance security by verifying if the new database is created
refactor exception handling and improve collection iteration logic in BasicAclEntryAfterInvocationCollectionProvider . java to enhance code readability and maintainability by ensuring proper collection management
refactor conditional statement for determining is64Bit based on datamodel to improve code readability and maintainability
added a Thread variable and a conditional check in TestIndexWriterDelete . java to ensure the current thread is before proceeding with further logic
changed access modifier of closeDatabase method from private to protected to allow subclasses to access and override the method
updated imports and modified ItemRowAdapter instantiation to use ModelCompat for API compatibility to ensure compatibility with the latest SDK and improve code clarity
added functionality to set attributes for SVG elements in BatikSVGDrawer to ensure that imported SVG attributes are properly set for the document
corrected the syntax error in the error handler for user configuration parsing to ensure proper logging of warnings related to user configuration parsing
fix issue with android waitforresult not work in landscape . http : / / github . com / codenameone / codenameone / issues / 2164
refactor HitQueue , SpanPositionQueue , and PriorityQueue to use a Supplier for sentinel object retrieval to enhance flexibility and reduce the risk of errors during pre population
added handling for widget descriptions in WidgetCell . java to ensure widget descriptions are displayed or hidden based on available information
added a maximum attribute count check in the Attribute class to ensure attribute registration does not exceed the defined limit
move predicatestest to impl package , fixes # 2552
camel - 7298 : header filter should be case insensitive . thanks to jens kleine - herzbruch for the patch .
modified InlineLayout and Breaker classes to improve string handling and alignment to enhance code clarity and maintainability when dealing with string delimiters
added nullability annotations and improved view inflation logic in ShareUserListAdapter . java to enhance code stability and ensure proper handling of null views
fix : enable auto - instrument for android api ( # 3419 )
added a condition to return the last column index when an association is inserted to ensure correct index calculation for columns associated with the current source
fix test memory limit issue with docker container
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in multiple files to ensure a single instance of ` CxxDeps ` is used for empty collections
added error handling for null rule in JavaTestRule . java to improve robustness by providing clearer error messages when source dependencies are not among dependencies
use a map to allow for manually define proxy for 1.9 +
removed redundant check for negative index values in StringUtils . java to simplify the code by eliminating unnecessary checks
increase wait time in timeouttest to reduce flakiness
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a constructor to enhance flexibility by allowing assist content request handling
fix : do n ' t display votewitness address when vote vote
refactor DefaultMethodRegressionTests for improved test coverage to enhance reliability of method registration functionality
[ mx ] fix typo in workloadmanagermbxbean comment
int - 1614 upgrade kafka to 2.1 . 2
added container . closeLoader ( ) to DesktopGeneratorController to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and corresponding test cases for handling exceptions without rollback to improve exception management and ensure proper rollback behavior in the batch processing system
improve error message for configbuilder to include actual runner
added a ` Map < String , String > extraProperties ` parameter to multiple tuner classes for improved configuration handling to enhance flexibility in managing extra properties during tuner operations
added logic to track if a realtime segment is in progress in PinotRealtimeSegmentsManager . java to ensure only relevant segments are processed to maintain data integrity
add a conditional check to return null if touchable is disabled to improve touch handling by preventing further processing when touchable is disabled
add a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure compatibility with precompiled headers in the build process
add more descriptive error message for non - existent cache config in abstractcachesallpartitionsrequest
added a method to check if a node package is installed and updated logging messages accordingly to improve modularity and clarity in module installation process
added managed operation tracking to MBeanContainer and Destroyable components to improve monitoring and management of MBeans instances and components
set inappbrowser flag to false to disable browser in longclickablespan .
replaced ` equals ` method calls with ` equals ` method for better null - safe comparison to enhance code safety by avoiding potential NullPointerExceptions
updated isReifiable check logic and added new classes T6558559a and T6558559b to improve type safety and handle unchecked conversions more effectively
- add the size and initial / last position to first edit in worldeditlistener .
camel - 20297 camel - kafka : do not wait for consumer to complete before shut down the consumer
update schema . examples ( ) to remove default example
replaced infinite loops with a loop that continues for non - alive threads to improve thread management and prevent unnecessary interruptions
remove time column from results in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of dataset dimensions during aggregation
added a logical AND operator to the facet check for null shards to ensure proper validation of the shard presence in the request
replaced linker retrieval method with CxxPlatforms . getParseTimeDeps method in RustBinaryDescription and RustLibraryDescription to streamline code by centralizing platform dependency management
added ' name ' property with getter and setter methods in multiple classes to ensure consistent access to the ' name ' property across different components
idealgraphprinter : do n ' t throw exception if printer be n ' t connect to the igv
phoenix - 4901 : add small scan threshold for point lookup when calculate the row timestamp range .
added routeId to the string representation of retry configuration to enhance the filter ' s string representation for better debugging and monitoring
fix for issue # 1706 : display text be not properly display .
replaced methods in ` ActivityControlHelper ` with direct calls to ` showForOverviewIfNeeded ` across multiple classes to streamline method signatures for better readability and maintainability
refactor null point handling logic in CheckIndex . java and add a test method in TestPointValues . java to improve code clarity and ensure proper exception throwing for null points
solr - 10311 : do n ' t publish last state twice when try to update
added double quotes around the string list ID in MetastoreDirectSqlUtils . java to ensure proper syntax for identifiers in SQL queries
remove null element from SpliteratorCollisions . java to ensure proper handling of empty collection scenarios
alexeibarantsev : add case - insensitive option to condition class . fix issue # 588
replaced do loops with while loops in ManyToManyConcurrentArrayQueue . java to improve code clarity and performance
# 1683 - enh : add queryengine . forwardonlyfetchsize ( ) to specify the fetch size of a prepared statement
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid sending a 404 response when the channel is already closed
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated window radius initialization to use rounded corners support to enhance compatibility with devices that support window rounding
refactor DesktopTaskView to use View instead of ShapeDrawable and update layout parameters for background and icon to improve flexibility in handling different screen orientations and enhance layout management
refactor upstreamCheckService initialization to streamline property setting to improve code readability and maintainability by reducing redundancy
updated logging statements in AbstractSession and AbstractSessionManager to use debug level for improved clarity to enhance readability and maintainability of log messages related to session management
replaced error logging and throwing a LockException in ZooKeeperHiveLockManager . java to improve error handling by returning locks directly instead of throwing exceptions
[ hotfix ] [ javadocs ] fix some typo in the java doc
updated custom data handling in FileTextureArrayData . java to ensure mipmap generation occurs only when necessary
updated passwords and keys in DefaultMaskingFormatterTest to use single quotes instead of double quotes to ensure consistency in key value comparisons and improve readability of test cases
added a selectable state and methods to manage its state in the List class to improve user interaction by allowing selection of different List instances
remove check for an empty vector in LlapArrowBatchRecordReader . java to simplify the logic for handling empty vector scenarios
updated PolicyContext to include file separator support and improved string index checks to enhance the flexibility and correctness of policy handling in the application
replaced Set with List for flatQueries and expandQueries in FieldQuery . java to improve performance and enable use of more efficient data structures
refactor TLSRestrictions class for improved readability to enhance maintainability and ease of understanding
fixed potential deadlock when closing the kafka manager , by submit daemon to close the producer to ensure proper cleanup and avoid potential deadlock when interrupted
added a new parameter ` ignorableNodeValues ` and modified the ` assertNodeStateProvider ` method to utilize it to improve the flexibility of node state validation by allowing specification of ignorable node values
added a check to delete the LOCK file if it exists to ensure proper cleanup of resources associated with the workspace
nifi - 7461 updated minizookeepercluster to use InetSocketAddress instead of a fixed port
added a new method ` getResponse ` to handle IOException and updated the connection closing logic to improve error handling and logging for HTTP requests and ensure proper resource management
fix test segment upload bug ( # 11834 )
updated test variables from ` TEST _ STUDENT2 _ ACCOUNT ` to ` TEST _ STUDENT1 _ ACCOUNT ` and ` TEST _ STUDENT1 _ PASSWORD ` in ` AllAccessControlUiTests . java ` to ensure test correctness by using the correct credentials for student login
added null checks for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to improve robustness by preventing potential NullPointerExceptions
increased the number of strings from 500 to 100 in TestSpecialOperations . java to accommodate larger datasets and improve testing accuracy
remove the hextobytes method , it ' s not need
renamed the method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve method clarity regarding the purpose of the method
added a method to check if a transition is a direct substate in AbstractStateMachine to improve state handling by skipping unnecessary transitions
added type checks for ListMultimap and SetMultimap in MultimapSubject and created corresponding unit tests in MultimapTest to ensure proper type comparison and validation for multimap instances
added JoinOperation interface to PostJoinOperation to enhance query optimization for join operations
added a test method for verifying data issue 258 to verify that the database behaves as expected and maintains correct schema
http : / / issues . apache . org / jira / browse / amq - 5035 - prevent test failure on slow machine
[ calcite - 2143 ] clarify in javadoc that avaticadatabasemetadata need to be replace with avaticadatabasemetadata . gettimestamp ( )
change data type of properties ` lifeTime ` and ` idleTime ` from ` int ` to ` String ` in ` MongoDbConnectionPoolProperties ` and ` MongoDbConnectionFactory ` to enable representation of duration values for better configurability
fix fail test : use medium service to create an audio format
refactor filter handling in FacetProcessor to return boolean values instead of void methods to improve control over filter processing and ensure proper retrieval of applied filters
add a boolean flag to make it configurable to whether the timeout handler should be enabled or not .
replaced hardcoded value for quick step starting rotation with a constant to improve code readability and maintainability by using a named constant
camel - xpath : improve log output to reduce noise in the log .
a suggest by valerybokov ; fix load csv file in jira
added a new test class EdgeCasesTokenizerTest for testing quoted backslashes to ensure that the tokenizer correctly handles backslashes correctly
added error handling for missing the ' atlas ' property in AtlasTmxMapLoader . java to ensure that exceptions are thrown when the ' atlas ' property is missing
camel - 15656 : remove property placeholderhelper ( not use in camel api ) .
replaced the ReceiveSource implementation with a direct close method in BlockchainTest . java and modified KafkaTest . java to remove unnecessary code and improve resource management
refactor coreMarkdownNodeRenderer to use a new helper method for splitting strings to improve code readability and maintainability by simplifying string splitting logic
int - 2184 fix compile error in spring - integration - ws
replaced ImmutableList with List for SQLBindings and updated related classes to utilize the new list structure to enhance flexibility and maintainability of SQL binding handling
added a check for the " OpenJDK " platform in the virtual machine detection logic to ensure compatibility with OpenJDK
add keep - alive to reactor base on config
replaced string literals in MD5Renderer and ObjLoader with constants from ShaderProgram to enhance code maintainability and readability by using defined constants instead of string literals
( chore ) camel - base - engine : avoid use registry lookup for the property component
replace null check with accountCapsule initialization for better clarity to improve readability and ensure account existence is validated correctly
prepare for the 3.8 . 1 release : updated version number and add changelog .
update type handling in Types . java to use unannotatedType method to ensure proper handling of unannotated types during type resolution
added a test for the seq tsfile size configuration in StorageGroupProcessorTest . java to ensure correctness of processor functionalities during testing
added DumpableCollection to multiple classes and modified environment handling to ensure compatibility with the ee10 environment configuration
added a waitbeforestart parameter to FFMpegVideo . java to allow for configurable wait time before starting the video processing
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related calls to simplify constructor parameters and improve code clarity
accessorstest : fix a bug concern the accessorstest . listindex ( ) .
add a method to compile a method in graalcompiler and expose it in lirgenerator .
updated test classes to use conditional annotations instead of Spring ' s test runner to enhance test execution flexibility based on specific conditions
fix blue mana boat placement ( # 3889 )
updated the ` toString ( ) ` method and added a ` getLockID ( ) ` method in the ` RAMDirectory ` class to improve string representation of the ` lockFactory ` and provide a clearer interface for lock identifiers
simplified the conditional check for experimental options in Launcher . java to enhance code readability and maintainability by removing unnecessary method
added new methods for path validation in BDDAssertions . java to enhance the usability of path validation in Assertions . java
updated variable names to use " hostField " instead of " hp " for clarity to enhance code readability and maintainability by using a more descriptive variable name
changed log level from debug to warn for multiple Kubernetes config files to provide clearer guidance on warnings regarding the desired file usage
added file upload handling logic in FileUploadService and UploadListActivity to improve user experience by managing file uploads more effectively
added ProviderLoader class and updated TerminalManager to use it for provider installation and installation to improve modularity and provide better handling of provider loading events
replaced usage of ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and tests to utilize the new ` TraceMessageHeaders ` class for improved message header handling
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig for sorting by DATEEXECUTED ASC to improve data retrieval and ensure consistent ordering order
hhh - 11016 - fix failure to get current _ schema ( ) on postgresql dialect
fix bug when calculate partition per member when there be no data member
added scheduler state checks and improved error handling in ExecutionSchedulerManager to ensure proper scheduling and provide clearer error messages when scheduler is not initialized
removed unnecessary ` toString ( ) ` method call from ` BoxBuilder . java ` to simplify code and improve readability
refactor code in StatisticMap . java for improved readability to enhance maintainability by simplifying string concatenation syntax
lucene - 9016 : fix incorrect timeout value for closedrectslayend
add key to commandmode and improve ui ( # 4186 )
updated condition to include plot area in the road plot check to ensure that entities within the plot are validated correctly within the current plot area
added unit tests for ` setTouchExplorationEnabled ` and ` CopyOnWriteArrayList ` in ` ShadowAccessibilityManager ` to ensure proper handling ofexploration state changes and improve listener management
pdfbox - 5328 , pdfbox - 5328 : fix incorrect handling of unicode character code in cmap table
bug 57193 : avoid use stringproperty to getname ( ) in gui
refactor the creation of ` NPOIFSFileSystem ` to use ` POIFSFileSystem . create ( big ) ` instead of creating new ones to improve code readability and reduce redundancy in file handling operations
modified plot movement logic to use PlotArea for area retrieval to enhance accuracy in determining the plot ' s position and ensure proper handling of null values
hive - 4776 : offline build cause by hive - 12365 ( mithun radhakrishnan via ashutosh chauhan )
updated the lower bound check for ` count ` to allow only one ` count ` to ensure proper handling of cases where the lower bound is invalid
ensure kafka client id be set when there be more than one consumer
added error handling for execution of the javac compiler to improve robustness by throwing an exception when execution fails
ggb - 2336 do n ' t repaint when no need
camel - spring - batch : fix wrong line break in if statement
added a method ` isAnimationFinished ` to check if an animation has finished to provide functionality for checking if an animation has finished
added a test for custom branding icon handling with line breaks in LoginMockMvcTests . java to ensure correct rendering of shortcut icons in different line breaks
added a null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and updated the refresh text string in ` HomeFragment . java ` to enhance null safety and improve the readability of the displayed text
ticket # 4810 : again , space should be remove from the last edit in the last edit .
refactor ObjectHashSet to improve hash set functionality to enhance performance and maintainability of the collection operations
simplify null check logic and improve equality checks in DataUtilities . java to enhance code readability and prevent potential null pointer exceptions
fix comparison of enchanted book , mc - 12770 , nbt fix
add helidon - microprofile test for use in asynctesource ( # 1588 )
renamed ` TARGET _ FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP _ SUFFIX ` and updated related references to better reflect the purpose of the header map being processed and handled
improve logging ( on behalf of antonio xu ) for easy troubleshooting
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce ` EMPTY _ LABEL ` to improve clarity of the method ' s purpose and ensure UI resets to a defined empty state
added unit tests for the ` getPartitionsByNames ` method in ` HiveMetaStoreClientApiArgumentsChecker ` to ensure proper handling of single and unequal size batches for partition retrieval
added a closing brace to the FileListListAdapter class to ensure proper class structure and compilation
changed the type of sharees from ArrayList to List in OCFile and OCFileListAdapter to improve code flexibility by allowing multiple sharees to be accessed concurrently
adjusted the index used to remove the view in the BubbleBarView to correct the index off - by - one error
removed " org . eclipse . jetty . websocket . util . server . internal . " from hide statements in JettyWebSocketConfiguration . java and JettyWebSocketConfiguration . java to streamline code by reducing unnecessary dependencies
updated the ` S3Request ` constructor parameters to use ` false ` instead of ` true ` to adjust request behavior to align with updated requirements for non - deprecated features
fix jfxradiobuttonskin , which do n ' t update animation when timeline be null
[ flink - 22878 ] [ test ] add test for zero - split deweynumber
added a protected static variable for categorySetString and modified the return statement to replace " Category : " with a space to improve clarity and consistency in category name representation
updated assertion messages in WebSocketClientTest to remove " Invalid close control status code " to ensure accuracy in validation of close code states
add some small fix to the web application loader to avoid a npe w / o the web application loader .
hhh - 14293 fix persistentattributetransformation ignore mapped superclass class
pdfbox - 4892 : handle case where index value be not a number , improve error message
add a new test class for the PorterStemFilter class to verify the functionality of the PorterStemFilter under various conditions
phoenix - 5267 : add success parameter to postbatchmutates ( jesus camacho rodriguez )
corrected the package name from org . springframework . batch . core . exlore . support to org . springframework . batch . core . core . explore . support in multiple test files to ensure consistency in package naming for better code organization
fix a bug that could cause deadlock when close the chat window .
removed the call to Sys . touch ( ) in multiple Java files to eliminate redundant calls to Sys . touch ( ) in the current implementation
updated command handling in HgCmdLineInterface and removed unused untracked files methods to enhance clarity and functionality of the version control command execution
camel - 8467 fixed potential race condition with timer in camel - netty4
added ' range ' field to various light classes and modified ' intensity ' declarations to final to improve code clarity and enforce immutability where applicable
added variable assignments for width and height in X11GraphicsConfig and WGLGraphicsConfig to ensure minimum dimensions are used to prevent rendering issues
added toString ( ) method to DelegatingSecurityContextCallable and its tests to ensure proper string representation of objects when used in subclasses
added methods to handle annotations in the ClassFinder class to improve annotation processing efficiency and facilitate easier manipulation of inner classes
hive - 21341 : when create a bytebuffer for a byte of 0 , we need to resize to int ( sergey shelukhin , review by gopal v )
fix writebehindmapstorewithevictionstest for slow ci server
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in MotifScrollPaneUI and XTextAreaPeer classes to enhance method flexibility to support a broader range of components
[ giac ] canonical form for polynomial function ( if any ) .
added null check before retrieving column class in SynthTableUI to ensure safe access to column class when table is not initialized
added error handling for instantiating the CustomChange class in CustomChangeWrapper . java to gracefully handle potential ClassCastException when instantiation fails in Ant
replaced ConfigPathGetter with DistBuildConfig and updated related classes to utilize the new DistBuildConfig structure to improve code clarity and maintainability by using a more structured configuration object
add text view to display a warning if double entry enable .
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to known issues
modify doJoin method to return a boolean indicating success or failure to improve error handling by differentiating between success and failure scenarios
removed the optional ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the code by eliminating unused functionality
updated intent flags to include FLAG _ ACTIVITY _ NEW _ TASK alongside FLAG _ CLEAR _ FOR _ TASK _ RESET and FLAG _ ACTIVITY _ NEW _ TASK to ensure proper handling of new task launches in the launcher
added a method ` checkPagingOrderBy ( ) ` to ` SpiQuery . java ` to enable paging order checking in the query
updated assertions in RepositoryConventionPluginTests to check for the last repository instance instead of the first one to ensure test cases reflect the correct repository URL for accurate testing
add a new class AffiliationTask to handle Affiliation - related operations to create a task for managing user affilies within the pubsub cluster
remove dependency on org . apache . tomcat . util . http . requestutil for uri normalization
changed the access modifier of the ` buildUserProfileByClassCompleteName ` method from private to public to allow access to the method from outside the class
add array update handling and improved equality checks in CacheKey . java and CacheKeyTest . java to enhance performance and ensure correctness of key updates for different object types
added file type detector retrieval to multiple file system classes to enhance file type detection capabilities across different operating systems
close the session after each test to ensure proper resource management
refactor ` ShadowVirtualDeviceManager ` to use ` VirtualSensorCallback ` and add ` VirtualSensorCallbackDelegate ` for improved callback handling to enhance flexibility and maintainability of virtual sensor management in tests
added a condition to check if the context is not equal before execution when setting the session attribute to ensure that the security context is not retained when the execution context is unchanged
modified network address handling logic to prioritize loopback addresses to improve clarity and functionality of network operations related to loopback addresses
refactor BUF _ SIZE to DEFAULT _ BUF _ SIZE and update deflation and inflation logic to improve code clarity and ensure consistent default buffer size usage
added secure validation and improved input stream handling in KeyInfoReferenceResolver and XMLSignatureInput classes to enhance security checks and streamline input stream initialization
added a boolean flag to track the icon change listener installation and removed it from the icon if it is initialization to ensure that the icon change listener is only applied when the icon component is properly initialized
added Russian language support in the Language class to enhance localization options for Russian users
hhh - 9744 fix sqm duration type conversion to nanosecond
disable frame state verification for manually generate graph
added methods to reset system properties and updated Robolectric test configurations to ensure proper cleanup of system properties after tests to avoid side effects
added functionality to load the " org . slf4j . LoggerFactory " class in ViewClassLoader and created tests for it to ensure proper class loading and validation in the testing framework
added a null check for the packaging parameter in ChangePackaging . java and implemented a test for it in ChangePackagingTest . java to ensure that the packaging feature works correctly when a default value is provided
fix flaky test : use txt instead of $ ( bytext )
added a call to kam _ buffer _ clear ( cmds ) in GLFWDemo . java to reset the buffer before processing commands
use preferredunits instead of defaultunits for jog step size and manual mode
[ log4j2 - 1343 ] patternlayout % date conversion pattern should use local time zone
corrected formatting of the return statement in Terminator . java to improve code readability and maintain consistency
improved error messages for file URIs and HDFS namenode handling in FileSystem and LocalFileSystem classes to provide clearer error messages for invalid URIs and ensure correct URI usage in HDFS operations
fixed # 4778 make jabrefframe # showtrackingnotification not run in one minute
[ camel - 15836 ] use awaitility in camel - ftp to keep test stability
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to enhance concurrency support in keyed properties
added ` ignore ` method to multiple log classes and defined a method to check if a throwable is ignored to enhance logging control and improve handling of ignored exceptions
added a null check for runningTaskView in LauncherActivityControllerHelper . java to avoid potential NullPointerExceptions during execution
removed unnecessary type casting of getDamage ( ) in BukkitWorld . java to improve code clarity and reduce casting overhead
remove the cleaning of an image before saving it in PanelManager . java to improve image quality by removing unnecessary background elements
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing map and filesystem operations to enable efficient file handling and unmapping in Solr
fix pdfcleanupprocessor npe for miss ientry pdf file ( # 4067 )
updated query equality test to include a period after the field ' s maxDocFreq to ensure correctness of the term comparison logic in the test
modified ExtendedOperatingSystemMXBeanImpl to enhance performance monitoring capabilities to improve system resource management
added a method to install left commands and updated the title bar layout to enhance user interaction by ensuring proper command navigation in the SideMenuBar
added a new boolean variable ` advanceWindowed ` in ` AppSettings ` and conditionally calls ` setUpWindow ( ) ` in ` TweetActivity ` and ` UserProfileActivity ` to control window resizing behavior based on user settings
added support for SybaseDatabase in DropPrimaryKeyGenerator to ensure compatibility with Sybase database operations
updated method implementations in Client . java to improve performance and maintainability of the code
[ java ] reset last recording position in case of leadership term change .
replace the ` invalidate ( ) ` method with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java ` and add ` shouldDelayChildPressedState ( ) ` method in ` CellLayout . java ` to enhance layout behavior and ensure correct delaying of child components
added a return statement to the NearCachedClientMapProxy . java file to improve code flow control by terminating execution under certain conditions
update package - info . java files for mmm and ppp to ensure consistency and clarity in package documentation
added a method to shutdown the HTTP server and handle potential exceptions to ensure proper server shutdown handling and handle potential exceptions gracefully
camel - aws2 - s3 : fix build and update dependency
[ flink - 9199 ] [ runtime ] remove parameter _ tm _ id from taskmanagermetricshandler . java
bug 10733 : 226 to 227 db upgrade - remove unique key constraint for ` ` network _ offerings . name ' ' field ( if exists )
added a new test class TestThriftCLIServiceSecurity and modified TOpenSessionReq to append a password to ensure proper handling of password in session creation
updated energy limit handling in VMActuator to utilize a new maxEnergyLimit variable to improve code clarity and maintainability by centralizing the energy limit logic
added maxInMemorySize property and its getter / setter in HttpClientProperties to enable configuration of the maximum memory size for WebClient
modified caching logic in Cache . java to enhance performance and efficiency of data retrieval
added new test and step definitions classes for Cucumber to enable better testing and validation of Cucumber functionalities
update double value handling in TypeJsonUtils to handle JSON parsing errors and improve test cases for square and square values in TestArrayOperators to ensure accurate representation of double values and improve test coverage for array operations
added type utility method for appending bytes to the buffer in Utf8StringBuilderTest . java to improve code efficiency and maintainability by reducing redundancy
added a check for parameter sets and modified logic for handling parameters in ` Params . java ` and ` RestInvocationHandlerTest . java ` to ensure that only valid parameters are processed and to enhance robustness of the code
camel - 8080 : camel - core - loadbalancer should throw an exception if max number of output configure on circuit breaker .
updated test cases to set the maximum buffered documents and modified assertion to assert the expected value to ensure proper handling of document counts and improve test reliability
replaced ` String ` and ` Sha1HashCode ` implementations with ` Sha1HashCode ` for hash generation to improve performance and consistency when hashing hash values
replaced custom enum handling methods in AsmRuntime . java with direct usage of EnumMapper to improve clarity and reduce redundancy in enum value retrieval
added new tag for mANGROVE _ SWAMP , IS _ WET , IS _ OVERWORLD , IS _ DEEP _ DARK , IS _ UNDERGROUND , IS _ SPOOKY in ForgeBiomeTagsProvider . java to enhance functionality by including additional biome tags
fix for # 4888 ( separate thread creation from background thread )
changed private fields to protected in BaseTableUpsertMetadataManager and added initialization of custom variables to allow subclasses to access these variables and ensure proper initialization of custom variables
replaced occurrences of " ن ا ا ا ن ا ن ا ن ا ن ا ن ا ا ا ا ا ا ا ا ا ا ا ا ا ا ا ا ا ا ن ا ا ا ا ا ا ا ا
do n ' t use deprecated method ` getImage ( ) . equals ( ) ` in sun . security . engine . abstractSunSecurerule
camel - 18086 : camel - jbang - allow to specify repository to be use during run . thanks to joerg kessler for patch .
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding invalid score processing
add timestamp handling and a cleanup method to OnStartupTriggeringPolicyTest . java to ensure resource management is cleaned up after tests by removing existing files
replaced FilterConditionEditor focus logic with WindowFocusListener to enhance focus handling for better user experience in the application
[ flink - 34084 ] [ runtime ] fix checkpointscleaner thread safety .
added a new file ` XPathWhiteSpaceTest . java ` that tests XML schema handling to facilitate XML processing and validation using the IDJ029 schema
add a test and fix for bonsai block state archive get mutable with genesis hash ( # 5619 )
updated FilledNewArrayInstruction . java to improve code structure to enhance maintainability and readability of the code
make the test timeouts configurable for slow machine
update return statement in OCFile . java to use endsWith instead of substring to ensure proper handling of file paths in the logic
add a print statement to display the failure of the skin file to improve debugging by providing visibility into loading errors
added methods to manage and mark the accumulator as dirty and valid in LgoGroupedLevel2Update to improve data integrity and control during batch updates
added a constant ` UNDEFINED ` in the ` Result ` class and updated the ` TestStep ` to use it to standardize the representation of an undefined result type in the code
updated exception handling in TestTransactionCallback from PersistenceException to NullPointerException to ensure proper exception handling for potential null pointer exceptions
fixed jet service backend problem with multi - part upload ( # 1921 )
added exception handling for recovering data and improved logging in MessageDatabase and JobSchedulerStoreImpl to enhance error reporting and provide clearer debugging information upon recovery failures
added factory methods to create SummaryLevels instances and modified child count handling in VerticalNodeViewLayoutStrategy to enhance flexibility in managing summary levels based on node relationships
refactor DataOutput2 to use a sizeMask variable for improved size management to enhance code clarity and maintainability by using a more descriptive variable name
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to known issues with cruelty animals
fix bug where the storageproxy do n ' t respect the blockfor parameter
log4j2 - 1343 filemanager bugfix : must be explicitly final
updated TransformFunctionType and TransformFunctionFactory to include additional parameters for calculations and filters to enhance flexibility by allowing more flexible transformation of mathematical functions
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement class to enhance functionality by providing name and enclosing elements for better type management
8037550 : update rfc reference in javadoc to rfc 5280
fix classcastexception in recaf version 2.17 . 4 ( # 4882 )
refactor ListActivity and NoteAdapter to replace HashMap with SparseBooleanArray for selected items management to improve performance and simplify data handling in the adapter
refactor conditional statements in DirectUpdateHandler2 . java to improve readability to enhance code clarity by separating the control flow for soft commit tracking
updated path handling in ConfigFileApplicationListener to use ResourceUtils and added a new test for absolute resource default file paths to improve path validation and ensure correct file path formatting for applications
updated PreviewPositionHelper initialization to accept a Context parameter and modified its usage in TaskViewSimulator and TaskThumbnailView to improve flexibility and context handling for different screen orientations
[ java ] do n ' t send a new leadershipterm during replay if the timestamp differs from the record log entry .
[ drools - 7 ] make pmcdoveragetest more resilient to failure
refactor ByteArrayInputStream logic to improve clarity and functionality to enhance readability and maintainability of the code
refactor conditional checks in UpdaterTask for clarity to improve readability and maintainability of the code
changed the visibility of MAX _ HEADERS from final static to public static final and modified the block chain download logic to allow external access to the maximum number of headers and ensure proper handling of block headers
added " rt . jar " to the STANDARD _ LIBRARIES list to include rt . jar alongside general jar files for compatibility
[ java ] remove framer from abstracthandshaker to avoid re - sending of message when local node be no longer ready .
updated method signatures to throw IOException and replaced string literals with constants in several classes to improve error handling and maintainability by using defined constants instead of string literals
added a check for response sending if the response is already committed before setting the error exception handler to avoid sending a 500 response and improve error handling when the response is already committed
fix issue where the cpu pool be full when hold = 0 and lastpoll = 0
updated fade - out behavior in HomeGestureTutorialController and added functionality for hotseat icon visibility in SwipeUpGestureTutorialController to enhance user experience with new gesture navigation tutorial features and improve visual consistency
fix : improve logging ( # 4809 )
updated external group addition logic in LdapMockMvcTests . java to include superuser memberships to ensure correct identification of superusers in group memberships during testing
added a validation check for non - existent account transfers in FreezeBalanceActuator and TransferActuator to ensure that transactions are only performed with a valid amount to prevent erroneous transactions
replace ' / ' with ' File . separator ' in FileResolverTestBase . java to ensure consistent path handling across different operating systems
apps - 288 do n ' t show input help if keyboard be unavailable
updated method calls to use session description in GpsMainActivity and replaced Intent with CommandEvents in AnnotationViewFragment to improve description context and enhance event - driven architecture for better service management
added a conditional check to verify the number of pages in the document before saving to ensure that the PDF file behaves as expected when there is too many pages
* added bufferallocatorjme3 a a deprecated class for compatibility with jme3
fix flag name start with ` ` ! ' ' in main and flag name ( # 190 )
added comment to explain why we do n ' t get the result set
[ battlepass ] fix ' use reward ' button in reward switch list
add a simple tostring ( ) method to the queuepriorityelement to help with debug
added dependency injection for ` AffinityGroupDao ` and modified unit tests accordingly to enhance test coverage and ensure proper handling of resource constraints during unit tests
added a null check for the command and updated the options check in the Main . java file to ensure proper handling of command input and improve command options validation
reduce output stream size to improve performance .
changed the access modifier of the Scanned class from private to public to allow access to the Scanned class from other packages
modified ClassWriter to handle blank lines correctly and added a new class T8032819 with test methods to improve code readability and functionality while introducing functionality for testing purposes
removed assertion for length assertion in Person . java to simplify validation logic for object length
added a null check for the file extension in the VirtualFile class to ensure the method returns false when the file extension is not specified
fix wrong navigation bar in contact right button menu . report by damian minkov .
[ hotfix ] [ runtime ] fix insufficient state in slotsharinggroupassignment when cancel
modified the loop structure to simplify the screen calculation to improve code readability and maintainability by removing unnecessary complexity
updated the binding process to ensure proper resource management to improve reliability and prevent potential resource leaks during socket operations
added functionality to remove and display removed media items from the BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by keeping track of removed media items dynamically
geos - 7109 , log w3c action offset in element ' s in - view center point
added a new file ` bug4865918 . java ` implementing a GUI test for scrollbar behavior to address bug 4865918 related to the scrollbar blocking behavior in corects
replaced the usage of VelocityEngine with a more generic Velocity in ADKerberosOperationHandler to simplify the code and improve consistency in template evaluation
updated import statements and added a new command function to handle group triggers to streamline code organization and enhance message functionality for better user feedback
add option to select a file manager for the gnucash account ( without select content ) .
add lombok . tostring annotation to PartitionChangeEvent and TbApplicationEvent to facilitate easier debugging and logging of event types
added a constant for the configuration URI and replaced it with a constant in the CloudService class to improve maintainability by centralizing the configuration URI definition
removed redundant calls to setViewportComponent and setJScrollPane to streamline component management and improve code clarity
added support for the FORWARD _ DEL key in LwjglInput and updated related references to enhance keyboard input handling and improve code clarity
modified the way parts are retrieved in MoreIndexingFilter based on configuration to enhance flexibility in indexing behavior based on user settings
added a regex pattern to identify and store author information in JSDoc to enhance code clarity and ensure author information is processed correctly
renamed metrics constants for creating , deleting , and deleting total databases to standardize terminology and improve clarity in metrics handling
updated HiveDatabaseSchema to include DrillHiveMetaStoreClient and SchemaConfig for improved table retrieval handling to enhance flexibility and error handling when accessing tables and managing database schemas
updated ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` instead of ` Map < String , String > ` parameters to enhance functionality by allowing multiple query parameters for oauth2 login links
updated Hijrah calendar name and modified DateTimeFormatter locale specifications to ensure clarity in calendar representation and improve locale consistency in date formatting
# 180 disable audio support for firefox ( ie7 / firefox )
added ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the private constructor ` InterceptorConstants ` to enable flexible server interception handling in the application
add miss default charset column to fix test compatibility
[ iotdb - 2840 ] fix npe in streamingaggbatching when flush batch fails
[ hotfix ] fix typo in executiongraph timeout parameter
added a ` hasFrom ` property and modified SQL parsing logic in ` Delete ` and ` DeleteDeParser ` classes to enhance SQL parsing capabilities and improve code readability
replaced success and error handling methods with multi - status checks in SynchronizeFolderOperation . java to improve clarity and functionality for handling multi - status operations
refactor applicable test checks into a separate utility method for better code organization to improve code readability and maintainability by reducing duplication
modified log line parsing in LogAnalyser . java to allow optional whitespace after the colon to enhance flexibility in matching log output format
( chore ) camel - core : fixed integration test on google cloud
fixed - rsearch . values ( ) method return incorrect result if exclusive = false # 4714
[ tlc - 254 ] fix select select change and no license in cclicensestep
added a null check before inserting values into the guidIndex to avoid potential NullPointerExceptions when the globalId is not initialized
updated comparison logic in OptionalAssert to use comparison strategy instead of direct equality check to improve accuracy of value comparison in comparisons
update memory configuration handling to avoid redundant calls to improve code efficiency and maintainability by avoiding repeated calls to configuration . getMemory ( )
added a new test class TestArrayCopyToFromObject for testing array copying to ensure that ArrayStoreException is correctly thrown for both source and destination arrays
updated path escaping logic in BuckPythonProgram . java to ensure correct handling of Python paths in the insert and insert operations
fix problem with protocol that be close in async mode in the apr and nio .
fix a bug in the found file detection , and add a new api to handle all file visit . close # 638
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable to indicate it is unstable
updated assertions to check for exceptions before asserting the response code to improve error handling by checking for null exceptions before assertions
mondrian : change the splclassloader . get autoloadcall to use a lower name for the splclassloader .
added server version comparison and cleanup in CustomPlaybackOverlayFragment and PlaybackController to ensure compatibility with server versions and improve code clarity
added canonical hostname handling and updated server path constants in KDC and OneKDC classes to ensure local address resolution consistently across different components
sec - 2806 : added test case and fix for jsr250 voter . vote ( )
updated import statements in MP4Parser . java to reflect new package structure and structure to improve organization and maintainability of the code by organizing imports for better readability
added a new constant for the Hive proxy user and updated session parameter handling to ensure proper authentication and formatting of session parameters
camel - 19214 : camel - hdfs - add support for snappy compression codec . thanks to johan vandeweerd for the patch .
added a 1 - second sleep in HttpClientTest . java to introduce a delay for synchronization during tests
[ bug - 64489 ] fix issue where array formula contain empty cell do n ' t appear in the xssf formula
update glyph offset calculation and modify text in GlyphLayout . java and BitmapFontTest . java to correct glyph positioning and improve text clarity
updated image loading and path handling in Fabric8IstioIT . java to utilize Commons class for image loading to improve code maintainability and clarity by centralizing image path management
replaced synchronous method calls with a direct call to getPlaybackManager ( ) for reporting playback start and progress to improve consistency and reduce potential threading issues during playback management
improve performance by avoiding disk hit for all call .
ignore entry from maploader hitting eviction on initial load ( # 15819 )
replaced bitwise AND operator with bitwise OR operator in ResponseFlag . java to ensure proper handling of both LENGTH _ BIT and ERROR _ BIT values
improve default policy fix to work with community
7019441 : no lookup cache for internal composite font creation lead to java heap growth
update prefHeight calculation to start from 0 instead of modifying it to correct the positioning of the tree based on node height
drools - 5611 dmn feel : fix error message near dmn variable ( # 2224 )
removed unused import statements and simplified the queue initialization in various classes to improve code clarity and reduce unnecessary dependencies
changed method visibility of ` finishRunningRecentsAnimation ` from private to public and replaced direct execution with main thread post in ` NavHandleLongPressInputConsumer ` to allow external access to ` finishRunningRecentsAnimation ` and improve threading handling
added null checks for node ID and type in ElementFactoryImpl , updated edge handling in ImportContainerImpl , and improved value parsing in ImporterGDF to ensure robust error handling and enhance edge type validation
[ beam - 12477 ] fix npe in case of unknown state response ( # 12477 )
nifi - 3742 : fix bin file creation and add test to ensure same flowfile be create between bin and bin limit
make team search in closely intersection less likely to go out of range
added a check to skip sending the content - length header to avoid unnecessary processing for partial requests
updated case handling in Java2TypeScriptTranslator and modified the eval method in Literals to improve code clarity and correctness in TypeScript translation and testing
increase the sample size and increase the frequency in tuner output processor .
hbase - 4569 canary should start and stop all region in canary mode ( liu shaohui )
[ java ] remove dependency to node . environment in testcassandraconnector
reset the cursor position in the order index to ensure the cursor remains in the correct state after processing
added minimum size constraints to CallDialog and OneToOneCallPanel classes to ensure new frame dimensions are consistent based on user - defined minimum sizes
fix loss of state information during world gen . close # 3139
jetty - 9 - remove mirror test code that be not need ( for now )
refactor KerberosPrincipalDAO to improve entity removal logic and reduce dependency on EntityManagerProvider to enhance code clarity and maintainability while ensuring proper entity management
removed the boolean parameter from the getTableSnapshot method call to simplify the method call and ensure consistent behavior
fix bz 65703 - timeout handling in apr should not cause a timeout . patch by jbellis
add a description of the monetization setup and use the base64 - encoded RSA public key to improve clarity of error messages related to build hint configuration
updated the parameter name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` FileTranscodeVirtualFolder ` and modified ` isInsideTranscodeFolder ` method to improve clarity by using more descriptive variable names and simplify the transcoding folder logic
[ bz - 1066363 ] avoid use string . substring ( ) for package name that start with ' . '
lucene - 5975 : skip checkindextest on jdk 19 until it be fix
refactor ` assignTargetsForSplitScreen ` method to simplify parameter handling and improve clarity to enhance code readability and maintainability by reducing complexity in target assignment logic
refactor LeaderLatch class for improved readability to enhance maintainability and reduce complexity in the codebase
added method to initialize zk parameter handling in SolidityNodeHttpApiService . java to ensure proper initialization of ZooKeeper parameters for secure communications
refactor transaction confidence handling to utilize a dedicated method for depth tracking to improve code clarity and maintainability by consolidating depth - based logic
added a method to create a media record and updated variable names for consistency to improve code clarity and maintainability by using uniform naming conventions
set default value of platformName to " ios " to ensure consistent initialization for iOS
doc : fix typo in pagedrawclient
added braces to the conditional statements for better readability to improve code clarity and maintainability
pdfbox - 4071 : fix typo find by codespell on fossies . org
in case of exception , callback be write to nextframe fails
replaced the try - catch block with a privileged action for retrieving the caller class to enhance security by ensuring thread - safe access to the caller class loader
added functionality to reset parent categories of each category in the CategoryREST class to ensure all related categories are removed correctly from the database
add title to contrib manager dialog to provide a more informative title
added a new BigDecimal field ` vwap ` to the ` Ticker ` class and updated the constructor accordingly to enhance the ` Ticker ` data representation by including the wap value for better price tracking
added functionality to display a " no widgets " view and updated bottom inset handling in the Search and Recommendations feature to improve user experience by providing feedback when no widgets are available
add new api to render graph . ( # 4209 )
use theme - specific color for nCFirebase ( # 3373 )
refactor ShadowUsbManagerTest . java for improved clarity to enhance maintainability and readability of the test code
add some logging to assist in debug
added a call to update the selectedConfiguration to ensure the selected configuration is up - to - date after changes
replace integer division with zero for stroke width and height to ensure proper handling of edge cases in rendering bounds
[ netbeans - 3761 ] use linkedhashmap to preserve order of internal and external option in cs rule
replaced ` ClosureManager ` with ` ClosurePool ` for managing closures to improve closure management and resource management
( chore ) camel - test : migrate camel - main to junit5
added new classes WebsocketIngressIntegratedBootstrap and WebsocketPluginTest to implement and test WebSocket handshake functionality to facilitate testing of WebSocket connections and ensure correct behavior through unit testing
camel - 13663 : camel - dspace - allow to retrieve the generic type of the record from the remote source ' s .
update authentication comparison logic to use a dedicated method for equality checks to improve code readability and maintainability by encapsulating equality checks on authentication objects
added a check for the " jnr . ffi . compile . x86asm " system property to ensure the method only proceeds when the X86 compiler is enabled
refactor calls to use a single variable for call node type instead of repeated calls to improve code readability and maintainability by reducing redundant calls to getType ( )
added a new annotation interface ` Insecure ` and modified the ` MessageBuffer ` constructor to use the ` @ Insecure ` annotation to enable testing of SSL - related functionality with better error handling
added new configuration variables to HiveConf . java for Hive configurations to enhance the configuration options for improved database interactions
initialize scopes and policies with new HashSet instances and added null check for ` getPolicies ( ) ` in ` DefaultResourceSetService ` to ensure proper initialization and avoid potential NullPointerExceptions
lucene - 1882 : fix multireader constructor to work with decref on close
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , and Test3 classes to improve code organization and maintainability
make test a bit more lenient by use setvalue ( ) instead of sendkeys ( ) .
updated method calls and access modifiers in multiple classes to ensure consistency in type handling and improve code clarity throughout the codebase
change keyset and values methods from Set < Integer > to KeySet and Collection < Integer > to improve key management and functionality in the Int2IntHashMap class
added duration parameter to FlipTransition class and updated related methods to allow dynamic adjustment of background color and animation duration
removed unnecessary trace log statement in DLNAResource . java to streamline the streaming logic by eliminating unnecessary logging
bump version to 10.10 for new minecraft release .
use java version - specific warning in ` stacklocator ` ( # 2756 )
added new classes Java15Validator and Java16PostProcessor , and updated LanguageLevel CURRENT to Java _ 16 to support new features and enhance Java versioning capabilities
modified the condition for setting padding in the statusView based on the size of replies to improve UI responsiveness by accommodating more replies
refactor partition backup replica anti - entropy check to use a callback if available to improve code clarity and ensure callback is triggered only when required
added metadata handling capabilities in SeedUrl and SeedResource classes to allow storage and retrieval of additional information related to seeds
fix for npe in xpath builder when declaration be null .
hbase - 26942 addendum . add deprecation for testcoprocessorwhitelistmasterobserver ( gregory chanan )
ww - 3444 add package name to action config url instead of name
added a new test method to validate iterable containment with a null array type to ensure correct handling of null values during iteration
added stream methods to MapIterable , PrimitiveObjectMap , and MapIterableTestCase classes to enhance stream handling capabilities for improved data processing
replace return statement to clone notifInfo to ensure the original notifInfo is not modified externally
findbugs : fix npe and make sure key be not null
rename AEADBlockCipher class in AEADBlockCipher . java to improve clarity and consistency in naming conventions
added a method ` isVariableLocal ` to ` VariablesMap ` , ` WebVariablesMap ` , and modified several methods in ` VariablesMap ` and ` WebVariablesMap ` to enhance functionality for checking variable local variables across different data structures
added a check to create a new resource ID if it is null and updated ResourcesMode from best to legacy to ensure unique resource identifiers are generated for better resource management
6753173 : no need to read all the truetype ' post ' table to get underline info
[ type : bugfix ] fixed bug where the sign plugin would not accept any httpmessagereaders
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
mng - 2879 remove validation for local repo before parse maven - authentication - xml .
modified AudioNode . java by refactoring methods and updating imports to improve code readability and maintainability
[ linky ] initialize ssl context in linkyhandlerfactory ( # 9744 )
added imports for SqlStdOperatorTable and OracleSqlOperatorTable , and refactored HiveFunctionRegistry to utilize Streams for string replacement to improve code clarity and performance by leveraging modern Java features
resolve : http : / / issues . apache . org / jira / browse / amq - 4798 - jmx now support multiple jmx service for recovery
refactor the ` getBuildTargetForAlias ` method to accept a ` possiblyFlavoredAlias ` string to improve clarity and maintainability of the parameter name
camel - 13097 : camel - odata2 - fix return value of getresults with no annotation
added a new map for EQUIVALENT _ VERSIONS and modified the method to return the Hive version to improve version management by handling equivalent versions more effectively
server : allow expunge vms that do n ' t exist at all ( # 4302 )
added multiple @ Deprecated annotations to AbstractDateAssert . java to mark methods for future removal to discourage their use
updated method names and added alternative title generation in ONDashClockExtension and AlarmReceiver classes to improve clarity and maintainability of notification descriptions
updated GoogleAuthUserConfigTable to use " nvarchar / varchar " as a data type for columns to enhance data type consistency and improve test assertion clarity
replaced commit ( ) method with apply ( ) for SharedPreferences in multiple classes to improve performance by applying operations instead of commits
added an IdleListener to the StandardSession constructor and created a TestIdleListener class to manage session idle states more easily and facilitate testing
[ beam - 10560 ] fix the test _ id field of bigqueryio . test .
added background resource management for predicted icons in HotseatPredictionController and reseting the icon to null in BubbleTextView to ensure consistent UI appearance during icon rendering
mondrian : rename property ` getflushafterquery ` to ` getflushafterquery ` .
add abstracttestnativeworker to verify system query behavior
fix : lIME explanation should return all output ( # 2358 )
added args to AppleSimulatorController and InstallCommand for better handling of command arguments to allow users to specify run arguments for better flexibility in application launch configuration
fix : small issue with parargraph where the current line start and end do n ' t go within the parargraph
add check for pipeline . getstate ( ) . isavailable ( ) to determine if the pipeline be still available .
added clipping to outline for the QSB widget background to enhance the visual appearance of the QSB in the user interface
added timing logic and improved flag processing in SQLManager and BlockTypeListFlag classes to enhance performance tracking and ensure accurate flag management in the plotting process
replaced specific GL11 imports with a wildcard import and modified depth setting logic in FloatingTextRenderer . java to simplify import statements and enable depth testing for floating text rendering
fix build failure on sulong .
refactor propagationBehavior handling in JdbcAggregationRepository to allow dynamic configuration of transaction propagation behavior
fix a bug in the layervalidation ( now that regularization can be infer from the bias ) ( # 980 )
[ java ] handle exception on read / write in abstractchecker and remove system . exit ( - 1 ) call from it
changed the access modifier of the colorStack variable from static to instance to allow multiple instances of GlyphLayout to maintain their own color stack sizes
update getMappedStatement method to return true instead of false to enable additional functionality in statement mapping
changed the order of parameters in BTCEPollingMarketDataService to be lowercase to ensure consistency in currency handling when retrieving tradable and currency data
updated test assertions in ChannelStateTests to reflect new version " 0.0 , 0.0 , 0.90 , 0.90 , 0.90 , 0.90 " instead of " 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90 , 0.90
remove getversionedhashes ( ) from enginepayload ( # 6808 )
reset ` ` trigger price ' ' and ` ` ontriggerpriceTextFieldChanged ' ' to avoid nullpointerexception
refactor student edit form to include error check
removed unnecessary print statements in I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 13923 unnecessary check if result be true before try to determine if it should be debug
# 883 - beaninterceptor . setmany ( ) now correctly handle change property
added a boolean flag ` _ alwaysSaveUri ` and its getter / setter in ` FormAuthenticator . java ` to control the save URI behavior to enhance flexibility in URI management by allowing control over whether the URI should be saved
added new methods nSetLayerType and nSetLayerPaint to ShadowRenderNode to provide functionality for setting layer types and paint settings in the rendering process
replaced specific imports with wildcard imports and implemented a method to retrieve the accessible child of the popup menu to streamline imports and enhance the flexibility of the popup menu functionality
make sure that if insert be not null , create a map before convert to lower
[ test ] remove java . util . scala . collection . asscalaiterable from test wrapper
add more logging to help diagnose miss dependency
[ mng - 7247 ] warn if defaultenvironment . properties file could not be load ( # 7247 )
[ iotdb - 4062 ] fix clientmain to properly close sessiondataset
updated conditional check in SetOutgoingIf to include multicast support and NIC status to ensure outgoing connections are only established on valid and capable network interfaces
updated the String constructor to include a length parameter to optimize memory usage and improve performance
replaced receiverCapsule . setLatestConsumeTime and accountCapsule . setLatestConsumeTimeForEnergy with receiverCapsule . setLatestConsumeTimeForEnergy in multiple processors to ensure that the receiverCapsule uses the most recent consume times for asset processing
added a method to set and retrieve the invalid session strategy in SessionManagementConfigurer to enhance session management flexibility by allowing the use of different invalid session strategies
include actual empty label in protobuf error message .
added a new test class ` MapAssert _ containsKeys _ Test ` for testing key assertions to provide a framework for verifying key presence in map assertions
updated JdbcProxyGenerator to use new DelegatorGenerator and added new method JDBC4TemporaryPreparedStatementMethods to improve code organization and enhance flexibility in managing parameterized statements
added a ` ensure ` method to ` ServerWebSocketContainer ` and modified the ` start ` method to use ` Handler ` in ` DirectUpgradeTest ` to enhance WebSocket handling and improve clarity in handler usage
change ImmutableMultimap to ImmutableListMultimap in CxxFlags . java to improve performance and immutability of the multimap instances
pdfbox - 4892 : avoid unnecessary typecasts , a suggest by valerybokov
replaced initialization of ` hooks ` with a static array of ` EMPTY ` in ` Method . java ` and updated related references to use this array to improve memory efficiency by avoiding unnecessary object creation when no hooks are provided
added a grantAccess flag to MockAuthenticationManager and modified authentication retrieval logic to enable flexible access control for mock authentication objects
modified the afterJob method to accept a JobExecution parameter across multiple classes to improve flexibility by allowing the listener to respond to specific job executions
added a check for file execution before checking if the file can write to ensure that the permission check also allows access to the file after the operation
feat : add ` hivequery . hastimeseriesquerylanguage ` to ` timeseriesquery ` ( # 2379 )
add todo to allow conversion of sampleevent to csv format
added string constants to BundleConstants and updated CustomUrlManager to store these values in the record to enhance functionality for better data handling in the application
change method signature of applyRule from Hashtable to Map to improve compatibility with modern Java collections
get rid of ` ` unused ' ' code ( temporary fix )
updated the resize method and texture handling in ProjectiveTextureTest . java to improve resizing functionality and ensure proper filtering of texture and UI dimensions
[ ds - 3952 ] fix mutablelistener for generated file .
camel - 3373 : fixed issue with property placeholder in endpoint registry can not be match . thanks to joerg kessler for the patch .
updated the condition in ActionScheduler to use ' less than or equal to ' for the last attempt time comparison to ensure the last attempt time aligns with the intended behavior of the scheduling logic
updated dbg _ zip path to include temporary directory and added null check for debug _ log to ensure proper file path resolution and avoid potential NullPointerExceptions
feat ( renderdebugconfig ) : allow to hide the render debug box
fixed pipe so that it do n ' t mark active pipe a active
encapsulate TestSupplementary execution in a try - finally block to ensure locale is reset to maintain consistent locale settings and prevent side effects in subsequent tests
updated the random number generation interval from 0.8 f to 0.4 f in the Team class to reduce the maximum size of random numbers for better performance
change the vector matcher to avoid create a new set and improve debug logging .
simplify the return statement to check for null or empty annotations to enhance clarity and correctness of exception handling logic
improved error message formatting and added exception handling in StorageResources . java and StoragePluginRegistryImpl . java to enhance error reporting and handle specific exceptions more effectively
[ gr - 30834 ] add call tree csv link for easy import into graph db .
updated null checks for note and noteTmp in DetailFragment . java and adjusted note handling in DetailFragment . java to improve robustness by ensuring required parameters are validated before use
fix assetmanager ' s load frequency calculation to avoid double load .
eranmes : make the firefox driver default to native event by default on window
added constants for " nutch score " and " nutch . fetchInterval " and updated crawl datum handling to improve functionality to support custom scoring based on the metaname and fetch interval
updated import statements from commons collections to commons collections4 in multiple files to ensure compatibility with newer Apache Commons Collections features
solr - 3081 : solrcore . shareschema ( ) should return true if there be no schema share
updated size calculations in multiple classes to use a boolean parameter for newSegmentSize to ensure accurate size representation and improve clarity in memory usage reporting
replaced multiple assert statements with a single assertion for null values in VersioningTest . java to improve clarity and maintainability of test assertions
updated SQL query to filter out ' t . typnotnull ' columns based on type to ensure correct retrieval of metadata for PostgreSQL types
[ java ] pick up change to last commit time in leader heartbeat rather than just the last follower .
removed the import of MediaType and modified the buildMediaType method to use MediaType . APPLICATION _ JSON _ VALUE to streamline media type handling and ensure proper content type is returned from the exchange
replaced method names from ` fillUsingLengthPrefix ` to ` fillSlice ` across multiple classes to enhance clarity and consistency in method naming conventions
[ scb - 2475 ] fix ignore compact base file in acidutils ( # 2445 )
allow qualifier encode scheme to be non - encoded when add a table
added new files for PojoProducersCustomized and RestProducersCutomized , including their respective implementations to provide a consistent structure for managing and managing multiple producer classes in the application
update cache key references in ArtifactCacheBuckConfig . java to use CACHE _ SECTION _ NAME instead of " cache " to improve clarity and maintain consistency in configuration management
add a new registration method for AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to ensure proper registration of proto serialization for improved functionality
add miss wooden slab definition in ore dictionary . close # 1441
refactor various session management classes to improve code organization to enhance maintainability and readability of the session handling logic
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from ` UndefinedSymbolsLinkerScript ` to simplify the code structure by eliminating unnecessary dependencies
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14443 fix test failure on oracle .
adjusted the positioning of the sprite batch draw statement in HelloWorld . java to correct the positioning of the sprite batch for better rendering
modified loop logic and updated region string formatting in multiple classes to improve performance and readability of the code
add a deprecated static final Version constant for LUCENE _ 8 _ 5 _ 0 to indicate that this version should no longer be used
modified string concatenation in the logging statement for clarity to enhance readability of the debug output in the closeSocket method
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL queries with signed integers are correctly parsed and deparsed
updated the dependency type handling in CoNLLUOutputter and SemanticGraphCoreAnnotations to use SemanticGraphCoreAnnotations for better type management to improve clarity and maintainability of dependency types in the codebase
simplified the creation methods in NoSuchBuildTargetException and updated associated imports to streamline code for better readability and maintainability
updated the method call from ` testFromMain ( ) ` to ` test ( ) ` in ` MyChild . java ` to streamline the test method for improved clarity and efficiency
change initialization of configBlocks from array length to 256 to optimize memory usage and improve performance
updated version checks and improved warning messages in BukkitMain . java to enhance user clarity and ensure compatibility with different git versions
updated SQL statement escaping logic for PostgresDatabase to ensure proper handling of escaped characters in SQL statements
added methods for creating mutable bag instances in MutableBagFactory and MutableBagFactoryImpl to enhance flexibility and usability for creating mutable bag instances
pdfbox - 2092 : remove reference to ` ` . adoc ' ' , add comment and additional test for this functionality
nifi - 10356 : configure client side parameter of mqttbrokerconnection to be non - deprecated
updated ChangeSet retrieval to use a default change log if the root change log is null to ensure that the application handles cases where the change log is not initialized properly
remove redundant call to writer . output ( ) and use new variable in handler . before ( ) to streamline code for improved readability and maintainability
added database drop functionality in HiveMetaStoreClient and enhanced logging in TestObjectStore to improve database management and enhance debugging capability during testing
added an additional parameter for order currency in BithumbAuthenticated and updated API call in BithumbAccountServiceRaw to allow users to specify their order currency for better API interaction
remove SSEFluxwebconfig ( since it ' s no longer use ) .
updated method calls to use ` getReturns ( ) . isVoid ( ) ` instead of ` getFullyQualifiedName ( ) ` for consistency to improve code clarity and maintainability by using direct method reference comparisons
added a new endpoint to list detection configurations and updated the Yaml resource to handle YAML loading correctly to enable retrieval of YAML data and enhance functionality for better data management
removed public access modifier from equals and hashCode methods in Marker class to enforce encapsulation within the Marker class
refactor thread creation into a lambda expression and update timeout values in multiple files to improve code readability and allow for more flexible termination handling
added tests for adding items to the MongoTemplate and created a new class PersonWithAList to ensure proper functionality of list operations in the MongoDB template
ggb - 311 do n ' t update applet size when down arrow in web .
updated toolbar visibility handling in DrawerActivity to use a delayed execution to improve UI responsiveness by allowing a brief pause before hiding the toolbar
refactor the first page reader unpack logic into separate methods and improve readability to enhance code maintainability and clarity for handling overlapped pages
do n ' t try to save user vm password if vm be not run in vr
disable some response . encode for now , it ' s break with stream api
added a check to avoid assignment side effects in the group dialog to improve user experience by avoiding accidental group assignment warnings
refactor JSON and JSONObjectConvertor classes for improved consistency to enhance maintainability and readability of the code
update condition to use maxWidthWithMargin instead of maxHeightWithMargin to ensure proper alignment of icons based on their size
refactor code for better readability and maintainability in RegisteredServiceProperty . java and JwtTokenCipherSigningPublicKeyEndpoint . java to improve code clarity and enhance key fetching functionality
added a method to check if the user ' s mime type exists and readable , and updated import statements to enhance file handling capabilities for UNIX users and improve code clarity
enable gzip compression on netty ( for now ) .
added a new method ` doesClassLoaderDescendFrom ` in ` Util ` and removed it from ` MethodHandles ` to centralize the logic for determining class loader compatibility across different classes
move netty - handler - proxy check from channelprovider to proxychannelprovider , a it be no longer need
added a test for handling an empty final column in the CSV output to ensure proper functionality of the CSV reading when there is an empty final column
added compass margins for better layout and consistency in NearbyMapFragment . java to improve UI layout and appearance of the map
added a new test method ` testInterpolation ` to ` GeoPathTest . java ` to verify distance calculations with different path formats
updated methods to throw HiveException and improved error handling in Parquet filter predicate conversion to enhance error reporting and ensure proper propagation of exceptions
added language setting for video stream type in LibMediaInfoParser to ensure correct language information is applied for video streams
added a warning log for schemas in new versions and updated the warning message format to provide clearer warnings about compatibility issues when schemas in new versions are smaller than the old version
replaced manual resizing and resizing logic with ` addAll ` for various array types across multiple classes to simplify code and improve readability by reducing redundancy in array resizing logic
no effective change - add code inspection for the autocloseable method
refactor InMemoryClientRegistrationRepository to accept a map of ClientRegistration instead of a single list to enhance flexibility in managing registrations and improve null safety
added a method to reset the UI state in SchemaUpgradeHelper to ensure proper handling of UI state changes during schema upgrades
fix ` ` pending exception ' ' report in junitreporter ( # 2214 )
add a new player selector ( for command ) to support . / p2p / . ( # 3954 )
added Closeable interface to the Selector class to enable proper resource management and support for closing the Selector instance
added MultiplexConnectionPool implementation to the MaxConcurrentStreamsTest to improve connection management and performance testing for concurrent streams
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
update context configuration files to use " h2 " instead of " expression " and modify test classes accordingly to ensure proper handling of special characters and parameters in the HTML query rendering
updated HTTP status handling to use constants for better readability and maintainability to improve code clarity and ensure consistent status management across the codebase
pdfbox - 4892 : correct typo , a suggest by valerybokov
fix unit test which randomly fail on slow create .
added metadata handling methods and improved metadata file selection expansion in ParquetFormatPlugin and ParquetGroupScan classes to enhance code readability and ensure accurate metadata file selection
updated ` isSuccess ` initialization and modified error handling in ` Jsr199Javac . java ` to ensure successful compilation and improve error reporting during compilation
added a TableModelListener class to DefaultSortedTableModel for handling table changes to enable listeners to respond to table changes in the model
[ scb - 2687 ] increase serverconfig # connectionlimit to max int ( # 2698 )
added document provider authority handling in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to ensure compatibility with KitKat and improve code organization
remove log _ oc . startlogging in favor of log _ oc . stop
modified error handling in FilterChainProxy to properly analyze and handle wrapped RequestRejectedExceptions to enhance robustness in exception handling and ensure the correct response to blocked requests
updated StringBuilder to use ' this . length ' instead of ' length ' for clarity to ensure correct buffer resizing based on the current length and improve performance
throw illegalargumentexception for empty filterlist in filter . decode ( ) ( # 2391 )
add helper class tbstopwatch to allow extend the stopwatch interface
fix typo : ` ` this . initialized ' ' be ` ` this . initialized ' '
added deprecation annotations to multiple classes to signal that these classes are outdated and should not be used in new development
[ zeppelin - 1489 ] fix remoteinterpreterserver fail to start due to missing context classloader
maintain commandsourcestack . getentity ( ) which return null for invalid input .
updated minSdk values from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with newer Android API levels
updated timerIdForSlot parameter names and modified method parameters for clarity to enhance code readability and maintainability by using more descriptive variable names
# 1629 - enh : add a simple name to all query plan to display the full name of the bean
updated JavaScript response path from " wro / all . js " to " static / all . css " and added a new WroSassProvider class to streamline resource rendering and add handling for Sass - only resources
add a new test method ` showLatestTimeseriesTest ` to validate functionality of the latest timeseries data retrieval to ensure correctness of timeseries data handling in the metadata fetch process
sec - 1038 : rename ` ` appcontextlocation ' ' to ` ` contextconfiglocation ' ' , to be consistent with other platform .
6894461 : ocsp checker should not wrap all exception a ` ` unable to send ocsp request . ` ` ( introduce by # 6885667 )
benchmarker : add config option for turn off write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
add a new test class Issue _ 815 . java that tests the behavior of the SortedTableMap serializer with page size and node size to ensure correctness of the SortedTableMap serialization and deserialization in the application
add a shapeless recipe to the craft server side . close # 1719
mahout - 1190 : fix for underlie vector . next ( ) method in multi - threaded environment , and add test .
added entity owner plot handling and metadata management in BukkitMain and EntitySpawnListener classes to enhance plot management by ensuring proper ownership of plots within the plot area
added a getDebugLogger method to DIHWriter and SolrWriter classes to enable retrieval of the debug logger for improved debugging capabilities
( chore ) camel - io : fix name truncation issue
added tag matching check to UpToTagChangeSetFilter to enhance error handling and provide better feedback when tags are not found
[ beam - 8470 ] use arraylist instead of list to improve performance
refactored BrokerRoutingManager to improve routing logic to enhance performance and maintainability of the routing manager
updated volume and up paint colors from gray to GRAY in CandlestickRenderer . java to improve visibility and aesthetics of the renderer
refactor layout parameters and implement InsettableFrameLayout to use InsettableFrameLayout . LayoutParams instead of FrameLayout . LayoutParams to improve code clarity and maintainability by consolidating layout parameter logic
added duration parameter to BuildTargetDurationListener and updated test cases to include it to enhance functionality by capturing and validating rule duration in JSON output
added an assumption to check if the database profile is active in various test classes to ensure that tests are only executed if the expected database profile is active , improving test reliability
added null check for user before processing scopes to avoid potential NullPointerExceptions when user is null
add a unit test to show how to replace a route with a route - base route in camel - test .
use nonblockinghashset instead of concurrentskiplistset to improve performance and reduce contention
cloudstack - 4239 . listpublicipaddresses api should return only source network id a a parameter .
added battery optimization functionality tests to ShadowPowerManager and ShadowPowerManagerTest to enable testing of battery optimization features starting from API level M
updated the way the Jetty version is retrieved by using __ buildProperties to ensure compatibility with different build configurations when retrieving the Jetty version
added test cases to verify invocation ordering under various scenarios to ensure that the verification process correctly handles scenarios where multiple invocations fail
tregex : fix for npe in tregexexecnode ( # 1388 )
fix : change default background color of profile to black
updated executor management in MiniSolrCloudCluster . java to use more descriptive variable names and improved resource cleanup to enhance code clarity and ensure proper resource cleanup during shutdown operations
changed ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` in ` MetadataIndexer . java ` to simplify data structure usage and improve code readability
updated log message to use ` getFile ( ) . getName ( ) ` instead of ` getFile ( ) . getName ( ) ` and added view removal in ` EditorTextActionWindow ` to improve logging clarity and ensure proper cleanup of parent views
improve log for skipped entry , and good error message
introduced LuceneStorage for managing document links and updated Fetcher and FetcherMain classes to enhance document storage capabilities for better tracking of content types
updated the populateBubble method signatures to include an existing Bubble parameter and modified bubble inflation logic to improve the handling of existing bubble instances and enhance code clarity
improve error reporting of scheduled route policy and job execution
refactor method signatures and update related JSON handling in MotanServiceBeanPostProcessor and TarsServiceBeanPostProcessor to simplify the code by directly adding methods to the list
[ java ] : use aeron delay generator to reduce latency .
updated Gson instantiation and added properties for client information in ClientInformationResponseView . java to enhance the handling of client information and improve JSON serialization
added a conditional check before setting the average price in the HuobiAdapters class to avoid division by zero errors when the field amount is equal to zero
removed the rawExecutionReports method and directly accessed the executionReports variable to streamline the code for better readability and efficiency
added a fail method to LdapTimeoutTest and modified the failure condition in LdapTimeoutTest to improve error handling and provide clearer timeout logging
check if the locale exist before read the userdict . otherwise , log a warning .
ambari - 24427 . add a check for whether the alias / file name be available before publish the password . ( mpapirkovskyy )
added a check for already parsed segments in ParseSegment . java and created a new method in SegmentChecker . java to skip parsing to improve efficiency by avoiding unnecessary parsing of already parsed segments
[ flink - 12342 ] [ yarn ] always set application - attempt - failures - validity - interval when restart the yarn cluster
log a warning if h2 driver be not included , during geoserver shutdown
hbase - 23939 support readtype . stream for snapshot - based inputformat ( # 3973 )
add fixedheight and fixedwidth option to instancelogininfo , in order to be able to set them to be set dynamically .
added ` cornerRadius ` parameter to multiple update methods and updated related calculations to enhance the animation functionality by allowing dynamic corner radius
updated the COMMANDS _ TO _ REMOVE array to include additional commands for removal from the job tracker to enhance filtering capabilities by including relevant commands for improved functionality
added retry logic for connection pooling in TxnHandler to improve resilience against BONECP connection issues and handle potential connection issues gracefully
refactor ( db ) : add txncheckreserve and txnreserve into queuescontainer
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to store multiple string values for better functionality and data management
phoenix - 4987 add test for explain client delete statement
modified the exception handling logic in BaseServiceException to include a retryable flag to improve error handling by distinguishing between SocketTimeoutException and other socket exceptions
added a new parameter ` rapidInstallTypes ` to various classes for managing ADB install types to enable more flexible handling of rapid install types during adb restarts
updated the regex pattern to allow optional whitespace after " - srand " to allow for additional characters after the seed character
refactor MultimapSubject to use factory methods for better type safety and clarity to enhance robustness and maintainability of the code
modify return statement to adjust the device ' s height based on the real display size to ensure correct positioning of the launcher based on device orientation
handle when some mediaitems require transcoding but others do n ' t
added localization to the Picker arrays in the Picker class to enhance user interface localization for better user experience
camel - 8096 cxfrs component should return a 404 error code when it can not find the customer
hhh - 14077 PostgreSQL 1.0 - specific exception should be convert to hibernate exception type accord to hibernate naming conventions
added null checks and modified query ID handling in ` TestJdbcDriver2 . java ` and ` HiveStatement . java ` to enhance robustness by ensuring queryId is not null before execution
[ beam - 7954 ] add test for unboundedpcollections a a flaky test in pardotest
removed the " em " suffix from the HTML output for the filename to simplify the output by removing unnecessary line breaks
[ java ] remove leadershiptermid parameter from joinlogasfollower method and remove leadershiptermid .
fix a bug where sometocontent ( ) call be n ' t call when an exception occur .
[ flink - 24552 ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
rename ` token ` method to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` and its corresponding tests to unify method naming for consistency and clarity in the codebase
added null checks for tree and updated marker handling in Recipe , Markers , and SearchResult classes to improve robustness and prevent potential NullPointerExceptions
return null instead of float for font size as double . thanks to michael klink for the patch .
[ te ] addressbookdocoMo result parser : remove maybewrap ( email ) call
fix dependency resolution when exclude be empty
added support for quoted and base currency in DSX pairs to enhance functionality and ensure proper currency handling
[ hotfix ] [ test ] fix checkstyle violation in test
[ bz - 1059725 ] avoid to create incremental kiemodule when it be invalid ( # 9017 )
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` to ensure proper handling of the object when ` sobj ` does not contain the key ` k `
camel - 8561 : add javadoc to model class so we have eip documentation out of the box
truffle : do not use lookup . findgetter / setter in hostfielddesc .
add some annotation to support completable object
adjust freeze checkpoint threshold in PlaybackController . java to correct timing logic to improve responsiveness
removed unnecessary imports and adjusted internal state settings in AbstractCommonPowerMockRunner and PowerMockRunner classes to streamline the code and ensure proper state management during testing
updated the type code parameter in the unmarshalIn method from typeCode to realType to ensure correct type handling during the unmarshalling process
updated conditional checks and added message handling for lastIndent in TabsAndIndentsVisitor . java to improve code clarity and ensure correct indentation based on method invocations
changed the import of TestSingleTokenTokenFilter from LuceneTestCase to TestCase to align with JUnit testing framework for improved compatibility
replace the column name writing in HtmlProcessInformationsReport to use a wrapped text to improve the readability of the generated HTML output for better user experience
batch - 1307 : refactor simplejobrepository to take care of persist the late step execution
added a conditional check to hide the new media folder before adding it to ensure that the component is only added when the new media folder is not hidden
updated error handling for null actors in SplitPane . java to ensure proper removal of widgets and prevent unsupported operations
add more type parameter handling to remove unused import ( # 9314 )
fix the npe in uniquemodlistbuilder when there be no mod information
changed logger initialization from instance to static in TicketGrantingTicketImpl . java to improve performance by reducing object overhead during initialization
updated the version of the timeseries created in PhysicalPlanTest . java to version 81 + 12 to ensure compatibility with the latest timeseries data format
added a method to determine if a value is a string and modified Converter to handle it to improve value validation and enhance converter functionality for enum values
modified the condition for handling character inputs in CPlatformResponder . java and added utility methods in LWCToolkit . java to enhance support for US International PC keyboard layout inputs and improve locale handling
[ java ] make c medium driver publication timeout configurable .
added a check to skip processing requests that start with " / css " or " / images " or " / favicon " to improve handling of media requests for better compatibility
added a success assertion to validate the installation of wellbeing test APKs to improve reliability and debugging of APK installation process
# 2716 - remove oracle ansi sql limit support ( # 2741 )
updated expected array of enabled secure transport protocols from 1 to 3 in TestSimpleBodyHandler and TestVertxTLSBuilder to ensure proper handling of multiple transport protocols and improve test accuracy
updated file paths in DiffRuleKeysScriptIntegrationTest . java for consistency to ensure accurate representation of different Java versions
added a boolean flag to track if haptic dismissed to improve user experience by preventing accidental dismissal of the touchcontroller
add more logging to log the cause of mixineventworldexplosion . make it easy to debug .
removed the ` setHasStableIds ( true ) ` method and its implementation in ` SymbolInputAdapter . java ` to enforce stable ID stability and improve code clarity
updated the method to accept a query parameter for bids and asks in Bitfinex . java and BitfinexPollingMarketDataService . java to enable retrieval of multiple bids and asks instead of using hardcoded values
camel - 8246 fixed the unit test error of camel - stax
[ hotfix ] fix the zookeeperleaderelectiondriver tostring ( ) to include the cluster name
updated SqlSessionFactoryBean implementation details to enhance session management capabilities in the application
fix : do not use reflection for generic call ( # 9051 )
replaced the error handling mechanism in PolygonRegionLoader to throw a RuntimeException instead of using Gdx . app . error to improve error handling by providing a more informative exception when reading fails
added a method to check if the current deadline is active in the Deadline class and updated timer handling in the RawStoreProxy to improve thread - local management and ensure proper registration of timers
of - 2321 : better error message for closedchannelexception in nettyrequestexecutor
check for null genres before setting the text view in ItemListActivity to avoid potential NullPointerExceptions when displaying genres
[ flink - 3094 ] [ checkpointing ] do n ' t checkpoint the wrong state when the reset have happen in the region recovery
add a new class MappedContainerComponent for managing mapped containers in the system to facilitate the retrieval and mapping of mapped containers in the prefab
[ iotdb - 6038 ] fix npe in walnode # tryacquire ( # 7803 )
fix connection retry issue on callback failure .
fix a minor issue with the package javadoc and some whitespace .
added a new test class SQLServerEscapeQuestionCharacterTest for testing SQL Server escape question character handling to ensure proper handling of SQL Server escape characters in Hibernate queries
added nonnullability annotations to constructors of CamelModule and updated related methods to improve code robustness and clarity by enforcing non - null parameters
remove unnecessary sync from javasseport # getclientbyname and javafxseport # getclientbyname and javafxseport # getclientbyname
updated package structure and import statements from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider ` in multiple Java files to better organize code under the provider module for better maintainability
coverity : fix a class cast exception in cropperutils . loadimage
remove appName parameter from some code ( getappname ( ) can not be null )
[ gr - 43927 ] add unit test for install / uninstall command .
replaced ` setHeadless ( true ) ` method calls with ` addArguments ( " -- headless = chrome " ) ` in multiple test classes to allow for more flexible argument registration for headless mode in tests
use object . intern ( ) to save memory
added a check for " MOVE " in the recv _ status check to allow handling of " MOVE " status in the connection logic
fixeddateformat . getmonths ( ) return millisecond value for month . fix http : / / github . com / codenameone / codenameone / issues / 2409
updated import statements to use the non - shaded version of Lists to resolve dependency issues caused by shaded imports
[ hotfix ] [ network ] remove redundant check in hsbuffercontext . spill ( )
updated permission checks for untrusted visit flags in mmm Visit . java to ensure only authorized players can access untrusted plots
fix receive jabber message on some jabber account ( see also http : / / github . com / codenameone / codenameone / issues / 2208 ) .
updated URL normalization conditions to include both 0x21 and 0x7D to ensure proper handling of curly braces in URL normalization
changed access modifiers of methods related to remote animations and transitions in QuickstepTransitionManager to enhance encapsulation and restrict access to implementation details
added a condition to compare ` enc1 . getClockRate ( ) ` and ` enc2 . getClockRate ( ) ` with their values if ` res ` is ` 0 ` to ensure consistent ordering of lock rate values when scaling
added a method to retrieve the project path and updated the generateProjects method to return an ImmutableSet of paths to enhance functionality by providing access to project paths and improve the handling of generated projects
simplify code structure by removing unnecessary ' if ' statement in HostLocaleProviderAdapterImpl . java to improve readability and ensure valid handling of locale values
add a new class MSwingUtilities for managing image scaling with custom bitmap rendering to enhance image handling and improve debugging capabilities with custom graphics in the application
camel - 3973 : camel - mail should use defaultasyncproducer to speed up rout . work in progress .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable refreshing of configuration properties for better state management
added unit test base on user forum issue
added new Main and ScriptRenderer classes for scripting functionality to facilitate the creation and rendering of JavaScript templates in the SchemaCrawler integration
added a check for ` _ inputState ` in the ` Request ` class and implemented a new test for query parameters after reading to ensure proper handling of form submissions and validate functionality through unit testing
added checks for non - positive dimensions and modified touch focus handling in SelectBox components to improve robustness and prevent unintended behavior when interacting with various components
fix reportfailure in deploymentmanager when context shutdown hook fails .
remove unnecessary copy in Lexiconrecipemappings . getlocalizedname ( ) , since it overwrite the exist itemdamage
[ java ] use a constant time backoff rather than a constant time .
replaced specific StringUtils imports with a wildcard import and modified conditional check to simplify imports and enhance code readability
load holiday . xml url from class loader instead of classpathurlstreamhandler
add a new file FieldUtils . java with utility methods for retrieving and retrieving field information to provide a centralized way to handle and retrieve field information within the application
removed unnecessary condition check in DeferredAttr . java and added a new class DoubleStaticImport . java to simplify the assertion logic and add a test for double static imports
updated layout inflation from custom content to screen and added padding for custom content to improve UI responsiveness and visual spacing for widget custom content
fixed bug relate to xabber account save last account error .
add a new method ` setvar ` to handle variable values in ` LineReader ` to enhance functionality by providing a help option for setting variable values
fix catentity not fire on animal tame , close # 7844
make sure unsigned range work without throw dbexception
pdfbox - 4892 : add test for get fonts , a suggest by valerybokov
set the app mode to the current mode of the application to ensure the application displays the correct mode in the user interface
add possibility to specify dockerfile ' s location during the build .
add a null check before initializing threadInfos and set threadClassNames to avoid potential NullPointerExceptions when accessing thread information
updated the calculation of the sweepAngleOuter variable to use FLOAT _ EPSILON to improve code readability and maintainability by using a more descriptive constant instead of a magic number
[ flink - 23454 ] [ checkpointing ] add extra log for singleinputgate checkpoint
added additional table types to the Schema . java file to enhance compatibility with additional database tables
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum classes and updated related classes to improve flexibility in handling minimum similarity parameters and enhance code maintainability
rename method ` addActionsView ` to ` setActionsView ` to improve method clarity regarding its purpose
added support for set / unset of the immediate flush property .
ensure zipkin auto configuration be load correctly and do not load all the kafka / amqp auto configuration
updated JLayer to handle null components correctly to ensure proper removal of components when they are null
updated import statements to use the non - shaded version of Google common libraries to resolve dependency issues caused by shaded imports
fix potential deadlock in getreturnblock ( ) and getunwindblock ( ) .
updated icon handling logic and added getter and setter methods for legacy renderer to improve clarity and functionality of icon rendering management
replaced all occurrences of ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJweEncrypter ` to standardize byte conversion handling across the codebase
added null check for mObserver in NavigationModeFeatureFlag . java to ensure stability by avoiding potential null pointer exceptions
modified the return type of the ` thenComparing ` method and added a new test class ` Department ` to improve type safety and ensure correctness of comparison operations
refactor DocIdSet class to improve structure and readability to enhance maintainability and facilitate future development
fix bucket - in - time anomaly detection ( # 1421 )
[ visualscoretag ] catch numberformatexception and fail the test
added classloader configuration to the MockFactory enhancer to ensure proper class loading for mocked packages
add a new class ` OriginalFormat ` that extends the ` ConverterWithEnumFormat ` class to provide a standardized format for enum values in the converter
replaced hardcoded " yyyy / mm / " with a constant for better maintainability to improve code readability and reduce the risk of errors related to string literals
refactor JAWTRenderer class for improved performance to enhance rendering efficiency and reduce memory usage
camel - 15836 - camel - aws2 - lambda : enable autowire on the client , fixed test
server : do n ' t replace / replace mac address if it be a valid input ( # 4943 )
removed authorization check from stringHeaderName to streamline authorization handling in the ProxyServlet
change method from submit to execute in TraceableExecutorService class to improve task execution handling in context - aware scenarios
added a getDetails method to various authentication token classes to provide access and management of authentication request details
updated the random use point selection logic in SolrTestCaseJ4 . java to improve accuracy of point selection based on random input
lucene - 6695 : rename method appendDot ( ) to endSentence ( ) in favor of appendspace ( )
updated method signatures to include Locale parameter in multiple classes to ensure consistent formatting across different locales
groovy - parser - well handle sequence of consecutive name argument in method call . add more natural ordering to rewritegradleproject
added bounds checking for bottom and left inset dimensions in Border . java to ensure proper layout bounds for better UI appearance
refactor gesture state handling in TouchInteractionService to use a common method for creating GestureState to improve code clarity and maintainability by centralizing gesture state management
replaced DateTime with Instant and DateTimeFormatter for versioning in LlapServiceDriver to improve compatibility and flexibility with modern Java date handling
update openblas . java and openblas _ nolapack . java files to standardize naming conventions across the project
tw - 35395 artifact of old build can not be download via torrent ( addendum )
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction management
increase the timeout duration from 15 seconds to 480 seconds in AbstractDistribZkTestBase . java and set the socket timeout to 40000 milliseconds to improve stability and allow for longer recovery times in the test environment
add a new class SearchResults for managing search results to provide a structured way to process and retrieve search results as objects
fix possible npe in cpu view if no cpu view be available
fixed an issue where load code with primitive type would fail .
lucene - 9777 : fix out of date version on release 8.10 . 0 and 8.11 . 0 ( # 2385 )
updated feature flag from DISABLED to TEAMFOOD and modified the text method in AppIcon to ensure that the feature is enabled and better reflect the functionality of the textContains method
added a new API endpoint to retrieve tenant pools for the current instance to enhance instance management capabilities within the application
lucene - 6598 : do n ' t stop early termination on prefix / doc id
modified InlineBytecodeGenerator to mock interface types and updated InlineByteBuddyMockMakerTest to new test cases to enhance mocking functionality and ensure correct behavior for string and interface names
added logging for compilation and preprocessing processes in CxxCompileStep and CxxPreprocessStep to enhance visibility and diagnostics during execution and processing processes
add utility method to remove char from string ( # 3756 )
fix the metadata service protocol recognition ( # 10685 )
[ bz - 1062547 ] add transform ( ) method to support compile expression
fix a bug in distributiongraph that cause the exception to be throw when getdistribution ( ) return null
simplified condition checks in FormatStringChecker . java to enhance code readability and maintainability by reducing unnecessary complexity
solr - 6595 : fix a race condition that could cause npe if solrcore be create before a successful connect .
refactor ITestDbTxnManager for improved clarity to enhance maintainability and readability of transaction management code
refactor connection handling in DatabasePlatformFactory to use try - with - resources to improve resource management and ensure proper closing of the connection
added map testing functionality in CodeFirstPojoClient and CodeFirstPojo classes to enhance testing capabilities for remote code initializations and improve code organization
pdfbox - 4892 : simplify , a suggest by valerybokov
[ ds - 3158 ] fix ' scale offset ' menu item selection in scale dialog .
renamed the method ` updatePlayerStepStatus ` to ` tickBelt ` and updated related code conditions to improve clarity and functionality by indicating the purpose of the method
pdfbox - 4892 : avoid ioexception , a suggest by valerybokov
changed the type of the ' keys ' variable from SortedSet to LinkedHashSet to maintain the insertion order and ensure uniqueness of the keys
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 and modified relevant class members to improve touch event timing and enhance code clarity
updated library version from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java to ensure compatibility with the latest camera features
added a conditional check for agentSupport before setting allConstructorsToPublic in MainMockTransformer . java and created new classes MockStaticWithPrivateCtorTest . java and StaticWithPrivateCtor . java to ensure proper handling of class initialization and add tests for mocking static methods with private constructors
pdfbox - 4892 : simplify , a suggest by valerybokov
bug 52398 - provide a window title when run out of java . awt . x11
updated depth calculation based on pixel size for better transparency handling to ensure correct depth value is assigned when using a 32 - bit color model
added error response body handling in OkHttpDataSource to improve robustness by throwing an exception when reading unsuccessful responses
added a new exit method ` exit ` in ` TopLogging ` and modified its usage in ` TopThreadGroup ` to simplify error handling by using a dedicated exit method for better maintainability
updated the calculation of the start index for regex matching to correctly handle cases where the regex is not global
planner - 468 : ignore optaplanner 6.3 . 1 upgrade test ( # 468 )
fix off - by - one error in gethighallocation ( )
added a method to clean entries without feeds in the database to enhance efficiency by reducing the number of database calls when deleting feed entries
change return type of appendToLabel method from void to AtomicCounter to enable method chaining for better usability
[ java ] add support for disable spin idle and spin idle strategy .
added handling for not - modified responses in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure headers are not written if the response is not modified
truffle / instrumentation : rename some listener to toolevalnode for consistency
refactor the paintTabArea method to leverage Insets for better layout management to improve code clarity and maintainability by consolidating the tab area painting logic
refactor KrakenMarketDataService to simplify argument handling and improve clarity to enhance code readability and ensure argument validation for better error handling
camel - 1424 applied patch with thanks to george fletcher . also add absolute path support to file endpoint .
added JSON identity information and a new method to JavaProvenance and MavenProjectParser to enable serialization of Java classes into a structured version and improve project structure
added tracing for registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry to enhance debugging capabilities and improve type validation
wait for the cloud state to be up to 200ms to finish the test ( for a long time )
make handling of unknown columnfamily more robust . patch by jbellis
added a check for writable output files to handle root permissions to avoid errors during test execution when files are writable due to root access
added package information retrieval and logging in LauncherModel . java to ensure that the application information is available before proceeding with package handling
cloudstack - 410to420 : do n ' t fail if fail to start the upgrade due to a failed network upgrade
added error handling in AbstractFaultTolerantChunkOrientedTasklet and enhanced exception handling in FaultTolerantChunkOrientedTaskletTests to improve robustness by ensuring non - skippable exceptions are properly handled during write operations
update condition checks to use regionMatches for case - insensitive matching to improve accuracy in determining if the input starts with the completed string
added imports for SourcesFileErrors and modified dataTable handling to utilize this list to improve error handling and simplify data table management
added a mechanism to dismiss all tasks in the overview for improved user experience to enhance user experience by ensuring a clean overview when tasks are present
server : add database upgrade template ( # 41400 to # 41400to41500 )
removed unnecessary null checks and improved connection handling in LdapClient . java to simplify the code and enhance readability while maintaining functionality
refactor index and action execution logic in SequenceAction . java to improve code readability and maintainability
add set _ keyspace method to cassandraserver to set the login and current keyspace
added a check to skip synthetic fields in ReflectUtils . java to improve handling of synthetic fields during reflection processing
added LoggerProvider to manage logging in the configuration to enable better integration with Ninja ' s logging framework in the application
changed the type of ` port ` from ` String ` to ` int ` and updated related code accordingly to improve type safety and simplify the handling of port values
added deprecation warning handling in SpringFactory and updated test cases for better error reporting to ensure users are aware of potential issues with multiple glue classes and ensure proper configuration of spring context
added a new method ` deepStart ` to the ` Startables ` class to provide a streamlined way to handle ` Startable ` instances efficiently
remove shape # reserveprimitedexceptionarray , deprecate since 20.2 .
change the laser table to be an ilaser target block , for # 43
refactor the condition for checking object names in AbstractJdbcDatabase . java to improve readability and maintainability of the code by using a dedicated conditional check
removed unused imports related to CachingTokenFilter , TokenStream , and MemoryIndex from TestSolr4Spatial2 . java to improve code clarity and reduce dependencies
updated MemoryLimitTest to reset expire messages period to ensure correct behavior of the test under high load conditions
removed unnecessary null check for p and handlerName in RequestHandlers . java to simplify the code and ensure handlers are only added if the norm has length
modify the logger retrieval to replace ' - ' with ' . ' to standardize the servlet name format for improved clarity
fix python module search path option in projectbuildfileparser
refactor audio processing logic to improve error handling and frame size validation to ensure robustness and prevent potential OutOfMemoryError when processing audio data
add null check for enums before returning an Optional to improve robustness by handling potential null values gracefully
update error message format in CommitLogReader . java to include more detailed error information to improve debugging by providing more context in error messages
added assignment of the policy in WebSocketSession to utilize the container ' s policy to ensure proper handling of WebSocket session policies
update the handling of static fields in Java2TypeScriptTranslator to simplify the logic for determining static fields in the namespace
added a webroot argument to the context creation in UserService to allow configuration of the web root for the application
test : migrate camel - spring - consumer to junit 5 ( # 4501 )
cleanup and refactoring : move isattachable check to utility method
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple classes to enhance clarity and consistency in method naming conventions
consolidated multiple import statements for trade - related classes and added a method to place stop orders to streamline import statements and prepare for future stop order functionality
added buffer reset calls in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background for mSourceView to avoid potential NullPointerExceptions when mOriginalForeground or mSourceView is null
updated comparison in FloatingDecimal . java to use a strict less than operator to correct the range check for decimal exponent values
updated propertyType validation in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper type checking for property setter and validate functionality through testing
removed the maxVersion parameter from the getVersions method call to simplify version retrieval by using only the current version range
set the origin header to reflect the scheme when the URI is secured to ensure proper handling of header values for secure requests
updated animation logic in RecentsView and TaskView to utilize alpha and translation for modal visibility to improve user experience by ensuring smoother transitions when overlay modal visibility changes
added additional debug information to exception messages in ORCRecordReader . java to improve traceability of illegal multi - value and map - value fields
remove some unused sample ( # 1182 )
removed unnecessary imports and updated the list of interfaces in PersistenceProvider . java to streamline the code by eliminating unnecessary imports and improving readability
updated log initialization to reference the correct class name for improved clarity to ensure logging reflects the correct class context for debugging purposes
avro - 2704 . java : add test for union type with multiple field .
modify session creation logic in WebSocketEndpoint and add a new test in WebSocketIT to ensure sessions are only added when they are currently connected and improve the robustness of the WebSocket connection handling
fix delay issue after batch processing
ww - 3976 renames openSymphony group to use Apache struts / en for clarity
add conditional logic to manage video track stopping behavior to ensure proper handling of video tracks when stopping
change the data type of chartData from List to ArrayList and add a new BittrexChartDataPeriodType enum to improve flexibility in handling chart data and allow multiple periods in the Bittrex market data service
remove unnecessary import , fix compile error
replaced substream ( 200 ) with skip ( 200 ) in TargetType58 . java to avoid issues with stream processing
hhh - 10956 - fix nullpointerexception when look up identifier generator for simplevalue .
rename findfulltextaction to downloadfulltextaction , for # 4089 ( # 4089 )
[ type : refactor ] optimize the registration of uri ( # 3640 )
renamed WebSocketMapping and WebSocketUpgradeFilter classes to improve clarity and maintain consistency in naming conventions
added a check for blank OSDB hash and changed list type declarations to ArrayList < String > to improve robustness of hash extraction and enhance type safety with generic usage
added token transfer functionality to RuntimeImpl and planner to enhance contract processing capabilities by enabling token transfer validation
camel - 15834 : camel - ftp should use change current directory when delete file on destination . thanks to johan vandeweerd for the patch .
camel - 8461 : fix jacksonldapconfiguration # withdefault ( ) to use correct parameter name .
added validation for empty result sets and modified conditions for hybrid hash join conditions in MapJoinOperator . java and HybridHashTableContainer . java to enhance code correctness and ensure proper handling of join conditions
refactor ` ServerHTTPSPDYAsyncEndPoint ` to accept ` endPoint ` as a parameter and update related methods to enhance functionality by associating ` HTTPSPDYAsyncEndPoint ` with ` AsyncEndPoint ` for better dependency management
added extra " id " to intent extras in multiple adapter classes to ensure proper identification of tweets using their identifiers
added handling for user proxy authentication in HttpURLConnection and improved disconnect logic to ensure proper resource management when disconnectioning with HTTP connections
replaced the use of ` int _ numChildren ` with ` AtomicInteger ` for thread - safe incrementing to ensure safe concurrent access to the trace ID generation
updated JWT and response handling in multiple classes to improve code consistency and clarity in the authentication process
updated the test annotation to be enabled to prevent the test from running due to underlying issues
resolve split - packages : move everything from kie - api to kie - api
update predicate types from PredicateType . IN to PredicateType . NOT _ IN in multiple predicate classes to clarify that the predicate types are more accurately represented as not - in conditions
replaced account handling with a new approach for creating OwnCloud accounts and improved account title display to enhance error handling and ensure accurate account creation in the application
added a null check for witnessService before validating the witness permission to avoid potential NullPointerExceptions during validation
updated the construction of taggedCol to use getExprString ( ) method to improve clarity and consistency in expression formatting
added a check to ensure that the item ' s javadoc is not present before setting it as a JavaDoc to avoid potential NullPointerExceptions when accessing item documentation
renamed ` holderMethod ` to ` holderMetadata ` and updated related references in ` CompiledICHolder . java ` and added a new class ` RedefineInterfaceCall . java ` to better reflect the purpose of the variable and enhance interface redefinition functionality
fix tab # revalidate ( ) that occur if swipe activation or slide to dest motion be enable .
[ flink - 30613 ] [ metric ] return unregisteredmetricsgroup instead of throw exception when deserializing schema in bulkformat
updated mathematical calculations in Polygon . java to use oldX for correct positioning to improve accuracy of geometric computations for better rendering accuracy
update cacheManager . createCache method parameters to use Configuration < Object , Object > instead of null to enable proper handling of configuration types for cache creation
added a check for the length of the string constant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file to ensure proper handling of string resources and add a test case for Bug2974855 . java
refactor ShadowCookieManager to improve code structure to enhance maintainability and readability of cookie management functionality
added a configuration option for dropping external tables and implemented a corresponding test case to enhance security by ensuring proper permission management during table drop operations
fix progress bar position for webgl ( # 2165 )
[ gr - 23581 ] make platform byte order available in platform capability .
fix typo in property name for windowsclientprovider
updated the ` initWebViewLogin ` method to accept a baseURL parameter and updated web view initialization to enable dynamic URL loading based on the availability of the web login URL provided
corrected a typo in the exception message in CallableStatementHandler . java to ensure clarity and accuracy of the error message for better debugging
fix auditevents endpoint to return 400 error for miss date
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` for clarity to enhance code readability and better reflect the purpose of the timer class
remove from dynamics world and reset soft body to null in SoftBodyTest to ensure proper resource management and prevent potential memory leaks
changed interface declarations to public for several providers to allow access to these interfaces from other classes
[ zeppelinhub ] improve logging of stacktrace ( # 4631 )
[ smack - 40 ] remove redundant namespace test of jingle element .
fix potential npe when oil block be create without redplasma . close # 1719
more change to pipeline to support http / 2 . simple greet sample work now .
refactor conditional checks for member and member removal in the Remove class to improve code readability and maintainability by organizing similar logic
updated the delimiter construction and adjusted the string concatenation logic in SimpleReport . java to correct the representation of report lines and improve readability in the output
removed the option to ignore symbol files in the JavapTask and updated related classes accordingly to streamline code and improve consistency in handling symbol file preferences
renamed TickerDemo to StreamingTickerDemo and updated related imports and methods accordingly to better reflect the purpose of the class in the system
consolidated error handling for contract creation and contract address retrieval in Runtime . java to improve code readability and provide clearer error messages for invalid types
g3d - 310 : do n ' t create input3d for app3d when not need
temporarily ignore this test while investigate failure in release build
flv : ignore invalid scriptdata name type , rather than fail playback
added ` @ Override ` annotation to ` getRepositoryFactoryClassName ` method to ensure proper method overriding for clarity and maintainability
updated getExecutableCommand method to return a List of strings instead of String to enable handling of multiple executable commands as lists
changed variable assignments from ' this ' to ' this ' for clarity to improve code readability and maintain consistency in naming conventions
removed the UploadPathActivity class and updated ComponentsModule to utilize it to streamline the codebase by eliminating unused components
update return statements in SimpleTextFieldsReader to check for indexOptions before returning totalTermFreq to ensure correct handling of term frequency based on index options
fix : set implicit flag on ctclass ( # 2184 )
updated methods to include a database parameter and added checks to ensure compatibility with Oracle database implementations
refactor database handling methods for improved readability to enhance maintainability and clarity of the code
update springapplicationbuilder javadoc to reflect api change
updated IndexOptions initialization in DefaultIndexingChain and PointInSetQuery classes to ensure proper reference to the iterator variable
[ schematic ] fix handling of invalid schematic data ( # 15883 )
added a switch statement to handle specific collection types in AbstractCollectionAssert . java and modified CollectionAssert _ isUnmodifiable _ Test . java to improve collection assertion capabilities and ensure proper handling of mutable collections
changed the enum declaration from static to non - static in ProcessExecutor . java to align with Java ' s best practices for enum usage
added a confirmation dialog action for the twitlonger feature in Compose . java and ComposeActivity . java to enhance user experience by allowing users to interact with a dedicated twitlonger input
refactor ` toggleKeepInSync ` method to use a local CheckBox and update file synchronization logic to improve code maintainability and ensure consistent handling of file operations
replaced ` DatatypeConverter . parseBase64Binary ` with ` ImageUtil . loadEmbeddedBase64Image ` and added unit tests for it to streamline base64 decoding and ensure proper functionality through unit testing
added new classes ` ControllerCounter ` and ` DBCallback ` with getter and setter methods to enhance analytics functionality for better data tracking
added the ` final ` keyword to the ` deleteTicket ` method parameter to enforce immutability of the parameter to prevent unintentional modification
add a new file FlywayMigrationRunner . java with a main method to initialize and run Flyway migration in the application context
update HashMap implementation to check for size of a map and introduce a new class NotEmptyHashMap for testing to improve clarity of empty checks and introduce functionality for handling edge cases in the map
update version number from 0.6 . 0 to 0.7 . 0 to incorporate the latest features and bug fixes from the newer version
avoid npe when orc compression modifiers be null ( # 10467 )
8137922 : [ testbug ] need to exit gracefully if the main jar can not be find .
fix test name so they ' re easy to execute
rename methoddata : : setcompilationnodecount to javaclasses # setcompilationirsize and update hotspotvmconfig accordingly
bug 56958 : make cellcopypolicy an instance of xssfsheet so it do not need to be cloneable
added a method to reset the icon load result in FloatingIconView and invoked it in Launcher to ensure proper handling of icon loading state management
[ cap ] use the raw character sequence a the key - value pair for the character -sequence a well .
updated layout dimensions for task items in IconRecentsView based on orientation to ensure proper layout behavior for landscape orientation in the app
deleted the AddAdapter . java file to the functionality provided by AddAdapter is no longer needed
modified the handling of ` constructorCodeList ` to return an empty list and updated variable names for clarity to improve code readability and prevent potential NullPointerExceptions when processing ` constructorCodeList `
hive - 23790 : remove unnecessary null check in query with bucket / bucket column ( gunther hagleitner , review by gopal v )
enhanced message handling in TestLogWatcher by replacing assertEquals with looper checks to improve clarity and ensure failure messaging when a new watcher is registered
added a print statement to display " < any > " in Java2TypeScriptTranslator . java to enhance the output formatting for better readability
updated SDK version from 4799589 to 4913185 to reflect the latest stable release identifier
remove conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor to ensure that the proxy class is enabled by default in the environment
removed the singletonLock boolean and related logic from TypeCachingBytecodeGenerator . java to simplify the lock configuration by always using BOOTSTRAP _ LOCK
fix typo and add doc for callback action examples
refactor writeFile methods to support a new option for appending output files to enhance flexibility in file writing to different directory contexts
updated the MavenExecutionContextView and MavenRepositoryMirror classes to refine handling of Maven settings and return the first mirror to enhance the accuracy of repository mapping and ensure proper functionality with different Maven configurations
added a name parameter to the constructors of PathSourcePath and updated related classes accordingly to enable the representation of the source path ' s name and ensure proper initialization
updated OAuth20CallbackAuthorizeEndpointController to use matches instead of equals for matching redirect URIs to ensure accurate comparison of service clients based on their redirect URI
replace usage of ` declaredAnnotations ( ) . toArray ( ) ` with ` AnnotationParser . toArray ( annotations ) ` in multiple files to improve code consistency and maintainability by centralizing annotation conversion logic
updated method implementations to use getBadgedIconForUser and getBadgedLabelForUser for better clarity to enhance code readability and maintainability by using more descriptive method names
updated default line separator description in GlobalConfiguration . java to provide clearer guidance on output formatting
fix bug in configurationmanagerutils and add test
add input sanitization to the base controller ( # 1745 )
chore : update java and python dependency ( # 238 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added a new test for primary and secondary build file names to ensure proper functionality of the test with different build configurations
updated CountersReader . java to modify import statements to streamline code for better readability and maintainability
updated the methods in AllAppsRecyclerView to directly set containerType values for SEARCHRESULT , PREDICTION , and ALLAPPS to streamline the code to improve code readability and maintainability by reducing redundancy
hbase - 22878 remove the deprecated configuration key in hbase . ipc . server . reservoir . initial . buffer . size ( # 950 )
[ native ] add result for native join with value
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types correctly to improve the accuracy of obtaining parameter types in the presence of synthetic or implicit parameters
updated TestFSTs . java file to improve test coverage and fix existing issues
apps - 2848 do n ' t use y - label for input box if it ' s a string
hbase - 27846 make flushsize increasedtoupperregionsplitpolicy initial size configurable ( liu shaohui )
updated the model loading behavior in LauncherClings . java to ensure proper loading state management and loader interactions
initialized keys and updates lists in ManagedSelector . java and set the format of the DateTimeFormatter to ISO _ OFFSET _ DATE _ TIME to improve code clarity and ensure consistent date formatting
added functionality to set and remove excluded datasource from SpringDataSourceBeanPostProcessor to enhance data management by allowing specific beans to be excluded based on provided criteria
apps - 2848 fix undo info not store in tablevaluesview
[ flink - 30397 ] [ kinesis ] expose the proper client configuration for custom kinesis client
[ velbus ] fix interaction with raw velbus sensor ( # 9489 )
disabled local cache selection test due to unfavorable benchmarks
added a test method to validate illegal database name handling in IoTDBSessionSimpleIT . java and throw illegalPathException in PartialPath . java to ensure proper error handling and database path validation in the session management system
add call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly reset before garbage collection
renamed ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx ` and introduced a new method to compute horizontal margin based on layout conditions to improve clarity and maintainability of margin handling in different screen orientations
modified formatting of code in CharTokenizer . java for better readability to enhance code clarity and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 637 )
cloudstack - 2120 : fix xenserver traffic label for backward compatiblity
fix up dependency bank for next release
removed the metricNames field and its getter method from SolrCore . java to streamline the code and eliminate unused metrics management
replaced URI handling with Path for working directory and manifest file resolution to improve type safety and streamline path handling in the MavenManifestFactory
replace direct OS detection with a static final boolean variable in OisControllers . java to improve code readability and maintainability by reducing repetitive code
no effective change - javadoc update for jdbcaggregationrepository
added clear and addAll methods to manage the slotList in Frame . java to ensure that the slotList is properly populated from another instance
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count for accurate testing
added configuration methods to merge properties in ConfigurationSpringInitializer . java to improve configuration management by centralizing property merging
- allow ch . qos . logback . classic . logger to be use without a switch statement .
use linkedhashmap instead of hashmap for alias to preserve order .
fix issue with jdbc registry where class have no superclass
added debug logging for writing items in HibernateItemWriter , JpaItemWriter , and FlatFileItemWriter to improve traceability and debugging during item writing processes
modified the parsing of Locale . LanguageRange to correctly handle the semicolon character to ensure accurate parsing of language values based on the input string format
modified handling of null resources in Http2Handler to ensure proper context is used during server operations
bug 57840 : add cache to xssf evaluation workbook to improve performance
updated schema text detail type checks in BaseSchemaTextFormatter . java to ensure correct classification of database detail types for better compatibility
updated references from MongoFactoryBean to MongoClientFactoryBean and MongoClient in MongoNamespaceReplicaSetTests . java to ensure compatibility with the new MongoDB client implementation
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain the insertion order and ensure consistent iteration order
added a check to ensure the operator tree is properly cloned before proceeding with table scan operations to improve stability by avoiding unnecessary assertion failures during the join process
added a null check for the client before parsing the registration JSON to avoid potential null pointer exceptions and ensure proper data handling
cleared AchievementList . field _ 187981 _ e in StatList . java to reset the list to remove unused elements
added default values for userName , productName , and driverClassName , and driverVersion in MutableDatabaseInfo and MutableJdbcDriverInfo to initialize these variables to avoid null pointer exceptions
updated permission references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in QuickSharingPermissionsBottomSheetDialog . java and SharingMenuHelper . java to accurately reflect the new permission requirements for sharing views
added a readLongs method to ByteBuffersDataInput for reading long buffers to enable efficient reading and processing of long data in the ByteBuffersDataInput class
implemented sec and nsec parameters for file time conversion in UnixFileAttributes . java to improve precision in time unit handling for file timestamps
8013120 : [ testbug ] jfr test no eager reclaim of humongous region .
added search bar visibility management in AllAppsContainerView to improve user experience by managing search bar visibility based on user preferences
fix env router feature ( fixes # 5022 )
added null checks for cur and next in LineChartRenderer . java to prevent NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` for reloading the current page to enhance user experience by allowing users to refresh the displayed page
changed log level from info to warn for non - existent entries in ` plot _ rating ` and ` plot _ settings ` to improve clarity of log severity for non - existent entries
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with recent updates and security improvements
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is selected before proceeding
replaced the use of FactoryRegistry for loading extensions with a ServiceLoader for improved efficiency to streamline the loading process and reduce potential for concurrent access issues
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent potential memory leaks
added stopStatementExecutor ( ) method to JdbcConnector , HiveViewImpl , and HiveViewImpl classes to ensure proper termination of statement executor threads when stopping
updated feature settings in DocumentFactory and related classes to improve clarity and ensure correct feature handling for external entity loading
replaced the method call from ` JdbCommand . cont ( ) . waitForPrompt ( true ) ` with ` Jdb . contToExit ( 1 ) ` and updated the output analysis in ` JdbStopThreadidTest . java ` to improve the reliability of the database exit handling and ensure accurate output verification
added type handling in ShadowContentResolver and corresponding unit tests in ContentResolverTest to enable type resolution and ensure correct handling of null values
fix java . lang . classcastexception in expression thread pool manager ( # 6078 )
changed the default HTTP port property from " port " to " vertx . httpPort " to align the configuration with the new Vert . x configuration
replaced addCaptureListener with addListener in buttonTable to streamline listener management for improved readability and maintainability
updated the DEFAULT _ BATCH _ SIZE constant to use available processors multiplied by 3 to improve performance by adjusting the default batch size based on processor availability
[ flink - 3181 ] [ runtime ] log an error message if the resource manager connection fail to connect to the task executor .
[ java ] fix race condition when read class file while generate dynamic expression
updated the exception message to include both min and max parameters to provide more detailed error messages for better debugging
modified message method signatures to include an owner parameter for state and state management to enhance the functionality of state messages by associating them with their respective entities
added new interfaces for Cursor , Database , and Row in the application to provide a structured way to handle database operations and their corresponding data
rename various assertion classes and constants across multiple files to improve clarity and consistency in naming conventions
# 993 - enh : add setbeanid ( object , object id ) ... to allow specification of the beanid use by the ebeanserver
update transform method to use getAddToSiteDescriptorXsl ( ) instead of a hardcoded string to improve flexibility and maintainability by using dynamic values instead of hardcoded strings
replaced the direct addition of request matchers with a new list to ensure that multiple request matchers are stored for improved efficiency
add hashcode ( ) and equal ( ) to the contactresource class . similar to hashcode ( ) and equal ( ) .
move request / response getter to abstractprocessor to make it easy to reuse .
improve log message when checking on saved persistable
reset mock control in TestJdbcDataSource and add tearDown method to TestIndexSearcher to ensure proper resource management and cleanup after tests
added import statement for LambdasWithInterfaces and updated method calls in SyntaxTests . java to ensure proper functionality with the new syntax setup
add some comment about how to model the connection model ( with wrapper )
remove fallbackparser from parserdecorator since it ' s only use for parse once
fix security manager ' s getcallclass ( ) method that return ' none ' for all client . mod ' s fml be now possible .
removed unnecessary parameters from method declarations in AccountUtils , IndexedForest , and CustomPopup classes to simplify code and improve readability by reducing unnecessary declarations
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the rename method to use a utility method to improve clarity in parameter naming and enhance functionality for renaming operations
added a test method for verifying JavaScript comments in JsLexerJsxTest and improved print statements in Parser to enhance testing capabilities for JavaScript and provide clearer output formatting
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for test case b / 195263971
added error handling tests for missing BUCK configuration in BuildEndToEndTest and CxxEndToEndTest to improve test robustness and ensure correct error reporting for missing BUCK configurations
added physical memory monitoring to TestStringBufferAndBuilderGrowth . java to ensure tests run only if sufficient disk space is available
doc : update custom converter doc to use conversionservice bean ( # 8638 )
added a success variable to HiveMetaStoreClient to indicate whether the operation was successful
changed string comparison from ` = = ` to ` . equals ( ) ` in ` ResourceReferenceInfo . java ` and modified the bundle creation in ` Dstu2BundleFactoryTest . java ` to use ` String . equals ( ... ) ` to ensure proper string comparison for string equality checks and enhance clarity in bundle instantiation
added support for handling " amp . twimg . com / v / " URLs in TimeLineCursorAdapter and TweetActivity to enhance compatibility with additional media formats
mark the AreaReference class as deprecated to indicate that the class is no longer recommended for use
refactor ElementType and Target classes for better organization to improve code maintainability and readability
updated assertions and added reference kind handling in MemberName . java to improve code clarity and ensure correct reference kind validation
updated the SUBMIT _ KEY _ UPDATES system property from " false " to " true " and modified the runChange method to ensure submit key updates are enabled by default and to synchronize the execution in a synchronized block
fix for issue 520 : mouse right click in editor field do n ' t work
camel - 2737 : add support for static method in bean expression . thanks to jens kleine - herzbruch for the patch .
add miss license header ( # 1272 )
replaced the lambda expression with a lambda expression for handling the ClosedByInterruptException to improve readability and maintainability of the code
added ` getDescription ( ) ` method implementations for various classes implementing the ` AddDependency ` , ` AddPlugin ` , and ` FindProperties ` classes to provide clearer descriptions of Maven project property changes and improve documentation clarity
refactor face addition logic in ObjLoader to directly use the active group ' s faces to improve code clarity and maintainability by reducing repeated calls to activeGroup . faces
refactor ProcessEngine class to improve code structure to enhance maintainability and readability of the code
corrected the spelling of " reentrant " in multiple files to ensure consistency in variable naming and improve code readability
updated ` PrintMavenAsCycloneDxBom ` to include ` mavenPackaging ` parameter in bom reference retrieval and added a new test for cycling dependencies to enhance functionality by associating dependencies with their respective packaging paths
replace back ( ) method with back ( evt . getComponent ( ) ) in UIBuilder . java to ensure correct component retrieval for event handling
fix buggy code in saslauthentication . verifycertificates ( ) .
updated type parameters of ` @ Nullable ` from ` @ Nullable ` to ` @ Nullable ` in multiple classes to ensure proper type alignment for better nullability in the subject and related classes
updated method calls from NutchConf to getConf in Fetcher , Generator , and Injector classes to ensure consistency in accessing configuration settings
bug fix ( race condition between sheet )
added a method ` getSessionId ( ) ` to return the ` SessionId ` to provide access to the session ID for external use
added null checks before setting the time interval in node and edge classes to ensure that null time interval values are handled correctly to avoid potential NullPointerExceptions
[ grid ] remove log info from mockservercontainer ( # 2588 )
updated error logging to include the exception message to improve error reporting for better debugging
remove ` ` robototshonoringpolicy ' ' usage , and add ` ` crawlmetadata ' ' to crawlmetadata
test : disable flaky it system test ( # 152 )
( chore ) camel - spring - xml : fix test on window
added alternativePath method to ExpectNewDemo class for input stream handling to provide a mechanism for path resolution in case of failure
logentryparsettester : use getfirstfilter ( ) to avoid nullpointerexception
[ java ] add protectiondomain to bufferalignmentagent to allow for system property to be read .
added dispose method to WaterRipples class to ensure proper resource management and prevent memory leaks
hive - 23054 : introducing a configuration variable to control semi - join optimization based on external table operations to improve performance by allowing control over semi - join optimization based on external table operations
update documentation to remove authorization requirement for public key
modified wallpaper offset settings in Workspace . java to set the vertical offset to zero to improve the aesthetic placement of the wallpaper during scrolling
updated return values and added support for SybaseASADatabase in multiple generator classes to improve functionality and ensure proper ordering for SybaseASADatabase
nifi - 5080 : fix commit / rollback behavior for ` ` dbcp ' ' and ` ` enable - cleanup ' '
added directory creation check for the sub directory in SnapPuller and created a test for replication in TestReplicationHandler to ensure that the application can handle file operations and validate the correct replication behavior
updated the AppTarget initialization to change the format of AppTargetId from " id : launcher " to " launcher " to ensure consistency in naming conventions for app targets
[ java ] update framer to allow for write to a byte buffer . issue # 566 .
refactor parameter order in multiple classes for consistency to enhance readability and maintainability of the OAuth2 login authentication logic
updated documentation for parse text and delimiter handling in GenericUDFStringToMap . java to clarify the purpose of the mapping and improve understanding of delimiter usage
updated PlainFormatter to use Instant and TemporalUnit for formatting instances to improve accuracy and clarity of time representation in milliseconds
updated timeout constants and methods in AgentRunner . java for better resource management to improve clarity and ensure appropriate handling of thread closure within the agent execution flow
hhh - 17737 - avoid use reflection to get private lookup in the classloadingstrategyhelper # getclassloadingstrategy
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
updated log message to clarify that the proto event file is new instead of closing to improve log clarity by accurately reflecting the current functionality of the proto event file
added @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored because it should have at least one sample result
updated exception message to specify that rows and columns must be greater than zero to clarify that the error condition for better user understanding
geot - 3812 : fix wagoncoder and improve exception message
added sorting functionality for BoundSheetRecords to improve data organization and ordering of sheet records
modify the calculation of average impulse in ThrustCurveMotor . java to improve the accuracy of impulse computations by incorporating start and end values
fix niftyjmedisplay . setinputmanager ( ) not work .
refactor hash field offset adjustments in UniverseBuilder . java to improve code clarity and ensure positive offsets are handled correctly
remove block . getmesh ( ) , deprecate in favor of getstandalonemesh ( )
renamed ` keytabPath ` to ` localKeytabPath ` and updated its usage in ` YarnTaskManagerRunner . java ` to improve clarity by using more descriptive variable names
added an option for empty words and modified matcher logic in LineReader and LineReaderImpl to ensure proper handling of empty words based on user options
updated the pushViewReplicaUpdates method to include an additional condition for writeCommitLog to ensure proper handling of write commit logs during replica updates
updated display contents handling in CaptureActivity and added preference for auto - open web functionality to enhance user experience by allowing automatic opening of the web page based on shared preferences
added a test case for batching in JoinedTableTest . java to verify the batching behavior of Hibernate with database interactions
( chore ) camel - jpa : avoid spamming log if duplicate timestamp
updated the ` -- format ` option to use the ` -- plugin ` instead of a deprecated warning to encourage the use of the updated option for better maintainability
removed the save ( ) method from PMS . java to eliminate unnecessary saving operations
simplified the back key event handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the capacity calculation in AbstractStringBuilder and created a new Capacity class for testing to ensure proper capacity management for StringBuffer and improve usability testing
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to enhance note handling functionality in the fragment
insert the endnote into the xwpfdocument a a map to allow for more flexible handling of multiple endnote relate
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager to provide additional context about the authentication success event
added a method to test the version of the OGR library to ensure that the version information is correctly displayed and displayed
add a new class Lifecycle to handle network error handling in the application to improve error management and user feedback for network issues in the application
fix deviantart download in case of 404 error
removed unused imports and simplified code in RocketFigure . java to improve code clarity and maintainability
added scaling functionality for graphics and modified viewport calculations in PJOGL . java to improve compatibility with different screen orientations and enhance rendering performance
auto create project default value ( # 4237 )
reduce use of packed ints to optimize memory usage
- simplify status route , and make it a little more natural to sort
removed data handling logic in GoAwayTest . java to simplify the code and ensure headers are set correctly for the response
added property handling for FluentPropertyBean in ReflectionUtils and created a new FluentSetterBean class to enhance flexibility and support for generating fluent beans with custom properties
updated ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to use ` ListenableFuture < HttpResponse > ` instead of ` ListenableFuture < ? > ` to enhance response handling capabilities and improve code clarity
camel - 3244 : fix filesortbyexpression test so it work with directory containing file extension .
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity of logged task information
add option to control how to write pdf / pdf in the rt .
modified the way columns are constructed by using an aggregate function or a dynamic path to enhance flexibility in handling different SQL execution formats
updated test classes to extend ` WithNestedTests . AbstractNestedTest ` instead of ` LuceneTestCase ` to enhance compatibility with updated testing framework standards
update xcap enable / server uri selection logic in presence panel . report by michael klink .
ww - 1519 add exception handle to struts dispatcher
added text editing functionality to multiple classes to improve user experience by allowing graceful termination of text editing tasks
nifi - 5835 : if controlrate set a non - existing group attribute , set default to default group attribute
modified the showDialog method parameters and added a checkbox for always opening presets in the ComponentConfigDialog to enhance user experience by allowing the option to open additional presets based on component state
add some logging to help troubleshoot issue with nio2 on gump .
added a condition to check for Windows OS in HTMLDataFlavorTest to ensure the test is only run on Microsoft Windows , clarifying that it is considered passed on other operating systems
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the TransactionIsolationLevel class to support additional database snapshot configuration
replaced the existing implementation of ` newRecids . put ( newRecid ) ` with a loop that adds a delay before adding a new recipe to avoid race conditions when adding new recids
switch to java . util . zip for good compatibility
added a check to ensure the command class is not null before creating a new RegisteredService instance to improve service instantiation logic and prevent potential null pointer exceptions
make disk failure policy ` ` stop ' ' and ` ` ignore ' '
removed public access modifier from method declarations in RipperInterface and RipStatusHandler classes to enforce encapsulation within the Ripper interface
filter out 127.0 . 0.1 peer address that match our loopback address
remove the setter method for jobidentifierfactory - it be no longer need
added ClusterDataCache import and modified computePartitionAssignment method to include it to optimize partition assignment by utilizing ClusterDataCache for improved performance
[ grid ] removing container that should not be delete by default .
simonstewart : properly handle the case of a pipe - separated command in the selenium driver .
add retry rule to createglossarytests ( # 50 )
add component . schemas _ schemas _ ref to modelresolver to ensure consistency with the new schema definition
updated the EntityDeletedEvent class to use JsonUtils for consistency and improved type casting to enhance clarity and maintainability of the auditing logic
added a check for GOP values in FormatConfiguration and updated LibMediaInfo to handle them to improve media format handling and enable better integration with JNA standards
added a new file TestProfileReturnTypePrinting . java with performance testing methods to evaluate the return type printing performance of different class instances
added concurrency control to config handling in ParseConfigUtils . java to ensure thread safety during concurrent access to configuration properties
add logic to release and acquire column release columns segment in minmaxvaluebasedselectionordercombineoperator ( # 7751 )
simonstewart : delete two unused @ ignore annotation from the firefox test
added return statements to the ` HasAndroidDeviceDetails ` class and updated method return types to improve code clarity and ensure return values are structured for better usability
remove duplicate add bug ( ) call from project stats , and update doc accordingly
[ netbeans - 5057 ] use disabled color for ggtk label in import panel .
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline the code for better readability and maintainability
fixed bug where schedule action do n ' t return date in future
replaced Button with a Menu for single - upload actions in ShareActivity to streamline the upload process and accommodate different menu options
refactor various classes related to message expression handling to improve code organization and maintainability
added loadMetaData method implementation in meXBTExchange and RippleExchange classes to enable loading of exchange metadata with default values
added a new WritableSerializer to handle various data types in CrawlDbReader . java to enhance JSON serialization and deserialization for various Hadoop data types
remove unused test - code from jaspic module
added a service definition for MDNS discovery in MDNSDiscoveryService to enable better integration of DiscoveryService into the application
add null check for messageItem before scrolling to position in ChatViewerFragment to avoid potential NullPointerExceptions when handling message items
updated ForkJoinPool initialization in BPIndexReorderer and added ForkJoinWorkerThread configuration to improve thread management and performance in concurrent scenarios
removed assertions checking for DATANODE and NAMENODE roles in RoleCommandOrderTest to streamline test assertions to focus on specific role dependencies
added a new method ` dedupWithTableInfo ( ) ` and created a new method ` dedupWithTableInfo ( ) ` in ` PartInfo . java ` to improve the handling of table information during serialization and deserialization
fix checkstyle issue in util / jvmutils . java ( # 704 )
added matrix transformations to BitmapFontTest and modified logo sprite direction to ensure proper rendering and rendering of the logo text
[ flink - 20373 ] [ python ] disable flink - python group window aggregate rule for python group
speed up startup and shutdown of the server by avoiding unnecessary send of pending echo
fix ca n ' t get host from gossiper if host be unreachable
[ geot - 4688 ] fix multiplication detection in algebra view
updated content type handling in FormAuthenticator and added getter / setter for content type in SavedRequest to ensure correct content type is set and improve content type management during form processing
refactor XToolkit to improve variable management and initialization to enhance code clarity and ensure proper handling of local graphics environment
mahout - 687 - move recommenderjob and abstractjob to job package to avoid circular dependency
replace synchronization mechanism with ReentrantReadWriteLock and ReentrantReadWriteLock in EnvironmentImpl . java to improve concurrency handling to prevent potential deadlocks during execution
added a test for reading identity providers in different identity zones to ensure that the identity provider correctly connects to different identity zones
jbrules - 1881 : fix npe in objectobjectnode and pointintimetrigger when timestamp be null
removed the import of Service from SendTicketGrantingTicketActionTests . java to eliminate unnecessary dependency on the Service class in the test class
[ issue # 6748 ] fix the problem of not send new acks when rebalance be make
feat ( core ) : add ` ` cairo . detached . mkdir . mode ' ' config option for create temporary directory ( # 3212 )
[ java ] do n ' t wait for message to be send to slow down service in cluster .
change author3 label to auth to be more releasable
updated dependency management in DBinaryDescription and DLibraryDescription to use CxxPlatforms for parse time dependencies to improve code maintainability and ensure correct dependency resolution for C++ platforms
camel - 14263 : camel - google - cloud - gcp to work around the memory leak in osgi
camel - 8769 : fixed issue with dynamic file consume when exchange be not use .
added a configuration option for reopening readers in SolrConfig and modified the conditional check in SolrCore to allow users to enable or disable reopening readers based on configuration settings
add dialect attribute to freeplaneversion ( for map )
added currentDate and currentTimestamp methods to the Update class and corresponding test cases in UpdateTests to enhance functionality for date - related operations in MongoDB
added a new method ` dup ` to the ` Attr ` class and created a new method ` PrimitiveTypeInBoundForMethodRefTest ` class to facilitate the creation of duplicate results and provide a functional context for handling method references
refactor ` WidgetSearchCondition ` from an abstract class to an interface for cleaner code structure to improve readability and reduce boilerplate code
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector . java to improve search performance and accuracy by using a more efficient query implementation
removed several unused imports related to Java ' s invoke package from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability by eliminating unnecessary dependencies
updated ` providesUploadController ` method to include a new method for retrieving shared preferences to enhance functionality for managing direct nearby uploads in the application
add compatibility mode for " SYSDUMMY1 " SQL syntax to ensure correct processing of SYSDUMMY1 databases in different database modes
added Sampler refresh configuration and modified log messages in TraceGatewayEnvironmentPostProcessor . java and SamplerAutoConfigurationTests . java to enhance tracing capabilities and improve code readability
[ bug - 64489 ] fix bug # 64489 - lastpid need to be update for xwpfworkbook
[ geot - 7090 ] fix for tiff : getnodata ( ) return nan when no data
updated the ` executeDriver ` method in ` CliDriver . java ` and replaced ` SessionState . java ` with ` UUID . randomUUID ( ) ` in ` CliSessionState . java ` to improve error handling and simplify the process return value
[ 3.0 ] mockrestadapter should use schedulers for httpexecutor ( # 9042 )
added a default implementation of the selectByRuleIdSet method in RuleConditionMapper to improve flexibility in handling different rule ID sets dynamically
refactor exit description handling by introducing the ` addExitDescription ` method in ` ExitStatus ` and updating its usage in ` AbstractJob ` and ` ExitStatusTests ` to enhance clarity and maintainability of error handling in the code
fix the right click block button in multiblock render . close # 238
rename the ' columnFamily ' variable to ' columnFamilyColumn ' in SliceReadCommand . java to improve clarity by explicitly indicating the column family in the name
remove unnecessary import and correct range validation in PlotConfiguration . java to improve code clarity and ensure proper validation of range lengths
fixed ios npe when close the device ( # 6695 )
updated the method to retrieve the build target from params to nativeLinkable to ensure the correct build target is referenced for native functionality
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by explicitly indicating the variable ' s purpose
remove assertion check for null message in AdvServiceTest . java to improve code clarity by eliminating unnecessary assertion
refactor key handling in CustomConversions and MappingMongoConverter to improve clarity and efficiency to enhance code readability and maintainability by simplifying key conversion logic
updated logging statements for image metadata in NearbyMapFragment . java to improve clarity and consistency of log output for better debugging
camel - 3353 : fix typo in deprecation message . thanks to tracy snell for the patch .
lucene - 7631 : fuzzylikethisquery should handle non - existing field properly ( # 763 )
update method to accommodate a new boolean parameter for writing applications to improve flexibility in displaying applications based on the database type
refactored code to use identifierservicefactory instead of dspace
updated method calls to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure correct length is used for byte array assignments
changed the method signature of getDisplayScript to return a String instead of being abstract to provide a default implementation that returns null for the method
andreastolftolfsen : fix sequence test which fail locally on firefox
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
fix potential bug in networkconfigurationwatcher when there be no network interface
fix bugzilla 45538 - correctly get all embedded object from hssfworkbook
added import statement for Shdr in ShaderNodeLoaderDelegate . java to utilize Shdr functionalities in the project
change variable name from hostParams to roleParams in AmbariManagementControllerImpl . java to improve clarity by accurately reflecting the purpose of the variable
add a condition to return true for fonts starting with " Symbol " to ensure correct handling of base font symbols in the PDSimple font implementation
use gl11 . glpopattrib ( ) instead of glstatemanager . popattrib ( ) for jme3 performance
updated ` LiveTvGuideActivity ` to use ` mCurrentGuideStart ` instead of ` Activity ` and refactored related methods to improve code clarity and ensure consistent access to the calendar throughout the program guide functionality
updated method invocation in MockGateway and added new classes MainParentTest , ChildA , and ChildB to improve method resolution and add unit tests for PowerMock functionality
added dlopen calls for " libfreetype . so " and " libfontmanager . so " library paths in JREUtils . java to ensure necessary libraries are loaded for processing
apps - 4767 avoid infinite loop with multi variable function
[ gr - 36251 ] guard can be use without assert .
fixed bug in value number dataflow where constant class object be not be convert to a reference type .
added a new ` LocalizedString ` class and refactored several ` Attr ` and ` Resolve ` classes to utilize it for method arguments to improve the formatting of method calls and enhance code maintainability
# 1220 - enh : add a config option to disable classpath search for entity search
replaced the direct initialization of ` formats ` and ` minBufferSize ` and ` maxBufferSize ` with ` Arrays . copyOf ` for immutability to enhance immutability of ` formats ` and optimize array copying logic
update default retries to 1 and change default value from 0 to 1 to improve error handling by allowing more retries for operations
added settings file handling and modified process invocation in TexturePacker . java to enhance functionality by allowing configuration file handling and improving usage clarity
updated text views and placeholders in AchievementsFragment to improve UI clarity by using AppCompatTextView for UI elements
added multiple annotation processing calls in TranslatingJavacPhaseTracerTest . java to enhance testing capabilities for annotation processing
added ` CategoryInfo ` class and updated generator in ` CategoryInterface ` and ` MwQueryPage ` to include it to improve category management and accessibility within the application
updated assertion statements for username and password in AuthzAuthenticationRequest . java to ensure consistency in validation message checks
added accessibility features to TaskbarStashController to enhance accessibility features for better user experience
added support for the ' ^ ' character in the GenericSignatureParser to ensure proper validation of valid input cases
updated access flag handling in ClassVisitorDriverFromElement and added new test cases in StubJarTest to ensure proper access modifiers and validate stubbed jar functionality for generic interfaces and enums
updated the in initialization to use Objects . requireNonNull for better null - checking to enhance code robustness by preventing NullPointerExceptions
[ java ] add test that check that entry set iterator do not return the last entry in the map interface .
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility across different versions
change the creation time conversion from milliseconds to seconds in ImageData . java to ensure compatibility with larger image creation time representations
fix for grobcov ( not work in 2.0 ) , add f2m a the locus command for the ca
add EncryptionUtils import and modify deleteKeyForAccount method to use it to ensure private and public keys are properly deleted from the account data
have to use a dedicated method for get keep - alive header name ( # 1303 )
fix postjoinmapoperation . join ( ) to handle empty interceptor list
cdatasection and comment processor should be inlined for the inlined output .
enable spill to disk for grace hash join by default
refactor environment variable handling by replacing direct reflection with Optional to improve code readability and reduce boilerplate
ww - 3876 fix checkstyle issue in actionmapper
added SerializableMode import to Mockito and adjusted formatting in PluginSwitch to enhance testing capabilities with SerializableMode support
for non - nullable bean , set field value to null ( # 5958 )
added isolation level handling in SQL query parsing and updated compatibility tests to enhance database compatibility checks and ensure correct parsing of SQL statements
replaced direct access to HiveConf with constants for transport mode and http path to improve code readability and maintainability by reducing verbosity
added isCacheable method to GlobalOrdinalsWithScoreQuery class to enforce that caching is not allowed for this query type
added a new file TestStrangeControl . java for testing strange control functionality to facilitate testing of strange control in Java ' s loop optimization
updated file path formats in JsFile and JsLibrary files to differentiate between JSON and JSP files for better organization
added selection start and end parameters to ShadowEditText to enable selection features in ShadowEditText for improved user interaction
refactor grpc server to use try - with - resources when starting gRPC server to ensure proper resource management and prevent potential memory leaks
updated the ` use ` method in ` Jooby ` , ` Router ` , and ` SingletonTestRoute ` classes to improve path handling and route configuration flexibility
added null check for fst in FreeTextSuggester . java to ensure unsupported lookup functionality is handled correctly
replaced usage of line separator to ensure consistent newline formatting across different operating systems
added logic to load the ABI writer class and updated processing logic to improve robustness by ensuring the proper instantiation of the ABIWriter class
added a suppression for the BooleanMethodIsAlwaysInverted annotation to suppress warnings about the method ' s behavior in future versions
camel - 20297 camel - aws2 - pull : do not execute pull message immediately if the thread be stop
rename methods and variables in EnergyEndpointer . java for consistency to improve code readability and maintainability
refactor the handling of component presets and their indices in ComponentPresetChooserDialog . java to improve clarity and efficiency of column selection logic
enable checkstyle for unused import ( # 238 )
camel - google - sheets : fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ` and updated header style handling in ` CxxLibraryDescription ` and ` CxxLibraryMetadataFactory ` to utilize this method to allow dynamic retrieval of exported header styles for better configurability
deleted the files mmm Constants . java and mmm DistanceUtils . java to remove unused constants and utility functions from the project
replaced the usage of ` Pattern . compile ( DELIMITER ) ` with ` indexOf ` for splitting keys to improve code readability and simplify the split logic
[ gr - 48854 ] jdk . internal . foreign . abi . fallback . fallbacklinker should not be initialize at build - time .
add a test method for creating inline rolebindings and refactor the create method in RoleBindingOperationsImpl to improve test coverage and enhance code clarity in role binding creation functionality
added logging for session cookie configuration methods to enhance traceability and debugging of session cookie configuration processes
update filename prefix calculation in HotseatFileLog . java to use the correct year to ensure accurate file name matching based on the current year
apply checkstyle rule for ' v ' in blockingsubscribe . equals ( )
added error handling for invalid options and created a new class T8033711 to improve robustness by providing meaningful error messages when invalid options are encountered
replaced calls to ` collect ( Collectors . toList ( ) ) ` with ` toList ( ) ` across multiple files to improve code readability and streamline the collection process
[ hotfix ] do not log an exception at shutdown in taskdriver . createtask ( )
[ flink - 17688 ] [ network ] [ network ] [ network ] make input gate spec more flexible for tiered storage
use isnotsuccessstatus ( ) helper to avoid code duplication
updated the OpenGL configuration to use GL20 and changed the application constructor parameters to enable the use of OpenGL for improved graphics rendering
simplify code by remove unneeded type check
refactor OutputMacroExpander to improve command line argument handling and import statements to enhance code clarity and maintainability by simplifying the logic and enhancing readability
fix hazelcast test failure for light job ( # 21849 )
updated condition to exclude backslashes from file paths in MergeWordsListTask . java to ensure correct handling of URLs containing unnecessary characters
[ fix # 7553 ] instructor view result bundle : return a string representation of the comment ( # 7553 )
removed unnecessary whitespace in the code to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java with a class that performs escape transformation to demonstrate the use of object creation and escaping in Java
replaced direct stream skip calls with IOUtils . skip for improved readability to enhance code clarity and reduce dependency on external library functions
improve error message when a connection fail to start a pool .
change exception handling from catching Exception to catching Throwable to ensure all errors , including errors that are not Exceptions
hbase - 16334 fix potential nullpointerexception in blockcache . removeifabsent ( prasanth jayachandran )
removed unnecessary check for zero task count in RecentsView . java to simplify the code for better readability and performance
fix the npe in helix broker routing table startup ( # 10720 )
added new methods and classes for handling Coinmate metadata in CoinmateExchange . java and CoinmateMetadataServiceRaw . java to enhance functionality by integrating metadata management for the Coinmate exchange
mng - 5734 : warn user about $ { basedir } and $ { project . basedir } for backwards compatibility
pdfbox - 2576 , pdfbox - 2589 : fix key replacement , a suggest by valerybokov
add support for set display data ( # 28792 )
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat ( ( Object ) null ) . ignoreCheck ( ) . isNull ( ) ` to improve clarity and consistency in assertion methods
disabled certificate path algorithms in ClientJSSEServerJSSE . java to enhance security by preventing the use of outdated certificate path algorithms
fix : correct validation of optiondata # validatesubcommandgroup and optiondata # validatesubcommandgroup ( # 1878 )
update module - info . java files for mmm and ppp modules to ensure proper module dependencies and organization
added error handling for server connection issues in IOSImplementation . java to improve robustness and provide clearer error reporting during connection failures
corrected formatting in LauncherInstrumentation and added a finally block for mFinished to improve code readability and ensure proper resource management
added error handling and refactored exception management in FileSinkOperator . java to improve resource management and error handling during writer closure operations
added diagnostic handling to the SchemaGenerator to print detailed diagnostic information to enhance debugging by providing visibility into diagnostic results during the task execution
replaced RuntimeException with OptiqSemanticException for better error handling to better reflect the context of the exceptions related to semantic errors
modified test cases in DataSourceMonitorTests . java to improve test coverage and reliability of data source monitoring
added a HashSet to track loaded resource paths and modified the scanning logic to improve performance by avoiding redundant scans of the same paths
fix potential npe in testserviceutil # testserviceregion ( # 1904 )
add error handling for null values in RoutingInBoundHandler . java to ensure proper response emission for null values during routing
support optional nat ip in ekey ( # 1052 )
[ bugfix ] fix arrow memory issue ( # 1844 )
[ ci ] correct spelling error in java doc
added a check to ensure the HttpParser ' s state is set to end if it has headers or body to enhance robustness of the connection handling logic
refactor the subscription handling in MultiTimeout to use an AtomicReference for upstream and requestedInitial to improve clarity and maintainability of the subscription logic
optimize leveledmanifest to avoid allocation during no _ compaction _ candidates
added @ Test annotation to TestOrcTimezone1 . java to enable unit testing for the TestOrcTimezone1 class
[ dubbo - 2418 ] [ dubbo - client ] fix the logic of enable metric and timer system property ( # 2424 )
added error handling when retrieving segment mapping in PinotSegmentRestletResource . java and updated return statements in TraceContext . java and TraceContext . java to improve robustness of segment map retrieval and enhance code readability
modified JTable rendering logic to ensure default renderer is returned when the column class is Object to improve compatibility with cases where the column class is not Object
modify the command line args addition in IDEService . java to conditionally include the shell path or BUSYBOX if it doesn ' t exist to ensure correct execution of the shell based on the existence of the specified environment
updated delete method argument from 10 to 1 in DatabaseCleaningService . java to modify the functionality of deleting feeds based on subscription count
replaced List with Set for testInstances and modified the collectParentTestInstances method signature to improve performance and enhance test instance management
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
replaced deleteFilesAfterClose ( ) with fileMmapEnableIfSupported ( ) in BTreeMapTest . java to improve file management and ensure proper transaction handling
updated iterator initialization in SortedIntList and added a new Iterator test in SortedIntListTest to improve iterator handling and ensure proper functionality during iteration
fix for issue 420 : jmx leak when remote proxy can not be unload .
[ hotfix ] [ rocksdb ] change default writebuffer size to 64mb
updated the constructor call to use the background color directly instead of a fixed value to simplify the style initialization by removing unnecessary border color adjustments
changed the method from adding a message argument to adding a method that does not encoding the message to ensure compatibility with encoding requirements when sending messages
[ beam - 10670 ] remove unnecessary json debug log and portable pipeline run in amza runner
use mouseinput instead of vector3f . clone since it have no effect in some case
refactor LoopRotateBadNodeBudget class for improved clarity to enhance code maintainability and readability
added ` convertToMongoType ` method to various classes and modified related calls to include ` TypeInformation < ? > ` to improve type handling and flexibility in conversion processes
apps - 1824 remove iscomplex check , and test displayasi only for complex input
simonstewart : fix an issue with the empty sendkeys to the selenium server . ensure that the empty sendkeys array always be send .
add some utility function to get the scale instance and reduce to a loop . thanks to andreas for the suggestion !
removed methods for argument checking and wrapping store in DBMaker . java to streamline the code and improve maintainability
deploy - canary : fixing issue # 194 . ensure that the shift state be update when a key be press .
removed DETECTED _ ACTIVITY constant and updated related methods to simplify activity detection handling by eliminating unnecessary constant
updated package imports from ` ExtensionConfig ` to ` protocol . ExtensionConfig ` across multiple WebSocket - related classes to reflect the new package organization and improve code clarity
added an import statement for Buildable in AaptPackageResources . java to utilize Buildable functionalities for building rules
added comments to clarify the purpose of the file space in various classes to enhance code readability and maintainability by highlighting unused variables
updated exception message to specify the status code of the upgrade protocol to ensure clarity in error reporting regarding the upgrade status
format the assignment of blockMode in P11Cipher . java for improved readability to enhance code clarity and maintainability
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
updated permission checks for plot owner retrieval in Merge . java to ensure correct ownership handling based on plot permissions
removed deprecated method getConversationID ( ) from HttpContentResponse and HttpResponse classes to eliminate outdated code and improve maintainability
remove dependency on sun . speech . freetts - > org . dfki . mary . unitselection and fix compile error
refactor stripQuotes method to use PlanUtils for consistency to improve code maintainability and leverage the new utility functions for stripping quotes
refactored rendering management by consolidating rendering logic into a single method and enhancing clarity in rendering context handling
added a list to populate resolution group and remote artifact repositories to ensure all relevant resolution groups are used for proper plugin management
camel - 12412 : cxfrsproducer should close the application context so they can be reuse .
doc : fix javadoc typo in physicsclient . getinstance ( ) ( # 4377 )
added JUnit @ Ignore annotation to SessionTest . java to address frequent test failures and potentially issues
added a new File object instantiation in the ZipFile class to enable file handling based on the provided name parameter
added a deprecated method ` handleAll ( ) ` in the ` TryType ` class to mark the method as outdated to discourage its use in future development
change the ' uid ' field of the channel to be immutable by the default constructor ( # 2104 )
added logging functionality to GenericDAOImpl and created StackTraceUtils for better stack trace filtering to enhance debugging capabilities by providing detailed stack trace information for better traceability
added a test annotation to FormLoginIntegrationTests . java to ensure proper test execution for form login functionality
fix for mondrian - 1228 , add a test to ensure that empty string be not unparse correctly
ambari - 7222 . checkdatabundle should return cluster _ name instead of host _ name when select more than one config ( dsen )
[ ci ] use new java version of the automatic substitution processor
throw illegalstateexception when call jsonreader . nextjsonelement ( ) on a primitive type ( # 2883 )
added functionality to handle additional arguments in the external runner and a corresponding test case to ensure correct processing of arguments after using the internal runner and enhance test coverage
added dedup and index methods to SolrDeleteDuplicates and SolrIndexer classes to streamline the process of deduping and indexing Solr documents by providing direct method calls
[ flink - 23954 ] [ example ] add parameter to support flink planner in streamsql example
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is reset before each test case execution
fix # 2692 - properly dispose of gui progress
added a check to ensure the parent file exists before proceeding to prevent potential errors when accessing file properties of a non - existent parent
added methods for writing and closing streams with try - finally blocks to ensure proper resource management and prevent resource leaks during writing operations
updated print statements in JavaBuild . java to include line breaks to improve output formatting for better readability
replaced Box instance with BlockBox and added getter methods for root and dots per point to improve encapsulation and provide access to the BlockBox properties
added generic user search support in the CustomQueryFilterFactory and updated test cases for LDAP authentication to enhance functionality to support generic user search results from custom queries
add support for default port , fix # 746
[ snmp ] fix npe in snmp target handler ( # 14685 )
added visibility check to allow only instructors with submission permission be include in the list .
deprecate the org . hibernate . cfg . availablesettings . cdi _ bean _ manager _ bean , which be remove in 3.0 . 0 ( # 1172 )
fix # 2404 not resolve jar file when there be a jar file
lucene - 10785 : log newflushedsize ( includes docstores ) when newflushedsize be detect .
fix block diff in example mod . close # 697
imageprocessor : fix whitespace - related typo
increase lock frequency by multiplying the number of threads to improve efficiency in managing multiple concurrent threads
fix metadataindexreader to use exactsearch flag when deserializing metadata ( # 11919 )
( chore ) camel - csv : remove unused parameter
added import for Dimension and set preferred size of the pane based on its preferred size to ensure the pane displays correctly on various screen sizes
replaced OffsetAttribute handling with State in BeiderMorseFilter and added a test for custom attribute states in TestBeiderMorseFilter to enhance state management capabilities and validate custom attribute handling in the filter implementation
rename multiple classes related to UPnP handling to improve clarity and consistency in naming conventions
fix lens collide with warp placement . close # 181
added a new test factory method ` toJson ` and modified import statements in ` JsonTest . java ` to enhance test coverage and improve structure for JSON serialization
[ hotfix ] [ doc ] fix typo in Mutablecontextdatasupplier class
change exception handling from catching ` Exception ` to catching ` Throwable ` to improve error handling by warning instead of throwing an exception
add https parameter to the mock server ' s constructor to enable HTTPS functionality for improved connectivity
[ gr - 11900 ] fix issue with intrinsification of foreign call in defaultjavaclassingprovider .
updated response handling in DefaultServlet to use GET method and modify status codes in DefaultServletTest to align with HTTP standards and improve clarity of HTTP expectations
tika - 3376 -- fix tiffextractor to work in other locale .
replaced exceptions throwing in ShowFileRequestHandler to return a response for not found errors to improve error handling by providing more informative exceptions when a file cannot be found
patch from johan to add support for 2 . x to get the cause of exception in reflective proxy
added a new method ` clamp ` to the ` Vector ` and ` Vector2 ` classes to provide a way to clamp a vector by specified min and max values
added client details handling and updated OAuth2 authentication creation in ChainedTokenGranter . java to ensure proper scope management when creating access tokens
refactor BC _ instanceof to improve type checking to enhance code readability and maintainability
replaced the setSaveFlags method with a logger instance call to improve logging capabilities and maintain consistent save flag settings
updated UaaUrlUtilsTest to use JUnit 5 features and modified method visibility in tests to enhance test structure and maintain compatibility with newer testing practices
hhh - 16013 fix classcastexception in nativequery return type
added caching mechanism for font anti - aliasing information using WeakHashMap to improve performance by avoiding redundant calculations for previously checked fonts
make parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet parquet par
simonstewart : clean up the htmlunit driver and update the window handle driver to the new one . no more change in this case .
refactor BrokerRequestUtils to improve code readability to enhance maintainability and facilitate future development
fix injector order to be more robust , and good error reporting . ( # 8452 )
updated RawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to use getBasePath ( ) instead of getAbsolutePathToBuildFile ( ) to improve clarity and consistency in path handling within the build process
add null check for message value before attempt to parse it use the default value .
fix keep - alive issue with jabber account .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67 F to 0.67 to correct the default load factor for improved performance
added a method to retrieve and set output data type physicalVariations in VectorizationContext and Vectorizer classes to enhance the functionality for handling physical data types in the vectorization context
move htmlAssetTranslator and stringsresourcetranslator from org . google . zxing to org . google . zxing . client : org . google . zxing . client
update condition to return RECENTS _ CLEAR _ ALL _ BUTTON based on launcher configuration to ensure correct handling of overview actions when the launcher is disabled
added JPA annotation to BaseActivityEventEntity to facilitate entity persistence in the application
added tracing information for TouchInt in NavBarSwipeInteractionHandler , TouchInteractionService , and sUpTimes classes to improve debugging and monitoring of touch interactions in the application
added a new class InvalidOptions to handle option validation and error reporting to ensure proper error handling for unknown options in the javap program
added a check in DisplayController to log inconsistencies between display state and supported bounds to ensure consistency between old and new display states and supported dimensions during updates
refactored OAuth20UsernamePasswordAuthenticator and OAuth20Utils to streamline authentication logic to improve code organization and enhance maintainability
added functionality to enable unwrapping of servlet exceptions in ErrorPageErrorHandler and AsyncContextTest to improve error handling by allowing more flexible error processing
added a condition to set the status to ShortcutInfo . DEFAULT to ensure the correct status is set when a shortcut is detected
camel - 5388 : fix issue with seda endpoint do not respect size parameter . thanks to edward campbell for the patch .
add batchupdatestart ( ) and batchupdateend ( ) to kernel , for batch update
added HttpClient configuration to ThirdEyeApplication . java to enable HTTP client management in the application
added sorting functionality to JobInstanceFetchRequest and updated batch size handling to improve data retrieval efficiency and ensure consistent ordering of job instances
updated the cancellation logic to retrieve the correct currency pair for the cancelCryptoFacilitiesOrder method to ensure compatibility with the current API and improve error handling
ggb - 790 keyboard should be close after click on ggb - 793 ( cancel the keyboard )
refactor memmove to use a nativefunctionhandle so that it can be use directly
removed unnecessary line breaks in the ` authenticateUsernamePasswordInternal ` method and vice versa to improve code readability and maintainability
make sure toolbars have ` ` block ' ' tooltip ( eg ` ` open file ' ' )
updated DefaultDateTypeAdapter to accept dateStyle and timeStyle as parameters to enhance flexibility in handling date format information
changed the format of playerSet in ListCommand . java from " UID : " to an additional space to improve formatting for better readability of the player list output
add empty check and return ( List < Z > ) in List . java to ensure safe handling of empty input cases
added exception handling for InvocationTargetException in ParametricCallable to improve error management by converting InvocationTargetException to CommandException
updated the ` getLikeExpression ` method to include a boolean parameter for handling regex expressions to enhance flexibility in expression matching based on the type of like expression
added start and stop methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl to establish a standardized way to start and stop stream suppliers in the application
remove locale setting from the runChild method in LuceneTestCase to ensure that locale settings are applied correctly for the specified run child
doc : fix javadoc warning ( # 1656 )
refactor context handling logic into a separate method ` initContextHandler ` to improve code readability and ensure context validation is performed correctly
camel - 2714 added unit test for the routebuilder ref generator in osgi blueprint .
nifi - 3742 : fix a unit test which fail from time to time on a slow machine
refactor return type substitutability methods for improved clarity and functionality to enhance type safety and maintainability by ensuring consistent warning handling
added a throttleType enum and modified processing logic in TestExecutor . java to accommodate different character and byte throttle types for improved processing efficiency
updated color argument b assignment in ColorBleedEffect . java and added conditional check in SpriteBatch . java to improve performance by avoiding unnecessary processing when blend source and destination functions are equal
refactor annotations in Annotation and AnnotatedElement classes to improve code organization and maintainability
added a new interface Model in the Sheet and Workbook classes and updated their inheritance to implement the model interface for better encapsulation and flexibility
camel - 8039 : fixed header and header filter strategy to not regex all the time
added support for configurable clearing of entity manager in JpaItemWriter and JpaItemWriterBuilder classes to improve flexibility in entity management during serialization
added null checks for shortcutInfo before adding them to the toast message to improve stability by preventing null pointer exceptions
fix java . lang . illegalstateexception : arrayindexoutofboundsexception with non - default value ' true '
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange being used in the application
added null checks in OrcEncodedDataConsumer and EncodedTreeReaderFactory to improve robustness by avoiding NullPointerExceptions during processing
lucene - 825 : throw a filenotfoundexception when there be no file to open a reader in a directory
add test data for hsearch and elasticsearch ( # 4259 )
refactor the calculation of the percentValue variable for clarity to improve code readability and handle negative values gracefully
modify limit checks from less than 1 to less than 0 in RangeInputStream and RangeReader classes to ensure valid limit values are handled correctly and prevent negative values
camel - 17834 : camel - jbang - addendum to log load time
improve accuracy of position calculation for hl stream
lucene - 7008 : update test to run with junit 4.5 . 4
added state management features to the StatefulOperatorTest to improve state mapping functionality and ensure accurate testing of partitioned stream operations
shader tiling : add tile to shaders for line ( thanks maki ) , remove unneeded null check
remove dbexists logic , a now rely on dependency injection for blockdb
added trimming to the retrieved value of the group to remove leading and trailing whitespace to ensure clean input handling by removing unnecessary whitespace
fix non - blocking socket read from apr protocol ( see http : / / issues . apache . org / activemq / browse / amq - 2135 )
ticket # 3705 : on resize , the divider location should be update to the correct value
added metrics for controller health checks in the Pinot controller to improve monitoring and reporting of service health in the application
added visibility control for shared avatars view to hide the sharedavatars view when it is displayed
move scss - mebis resource from clientbundle to scss - mebis - web . scss
updated condition checks from ` > = = ` to ` < = ` in multiple classes to ensure compatibility with array size checks for better handling of edge cases
do n ' t attempt to execute log command if log level be not fine
replaced CountDownLatch with a wait until the span has been finished to improve test reliability by ensuring span completion is validated before assertions
modified the locale handling in QueryParser by adding a setter method to improve clarity and encapsulation of locale management
refactor entry customization dialog to use ` collections . addAll ( ) ` instead of ` Arrays . asList ( ) ` and ` LinkedHashSet < > ` to improve code readability and performance by utilizing modern Java collections
jbrules - 1022 : fixing some bug and test to work with beta node
added OCSPUnauthorized class and updated handling of unauthorized cases in OCSPResponse . java and PKIXRevocationChecker . java to improve certificate validation by implementing PKIXRevocationChecker for better security management
added serverState variable and modified control flow for server failure handling to ensure proper synchronization and error management during server state transitions
added connection count functionality to SourceCounter and AvroSource classes , along with a scheduled executor for connection count updates to enhance the reliability of connection management in the application
add possibility to add field definition to executionstrategy and executorservice
modified the ` getDefaultJavaPackageFinder ` method to return an ` Set < String > ` of srcRoots ` instead of ` ImmutableSet < String > ` to improve clarity and encapsulation of root root management
replaced Writer initialization with PrintWriter in ScriptExecutable . java to improve logging consistency and support for additional output formats
[ hotfix ] [ test ] fix filesourcetextlinesitcase to create temporary file in random
added support for handling DataTable in JRubyStepDefinition to enable conversion of DataTable to Ruby objects for improved compatibility
updated visibility settings for author views and improved API query handling in ApacheHttpClientMediaWikiApi to enhance UI responsiveness and streamline image retrieval and metadata retrieval
add some comment to clarify readSentimentDataset functionality
improve error message for parse formula that fail near char
added bind address functionality to WebSocketClient to enable proper binding of socket addresses for improved network reliability
[ java ] tidy up archive and archive directory for cluster test .
refactor width and height setting logic in WidgetGroup and add hit method to enhance clarity and maintainability of width and height management
changed the comparison of sessionFixationAttribute to use Boolean . valueOf for consistency to ensure proper handling of potential null pointer exceptions in attribute comparison
fix ( net ) : fix bug in load accord to new channel format ( # 1405 )
danielwagnerhall : add a linearbackoframerate attribute to chrome , and implement the reset / increment mechanism for chrome .
added support for a dynamic route in the TraceExchangeFilterFunction class to enhance request handling by allowing the specification of the HTTP method and route for better traceability
` ` compacted ' ' variable should use integer . min _ value instead of integer . min _ value ' ' . patch by jbellis
modified return statements in ICC _ Profile and ColorConvertOp classes and added a new InvalidRenderIntentTest class to improve code clarity and ensure proper handling of rendering intents
[ # 7808 ] instructor edit contribution question : add isnotsureallowed ( # 7811 )
added multiple calls to PublicMethed . waitProduceNextBlock for blockingStubFull to ensure proper synchronization of block production status
fix findbugs issue introduce by kafka - core
added PGConnection support to the PooledConnectionImpl and implemented a corresponding test in BaseDataSourceTest to ensure proper handling of PostgreSQL connections and validate their functionality through testing
refactor PropertyTable and CloseIgnoringInputStream classes to improve code organization and maintainability
updated logging level from warn to info for token encryption secret configuration to provide clearer information about the configuration issues related to token encryption secret usage
remove @ deprecated from hazelcast . get ( ) a it be not really used and be replace by hazelcast . get ( )
ambari - 7180 . ambari should not send unlimited jce update event when enable kerberos ( dlysnichenko )
added support for iterator and tagging in NamedListCodec to enhance functionality to support additional data formats and improve iteration efficiency
fixed potential npe during migration of assigncompletely lose partition ( # 18555 )
added schema inclusion rule to ApiExample . java to enhance schema management by allowing public keys in API examples
updated the expected value in the assertion from 3.0 to 7.0 to ensure the test reflects the correctness of the mean and var double values
fix MDSYS . sdo _ GEOMETRY to handle invalid ring properly ( # 825 )
added methods to retrieve base name and dimension count in ConstantPool to improve data accessibility and encapsulation within the ConstantPool class
added setter methods for debug evaluation output in HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes to enable better control over the evaluation output for improved debugging
test : migrate testmodule to junit 5 ( # 4528 )
do n ' t show the directplay button if it be disable in live tv
added a return statement to the DynamicStyleBar class to improve function exit point clarity
added logging statements for the REPL DUMP property in Utils . java to enhance visibility into the property settings for better debugging and monitoring
refactor ReactiveAuthorizationManager to improve authorization handling to enhance reliability and maintainability of the authorization process
updated the condition to also promote strings to objects in MethodEmitter . java to ensure proper handling of boolean types alongside primitive types
rename nullifyers in llvmfunctionstartnode to llvmaddressnuller to avoid confusion
add apache license heders to file that be faling rat check
add test suite for caffeinecacheconfiguration to ensure that transaction aware cache proxy be enable
added a method to calculate the bounding box for a mesh based on vertex attributes to improve collision detection by ensuring proper bounding box computation in graphical applications
added a TargetHashFunction enum and modified hash hashing logic to allow users to choose different hashing algorithms based on the specified target hash function
updated DefaultConfigurationProperties class for improved configuration handling to enhance maintainability and clarity of configuration management
updated high light color settings in ListViewMultiChartActivity and modified highlight drawing condition in BarChart to improve visual consistency and functionality of the chart rendering
fix cloudstack - 3971 : remove useless entry from sgpathplan map ( # 2175 )
( chore ) camel - infinispan : fix typo
added checks to ensure the local repository directory exists before fetching artifacts and introduced a lock file to enhance stability and prevent concurrent access issues during artifact fetching
added conditional check for GL _ ES in the fragment shader string to enable compatibility with OpenGL ES by properly defining fragment shaders
hbase - 27405 fix hbase - server issue in hbase - rsgroup ( # 4406 )
added a loading of the javax . servlet . jsp . JspPage class and modified log level from warn to debug to enhance flexibility in handling JSP configuration and improve log management during debugging
updated version handling in CustomAnalyzer and added a new test method for version awareness to improve version management and ensure correct functionality of version analysis
added a test for retrieving package archive info and a corresponding method in ShadowPackageManager to ensure correct retrieval of package archive information and improve test coverage
replaced direct method invocation with MethodUtil . invoke for consistency and access control to enhance method access safety by utilizing ReflectUtil for package access checks
added progress update types and updated import statements in GradleBuildService and Main classes to enhance progress tracking capabilities by associating progress updates with specific operations
douniaberrada : remove unneeded syncobject in androidwebdriver . java
simplify and consolidate configuration logic for initialization failure timeout .
do n ' t deprecate getresult method , it should n ' t be use
make native boolean field transient to prevent serialization
update error message format in CEntryPointCallStubMethod . java to improve clarity of error reporting for better debugging
rename ruleenablehandler to ruleenablementactionhandler ( # 2184 )
followup to r1720000 . add some missing license header to the recently add file .
added additional debug log messages in AuthzAuthenticationFilter and AuthzAuthenticationManager for better clarity to enhance troubleshooting by providing more informative debug messages during authentication requests
[ flink - 24937 ] [ table - planner ] fix break changelogfactory test after kafka 3.0 . 0 upgrade
added null check for repository and improved permission handling in UsersPanel . java to enhance robustness by handling null repository cases and provide clearer error messaging
added support for parsing font names with extensions . otf and . OTF in addition to . TTC to improve compatibility for various font file formats
updated type handling in AnnotationMatcher to improve type matching logic to enhance accuracy in identifying query types and ensure proper type matching
fix error message , now ` ` severe ' ' rather than ` ` OFF ' '
added conditional checks before logging debug messages in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when debug logging is disabled
update surefire plugin to support all resource instead of only one resource .
added methods to check if the default screen should move to the default screen on the home intent to improve user experience by ensuring consistent behavior during folder navigation
reduce max bitrate to 30 for good performance
removed the ` getOptions ` method and directly accessed ` optionsMap ` in ` CommandLineParser . java ` to streamline the code and eliminate unnecessary complexity
trim whitespace from the description return value to ensure consistent and clean data handling by removing leading and trailing spaces
updated the filename concatenation syntax in XOMParserTest . java to ensure correct output file naming for compatibility
remove process # pid from log in processrunner ( # 901 )
added a protected method ` getLoadedMusic ` and ` getLoadedSound ` to ` MusicLoader ` and ` SoundLoader ` to provide access to these protected methods for music and sound loading
no effective change - code cleanup - remove unused import
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for test cases related to bug b / 215673732
fixed lr pause button bug that cause paused cpu to disappear
refactor account and category preferences to use mAccountsPrefCategory instead of separate methods to improve code readability and maintainability by encapsulating preference creation logic
fixed - unavailable presence can now be send over from client side . smack - 111
updated StringBuilder initialization in ObjectInputStream to use a calculated initial capacity based on utflen to optimize memory usage by initializing StringBuilder with an appropriate capacity when possible
disable statd in auto - configuration integration test
[ hotfix ] fix interruptedexception doc typo
updated ServiceTicket class to improve functionality to enhance the efficiency of service ticket management
refactor HTTPS connection handling in ConnectionCheckOperation . java to improve clarity and maintainability of the connection logic
http : / / issues . apache . org / jira / browse / amq - 3872 - fix argumentarraymessagemanager fail to convert string to map
[ ds - 3762 ] fix issue with wps getparentobject ( ) and add parent to new collection item filter
replaced the addition of AuthenticatorActivity with a method call to set the intent flags to ensure the activity is reused instead of relying on the existing ones
refactor : remove deprecate method from patternparameterconfigurator ( # 2743 )
modified the ` beginDraggingWidget ` method to return a boolean indicating success or failure to enhance error handling by preventing further processing when the widget is not present
lucene - 4488 : disable flaky test in util / packedInts . java until we can fix it
added a null check for the root variable and collect components in DynamicStyle . java to ensure safe handling of null root and improve component collection functionality
tagger : write confusion matrix in debug mode
rename variable and method to be more descriptive
added unit tests for connected devices handling in ShadowBluetoothHeadsetTest to ensure correct functionality of connection state management in the bluetooth headset
corrected a typo in the method name from " # autowire " to " # autowired " to ensure proper property binding and improve code readability
added " clone " to the set of objectMethods and introduced a constant for the FINALIZE _ METHOD to ensure proper handling of object methods and maintain constant integrity during lazy loading
hbase - 14529 improve error message in case of null counter in integrationtestbiglinkedlist ( chiaping tsai )
return not _ implemented when can getinstanceinfo on a breakpoint
updated the ` setRegisteredServiceFilter ` method to use ` serviceId ` instead of ` service ` to improve clarity and ensure that the filter is applied only to registered services
added a null check for getActivity ( ) before calling runOnUiThread ( ) to avoid potential NullPointerExceptions when getActivity ( ) is null
rename logger to make it easy to read
added string type handling to DatabaseAdaptor and JDBCSessionDataStore for better configurability to enhance flexibility in specifying string types for database interactions
updated UIMAUpdateRequestProcessorTest to use " suggested _ category " instead of " english " and modified test methods to improve accuracy of category validation and ensure proper handling of exceptions
refactor thread name handling by introducing ` updateThreadName ` and ` resetThreadName ` methods to improve code readability and maintainability by encapsulating thread name updates and resetting logic
refactor TaskletAdapter class for improved readability to enhance maintainability and reduce complexity of the codebase
add a test method for DMN - specific handling of null values in DMNRuntime to ensure correct handling of null values in different dmn contexts
[ add ] osx binding for texturemap , make sure the texture map creation work on all platform .
added a tooltip text to the showCGCP feature in RocketPanel to allow users to toggle the display of the CGCP option in the UI
fix : type inference issue when create enum / interface .
fix an npe in reload action ( # 1726 )
bug # 46832 : use default template for cell name instead of label
changed BRIGHTNESS _ FACTOR from intValue ( ) to doubleValue ( ) in BindingConstants . java to ensure consistency in data type usage for BRIGHTNESS _ FACTOR
parse context and date in history entry ( fix parse exception )
added ` isAdmin ` parameter to ` createUser ` method and implemented ` listUsers ` and ` userIsAdmin ` methods to enhance user management capabilities in the application
added null checks for ` indexedWriteMethod ` and ` writMethod ` in ` IndexedPropertyDescriptor ` , ` Introspector ` , and ` Test6723447 ` classes , and created a test class for validation to ensure proper handling of return types and to validate functionality through testing
fix ( deps ) : update dependency com . google . cloud : google - cloud - google - cloud - v2 to v2.24 . 0
updated method signatures in Context . java and Request . java for consistency and clarity to improve code readability and maintainability
add setcapabilitiesfromNBT method in mixinitemstack for use in western .
[ ds - 3762 ] fix lifecycleutilstest race condition .
added validation for smart contract types and refactored contract creation logic in Wallet and GetContractServlet to ensure that only valid smart contracts are processed to maintain contract integrity
added new package - info . java files for image , module , and management modules to organize package metadata and improve modularization
lucene - 10496 : fix delete thread bug that can lead to deadlock
updated JavadocTool to handle duplicate JavaFileObjects using a HashSet to improve efficiency by preventing unnecessary parsing of duplicate files
changed the default value of STRIP _ IPV6 from true to false and updated the subsequent subsequent logic to ensure consistency in default behavior regarding IPv6 processing
added support for multiple user parameters in the LoginServerTokenEndpointFilter to enhance flexibility in handling user parameters during authentication
tika - 3111 -- fix bug with cpp language with no c - key .
replaced the existing import of MoreFutures with a new class for creating a single - thread executor to streamline thread management and improve code organization
updated LoginService and FormAuthenticator to include cache control and expiration headers to enhance login feature and ensure proper handling of cache responses
add exception text to the error log ( # 2037 )
updated import statements and modified test class structure in HSSFTests . java and TestEmptyDocument . java to enhance test coverage and improve organization of test cases
modified FetchHTTP2Test , FetchHTTPTestBase , and FetchHTTPTestBase files to improve code organization and maintainability
updated the output handling in TestCommand . java to handle null output cases to ensure robustness by avoiding potential NullPointerExceptions
added external resource control priority settings in Java2DRenderer to enhance the resource management during URL resolution
make testtriggercoverage more resilient to arrayindexoutofboundsexception
modified variable and method visibility and introduced CPU time testing logic to improve thread CPU time validation and enhance error handling
added a check for empty comments in the TabsAndIndentsVisitor class to ensure proper handling of whitespace - related conditions
updated assertions in TestTriggerIntegration to use greater than or equal to increase expected values to improve test reliability and clarity by using more precise assertions
make id comparison in databasechangelog and ranchangesets case - insensitive
implemented ` getString ` method in ` ShadowBundle ` to return a default string if the specified key does not exist to enhance functionality by providing default value handling when the value is null
updated time formatting in TweetActivity to support locale - specific date representations to ensure consistent date formatting for users based on locale preferences
nifi - 11977 added check for empty session - related list in standardprocesssession . getconnections ( )
added focus request logic to manage focus visibility in DetailFragment to improve user experience by ensuring the keyboard appears when the title changes
another attempt at fix the classpath issue on window for tools . jar # 718
ggb - 2333 synchronize on the matrix to avoid possible deadlock .
int - 1257 add import to Genericmessage . java to enable use of genericmessage with spring integration
fix for mapreducejobhistoryupdater to work with postgres 10.0
update file filtering logic in AquaFileChooserUI to ensure selected filter is valid to improve user experience by preventing invalid file filter selections
added synchronize block around the addition of packet extension to the content for thread safety .
modified the method for converting an object to a string in ArrayPtg . java to ensure correct string representation for Boolean values in ArrayPtg
updated import statements in PGtokenizerTest . java for consistency to enhance readability and maintainability of test assertions
added logic to handle cases where the enclosing element is not a ExecutableElement and modified variable printing logic accordingly to improve type safety and ensure correct representation of final variables from anonymous classes
added support for PostgreSQL sequence column addition in AddAutoIncrementChange . java to enable proper handling of auto - increment columns in PostgreSQL
avro - 804 . java : fix off - by - one issue in readutf8
tmi - metadata : remove unnecessary whitespace .
update parent initialization to use parent . getParent ( ) instead of parent to ensure the correct parent component is referenced for component hierarchy
refactor import statements and formatting in multiple Java files to improve code readability and maintainability
replace ENGINE _ finish with ENGINE _ free in NativeCryptoTest . java to ensure proper resource management and avoid potential memory leaks
introduced a new ` start ` variable and modified iteration handling in multiple classes to improve iteration control logic and streamline event firing
fix double release of httpcontent instance ( # 10727 )
add a call to deleteLogs ( ) in TestRecovery . java to ensure proper logging cleanup during tests
added URL handling for " twitter : / / " in BrowserActivity to enable navigation to the main activity when a specific URL is received
[ hotfix ] [ test ] fix flaky test DeploymentGroupTest . testserverserveranddrop ( ) .
fix issue with regex match when list label in visibilitycontroller .
increase the maximum number of retries in RestTemplateRetryTests to 25 to improve test stability by allowing more retries
removed unnecessary print statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to improve code clarity and ensure proper method overriding
add support for fraction resource type ( FRACTION ) in the application to enable parsing and parsing of fraction resources in the application
simonstewart : remove a temporary hack to make sure we do n ' t write empty file when close a file
updated the findNewerDependencyVersion method to use tagGroupId and tagArtifactId instead of groupId and artifactId to improve the handling of dependency versions based on resolution results
hbase - 21935 properly throw quotaexceedexception when table be create in a namespace ( ted yu )
rename multiple token - related classes to improve consistency in naming conventions to enhance code readability and maintainability by standardizing class names
updated TestFuzzPreLoop . java file to improve test coverage and functionality
added a check to ensure f0 is non - negative to prevent negative values from being processed further
updated logging messages and enhanced foreign key management in SchemaRetriever and TableRetriever classes to improve clarity of log messages and ensure foreign key properties are only set when necessary
add a get charset ( ) method to inputbuffer to reduce memory consumption
add functionality to allow checking for empty pages in Lawnchair preferences to enhance user experience by allowing flexibility in managing empty pages visibility
added a warning log for the deprecated cucumber - needle to inform users to migrate to using cucumber - cdi2 or cucumber - jakarta - cdi
updated theme handling and improved style resolution in ShadowThemeTest and ShadowArscAssetManager to enhance functionality and maintainability of theme management in the Robolectric framework
updated test cases to improve clarity and consistency to enhance readability and maintainability of test cases for byte array field mismatches
# 1614 - enh : add database migration support for new system _ versioning _ alter _ history = 1
updated prototype property handling and introduced new methods for GET and SET prototype in ScriptObject to enhance the functionality and maintainability of the scripting engine
updated the order of random readers in the TestFilterDirectoryReader class to improve randomness in testing by using a random generator
updated display name retrieval for remote clarification in UsersAndGroupsSearchProvider to improve user experience by providing specific suggestions based on whether the user is authenticated or authenticated
updated path handling in CookieRetrievingCookieGenerator to use default if blank to improve robustness of path formatting in cookie retrieval
add ` ` jvm . jstat ' ' and ` ` jvm . jstat ' ' so they dont overlap with ` ` jstat ' '
[ log4j2 - 1349 ] fix bug of abstractcacheservice backup check
pdfbox - 4892 : fix compareto ( ) to consider page number rather than page number
added a null and equality check for the focused widget in UIDropdown to ensure correct handling of highlighting behavior in the tabbing manager
fix checkstyle issue in soundutil . playsoundlocationExcept and soundutil . playsoundPitchRange .
updated ApplePackageDescription to utilize the new getAppleCxxPlatformFlavorDomain method with a new getAppleCxxPlatformFlavorDomain method to enhance flexibility and maintainability of platform management in the build system
add test to ensure correct SQL syntax be generate
updated method names from onConnect to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory to better reflect the functionality of handling session acceptance
add a couple of header and footer to the langptreebankcorrector , for future refactoring .
added a new file TestGetLoggerNPE . java implementing a test for logger retrieval to verify that a null logger does not result in a NullPointerException when accessing logger information
added a new method ` getData ( ) ` and modified references to use the ` appCtx ` variable directly to improve thread safety and ensure consistent handling of context data
[ gr - 29811 ] modification to the test suite to support compilation during test .
added support for a new " NEXT VALUE FOR " expression with a regex pattern and modified related methods to enhance expression functionality and improve handling of next value evaluations
add more information to unsupportedfeatureexception about resource bundle that be not pre - cached
modified the readability and removal logic in BoundedLocalCache . java and added a new test in BoundedLocalCacheTest . java to improve buffer management and ensure proper removal of pending writes
added order direction property and exchange specification in QuoineExchange . java and QuoineNewMarginOrderRequest . java to enable configuration of the order direction for better handling of market data
added bound initialization methods and a new test class for bean properties to ensure proper bean initialization and validate functionality through testing
added a new interface ` SetDisplayModeCallback ` and modified ` LwjglApplicationConfiguration ` to use it for setting display modes to improve flexibility and maintainability of display mode configuration
prevent release button from be suspend if it ' s already active .
update wrap width calculation in LineCell and change StyledTextAreaSkin to use MAX _ VALUE instead of Region to improve layout handling by ensuring minimum value for wrap width
fix a typo in gplaterrorresources _ it . java ( # 2304 )
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper . java ` and ` CustomPreconditionWrapper . java ` to maintain the insertion order of the parameters when iterating
updated string concatenation to use String . format for string concatenation to improve code readability and maintainability by centralizing string formatting
refactor namespace retrieval in StaxXmlPullParser . java to simplify namespace handling and improve code clarity
added support for nested joins in TestAll and TestOuterJoins classes to enable nested joins for improved configuration management
api : allow listtemplates only for root admin only
added caching for JavacFileManager and updated CompletionProvider to accept a cursor parameter to ensure proper caching of class paths for compilation tasks based on the current cursor position
added configuration settings for Hive configuration in TestMsgBusConnection . java to ensure proper setup of Hive authorization manager for query execution
[ beam - 1340 ] replace assertthat with assertthat in kuduiit and xmliotest ( # 16637 )
add nullability annotation to metadataprovider , textrenderer , and util to avoid npe .
fix ( ilp ) : fix arrayindexoutofboundsexception in symbolmapreaderimpl ( # 888 )
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up test output and improve test readability
deleted the Reflection . java and TypeConverters . java files to streamline the package structure and eliminate unnecessary code
replaced the shared executor implementation in the ThreadlessExecutor class with a dedicated methods for managing finished and waiting states to improve thread safety and simplify the management of executor states
consolidated error handling logic in DateTimeFormatter . java and added a test for null return in TestDateTimeParsing . java to improve code readability and ensure proper handling of exceptions in date formatting
rename the variable ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` for consistency to improve clarity and maintainability of variable naming
added a new class ` T7034495 ` with multiple generic interfaces and updated ` Types . java ` to address crash issue # 7034495 and improve type safety
replaced do { while } with while loop for iterating over keys to improve code clarity and performance by eliminating nested loops
updated condition checks in TransclusionDecideRule . java for consistency with Hop . REFER . getHopChar ( ) to ensure correct handling of op characters based on their type
remove micronaut version print out ( fixes # 2714 )
added unit tests for handling specific area calculations in the Print _ area formula to ensure that the print area functionality works correctly for different name definitions
modify the creation of MindIcon to include a description if the name does not contain a slash to ensure correct formatting of the description when creating MindIcon objects
updated onHomeIntent method to accept internalState parameter to enhance flexibility in handling launcher state transitions
replaced direct initialization of the dependency tree with a boolean variable to improve code readability and maintainability by reducing redundant variable declarations
added ` showDetails ` method to ` ContactsPreferenceActivity ` , ` FolderPickerActivity ` , and ` FileDetailFragment ` classes to enhance file detail display with an active tab for better user experience
corrected the spelling of " $ apply " to " apply " across multiple files to ensure consistency in method naming conventions throughout the codebase
mahout - 837 : fix minimalencoder to not use the pseudo randomness if the size do n ' t change
added support for additional information in the SourceBuilder class to enhance flexibility in handling optional metadata for improved functionality
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure that the UI reflects the latest data changes
removed the setDefaultWALSyncMode method from ShadowSQLiteConnection . java to eliminate unused method to streamline the codebase
updated method calls in RemoveJavaDependenciesAdapter to use erasure from types ( ) to improve type safety and ensure correct handling of Java dependencies
fix the checkstyle issue in defaults3ccrtasyncclient . java ( # 7776 )
no effective change - fix test description
add content to the log when fail to get the expected size of the collection
make handling of failure case in graalcompilers more robust .
ggb - 2118 : create default pen image if it do n ' t fit on the screen
refactor SQLXML class to improve readability to enhance maintainability and ease of understanding for future developers
added a limit parameter to the getOrderBook method in YoBit to allow users to specify the order level for order book retrieval
changed exception class and import statements from ` GotWrongOOMEException ` to ` HeapOOMEException ` to align with the new package structure and improve clarity in exception handling
nifi - 259 : ensure that we do n ' t exceed string length for data flow . this close # 103
add a fallback to the default list in pmsconfiguration . getallengines ( ) , fixes # 2642
renamed ` FullIterator ` to ` WheelIterator ` and updated related code references to improve clarity and consistency in naming conventions
first time we get a bug instance with a bug pattern , we ca n ' t lookup a bug pattern and return an error message
increase wait time for localchunkprovidertest . testisready to reduce flakiness
changed the visibility of the uncomplete checklists menu from true to false to improve user experience by preventing unnecessary checks from being displayed
refactor DefaultResultSetHandler to resolve nested result map and add a new Contract class with associated tests to enhance result mapping handling and ensure proper functionality with nested result sets
added null check for defaultHome and updated receiver unregistration logic to improve robustness against null pointers and ensure proper cleanup of receivers
added the @ VertxGen annotation to PumpImpl . java to enable the use of Vert . x code generation for generated code generation
removed unnecessary type casting when sending file information in FileDetailFragment and OCFileListFragment to simplify code for better readability and maintainability
[ geos - 8454 ] trim trailing and leading space from config attribute value ( # 6883 )
added new auxiliary classes and updated their usage in the classes to enhance data handling and maintainability in the auxiliary processing
svm : do not need to expose singlemodulreference via dynamichub . singlemodulereference . get ( )
modified the case statement for relKind assignment in DatabaseMetaData . java to ensure correct identification of database tables based on the type
deprecated the TIER _ ENTERPRISE _ PLUS _ VALUE constant and updated various package names in Agent and AgentProto classes to clean up outdated references and ensure consistent formatting across the codebase
corrected the position of the RQST field in ThriftHiveMetastore . java and updated the case statement in HiveMetaStore . java to correct the case value handling and ensure consistency in code logic
added a new module - info . java file that defines and exports the core component to enable modularization and encapsulation of the core functionality
added flush state management and fill state handling in SslConnection . java to improve handling of flush states and ensure fill interception is properly handled
updated Log4j2LogDelegateFactory to return a LogManager instance and modified logger creation logic to improve logging functionality and ensure proper handling of initialization errors
refactor VM launch handling and add server / client VM checks in ExecutionEnvironment and TestHelper to improve code clarity and ensure compatibility with Solaris and enhance testing reliability
refactor MongoFindOperation , ReactiveFindOperation , and ReactiveMongoOperations classes to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to the PGProperty class to support SSLPQFactory functionality in PostgreSQL
disable testinterprocesssemapEdges which be currently fail
refactor the iteration over resource names to use a sorted list to ensure consistent ordering of resource names for improved readability
added a new class OSvTerminal for terminal support and updated TerminalFactory to register OSV flavor to enhance terminal functionality and support for MacOS users
added conditions to check for additional file extensions " . gr " or " . grs " alongside " . gs " in ClassType . java to ensure proper handling of additional file types for processing
replaced HashMap with TreeMap for combined vectors to ensure order is maintained in the results
added a condition to iterate over all elements of names and values in XPathEntityProcessor . java to ensure that the loop correctly processes elements within the available list
updated WebSocketPolicy implementation with new configuration settings to improve flexibility and performance of WebSocket connections
changed variable and method names related to read and WiFi state permissions from static to instance variables to allow better flexibility in managing state permissions
add a method to resolve message with option to control message resolution base on template and default entry .
fix java 9 compile failure ( java 9 compiler )
add a new file LoggingAuditService . java to implement audit logging functionality to enhance user tracking and debugging capabilities for UAA authentication and non - existent users
[ tado ] handle case where target mode do n ' t allow temperature range ( # 10388 )
do n ' t generate bean definition for non - abstract class ( # 7767 )
camel - 8080 : camel - http should allow to configure http proxy via system property . thanks to david lavis for the patch .
updated the MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to incorporate the latest encoding features and improvements
added a call to jdkSerialFilter ( ) in System . java to utilize the JDK serial filter for improved functionality
camel - 15105 : camel - core - add information about the pool size of the pool in info message
replaced calls to ` forceFinished ` with ` forceFinishScroller ` in multiple anim classes to simplify method calls and improve code clarity
added configuration handling for realtime cluster in PinotHelixResourceManager to enhance configuration flexibility for realtime cluster setup
added methods ` isError ( ) ` and ` error ( String message ) ` to ` ValidationReport ` and updated references in ` RefValidator ` and ` RefTest ` to improve error handling and consistency in reporting validation status across the application
refactor inline QSB assignment to use closestProfile instead of default display options to improve flexibility in managing device profiles based on display options
updated methods in SortedArrayStringMapTest to include exception handling and url decoding to improve error management and ensure proper character encoding handling
update regex pattern to allow wildcards for method parameters to improve flexibility in matching methods with varying input formats
fix npe in toolkit , and add image check to fillrect ( )
added a timeout parameter to the waitUntil methods in FaultToleranceTest . java to allow for customizable timeout values during asynchronous operations
update package - info . java files for mmm and ppp to ensure consistency and clarity in package documentation
set the Docker image URL in the Environments class to ensure compatibility with local Docker image configuration
- fixed setlastmodified issue for window platform
renamed multiple classes related to additional functionality to improve code clarity and maintainability
replaced the createHardLink method with a new copyFile method that accepts a File parameter to enhance file copying functionality and improve error handling when copying files
refactor ` appendToDescription ( ) ` method names to ` getDescription ( ) ` across multiple classes to improve clarity and consistency in method naming and functionality
ensure all cuda have the same device ( # 901 )
fix autodectest failure when use xml . document . getformat ( )
updated test classes to use JUnit4 and modified imports for better compatibility to leverage JUnit4 features and improve test structure for better compatibility
added TransactionLimitRule and ParentGasLimitRule to the CommonConfig class to support gas limit configurations in the CommonConfig class
changed the visibility of setupData ( ) method from public to private in BaseAssumptionsRunnerTest . java to restrict access to the setupData method for better encapsulation
rename the variable ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` and update related references accordingly to clarify the purpose of the variable in relation to transaction management
[ 3.0 triple ] fix tri server end stream bug ( # 9013 )
[ flink - 33065 ] [ doc ] fix config format for ' jobmanager ' and ' restartscheduler '
added a new test method ` testIssue154 ` to ` SelectTest . java ` to verify SQL parsing and deparsing for discount details to ensure proper handling of deleted discount categories and their modified times in SQL queries
refactor Common class for improved organization to enhance maintainability and readability of the code
modified the launching logic to use try - with - resources for better resource management to ensure proper cleanup of resources when interacting with the launcher
[ flink - 24405 ] [ table - planner - blink ] correct the description of streamexecdeduplicate ' s status
improve logging when send kafka message to a topic error
dataes - 9 - adapt to api change in spring data common .
1d / 3d : setcoord ( ) now return a boolean so segment3d can be use for setundefined ( )
add gesture scroll handling and swipe logging in AskGestureEventsListener . java to improve user experience by implementing scroll gestures more accurately
modified comparison logic in NGramEstimator to handle sorting by key - value pairs to improve accuracy of comparison by considering both key and value pairs
updated imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple files to align dependencies with the latest Cucumber library organization
updated method calls in StatsLogCompatManager to retrieve folder icon properties to enhance clarity and functionality by accessing the correct attributes of the folder icon
replace ` getServerSlogan ( ) ` with ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure consistency with the updated server name retrieval method
8014138 : c2 : assert ( ! failure ) fail : miss loop predicate
removed unnecessary variable and improved equality and hash code methods in SelectionHighlighter . java to enhance code clarity and maintainability while ensuring proper comparison and hash code generation
added a new ` StringResultConverter ` class for converting strings to native conversions and modified ` AsmRuntime ` and ` AsmUtil ` to utilize this new method to enhance string handling by providing flexible charset management for native calls
( chore ) camel - 19751 : adjust disable test that reliably fail on the apache ci
updated the condition in JansiWinSysTerminal . java to correct the condition to ensure the wait condition correctly reflects the intended functionality
- ( se ) fix bufferutils . setinbuffer ( quaternion ) so it do not set the buffer size
updated the assertion in TestSolrDiscoveryProperties to use File . separator for data path to ensure compatibility with different operating systems ' file path handling
update auto updater to work on macos 10.15
updated lock handling in FSDirectory and Lock classes to use String instead of File for better clarity to improve the accuracy of lock identification in the application
rename ` appIcon ` to ` allApps ` and update related method calls to improve clarity by using a more descriptive identifier for the apps view
replaced ` Invocable ` references with ` ClientDatagramEndPoint ` references in ` ClientDatagramEndPoint . java ` to ensure proper reference to the class context for improved code clarity and maintainability
changed the order of GET _ STEP _ EXECUTIONS from oreder to order by STEP _ EXECUTIONS to ensure the results are sorted consistently by STEP _ EXECUTIONS
updated button handling in LwjglInput . java to improve clarity and handle unknown buttons more gracefully
added test cases for submit approve and reject in TaskRestRepositoriesIT . java to ensure correct behavior of the submit mechanism with specified parameters
refactor logging calls in OpenIdServiceResponseBuilder and GoogleAccountsServiceResponseBuilder to use a unified Logger class to enhance code readability and maintainability by adopting a uniform logging approach across the codebase
update expiration time parsing and update test method visibility in SsoAccessTokenProvider and SsoAccessTokenProviderTest classes to improve accuracy of token expiration time handling and enhance test readability
make some ci work on macos , and disable some ci test
added mock methods for alarm suppression requests in GreetResourceMockedTest . java and updated OciMetricsCdiExtensionTest . java with new test cases to enhance monitoring capabilities for alarm suppression requests in the system
refactor the order of conditional checks in the JFrame class regarding the default close operation to ensure that the security check occurs before validating the default close operation to maintain security protocols
fix npe when library scan result in npe
updated metricsContext access in SuggestComponent to use the superclass method to improve consistency and maintainability by centralizing metrics context management
refactor file list response formatting to include conditional checks for non - positive count to improve readability and maintainability of file list presentation
change default value of " HashKnownHosts " from " yes " to " no " and change return type of loadKeys to Iterable < KeyPair > to improve clarity of configuration and enhance method usability for key loading
rename SourceVersion . java files to maintain consistency in naming conventions
added a new test class ThreadFactoryTest for thread management to ensure that custom thread creation and execution works correctly for the specified thread group
fix max _ delegation _ lock _ period in delegateresourceactuator ( # 2688 )
added a new TicketModel instance to the EditTicketPage class to encapsulate ticket data for better data management
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimensioniss functionality for predicted list
updated constructors in various assertion classes to include type casting to ensure proper type safety and eliminate unchecked cast warnings
updated menu item constants and added functionality for quoting tweets in TweetActivity . java to enhance user experience by providing quote options and improving menu organization
fix a lock in jmeterthread that do not need to be create a lock .
rename ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` for clarity .
modify error handling to conditionally offer failure before closing the consumer to ensure failure is only offered when the result is true
updated German and French error messages in XSLTErrorResources to improve clarity and accuracy of the information presented to users
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety for concurrent access
adapt to http : / / code . google . com / p / mybatis / issues / detail ? id = 435 . do not subscribe to invalid value on unsubscribe function .
refactor the creation of the components . yml file in ComponentPresetManager . java to improve code structure and error handling for component file creation
hive - 23794 : jdbc driver should use column qualifier when fetch metadata ( jesus camacho rodriguez , review by prasanth jayachandran )
fixed bug relate to previous voice , also show text when locale change .
added session validation and a test for invalid sessions to ensure proper handling of session states and validate functionality through unit testing
hhh - 12444 : remove ormexceptionhelper - no longer used
jcex25519domain : set default password length to 255 , to improve security
added a new codec setting in TestBlockPostingsFormat3 . java to ensure the correct codec is used for block processing
[ hotfix ] print debug message in checkpointrangeaddressheaders when empty
add use of oaep and rsa / ecb / oaeppadding to provide good support for sunjce ( relate to github # 1277 )
8180922 : [ macos ] add - xx : + useperfdata to the platform check for window aarch64
erroneously log stack trace in debugsourcesresolver ( # 2288 )
removed unnecessary conditional check for UNIX socket in AbstractTest . java to streamline code by returning only relevant values for UNIX sockets
fix the bug of fileuploadutils . sendsegmentfile ( ) when jersey _ admin _ is _ primary be set to true ( # 4337 )
[ object ] change order of buffer creation to guarantee order .
set USE _ PIPELINE _ DOWNLOADER to true in FastSyncChainDownloader . java to enable pipelining downloading for improved performance
modified SimpleDateFormat to set the dst offset directly in the calendar and added a new test class Bug7130335 to streamline date handling and ensure correct functionality when using the Moscow timezone
refactor variable assignments to use local definitions instead of accessing mRollo . mState directly to improve code readability and maintainability by reducing repetitive method calls
cloudstack - 3437 : fix npe when try to get default hypervisors for a vpc start from data center
updated StringBuffer class to improve performance and memory usage
[ drools - 7 ] set rule . uid for each created rule ( # 3420 )
added null check before unsubscribing the registry url to prevent potential NullPointerExceptions when the listener is null
add a new PropertyDescriptor for pretty printing in JoltTransformJSON to enable users to apply pretty printing functionality to the output of the Jolt transform
make access _ table public so that can be use in test .
polish ` ` remove resource not exist ' ' warn
add xmpptransport . run ( ) to allow extension of the transport run method
renamed multiple Java files while preserving their content to streamline the codebase for better clarity and maintainability
added a new parameter ` isUpgradeSuspended ` to the AmbariManagementControllerImpl class to improve handling of upgrade suspension status in the upgrade process
simonstewart : after a code grant , the code be copyright the sfc and the selenium committers . start to update the copyright header
remove unused variable ' wfields ' from Resolver . java to streamline code by eliminating unnecessary variable declaration
added initialization for encryption and signing key sizes in OAuthProperties to ensure proper handling of encryption and signing properties in the OAuth implementation
hbase - 13658 : avoid unnecessary call to get columnfamily # length ( gregory chanan )
replaced the instance of AllowedResourceAliasChecker with a lambda expression to simplify the alias checking logic for better readability and maintainability
refactor multiple classes related to serialization and package information to improve code organization and maintainability
[ java ] have their own idlestrategy so that service can be reset .
hive - 13058 : fix chunkedwriter so it always write multiple chunk . ( gopal v , review by prasanth jayachandran )
added a new abstract class AbstractJobExecutor to handle job execution to provide a base class for batch job execution in batch processing
fix bug where a replay could miss a replayfuture , it should n ' t be return
rename variable from ` hugeStaticBase ` to ` staticBase ` for consistency and clarity to improve code readability by using a more descriptive variable name
camel - 17684 - camel - consul : do n ' t register service when discovery be disabled ( # 8296 )
replaced ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom . nextInt ( ) . nextInt ( ) ` for generating hashSalt values to prevent collision issues when generating hashSalt values
[ gr - 37474 ] better error message for fail runtime compilation .
update currentStart and baselineStart calculations in TimeOnTimeComparisonHandler . java to ensure correct handling of time values during comparison
added logic to handle abstract methods in CallsRealMethods and created corresponding unit tests in CreatingMocksWithConstructorTest to ensure proper stubbing of abstract methods and validate functionality through unit testing
refactor package access checking and encapsulation in the NashornScriptEngine and Context classes to enhance security by ensuring proper package access validation through SecurityManager
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup methods to improve test structure and setup for better error handling and plugin setup
renamed ` dtm ` to ` model ` and updated table initialization and text formatting in ` ContributionListPanel . java ` to improve clarity and consistency in naming conventions
added functionality to check if a test has a touch interaction service in the TestInformationHandler and TestInformationHandler classes to enhance testing capabilities by verifying touch interaction service availability
refactor ConnectAction to use Mutex . event . writeAccess instead of SwingUtilities . invokeAndWait to improve code readability and ensure proper access to the connect dialog
updated data types and methods to use BuildTarget instead of String in TargetsCommand . java to enhance type safety and improve clarity in handling build targets
add some internal package to fix the build
added handling for HOME and END characters in the input validation logic to improve input handling and ensure proper display of the first line in the map
removed synchronization around the getConnectedPlots method to improve performance by reducing unnecessary synchronization
refactor intent creation in Utilities . java to use a chooser for activity sharing to simplify code and improve user experience by choosing the appropriate activity
remove the ' public ' modifier from the roster constructor , so that it ' s package visible .
add basicconstraints to trust anchor to avoid certpath issue .
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address test failures due to incorrect transform offsets
removed unnecessary conditional checks for multiValued ( ) with Integer . MAX _ VALUE in TrieDateField and TrieField classes to simplify the code and improve readability by directly assigning precisionStep
deleted the TaskbarStateHandler class and updated related imports and methods to streamline the code by eliminating an unnecessary class and enhancing clarity
added a new file ` ArrayLength . java ` to test reflection - based field handling for array types to ensure that the ` ArrayLength ` class behaves as expected for reflection operations
fix attempt to destroy non - java process on teardown ( # 21155 )
updated ApplicationSettingsService to use @ PostConstruct instead of @ Singleton and added an init method to streamline initialization process and ensure proper handling of null settings
fix safepoint . update ( ) to handle negative value correctly
update thread name field type from char array to string to improve data type consistency and method usage for thread name retrieval
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and HnswGraphBuilder to reduce the frequency of graphs and improve performance
add font object to pgraphics2d ( fixes # 3554 )
refactor expandDynamicStar logic into a separate method for improved code organization to enhance readability and maintainability of the code by reducing duplication
added a method to find interactive child records in Comment2000 . java to enhance data handling by providing a way to identify interesting child records
added a warning response for the PMS icon status in HTTPServer . java to enhance user feedback by notifying users of icon status issues
use getmodifiersex ( ) instead of getmodifiersex ( ) for good compatibility
amd64 : add miss cost cost for amd64countLeadingZerosnode and amd64counttrailingZerosnode
fix a nullpointerexception when send a plain message use camel - as2 ( # 5907 )
modified Locale . java files for consistency to ensure uniformity in locale representation across the application
add a button to clear the log and add a clear method to error model . useful for reset error log .
removed unnecessary whitespace in RecentsView . java to improve code readability and maintain consistency
updated locale handling and message generation in multiple classes to improve code clarity and ensure proper localization support
change sequenceoptimizeridentifiertest to be more stable , and add connection pooling to unit test .
[ grid ] adding opera driver to default session map
added error dialog for case when download fails .
added new Lifx product definitions while updating existing ones in LifxProduct . java to enhance the product catalog options for better user selection
solr - 10496 : fixed collection api to support async operation for create a new replica .
removed unnecessary variable declarations and improved readability in PostgresDatabase . java and PostgresDatabaseTest . java to streamline code and enhance maintainability by reducing redundancy
updated LogPage and LinkPanel constructors to accept a refid parameter to ensure proper referencing of the log panel based on the object ' s HEAD
update the model space rotation from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to ensure correct transformation of model space positions in the bone processing
added a method to stop the browser component when it is destroyed to improve resource management by ensuring the browser is stopped when the component is destroyed
added a wait for active collection of " readApiTestViolations " in AutoScalingHandlerTest . java to ensure proper handling of API violations during tests
modified the ScreenTerminal and Tmux classes to adjust for special characters and attributes based on their values to improve the handling of terminal attributes for better visual consistency and functionality
update the softreset action logic to include additional controller state conditions to improve accuracy of controller state checks during soft resets
disable on - disc stream cache should speed up texture pack reloading .
added logic to retrieve the parent folder based on the media renderer to ensure proper resource access within the media renderer
cloudstack - 10315 : fix bug in delete network offering that be cause network offering not to be create when offering be create ( # 2516 )
fix issue with file stream not be close on android . http : / / github . com / codenameone / codenameone / issues / 1742
added error handling for RestClientException when posting issues to improve robustness by catching potential Forbidden exceptions during post processing
added a method ` getOriginal ( ) ` in ` MessageFactory2Adapter ` and updated ` AbstractLoggerTest ` to use it to ensure proper retrieval of the original MessageFactory instance for better logging capabilities
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related to the use of BanSerializableRead for these classes
updated regex pattern from 1 to 3 in Version . java to allow for additional characters after the last character in the version string
added initial delay and dismiss delay settings in ExtractionModelFrame . java to improve tooltip visibility and user experience during error handling
refactor target graph and related methods in ProjectCommand . java to include passedInTargetsSet to improve code clarity and maintainability by consolidating related logic
added timezone setting and assertion in TimeTest . java to ensure correct representation of time zone in tests
[ ds - 3952 ] remove todos , be n ' t use anywhere in the javadoc .
use endpoint . getslimplementation ( ) to get ssl support
updated accuracy display format in GpsLoggingService to include accuracy details to enhance accuracy reporting by providing more relevant location information
added a method to check if futures are enabled in Binance and updated related services accordingly to ensure that the Binance API behaves correctly when futures are enabled
continue issue 715 [ admin : listinstructors -- > admin : listinstructors -- > admin : listinstructors -- > admin : listinstructors -- > admin : listinstructors -- > ' ' )
hive - 23065 : thrift - cli should not set accept queue size to max worker thread ( siddharth seth , review by prasanth jayachandran )
refactor PathWatcherService to use a constant for the watcher property to improve code readability and maintainability by avoiding repeated method calls
http : / / issues . apache . org / jira / browse / amq - 3872 - amqfactory should return true for secure jms composite
replaced ` parseErrorHelper ` method with ` validateError ` for error handling in ` DrillSqlWorker . java ` and updated test cases in ` TestWindowFunctions . java ` to improve error handling consistency and ensure proper exception creation during query execution
fix possible infinite loop in gcinspector . getduration ( ) .
fix : nodewithJavadoc should return an empty optional if there be an issue
added OS detection method and modified memory handling capabilities in ReserveMemory . java and WhiteBox . java to improve cross - platform compatibility and enhance memory management functionality
added methods to check for closing or splitting regions in IndexRebuildRegionScanner to ensure proper handling of region closing and splitting events during index rebuilds
hbase - 27373 make procid protect in hbaseadmin # tostring ( ) ( # 4737 )
camel - 4481 : fix camel - cxf so it work in osgi environment
refactor YamlChangeLogSerializer to use a container map for database change logs to improve code organization and maintainability by consolidating map handling
avro - 2147 . java : fix printing of empty line at runtime ( # 905 )
modified DebugRoadRegen and SchematicHandler to simplify road regeneration logic to enhance code readability and maintainability by removing redundant code
changed context usage to getActivity ( ) in HomeFragment classes to ensure compatibility with Activity context for better context management
changed annotation from @ GeneratedValue to @ GenericGenerator and added @ GenericGenerator annotation to specify the name of the generated value for better compatibility with Hibernate
removed country parameter from getSystemTimeZoneID method and its usage to simplify the method signature by eliminating unnecessary dependency
fix bzip2codec to correctly write uncompressed data with size of 2 byte
[ web ] move logger initialization in order to avoid conflict with parent logger
added a new constant VALUE _ TYPE _ EMPTY and modified the creation logic in the Value class to handle the absence of a value type more effectively
fixed group comparison to be case - insensitive .
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
simplexnoise : fix typo in javadoc
added a method ` newInstanceExact ` to the ` TargetGraphFactory ` class and updated its usage across multiple test files to provide a unified factory method for creating instances of ` TargetGraph `
remove ` ` compacted ' ' from min / max row size description
add a mechanism for deserializing mod metadata use a jsonadapter to allow more flexible handling of artifact version .
updated the handling of object properties in NativeArray to improve clarity and functionality to ensure proper management of object state during operations
update file upload logic to use parent ID from storage manager to ensure files are correctly saved with the correct parent ID
added a new file UTF8ReaderBug . java to validate UTF - 8 encoding to ensure proper handling of supplementary characters in XML input
added unit test base on user forum issue
exclude test with depth 20 for now - useless dependency
added a method to reset allocation in SimpleParallelizer and invoked it in Wrapper to ensure proper initialization and reinitialization of the allocation variables
removed an unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct calls to System . getProperties ( ) with synchronized access to sysProps to ensure thread safety when accessing system properties
refactor ModelUtils class for improved efficiency to optimize model handling to reduce processing time
refactor AbstractDoubleArrayAssert for improved readability to enhance code maintainability and clarity for future development
added conditional calculations for width and height of labels based on their indices to improve label rendering by accommodating cases where only one label exists
added test cases for delay and abort functionalities in CodeFirstSpringmvc to enhance testing capabilities for handling delay and abort scenarios
replaced ` d . get ` with ` d . getValues ` for retrieving values and updated the term frequency addition logic to improve efficiency by directly accessing array elements instead of accessing field data
replaced the use of CxxLink ruleResolver with a new BuildTargetSourcePath class to improve code clarity and maintainability by utilizing a dedicated source path representation
add disabled status message to ` ` download latest ' ' message .
replaced Collection with List for filePaths in MediaFolder . java and added numberOfFiles variable to enhance type specificity and clarity in the code structure
replaced the argument " - b " with " - b " in the AidlStep and GenAidlTest classes to ensure proper argument handling in the command line execution
fix delete edge from annotation handle . ( # 797 )
added a TODO comment to the FakeHttpLayer class to prepare for future testing of the functionality
[ java ] revoke leadership before handle error .
refactor CompositeDiscoveryClient to use Single for combining instances from discoveryClients to improve code readability and performance by leveraging reactive programming features
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in system resource management
[ flink - 25370 ] [ doc ] improve the description of flink - job - manager option .
rename method ` updateNoWidgetsView ` to ` updateRecyclerViewVisibility ` and adjust visibility logic for ` mViewPager ` and ` mAdapterType ` to improve method clarity and ensure correct handling of RecyclerView visibility based on adapter type
fix issue with woodstx incompatibility with jdk 8 .
refactor test setup in AuditAliasCommandIntegrationTest to use instance variable instead of local variable to improve test clarity and ensure proper initialization of the ProjectWorkspace before each test method
removed debug log statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up code and improve maintainability
camel - 16534 : update test to be disabled due to jetty upgrade
added error handling for periodical refresh in CachedStore . java to improve robustness by logging errors related to periodical updates
refactor ` ChainingAuditPrincipalIdProvider ` to use a constructor for ` List < AuditPrincipalIdProvider > ` and update ` CasCoreAuditConfiguration ` to use this new method for adding providers to improve code organization and simplify provider management
added a method to check the default backgroundFills and updated color handling in HSSFCellStyle to ensure color values are consistently applied based on format settings
update ZonedDateTimeFormatterBenchmark . java to improve clarity and maintainability of ZonedDateTime formatting benchmarks
solr - 12093 : distributedupdateprocessor should check for buffer update before log replay or peer update
added a null check for stage in the motor handling logic to ensure that the rocket ' s stage is not null before proceeding with motor operations
add ` / editreplace ` and ` / editscript ` to worldedit . ( # 2488 )
update the vault / secrets extension to detect master issue . fix # 509
changed the declaration of the ` InputProcessor ` variable to be final to ensure the ` processor ` reference remains constant after initialization
added an event listener for handling write failures in WritableKeyProcessor to ensure proper handling of write failures during task completion
added " CUBE " to the MySQLDatabase class to support CUBE - specific functionality in the application
added a try - catch block around the rm method call to handle potential IOException to improve error handling and prevent application crashes due to potential IO exceptions
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and introduce new test runner functionality to enhance support for multiple API versions in Robolectric tests
refactor tests to use reflection for accessing fields in DefaultOkHttpClientFactoryTest to improve code readability and reduce redundancy in field retrieval
updated exception handling in BatchUpdateException , PreparedStatement , and Statement classes to improve error management and maintainability of database operations
added a null check for the variable ' os ' in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 2171 fix npe in drawindexedstring ( ) , when parent panel be not center
added a boolean parameter to the jailerMain method and modified its implementation to include a boolean parameter to improve error handling by distinguishing between data models and extraction models
updated documentation to include initial content on callback - still more to add
fix for # 4229 : add a default pull _ unread for unread message
[ gr - 3056 ] fix null check for object with different type .
updated Box2DTest . java and Pong . java to modify memory calculations and changed initialization parameters to improve performance and ensure correct memory management during rendering
refactor layout management for mCommentsRecyclerView in ViewPostDetailFragment . java to improve readability and maintainability of the code
change log level from trace to warn for background operation aborted to better reflect the severity of the logged operation
do n ' t generate jimplebodybuilder interface method for abstract class . fix # 957
ggb - 1848 fix : press up only on iphone for ie10 +
updated notification user retrieval to include device ID to enhance notification functionality by associating users with specific device IDs
move srtm _ data _ getiff from droppr to srtm . csi . cgiar
modified MotifFileChooserUI to remove action listeners and added a new test class bug6520101 to enhance the file chooser functionality and validate the bug fix through automated testing
change return type of handle to boolean in new hollow history ui
refactor ` getRuleOptional ` and related methods to improve type safety and error handling to enhance clarity and maintainability of rule resolution logic
added a condition to hide the transportSpinner based on the makingShortcut setting to improve user interface by hiding the transport spinner when needed
added null check for attributes _ field and created two new classes with annotations to ensure proper handling of null values and implement demonstration of annotations
modified backPressed methods to return a boolean indicating success or failure to prevent further processing when the back button is clicked
phoenix - 5996 add phoenix . index . longviewindex . enabled a an alias for phoenix . index . longviewindex . enabled ( jamestaylor )
change log level from " V " to " v " in SDRTrunk . java to improve readability by providing a more concise output format
clean private path before verifying its existence to ensure a clean state in the test environment
removed columnPosition parameter from the diffDropColumn method and its usage to simplify the method signature and improve code readability
updated IndexWriter configuration to use TEST _ VERSION _ CURRENT instead of VERSION . LUCENE _ 40 to ensure compatibility with the latest testing version of the IndexWriter
hbase - 3649 remove hbase client use -- no _ stRICT _ COL _ FAMILY to avoid hbase - server compatibility issue
[ java ] : use id instead of string to track subscription id for stop a subscription .
replaced direct calls to ` startActivity ` with ` startActivitySafely ` before starting activities to enhance user experience by preventing multiple activity launches
added a conditional check to return early if there is a single JSON node and its text value equals " i " to improve handling of JSON data in the streaming service
refactor Procedure . java by modifying method implementations and variable names to improve code clarity and maintainability
updated the ` applyResourceBundle ` method to include ` Locale . getDefault ( ) ` and ` ClassLoader . getSystemClassLoader ( ) ` to ensure resources are loaded in the correct locale with system resources
[ j2kt ] implement normalizearraycreationskotlin pas which try to correctly normalize array in kotlin .
updated the logic for handling term enum forward and adjusted the position handling in PerSegmentSingleValuedFaceting . java to ensure correct indexing and counter management during term enumeration operations
fix npe in metadata processing when author list be empty .
add jdk . unsupported module to gdx - module - info . java require static jdk . misc dependency
refactor the enableability check in PropertyDescriptor to use a separate method for better readability to improve code clarity and maintainability by reducing complexity in the conditional logic
hbase - 21969 remove the need for clearbuffers in htable ( # 1212 )
fix ( annotation ) : make sure that scan ( ) can be call on the correct type ( # 1222 )
[ geot - 7420 ] add hasuserdata ( ) method to simplefeatureimpl to improve user data management
removed HiveException from method signatures in DDLPlanUtils . java and ExplainTask . java to simplify error handling by removing unnecessary exception declarations
refactor RelyingPartyRegistration class for improved clarity to enhance maintainability and readability of the code
7096170 : should remove unused support for enable javac logging
added a new class InJavaSourceSet to handle Java source set transformations to enable filtering of source sets based on their names in Java code
added a variable for the fits filename and updated resource loading in TestGDALParser . java to improve maintainability by avoiding hardcoded file paths
simonstewart : add a method to create a getter on an object to allow more flexible object creation
removed an unnecessary boolean check for using external storage in the DirectUpload class to simplify the logic for SDK version compatibility
added a new constant INDEXER _ NO _ COMMIT to IndexerMapReduce and updated related classes to utilize this constant to improve clarity and maintainability of commit handling in the indexing process
bug 7445 : take disk offering id into account when create a volume
fix npe in tohtml when there be no note
added null checks for ` amountAdd ` and ` periodToSubtract ` in multiple classes to ensure robustness by handling various types of ` amountAdd ` and ` periodToSubtract `
added a new file ` Issue382 . java ` implementing ` ServerFeature ` with error handling tests to ensure proper handling of specific error types and responses in the application
replaced the custom ` signum ` method with a static import and simplified the return statement in ` PositionUtils . java ` to improve code readability and reduce unnecessary complexity in annotation handling
added conditional logic to hide the text holder based on its visibility state to improve user interface by hiding the text when not needed
fix : fix nullpointerexception with local access with ctreference ( # 1221 )
[ java ] fixing firefox compatibility with old java version
allow pluggable liquid block to pick up more fluid ( # 61422 )
http : / / issues . apache . org / jira / browse / amq - 2902 - prevent test failure in slow machine
updated time zone from " PST " to " America / Los _ Angeles " to ensure correct representation of the time zone in the application
[ java ] handle case of distinct error when update distinct error buffer .
updated the system property checks to use enabled annotations for Nightly and Monster tests to enable flexibility in test configuration by enabling additional control over the TestGroup ' s enabled state
[ sonar - 2372 ] add empty line after write sql file with ' # ' in execution logger
added reflective access control ( graal - context ) for dynamic proxy / reflection .
fix for stink [ 2203561 ] and [ 2203561 ] pgraphics2 : do n ' t update the pixel when call load ( ) and dataelement
updated HiveUtilities to include partition information in transaction properties verification to ensure that transactional properties are correctly verified for the table and partition
refactor the scroll logic for better handling of overlay scrolling to improve clarity and maintainability of overlay state management
hhh - 11147 - add unmodifiablebatchbuilder impl and unsynchronizedbatchbuilderinitiator to make it easy to configure batch size
do n ' t throw shouldnotreachhere exception , include the unexpected input
added a new test class ` MockWithStaticStateDemo ` and a corresponding test in ` PartialMockingRetainsStateTest . java ` to verify the spying behavior of partial mocking with static state changes
add a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure correct parsing of SQL union queries with brackets and order by clauses
refactor action execution logic in SecurityUtil . java to handle null ugi and improve error handling to enhance robustness by ensuring proper execution of actions when ugi is not available
modified error handling in OpenALMusic to store the audio buffer allocation error code more clearly to improve error reporting and provide more context on the allocation failure for better debugging
camel - 15692 : camel - quartz should not reslove string parameter a they ' re not need anymore . thanks to artem ivanov for the patch .
hive - 23790 : handle overflow in rexnodeconverter for decimal type ( jesus camacho rodriguez , review by jesus camacho rodriguez )
fix npe in webauthnmultifactordeviceprovideraction ( # 5568 )
test : fix ` ` fail to get test ' ' message in testaccount003
replaced AxialStage with RocketComponent and modified selection handling in BasicFrame , DesignPanel , and TranscodingPanel to improve type safety and simplify component selection logic
added a new parameter for long running time and updated the longRunningTime initialization to allow configuration of the long running time based on external configuration
updated comparison logic in ` FindRefComparison . java ` and added a new class ` Ideas _ 2012 _ 05 _ 21 . java ` with a class ` Ideas _ 2012 _ 05 _ 21 . java ` to enhance comparison accuracy and implement a new bug fix
updated method signatures and service loading in HttpServerProvider , ScriptEngineManager , FtpClientProvider , and FtpClientProvider to improve code clarity and eliminate reliance on internal Sun classes
fix some issue with my previous fix for geos - 5148
[ scb - 2716 ] remove unnecessary mockit usage in testRestClientrequestimpl
updated condition to include reference database comparison in MissingUniqueConstraintChangeGenerator . java to ensure proper handling of unique constraints when the reference database is the same as the comparison database
replaced the ` addAndroidConstants ` method with an ` return ` statement for better readability and efficiency to streamline the code by reducing redundancy and improving clarity in asset path handling
replaced assertEquals calls with await statements in DuplicateCookieTest and SessionRenewTest to use awaitility for better readability and reliability to improve test reliability by avoiding blocking assertions in concurrent scenarios
added user _ args and timestamp fields to the ChromeTraceBuildListener to enhance the data structure for better traceability
[ gr - 45373 ] localized / native libraries : use modulesupport . getresourcebundle ( ) instead of raw resourcebundle . getbundle ( ) .
corrected a typo in the trace log message from " match limit " to " match order " to ensure accurate logging of match order in HepPlanner
added new file TheRockMetaDataDemo . java to demonstrate fetching exchange metadata to enable users to access and print exchange metadata for TheRockExchange
fix float ( 0.0 ) and format ( 0.0 ) bug
replace the unparseIdentifier method call with a direct columnName assignment in ColumnStatsSemanticAnalyzer . java to simplify the code by directly appending the column name to the columnNamesBuilder
added a test method to replace fields in JavaTemplateContextFreeTest and modified method signatures in BlockStatementTemplateGenerator to improve code clarity and ensure proper handling of variable declarations
updated static method check to exclude synthetic methods in InstantiateStaticClass . java and added a new test method in Bug1282 . java to improve validation logic for synthetic methods and ensure proper handling of static properties
removed call to projectFilesystem . getPathForRelativePath in WorkspaceAndProjectGenerator . java to simplify path retrieval and improve code clarity
added functionality to handle pending rescues and register them in IkStepDefinition to improve resource management and ensure proper handling of cucumber pending transactions
added equals and hashCode methods to multiple type classes to allow for more flexible comparisons and hash - based collections
added a new method getSyncLevel to retrieve the SyncLevel enum and modified its usage in UpdateLog to allow for configurable sync levels and improve flexibility in handling SyncLevel values
test : reduce flakiness of controlcommandsstest . testclientpause ( # 2326 )
added a condition to check if the slice is not recovery before proceeding to ensure that the recovery logic correctly handles the recovery state
fix bug in create ( ) method of opencv _ core . java ( issue bytedeco / javacv # 376 ) that result in incorrect argument order of create ( ) .
added SDK path handling to AppleBundle and SwiftStdlibStep classes to ensure proper SDK integration and environmentalization during process execution
[ flink - 9809 ] [ runtime ] use deleteinternal instead of readwritabledir in transientblobcleanuptask and blobserver
bug 10723 : fix npe in nat rule creation log message .
rename PasswordEncoder and StandardPasswordEncoder classes to improve clarity and consistency in password encoding implementations
added row type conversion for sort and union in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of sort and union data types during query optimization
correct a typo in the BetterBlockPos class javadoc to improve code clarity and maintainability
modify the method to return the class loader when obtaining the proxy to ensure compatibility with different class loading requirements
rename version . getversion ( ) to getversion ( ) to avoid confusion .
added OracleDatabase import and modified statement handling in LoggingExecutor and JdbcExecutor to support trailing / trailing spaces in SQL statements for Oracle databases
make null value analysis feature optional due to findbugs . nullderef . assumensp
resolve : http : / / issues . apache . org / jira / browse / amq - 4798 - increase default port for jolokia test
ggb - 1900 slider fix , move slider up to the left , after format time
added a method to add a multifactor authentication provider bypass to enhance security by enabling bypass configuration for multifactor authentication
fix checkstyle issue in maxrectpacker . java ( # 840 )
[ drools - 7 ] fix the javadoc warning of the new kiesession attribute
added methods to set and get the help page in PMS and updated the HelpTab and LooksFrame classes to improve modularity and maintainability of the help tab functionality
added GeocodeProviderFactory and Constants interfaces for managing geocoding functionalities to establish a structure for managing geocoding functionalities and constants in the application
updated import statements for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer to align with the correct package structure for improved organization
[ flink - 32974 ] [ test ] remove expectexception from option test
[ py4j ] do n ' t delete the object of the gateway server when delete the object .
modified the conditional logic in SegmentsInfoRequestHandler and modified the collection creation in CollectionsAPISolrJTest to improve handling of document values and ensure correct configuration for dynamic collection additions
updated the calculation of numPredictiveAppCols for phone devices to ensure accurate app column count for better user experience on various devices
added a method to check for scalar subqueries in JoinUtils and updated related imports and tests to enhance code clarity and maintainability by consolidating repeated logic into a single method
create a new abstract class to keep build craftable ( w . r . t . buildcraft ) for fix # 2882
modified layout parameters for drag target bar in DeviceProfile . java to ensure correct positioning of the search bar and adjusted layout constraints
change the execution order of the YahooSession class from run method to start method to ensure proper execution of the session and prevent potential threading issues
set the ` ms ` variable to ` null ` and adjust exception handling for the ` metaStoreClient ` to improve null safety and simplify error handling logic
updated display script retrieval to use Locale . DISPLAY instead of the default locale to ensure that the default display script is honored for the default locale in the Locale class
updated method calls to use static imports for BASE _ URL _ PROP and CORE _ NAME _ PROP in Replica . java to streamline dependencies by removing unnecessary imports
replaced ThreadLocalRandom with a Random instance in StoreDirectTest . java to improve randomness and reduce dependency on ThreadLocalRandom
added launcher readiness check before restoring backup data to ensure that backup operations are only performed when the launcher is ready
updated exception messages to include space information in Cell . java to improve error message clarity for debugging purposes
camel - 5537 : added unit test for resilience to make it easy to understand
rename ` mBodySpace ` to ` mBarSpace ` across multiple classes to better reflect the purpose of the space in bar space instead of body space
refactor ShadowProcess class structure to improve code maintainability and readability
filemessagehistorytest : migrate to hamcrest assertion instead of junit assertion
added various logger configurations to the Grasscutter class to improve logging control for better debugging and analysis
changed methods and variable names from instance variables to static for better accessibility to enhance performance by avoiding unnecessary object creation when the query is already set
updated condition checks in Launcher . java and added getState method in Workspace . java to ensure proper state handling during workspace transitions
rename various assertion classes and constants across multiple files to improve clarity and consistency in naming conventions
updated condition in SnippetTemplate . java to check if caching is enabled before notifying new template to ensure notification of new template is only triggered when caching is enabled
added new constants for " solrcore " and updated data import handling to improve clarity and functionality in managing core scope sessions
updated database schema to include primary keys for measurement table and added assertions to ensure primary keys are correctly retrieved and retrieved from the database
fix pantheon permission command argument name ( # 139 )
refactor HttpSessionContextIntegrationFilter to simplify session creation logic and enhance security context handling to improve code readability and maintainability by reducing complexity in session management logic
8287204 : c2 : assert ( b - > is _ dead _ region ( ) ) fail : miss deadregion in compiler . c2
fix typo and spell error in dependencyparser
re enable and disable HighResolutionTimer in SnowflakeIdGeneratorTest to ensure proper timing during concurrent access testing
added a static UI feature to AppSettings and updated MainFragment to conditionally hide the toast bar based on user settings to enhance user experience by allowing a more flexible UI usage based on user settings
replaced a lambda expression with a lambda expression that properly releases the pLuid to ensure proper resource management and prevent memory leaks
updated parameter handling methods to use putIfAbsent for better clarity and safety to enhance code robustness by preventing null pointer exceptions during parameter initialization
updated message dialog messages in MEncoderVideo . java and NavigationShareTab . java to use standardized message retrieval methods to improve maintainability and localization support of the user interface
tika - 3971 -- add mime definition for tika - ooxml , , and / vnd . openxmlformats - officedocument . xlsx for tika - ooxml
refactor glue loading and feature path handling to improve logging to enhance clarity and maintainability of the code
camel - 18171 : remove system . lineseparator ( ) from the xml output for camel - eip documentation
do n ' t wait for migration from remove node , mention flag to skip
fix : fix problem with save default audio device if dev name be null
added WebSocketConfig and updated ReactorNettyWebSocketClient methods to accept it to enable dynamic configuration of WebSocket frame size and improve client performance
add @ isuitelistener to the cache validation listener , to ensure it only execute once per test
update content length handling in MoreIndexingFilter to trim whitespace before adding it to the document to ensure that the content length is only included if it is not empty
fix deadlock in case of deopt problem
refactor time series creation by extracting it into a separate method and adding a try - catch block to handle potential PathAlreadyExistException to improve code clarity and handle potential exceptions during concurrent insertions
added a check method to the Authz class to provide functionality for checking authentication results
changed access modifiers from public to protected for several methods in the Shadow classes to restrict access and enforce encapsulation within the class hierarchy
cloudstack - 2120 : when create domr , check if domr reserve or reserve state in the listvolumes api call . also when domr reserve state be set to allocate
updated HttpParser to simplify string assignment and modified test methods for clarity to enhance code readability and ensure correct functionality of HTTP compliance checks
refactor thread initialization by replacing the completeInitialization method with a new method to improve clarity and separation of concerns for better maintainability
added an ` getExternalStoragePublicDirectory ` method and a corresponding test in ` ShadowEnvironment ` to enable testing of external storage directory functionality in a controlled environment
[ jbrules - 3684 ] add test case for mvel type coercion with jdk 9
reformatted code for improved readability by adding line breaks to enhance maintainability and clarity of logging configuration
ambari - 20827 . actionnode : fix stack trace in exception ( jonathanhurley )
add support for convert ' tel : ' to ' tel : ' in sip util . converttonumber ( ) .
updated visibility logic for shared file icon in FileListListAdapter to enhance user experience by showing shared file status accurately
hive - 26016 : remove deprecate hive . optimize . sort . dynamic . partition . threshold in favor of hive . optimize . sort . dynamic . partition . threshold ( ashutosh chauhan via thejas nair )
hive - 23790 : propagate confoverlay into operation for easy override ( jesus camacho rodriguez , review by prasanth jayachandran )
refactor data structures to use ` Arrays ` instead of ` Lists ` to improve code readability and reduce dependency on external libraries
fix junit test after rename of field and field in ogr .
added a method to handle exceptions in the StepListenerSupport class to improve error handling and provide a consistent interface
remove nonsensical comment : shuffling input do not grant extra privacy .
camel - 8461 fixed the issue that camel - netty - http do not respect the port parameter
use log instead of system . out . println in testnonblockingapi .
fix arrayoutofboundsexception in dbconnectiondialog when there be too few connection
add a new class method with same name as the enclosing class , which be easy to grok
added support for platform management in ManagementFactory and created ExtendedPlatformComponent class to enhance monitoring capabilities and maintainability of the management framework
added code to replace single quotes with double quotes in SQL statements to ensure proper SQL formatting for consistent query execution
updated package paths in Bleutrade DTO tests to include " org / knowm / xchange / bleutrade / dto " to organize package structure for better clarity and maintainability
refactor TextEscapeUtils class for improved readability to enhance maintainability and reduce complexity of the codebase
added a FILTER _ PARAM constant and modified the instantiation of FilterQuery in AbstractSpatialFieldType . java to improve query filtering flexibility based on user - defined parameters
removed progress display logic in GpsLoggingService and added post to AutoEmailHelper to update results email to enhance user experience by providing feedback after the main form is displayed
changed ` ArrayList ` to ` HashSet ` for ` inlinks ` and changed method implementations from ` get ` to ` iterator ` to improve performance and ensure better iteration over collections
fix tradfri discovery service stop unexpectedly ( # 7594 )
updated filter logic in HiveMetaStoreClient to accept a boolean parameter for filtering based on server mode to enhance flexibility in filtering behavior based on server settings
added ' Abandoned ' to the ticket model and updated statuses in TicketModel and TicketsPage to include them to enhance ticket management and provide additional information in the statuses
set columnAliasPrefix to a default value of " c " in multiple platform classes to ensure consistent initialization of the column alias prefix across different platforms
updated LlapRowRecordReader and LlapRowInputFormat to use BytesWritable instead of Text to improve data handling and support for binary data representation
feat ( native ) : add non - native jvm detection
modified the conditional logic for copying ` out ` entries based on ` type ` to improve clarity and maintainability of the code when handling different object types
added support for a new daemon mode option in the TerminalClient to enable users to launch the pendant UI programmatically within the application
added a new class FlushIndexTask with an implementation of the FlushIndexTask class to provide a task for flushing the next buffer in the Lucene benchmark process
allow partitioning when create binarymemtable and memtable ; patch by jbellis ; review by brandonwilliams for cassandra - 1472
added support for SEASONS output in MediaLibraryFolder . java to enhance compatibility with additional text formats
added a new file LocalSocketAddress . java to test network address compatibility with IPv6 to ensure that the application correctly identifies and handles IPv6 addresses in network interfaces
updated grid size coordinates in GridSizeMigrationTask . java to align grid size points with new configuration requirements
simplified method calls by removing unnecessary calls to getName ( ) and getField ( String ) to enhance code readability and maintainability by reducing redundant method calls
added read - only option to context to allow modification of an object in a read - only context
refactor LookAndFeelCommand class to improve code organization to enhance maintainability and readability of the command logic
updated the calculation of lastRunEnd to use ceiling instead of floor to improve accuracy in determining if the last run start is within the box
added handling for EOFException and ClosedChannelException in GracefulStopTest to improve robustness by ensuring all relevant exceptions are handled correctly
simplified the removal process in NetJavaImpl by using a dedicated method for listener management to improve code readability and maintainability while ensuring thread safety during listener operations
networkparameters : remove obsolete reference to acceptableaddress in javadoc
added a condition to set the allowAccountAssetOptimization property based on CommonParameter to ensure proper handling of asset optimization settings within the dynamic properties store
add a new constant J9 _ GC _ POLICY _ NOGC and set it to 0 to disable garbage collection for the specified VM class
validate contract protocol buffer in transactionCapsule . java to ensure proper error handling for invalid protocol buffers
remove exceptiontypechecking . class , since it ' s no longer use
fallback to english if no localization available for the help page .
add a new class ProcessorInfo to manage CPU processor availability to enable dynamic control of processor settings based on system security
add option - html to generate html output ( default ) for bug reporting
[ logback ] fix logbackxmllocation npe ( # 8458 )
refactor HostLevelParamsHolder to utilize ServiceComponentRecoveryChangedEvent for data updates instead of separate variables to enhance clarity and maintainability of the recovery event handling logic
update ` SleuthTagPropagationAutoConfiguration ` to configure the handler ' s creation order based on user configuration to ensure consistent handling of tag propagation settings across different application contexts
refactor rustDepType assignment to use a switch statement for better readability to improve code clarity and maintainability by simplifying the switch statement
updated ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` instead of ` Map < String , String > ` parameters to enhance functionality by allowing multiple query parameters for oauth2 login links
hbase - 6696 first key be now seekable to be able to seek to the first kv in the storefilescanner ( feng honghua )
hhh - 6761 : deprecate generationtiming ( ) in favour of use the default value ( ) method
- add test for layernorm ( ) function ( # 9967 )
refactor file sharing functionality by utilizing a new method in FileOperationsHelper to streamline code and improve maintainability by centralizing file operation logic
add a new test class LiquibaseUpdateMojoExecutionTest for verifying the execution of update commands to ensure correct functionality of the update Maven plugin configuration through automated testing
convert the proxy type from lowercase to uppercase to ensure consistent formatting of the proxy type name
add a new file ' mod _ minecraftforge . java ' that implements the forge . mod . forge . forge . mod . minecraftforge . getversion method . close # 887 .
updated JdbcDatabaseSnapshot to improve table column retrieval and caching to enhance performance by optimizing caching based on case - sensitive column names
added a Container container with a label in the CSSBorderTest to enhance the UI with a visual representation of labels in the UI
if the load balancer retry on status code fails , wrap it in a custom exception
updated superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure proper layout behavior for child views
updated the calculation of parentTaskName in PinotHelixTaskResourceManager . java to simplify the task name generation by removing unnecessary separator
added error handling for invalid AddServiceRequest in ServiceResourceProvider to improve robustness by providing clearer error messages when input is invalid
remove unnecessary code in indexdatabase # acceptunversionedfilesonly ( ) , since it ' s actually superfluous .
[ giac ] round ( x ) now consistent with input bar . [ 1 , 2 ]
add some comment to the AnonCipherWithWantClientAuth class to improve clarity on authentication processes
mark multiple methods as deprecated in ProducerTemplate . java to indicate that these methods should no longer be used and may be removed in future versions
refactor JLayer class for improved readability to enhance maintainability and ease of understanding for future developers
fix flakiness of evictiontest . testallallentries ( # 21155 )
updated method names and variable references in Md5PasswordEncoder for clarity to enhance code readability and maintainability by using more descriptive variable names
removed redundant variable for ViewTreeObserver when adding and removing global layout listeners to streamline code for better readability and maintainability
updated Response class for improved error handling to enhance reliability of response processing
fix : use long . max _ value instead of long . min _ value for sstablemetadata # getlasttimestamp . patch by jbellis
change the preferred size of the dialog so that it do n ' t shrink the screen .
added checks for non - null and non - empty checks for replies in TweetActivity , TimeLineCursorAdapter , and TimelineArrayAdapter to ensure that replies are only processed when valid , improving robustness
refactor HitbtcBalance class to improve serialization and equality checks to enhance readability and usability of the HitbtcBalance class
fix ( sql ) : fix order by in statement with in clause
hbase - 23305 fix retriesexhaustWithDetailsException to return addrs . tostring ( ) instead of s .
bugfix # 249714 , close open file when it be cancel because it ' s a bad idea
[ hc ] update dependency of camel - json - to - groovy - plugin to 5.0 . 0
modify energy subtractal logic in PipePowerWood . java to correct energy handling to ensure accurate energy management in the system
[ iotdb - 1751 ] fix can not create tpcapdf in sessionstate . createstate ( # 8364 )
updated the constructor parameters from " tid " to " id " in BitstampWebSocketTransaction . java and added a new test method in BitstampStreamingMarketDataServiceTest . java to enhance clarity of data retrieval and ensure functionality through testing
[ reindex ] fix scheduler overflow bug ( # 2214 )
add citeproc dependency and fix citeproc dependency ( # 7467 )
improve sql query construction to avoid exception if column be miss .
apps - 1492 do n ' t show definition for equation in exam , but not equation
fix a npe in the case where the user edit a text field with no component ( i . e . add a enter ) .
hbase - 11393 introduce caching for meta scan when startrow be null ( yu li )
[ optiq - 405 ] use more specific initialization script for minimr ( # 405 )
8278234 : doc of [ strict ] math . floordiv ( long , int ) erroneously document int in @ return tag
added a new BooleanFlag named ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to allows enabling or disabling transient taskbar functionality
[ flink - 34084 ] [ runtime ] add taskexecutor class to archiveresultiplenodeprocessor and accessexecutionvertex
added a conditional check to set density to 3 f when scaling is 3 to ensure consistent density for graphics with diverse scaling
rename the variable ` optional ` to ` vararg ` and update related methods accordingly to clarify the distinction between optional and variable - based parameters
hbase - 25836 addendum add exception to regionstatestore # printregionstatesagestore ( # 3282 )
fix testclusterupgradeutils . testuniversememberslaptest flakiness [ hz - 2340 ] ( # 24425 )
updated warning messages and improved the class names for clarity in AsyncHttpConnection . java and added a new SelectChannelAsyncContextTest . java file to enhance code readability and ensure correct handling of asynchronous operations in the application
added a boolean parameter to the SearchUiManager constructor to allow for the option to show an arrow in search results
added logic to set lock mode to read committed when using isMVStore to ensure correct lock mode handling in the database operations
[ gr - 21266 ] skip aarch64 / amd64 test on linux .
# 654 - fix : integer / integer cast problem in scalar api ( # 654 )
feat : add more meaningful error message when specify only one primary key
added conditional logic to set drawable resources based on LMP status in multiple classes to improve app visuals for devices running the LMP theme
fix an npe from query flutter view ( # 4422 )
added methods to retrieve content type , xss protection , and http strict transport security in HeadersConfigurer to enhance header configuration flexibility for improved security management
rename ObjectEnumerableAssert in the codebase to improve clarity and consistency in naming conventions
[ java ] refactoring : move smoke test to more appropriate package
added type attribute to @ aggregateroot to fis test failure
added support for Python prebuilt libraries in the Binary and Test descriptions to enable proper loading and resolution of prebuilt libraries in the build system
added functionality to handle client authentication in NetServerOptions and NetServerOptions classes to improve authentication flexibility and maintainability in the application
updated the path for REPLDIR and REPLCMDIR in HiveConf and MetastoreConf to ensure paths are correctly referenced with the current system context
modified the task view visibility check logic in RecentsView . java to improve handling of task views by prioritizing the primary and secondary task views
add timeout to the test to avoid hang in ci
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code and improve performance
add some comment and fix typo
set exchangeconsumnum before use it in operatortreegenerator .Consumeallchildrenpipelinebuilder ( # 9040 )
added usage of ClassLoaderHandler in the module - info . java file to enable the use of the ClassLoaderHandler for improved class loading capabilities
make bestsolution available to event thread ( if bestsolution be not set )
added JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive data
change the condition from checking if throwable is null to checking if it is not null to ensure proper exception handling in the code
updated null check in QueryTimeManager for query info retrieval to improve code readability and maintainability
fix auto workbench overlap with recipe which do n ' t have item in recipe stack . close # 1532
fix hdop in gl200text protocol ( fix # 604 )
renamed time column name to incoming time column name and updated related logic to improve clarity and consistency in naming conventions
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token004 . java ` to ensure block production is appropriately awaited before proceeding
add initializable to the builder to inject it into the container
add support for long task timer in ` ` Observation . context ' ' ( # 3638 )
updated the SYNC _ DELTA _ RATE variable type and modified time calculation in AdaptiveFetchSchedule . java to improve clarity and correctness of delta handling in fetch time calculations
deprecate abstractfragmentinsertiontagprocessor . computefragment ( ) in order to keep compatibility with old templates
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety during concurrent access to the attributes map
http : / / issues . apache . org / jira / browse / amq - 4798 - fix regression in http : / / issues . apache . org / activemq / browse / amq - 4797
added new color constants and improved extractInto method to handle fallback color extraction to enhance color processing logic and support for dark text hints
fix for issue # 1011 : add data folder to sketch project list
updated the ` appendContent ` method to include an optional title parameter and modified related logic to improve flexibility in displaying notes based on user preferences
removed the initialization of SessionRegistry in ConcurrentSessionControllerImpl to simplify the session registry initialization process
added logging for connection complete and failed connection attempts in NettyStreamingService . java to improve error handling and provide clearer diagnostics during connection attempts
replaced Factory with Proxy in multiple files to utilize the internal JavassistProxyFactory for improved proxy management
replaced ConcurrentLinkedQueue with ConcurrentHashSet in QueuedThreadPool . java to improve thread management for better performance and flexibility
refactor socket exception handling to simplify string concatenation to improve code readability and maintainability by reducing complexity in string concatenation
added a method to check if the view directory is within the repository directory to improve error handling and provide feedback when the view directory is within the repository
remove ` ` drag and drop ' ' from the tab header area , because they do n ' t exist any more
added and modified test configurations for handling compressed class pointers in various test classes to enhance flexibility and ensure proper handling of compressed class pointers
clean up peersync error log and remove unnecessary state check
deleted the ConnectionHook . java file to eliminate unused code to streamline the project
solr - 12313 : remove testInjection . waitforreplicasinsync with zk controller
fix restswaggerarrayenum and restswaggerarrayenumtest after recent change .
update version to use jorje . services . version . current . external instead of hardcoded value
8133802 : fix a11y and html issue in the java . lang . model
added a singleton instance for the AggregateEngine and modified its usage in OverflowQueryEngine to improve thread management and ensure better resource utilization in thread execution
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve memory management and flexibility in buffer management
added scrollToPositionWithOffset calls in UploadActivity for improved layout management to enhance user experience by allowing easy navigation through thumbnails
fix ( griffin ) : sqlgenerator should override column alias from non - existing column ( # 2323 )
refactored animation handling in LauncherAnimUtils and added transition animation methods in LauncherStateTransitionAnimation to improve animation performance and readability in the launcher transition animations
add a check to disable the default user agent in httpClient to improve flexibility in user agent management
added support for pubsubhubbub functionality in FeedRefreshUpdater and ApplicationSettings to enhance user control over pubsub subscription settings
changed the access modifier of the finalize method from public to protected to enhance encapsulation and restrict overriding capabilities
updated methods in StubJarClassEntry to include synthetic classes and modified test assertions to ensure proper handling of synthetic classes and reflect correct ABI calculations
added a new file DSpaceWebapp . java that implements a web application to provide a base class for managing DSpace web applications
added table alias retrieval and error handling in CalcitePlanner and RowResolver classes to ensure table aliases are present and provide clearer error reporting for missing columns
[ flink - 29788 ] [ runtime ] add ' trigger ' identity to the jobgenerator
updated logging messages in Wallet . java for better clarity and added more informative error messages to enhance error reporting and improve debugging during transaction broadcast failures
include specific exception when attempt to add a map . put ( ) .
hive - 27180 : enable rcfile optimization per default ( ashutosh chauhan via thejas nair )
added a new enum TlsClientCertPolicy to manage client certificate policies in the Constants class and updated GitBlitServer to use it to improve code clarity and maintainability by categorizing client certificate policy constants
removed a condition checking for alert message and stored a new CHALLENGE message to simplify subscription handling and improve maintainability
added headers and subprotocols to the ProxyWebSocketHandler and WebSocketRoutingFilter classes to enable handling of HTTP headers for WebSocket connections
added debug logging for fetching query results in HiveQueryResultSet to improve traceability and debugging capabilities during query execution
fix issue with dimension display in holiday example
fix finalizeprivatefields to handle inner class field correctly
modified the UnexpectedJobExecutionException class to improve error handling to enhance job execution stability
deleted the unused imports and modified button opacity logic in AquaLookAndFeel and AquaUtils to streamline the codebase by eliminating unnecessary methods and improving button visibility management
updated DrillSidewaysQuery and DrillSidewaysScorer to use maxCost instead of maxFreq and modified maxCost logic to improve clarity and correctness of query performance and cost handling
apps - 2371 re - add class to reduce memory consumption
refactor constructors in various pool classes to remove the pre - fill option to simplify object creation and ensure consistent initialization of pool objects
added a check for ` isInLauncher ` in ` TaskbarLauncherStateController ` and updated the state update logic in ` TaskbarStashController ` to ensure taskbar state updates correctly when the application is not in the launcher
added null check for default style in CascadeDeleteVisitor to ensure robustness by preventing potential NullPointerExceptions
refactor GuiUtil to simplify size settings and improve MarqueeLabel class to enhance code readability and maintainability while ensuring proper layout management
updated icon retrieval logic in FileTreeViewHolder for better file type handling to improve clarity and maintainability of file icon representation
updated assertions from ` isEqualTo ` to ` contains ` in ` ParallelUniverseTest . java ` to allow for more flexible testing of resource qualifiers
fix : thread safety issue in xmlreporter # processpassedtests
native : add a test for native query runner
clientcontainer : deregister the shutdown thread to prevent memory leak
add sybaseASE15dialect . drop temporary table ( temporary table after use )
andreastolftolfsen : add a couple of htmlunit test , ignore them for htmlunitdriver which do n ' t support them
refactor multiple Solr - related classes to improve code structure to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter class to improve code readability to enhance maintainability and facilitate future updates
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability of memory allocation logs for better debugging
fix miss handling of skip ad group in ad tag loader
replaced the direct equality check with a boolean variable for clarity to improve readability and maintainability of the comparison logic
use unit _ hz instead of deg _ text for wave effect
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
replaced TreeMap ' s putAll method with a direct instantiation of TreeMap to simplify code and improve readability by eliminating an unnecessary method call
optimise add normal element to vertex format ( # 4699 )
added tracing tagging for gRPC messages in multiple interceptor classes to enhance tracing capabilities for better visibility of gRPC messages during processing
updated time zone handling in ScheduledTrigger . java by replacing ZoneId creation with TimeZone . getTimeZone to improve code clarity and maintainability by using standardized timezone conversion
added AsyncBucket and InMemoryExtension classes and refactored related classes for better organization to enhance code clarity and support for asynchronous and memory operations
modified the logic to determine the classes directory based on the presence of a test class to improve robustness by ensuring the correct classpath is used for test execution
removed unnecessary whitespace in AbstractConnector . java and setHost method formatting to improve code readability and maintain consistent formatting
rename OngoingStubbing . java file to improve clarity and consistency in file naming
added an optional parameter ` webServerToReuse ` to the ` Daemon ` class and updated related methods to allow for conditional reuse of the web server based on user configuration
renamed ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and added a new import in ` SolrTestCaseJ4 . java ` to improve clarity and maintain consistency in variable naming and enhance code organization
ww - 4022 - ensure that at least one allowlist be use and clear before add parameterinterceptor to avoid deadlock
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the correct item writer is used for transformer processing
[ drools - 6087 ] fix for OverlapHitPolicy bug ( # 2368 )
[ beam - 3988 ] add test for sliding window accumulator .
added conditional check for ` allAppsDirty ` before binding all apps and improved logging message format to ensure apps are only bound when necessary and to provide clearer log output
camel - 10727 : camel - management - allow to turn off the file watcher by default .
modified import statements and formatting for clarity in Solution . java to streamline code for better readability and maintainability
8048549 : [ macosx ] disable usage of system menu bar if awt be embed in fx
fix set location for fall fall ( # 501 )
refactor query logic in SimpleJpaRepository to use a Specification for better readability to improve code clarity and maintainability by using a more descriptive approach for query handling
added timestamp and parent hash fields to the builder in BlockUtil . java to support dynamic genesis block arguments
graalcompiler : remove support for loopafepointinsertionphase and use safepointinsertionphase instead .
refactor child list handling in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve code readability and prevent NullPointerExceptions
make artifactresolver public so it can be reuse elsewhere
stop all thread on interruptedexception . ensure that we do n ' t close client thread
added a check to ensure maxBufferedDocs is at least 1 to enforce parameter validation to prevent illegal argument exceptions
added state management for logging in in LoginActivity to improve user experience by ensuring proper login after state changes
added null checks for ` next ` and ` valueExtractor ` in ` Pump . java ` and created a new test for uuid sorting in ` PumpTest . java ` to improve error handling and ensure correctness of UUID processing logic
modified access modifiers for ` loadbalancer ` , ` serverWrapper ` , and ` commExecutor ` in ` HttpShardHandlerFactory ` , and ` LBHttpSolrServer ` classes to enhance encapsulation and improve code readability
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy and created a new test class for DefaultAuthenticationServiceSelectionStrategyTests to accurately reflect the current ordering and ensure proper functionality through testing
added Jetty server configuration in TestJNDI . java to enhance server functionality for improved data handling
hive - 21605 : optimize sorteddynamicpartitionoptimizer ( david mollitor , review by ashutosh chauhan )
change return value from checking for NioEventLoop to always returning true to simplify logic by removing unnecessary type check
hive - 23737 : fix potential npe in getnumrows ( ) ( jesus camacho rodriguez , review by ashutosh chauhan )
camel - 18492 : camel - kamelet - add option to export to camel - kamelets . thanks to karaf for the patch .
updated OSMJob . java to incorporate OpenStreetMap for authorization and handling of access tokens to enhance the upload process and ensure proper error handling during access to the OpenStreetMap
add more output to try and debug the test failure
added client authentication configuration to IoTDBRestServiceConfig and updated related classes to support trusted connections based on client authentication settings
fix issue with injection of child field with same parent ( # 2382 )
add initializability to bloom uri uniq filter , to be able to control the expected size and hash size .
updated cursor adapter from false to true and added a preference for refreshing in TweetPager to enhance user experience by providing a smoother interface interaction and preferences
updated the immediate header height ratio from 1 f to 75 f to improve layout responsiveness and accommodate larger header sizes
updated import statements to use ` jdk . nashorn . internal . runtime . events . RuntimeEvent ` instead of ` jdk . nashorn . internal . runtime . events . RuntimeEvent ` to ensure compatibility with the new event structure and improve code organization
ambari - 6180 . ambari server should inform user that host _ sys _ prepped be not present in ambari . conf ( dlysnichenko )
added a boolean parameter to the include method and introduced a new test class for unknown change log format logging to allow more flexible handling of log file extensions in the changelog processing
fix issue # 903 - remove lead slash from last page of default servlet page on io
added properties for entity and scores in StaticPipeline . java to enhance functionality by allowing dynamic assignment of scores based on entity properties
modified file path handling and import statements in Frame . java and Utils . java , and added configuration for Whoops . enabled in WhoopsModule . java to enhance file path management and enable conditional execution based on application settings
[ geos - 8044 ] improved data store lookup base on local name in geoserver
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
rename the test class from MultiLineTests to MultiLineGridlikeTextTests and add two new test classes for multi - line registration to improve clarity of test purpose and enhance testing for multi - line text functionality
fixed unit test which fail randomly on the ci server
remove unused writeMeasurementScheams list in tsfilewritealignedwithtsrecord ( # 2219 )
8258759 : [ testbug ] gc / g1 / testPromotionfromSurvivortoTenuredafterfinalgc . java fails due to wrong var in dump
updated logging configuration paths from " slf4j - log4j12 - . jar " to " slf4j - reload4j - * " to ensure compatibility with the newer logging features in the Jetty server
[ huebridgehandlerosgitest ] fix flaky test ( # 15637 )
updated package declarations for AboutActivity , CrashHandlerActivity , and EditorHandlerActivity to reflect the new structure to better organize activities by their respective classes
@ ignore test until http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 1276 be fix
added a new constructor to PullRequestMergedEventsStream that reads the Pinot schema from a file to improve handling of schema deserialization and enhance error logging during data processing
[ spring ] fix checkstyle violation in springfragment
[ hotfix ] fix checkstyle violation in taskslot
[ java ] replace usage of fire _ exception _ on _ failure with close to not throw exception
added lock release handling and improved logging in MoveTask . java to ensure robustness by handling potential LockException during lock removal
replaced custom property loading with a resource bundle retrieval for GEM _ PATH and RUBY _ VERSION in JRubyBackend . java to improve flexibility and error handling during resource loading
transaction : use byteutil . empty _ byte _ array instead of zero _ address for null receive address .
removed redundant null initialization for classInfo in ClassGraphClassLoader . java to streamline code for improved readability and maintainability
[ flink - 22398 ] [ test ] fix the test case of jobmanagerstat startup test
fix : [ googletos ] add enum value for new datastream resource ( # 9672 )
added a bundle to FileDisplayActivity to support additional data during data display
changed the loop from break to continue in ParticleEmitter . java to ensure the loop continues rather than exiting on null conditions
updated expectations in AmbariManagementControllerImplTest to expect fewer cluster instances to accommodate new cluster scenarios and ensure tests accurately reflect expected results
removed nullable annotation from @ Column in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry . java to simplify the column definition and improve error handling for missing records
8203182 : remove intermittent key from timezone / bug4823811 . java
replace direct argument addition with a dynamic path rewriting in RmStep . java to improve flexibility by allowing dynamic path modifications
fix deconz bridge discovery ( # 5974 )
added an attribute getter and setter in ShibbolethCompatiblePersistentIdGenerator to enhance attribute handling and improve code maintainability
refactor RequestValidationService to improve dependency injection to enhance code readability and maintainability
added a new bundle for logging keyboard visibility and modified the handling of keyboard close events to improve logging capabilities and ensure keyboard visibility is controlled via a dedicated message data
removed unnecessary line breaks in FileNodeProcessor , MManager basic test , and MTreeTest classes to improve code readability and ensure proper resource management during tests
renamed NavigableMap and NavigableSet classes to improve clarity and consistency in naming conventions
add a testslurpfile ( ) method that check if slurp file exist or not .
added @ FunctionalInterface annotation to multiple classes to indicate that these interfaces are intended to be functional interfaces for better compatibility with lambda expressions
refactor span retrieval and validation in TraceWebFluxTests to use a unified method for retrieving span names to enhance code readability and maintainability by reducing repetition in span retrieval logic
added a new ` EDATE _ CONVERTER ` to handle date conversion and updated the ` ArrayWritableObjectInspector ` to support it to enhance date handling capabilities in Hive ' s serialization and deserialization
replaced string splitting with regex pattern for better readability to improve clarity and maintainability of the code
apps - 148 only parse start and end , if the last value be nan
refactor column count validation in SemanticAnalyzer to improve clarity and maintainability to enhance error reporting by distinguishing between column counts for better debugging
refactor the score handling logic in WANDScorer . java to improve clarity and correctness to enhance code logic for better maintainability and ensure correct behavior of max score updates
clarify the example of exception handling in correspondence . compare by use an explicitly cod correspondence create with the new correspondence constructor .
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to improve code clarity and avoid potential naming conflicts with specific classes
initialized ` curPixVal ` to a default value and created a new test class ` WhiteTextColorTest ` to ensure consistent pixel value handling and verify the proper rendering of white text on a black background
remove deprecated subtypes method and replace with supertypes collection in biome dictionary
corrected a typo in the variable name from " withinTolerance " to " exceedsTolerance " to improve code readability and ensure consistency in naming conventions
added test stability rules for local and post - submission to improve test stability for production and production
update package - info . java files for mmm and ppp to ensure consistency and clarity in package documentation
[ java ] fix snippetutils to handle empty log file suffix correctly
updated PythonBuckConfig . java for improved functionality to enhance performance and maintainability of Python build settings
added unit tests for handling system shared library names in ShadowPackageManager to ensure correct functionality of system shared library name management
add new alarm type in meiligao ( fix # 468 )
fix nullpointerexception in powerinfos ( # 1572 )
refactor cache management by replacing IOUtils . trimCache with a separate trimCache method and updating UI components to improve cache management efficiency and provide user feedback on cache size
fix ( build ) : update dependency com . google . api . client . util to com . google . common
# 1208 - return 401 instead of 403 for unauthorized access
refactor ` schedulePeriodically ` method to remove unused parameter and improve method calls to enhance code clarity and maintainability by reducing unnecessary suppressions
updated the refresh mechanism in FileDisplayActivity to use onItemClicked instead of refresh to improve user experience by directly handling file selection based on remote path
added a condition to select a random input stream when a specific file matches the specified path to enhance flexibility in handling multiple input streams while maintaining existing functionality
refactor create _ table method to accept CreateTableRequest instead of EnvironmentContext to simplify method signatures and improve consistency in handling table creation
fix bug where rate fragmentIns be not be start / abort if already run
added checks for minimum indentation level in multiple parser classes to ensure proper handling of indent values in block parsing
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue # 250
remove control frame check from framegenerator . generateframeframe ( ) that do not need it
added visibility control for the collapse handle view to ensure the handle is shown when it is expanded
added new files for handling HTML and JavaScript in Issue475 . java and integrated them in Jooby . java to ensure proper handling of special characters in HTML and JavaScript in the application
added a condition to return early if the units to scroll is zero to improve performance by avoiding unnecessary processing when no units are available
change the condition from " > 1 " to " ! = 1 " in contract list size check to ensure contract processing only occurs when there is more than one contract present
added methods to add and put enums in JsonArray and JsonObject classes to enhance functionality for handling enum values in JSON data structures
added hashCode method to IPPPrintService and created TestRaceCond class for validation to ensure consistent hashCode implementation for print services
dialect should use getversion ( ) instead of getversion ( ) to avoid reflection
do n ' t create a new payment context if there be no platform fee
updated exception handling in BatchUpdateException , PreparedStatement , and Statement classes to improve error management and maintainability of database operations
clear buffer data first subsample by default when buffer encryption be enable .
removed the ` public ` access modifier from several ` Asynchronous ` and ` CircuitBreaker ` classes to enforce package - private access level for better encapsulation
added Retrofit import to Part and PartMap classes to enable retrofit functionality in the Part and PartMap classes
updated JsonBuildHelper , ParamsBuildHelper , and DocGlobalConstants to improve parameter handling and simplify type handling to enhance code clarity and maintainability by consolidating parameter construction logic
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the AbstractFloatingView class to support additional taskbar functionality in the application
fix : update gapic - generator - java with mock service generation fix ( # 1358 )
update alpha calculation logic in ClipAnimationHelper and add hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on task states
removed an argument from the createRenderScript method call to simplify the method signature and improve code readability
whitespace change to trigger full ci build ( incl . regression test )
system bundle can now be a plug - in or disabled ( yay 1.0 )
hbase - 27304 - fix checkstyle violation in integrationtestsparkbulkload
add low false positive ratio to keychaintest to avoid false positive failure .
refactor configuration handling by replacing ` rocketConfiguration ` with a dedicated configuration object to improve clarity and maintainability by ensuring the correct configuration is used throughout the application
cloudstack - 3223 : findattcache ( ) return a null if it do not exist in the cache
add null check to defaultrecordstore . todata ( ) to avoid npe
kvm : improve error handle when host can not be add to a kvm ( # 6502 )
updated error messages in ParamAction . java to include NAME _ ATTRIBUTE and VALUE _ ATTRIBUTE to enhance clarity in error reporting for missing attributes
refactor BaseStubbing and ConsecutiveStubbing constructors to accept a Object parameter to improve flexibility by allowing different types of mock instances
strip params from method parameter and file in getmethodline ( fixes # 518 )
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the new version release and ensure version tracking accuracy
trac - 5502 avoid arraylist creation in outputfilter for allowed command
[ geot - 5149 ] do not use magic key for symbol space , use label
ggb - 2174 resize popup when user click on the toolbar and move to the bottom of the toolbar .
updated comments in ValidationSuite . java to remove underscores to improve clarity and consistency in the documentation
introduced a new ` StartingWindowListener ` class and updated the implementation to use it to improve code clarity and maintainability by centralizing the transition manager management
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code documentation and maintain consistency with inherited methods
updated exception messages in CheckPackageAccess . java to specify PackageAccess and PackageDefinition security exceptions to improve clarity and accuracy of error handling in package access security checks
increase executor service termination time and add assertion to ensure thread completion before test execution
[ github - 269 ] fix break logback configuration on xlog . load ( ` ` xxx . util - logging . loggingenabled ' ' ) .
added @ JsonIgnore ( true ) annotations to Schema . java to prevent serialization of sensitive data
increased test timeout from 5000 ms to 10000 ms to allow more time for tests to complete successfully
mahout - 492 - add score to snbc test , minor fix to simpleNaivebayesclassifier
ambari - 7006 . add audit module to the CheckDatabaseHelper . java file to enhance audit capabilities and improve module integrity during application startup
doc : correct the protoctotype javadoc ( # 1856 )
added a check for tableIsTransactional being null to ensure table initialization is validated before proceeding
[ java ] remove redundant call to writefragment in recordingwriter . onblock .
fix a problem with cbe decoder and subtitle with offset _ relative
ds - 3769 add alias to group datapoints in test
updated currency pair identifiers and added new pairs for BTC , LTC , PTC , DGC , and DGC in VaultOfSatoshiBaseService . java to standardize currency representation and enhance data integrity
hhh - 4767 - fix test that fail on hibernate 6 due to lack of sessionfactory
updated KafkaSender import paths in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to align with the new package structure and ensure compatibility with the latest Kafka library
add integration test for GWT binary building to ensure correctness of the build process
updated the visibility logic for loading causes and modified the initialization of ResultSetRenderer to enhance user experience by preventing unnecessary loading when query builder dialog is null
reordered variable assignments in EnhancedRandomImpl . java and EnhancedRandomImplTest . java for consistency to improve readability and maintainability of the code
added XMLSecurityPropertyManager initialization and updated related classes to use them to improve flexibility and maintainability of XML security property management
added default methods to interfaces and implemented them in subclasses to demonstrate inheritance and method overriding with default interface methods
replace the use of " LIKE ( ) " with " GLOB ( \ " * \ " ) " in the SqliteFieldPredicateView class to ensure proper handling of special characters in SQL queries
[ drools - 4868 ] allow droolsassemblerservice to access the list of DMN profile ( # 4869 )
fixed - rscript load by slave node should be load in redis cluster
[ gr - 21100 ] remove the need for setword / getbytefield in staticobject .
updated debug log statements to use verbose level instead of debug for several project generator classes to improve log detail and provide more detailed information during project generation
fix memory leak relate to fml proxy . close # 897
drill - 8080 : allow to configure http . jetty . server . handlers configuration in osgi environment
replace the handling of shortcuts to manage removed shortcuts and updated shortcuts lists more efficiently to improve shortcut management and ensure proper deletion of unpinned shortcuts from the workspace
remove unnecessary type check for non - string value in convert method call . fix # 3568 ( # 3569 )
removed navigation logic for home button in DetailFragment to streamline user experience by allowing easier navigation to the home screen
added a check for the Android market before including play services to ensure play services are only included when the device has a valid Android mark
update TableBlockParser to handle leading and trailing spaces in table rows to ensure correct parsing of tables containing spaces after headers
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enhance bridging functionality for better project management
refactor ` PotentiallyDeadCode . java ` to improve the handling of ` declared ` and source file paths to enhance code clarity and maintainability by using more descriptive methods for source file management
added support for diamond feature in the Attr class and created new classes for testing to enhance type inference handling and improve diagnostics for redundant arguments
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` onStartSendRequest ( ) ` in multiple files to streamline the code by eliminating redundant calls to ` onStartSendRequest ( ) `
added logging for registering cachemetrics in SolrCacheHolder . java to improve debugging by providing clearer information on cache registration registration
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper handling of authentication errors in the application
modify the condition checking for zero in the float comparison to ensure accurate detection of zero difference between two float values
added local configuration file for " logback . dev . xml " in JoobyMojo and Main classes to ensure proper loading of logback configuration for development and testing
added a new file JaasEventCheck . java to handle authentication events in Jaas to facilitate event processing for authentication failures and responses
refactor QuickstepTransitionManager to use a unified view animator for managing hotseat and qsb layers to improve code maintainability and streamline animation handling for better performance
updated ConjunctionSolrSpellChecker to use ` equals ` instead of ` equals ` for string distance comparison and added a new test class ` ConjunctionSolrSpellCheckerTest ` to ensure consistent comparison of string distance and verify exception handling for non - identical strings
changed the type of fetchers from HashMap to Map in ShadowSystemServiceRegistry . java to improve consistency and alignment with Java ' s data structures
[ hotfix ] remove unused leaderinformationchange log name
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
vm : increase the ` ` vm . script . timeout ' ' to allow for customization of the script timeout .
modify the JDBC table parameter handling in AbstractJDBCConnectorProvider . java to simplify the table parameter setup for better readability and maintainability
corrected the spelling of " SQL UPDATE " in multiple files to ensure consistency and accuracy in database update statements
replaced synchronized Map implementation with synchronized Map for schemaTypeCache to improve thread safety and performance in concurrent scenarios
updated header management logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy by preventing duplicate header additions
add ignore to ignore test that relies on files available from within cmU
mvstore : create storage directory before collect data
added http . setChunkedStreamingMode ( 1024 * 1024 ) to StarTreeJobUtils . java to optimize streaming performance for improved data processing
initial work on patch from josh from bug # 156 : add additional basictype support
hbase - 27408 fixed checkstyle error in hbase - protobuf
added a new Node class and a corresponding test method to verify behavior with recursive structure to ensure that the Node class does not cause stack overflow exceptions during bean population
added IOException to the getRemoteName method signature to properly handle potential I / O exceptions when retrieving remote names
updated exception handling to include IllegalArgumentException and added a HttpClient in ClientFactory and ClientFactoryImpl classes to improve error handling and streamline client creation process
refactor WebSocketConnection and ExplicitDemandTest classes to improve code organization and maintainability
add support for aspectj method security in the GlobalMethodSecurityBeanDefinitionParser to enable support for aspectj method security in Spring ' s security context
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by implementing proper hostname verification for SSL connections
added a ` remove ` method to ` OHLCSeries ` and a corresponding test in ` OHLCSeriesTests ` to enable item removal functionality in the ` OHLCSeries ` class
changed method call from ` invoke . joinInternal ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService . java ` and updated test assertions in ` CompactFormatIntegrationTest . java ` to ensure proper method invocation handling and validate expected data structure for improved test accuracy
replaced the method for removing joints from body to streamline the removal process to improve efficiency by reducing unnecessary operations
add null check to searchfilter . find ( ) to avoid potential npe .
[ flink - 8807 ] [ test ] fix licensing issue in sourcereadertestbase
added error handling for null files in DocumentsStorageProvider . java to improve robustness by ensuring that missing files are properly identified and exceptions are thrown accordingly
added new interfaces ` HookDefinition ` and ` JavaHookDefinition ` , for defining hooks and classes , and created corresponding test cases to enable proper handling of before and after hooks in the Cucumber runtime
refactor flushIfDeadlockRisk method to improve buffer management to enhance code readability and maintainability by reducing duplicate calls
modified the ` setExoOptions ` method to accept a boolean parameter for allowing TV tracks to enhance flexibility in setting video options based on whether live TV is allowed
dcm : fix user role not be remove from identifier collection ( # 3717 )
added a constant ` INVISIBLE ` in ` Color . java ` and modified the ` toString ` method to use this constant to improve code readability and maintainability by centralizing color representation
fix the bug for count ( * ) in cbo ( # 7452 )
initialize the deep variable to - 1 in InternalTransaction . java to enable deep processing for transaction management
escape the xml name before appending it in StreamInitiation . java to ensure proper handling of XSS values by escaping the name
updated work directory initialization to use configuration for better flexibility to allows for dynamic configuration of the work directory location
[ netbeans - 4294 ] activate rulesetfactory . isdeprecated ( ) on rule that should not be use
make amd64directcallop . jmp use the position of codebuffer instead of a dummy node .
lucene - 520 : fix bug in timerange construction ( # 792 )
refactor BitDocIdSet class to improve code readability to enhance maintainability and reduce complexity in the codebase
ambari - 21137 . improve metric source to not send multiple metric . ( mpapirkovskyy )
refactor DetailFragment and GalleryActivity to improve mime type checking and viewing logic to enhance readability and ensure correct viewing behavior for video images
fixed npe in blocktank . fill ( ) . close # 154
updated CsharpLibrary to handle RuleAnalysisLegacyBuildRuleView and adjusted Preconditions checks to enhance compatibility with new rule structure and improve null handling
of - 2030 : add handle for get pep service and dummy service .
added a null check for runtime in IntrinsificationPhase . java to ensure that intrinsicGraph is initialized before usage
fix ( metric ) : do n ' t call refreshactivework if it be empty
pdfbox - 5624 : stop use an old long object id and update the bfsearchcosobjectkeyoffsets a per sebb policy
added constructors to LwjglApplet for enhanced application management to improve flexibility and separation of concerns in graphics rendering
simplified the string representation of Docker configuration in EnvironmentAndSystemPropertyClientProviderStrategy to enhance readability and provide clearer representation of Docker configuration properties
refactor ` doPostAuthentication ` method to enhance password policy application to improve code clarity and support additional functionality for handling password policies
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
added a private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to use it to enable property resolution for LDAP authentication attributes
refactor Readable class to improve readability to enhance maintainability and reduce complexity in the code
replaced the manual pdf file handling with a test using TestSupport . WITH _ FONT to simplify the test execution when no pages are present
updated menu item icon reference from ` share _ menu _ item ` to ` ic _ menu _ share ` to improve clarity and consistency in the user interface
fix for jdk - 801612 due to change in jdk . specification . version
check is _ jdbc41 = false if getnetworktimeout ( ) return true
genericcontainer : fix typo in javadoc ( # 1711 )
replaced Set with List for managing filtered classes in Enclosed . java to improve performance and simplify collection management
added multiple @ Override annotations to CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasView classes to enhance code clarity and ensure proper method overriding
reordered the import statements in ChartProvider . java for better readability to improve code clarity and maintainability
fixed # 2404 and # 2404 store file name in bibtex database preference ( # 2404 )
modified JavacParser to return an empty list instead of a block statement to streamline the code by eliminating unnecessary empty block creation
added date handling to the User and UserRepository classes and corresponding test cases to enable retrieval of users based on their creation time and ensure correct functionality through tests
modified Test15FloatJNIArgs . java file to improve functionality to enhance testing coverage for float JNI
updated version display format in the plugin to use variable names to improve readability and maintainability of the code
fix a possible indexoutofboundsexception in mockprocesscontext # decrypt ( )
[ java ] add call to ensurenotreentrant ( ) to prevent premature resource leak .
modified dependency merging logic in OpProcFactory . java to check for null dependencies before merging to improve robustness by avoiding potential NullPointerExceptions during dependency merging
added timeouts to @ Test annotations in SslBytesServerTest . java to improve test execution stability by allowing more time for tests to complete
fix typo in peer . connect ( ) javadoc . resolve issue 284 .
updated RealtimeIndexingCoordinator and StreamProviderConfig classes to enhance type safety and structure to improve code clarity and maintainability by using an interface for segment management
modified FailureWatcher to check if exportedData is null before calling writeTo to improve null safety and prevent potential NullPointerException during data export
refactor popup positioning and improve touch calculations in RecyclerViewFastScroller . java to enhance code clarity and ensure proper popup visibility handling
updated messages related to restarting IntelliJ and added a check for tool window instantiation to improve clarity of code and ensure proper handling of instantiation in the project
added a conditional check for Windows platform before adding a JCheckBox to ensure that the checkbox is only enabled for Windows , enhancing user experience
updated import statements from javax . servlet to jakarta . servlet in HttpConfigurationAuthorityOverrideTest . java to align with the latest Jakarta EE specifications
updated window dimensions handling in QuickstepAppTransitionManagerImpl to support vertical bar layout to ensure correct dimensions are used for different screen orientations
added fullscreenExclusiveModeState property and updated visibility logic in XWindow and XWindowPeer classes to improve window state management by managing fullscreen exclusive mode visibility correctly
fix stringindexoutofboundsexception when played _ duration _ str
hive - 23333 : add credential to tez dag ( david mollitor , review by krisztian kasa )
camel - 12427 : use entryset to reduce memory usage . thanks to franz forsthofer for patch .
trim whitespace from thread name in SessionState to ensure consistency in thread naming by removing leading and trailing spaces
update error message in GpsMainActivity to specify that the next point can not be logged to a file to improve clarity of the error message for better user understanding
improve javadoc of job . deploy ( ) : wait for completion instead of wait for completion
add a new method ` testUnusedType ( ) ` to the ` Main ` class and a corresponding test method to demonstrate the usage of the ` Unused ` class with type safety
ambari - 22042 . update hbase master script to support hbase master deployment . ( mpapirkovskyy )
deleted the EventReaderDeserializer and EventWriterSerializer interfaces from the batch framework to streamline the codebase by removing unused interfaces
changed the return type of the performJoin method from GenericRecord to List < GenericRecord > across multiple classes to enable better handling of multiple output records in the join process
updated the check for maxDelegateLockPeriod to allow greater than or equal to 10512000 and modified related logic to ensure proper handling of lock period limits for improved functionality
disable the nics configuration if no network rate configure ( # 11697 )
remove cmcexchange constructor , no longer need
updated method to retrieve IP addresses from configuration and changed configuration keys from NORMAL _ CONF and TEST _ CONF to configuration to improve flexibility in handling IP addresses and align configuration with the updated configuration structure
add system property ` hazelcast . client . tpc . enabled ` to be able to control it by default . ( # 1653 )
upgrade swagger - ui version for cve - 2019 - 17495 ( # 7902 )
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality of big integer operations and facilitate modular arithmetic
modified the handling of the key assignment logic in NamedObjectList . java to ensure that a default value is set when the name is blank
hive - 22213 : querycompactor should delete empty directory when table be delete ( krisztian kasa , review by jesus camacho rodriguez )
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it in SerializationUtilities to support the registration of RCFileInputFormat in the serialization process
added default methods to retrieve Java type and category in TypeMapperComponent to enhance type handling capabilities for column operations
added error handling for invalid host headers in the Request class to ensure proper sending of errors due to invalid host headers
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use reflectionHelpers for time zone lookup to improve test accuracy and maintain compatibility with newer Android SDK versions
standardop : remove unused method from standardop # addoutgoingvalues
lucene - 3631 : fix bug that return wrong value from segmentreaders . get ( ) if there be no
add hasmainthreadprofile method to aggregatedao , to check if a transaction exists before rollup
added a check for annotation definitions in the InterfaceValidator to ensure correct handling of annotations to prevent compilation errors due to incorrect rules
change names from " greekLowerCase " and " irishLowerCase " to " greekLowercase " across multiple filter factories to ensure consistency in naming conventions across the codebase
fix javadoc warning from r1715839 bug 58365
( scott phillips ) add discovery support to the search capability in dspace 4.0
8258553 : ( tz ) upgrade time - zone data to tzdata2020c
updated SurfaceSyncGroup initialization to include " TaskBarController " to provide a clearer name for the surface sync group for better debugging
updated GridFsTemplate to use getId ( ) instead of getObjectId ( ) and modified file retrieval logic to improve ID handling consistency and simplify file retrieval process
updated test methods in ShadowDownloadManagerTest for clarity and added methods to retrieve total size and bytes in ShadowDownloadManager to enhance test coverage and ensure accurate retrieval of download size information
updated the condition for handling text insertion in TextField . java to improve readability and ensure correct newline handling during text insertion
fix share group bug ( # 7251 )
refactor statement handling in Lower and BlockLexicalContext classes for improved clarity and functionality to enhance maintainability and ensure proper terminal state management in the block processing
added hashCode implementation in IntervalXYDelegate and XYSeriesCollection classes using HashUtilities to ensure consistent and reliable hashing for instances of XYSeriesCollection
added cleanup to clientqueuedisruptiontest [ hz - 2197 ] ( # 24831 )
fix build and improve test coverage
updated method name from " serializeSpecialDoubleValues ( ) " to " serializeSpecialFloatingPointValues ( ) " in Gson . java to clarify the purpose of the method for better data handling
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` WalletTestZenToken007 . java ` to ensure proper synchronization of block production in tests
modified language tag canonicalization and added tests for language tags to improve accuracy in language tag processing and verification
cloudstack - 8187 . make kvm . ssh . to . agent configurable
changed access modifiers of the ScheduledAction class and its constructor in SchedulerWhen . java to enhance encapsulation and reduce the need for instance - level access
fix ( EmojiKeyboard ) : move PagerSlidingTabStrip import to correct package
added a check to exclude the " - " character from the filter in SimpleSearchQueryConverter . java to ensure that invalid filter inputs are handled correctly
updated text labels to use " Natural column order " instead of " natural order " to improve clarity of displayed text for better user experience
removed the usage of Arrays . copyOf for copying input to optimize memory usage and improve performance
corrected formatting of remoteAddr in HtmlSessionInformationsReport . java to ensure proper representation of addresses that may contain spaces
update topic name in itemstatetriggerhandler to point to smarthome / items
remove unnecessary sync block in FastHttpDateFormat . java to improve code readability and maintainability
added thread management for moving files in Hive to enhance file movement functionality by allowing multiple threads for robust error handling
added methods to wrap a timer with a specified period in the WrapTimer class to enhance flexibility in scheduling tasks based on user input
fix : add type for local date and sql _ time ( # 2735 )
updated error handling to include a verbose option to improve error reporting by allowing more detailed error information
ggb - 1561 fix menu item in header and item controls be not show .
cs - 16094 : s vpn connection should only be esitible between account and customer gateway to prevent security vulnerabilities
removed runtime error handling for exceptions in CursorReadingTask and added a new test case to improve error handling mechanism and ensure proper state management during task execution
added logging for PDF encryption errors in PDFBoxThumbnail and PDFFilter to improve error handling for invalid PDF documents
fix curatorzkookeeperclient . getchildren ( ) to avoid race condition ( # 12354 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code clarity and maintainability
update intent data handling to use ` id ` instead of ` mCursor . deleteItem ` to ensure the correct URI is used for deleting items from the intent
refactor Java6Assertions and Conditions classes for improved clarity to enhance code maintainability and readability
changed method return type of ` replaceOrderBulk ` from ` Collection < ReplaceOrderCommand > ` to ` List < String orderCommands > ` to improve method flexibility by allowing multiple order commands instead of a single collection
refactor ` enterScopeDepths ` methods to use ` enterIdentNode ` instead of ` enterDefault ` and add ` enterFunctionNode ` method to improve clarity in method signatures and ensure consistent handling of function nodes
added a new class J9ConstantHelper for managing long values in Java to improve code organization and enforce stricter access control for extended runtime flags
add a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification issues to ensure that the target invocation behaves correctly under multi - threading conditions
[ gate - 27 ] added offline notification to roster session .
updated properties retrieval in MapOperator and PartitionDesc to use overlayedProperties method to ensure that overlayed properties are correctly merged from table description when available
removed unnecessary whitespace in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check for extTypeCustomDesers in MessagePackFactory and renamed a copy method in MessagePackFactoryTest to enhance robustness by preventing null pointer exceptions and improve method clarity
remove system . setproperty for mockserver warn log level to reduce unnecessary log output
added a test annotation to AbstractRegistryFactoryTest . java to ensure proper testing of the AbstractRegistryFactory functionality
removed unused imports and modified the createJetty method to streamline the code for better readability and efficiency
lucene - 2207 : fix testgroup so that it do n ' t fail on multi content
replaced bitwise operation for masking and added a new method in U64 . java to improve clarity and correctness of comparison logic
fix headline font and font - size in fx - font - main
added a boolean variable ` didSupportDarkText ` and modified the notification condition to account for support for dark text to ensure that the notification accurately reflects the support for dark text layouts
[ flink - 28454 ] [ runtime ] do n ' t schedule the first checkpoint request if the schedule have too many pending pending
updated KEEP _ ALIVE _ TIME _ MILLISECONDS to KEEP _ ALIVE _ TIME _ MINUTES and modified the maximum pool size from 1000 to 15 to improve thread management and ensure better resource allocation
replaced ` filter ` with ` anyMatch ` for matching input providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to improve matching logic for better performance and clarity
add requirements for Windows ServerCore container in OpenCVImageFactoryTest to ensure compatibility with Windows ServerCore container
http : / / issues . apache . org / jira / browse / amq - 3872 - fix regression in http : / / issues . apache . org / jira / browse / amq - 3873
make the return value of the getreturnvalue of the python proxy a throwable ( for debug purpose ) .
added a new annotation ` Issues ` with a repeatable annotation to facilitate the creation of multiple issues based on method over type and array types
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified imports in BlueprintConfigurationProcessorTest . java to ensure consistency in naming conventions and improve code clarity in testing
updated socket connection handling to conditionally use a proxy address to improve flexibility in establishing a socket connection based on the environment
[ hotfix ] fix checkstyle violation in slotstatus
added import statement for ClassUtils in ReflectionUtils . java to enable the use of Apache Commons Lang utility for improved functionality
replaced instances of HashSet with LinkedHashSet in SslContextFactory to ensure order is maintained for better predictable iteration behavior
added a private static resource variable and updated logic for handling the resource to improve resource management by ensuring a single resource is returned to avoid redundant operations
added a constant for the plaintext segment size and updated the allocation logic in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to improve code readability and maintainability by avoiding magic numbers
added a test for circuit breaker fallback exceptions in ServerMvcIntegrationTests . java to ensure that an IllegalArgumentException is thrown for invalid fallback URIs
fix http ssl issue in apppage
hbase - 23367 fix flaky test ( addendum )
added ` preferAES ` property and its getter / setter methods in ` ProtectionPolicy ` and removed them from ` StandardProtectionPolicy ` to streamline the configuration by centralizing the preference logic in ` ProtectionPolicy `
( chore ) camel - opentelemetry : use log instead of sysout
add more comprehensive test for load balancer instance operation ( # 11760 )
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to accurately reflect the method ' s purpose related to ringtone notifications
added error handling for file creation in DiacriticTest . java to ensure graceful failure and inform users about file creation configuration issues
hhh - 16675 fix followonlockingtest failure on oracle 11
added error handling for file not existence and improved file reading in TextureUnpacker . java to ensure robustness by throwing an exception when the atlas image cannot be found
added concurrency control to the AmbariManagementControllerImpl class to ensure thread safety during concurrent operations
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the ResultSet does not close itself and modified resource management to ensure proper resource management and prevent potential resource leaks
updated InputStream handling and added new test cases in InputStreamBodyGenerator and ChunkingTest to improve input stream management and ensure correct functionality of file reading and connection management
[ iotdb - 5859 ] remove pre - deleted data from schema response on cluster restart
fix chunkedWriter usage in Http1xUpgradeToH2CHandler to ensure proper cleanup of resources when the chunkedWriter is already set
updated conditions in EnhancedBrowseFragment and added a deleteItem method in FullDetailsFragment to ensure proper item deletion functionality and improve user experience
refactored RuleBank and RuleFinder to implement RuleBank interface and updated RuleBank and related classes to improve code organization and encapsulation by separating ruleBank management
add some extra check to the jcatlscrypto and improve error handle
added a new file ` TestMonomorphicObjectCall . java ` and created ` Object . java ` for testing monomorphic object call functionality to implement and verify the finalization of native objects in Java
replaced direct calls to removeMetaDataSource with toFront ( ) in DataBrowser . java and Desktop . java to ensure that the data source is removed from the DataBrowser instance instead of the current session
hbase - 17420 should use the column family in shouldseek ( ) method of DefaultMemStore to ensure compatibility with different store types ( huaxiang sun )
[ flink - 23454 ] [ runtime ] properly access localrecoverystatedirectory .
[ iotdb - 3594 ] [ iotdb - 3596 ] add alter view flag to alter timeseries statement ( # 8696 )
add a new test case and fix issue with condition . matchtext ( )
added error handling when retrieving the routing table builder key to ensure graceful handling of potential exceptions when retrieving the routing table builder
use putifabsent to avoid nullpointerexception . fix # 4883
camel - 14534 : camel - jms - client use char [ ] for password to avoid string allocation
bug 7882 : avoid infinite loop in api servlet when session invalidation fails
updated the equals and compareTo methods in the Counters class to use ` ! = ` instead of ` compareTo ` and modified the comparison logic to simplify equality checks and improve code clarity
refactor the initialize method to accept a original SimulationStatus and set warnings accordingly to improve clarity and ensure proper handling of warnings during simulation initialization
[ gr - 45894 ] fix get current time use in llvm6464clockgettimenode .
refactor PrettyPrinter to support variable names during deserialization to enhance clarity and maintainability by using more descriptive variable names
- fix for nutch - 2335 - lrucenet . clearfromindex ( ) nullpointerexception .
8053963 : ( dc ) use datagramchannel . receive ( ) instead of read ( ) in connect ( )
testquerydns : migrate testquerydns module to junit 5 ( # 4501 )
add a new class NutchServerInfo with basic configuration options for Nutch service to facilitate easier configuration management for Nutch services
replaced custom attribute handling in EdgeNGramTokenFilter to utilize AttributeSource for better flexibility to enhance maintainability and reduce code complexity related to token attributes
added timestamp handling to CqlInserter and ThriftInserter classes to enable serialization of column timestamps for improved data tracking
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in the use of BigInteger type
modified NumberUtils and Numbers classes to enhance type safety and functionality for handling float and float values to improve robustness and maintainability of the code by using more descriptive variable names and enhancing clarity
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for new IP address ranges
added constraint violations check in DefaultJdbcOptimisticLockingExceptionMapper to improve error handling for SQL exceptions related to constraint violations
[ issue # 6290 ] fix consumerManageprocessor # rewriterequestforstatictopic typo ( # 6291 )
refactor tab creation methods in Tabs . java for better organization and encapsulation to improve maintainability and readability of tab management functionality
[ iotdb - 878 ] remove unnecessary size ( ) call in toarray ( ) ( # 4695 )
[ hotfix ] [ test ] add taskmanagerruntimeinfo into mockenvironment
added conditional checks in the MavenVisitor class for better readability to improve code clarity and maintainability by separating conditional statements
updated string variables and their names for better readability and consistency in ZookeeperDataChangedListenerTest . java to enhance clarity and maintain uniformity in mock naming conventions
added a new file FormatCheckingTest . java that tests Java class format errors to ensure that the application correctly identifies and reports illegal class names during execution
updated line number assignment logic in CodeGenerator . java to enhance clarity and maintainability of line number handling
[ scb - 2371 ] confighelper : catch exception when lookup by service property ( # 3446 )
added methods to create RadioButton instances with parameters for creating toggle actions to enhance flexibility in managing radio button states within the application
increased the instantiation of LinkedHashMap and updated the CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 to optimize memory usage and improve performance by controlling cache size
int - 1588 : add the ability to set the default capacity for channel and remove the need for a ' org . springframework . integration . bus . internalmessagebus ' attribute for that case .
camel - 5323 : fixed osgimanagementnamestrategy to handle null symbolic name correctly
add support for load mode file from the ` ` usemode ' ' system property
[ yarn ] avoid a race condition when kill an application in iomanager ( # 4437 )
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` to improve clarity and consistency in variable naming
added null and empty check for notPropagatedHeaders in AbstractMessageProducingHandler to ensure proper handling of non - existent headers during merge
refactor CompareMode class to improve comparison logic to enhance performance and maintainability of the comparison logic
added HasTests interface to Arg and RustLibraryDescription classes to enable the management of test targets in Rust build rules
updated drawable resource references in FileMessageVH . java for clarity to enhance readability by using more descriptive error messages
refactor OnExitTest class for improved readability to enhance maintainability and clarity of test cases
added onuserpreferencechanged ( ) to recreate the taskbar to ensure the taskbar is refreshed when the user preference changes
modified heap dump functionality to support both iOS and non - iOS environments to improve compatibility and functionality for dynamically loading heap dump heap information
camel - 14281 : fix mybatis producer so it work even if commit fails
simonstewart : update the ie driver to work with the new w3c driver .
updated import statements and annotations in IteratorToFor . java for clarity and consistency to enhance code readability and maintainability by using uniform annotations
set application state to unavailable when stop jmx application
replaced assertions in ByteBuffer and Heap - X buffer handling with direct position and limit calculations to improve code clarity and ensure proper handling of buffer operations
simplified the splitting method in ConditionalResolverMergeFiles . java to improve code readability and maintainability
added setEmpty methods for both ArrayData and ObjectArrayData classes and modified NativeArray to handle sorted arrays correctly to improve array management and ensure consistency in handling empty values during deletion
[ java ] allow access to virtualauthenticatortooptions enum from outside the class
updated test cases in TestMultiPhraseQuery to use document instances instead of document instances to ensure accuracy in field addition and reflect changes in the output format
do n ' t send reservation result if the payment method be offline
added a new private thread variable ` _ onTimeoutThread ` and modified handling of listener timeouts to improve thread management and ensure proper notification of timeout events
updated logging statements in SslBytesTest , SocketChannelEndPointTest , and TrackingSocket to use debug level instead of print stack trace to improve log detail for better debugging and provide more detailed debug information
update package - info . java files for mmm and ppp to ensure consistency and clarity in package documentation
updated the read method to conditionally use ConsistencyLevel . LOCAL _ QUORUM based on Paxos to ensure accurate data processing for different consistency levels
[ Heos ] add home device support in discovery and player handler ( # 10409 )
added a new ` Wait ` class and modified ` PlainSelect ` to utilize it for SQL parsing to enhance the functionality of SQL queries by allowing configurable wait values
refactor Neo4j to use AttributeController for attribute handling to enhance code maintainability and improve attribute management in the graph
added a null check for serverName in SessionManager . java to ensure proper handling of null values during session management
nifi - 10385 : update rocksdb package to new nifi - controller
updated the method to retrieve the " IS _ GRANTABLE " value from results to improve code clarity and maintain consistency with data source handling
updated the JavaScript context handling logic to exclude " javascript : " URLs to improve clarity of JavaScript execution feedback and reduce unnecessary console output
camel - 2298 fixed the camel - cxf test error of camel - camel - cxf
hbase - 15410 loadtesttool may fail with npe on non - existing column when create cf at load time ( yu li )
added the Disposable interface to the Texture class to enable the Texture class to be disposed of other components
updated WebappRegistrationCustomizer and related imports to use WebBundleDeployerHelper for better null safety to enhance robustness by preventing potential NullPointerExceptions
ensure the goquorum genesis file be available before use ( # 1919 )
changed IOException to Throwable in HttpInput . java to improve error handling by capturing all types of exceptions
added a condition to exclude " JP " from the list entry in LocaleTest . java to ensure that issues related to the JP localization are properly identified
updated response type references from ` Wrapper ` to ` HostResponse . Wrapper ` in multiple services to ensure consistency in class naming and improve clarity in API operation responses
updated comparison logic in FilteredQuery to include the boost value to ensure proper filtering behavior based on the boost value
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 788 do n ' t show extra tab if there be no debug info
add a new file TestCMSClassUnloadingDisabledHWM . java to test the CMS class unloading behavior to ensure that full GC is triggered correctly under specified metaspace and young generation sizes
fix a potential npe in spongepowered . api . spongepowered . api . spongepowered . gettodisvent ( ) . fix # 697 .
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and updated related method names to improve clarity and consistency in handling prepared statements in the database
make compactionstest compatible with cassandra - 3.0 . 2
replaced null assignment with a variable for the " type " attribute and added error handling for invalid items to improve robustness by providing clearer error messages when processing resources
added SpELJudge support to the OperatorEnum and created a new SpelJudgeFactory class to enable the storage and retrieval of spel - related operators in the system
fix ordinality symbol must always be bigint ( # 2658 )
bugfix # 256701 , do not use service . providers ( ) to get the default profiler
updated multiple Java files related to Conscrypt certificate handling and imports to improve code clarity and maintainability by using consistent naming conventions
fix attribute resolution bug ( # 700 )
updated source and target options in SetupHid . java from " 1.5 " to " 6 " to migrate from version 1.5 to version 6
[ calcite - 3441 ] do n ' t push project to source if the schema support the metadata only projection
added non - null and soft reference for sorting localized names in AboutActivity to improve code reliability by ensuring consistent references to localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
modified the handler ' s behavior based on DrawerActivity ' s live streaming setting to ensure that the refresh action is only triggered when live streaming is active
add exception to the error message when AuditStrategy creation fails to improve error reporting for better debugging
( chore ) camel - core : replace assertEquals with awaitility in fileconsumerpollingstest
updated generic type declarations in SchemaLoader , CompositeTypeTest , and DynamicCompositeTypeTest files to use generics to enhance type safety and flexibility in handling different types
added support for transports in the GitClientApplication class to enable repository URLs based on supported transports
added descriptive names for various input consumer classes and modified delegation logging in the TouchInteractionService and DelegateInputConsumer classes to enhance clarity of gesture logging and provide meaningful names for better debugging
handle possible null mavenmetadata in changecomponent # getavailableversions ( ) . fix # 1235 ( # 1235 )
8207933 : [ testbug ] add - xx : + gc + init to use gc + pagesize and gc + gc + coops = debug for use case
cloud _ usage : do n ' t migration if the db do n ' t exist
http : / / issues . apache . org / jira / browse / amq - 4798 - patch apply with thanks , also fix test on window
implemented a new test class for ObjectStreamClass functionality to verify serialization and deserialization behavior with custom objects
simplified conditional checks involving data center information in ZoneAwareDiscoveryFilter to enhance code readability and maintainability by removing unnecessary null checks
[ camel - tracing ] downgrade log level to warn when capture tracing data to reduce noise .
added a toString ( ) method to the Generator class to provide a readable string representation of the generator instances
improve handling of null values for ' dontquote ' in URI processing to enhance the robustness of URI quoting by ensuring proper handling of null values
ambari - 8532 . throw a nosuchresourceexception when the requested resource do not exist . ( mpapirkovskyy )
fix nullpointerexception when api response be null ( # 5358 )
removed conditional logic for allocation of ByteBuffer in Android version 5 to simplify code by eliminating unnecessary complexity for Android version compatibility
add sybase comment to explain the change in sybaseasadatabase
phoenix - 4601 create a new forceProjection flag when create hbase join on hadoop 2.0 . 0 branch
add a method to retrieve the string distance in SpellChecker . java to provide access to the string distance property for other classes
added new flags and modified PendingIntent method to use immutable flags to enhance security and ensure correct behavior of the PendingIntent implementation
added methods to append and restore read column IDs in HiveFileFormatUtils and modified HiveInputFormat to utilize this new method to enhance configurability and maintainability of column ID handling in Hive files
[ upnp ] fix classcastexception if ipv4 be not multicast ( # 11653 )
fix temporary toast to make debugging easy
[ bz - 1066352 ] resolve a version from parent when it ' s null
added a new test class RawSerializationTest for Gson serialization testing to ensure correct JSON serialization of various collection types using Gson
implement java . net . ssl cert generation in test code
modified the iteration order for replies and adjusted the padding of the status view to improve performance and ensure proper display of the tweet in replies
increased timeout duration in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource access exceptions in the test environment
added a test method ` testNGramFilterPayload ` to the ` TestNGramFilters ` class to ensure the correct handling of NGram payloads in the token stream
refactor AclImpl to improve code structure to enhance maintainability and readability of the acl logic
added a new test method to verify different array sizes in the EasyRandom implementation to ensure that the randomization behaves correctly with different array sizes
bug 10727 : add some extra logging when fail to start a vm
added a thread - local variable for managing the try - again write flag in SslConnection to ensure proper handling of asynchronous operations and prevent premature termination of the write loop
modified visibility checks in the Actor class and added a method to check parent and actor visibility to enhance the functionality of actor visibility checks and ensure proper visibility handling
improve logging of rolling - update step on deployment - group failure
[ hotfix ] [ table ] add nullable annotation and update javadocs for sinkprovider
added exception handling for missing username in DaoAuthenticationProvider . java and introduced AuthenticationFailureUsernameNotFoundEvent . java to enhance authentication failure reporting and improve logging clarity
added AtMostXVerificationTest . java files to enhance verification tests for better accuracy
updated default Q type assignment to use the new naming convention and added new arguments for " lucenePlusSort " to ensure consistent usage of the new plugin and enhance functionality related to query processing
updated SimpleDateFormat instantiation in WeekDateTest . java to include Locale . US to ensure consistent date formatting across different locales
added an overridden method to the JavaLanguageServer class and created a new Main class for testing to improve code clarity and ensure proper method overriding in the language server
updated the parameter name and logic in the ClientAPITokenIntegrationTest class from " idToken " to " shouldHaveIdToken " to improve clarity in the parameter naming and functionality of the token fetching test
added transaction and end methods to DatabaseAdapter and modified GncXmlHandler to use these methods to improve code organization and ensure consistent transaction handling during database operations
replaced byte array handling with ByteArrayOutputStream for reading input to improve performance and memory usage during file reading operations
added multiple @ Override annotations and updated logic for exception handling in MessagingTemplate . java to improve code clarity and ensure proper exception management in the messaging template
added a method to check if the source file is an acceptanceable source file to improve compatibility with different source file types
added maximum buffered documents and RAM buffer size settings in TestIndexWriterMergePolicy . java to optimize performance by accommodating larger document sets
added a method to update the witnesses collection and implemented a test for witnessing functionality to enhance functionality and ensure accurate witness management in the system
added handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by ensuring the iterator does not exceed the number of entries
- remove level parameter from flumenode . logversion and flumeserver . logenvironment
updated BasicAuthIntegrationTest and DaemonStream to enhance authentication checks and improve thread handling to ensure accurate authentication checks and enhance multithreaded support for better performance
replaced HashMap with LinkedHashMap in DependencyUtil . java to maintain the insertion order of the nodes collection
add error handler to jersey module - info ( # 3748 )
refactor header validation in Http2TestBase to use a new validateHeader method to enhance code readability and maintainability by centralizing header validation logic
add a switch - case structure to handle different Java types in system properties to improve compatibility with different Java versions
changed method parameters from String to CharSequence in StringSubject and added new test cases for contains and doesNotContain methods to improve method flexibility and enhance testing for character sequences
8274398 : [ graal ] add jfr / jvm . countertime ( ) and jfr / jvm . eventwriter ( ) jfr / jvm . countertime ( ) j
rename IntUtilsTest class to PrimUtilsTest to better reflect the purpose of the test class
modify the datasource creation logic in PersistenceManagerProvider . java to ensure correct connection factory usage based on compaction conditions
rename DeploymentOptions class files for consistency to improve clarity and maintainability of the codebase
changed the parameter type of ` updateTextButtonWithDrawable ` from ` ConstantState ` to ` Drawable ` and updated button drawable dimensions to improve flexibility by allowing different drawable types and adjusting text button dimensions
fix ( core ) : fix resource leak in xmlparser and yamlparser
added coalesce function handling in RexNodeConverter and registered it in SqlFunctionConverter to enable proper processing of coalesce arguments in the query execution
camel - 8193 fixed the unit test error of camel - hl7
updated JavassistProxyFactoryFactory to use the current thread ' s class loader for proxy factory creation to ensure proper context class loading and prevent potential memory leaks
updated DefaultDateTypeAdapter to require a format parameter and made constructor parameters final to improve code clarity and enforce immutability for better thread safety
reformatted method signatures in DocumentUtil . java for improved readability to enhance code clarity and maintainability
replaced the boolean flag ` newQuery ` with a direct method call in ` HttpClientRequestBase ` to streamline the code for better readability and maintainability
updated FeedRefreshUpdater to filter old entries based on a limit of 50 to ensure that the application does not exceed the maximum number of entries available for processing
[ iotdb - 6321 ] change the log level from fatal to warn when request close of wal fails ( # 4247 )
improve nodemap , and add a nodemapiterable to nodemap . ( jitendra nath pandey )
rename variable ' predicate ' to ' subPredicate ' for clarity to improve code readability and maintainability by using a more descriptive variable name
added a null check for fields before adding operations and modified return value logic in RexToMongoTranslator to ensure operations are only added when fields are not empty , enhancing data integrity
of - 2030 : add ` ` admin ' ' to the list of available xmpp domain in defaultadminprovider .
updated term handling in multiple q parser plugin classes to use getSlowAtomicReader ( ) instead of MultiFields to improve performance by avoiding null pointer exceptions during term retrieval
log4j2 - 1349 add tostring ( ) to the constantbeanholder to make it more readable
updated the logic for determining primitive type in GroovyParserVisitor to streamline the parsing of class names by removing unnecessary null checks and improving clarity
[ gr - 48825 ] remove unused @ interruptible annotation .
camel - 11446 : fix test error in seda blockwhenfull test
add a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level documentation and improve code organization
modified the calculation of readLen in MessageUnpacker to ensure it does not exceed the buffer size when calculating the read length
updated import statement for Nullable from common to core in HttpClientTimingInstrumentationVerificationTests . java to align with the new package structure for better organization
updated SQL query to include user filter in IconDB to ensure icon retrieval is user - specific for data integrity
[ no jira ] fix typo in defaultmqproducerimpl # getbackPressureforasyncsendnum ( )
do n ' t whitelist resource for module - info . class from scanning spec
cloudstack - 3439 : fixed bug in db upgrade for baremetal dhcp
removed the IJava2DRenderer interface and updated the Java2DRenderer class to simplify the codebase by eliminating an unused interface
fix : fix onoffloadbufferemptying not be call when onteardown
added scheduled thread management for handling upstream tasks to improve task scheduling and management in the upstream system
refactor StreamType class and related imports to improve code readability and maintainability
updated assertion to include an exception message in Recording . java to provide clearer context about the time taken for assertion failures
removed unnecessary imports and simplified message retrieval in FilestorePage . java and RootPage . java to enhance code clarity and ensure only authorized users can access the filestore stats
disable the rest test in camel - elasticsearch which be not ready for execution
updated the method parameter type checking in ExpressionControlBusFactoryBean . java for better type checking to enhance clarity and maintainability by directly referencing the declaringClass of the method
rename button to buy and fiat to make it clear that the button be currently sell .
camel - 5612 : camel - restlet should accept path with thanks to mark .
change parameters in createnextblock and createnextblockwithcoinbase to be optional .
removed Serializable interface from BTreeMapJava and updated related tests to improve serialization handling and ensure proper exception handling during serialization
[ drools - 7 ] fix npe in execute ruleengineimpl if exception cause be null
modified the conditional expression for generating statistics in the Main . java file to improve code readability and maintainability
change method call from mFilesAll to mFiles to ensure consistency in file index calculation
deleted the PlainVerifier . java file to the functionality was deemed unnecessary or redundant
added a condition to close the system windows when triggered from the alt tab to ensure proper handling of recent tab interactions in the application
updated BottomSheetDialog functionality in DialogFragmentIT and OCFileListBottomSheetDialog to improve user experience by ensuring proper dialog display and visibility management
updated MimeUtil to parse UTF - 8 encoding for better compatibility to ensure proper handling of character encoding in HTTP requests
added a call to the superclass ' s deinitialize method to ensure proper resource cleanup and avoid potential memory leaks
replaced serialization method in LogFormatTest with TestUtilities for improved clarity to streamline the serialization process and enhance code maintainability
fix issue # 171 by fix the parse bug of previous _ value
updated array size validation logic and added handling for negative lengths in JAXWSExceptionBase . java to ensure proper exception throwing for negative array sizes and improve argument list management
test : migrate noclassdeffoundimporttest to junit 5 ( # 4501 )
updated thread join duration from 10 seconds to 60 seconds to allow for a longer wait time before the thread execution completes
[ flink - 16406 ] [ core ] make slotsharinggroup the default for miniclusteritcase and containers .
added title handling and updated i18nSafe annotations in ShadowActivity , ShadowAlertDialog , and ShadowTextView classes to enhance title management and ensure proper locale - specific functionality
updated import statements to use POILogFactory and POILogger instead of Apache Commons Logging to improve compatibility with the POIFS library and enhance logging capabilities
fix ( instar ) : add channel state for alarm
add latency to localmapstats before send delete operation ( # 19055 )
updated the enum type definitions and modified the status check in Response . java to improve code clarity and ensure proper handling of HTTP status codes
updated CheckResourceKeys . java to include finding Java compiler locations before listing Java files to improve accuracy in locating Java files and handle potential IO exceptions gracefully
add project name to the flutter create additional setting ( # 1497 )
added a new test class deprecatedStubbingTest for testing stubbing behavior to ensure proper handling of deprecated stubbing behavior and interactions in Mockito
replaced the import of ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType ` to align with the standard servlet package for better compatibility
add a new dependency for npt - adv when parse the vlan structure ( # 1135 )
add boolean system property to allow rsa key exchange in fips mode
refactor variable names from ` output _ reader ` to ` reader ` for consistency to improve code clarity and ensure proper resource management
[ pubsub ] add deleterviceandaccess token cleanup ( # 12985 )
updated interpolators in TaskbarEduView to use EMPHASIZED instead of AGGRESSIVE _ EASE to enhance animation consistency and performance by using a more efficient interpolator
[ iotdb - 5498 ] add log for updateregionlocationplan during datanode migrate ( # 7844 )
added a new file FileDialogLeakTest . java that implements a file dialog with multiple wait times to ensure proper resource management and prevent potential memory leaks during file operations
hbase - 21076 addendum add miss package to testopentableincoprocessor since it be buggy
[ gr - 46711 ] fix uninterruptible class on svm .
[ flink - 25958 ] [ protobuf ] remove unused method in pbcodegenrowdeserializer and serializer
change condition from checking if disi is null to checking if it is not null to ensure proper handling of dimension disi initialization
fix thread safety issue with cached source info
added constants for Java version compatibility in Constants . java and updated Helper . java to use this constant to improve code readability and maintainability by distinguishing between Java versions
modified the FileReporter constructor to accept String as a parameter to enhance flexibility in handling null values during initialization
updated the method call from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity . java ` to ensure proper evaluation of the end - to - end encryption keys check
added home button functionality to the DirectMessageConversation class to enhance user experience by allowing back navigation when navigating back from the home button
updated CLEAR _ REPOSITORY _ CACHE to include GET _ USER and improved user handling logic in the RpcServlet and RpcUtils to enhance functionality by allowing retrieval of user information and ensuring proper access control
added a system property check for the operating system architecture in TestJdbcPluginWithMSSQL . java to ensure compatibility with different system architectures
updated the method call to use the original start class variable instead of a direct reference to improve clarity by maintaining the original class state during the method invocation
fix error message in dexbody . register ( ) and add local to the register number .
replace calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl . java ` to improve clarity and consistency in handling optional response retrieval
jbrules - 3539 : add a method to fix the nimbus look and feel
fix version regexp to make it work on japanese
updated animation listener implementations in LauncherAppTransitionManagerImpl . java to improve animation handling and visibility management for better UI responsiveness
dumpedprivatekey : do n ' t include base58 in error message
update test data and fix typo in edit offer data model
refactor milestone parameter initialization to handle open tickets and repository conditions to improve clarity and functionality of milestone handling based on the state of the milestone
change the default battery to 80 / 80 in pipeitemswood
added a method to retrieve cluster keys with specific blueprint names and revisions to improve clarity and functionality when managing cluster definitions
change the downgradeAllowed variable to true and add a test for it in UpgradePackTest to enable downgrade functionality and ensure its correctness through testing
updated XML entity scanning to use ATTRIBUTENAME instead of ATTRIBUTE to ensure proper handling of XML attribute names during parsing
added a new configuration option for emulate system load library and modified library loading logic to enhance system load management and improve library loading flexibility
replaced usage of a custom comparator with a custom comparator in the AppsCustomizePagedView and LauncherModel classes to improve code readability and maintainability by consolidating sorting logic
ensure parent directory exists before create a file .
enhanced the ` doTest ` method to improve readability and include details in assertion failure messages to enhance clarity of test results and provide more informative error messages for debugging
camel - 7444 : fixed cxf / spring - boot auto configuration for camel - spring - boot
[ flink - 23790 ] [ doc ] update metric option descriptions for all reporter
hbase - 7568 do not use test _ UTIL . getconfiguration ( ) in testfulllogreconstruction . setup ( ) ( feng honghua )
added reuseAddress property with getter and setter methods to DatagramSocketOptions to configuration of DatagramSocketOptions for maintaining interface compatibility
update server shutdown message to use a getshutdownmessage ( ) method to improve clarity and maintainability of server shutdown feedback
remove deprecate ' locatable ' interface to relocate to the internals of the current implementation
updated error message formatting in VersionInfo . java to clarify that the field must be searchable or stored or docValues to improve clarity and accuracy of error reporting for better debugging
rename variable ` equalityPredicateColumns ` to ` predicateColumns ` and update related logic for clarity to improve code readability and maintainability by using a more descriptive variable name
code review for the r provider implemnetation . fix # 3804
removed unnecessary lines in Navigator . java to improve code readability and maintainability
changed access modifiers of accessors in RecordReaderFactory . java and added a new RecordReaderFactoryTest . java file to enhance accessibility of reader classes and provide unit tests for the ParquetRecordReaderFactory functionality
added query types for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator , and created corresponding unit tests in MongoQueryCreatorUnitTests to enable correct querying behavior for both low and low query scenarios in MongoDB
refactor select expression logic in CalciteSqlParser to enhance clarity and maintainability of group by clause selection checks to improve code readability and ensure correct handling of select expressions outside group by clauses
added atomic integer reference count and improved buffer handling in FileChannelLinesSpliterator to enhance memory management and prevent memory leaks during file channel operations
replaced direct access to validator instance with a local variable ` validator ` to improve code readability and reduce repeated method calls
added a schedule method to CircuitBreakerImpl and modified the test circuit breaker to use a custom wait time to improve flexibility and control over the circuit breaker ' s execution timing
removed the FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS flag from the intent setFlags method to simplify the intent configuration by assuming flags are already set
bug fix : make upload progress bar configurable
updated test descriptions and disabled annotations in TableExtRetrieverTest . java to clarify that the test allows retrieval of a strategy for column privileges
added synchronized keyword to addExportedCount and exportedCount methods to ensure thread safety during concurrent access
updated import statement for IntRangeUtil1 in MetricsImpl . java to correct the import path for improved functionality
refactor character handling in HttpParser to handle negative characters more gracefully to improve error handling for invalid characters and ensure proper encoding of encoded headers
updated the content view from trends _ activity to configuration _ activity to better reflect the intended functionality of the activity
enhanced log message format in SLWTTextListing . java to improve clarity of log output for better debugging
refactor ` useTlogReplicas ` method to conditionally use expected document counts in ` ForceLeaderTest . java ` and create a new test class ` ForceLeaderWithTlogReplicasTest . java ` to improve test reliability and ensure correct behavior when using Tlog replicas
update Thread class to improve thread management to enhance performance and resource efficiency in multi - threaded environments
refactor initialization of collection sets to use constants for template file suffixes to improve code readability and maintainability by centralizing set management
camel - 4353 fixed the issue that camel - cxf do n ' t like jaxb when the provided namespace be empty
removed unnecessary line breaks in YamlRepresenter . java to improve code readability and maintainability
updated date formatting in ToChar . java and added SQL statements in TestFunctions . java to ensure proper representation of date values in the output
added validation transaction lists and write IDs to GenericUDTFGetSplits to ensure that transaction data integrity by setting valid transactions and write IDs
updated logging messages and modified column and column types initialization logic in JsonSerDe . java to improve logging clarity and ensure default values are set when properties are empty
added null check for book path before loading data to avoid potential NullPointerExceptions when book path is not set
removed unnecessary whitespace in the SSTDeserializer class and adjusted formatting for consistency to improve code readability and maintainability
updated GRID column handling in AppPreferencesImpl and ExtendedListFragment to use a constant from AppPreferencesImpl to improve code maintainability and ensure consistent usage of the default grid column value
updated return message in Platform . java and modified test cases in ComparisonFailureWithFieldsTest . java to clarify the intent of the difference detection and improve test accuracy
added a new boolean field ' waitingForKeys ' in the DecoderInputBuffer class and updated related tests to ensure correct handling of keys waiting in the input buffer operations
removed the " / api / " prefix from multiple API path annotations in OkexV3 . java to streamline API documentation for better clarity and consistency
simplified condition checks for floating - point comparisons in LineUtilitiesTests . java to improve code readability and maintainability by reducing redundancy
modified ` JavacParser . java ` to update syntax checking for VARARGS and added new classes ` VarargsAndOldArraySyntax . java ` and ` T6569633 . java ` to enhance clarity in parsing varargs and add new functionality for old array syntax
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
lucene - 4833 : add ' method ' to variablecontext to support both member access and string index .
added tests for invalid compilation unit and profile string JSON parsing to ensure proper error handling for invalid JSON formats
fix buffer limit set to zero on resize . resolve issue 294 .
added response timeout support to the NettyRoutingFilter and related classes to enhance configurability and improve handling of HTTP response timeouts
refactor NativeLinkTarget handling in CxxLibraryFactory and add deprecation annotations in NativeLinkTargetGroup to improve code clarity and maintainability by using more descriptive method names
camel - 9014 : camel - rest - api should not load rest - api component from classpath
added support for RexFieldAccess in ASTConverter and RexNodeConverter to enhance field access handling in Hive query processing
[ iotdb - 4246 ] fix concurrentmodificationexception in querylogger ( # 8093 )
always relativize uri without create a new one ( # 8451 )
refactor PKCS12KeyStore and StoreSecretKeyTest classes to improve certificate handling logic and structure to enhance clarity and maintainability of certificate management in the codebase
added reflection access checks and updated method names for clarity in the NativeObject and ReflectionCheckLinker classes to enhance security by ensuring proper access control for reflection classes and improving code readability
removed the public access modifier from the CollisionMap constructor to enforce encapsulation within the class
refactor getRawInputFromTransactionInput method to use checkNotNull and mark it as deprecated to improve code clarity and enforce null safety for the input parameter
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch statement to improve code readability and maintainability by reducing repetition
server : remove region _ id a primary key for all account ( # 5956 )
bug 60284 : throw a helpful error message when encryption be not support for old excel file
[ gr - 39949 ] add -- add - exports = com . oracle . svm . nativeimage . builder for jdk = all - unavailable .
remove unnecessary line breaks in TimeLineCursorAdapter to improve code readability and maintainability
fix test which randomly fail on slow ci server
updated the creation of the EXTERNAL _ FILES _ DIR and refactored file deletion logic in ShadowContext . java and ContextTest . java to improve directory handling and simplify file management
refactor exception factory initialization to use Class . forName for consistency to improve readability and maintainability of exception handling logic
updated WAIT _ TIME _ MS from 10000 ms to 60000 ms to extend wait time for improved synchronization
added handling for " aud " extension in ConnectOAuth2RequestFactory and adjusted JWTClaimsSet initialization in ConnectTokenEnhancer to ensure proper audience management during OAuth2 request processing and improve code clarity
camel - 15688 : camel - kafka - avoid to break on the first error by default .
added a new constant selectableItemBackground with a value of 0x10a13 to define a specific background for selected items in the UI
consolidated multiple import statements for trade - related classes and added a method to place stop orders to streamline import statements and prepare for future stop order functionality
updated event type assignment logic in TxnSetOperation . java to ensure correct handling of added and updated entries when record is null
fix issue # 260 : need to implement resumablerandomaccessfilelistener for mutablelistener
change package name from AccessLogValve $ 3 to AbstractAccessLogValve $ 3 to ensure consistency with naming conventions in the codebase
added functionality to set and retrieve multiple format records in HSSFDataFormat . java to ensure that the correct format is set based on available data formats
[ flink - 33581 ] [ kafka ] deprecate the kafkaproducer interface in favor of the producer interface
fix check for compressed input stream length to account for max - compressed length .
camel - redis : add idempotent repository . thanks to jens kleine - herzbruch for the patch .
fix containerrepair to work correctly . vanilla now use metadata .
[ mng - 4762 ] only apply to local repository when there be a layout
add a check for task manager initialization before starting it in LocalInstanceManager and improve error handling in LocalTaskManager to ensure that operations are only performed if the TaskManager is properly initialized , preventing runtime errors
add more debug info to abstractartifactresolutionexception to help troubleshoot
modified the method ` getInternalTemporalPath ` to use ` mContext ` for path manipulation to ensure accurate retrieval of temporary file paths and maintain consistency in context
replaced Google Commons libraries with Google Commons libraries for better code organization and refactoring to improve maintainability and reduce external dependencies
added blocking execution logic to the Vert . x context and created a new test for blocking behavior to improve thread handling and ensure proper blocking behavior in the Vert . x context
updated FormatterConverter to accept a string parameter and improved constructor argument handling to enhance flexibility and provide clearer error messaging when no output arguments are provided for formatter instantiation
loadcontactstask - fix for android o and android o +
replaced methods to set remote addresses and names with ' this ' for consistency to improve code clarity and maintainability by using class - level variable assignments
added null check for shadowClass and threw an IllegalArgumentException if it is not annotated with @ Implements to ensure proper handling of class annotations to prevent runtime errors
added a check for ` tlsMutualAuthenticationRequired ( ) ` in multiple NettySslContextFactory classes to ensure proper handling of mutual authentication configurations
added a test to verify that requesting a plain HTTP endpoint over HTTPS throws SSLException to ensure proper handling of SSL - related exceptions in the client
added protected methods to retrieve consumer and producer in AbstractKafkaResumeStrategy to enhance accessibility for external use and improve code maintainability
change the structure of the conditional statement in PageChangeListener and add a new FrameRenderer class to enhance readability and maintainability of the code
fix wrong warn message in case no address / text be find or SMS setting be configure
# 427 - enh : add query optimization for find live bean ( # 427 )
added error handling for IO exceptions in MultipartBody . java to improve robustness by logging specific issues related to resource exhaustion
fix : code style issue in executablefactory , zipfolder , and executablefactory ( # 2184 )
add a link to tck . note that these class be now available for test .
fix issue with open file and save link file in current working directory ( # 5748 )
added LoadOptionsBuilder for SchemaInfoLevelBuilder and updated SchemaCrawlerOptions initialization to utilize new LoadOptionsBuilder for improved configuration management
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and created test cases for legacy library loading to align test structure with the latest testing framework and improve error handling for legacy library loading
let testreader . getalloperations ( ) return null , to avoid throw an exception .
updated ProjectProperty to set name and enabled and expanded properties from the prototype to ensure proper handling of component state based on their properties
refactor connection handling to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ datastream ] remove irrelevant comment and fix typo in datastreamjob
replaced direct stream creation with try - with - resources for handling ErrnoException to improve resource management and prevent unnecessary closure of temporary files
camel - 8563 fixed the cxf endpoint to use the real service class
modified the logic to check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure proper handling of TLS protocols that are not accepted
refactor lambda handling to improve clarity and maintainability to enhance code readability and ensure correct parameter handling for lambda expressions
add some comment to the tregex pattern so that it ' s easy to read
increase timeout for create file in v3 network ( # 8663 )
added setting of phraseSlop in the mpq to enhance query parsing accuracy
fix test which randomly fail on slow ci server
increased the timeout value from 8188 to 6188 for the metrics servers in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to improve stability by specifying the server timeout duration
fix : mono be not run in parallel mode properly ( # 4188 )
update visibility condition for the compound view to account for available edit options to ensure the compound view is only visible when available for user input
modified the progress calculation in DepthController . java to ensure it does not exceed a minimum value of 1
remove unused and unused method packetreceived from session
added logging for authentication requests and refactored authentication handling in the DelegatedAuthenticationGenerateClientsAction to improve debugging capabilities and streamline server redirection logic
added null checks for service in ` SamlIdPMetadataUIAction . java ` and improved error handling in ` SamlIdPMetadataUIAction . java ` to enhance robustness by preventing potential NullPointerExceptions
add ` ` hidden ' ' property to the pantheon command ( # 2379 )
added doNotInstrumentClass method to prevent instrumenting of coroutinesRoom instances to enhance performance by avoiding unnecessary instrumentation
modified the ` isSupported ` method to synchronize it properly to ensure thread safety when checking the support of ` HttpCallerInfo `
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the interface by eliminating unused methods
camel - 8052 : thread name in persistent / temporary queue be now unique . thanks to jens kleine - herzbruch for the patch .
updated the AuthenticationProvider and TargetObject classes to improve authentication handling and encapsulation
fix a bug in pdfdocument . getmultiblock ( ) when the writer be a tagged pdfdocument .
log4j2 - 3144 - add patternselector test to increase coverage of patternlayout .
simonstewart : implement the ability to launch hta browser without throw an exception if it ' s not support
changed the type of the " thank " method from " MwPostResponse " to " MwThankPostResponse " and added a new class MwThankPostResponse to improve type specificity for handling tweets in the API
updated ChannelEndPoint to implement SocketBased interface and added a new SocketBased interface to enhance socket handling capabilities in the application
updated revoking store initialization and adjusted maximum size calculation to improve the functionality of the revoking store and ensure correct maximum size handling
added unit tests for HQL query handling in HQLTest . java to ensure correct functionality of entity join operations with varying parameters
replace line breaks in comparison logic in NonVisualRegressionTest . java to ensure consistent line endings across different operating systems
updated references in IndexWriter and related classes to handle file reference management more accurately to improve resource management by ensuring references are accurately tracked and maintained for future use
added @ Final annotation to methods in BaseError . java to ensure methods are declared as final for proper memory handling
added validation for resource percent in ConsumeUserResourcePercentActuator to ensure percent values are within acceptable range to prevent invalid contract configurations
updated condition to check for an additional boolean value before displaying legacy login to ensure compatibility with legacy login features based on device settings
rename streamnetworkthroughputbenchmarktests to streamnetworkthroughputtest since it ' s already a test class
removed unnecessary code block from EditTeamPage . java to streamline response handling for UsersPage
updated debug log message for initializing plugin credentials to provide more context on the initialization failure
fix closing of server socket channel in case of failure .
updated Rocket . java files for consistency to improve code maintainability and readability
hive - 27933 : add new method createdynamicpartspec to avoid additional logic ( jesus camacho rodriguez , review by ashutosh chauhan )
small refactoring of round _ half _ up _ factor optimization ( round _ half _ up _ factor should be useSF )
added support for directory traversal in JarDirectoryStep and corresponding tests to ensure proper handling of directory entries when adding jars
add helper class JWKSetEditor to allow setting of key - value pairs via property editor
replaced BytesRef usage with PendingTerm in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter classes to improve performance by reducing unnecessary byte copying during term completion
[ gr - 29411 ] fix for jfr : avoid toespresso node constructor and add boundary .
changed the default value of ` byIP ` from true to false to align the fetcher ' s thread configuration with default availability
refactor query timeout validation logic in StatementUtil . java to simplify the logic for handling query timeouts
added import statements and logic to include TargetConfigurationHasher in HaskellGhciRuleIntegrationTest to enable proper handling of unconfigured targets in the build process
refactor ReplicaPosition class for improved readability to enhance maintainability of the code
fix the network usage stats update task schedule issue by set the correct initial delay
updated animation interpolators to use FINAL _ FRAME for better visual effects to enhance animation effects by introducing a new FINAL _ FRAME interpolator for better visual performance
adjust nav bar positioning based on display density to improve user experience by accommodating different screen densities
added a new module - info . java file for the HTTP3 server module and updated fillInterest initialization to establish modularization and improve code clarity
do not cast jsonnode to json object before it be serialize to avoid potential npe
simplified variable assignment for better readability in ResourceResolverBean . java to enhance code clarity by removing unnecessary parentheses
[ hotfix ] [ configuration ] fix checkstyle violation in executioncheckpointingoptions
updated the ` reportInnerClassReferences ` method to accept ` Element ` instead of ` TypeElement ` and added a new method to handle package annotations to improve type safety and functionality when processing inner classes in package annotations
updated the string concatenation syntax in TimestampCheck . java to ensure proper concatenation of system property values for correct command execution
replaced ` FluentIterable ` with ` MoreCollectors ` for filtering and transforming files to improve code readability and performance by using modern Java features
[ 3.0 ] enable disable register by default ( # 3894 )
add security otr mode change handling . close all session when the security setting be change .
added properties for label outline size and transparency in PreviewProperty and NodeLabelRenderer classes to enhance visual rendering of node labels with configurable outlines
refactor ProxySelector , URL , URLStreamHandler , and URLStreamHandler classes to improve code organization and maintainability
added a boolean parameter to Win32FontManager . java to enable font rendering functionality in the Win32 font manager
added a null check for the variable ' v ' before processing the t variable to prevent potential NullPointerExceptions when ' v ' is null
added error handling policy implementation in JDTBatchCompiler . java to improve error handling behavior based on compiler environment
added content and text alignment features to LabelBlock to enhance text rendering capabilities for better label alignment
renamed classes and parameters in mmm and ppp classes to improve clarity and consistency in naming conventions
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
change the type of ` isLoopback ` from boolean to boolean and add null checks for ` networkInterface ` to improve robustness by handling potential null pointer exceptions
[ kraken ] fix stringformatexception in case of system locale
[ java ] adding test for . pdf extension of download miss file
nifi - 12201 : add output _ no _ hits property to elasticsearch to indicate whether output file should be output or not
cloudstack - 9672 fixed the calculation of the s _ hours in s _ hours in quotamanagerimpl
[ java ] fix switch / cases indentation see camel - 14540 .
clean up file readfilesp and streamfilesp to avoid deadlock
update conditional logic for widget skipping in PageChangeListener . java to simplify null checks and improve readability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` HSSFWorkbook ` , and ` TestBugs ` classes for username validation to ensure proper access control for file sharing in the application
added error handling around unregisterInvalidatedSessions ( ) method to improve robustness by logging exceptions that occur during session checking
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the message in the HueLightHandler to indicate the status of the bridge reports light is not reachable to improve clarity of the log message regarding the device ' s availability status
add loading property to fmlclienthandler . close # 1719
updated return statements in UI and BlockInventoryFragment to include a null check for " unit . millions " or " unit . thousands " to enhance UI flexibility by allowing units to be retrieved from the bundle or null
refactor MessagePackParser to use a switch statement for type checking and add a new BinKeyPojo class with corresponding tests to improve code clarity and ensure correct reading of string values from MessagePack format
add parameterized test for querying reserved words as identifiers in HqlQueryTransformerTests and update test cases in JpqlQueryTransformerTests to improve test coverage and ensure correct functionality of join operations
added tests for serialization and deserialization of a nested map in Gson to ensure correct handling of nested map data during JSON conversion and deserialization
added boundary checks for x and y coordinates in GeometryUtils to ensure proper positioning of shapes when they are within the defined offset
refactor sorting order dialog implementation in FileDisplayActivity and ReceiveExternalFilesActivity to enhance code clarity and maintainability by using the new sorting order feature
make sure that if no test plan can be find , system . error ( ` ` no testplan find ' ' )
updated method names in GeneratedEntityTranslator and JdbcManagerSupportImpl to use LazyReference for dbmsType and operationHandler to improve code clarity and lazy initialization efficiency
updated the argIdent assignment logic in the parser to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is only added to parameters when not null
updated the default protocol setting in JettyHttpComponent9 to use the protocol from the system instead of a hardcoded value to enhance flexibility and allow for different protocol configurations
ui : volume : fix issue of incorrect sourcenat set when volume be delete ( # 5889 )
modified the version method to accept a boolean full parameter and improved the error message formatting to enhance clarity of versioning information and provide more informative error messages for debugging
modify the condition to handle cases with a global change log and improved the comparison logic to enhance the accuracy of change log retrieval and ensure proper parent relationships
[ cmt ] change log level of jtatransactionmanager . findtransaction ( ) to debug
hhh - 15637 : skip test in oracle dialect that cause exception during format of sql string
moved the startHandshake and setSoTimeout calls to maintain socket timeout settings before establishing SSL connection to ensure that the socket timeout is preserved during the handshake process
update action bar size calculations to account for MainActivity ' s popup condition to ensure proper height calculation when not in popup mode for better UI consistency
[ gr - 46701 ] enable cha option and make default class hierarchy oracle final .
fix for amq - 976 to ensure that the context classloader be correctly set when create a new resource adapter
removed specific imports and updated test methods in JodaTimeRangeRandomizersTest . java to simplify dependencies and improve test readability
updated WebDescriptor to redirect specific schemas based on the SERVLET _ MAJOR _ VERSION condition to ensure compatibility with different Jakarta EE versions and improve resource loading
fix : adapt the readiness logic to the new node type
updated endpoint iteration from liveEndpoints to handler . endpoints to ensure consistency in endpoint handling within the StorageProxy class
added a null and empty check for creationStatements in IdTableHelper . java to avoid potential NullPointerExceptions during execution
drill - 1585 : update user rpc version due to change in rpcfailure behavior .
added a null check for ` System . getSecurityManager ( ) ` in ` ObjectStreamClass . java ` and ` ObjectStreamField . java ` to enhance security by ensuring access checks are only performed when ` System . getSecurityManager ( ) ` is available
removed unused imports and changed the visibility of UGSCommandCount in XLCDCommunicator . java to improve code clarity and encapsulation by restricting access to utility methods
replaced ImmutableMap with a HashMap for storing tags to simplify code and enhance immutability of the tags map
enable the client test for now ( fails on gump )
change default logging level from OFF to ERROR in the Launcher class to ensure the application defaults to error level for better error reporting
changed member variables to final in IconNormalizer . java to ensure immutability and prevent accidental reassignment
ww - 4467 add optional setting to prepareinterceptor to allow optional use of preparing prefix
clean up home / back behaviour in overview mode ( issue 10965421 )
added Singleton annotation to bind beans in AuthWithStoreFeature . java and removed eager singleton bindings in Auth . java to improve object - oriented design by preventing multiple instances of the same class
updated the ` incomingAssociations ` method to include an ` ignoreInvisibleAssociations ` parameter to allow for more flexible handling of inverted associations based on user preferences
bug 8150 : remove the private ip from the internal capacity table when remove a pod
update documentation in ProfileServlet . java to include additional profiling guidance to enhance user understanding of potential issues with asynchronous profiling on Linux 4.6 +
fix # 283 - npe in ref field model when $ ref = true ( # 283 )
rename CasCoreConfigurationWatchConfiguration and CasCoreEnvironmentWatchConfiguration to CasCoreConfigurationWatchAutoConfiguration , and update references accordingly to clarify the purpose of the class in the configuration classes for better maintainability
updated the implementation of feature flags to enhance functionality and improve performance of feature management
updated stringbuilder parameters and modified unique value construction in ConfigStore . java and adjusted test cases in CommonSetup . java to improve clarity and correctness of unique value representation and ensure functionality through testing
added image manipulation in TimeLineCursorAdapter and TimelineArrayAdapter to handle picture content to ensure images are loaded from memory when the picture is present
hive - 23764 : enable minor compaction on insert - only table ( krisztian kasa , review by jesus camacho rodriguez )
added a null check for the storage path in the wait message check to ensure that the operation only proceeds if the storage path is valid
updated conditions to use a new checkResize ( ) method and modified logical hash bucket count calculations to improve code readability and maintainability by centralizing size validation logic
guacamole - 839 : correct typo in comment for ldapconnectionservice . getconnection ( ) .
add deprecation for @ aggregatenotfoundexception to be able to use @ aggregatenotfoundexecution
remove no _ background _ to _ overview _ tag debug trace for now
added a condition to check if the class name starts with " com . intellij . rt . junit . " to ensure compatibility with IntelliJ IDEA build 193. 2956 . 37
updated assertions in TestMultiSearcher from hits . length ( ) to hits2 . length ( ) to correct expected value to reflect new requirements
add a new file LucenePackage . java that provides a class for retrieving the Lucene package to provide a centralized way to access and obtain the package information within the Apache Lucene package
adjust the addition operation to account for the difference in sizeInBytes to ensure the sizeInBytes value is correctly decremented from the existing ' s sizeInBytes
hive - 23790 : add an estimate ( ) method to the aggregate rule rule ( david mollitor , review by krisztian kasa )
added a null check for the drawable toggle before performing animations to avoid potential NullPointerExceptions during runtime
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to suppress warnings for unused methods in the DefaultAuthenticationAdapter class
add logic to enable system jars and modules based on scanning specifications to improve module scanning efficiency by automatically enabling system jars or modules based on class loader usage
add support for auto - generated msbib author ( # 4029 )
added a method to cancel core recovery and improved logging in CoreContainer . java to enhance recovery control and ensure proper handling of ZooKeeper awareness
refactored time measurement and position difference calculations to use a custom method for getting current time in milliseconds to improve precision of time measurements and clarify the output calculations for better readability
removed unnecessary print statements and simplified null and size checks in RepoEditView . java to improve code readability and ensure proper handling of null or single - item scenarios
doc : fix several typo ( # 1437 )
updated SecurityEvaluationContextExtension to include trust resolver , role hierarchy , and default role prefix settings to enhance security expression capabilities by ensuring proper handling of trust resolutions and default roles
added a condition to set the exponentSize if it is zero to ensure the exponentSize is always correctly defined based on primeSize
refactor file storage checks to use a new method for retrieving available space to improve code clarity and maintainability by eliminating redundancy in file operations
fix distinctsqlaggregation to combine all value instead of just the delegate .
added a test method to verify the execution of post login activities for users after successful authentication to ensure that the user execution is handled correctly for successful and failed authentication
fix extractframesraare so it do n ' t need to be static .
refactor CharArraySet to simplify code and improve type checking to enhance readability and maintainability of the code
- correct error message when track count be not set after add
updated type checks and method signatures in JsBundleGenrule and JsBundleDescriptionTest to improve clarity and ensure correct handling of Android packageable collections
fix string dictionary to handle utf - 8 correctly ( # 1588 )
renamed application data from " Logical Analyzer " to " Logic Analyzer " and updated related resource references to reflect a new architecture and improve clarity of resource identifiers
added instanceClassName and instanceClass fields and modified instantiation logic in AbstractVector . java to improve efficiency by reusing instances of Vector class dynamically
[ iotdb - 6323 ] remove deadlock when recover data from cm ( # 4324 )
[ # 7640 ] fix html format for contribution question ( # 7641 )
added TestLoggingExtension to DiagramRendererTest to enhance test execution logging capabilities
applied patch from http : / / code . google . com / p / mybatis / issues / detail ? id = 531 : add support for map underscore in property name .
added VIOMI _ WATERHEATER _ E1 device definition to MiIoDevices . java to support additional device types in the application
replaced repeated calls to getSslSessionData ( ) with a single variable for better readability to improve code clarity and reduce repeated calls to getSslSessionData ( )
add a new file CreateNewSpreadsheet . java to implement a workbook creation feature to provide a working example of how to create new spreadsheet rows and comments
update Redis cache properties to use long values instead of Duration objects to improve performance and clarity of cache expiration handling
be c5fb03fb : fix loadworkspace be call multiple time use right intent when refresh shortcut icon
bump wiremock version to 2.27 . 2 in gradle resolve test
replaced synchronized block with synchronized block in SunFontManager . java to improve performance by reducing unnecessary synchronization
added a condition to check for the character ' < ' in DocClassUtil . java to ensure proper handling of specific character cases
replaced String . format with a direct call to getString in Workspace . java to simplify the code and improve readability
added import statement for Liquibase and sent a message to display validation errors to enhance user feedback during validation processes
refactor IntegrationTestContextLoader to improve resource loading and configuration to enhance the flexibility and maintainability of the integration test context loading process
modified scroll handling logic and optimized component retrieval in multiple classes to improve responsiveness and maintainability of the scrolling functionality
removed unnecessary whitespace in the RamlType . java file to improve code readability and maintain consistency
add a new class ClientStat and update method signatures and data types for client IDs to enable tracking and management of approved site counts for client IDs
add $ \ n1 to cellcontentconverter to allow multiple line break in the content
patricklightbody fix to make it easy to try to fix regex on window
mondrian : fix for bug # 1743813 , document mondrianproperties . jdbcfactoryclass
8027163 : sun / management / jmxremote / bootstrap / customlaunchertest . java should be update for jdk8 removal of solaris - 32bit support
remove tumblripper . testembeddedimage , it be n ' t need
added a conditional check before converting storeType to avoid unnecessary conversion when symbol has a slot for the store type
fix a problem that could cause arrayindexoutofboundsexception in some case .
replaced the OpenMode OpenMode configuration with a custom PrintStream in BaseLockFactoryTestCase to enhance character encoding handling and improve test output readability
tika - 3742 -- add ` ` dynamic ' ' property to tikaconfig and add a dummy parser which will be use for tika - config to control if a dynamic service loader can not be use .
added package - info . java and updated package handling in DocLint . java and DocLintTester . java to improve error reporting for incompatible packages and enhance code readability
added import _ CMD constant and modified command checks in DataImportHandler and DataImporter to accommodate additional command handling for data import operations
added a test method to verify that inner classes do not change if an ignoreDefinition flag is true to ensure that inner classes are not altered when the ignoreDefinition flag is true
removed import of android . util . Log from JettyService . java to eliminate unnecessary dependency on Android ' s logging utility
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and modified its logic to include it to ensure that items are added to the list of workspace screens when checking item placement
add the " / quitquitquit " servlet to jetty7appserver . ( fixes # 7882 )
fix potential npe when deal with invalid realtime segment ( # 3804 )
added a check to skip processing for Teredo in Windows to ensure compatibility with Teredo in the Windows environment
add informative error dialog when add contact without protocol provider .
updated registration of user property service factory bean to use a new method to improve clarity and maintainability of bean registration process
be 0e3c8e0c : fixing issue where fastbitmapdrawable be not scale the draw into the correct bound . ( bug 9075810 )
fixed typo in totem and meitrack protocols as well ( fix # 568 )
changed access modifiers of ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager ` to improve encapsulation and ensure correct font path retrieval
added @ Deprecated annotations to EnhancedRandom . java to mark these classes as obsolete for future removal or replacement
updated exception handling in ClientMapStoreTest and ClientMapStoreTest to check for ExecutionException instead of ReachedMaxSizeException to ensure proper exception type validation and improve test clarity
add option to not send empty document to maxenttagger . fix # 64
added error handling to the createArtifactSubdirectory method and updated exception messages to provide clearer diagnostics when subdirectory creation fails , enhancing debugging capabilities
replaced instance of ` LazyTreeLoader ` with direct instantiation of ` JavacTool ` and modified return statements in ` JavaLanguageServer ` to streamline code by removing unnecessary inner class and improving clarity in error handling
bug 5834 : fix npe in directagentattache when a resource return null answer .
let the sendemail ( ) method throw a messagingexception and remove the try / catch block
fix some of the npe in pipeitemsobsidian . close # 3824
updated DateFormatEvaluator and FileListEntityProcessor to accept a Locale parameter and modified date parsing logic to enhance flexibility by allowing locale - specific parsing for date formatting
added functionality to include decals in StorageOptions and integrated it into StorageOptionChooser to enhance user control over decal display options for better storage management
updated method calls to include a null parameter and added a suppression warning in LiquibaseTest . java to enhance functionality by allowing optional arguments and to suppress warnings for unused methods
updated performance logging in HiveProtoLoggingHook and improved tests in TestHiveProtoLoggingHook to enhance performance tracking and ensure comprehensive testing of logging functionality
updated warning messages for compatibility with Solr 5.0 to enhance clarity regarding the integration of integrity checks in Solr configuration
8276156 : [ testbug ] java / lang / class / reflection / ignorerecordattribute . java fail with java . lang . runtimeexception : ' class file version mismatch '
added a new test class LdapPasswordAuthenticationTest for LDAP user authentication to ensure proper functionality of LDAP user management in the application
updated import statements and modified condition in TaskCompiler . java to use BasicStatsNoJobTask for improved logic to enhance performance by using footer scan scanning for non - transactional tables
fix an npe in save all ( # 1588 )
refactor VisibleAdvance class for improved clarity to enhance code maintainability and readability
fix # 1745 : do not reconnect after index informer . stop ( )
added a check for dynamic numbers in edge data table to allow handling of dynamic numbers alongside numeric columns
added nullability checks to method calls in RawPom . java to ensure parameters are non - null to improve code reliability and prevent NullPointerExceptions
updated API assignment to ensure fallback to the existing API when apiInfo is null to improve robustness by preventing null assignment to the API variable
renamed HeadersConfigurer and CacheControlHeadersWriter classes to improve clarity and consistency in naming conventions
[ add ] flamerenderer . dispose ( ) so that it properly dispose the flame texture use it .
fix # 6372 : add support for add local variable to snafetool
added a length check for character array before processing to avoid index out of bounds errors
set the default look and feel decoration to true in case when the application be create a dialog ( such a screen / dialog ) .
removed unnecessary ' EXISTS ' clause from the SELECT statement in HostRoleCommandDAO . java to simplify the SQL query and improve code readability
log4j2 - 1349 fix typo in lj1200message ( # 7467 )
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
replaced HostDatabase with ColorStorage in ColorsActivity . java to utilize a more color storage implementation
refactor string manipulation methods for improved readability to enhance maintainability and ease of understanding for future developers
removed unused Logger declarations from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
added a method to retrieve an array of entries from the map to facilitate easier handling of map entries in the application
added assertions to sendcoin in MultiSign34 . java for witnesses key handling to ensure correct transaction flow and integrity of the sendcoin method
[ te ] migrate CUfiltertest to junit 5 ( # 4562 )
replaced string concatenation with system - dependent path separator in JavadocReport . java to enhance cross - platform compatibility for appending classpath elements
changed method access modifier from static to instance for augmentSuccessViewModelObjects to allow subclasses to access these methods directly within the class
hhh - 15437 : avoid infinite loop in testutil . getfieldfrommetamodel ( string )
removed unnecessary configuration parameter from Outlink constructor calls to simplify object creation by using default parameters
removed the ` LexicalContext ` parameter from multiple methods to simplify method signatures and improve code readability
updated method to include modifiers and removed unused imports in UseLambdaForFunctionalInterface . java to improve code clarity and eliminate unused dependencies
do n ' t need to append class selector to the list since it ' s already add
removed conditional check for aggregated input in HiveCardinalityPreservingJoinOptimization . java to simplify the code by eliminating unnecessary input handling
add registryevent use the active registry ( # 6638 )
swapped the assignments of x3 and y3 in the Intersector class to correct the positioning of the intersection logic
add default method sbe decode length and sbe limit to messagereaderflyweight for api backwards compatibility .
fix testcontainers compatibility with late version of elasticsearch
tw - 35395 artifact of old build can not be download via torrent
added version ID handling to ClusterDefinition and updated related classes to accommodate new versioning features in the HDP - 1.2 . 0 namespace
camel - 6056 : camel - ftp should use source code generate configurer to avoid reflection configuration .
[ zeppelin - 4596 ] fixed npe when load interpreter setting with no permission
modified variable assignment logic in Gen . java and added new test class NoLocalsForDCEedVarsTest . java to ensure correct handling of dceed variables and validate functionality through testing
added a check for target certificates and created a new class for handling basic constraints to ensure proper handling of untrusted certificates and facilitate the creation of PKIX basic constraints
added initialization logic for the first database connection in JdbcPostgresqlDAO to ensure compatibility with PostgreSQL versions 9.5 and above
update websocket message size and implement input buffer size validation to improve message handling and ensure buffer constraints are enforced
lucene - 2844 : defensively reset pending delete count when we delete all segment
added null check for scopes before checking if it is empty in ClientRegistration . java to avoid potential NullPointerExceptions when checking for scope presence
added null checks for orderBy before setting parameters in CartesianProductStream . java to prevent potential NullPointerExceptions when orderBy is not provided
[ hotfix ] [ test ] replace assertthat with matcherassert . assertthat in clusterentrypointtest
cloudstack - 2120 : do n ' t create vm snapshot when vm be back up
added a variable for initialization of the HiveLog4j message and added a debug logging statement to improve logging clarity and provide more informative debug messages during execution
added a check for non - empty tasks before processing the asset to prevent potential NullPointerExceptions when processing tasks
fixed - do not delete a pubsub node if the delete operation fails ( smack - 407 )
fix bug in delete relation to avoid infinite loop
added error handling for empty result strings in Code128Reader and Code39Reader to ensure proper exception handling for empty results to avoid runtime errors
replaced TreeSet with LinkedHashSet for ciphers in SSLContextImpl . java to maintain the insertion order of cipher suites
added a method to check for control characters in the Escaper class and updated the InternationalizationTest with a new utility method to improve code clarity and ensure correct handling of control characters in terminal input
check for charsequence instead of string in sqlprovider ( # 2750 )
updated InternalMNode . java to handle null aliasChildren more effectively to improve robustness and prevent potential NullPointerExceptions
added a method to calculate the scroll offset for a page in PagedView and updated scrollDelta calculation in Workspace to improve page scrolling functionality by incorporating layout adjustments
updated variable names and method calls in JavaTemplate . java for clarity to enhance code readability and maintainability by using more descriptive variable names
add a workaround for http : / / code . google . com / p / mybatis / issues / detail ? id = 437 ( support api level 26 )
added a conditional check to prevent setting literalizers for the " database . server . id " field to ensure compatibility with specific database configurations
fix ripper on android , also add new ripper for o x .
added a web interface item to browse the HTTP server on startup to enhance user experience by providing access to the application ' s server information
resolved - issue batch - 1168 : javac should generate the actual value when @ getter be use
added error handling for obtaining the record in EncryptedSlideShow . java to improve robustness by handling potential ArrayIndexOutOfBoundsException
[ streaming ] improve log for head page and queue access
fix player avatar postload to avoid null pointer
updated Docker image version from 1.0 . 0 to 1.1 . 0 and modified the command to include SSH key algorithms to enhance security by using a stronger SSH algorithm and improve command flexibility
added a new long array and force a full gc in the ThresholdTest class to ensure proper garbage collection for improved memory management
updated logging checks to use ` getName ( ) ` instead of ` getName ( ) ` for better name comparison to enhance the accuracy of log level detection within the StdErrLog class
fixed - rremoteservice . getinstance ( ) method throw illegalargumentexception if use with spring boot 3.3 . 5
added methods to manage the selection state of the emblem in MultiButton to improve control over button selection behavior for better user experience
updated the Intent in CustomPlaybackOverlayFragment from UpNextActivity to NextUpActivity to use the NextUpActivity functionality instead of the NextNextActivity
http : / / issues . apache . org / jira / browse / amq - 4494 - fix replicasmanager not set in enablecontrollermode . thanks to stephan siano for reporting .
added connection close handling to RedisHealthIndicator and updated test cases to improve resource management and ensure proper closure of Redis connections
updated theme color retrieval methods in ProgramGridCell and Utils to streamline theme color management and improve code clarity
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
removed multiple type adapters from ToolingApiLauncher to ensure consistent instantiation of type adapters with no functional changes
updated the order of parameters in TestPayloadCheckQuery . java to ensure consistent parameter order for improved functionality
updated ConsoleReader to handle character printing with mask and improved test cases to enhance functionality and ensure proper handling of newline characters in console output
add user identification and command line information to the BaseCommand class to enhance user experience by providing context during application exit
move compiler api test back to graalvm - api
[ flink - 34073 ] [ runtime ] remove unused parameter in slotsharinggroup
updated comparison logic in StreamExInternals . java to exclude Java 9 specific implementations to ensure compatibility with Java 8 and improve code clarity
updated texture files in DecalTest and MusicTest , and modified screen clearing in SimpleDecalTest to display the sys . png file and adjust the song duration for better clarity and performance
be b7e0e8a : be f0f2ffae : fix bug 2290800 - all apps zoom when you come back from an app .
ambari - 7262 . remove unnecessary import ( alejandro )
added support for introspection handling in ClientDetailsEntity and modified token introspection logic in ChainedTokenGranter and IntrospectionEndpoint to enhance token introspection flexibility and improve error messaging for better client interaction
added HTML encoding to session attribute names and contents in HtmlSessionInformationsReport . java to ensure proper data formatting to prevent XSS vulnerabilities
added ` PhrasePrefixQuery ` and ` SpanQuery ` classes to the class annotations in ` Query . java ` to enhance query functionality by including prefix queries
fix squid : s1192 - collection . isempty ( ) should be use to test for emptiness
update the logic for determining if an argument can be a literal string and update the parent type accordingly to improve type - checking accuracy for binary concatenation
updated method parameters from ` A ` to ` Object ` in multiple classes to improve type flexibility and compatibility with various assertion methods
updated the ThrowingFunction interface to use generics for better type safety to enhance code clarity and maintainability by aligning with the new exception handling mechanism
added methods to retrieve and set the uploader behavior in AppPreferences and PreferenceManager to streamline the retrieval and modification of theUploaderBehaviour handling in the application
fix : return null for static field in type factory ( # 1711 )
updated the initialization of BitmapDrawable to use Robolectric to enhance compatibility with Robolectric ' s features for Bitmap handling
changed method names from ` isValidSEnding ` to ` isValidEnEnding ` and added a new variable ` c ` to improve clarity of the method ' s purpose and functionality
updated PageMarkerResources to use a different drawable resource for the current page indicator to improve visual clarity by distinguishing the current page indicator
added reinvocations variable and updated string concatenation format to enhance traceability of backups completed status for debugging purposes
update the formula for calculating topPadding in DefaultLookAndFeel . java to ensure accurate vertical alignment by using inner height instead of height
added a break statement to a case in Recognize . java to terminate a loop or switch case execution early
added preference - based home screen locking functionality across multiple classes to enhance user experience by allowing haptic feedback when navigating back from the home screen
updated Excel batch reader to handle string formula types and added a test for it to improve support for additional formula data types in the application
fixed bug 12774251 - immutablefield . setassignable ( true ) now ignore anonymous inner class method .
added a private String field ' userAgent ' and updated its initialization in CommaFeedConfiguration . java to ensure proper user agent handling when it is not already set
make apidoc tag optional in java dataformat a it appear in java 8
changed log level from info to debug for file not found logging to reduce log verbosity and improve performance during debugging
renamed the test class from QueueTest to QueuedPipeTest to better reflect the purpose of the test related to queue management
updated version check logic in BukkitMain . java to use an offlinePlayer class to ensure compatibility with server versioning and improve reliability of version validation
camel - 18084 : camel - jbang - defaultroutescollector should not run if no builder or patter be available .
added a vertexColor property and modified color buffer handling in PShape3D . java to allow toggling between vertex and non - vertex colors for improved color rendering
modified the ` printForeignKeys ` method to include a ` isPkColumnFiltered ` parameter and updated related logic accordingly to enhance column filtering control in the schema generation process
replaced the use of Shadow . extract ( matrix ) with matrix . getValues ( m ) in ShadowMotionEvent . java to simplify the code and improve performance by eliminating unnecessary extraction
changed package and import statements from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser ` in multiple Java files to streamline the package structure and avoid unnecessary imports
removed unnecessary classes map and simplified class definition handling in GroovyEngine . java to improve code clarity and maintainability by reducing complexity
move the hawtio - plugin module out of the hawtio - web module . ( # 1375 )
updated print statement for command logging in NativeCodeGenerator . java to streamline output for better readability and maintainability
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) to improve event handling by firing the change event instead of updating motor and active instances
added a test for verifying expected exceptions with different types and modified import statements to enhance error handling and improve test coverage for expected exceptions
o removed duplicate variable ' flatten ' and ' pack ' in automaticdependencies . to make the code clearer .
updated scope validation logic in ClientDynamicRegistrationEndpoint to ensure allowedScopes is correctly assigned when requestedScopes is null or empty
add marionette test to validate firefox profile and capability functionality .
camel - 8561 : added route description support in camel - core .
refactor JavacTreeMaker class to improve code organization to enhance maintainability and readability of the code
added edge weight setting in ImporterCSV . java to ensure proper weight handling for edges
server : fix the calculation of tariffs cost per hour ( # 4382 )
updated SQL queries in DatabaseMetaData . java and DatabaseMetaData . java to include additional columns and modified the default value to enhance data retrieval accuracy and maintain consistency in database metadata handling
added a check for binarized text , and throw an assertion if it ' s not built by parser .
modify the User class to include detailed user information in the User class to enhance debugging capabilities by providing detailed user information during object creation
update messagehelper . getbody to handle null .
[ flink - 16405 ] [ table - planner ] fix task deploy failure when vertex be not in a partition
fixed npe in cansubscribe if a group be invisible . jm - 466
added a new path to reference " maven . test . classpath " in AbstractJRubyMojo and removed unchecked warnings in CucumberMojo to ensure proper referencing of test classpath in the project
updated assertions in MethodHandleImpl . java and added userMethod method in MethodHandlesTest . java to ensure correct type checking and facilitate verification of user class signatures
added imports for StopFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilterFactory to enhance functionality and improve code documentation
increase width and height comparison conditions for image dimensions in URLImage class to allow for more flexible image handling when dimensions differ
improved name processing logic to exclude " META - INF / " from unique names to ensure proper handling of class names that start with " META - INF / "
added a new method signature to ` createImageToFileSystem ` and ` createImageToStorage ` to incorporate a background task to enhance the functionality of image handling in different display modes
updated StackWalkerTest to use a conditional check for the expected number of values based on VersionCheck to ensure test accuracy with the expected number of values based on the current version
change access modifier of addViewportJob method from protected to public to allow external classes to add viewport functionality
refactor : remove unused variable partition in test ( # 9859 )
removed server restart and restart settings from TestDatabase . java to ensure proper server behavior during testing
added null and empty checks for block in NodePathsConvertOperator and SchemaQueryMergeOperator to improve robustness by handling null and empty blocks gracefully
add ` ` total harvesting time ' ' to info display in gui response , and return - 1 if not find .
updated font drawing sizes in ParticleEditor . java to improve visual consistency and performance in rendering
added logic to update the key server port configuration in UpgradeCatalog240 . java and updated tests in UpgradeCatalog240Test . java to ensure proper configuration management for Hadoop environments and improve test coverage
added a transparent color to the SvgViewerFactory class to enhance the visual appearance of the graphics rendering
removed minSdk annotations from ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify configuration by removing unnecessary SDK requirement
updated the containsExactly method to accept varargs as a parameter and adjusted related method calls to simplify parameter handling and improve code readability
updated Bandwidth configuration handling and added a key validation check in Bucket4jFilterFunctions . java to enhance configuration flexibility and ensure proper response for invalid keys
add some doc on how to load german language .
added hooks to the Generator and updated query processing logic to utilize postExecHooks to enhance query execution control and ensure proper lineage evaluation based on query properties
try to fix the issue where noclassdeffounderror be raise on jdk 1.5 .
replaced the implementation of span handling in TraceWebFilter to use SpanAndScope for improved scope management to enhance span management by ensuring all metrics are reflected in a single span context
add a null check for the cause before retrieving the error message in updateReportParameters to avoid potential NullPointerExceptions when cause is null
updated exception handling to include base URL in CommonsHttpSolrServer to improve error reporting by providing more context about the Solr server
corrected landscape setting logic in HSSFPrintSetup . java to ensure correct orientation behavior for print setup
fix npe in javabletobjectinspector when check for null argument
added a validation check for argument names containing spaces or spaces to ensure that invalid argument names trigger an appropriate error
added background location listener handling in AndroidLocationPlayServiceManager to manage location updates to improve user experience by allowing background location updates to be requests or removed based on the activity context
change the condition to check for GL10 . GL _ POINTS instead of GL10 . GL _ POINTS to correct the logic for handling different primitive types
trufflestring : check for equality of byte [ ] array before use to compare the byte [ ] array .
added a method to set the command list property in ComboBox to ensure the ComboBox component can accommodate command list usage
nifi - 7461 fixed issue with filename contain forward or backslashes .
updated command line arguments to use " zkcli . sh - zkhost " instead of " solr " to standardize command usage across different environments
updated equality checks in FirmwareUpdateProgressInfo and added new condition in BridgeHandler to ensure proper comparison of status values and improve code readability
added a condition to check for remote Grpc status before posting a console event to only post a warning when the remote Grpc status is OK
refactor method signatures in XYItemRenderer and related classes for improved readability to enhance code maintainability and clarity by standardizing method signatures
fix a bug where entity be not save in the forge chunk and not load properly .
fix ( api ) : add error string to the glsurfaceviewapi18
added method to retrieve supported locale and updated info request to display the list of supported locales to enhance functionality by providing a unified way to display feature data based on supported locales
updated server URI handling in RFC2616BaseTest . java to ensure correct URI formatting for HTTP requests
added a method call to addToHelperList in the Construction class to enhance helper list management for better data handling
added handling for " [ [ ] escape sequence " in GlyphLayout . java to ensure proper processing of the end of the array in the layout
added security permissions handling in Transport . java and TCPTransport . java to ensure safe context class loader manipulation and thread naming within privileged actions
refactor directory management logic to handle null file paths more gracefully to improve robustness and error handling during folder operations
fix npe in testng when service loader be not provide .
removed a debug log statement in BarrowmanCalculator and adjusted the calculation of deltap in TubeCalc to streamline logging and simplify the calculations for improved readability
added type checking for Node and updated column addition logic in TimelineControllerImpl . java to ensure proper handling of node types when adding columns
added extra component registration for the broker admin application to allow for better control over the additional component during initialization
added a new test method and modified MultiCfQueryExecIT . java to validate query execution to ensure correct handling of events in the database interactions and validate expected results
peergroup : use the peer version that we ' ve choose from , that ' s the best possible candidate
reset current cycle to avoid infinite loop
remove confignode simple consensus snapshot threshold by default ( # 11954 )
updated multiple Java files with consistent formatting and removed unnecessary lines to improve code readability and maintainability
fix illegalargumentexception when run jmx with managedservice annotation .
tika - 2274 -- upgrade common and add support for hanlde non - unicode entry name . enhancement and test coverage .
8274397 : c2 : compiler / loopopts . c2 : added test for div - by - one problem
refactor TemplateRegistry to enhance type safety by implementing lookup methods for generic types and superclasses to improve robustness and maintainability of the code by implementing type lookups more clearly
updated the default value of the ByteArrayOutputStream class from 512 to 1028 to improve memory efficiency and performance during object initialization
added comments about symbols not yet available in PlayerSettingsScreen . java to prepare for the implementation of symbol functionality
avoid unnecessary array allocation and send on - byte array when an error occur .
minor refactoring , remove unused method from sipCommpopupmenu
updated error handling in SemanticAnalyzer to check for null values before throwing a SemanticException to improve robustness by avoiding null pointer exceptions when the source is invalid
added scaling and scaled extrements to the skeleton renderer to ensure proper rendering of skeletal shapes in the application
added ` getSolrHome ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide a way to access the Solr home path for testing purposes
added @ ComponentScan annotation to SpringWebConfig . java to enable component scan for improved query performance
remove deprecate account constructor ( should use user . toplatformaccount ( ) )
added unit tests for installing package and updated logic for handling null package names to ensure proper handling of package information and improve robustness of the installation process
improve documentation ( javadoc ) of org . hibernate . cfg . availablesettings . cdi _ bean _ manager
added TransactionCapsule and ReceiptCapsule fields to the TransactionTrace class to enhance the functionality of the TransactionTrace class for better transaction management
add client property to support shuffle member list . fix # 4128
changed the type of the ' val ' variable from Text to CrawlDatum to ensure the correct type is used for processing crawl data
refactor JsonDeserializer class to improve JSON parsing logic to enhance performance and maintainability of JSON processing
updated configuration paths for configuration and modified fetch size handling in QueryProcessExecutor to enhance configuration management and improve thread - local fetch size management
hive - 23067 : fix typo in genericudafTrunc ( david mollitor , review by krisztian kasa )
removed an unused import statement for ExecutionContext in TaskletStep . java to clean up the code and reduce unnecessary dependencies
initialize the title variable to an empty string to ensure proper initialization of the title variable before use
fix # 1401 , handle empty body in asynchttpclient call with no body
add a deprecated method EmbeddedServerInstance in io . micronaut . runtime . server package to provide a clear mechanism for managing embedded server instances
use reflection to access and register mac event ( # 3749 )
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update variable names accordingly to improve clarity and consistency in naming conventions
modified the return statement for the ` toEnum ` method in ` HandlerLibrary . java ` to ensure the method correctly returns the result of ` toEnum ` for enum type handling
make hideunprivilegedobjects field final ( # 1783 )
fixed bug in audio data source that cause test to fail .
added a condition to save the video URL in IOUtils for Android Q to ensure compatibility with newer Android versions
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 454 : fix serialize variable in second service task
updated import statements and class names across multiple Java files to enhance clarity and maintain consistency in naming conventions
[ mng - 6056 ] avoid performance bottleneck in multi - threaded environment
hbase - 26975 remove unused class dataoutputoutputstream from hbasebasemigration
hive - 21628 : enable autocommit by default for hive ( ashutosh chauhan via thejas nair )
changed log level from info to debug for enhanced class success message to reduce log verbosity and improve performance during development
added a method to retrieve the default provider name and updated the OpenSSLProvider to use it to improve code maintainability and ensure consistent provider identification across different platforms
added Captor annotation processing to MockitoBeforeTestNGMethod to enhance the processing of Captor - related fields during tests
added error handling for class and method names in TestSuiteBuilder . java to ensure proper configuration and reporting of test cases
updated import statements and refactored method chaining in GroovyAutoComplete and GroovyLanguage classes to improve code readability and maintainability
use graphhopperosm instead of graphhopper for example import , fixes # 1097
[ grid ] making handlesession retry in case of failure .
changed mHideSysUiScrim from final to non - final and added functionality to update the visibility based on user preferences to enhance flexibility in UI behavior based on user preferences
refactor call handling and exception management in OkHttpCall and Call classes to improve code clarity and maintainability while ensuring proper cancellation of calls
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
updated RequestMatcher interface to extend from org . springframework . security . web . util . matcher . RequestMatcher to ensure proper inheritance of RequestMatcher from the Spring Security framework
[ java ] fix stack overflow in lambda for applicability
add some extra test to try and fix the build .
[ iotdb - 5040 ] [ iotdb - 5041 ] [ test ] add test for the legacy display metric that be not support in the deviceconfig .
[ api ] fix exception in externalviewreadertest and refactor timestamp to system . currenttimemillis
updated the icon resource in RootCursor from a logo to a mipmap . ic _ launcher to improve compatibility with the app ' s icon representation
added content text setting in the error builder to ensure the error content is correctly displayed for users
updated ConcurrentHashMap . java for improved thread safety to enhance reliability and performance of concurrent operations
added methods to adapt UserTrades and Abucoins fill in AbucoinsAdapters and AbucoinsTradeService to enhance trade data management by providing structured data for user trades
updated the return logic in the PlotSquared . java file and modified plot claiming logic in Claim . java to ensure that the plot claims are validated correctly and to correct player deletion behavior
simonstewart : make the htmlunit driver able to use the proxy on the firefox and internet explorer
added handling for VARBINARY data type in BlobType . java to ensure proper data type mapping for VARBINARY types
apply patch from jboynes to improve cookie handling . thanks to benjamin graf for the patch .
safeguard the synchronization of libfifitype . getarraytypeinfo in libfificontext # getruntimecontext ( )
update context handling in InboundBuffer to utilize ContextInternal instead of Context to improve compatibility with Vert . x contexts and enhance thread safety checks
added a new method ` deadServerNoTimeout ` and modified timeout tests in ` LdapTimeoutTest . java ` and ` LdapTimeoutTest . java ` to accommodate new timeout scenarios to improve test reliability and ensure correct timeout behavior for LDAP interactions
corrected a typo in the usage message for Unicode data in CharacterName . java to ensure accurate reporting of the data type used in the application
camel - 2318 fixed the unit test error of camel - cxf
initialized textRect and iconRect variables in SynthTabbedPaneUI to ensure proper instantiation of rectangles for layout management
added support for the BoosterSet component in ComponentAssemblySaver and modified the return value in BoosterSet to enhance functionality and ensure correct behavior in the BoosterSet representation
add proxy support to jabref , for use in ebean - jabref .
updated metrics keys and adjusted time calculation in multiple classes to improve clarity and accuracy of metrics tracking by using more descriptive names
replaced an InternalError throw statement with returning false in mmm Class . java to simplify error handling by returning false instead of throwing an InternalError
pdfbox - 2852 : remove mortbay reference to apache common log which be n ' t need
removed chunked transfer encoding check from NettyRoutingFilter to simplify the request processing for improved performance
added a call to ` clearAttributes ( ) ` in ` PatternTokenizer . java ` to ensure any residual attributes are cleared before processing the token
refactor VerificationAfterDelayImpl to accept a polling period instead of a delay and enhance error handling to improve reliability and maintainability of verification processes
added compaction configuration to the SemanticAnalyzer and SessionState classes to ensure proper handling of compaction during query processing
zeppelin - 3168 . do n ' t copy shared data in zeppelin - zengine . jar when copy native image
hbase - 21937 addendum fix checkstyle error in hbase - admin and hbase - client
- disable test that fail on jdk - 8 .
refactor the calcXBounds method across multiple renderer classes to streamline the calculation of X bounds for better performance and clarity
added error handling for XML parsing and releasing the reader to ensure proper resource management and prevent potential memory leaks
release header buffer to free memory when send data .
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to use it to ensure proper handling of var type conversions in Java
added a null and closed check before closing the result set in JdbcExecutor . java to improve robustness by preventing potential NullPointerExceptions
update driver version to 10.6 . 0 to support jdk 11
fixed bug 1244441 - usingstringbufferlength no longer throw a npe if no literal be present in a simplenode .
removed logging of errors in RemoteSparkJobMonitor . java to improve error handling and reduce unnecessary logging
changed the return type of createDb ( ) from void to Connection and added connection closing to improve connection handling and ensure proper resource management
[ hotfix ] [ metric ] move custom metric creation into separate module
hbase - 13292 add an option to disable large compaction ( jesus camacho rodriguez )
updated BitstampDepositAddress to handle both JSON and V1 deposit addresses correctly to improve error handling and ensure proper JSON unmarshalling for deposit addresses
buffer response : use abort instead of throw exception when buffer capacity exceed .
fix failure in delete link in project view when directory have absolute path ( # 2322 )
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and modified metrics handling in ` DefaultMetricsRegistry ` to enhance event tracking capabilities and improve thread - safety in metrics tracking
updated network interface handling to check for multicast support before returning the next available NetworkInterface to improve robustness by ensuring only supported network interfaces are processed
add a loop to iterate over validCheckSums and update the return logic to ensure all validCheckSums are considered for validation
added a cloning method to the BufferedChecksumIndexInput class to prevent instantiation of the original IndexInput and indicate it is not supported
updated square square calculation in Circle . java to use a radius variable to improve accuracy of geometric geometric computations
fix frequency band tostring ( ) return the same value a getdownlinklogicalchannel ( ) and remove some dead code
renamed ` tapSquareSize ` and ` tapSquareCenterY ` to ` tapRectangleWidth ` and ` tapRectangleHeight ` to improve clarity and consistency in naming conventions
avoid overwrite file with temporary row by default ( cassandra - 13228 )
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` class and modified the format method in ` Util ` to allow users to include the last fill time for better data management
added getDelegate ( ) method to TraceCallable and corresponding test cases to enable retrieval of the delegate attribute from the callable and Runnable objects
updated error handling in FileActivity and introduced a new intent filter in FileDisplayActivity for synchronization to improve file management capabilities and ensure proper synchronization based on fragment types
added error handling and stream writing functionality to ` ForeignIncubatorQuicheConnection ` , ` JnaQuicheConnection ` , and ` JnaQuicheConnection ` to enhance connection management and improve error reporting during quiche operations
add a new parameter to the method call to enable asynchronous execution of JavaScript in the application
removed the alignment parameter from TableCell constructor and adjusted its usage in BaseTextFormattingHelper and TableCell classes to simplify the TableCell initialization and ensure consistent alignment across cells
add a new file TracingAutoConfiguration . java to configure tracing components for the UAA service to enable better tracing capabilities and customization of tracing in the application
refactor para addition to use a Para instance for adding elements to improve code clarity and maintainability by using a Para instance for adding elements
fix the bug that queryexecutorv1impl be n ' t return the list of queryable segment ( # 5807 )
rename VertxBufferTest . java file to improve clarity and consistency in file naming
add test case and fix for hsmf - 752
changed mContext from private to protected in PredictionAppTracker . java to allow subclasses to access and modify the mContext variable
remove unused import of SortedSet and TreeSet in ShowTablesOperation . java and ShowViewsOperation . java to streamline code and improve readability by eliminating unnecessary dependencies
add a new class MongoDataIntegrityViolationException to handle data integrity violations in MongoDB operations
[ hotfix ] fix checkstyle violation in jobcoordinationservice
updated methods in DisplayUtils to use a map for mime type handling to improve code clarity and maintainability by centralizing mime type management
replaced the existing merge policy implementation with a more efficient method to improve merge efficiency and ensure proper handling of tiered merge policies
added a check to return early if mOverviewStateEnabled is false to improve performance by avoiding unnecessary processing when overview state is not enabled
update error message in CpuNDArrayFactory to reference the correct path for handling binaries to provide clearer guidance on guidance for users regarding CPU performance issues
updated the ` loadSettingModels ` method to accept an ` InputStream ` parameter and modified the order of parameters to allow loading setting models to accommodate an input stream for loading settings
added null checks for input fields in FilterLeafReader to ensure safer handling of null values and prevent NullPointerExceptions
add default key size to jcecmfencryptorbuilder to enforce a minimum value to be use for encryption
update exception handling in NetSocketReader and update SoftEndOfStreamException to include a more generic message to improve error reporting by preserving the original exception message for better debugging
added dependency injection annotations to multiple classes for consistency in dependency management to improve code maintainability and reduce potential conflicts
updated the expected size in BundledDistributionTest and added new assertions in PostgreSQLTest to enhance test coverage and ensure correctness of database user attributes
[ flink - 27454 ] [ pipeline ] add jobname option to streamexecutionenvironment to specify the name of the pipeline
modified scaling logic in OverviewState . java to differentiate between two - panel layouts to ensure correct layout handling for different device configurations
change iceplainsbiome to extend Snowybiome and adjust temperature and rainfall values to improve biome functionality and ensure compatibility with the new block structure
fix comparison of min / max time in dataupdatemanager when there be no zone
[ j2kt ] fix thisreference to not be qualify .
fix regex use in xhamster ripper to work on window a well
copy all entity in world instead of use all entity directly
[ jbrules - 3690 ] in oracle dialect , the table name with a . or . feature type should be add to the schema to ensure correct table name resolution based on the specified schema
tidy up some whitespace ( # 4332 )
added a new variable ` mNumberOfAllFiles ` and modified the constructor of ` FileMenuFilter ` to accept it to improve clarity and functionality of file selection based on the number of files
[ java ] change termwindowlength to termlengthmask for network publication .
fix checkstyle issue in events / guildupdateownerevent . java ( # 778 )
set inPortalTicks only if it is below 80 to ensure inPortalTicks do not exceed the player ' s limits
added support for compression in the ClusterMonitorTileSkin and modified chart rendering logic to improve data representation and maintain consistent item appearance based on compression settings
add doc since to responsetemplate class , it ' s not only use by jackson
change variable types from int to long for length calculations in Base64 . java to prevent potential overflow issues with large binary data sizes
removed null check for header in RendererConfiguration . java to simplify the logic for handling null renderer scenarios
server : do not update disk offering when create volume ( # 6428 )
updated import statements and modified the builder pattern in HitbtcAdapters and Order classes to improve code clarity and ensure compatibility with new package structure
fix typo : assign ` ` consecutiveidle ' ' instead of ` ` idle ' '
added an extra space in the service description for the JRuby Scripting service to improve readability and consistency in service identification
fix the bug that configcategory would n ' t display the name properly when use the display name .
add a condition to check if preciseExchangeAmount is within the range of - 0.000001f to ensure accurate exchange amount handling inicipation
added logic to break if the number of iterations exceeds 10 to improve control over the loop execution flow
add a new test method ` testHDF4 ( ) ` to ` HDFParserTest . java ` to ensure compatibility with HDF4 file reading through CDM library
added a new constant CALCITE _ 6092 _ FIXED and modified test assertions to use it to improve error handling for invalid TIME values in CALCITE _ 6092
added spaces in the conditional statement for better readability to enhance code clarity and maintain consistent formatting
added methods to quietly close all AutoCloseable objects and modified the loop structure to improve performance by reducing processing time while handling multiple closeables efficiently
replaced the existing confirmation button string with a common yes string in RemoveFileDialogFragment to simplify the code and improve clarity of the confirmation message
added a condition to check if source dimensions are non - zero before applying the drawing operation to ensure that images are only created when dimensions are valid to avoid potential errors
replaced ReflectionHelpers with Java ' s built - in method for defining class in UnsafeAccess . java to improve compatibility with Java ' s security framework and enhance code readability
fix address validation in guiutil . validate ( ` ` foo . com ' ' , ` ` foo - z0 - z0 - nn ' ' ) .
replace boolean conflict check with a long one to track row conflicts to improve accuracy in handling conflicts and simplify the logic for row conflicts
update public version check to 1.1 . 0 ( # 141 )
refactor reference handling in ReferenceMemory . java to include a condition for reference equality to improve code clarity and ensure the reference reference is considered when it is equal
updated the Injector . java file handling to support multiple seed files to enhance flexibility and error messaging during dependency injection
added a condition to hide the original view when hideOriginal is true to improve the visibility control of the original view when hidden
updated the calculation of maxNodes and modified the condition forTrips in DefaultLoopPolicies . java to ensure proper handling of edge cases and correctness of the optimization logic
combinedTexture and UVCoordinatesGenerator classes to handle texture coordinate types more effectively to improve error handling and maintainability of texture coordinate generation
added error handling for file deletion and improved variable names in multiple classes to ensure proper deletion of files and enhance code clarity by checking input parameters
camel - 20225 : camel - core - optimize to use delegator for seek / close method
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 353 : do n ' t locate handle correctly in postgres
replaced the addition operation for adding elements to the convertedValsList list to improve performance by reducing unnecessary addAll operation
deprecate timer constructor that keep backwards compatibility
added a nightly warning message to the user when the Universal Gcode Sender is a nightly build to provide user feedback on potential issues related to nightly builds and potential issues with compatibility
added check for null team name and sort response by team name in feedbacksessionresultsbundle
updated the return message to include unnecessary ` throws ` declarations to clarify the purpose of the method and improve code readability
deleted the CacheApplication . java file and updated references in CommonsApplication . java and ShareActivity . java to streamline cache management by consolidating functionality within CommonsApplication
replace usage of ` realObject ` with ` RuntimeEnvironment ` for service and activity methods to improve code readability and maintain consistency in accessing the ` RuntimeEnvironment ` instance
modified the StatisticsServlet class to enhance servlet performance metrics to improve application efficiency and response time
replaced direct calls to ` Resources . getSystem ( ) ` with a call to ` ResourcesManager . getConfiguration ( ) ` for compatibility with KitKat and above to ensure proper configuration updates for devices running Android KitKat and above
ambari - 5727 . create a new resource before look for update link exist in version definition . ( swagle )
rename ApplicationImpl , NodeImpl , and Witness classes to improve clarity and consistency in naming conventions
avoid npe during rollback of create index that may have be delete in a previous commit
added " com . sun . sun . org . apache . xml . internal . resolver . helpers . " and " com . sun . sun . org . apache . xml . internal . resolver . readers . " to CheckPackageAccess . java to enhance access control checks for utility classes
renamed methods ` persistExecutionContext ` to ` add ` and ` updateExecutionContext ` across multiple classes for consistency to clarify the method ' s purpose and improve code readability
[ gr - 46711 ] remove loop begin when remove from gr - 46711 .
replace RecyclerView with WidgetsRecyclerView and update height measurement methods to improve layout consistency and manage RecyclerView dimensions more effectively
added a conditional check for terminal support in ConsoleReader . java to ensure compatibility with terminal input handling
changed data types from ` long ` to ` int ` and updated time allowed calculations in ` LBHttpSolrClient . java ` to use ` nextInt ` for generating random values to accommodate larger time values and improve compatibility with time - related logic
added session validity check in AbstractSessionCache and modified session flushing in RemoveSessionTest to ensure only valid sessions are processed to maintain session integrity
core - 2323 modifyindexchangegenerator - no need to cast column information to collection before use it
replaced Vector with ArrayList for managing RadioButton instances and added action listeners to improve flexibility and maintainability of button management
refactor UserManagerCompatVL and related classes to use a new UserManagerCompatVM class for better organization to improve code clarity and maintainability by consolidating user creation logic
added ` getDatabaseMajorVersion ` and ` getDatabaseMinorVersion ` method in multiple database - related classes to provide a consistent way of retrieving the database version across different database implementations
refactor ActionGraphCache to improve handling of mismatched rules and action graph lookups to enhance clarity and maintainability when comparing action graphs
added LockDatabaseDesc and UnlockDatabaseDesc classes with enhanced serialization support for database operations to improve clarity and functionality in managing database states within the Hive plan
refactor RankingTopComponent and RankingToolbar to use setter methods instead of direct field assignments to streamline code and improve readability by reducing redundancy in setting values
added handling for disconnection messages in HandshakeHandler and updated logging in NodeImpl to improve disconnect handling and logging clarity for better debugging
added a test method for setting and deleting a storage group in IoTDBAuthorizationIT . java to ensure correct handling of storage group operations in the database
fix : : namespace support for documentai ( # 6254 )
fix # 2273 : miss type info should be show when there be an unknown type
added methods to afterTestClass and beforeTestClass in StepScopeTestExecutionListener to enhance test context management during test execution
[ java ] fix counter so it do n ' t allocate clock every time when create .
simplified the toString ( ) method implementation in MultiSteps and SendEmail classes to improve code readability and reduce redundancy
added cloning of joinKeys in JoinDesc to ensure joinKeys is properly populate and handle potential null pointer exceptions
added PrincipalResolver to the authentication handler registration to enhance the handling of principal resolution in authentication processes
modified the ` addSettingsFromFile ` method to accept an ` ImmutableList < Path > ` for search paths and updated related tests to enhance flexibility in handling multiple paths during configuration parsing
changed variable declarations to be final in Oracle . java to ensure immutability and prevent accidental reassignment
[ flink - 23790 ] [ runtime ] make unaligned checkpointingoptions default to true
[ calcite - 5420 ] throw an unsupportedoperationvisitor when the query do not exist ( jin xing )
add a debug log option to the compiletheworld to help diagnose test failure
add a check to ensure that the variable ' s type is an instance of LocalVariable before proceeding to avoid runtime errors when handling non - local variables
added support for MySQLDatabase in the CreateTableGenerator to ensure proper handling of NULL values for different database types
added context class loader management in EnvConfiguration . java to ensure proper class loader management during configuration changes
added a condition to set the ejection delay for the motor configuration when the stage number is zero to improve the responsiveness of the motor during the simulation process
polish ` ` use @ order ' ' annotation in test class
refactor TransactionUtil2 to improve code readability to enhance maintainability and facilitate future development
updated issuer resolution methods to accept an Optional < OAuthRegisteredService > to enhance immutability and allow for more flexible issuer resolution
updated string concatenation format and added null check for collection reference to improve readability and handle potential null pointer exceptions
replaced the method call to getStyle ( ) with getAllStyles ( ) for alignment to ensure that the correct style is set for rendering
added foreign database and schema name handling capabilities to ForeignKeyColumn and ForeignKeyColumnMutator classes to enhance the flexibility and functionality of foreign column management in the database schema
[ java ] warn rather than timeout when try to join a new leader .
updated ShadowActivity and ShadowBluetoothDevice to use Shadow . extract instead of import static imports to streamline shadow retrieval by eliminating dependency on Robolectric ' s Shadows library
refactor selection root handling in FileSelection . java and add a new test in TestBugFixes . java to improve path validation and ensure correct behavior of file selection in specific scenarios
deprecate iforgeitem . oninventorytick ( ) , for removal in 1.20 . 1
write a war resource to a zipfile when export to jdk
added a null check before updating the options menu in SingleUploadFragment to prevent potential NullPointerException when getSherlockActivity ( ) is not initialized
updated widget binding logic to handle default options to ensure consistent behavior when binding app widgets
[ ecobee ] added new capability constants for airpressure and co2pp and vocppm to eobee sensor . ( # 1267 )
fix duplicate call to getprofilepage and add comment about session cache .
added environment variable " AAPT " and " AA2 " to the Genrule class to ensure proper handling of AAPT executable in the build system
only dump access table in truffleinstrumentBranches if the option be enable .
added null check before disposing the message object to avoid potential NullPointerException when disposing the message
changed access modifier of ` db ` to ` @ Getter ` and modified ` init ` method visibility in ` TxCacheDB ` , added initialization hook in ` SnapshotManager ` , and added ` initCache ` method in ` TransactionCache ` to improve encapsulation and ensure proper initialization of database objects
if logwatcher be disable , do n ' t crash .
replaced printStackTrace ( ) calls with failure ( ) for cloning failures to improve error handling by using a more descriptive failure message instead of printing stack trace details
updated IOSImplementation to use a new SmallByteArrayOutputStream class and modified the IOUtils implementation to extend it to improve memory management and ensure proper handling of byte array output streams
* added ordinal attribute support to shader ( fix # 1881 )
removed variable ' territory ' from database connection in AbstractDIHJdbcTestCase . java to simplify test environment by using default environment settings
fix routeinfo to handle null as well .
8274373 : update test to ensure default language be set when generate tag
fix check for completion item in completionprovider ( # 1941 )
updated the argument handling in HybridClusterIntegrationTestCommandLineRunner to use a more specific time column name to ensure compatibility with the updated command line syntax and improve code clarity
updated variable names and modified output format handling in SnapshotVariationsTest . java and OutputOptions . java to enhance clarity and ensure correct file extension based on the output format
modified condition to check if not isQsbEnable before adjusting the minQsbMargin value to ensure the QSB margin respects the updated constraints of mInsets . bottom
add equal and hashcode method to AnimationList , SceneKey , and GltfModelKey classes to enhance object comparison and hashing functionality for better performance and readability
added a ` setDate ` method to ` AbstractGenerator ` and modified ` HttpConnection ` and ` HttpTest ` to handle date handling to improve date management functionality and ensure proper header management for HTTP responses
replace Adler32 with CRC32 in Store . java to improve consistency and utilize more efficient CRC32 implementation
cloudstack - 10319 : allow self - fencing heartbeat to be disable by default
added a new warning constant for zero area in FinSetCalc and updated geometry warning addition to improve handling of geometry errors based on the fin area validation
replaced Jackson annotations with JsonGenerator and added a new serializer for DocumentMetadata to enhance JSON serialization and deserialization for improved data handling
hhh - 15615 add functionfactory . dateTrunc ( ) for mysql and oracle
added a check for " memory . " before converting gauge to " memory . expected . error " in MetricUtils and updated error handling in MetricUtilsTest to address potential memory pool issues and improve error reporting clarity
fix miss call to parent . getparent ( ) in usertests
update type annotations in ValidationTask to use constants from RUNTIME _ PROTOTYPE _ TYPE and RUNTIME _ OBJECT _ TYPE to improve clarity and consistency in type annotations
change backup image name to avoid clash
update method calls to return a new data object and set a new ID to ensure the method returns the correct data values for improved functionality
replaced the existing loop with a loop that processes items in AllAppsContainerView to improve efficiency by applying badge state directly to child views
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
added comments to clarify the start process in ResourceHandlerTest and ServletContextHandler to improve code readability and maintainability by clearly indicating the processing flow
be f8e2365d : be f8e2365f : removing workaround for bug 2846635 , bug 2846635 , and 2843636
remove assertion because lookupmodule be not initialized
added @ Ignore annotation to test method in ClassicSuperHandlingTest . java to clarify the test ' s purpose until call - through is set to true
updated ItBit exchange references in multiple demo files to ensure compatibility with the latest version of the ItBit API
ww - 1353 solves problem with profile and session reset have a null value
changed class modifiers from public to private for several classes and added a private constructor to prevent instantiation and enhance utility functionality
coverity : fix sonar warning : try - with - resources in finally block
updated serialization and deserialization methods in Util . java for improved clarity and support for Vector and Hashtable types to enhance code maintainability and ensure correct handling of Java collections
enhance the warning log for invalid retention time by including tableWithType to improve log clarity for debugging purposes related to retention time validation
added trimming to the fragment list size check in QueryExecutorImpl . java to ensure that empty or leading spaces are handled correctly
fix resourcepackfilenotfound exception due to use correct modfile . getpath ( ) . toFile ( ) .
fix potential bug : node and edgebuilder have to be remove from partition toolbar
removed unnecessary condition for showAsGrid ( ) and added checks for task view focus and visibility to improve task view handling and ensure proper visibility before proceeding
refactor calculate methods to return BMIViewObject and update process ID handling to improve type safety and functionality by utilizing the SystemInfoService interface
removed the use of Comparator . compare in the QueryCommand class to simplify the comparison logic for better readability and performance
modify block handling in Entity . java to account for BlockHayBale to adjust damage when the block is not a BlockHayBale
replaced ` LinkedList ` with ` List ` for better type safety and updated environment variable handling to improve code clarity and ensure proper retrieval of environment variables
add support for custom plugin property ( # 1742 )
update condition to check if hashTable is not empty instead of null to improve validation logic for inner joins
fix ( griffin ) : of ( ) should not be check for seconds = 0 when create timestamp .
[ java ] do n ' t expose archive context in clustered service agent .
updated conditional check to include compilation condition to ensure compilability occurs only when not in compiled mode
added new test methods and modified the environment variables for image testing to enhance coverage and improve test coverage for image operations
refactor TogglableFlag class to enhance default value handling and add a change listener to improve feature flag functionality and ensure responsive updates when configurations change
change log level to info for better visibility of initialization failure to improve logging clarity and reduce noise in error logs
added a conditional check to return early if the current platform is ANDROID to prevent further processing for Android development to avoid potential issues
( chore ) camel - base - engine : use hamcrest assertion instead of junit in test
added new functional interfaces for Byte , Float , and Short in the common package to establish a consistent structure for handling various functional interfaces in the codebase
changed the return type of getSubsColor method from int to String and updated related logging in multiple classes to improve clarity in handling sub colors and enhance traceability of bitrate configurations
add a conditional check before deregistering the future to ensure that the future is only deregistered if it is complete to improve resource management and prevent potential memory leaks
replaced a manual frame conversion with a output method in AbstractWebSocketConnection . java to simplify the code and improve readability by using the output method
added a check for the extras before starting the welcome intent in LoginActivity and set the redirect flag in SignupActivity to ensure that the welcome activity is only started when a redirect option is present
added a new ShadowCheckedTextView class to manage checked state in Robolectric tests to enhance testing capabilities for CheckedTextView functionalities
add serializable to fix compilation error .
8225068 : add expiry exception for identrustdstx3 alias to verifycacerts . java test
removed redundant calls to setAttribute for TEMPDIR _ CONFIGURED and TEMPDIR to streamline code by eliminating unnecessary operations
update occupant ' s nickname parsing and add test for occupant . nick .
updated method signatures and variable assignments in QuicSession and related classes to improve clarity and consistency to enhance code readability and maintainability by standardizing variable naming conventions
updated merge policy handling to use configuration methods instead of direct method calls to improve merge flexibility and ensure proper type checking for merge policies
refactor variable names and improve readability in ICU4JImpl and TextPosition classes to enhance code clarity and maintainability by using named variables instead of local variables
added handling for ComputedDateValue in the AddDefaultValueChange class and updated AbstractDatabase to use ComputedNumericValue for numeric and date values to improve data type consistency and provide better error handling for default values
update nbtscoreboardIoService . java file to be correct ( # 4028 )
ensure that serviceprovidermetadataresolver can resolve service provider metadata from classpath ( # 1748 )
make graphprinterdumphandler . creategraphprinter ( ) public so it can be use in test
added a calculation for average price in HuobiAdapters to properly handle order average price calculations
updated projections and type handling in aggregation operations to improve data mapping accuracy and ensure proper handling of retyped fields during operations
modify the addViewer0 method to return a boolean indicating if the player is in a viewers list to improve player interaction handling by ensuring only one viewed player is processed
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve memory efficiency and drawable state handling
refactored SPDYClient to simplify connection creation and session handling to enhance code readability and maintainability by reducing redundancy in variable initialization
[ dubbo - 3988 ] fix nullpointerexception when serialize class in protostuffobjectinput / output ( # 3989 )
pdfbox - 5672 : fix checkstyle violation ; move comment to correct place
refactor BarrowmanCalculator class for improved readability to enhance maintainability and clarity of the code
ggb - 1958 hide ax if there be n ' t one or more
replaced deprecated setFilter and setWrap methods with unsafeSetFilter and setWrap for unsafe operations to improve performance and maintainability by using a more efficient method for setting filter and wrapping properties
[ ds - 3952 ] add comment about the return to workspaceitem method .
added support for secure connections in CustomUrlJob and created a new class CustomUrlTrustEverything to enhance security by allowing secure connections using trust management
added a method to retrieve the used clock rate in ` EncodingConfigurationTableModel ` and updated references in ` MediaFormat ` and ` MediaStreamStatsImpl ` to improve clarity and consistency in clock rate representation across different media formats
updated TextureAtlas . java file to improve texture handling functionality
update return statement to use getModuleName instead of getProductNameForBuildTargetNode and add a method to set module name in AppleLibraryBuilder to improve clarity and consistency in module naming conventions
correctly lock and release registry in testslot .
fix : add findids with inheritance to sqltreebuilder ( # 1588 )
updated WebSocketServletRFCTest to improve buffer handling to enhance readability and correctness of WebSocket connection handling
[ wasm ] clear old reference before register to it in binary mode .
add ` ` ttl ' ' config option to log collection ' s sql plugin ( # 2756 )
updated serialization types in CustomChangeWrapper and modified conditions in XMLChangeLogSerializer to include SerializationType . NAMED _ FIELD to enhance serialization handling and ensure proper field types during serialization
replaced the use of a custom thread pool for server container in DeploymentExceptionTest . java to improve thread management and resource handling within the Jetty server
added error handling around Fresco initialization and initialized as null in NearbyController to improve stability by gracefully handling exceptions and preventing crashes during initialization
modify return statement to handle null and empty object names more robustly to ensure that objectName is always returned to avoid potential NullPointerExceptions
8220551 : jfr tool show potentially misleading message when it can not access a file
[ flink - 15637 ] [ table - planner ] make planner and executorfactory default value static final
corrected the spelling of " owner " and improved the handling of certificate subject names to enhance code clarity and ensure proper handling of null values for subject names
add deprecation to @ runtimeoptions ( since = 23.0 ) for removal
replaced byte buffer conversion with direct byte retrieval in Utils . java to simplify code and improve performance by eliminating unnecessary buffer conversion
added a new interface ` PermissionEvaluator ` with a method ` hasPermission ` to handle permission evaluation in the security framework
added ERASE _ LINE _ ON _ FINISH option to LineReader and implemented cleanup logic in LineReaderImpl to improve line processing behavior when the line is finished
hbase - 13067 masterfilesystem # validateserverexists ( ) should check if it be down ( srikanth srungarapu )
replaced instances of SIGN _ ERROR with BLOCK _ SIGN _ ERROR across multiple files to accurately reflect the purpose of the exception related to block signing errors
update to jdk - 8068525 . add urlconnection test and fix for jdk - 8068529 .
improve error handle for client to not throw exception . fix # 4023 ( # 4024 )
fix # 4266 center spinner absolute ( # 4278 )
[ flink - 23454 ] [ runtime ] recycle memory segment in networkbufferpool with interruptable2 parameter .
fix testjmxintegration failure which happen due to change in jmx server
replaced JUnit4 runner with RetryTestRule in AbstractIT . java to improve test reliability and retry handling in tests
refactor QueryStateMachine and CallTask to remove the auto - commit flag and simplify related classes to enhance code clarity and maintainability by consolidating transaction management logic
add a package - info . java file to organize the code into a single file .
added support for " javax . microedition . khronos . opengles . GL " alongside " javax . net . ssl . DistinguishedNameParser " in InstrumentationConfiguration to enhance configuration options for specific parsers ( issue # 1864 , # 183 )
[ hotfix ] [ test ] simplify registration of timer in streamtasktickerertest
updated request handling logic to improve clarity and ensure correct URI path retrieval based on HTTP method to enhance robustness of URI handling and ensure correct request processing for different HTTP methods
updated constants for lastSeenVersionCode and introduced new method to retrieve legacy storage points to improve code clarity and ensure compatibility with different Android versions
added methods to manage client sessions by adding priority and limiting to unavailable sessions to improve session management by ensuring appropriate priority settings are applied based on session availability
added a method to scan Liquibase pro packages to enable integration with Liquibase procedures in the ServiceLocator class
replaced deletion of synced folders with deletion of other synced folders in MainApp . java and SyncedFolderProvider . java to streamline folder management by consolidating deletion logic
modified the ` loadWithNewGlobal ` method to accept a variable number of arguments to enhance functionality by allowing additional parameters to be passed when loading a new global context
fix path resolution for window . fix # 64
replaced ` length ( ) ` method with ` toIntExact ( ) ` for footer and stream sizes to ensure consistent handling of retain sizes in the HiveClientModule
updated method names from ` isExceedRandomizationDepth ( ) ` to ` hasAlreadyRandomizedType ( ) ` across multiple classes to clarify the purpose of the method and enhance code readability
added support for handling LEAD and LAG function arguments in the WindowFrame classes to ensure proper functionality and error reporting for incompatible function types in DRILL
added a line to clear the headers of proxyRequest to ensure proxy requests are reset before processing them
added a condition to check if the SA attach platform is enabled in CompressedClassSpaceSizeInJmapHeap . java to avoid executing the test when SA attach is not expected to work
added null check for bgColor before verifying its alpha value and created a new TranslucentWindow class for testing to enhance robustness of background color validation and provide a utility for translucent window functionality
added error handling for null user info in UserInfoActivity to improve user experience by providing feedback when no information is available
added a new ` PrecompiledHeaderSerialization ` class with custom field behavior for serialization to ensure that the ` PrecompiledHeaderData ` can be used on different machines for better error handling
[ flink - 20537 ] [ connector / kafka ] [ table ] fix append mode handling in kafka connector
added a new test class MultipleOutputsIntegrationTest for testing multiple output groups to ensure correct functionality of named output handling in the build process
updated regex pattern in FileSettings . java and added content comparison logic to ensure correct handling of line breaks and maintain content integrity during updates
nifi - 7462 : fix bug that capture input variable value from versioned group in stateless flow
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java ` to improve code readability and maintain consistency in object array usage
added a taskbar mode switch annotation to the TaplTestsQuickstep class to enable persistent taskbar mode for testing purposes
added two new device status entries for leaving dock and energy save mode to enhance user experience by providing more detailed device status updates
improve error message when load an item model fails .
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
pixeldensity ( opengl ) : fix getcurrentsurfacescale ( ) for 2x
refactor RussianLowerCaseFilter class to improve code readability to enhance maintainability and facilitate future development
replaced the handling of server properties and client properties in CsvBulkLoadToolIT . java and QueryUtil . java to simplify the setup process and ensure proper handling of HBase configurations
fix filedisplayactivity ' s onscreendisplay for non - unix file system
- add resettableinputstream support to wavloader and make all necessary field protect
added functionality to control the indentation behavior of the column text to improve the readability of the first line by allowing dynamic adjustment of the first line indents
cast the ` oid ` to ` Object ` before comparison to ensure type safety and avoid potential ClassCastException
refactor metric tracker configuration logic in HikariPool . java to streamline initialization and ensure consistent handling of metrics tracker factory and health registry
loopex : use controlflowanchored instead of controlflowanchornode for controlflowanchornode .
added functionality to disable the focus painting of the buttons in the WindowsPlacesBar to improve user interface by ensuring the keyboard is fully visible during interactions
updated the backing index check to include unique constraint and foreign keys to enhance the robustness of the backing index handling in Oracle
added a new method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and a corresponding API call in ` AccountAPI ` to facilitate the retrieval of accountledgers in the new API structure
add check for dc . title in community admin group ( dsen )
fix crash when utterance have no word ( issue # 269 )
added unit test base on user forum issue
updated thread pool size from ` getBackgroundThreads ( ) ` to ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and added getter and setter methods in ` ApplicationSettings . java ` to accurately reflect the current configuration and allow for dynamic adjustment of database update thread count
decrease fast scroll threshold from 40 to 10 to improve user experience during fast scrolling
fix bootstrapping issue due to change to the system class name
hhh - 13644 fix npe and add test case
added a null check for API properties in RestSwaggerSupport . java to avoid potential NullPointerExceptions when accessing configuration methods
added BinaryFrameGenerator and TextFrameGenerator classes for handling binary and text frame data to facilitate the processing of binary and text frame data in the WebSocket implementation
replaced direct calls to ` localDriver . findElement ` with ` WebDriverWait ` to wait for element presence to improve test stability by preventing blocking operations on the localDriver
modified the way lat and lon values are generated in RandomGeo3dShapeGenerator to use multiplication instead of negation to improve performance and reduce execution time when generating random double values
added a keepAlive method to manage ClassLoader references to prevent premature garbage collection of the ClassLoader
change return value from false to true to update logic to reflect successful operation
refactored jsr166 lockmonitorenter to distinguish between internal and internal concurrent sig prefix
added MkdirStep to multiple classes for better directory structure to ensure that generated paths are available for proper build process
improve error message to include source of failure .
[ drools - 5203 ] skip pmml execution if already on classpath ( # 3825 )
corrected a typo in the variable name from locationMode to thermalStatus in ShadowPowerManager . java to ensure accurate representation of the status of the system
update temporary directory creation in MountableFile . java to use a constant for the operating system to ensure compatibility with macOS environments and improve resource management
[ geot - 5014 ] fix for geot - 5015 unit test failure on window .
added a check for null organization in the PluginManager class to ensure that Plugis is required to have organization in the pom . xml file
updated contributor license agreements in SepPostingsWriterImpl . java to ensure compliance with the licensing requirements for the NOTICE file
deleted the TerminateWebSessionListener . java file to the functionality was deemed unnecessary or redundant
updated the method to use the system property for the Java class path instead of an empty string to allow for more flexible handling of the class path during process execution
replaced ArrayUtils . EMPTY _ BYTE _ ARRAY with new byte [ 0 ] for cryptKeyInit , cryptKeyPriv , and md5Salt to improve memory efficiency by avoiding unnecessary array allocation
added JUnit Pioneer annotations and a test method for validating Javadoc changes to improve test coverage and ensure documentation remains intact during the rewrite process
changed the LAUNCHER3 _ PHYSICS feature from false to true to enable the LAUNCHER3 feature for enhanced user experience
add class ' noPrint ' to the HtmlThreadInformationsReport to disable printing of thread information in the reports
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and changed the corresponding version from LUCENE _ 31 to LUCENE _ 40 to reflect the new version requirements for improved functionality and performance
added new private long fields for symbolicator and task handling in BsdDebuggerLocal . java and modified platform condition in PlatformInfo . java to enhance debugging capabilities on macOS systems
fix a memory leak with fmlindexedmessagetool when client be garbage collected
improve network exception logging , do n ' t spam the log if the peer be n ' t connect
[ java ] if no conductor byte buffer be provide , default to an empty buffer .
added a break statement in TouchImageView . java to exit a loop or switch statement to prevent fall - through
chore : [ dialogflow ] update proto to match open source code ( # 9366 )
do n ' t flush the ssl handshake if it ' s already in use ( grizzly do n ' t support this )
fix : fix a bug in typeutils . isassignableto ( ) .
use concurrentskiplistset in memtablespendingflush to flush memtables . patch by jbellis ; review by brandonwilliams for cassandra - 770
added null check for tree . errs in MemberEnter and updated error detection logic in JavaCompiler to ensure proper handling of errors and improve error detection accuracy
set the background color to none on the bug info view to avoid the background problem .
updated the negative button from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure the correct cancellation of the dialog when the button is canceled
fixed an error in the arithmetic operation of integerstamp . div ( ) .
added a method to read a stream from an InputStream and updated the image loading to use this new method to improve flexibility in handling input streams for image loading
added variable handling methods to CaseStmtToken and updated related classes to handle variable expressions to improve variable definition and definition management for case statements
added error handling for cipher initialization in RSAClientKeyExchange . java to ensure proper handling of exceptions during the handshake process
added a new dependency for " additionalDependencies " in WinGammaPlatformVC10 . java to ensure the correct loading of additional libraries for the operating system
updated comment handling and concatenation syntax in StringUtilsTest . java to ensure consistent line separator handling across different operating systems
added versioning and encoding settings in TemplateEngineFreemarker . java and updated JavaScript alert method calls to improve compatibility with Ninja and enhance query parameter processing
8274234 : [ testbug ] compiler / 68772 / crdgeneratortest . java fail to compile after jdk - 8274114
changed static modifier to final in SampleSenderFactory . java to enforce immutability for holdSamples and type variables
[ testng ] make sure ` ` emailablereporter ' ' be only added if ` ` testngEmailableReporter ' ' system property be set
408904 enhance commandlinebuilder to not escape string inside single quote
removed public access modifier from interface declarations in multiple Java files to enforce package - private visibility for better encapsulation
added a line to set the number of reduce tasks in FreeGenerator . java to allow configuration of reduce tasks based on the number of fetchers
fix schema generator to handle default value in objectfields ( # 1864 )
bug 532077 - change checksum of saveproperties to reflect change in database
updated support checks for OES _ texture _ float and GL _ ARB _ texture _ float in FloatTextureData . java to ensure proper handling of texture extensions in desktop environments
add write ( ) and closefile ( ) method to fileserver to be able to cancel / cancel a file .
update output directory initialization in ClassDump . java to ensure output directory is set only when necessary
added performance measurement to the return statement in ShadowSQLiteConnection to enhance performance tracking during database operations
updated methods to use test JDK tools instead of current JDK tools in JMapHProfLargeHeapTest and JDKToolLauncher to ensure testing is consistent with expected test environments
make handling of ogc _ exception _ report an enum for skipmlistured _ LAYERS ( need to be move to core module )
lucene - 1885 : fix off - by - one bug in RAMinputstream that could throw eofexception when number of buffer growth
improve error message send when a resource be miss in defaultservlet and use message .
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class for permission testing to enhance thread behavior control and facilitate security permission testing in the Java environment
modified CHECK _ EVERY _ N and added logging for memory checks in Caches . java to improve performance monitoring and enhance debugging capabilities
hbase - 7568 testsplittransaction # testrollbacksimultaneously fails after removal of hregion # openhregion
added null check for currentSelectionArea in CompatibilityEngine . java to avoid potential NullPointerExceptions during selection enabling
added a parameterized test for JAAS demo configuration in DemoModulesTests . java to improve test coverage and ensure correctness of JAAS demo functionality
added a condition to check if a folder can be created based on specific span values to ensure folder creation only occurs when appropriate with specific dimensions
updated CacheOffHeap . java file to improve cache management functionality
improve error message when create table fail because it ca n ' t be open later
added a check to assign values within the currentLayer height and improved logging in TiledLoader . java to ensure correct handling of tile values and improve error handling for data processing
tilecache : synchronize setworkingset to avoid concurrent modification
added a new Java class named Solution that reads two integers and computes a specific algorithm to provide a solution for a problem that requires a minimum and maximum number of iterations when using the Manasa algorithm
add a new address checker interface in trackerrequestprocessor to check for bad address
fix translucent model not work in modded content . close # 737
add ` ` default : ' ' to config tooltip ( # 2809 )
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and updated the corresponding references in ` Capability ` and ` NetatmoThingTypeProvider ` to ensure consistency in data types and improve type safety in handling values
updated JavaSEPort to check for null recieptents before sending messages and modified return types of player ' s time to milliseconds to avoid potential NullPointerExceptions and ensure consistency in time representation
refactor singlevalue check in routinginboundhandler to reduce duplicate code .
updated ` DockerClientFactory ` to include a failFast parameter and improved logging in the RemoteDockerImage and ImageFromDockerfile classes to enhance control over Docker client execution and enhance logging clarity during image processing
added a new metadata class with a resource mode and updated related methods to accommodate this change to enhance metadata handling by associating resource modes with Android resources
change to use calendar . gettime ( ) instead of dateutils . truncate ( ) for good accuracy .
change gradleImporter . importProject to gradleImporter . importProjectCore to utilize the new import method for core - related projects instead of project - specific ones
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command execution failures
refactor TreeMap class to improve code readability to enhance maintainability and facilitate future development
added methods to enable and disable asynchronous stack traces in CN and Display classes to enhance debugging capabilities for asynchronous stack traces in the application
added a method to set glow color in BubbleTextView and updated the folder color in Folder to allow customization of glow colors for better UI customization
set file - row - text for link and description ( # 7514 )
added a new table and a test method for matching class names in ResultSetMetaData to enhance functionality and ensure correctness of class name extraction from ResultSet metadata
removed unnecessary IOUtils . deleteFilesIgnoringExceptions check in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify code by assuming all files are deleted regardless of success or exceptions
added null check for _ info before comparing the status code to avoid potential NullPointerExceptions when accessing the status code
added a constructor to the ShadowLocation class that initializes the provider to provide a way to initialize the ShadowLocation instance with a specified provider
add a condition to adjust maxRAM based on the deviceRam value to ensure that the deviceRam does not exceed 2048 bits
add empty map stats of no data visible map ( # 15603 )
add log to determine if a file profile activator fail to activate
update pdfwriter . addtobody ( ) to use the invalid name instead of the noname1234 value
fix roles collection in guildimpl . getroles ( ) ( # 1712 )
updated return value and variable names in ExpandableUploadListAdapter to use MAX _ NUM _ UPLOADS _ SHOWN for better clarity to ensure that the code correctly reflects the maximum number of uploads processed
added unit tests to verify the delete function behavior in DashboardUserMapper to ensure that the delete method behaves as expected with parameterization
[ # 7040 ] instructorfeedbackresultspagedata : fix bug where recipient be not be send to the instructor ( # 7041 )
[ gr - 46711 ] fix deref pointer registration in llvmbeferencenode .
added a method ` getBufferSize ( ) ` to ` BufferedIndexOutput ` to provide access to the buffer size for better buffer management
fix : update the cli help text
refactor action bar title handling in DrawerActivity . java and add old interactions check in DrawerActivity . java to improve code organization and enhance user experience by maintaining consistent UI updates
renamed CommandLineParserTest . java to improve clarity to enhance maintainability and readability of the test code
added interpolators for transition effects in the QuickstepAtomicAnimationFactory and PortraitStatesTouchController classes to enhance animation effects by adjusting threshold values for smoother transitions
updated the method to retrieve the Java name from an external name to improve clarity by using a more specific method for converting external names
added native methods for setting and releasing a class in CWrapper . java to enhance functionality for graphics rendering and memory management
added constant value checks and created a new ValueTest class with corresponding tests to ensure proper handling of constant values and validate functionality through testing
8153815 : fix 8151522 cause test compiler / compiler / multiplication / mathematical / testsquaretolen / testsquaretolen . java to fail
remove unnecessary null check ( a report by lgtm . com ) .
add javadoc since tag to jira . org . thanks to ryan gustafson for the patch .
updated error handling and spacing in UploadBuild . java to improve readability and consistency of error messages
modify bounds settings in DeviceProfile . java to adjust layout parameters to improve layout positioning and accommodate search bar offset
fix the disconnect timer to be schedule when idletimeout be set to 0 .
refactor activity starting logic to run on the UI thread for improved thread safety to ensure that activities are only started on the UI thread for smoother transitions
remove applesource . getsourcegroup ( ) , because it be n ' t use
increased timeout values for triggerFiredLatch . await from 220000 ms to 90000 ms to allow more time for the trigger to become available during testing
fix a typo in field name ' outputpositioncount ' - > ' positioncount '
fix nullpointerexception in getbestfornodecost search ( # 8407 )
added a conditional check to skip processing for specific component types in ResourceEditorView . java to improve performance by avoiding unnecessary processing of UI components
fix crash when launch some apps which require icon to be load on
added a check to retrieve the latest commit point if it is null to ensure commitPoint is initialized with the latest commit strategy for better consistency
added unit tests for IMEI and MEID management in ShadowTelephonyManagerTest and implemented slot index retrieval in ShadowTelephonyManager to ensure correct functionality of IMEI and MEID management in the telephony manager
added debug request debug information to SimpleHostRoutingFilter to improve troubleshooting and troubleshooting capabilities for HTTP requests
added the ` destory ` method to multiple classes and implemented resource cleanup in ` IndexSegment ` to ensure proper resource management and prevent memory leaks during index operations
[ issue # 4000 ] add test case for normalmessagerequestandgetit ( # 4000 )
replaced Charset with StandardCharsets for UTF - 8 encoding to improve code clarity and maintain consistency in character encoding handling
hbase - 21969 do not throw MultipleIOException in bulkload when there be one or more file to load ( rajeshbabu )
added a nullable BigDecimal parameter to DefaultWithdrawFundsParams and updated its usage in RippleWithdrawFundsParams to allow for proper handling of fund transactions in withdrawal
removed an unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and reduce unnecessary dependencies
simplify exception handling by consolidating multiple exception types into a single catch block to improve code readability and reduce redundancy in exception handling
Added a validation check for abstract methods and adjusted method signatures in Java2TypeScriptTranslator . java to ensure methods are not invoked as abstract methods to prevent runtime errors
added StacklessLogging import and modified the method for sizing the disk in TestFileSessions . java to enhance logging capabilities and ensure proper resource management during file session operations
added serialization support and modifiedEntities variable declarations in SqlDataType and Entities classes to enhance data serialization and deserialization efficiency
modified test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a check for null values before parsing the claim request string in ConnectOAuth2RequestFactory . java to improve robustness by handling potential null values gracefully
updated import statements and modified HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility in handling different query builder implementations
updated the processTypeHintForNestedDocuments method to accept a source parameter and modified the conditional checks for null values to improve type safety and functionality in handling nested documents during updates
updated core status retrieval methods to use CoreStatus instead of CoreAdminResponse to improve clarity and consistency in handling core status updates
initialize transformers and locators lists with new ArrayList instances to ensure that the lists are properly instantiated to avoid null pointer exceptions
no effective change - fix typo in log message
more debug output , so that we can understand what kind of method be decode in a method call .
rename setof to copiedsetof to match the resttemplatebuilder
( chore ) camel - mail : remove unnecessary check for null
resolve http : / / issues . apache . org / activemq / browse / amq - 2776 - make sure that getredeliverypolicy ( ) be not null
updated method to return the property name instead of the identifier name to ensure the identifier name is correctly identified as a property name
fix # 1181 : use an intent to show the wave generator
added logging for null checks and enhanced error handling in KeyedProperties . java and SheetOverlaysManager . java to improve robustness and provide clearer logging when sheet retrieval fails
add exec watch and log handler so we can watch for exec .
testreplicationhandler - force a fsfactory to detect no index and create a new one .
added call to super . dispatchMethodKernelOkra in GraalKernelTester . java to ensure proper handling of method execution based on provided arguments
make mx record sort in order to get sort out order of mx record
refactored thread creation in XToolkit to use a privileged action for improved security and encapsulation to enhance thread management and maintain a hierarchical thread group structure
added validation and selection for Linux6 in SelectBox . java and updated UITest . java to ensure proper functionality and support for Linux6 platform
replace IllegalStateException with stack trace printing in JobGlobalListener to improve error handling by providing more informative error messages
added support for a ` SplitState ` parameter in the ` createState ` method and updated related logic to enhance flexibility in managing split states within the flow system
change connectionState variable to be volatile and update its usage in the return statement to ensure thread safety for connection state access
increase default polling period to 1 second and add integration test for pollablebridge
replace ByteBuffer instantiation with direct variable names and optimize memory management to improve code readability and maintainability by reducing redundancy
6978886 : javadoc show stacktrace after print error result from disk full
pmd : fix # 1344 unused modifier false positive with enum
refactor lambda expressions to use method references for cleaner syntax to enhance code readability and maintainability
fix flaky test use ssl = { 0 } .
[ hotfix ] [ core ] improve exception handle when format value in transformationhelper
updated method to use ` getActiveConnectionPermissions ( ) ` instead of ` getUserPermissions ( ) ` for retrieving accessibility objects to ensure the correct handling of the active connection permissions
replaced direct equality checks with Apache Commons Lang ' s EqualsBuilder for better readability to improve code clarity and maintainability by using a more structured approach for equality checks
modified the process method to handle null outputRoot correctly to ensure proper handling of potential null values in the outputRoot
pdfbox - 4475 : add annotationfilter to pdfpage and pdfrenderer to be able to filter a pdannotation
updated StackTraceCleaner to improve stack trace handling to enhance performance and maintainability of stack trace processing
added conditions to set content type based on the path ending with " . css " or " . js " to ensure proper content type handling for CSS and JavaScript files
hhh - 15637 : skip testliteralinselectexpression test on different hibernate dialect
updated method parameters and logic in ForkController . java for better clarity and functionality to improve code readability and ensure correct handling of version values
added getStats ( ) method to multiple classes and updated the DocBuilder class to use AtomicLong instead of AtomicInteger to improve statistical representation and enhance thread safety for document counts and deletions
[ scb - 2716 ] add long polling to kie client ( # 3437 )
refactor scrolling functionality to use a new scroll method and update gesture margins to improve touch responsiveness and maintain consistency in gesture handling across the launcher
added unlocks functionality to the UI and paused dialog classes to enhance user experience by allowing users to interact with unlock actions
clear the crop when a player disconnects
[ flink - 2982 ] [ core ] make name of inputstreamresult . getinputstream ( ) configurable
updated import statements and method signatures in AttributeNormalizerTest . java to replace MalformedURLException with IOException to improve clarity and consistency in exception handling
updated formatting in TsFileSketchTool . java to display chunk type instead of a specific marker to improve clarity in output formatting and ensure correct chunk type during processing
added a new ImmutableSet to exclude specific Swift headers and modified assertions in ProjectGeneratorTest to ensure that only relevant header files are processed in the project filesystem validation
fix wrong javadoc for grizzlyasynchttpprovider . onhttperror ( header ) .
added encode ( ) method to RequestPlugin . java to enhance data handling for HTTP requests
mondrian : fix sql error ` ` float ( 0 ) ' ' on db2 .
added validation for null or blank passwords in LdapAuthenticationProviderImpl and created a new test class for it to ensure proper error handling for null or blank passwords in LDAP authentication
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a clear operation for complexWriters in ProjectRecordBatch . java to ensure that the list of complex writers is reset when no conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple classes to suppress serialization warnings for these classes
changed the visibility of the ClassGraphClassLoader class and updated the exception handling logic to improve encapsulation and enhance error handling clarity
add handling for " _ errors " in ErrorResponseException to improve error reporting and ensure proper formatting of error messages
added a constructor to EventSourcingRepository that initializes it with null checks to ensure eventStore is not null to avoid potential NullPointerExceptions
refactor symbol handling logic for binary nodes in mmm Attr . java to improve clarity and maintainability of symbol definition and scope handling
modified text handling in SearchedPeopleCursorAdapter to extract and append " @ " to the current text to improve consistency in text formatting for better user experience
fix bug in Nuvoconnector . sendcommand ( ` ` on ' ' , ` ` on ' ' ) . ( # 2588 )
tmi - tiff : use more specific pLANAR configuration type for better compatibility
close inputstream in itemlisttag . close ( ) , fixes # 2642
add a utility class for average and minor improvement on item average . close # 162
added new classes SigInt and SigIntBarrier for signal handling in the concurrency logic to provide a mechanism for managing and managing signal interruptions in the application
updated graph handling logic to support hierarchical graphs in ExporterGEXF . java to enhance compatibility with different graph structure and improve edge processing
hive - 23790 : fix endless loop in tctlseparatedprotocol ( daniel dai , review by thejas nair )
[ # 8803 ] instructor : display rubric question index only if valid ( # 8803 )
updated condition in CatalogComparator to check for catalog and catalog case instead of DB2Database to improve specificity of catalog comparison logic
simonstewart : clear the browser proxy after each test
[ mng - 7071 ] fix java . lang . classcastexception in modelrepositoryimpl
removed the call to mTextWatcher . reset ( ) to ensure consistent reset behavior in the InPlaceEditView class
fix typo and clarification of internalbytearray and trufflestring javadoc .
[ flink - 7714 ] [ gelly ] fix the generic type of outEdges function .
updated multiple assertion classes in Java7Assertions for consistency to improve maintainability and clarity in the assertion framework
8025076 : ( f ) jdk / test / com / sun / jdi / basic / javac / basic . java fail for non - unicode locale
[ java ] do n ' t use CountDownLatch in clusterMembershiptest .
mng - 2879 : allow reactor reader to be use only during project activation , and not at build time
updated SSL configuration logic to use ` equals ` instead of ` startsWith ` to ensure correct matching of the URI scheme and improve test assertions for dynamic configuration
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
refactor ServletHolder to provide a synchronized method ensureInstance for better thread safety to improve robustness by ensuring the Servlet instance is initialized before use
refactor delta server time handling and logging in BinanceExchange and BinanceBaseService to improve accuracy and traceability of server and system time calculations
[ ci ] add non - stop ( tm ) servlet for tomcat 8.5
add null check before deregistering the component form and restore it if it is null to ensure that the component form is not null before deregistering the animation
updated ` decodeResource ` and ` decodeMemory ` methods to accept an additional ` BitmapFactory . Options ` parameter to improve flexibility and functionality when creating bitmaps
[ java ] remove some unused executor usage and add constant for number of message in example .
added functionality to handle long click actions and improved text formatting in TimelineArrayAdapter to enhance user interaction and ensure consistent text presentation
added " text " to the list of unmodifiable data types and modified NumberType to return a new DatabaseDataType to enhance compatibility with text data types in Postgres
reactivate entryprocessorbouncingnodetest . testentryprocessorbouncingnodetest ( # 3683 )
update state management logic to use isRemovableState ( ) instead of isHardDeletableState ( ) for clarity and consistency to ensure correct state handling for component removal in the management controller
added a null check before adding a bridge in CreateBridgeServlet . java and threw a BridgeReconfigurationFailedException in CreateBridgeServletTest . java to ensure that a null bridge is not added and improve error handling during bridge reconfiguration
- fix for nutch - 854 : get rid of duplicate code and add synchronized block
updated display name retrieval in network interface checks to handle potential null values to ensure safe execution and prevent possible NullPointerExceptions in Windows - specific conditions
refactor SpriteBatch constructor to accept a default shader program and update default shader creation logic to enhance flexibility in shader management by allowing default shader assignment when none is specified
mondrian : use synchronous _ commit = on for test to avoid race condition .
added ` elementTypeCoercer ` to ` SortedSetTypeCoercer ` and modified ` fillSortedSet ` method to improve type coercion handling and streamline set creation process
updated confirmation messages in RemoveFileDialogFragment to handle conditional logic for folder and local removal to improve clarity and maintainability of confirmation dialogs based on file type
increase the maximum length check for URL encoding to ensure proper handling of character limits
fix for issue 723 : friend can not connect to localhost at any arbitrary time , but help prevent hanging test
updated HostResourceProviderTest to expect an empty map instead of expecting an empty map to improve test reliability by handling cases where clusters may not exist
[ hotfix ] [ yarn ] remove unused logger parameter
fix a bug in the color field and initialization process of the sip commun frame .
removed the ShadowHtml class and updated HtmlTest to test HTML content to simplify codebase and improve test coverage for Html functionality
created a new class ` StarTreeRecordStoreFactoryBlackHoleImpl ` for creating ` StarTreeRecordStore ` to provide a base class for managing StarTree record store creation in the application
updated logger configuration to use H3 and Quic loggers instead of Jetty to improve logging granularity for better debugging and info
changed the access modifier of the addListeners method from private to public and added validation tests for listener registration to allow external access and ensure proper listener validation in the MockSettingsImpl class
[ flink - 30613 ] [ runtime ] add checkpoint statistic to checkpointmonitor ' s exception handling
updated import statements to reflect the new package structure for Constraint in multiple test classes to ensure compatibility with the latest Jetty library structure
add section constant and improve error message
use try - with - resources to prevent resource leak
camel - 13653 : camel - 13663 : add support to specify a TCP port for the route test
updated Java library handling in the JarBuildStepsFactory and related classes to improve clarity and consistency in managing Java library targets
do n ' t use an anchor in the message ( they change too often )
bug 9452 : remove the overridden getpagesizeval function in listcapacity and use it from baselistcmd which have the change for default pagination to unlimited .
added a case for the CLOSED case in IteratingCallback . java to prevent further processing when the iterator is closed
added isAuthorized property and updated access control handling in AccessControlContext to enhance security context management during access control
issue # 3913 - only send DEPLOYING _ EVENT when the app be an instance of AbstractOSGiApp
added handling for " tiff " codec in DLNAMediaInfo . java to ensure correct mime type is set for tiff media files
refactor the handling of profiledArgumentTypes and ensure proper synchronization to improve thread safety and maintainability of the code
added a new file ` CubocDesktop . java ` and modified loop implementations in multiple files to implement a new application structure and enhance rendering performance
updated PolicyMonitor instantiation to use target directory paths instead of test resource directories to ensure that the PolicyMonitor accurately references test resources during testing
added a method to remove all files from the trashbinListAdapter to improve user experience by managing the list of files efficiently
replaced the package name from ` org . eclipse . jdi . Bootstrap ` to ` com . sun . jdi . Bootstrap ` to align with the correct package structure for better compatibility
make sulong check global variable storage node execute by specialization
updated the createLauncherEvent method to accept an Intent parameter and adjusted related properties to improve event handling by associating activities with specific intents
added a constant for the maximum burn amount and updated the return logic to use this constant to improve code maintainability and prevent potential issues with hardcoded values
updated UniqueConstraintSnapshotGeneratorSnowflake to include multiple imports and enhanced snapshot object handling with unique constraints to improve functionality and maintainability of unique constraint snapshot generation
modified the insertion of named values in the DMLTransformer class to ensure proper handling of empty values in the insert statement
updated import statements and modified test method to reflect a new URL format to enhance clarity of test cases and ensure correct view name is used for service validation
modified function name validation to include a boolean parameter and adjusted the handling of default names to improve function name handling by distinguishing between statements and regular functions
updated the JarLauncher class to enhance functionality to improve performance and maintainability of the jar launcher
added generic type declarations for collections and collections to improve type safety to enhance code clarity and maintainability by specifying the type parameters
remove jabber jabber entry from configuration and trigger a change to default quality control if peer do n ' t have a suitable media handler .
added a test for updating a PostgreSQL object with a specific date in ResultSetTest . java to ensure correct handling of PostgreSQL date updates in the database
modify PasswordResetEndpoints to return an appropriate response entity for missing email and non - UAA origin to improve error handling and ensure proper response for invalid email scenarios
replaced child node retrieval method from ` getChildNodes ( ) . item ( 1 ) ` to ` getDocumentElement ( ) ` to improve code readability and ensure direct retrieval of the document element
modified caching logic in Cache . java to enhance performance and efficiency of data retrieval
fix time precision bug , thanks to kristian vincent for the patch .
fix the laddering and relay binding . close # 152 and # 153
added a new ` Chainer ` class and modified ` CollectionSubject ` to return a ` Chainer < T > ` to enhance functionality by allowing chained items in collections
refactor Model class for improved readability to enhance maintainability and ease of understanding for future developers
updated the calculation of recordedTime in Locations . java to correctly reflect the time adjustments for accurate tracking
added a condition to resize the status only if the terminal type is Windows to ensure proper resource management for Windows - specific terminal types
ambari - 20827 - installing a server fails due to an exception during the upgrade of hdp - 2.2 . 0 . x branch - 2.2 . x branch . ( aonishuk )
move to j2cl / integration / jre _ bundle _ deploy in test so it can be use by other test .
mng - 4767 : move maven - settings - builder advice to mavenexecutionrequest so it can be use a a parameter
change variable op to final to avoid npe .
refactor the configuration resolver resolution in KnativeEnvironment . java to improve code readability and maintainability
make commitlog archiver thread pool name consistent
added connection methods in CloudSolrClient and a corresponding test in TestCloudSolrClientConnections to ensure proper handling of cloud client uploads and validate functionality through testing
[ gr - 21212 ] fix concurrency issue when synchronize on allbindings .
added clearFilesAndCache ( ) method and refactored file handling in ShadowContext to improve file management and reduce redundancy in directory creation
added TreeMap to the collection of style classes in SecureXStream . java and introduced assertions in XStreamPersisterTest . java to enhance collection management and ensure proper style handling in the application
[ bz - 1155852 ] allow kie - api to provide a Kiemodulemodel ( # 1101 )
updated block event handling to check for Farmland instances instead of Material type to improve robustness by ensuring proper drying checks for different block data types
make getlocalip a default for backwards compatibility
update deserialize method in JdbcStepExecutionDao to use binary stream for object value retrieval to ensure compatibility with serialization and deserialization for better data handling
updated byte offsets in AbstractDictionary , BigramDictionary , and HHMMSegmenter classes to correct indexing issue to ensure accurate byte representation and improve code readability
* add ` ` - python ' ' to the presets for pytorch ( issue # 1181 )
refactor PluginTab to introduce a refresh method for better table refresh handling to enhance user experience by providing a convenient way to refresh plugins and improve code organization
update history reload , saving , and trimming log level to warn
bugfix : if npe in vmwarestorageprocessor , try to get vm from disk statistic when do n ' t exist vmware find .
http : / / issues . apache . org / jira / browse / amq - 4798 - fix test regression , sftpservertestsupport already stop the sshd
refactor ` ExperimentalMockitoJUnitRunner . java ` to improve test clarity to enhance maintainability and readability of the test cases
updated GpsSettingsActivity , Session , and Utils to use a new utility method for retrieving build serial information to improve code maintainability and ensure consistent handling of serial identifiers across different Android versions
swapguffers . java : fix typo in javadoc .
added a null check for spatial and skeletonControl before removing it to ensure that skeletonControl is properly managed before removing it
added ` setSmartReplies ` method and updated the ` ShadowRanking ` class to use ` RankingReflector ` instead of ` ReflectionHelpers ` to improve the flexibility and functionality of managing smart replies in tests
[ java ] only add segment file if it start with ` ` - ' ' and end with a dash .
refactor retrieval of the resource directory in CarrotClusteringEngine . java to improve readability and maintainability of the code
added null check for testRect in WindowsTreeUI . java and created a new class bug8004298 . java to enhance robustness of the code and implement a test case for a specific bug in the WindowsTreeUI
update ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils and CompilationConfig to ensure compatibility with the latest ASM API changes
replaced returning null values with TasteException for better error handling to improve robustness by providing clearer exceptions when loading invalid vector files
added client information to SurrogateAuthenticationEventListenerTests to enhance test setup by associating client information with client information
added isUserView variable to CardPresenter . java to manage user viewing behavior in the application
replaced the old method ` GraphvizJavaExecutorUtility . isGraphvizJavaAvailable ` with ` GraphvizUtility . isGraphvizJavaAvailable ` across multiple files to streamline the diagram generation process and enhance code clarity
maintain consistent formatting for method calls when creating log histogram to improve code readability and maintainability by reducing repetition
added a new module - info . java file for the sqlite connector to define module dependencies and exports for better encapsulation and modularization
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper timing between operations during stream resets
fix ( context ) : remove useless condition in context . getpermissionsmanager ( )
updated DateParser and TestDateParser classes for consistency to improve maintainability and readability of date parsing logic
added a method to get the depth in SpringLoadedState to define the depth for better state management in application
speed up binarydecoder by avoid unnecessary array copy in certain use case
[ hotfix ] fix checkstyle violation in executiongraph
removed the swipe functionality from the NotificationActivity and removed it from the NotificationRenderer to simplify the notification handling and improve code maintainability
[ scb - 2370 ] improve exception handle log and update test case
fix potential npe in glowcontainer . getlock ( ) ( # 511 )
replaced MethodHandle lookup with reflection to obtain a method to improve flexibility and compatibility with Java ' s reflective API
cast integer to int for integer retrieval in MathTest . java to ensure type safety and avoid potential ClassCastException at runtime
update return statement format in BaseEmailContentFormatter to remove unnecessary concatenation to improve readability and simplify string concatenation for better maintainability
added methods to manage and display a JPanel from the layout node to improve layout management and ensure proper visibility of UI components
updated the condition to include a null check for the server location to ensure proper handling of potential null values before accessing the dead server status
minor update to copyright header of builderfactory and pipeline class ( # 16288 )
add a null check for key parameters in BasicChecker . java to ensure proper handling of missing key parameters to avoid runtime errors
refactor media type handling in MediaTypeRequestMatcher to use a dedicated method to improve code clarity and maintainability by encapsulating the logic for determining if an media type should be ignored
hive - 23794 : llap : print the actual task number when submit work ( prasanth jayachandran review by gopal v )
polish ` ` allow bean definition override = true ' '
added null check before closing indexReader to prevent NullPointerException when indexReader is not initialized
bitrich / xchange : move btcmarketsstreamingservice into main package
added a test method to FencedCodeBlockParserTest to ensure that the rendering correctly identifies BRs or paragraphs in the code blocks
add a new file CompatibilityTest . java for testing internal DTDs to ensure proper validation of properties file formats during compilation
added new utility classes for push notification and security handling to enhance the application ' s capability to manage push notifications and improve security measures
fix tablerebalancer . getinstancestatemap ( ) for multi - node rebalancer ( # 11120 )
bump version to 2.7 . 0 and tidy release note
remove ` ` \ r ' ' from test that fail on window
make sure that ajpprocessor . readtimeout ( ) do n ' t throw a sockettimeoutexception .
initialized friction , restitution , and sensor variables to 0.2 f and 0 to initialize values to avoid null reference issues
updated method names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to reflect the correct function specifications for better consistency and functionality
added error handling for executing shell command " am wait - for - broadcast - idle " in LauncherInstrumentation . java to ensure graceful handling of broadcast idle events by logging failures
added tests for font and link tags with attributes in ResourcesTest . java and modified span calculation in ResStringPool . java to ensure correct retrieval of string attributes and improve span size handling
update base url for guistatscomponent . patch cause it to fail to load .
added permission request handling for call phone calls in the launcher to ensure proper user experience by enforcing required permissions before initiating calls
updated return value from 32 to 36 and improved flight data handling in multiple classes to enhance the user experience by adjusting zoom options and ensuring consistency with flight data management
updated the ` GeoPointDistanceQuery ` , ` GeoPointInBBoxQuery ` , ` GeoEncodingUtils ` , and ` GeoPointInPolygonQuery ` classes by modifying the ` BUF _ SIZE _ LONG ` variable and modifying the ` fromBytes ` method to simplify the code and improve clarity by using bitwise operations for byte conversion
added a method ` isDockerAvailable ` to check if the Docker client is available to improve reliability of Docker client availability checks
added a new constant VPX to CodecTypes . java to support VPX codec in the application
added coordinator address to DistBuildFactory and DistBuildRunCommand classes to enable connection to the remote coordinator for improved configurability
added path matching functionality and refactored timer method calls in FsUtils and WrapTimer to improve file path handling and maintain consistency in timer management
added a conditional check before adding values to the labelValues list to ensure that only valid entries are added to the labelValues collection
fix classcast exception in web , maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe maybe
[ java ] remove no - op test annotation for performance test .
added materialization time setting in ObjectStore and a corresponding test in TestObjectStore to ensure that the creation metadata sets the correct materialization time for different objects
add miss native dependency and handle unsatisfiedlinkerror in vosksttservice ( # 2202 )
bug 52214 - jmeter gui : remove one - then attribute to be support
updated break weight logic in GlyphView . java to handle edge cases more explicitly to enhance the accuracy of break weight evaluation for better text rendering
refactor sync handling in RCFile . java to improve efficiency and readability to enhance performance by reducing the number of I / O operations and improving efficiency in byte reading
added an annotation to AutoAddReplicasPlanActionTest . java to indicates that the test is waiting for a fix related to SOLR - 13028
collect unwound step by processor / unwound data in toe pool ( # 2716 )
removed the ` flavorsForFormats ` parameter from the ` setToSortedDataFlavorArray ` method and replaced it with a direct call to ` getMimeType ( ) ` in the ` DataTransferer ` class to simplify the code and improve clarity by eliminating unnecessary method
hbase - 23956 testthriftservercmdline should n ' t use system port other than 80
added a check for EOF in the RegExpScanner class to ensure proper handling of the end of input condition
replace Boolean . getBoolean with a conditional check for enabled metrics and timers to improve the efficiency of metric retrieval by eliminating redundant calls
fix nullpointerexception in check chatroomJabber ( report by ingo bauersachs ) .
make error message more descriptive for empty file ( sketch )
refactor refresh token creation into a separate method named createRefreshToken to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve clarity of error reporting for path transformation failures
[ flink - 7807 ] [ yarn ] remove the job from the high - availability service registry
added a method to retrieve the hardware buffer in ShadowNativeImageReaderSurfaceImage . java to implement a temporary mechanism for retrieving the hardware buffer
updated the SSL URI for the pollingMarketDataService initialization to ensure the exchange connects to the correct SSL for accessing the BTCChina API
[ core ] fix ant task file path issue on macos
added OauthController and Oauth2Plugin classes to handle OAuth2 requests and implement unit tests for its functionality to enable the creation and validation of OAuth2 services in the HTTP integration
make a semgrex reference an actual link for use in javadoc
added flatCollection methods to AbstractStreamEx and removed them from EntryStream and EntryStreamTest to improve stream handling and ensure proper collection mapping in stream operations
add message to error log ( # 4104 )
updated the condition for determining whether a test should be run with Maven Surefire to ensure compatibility with Android projects with mixed scala \ java tests to run with Maven Surefire
inverted the condition to check if the sdp is not contained in transmittableAudioEncodings to ensure that the condition correctly accounts for non - transmittable audio encodings
updated references from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator and added a new test case in CreateTableGeneratorTest to ensure proper handling of database functions and improve test coverage for default value generation
added methods to check station 3 and 3 GML 32 station paths in NormalizedMultiValuesTest . java to enhance validation coverage for different station configurations in the document
[ cst - 1096 ] fixed flaky test in uaa http test
added checks for ` this . processor . isConfigured ( ) ` before expanding regex mapping and changed return types to an unmodifiable set to enhance configurability and ensure immutability of the map and field processor configurations
updated CustomSeekProvider to include a configurable SEEK length and refactored splitIntoThirtyParts method to improve code clarity and maintainability by replacing magic numbers with named constants
added XLCDCommunicator and XLCDController classes while updating firmware handling logic to support XLCD command functionalities and improve firmware handling
drools - 2844 : load old kmodule schema when create a jaxb ( # 3748 )
added retry logic to check if transaction messages are empty in EventQuery classes to improve reliability of query processing by ensuring retries are properly validated
replaced custom thread states await with a timeout constant for improved clarity and efficiency to streamline state handling and reduce redundancy in thread waiting logic
modified the equals and hashCode methods in DelegatingMethod . java and added a new test class DelegatingMethodTest . java to ensure proper comparison and hash calculation for DelegatingMethod and validate functionality through unit testing
updated freeze values from 20000 to 10000 in EnergyCost . java to reduce resource allocation for improved performance
added exception handling for configuration saving in the command method to ensure proper management of configuration properties during command execution
deleted the SpringTransactionHooks . java file to eliminate unused code to streamline the project
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new class GetUninitializedStringValueTarg for testing uninitialized string values to ensure the application correctly identifies and handles uninitialized string values during execution
added functionality to handle provided and provided dependencies in AndroidLibraryDescription to improve dependency management and query resolution for better dependency management
added a new device flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of the keyboard open and close animations during transitioning between home and all apps
replaced system anomaly message retrieval with a singleton check for sSavedBugreport to improve efficiency by avoiding unnecessary message creation when the bugreport is already saved
added a new constant CINEPACK in FormatConfiguration . java and updated LibMediaInfoParser . java to use it to improve code readability and maintainability by centralizing format definition
added handling for hand movement animation in the Player class to improve user experience by enabling smoother transitions when the camera Bobbing feature is active
updated the mapping from ' data . describe ( ) ' to ' digest ( ) ' in GrpcCasBlobUploader . java to ensure the correct representation of the data being processed
deleted the HSQLDBServerFilesFilter class and replaced its implementation with a more generic file listing method to simplify the codebase and improve maintainability by eliminating an unnecessary class
fix a bug in restore walletappkit that cause a npe if restore from seed or restore from key be not set
[ tv ] log trace when title can not be find by imdb id
added a method to handle the existence of classes and updated type checking logic to improve type safety and ensure correct method invocation handling
replaced hardcoded array size in AmbientCubemap . java with a constant for better maintainability to improve code readability and maintainability by avoiding magic numbers
bugfix # 218228 - add warning about current profile method and object mode
hive - 17575 : fix ` ` 0 ' ' to return ` ` 0 ' ' in some file system ( jesus camacho rodriguez , review by jesus camacho rodriguez )
make test use temporaryfolder instead of temporaryfolder to avoid clash
add damageable check to itemstack , fixes # 2147
allow custom i225982 _ 1 render state with alpha and line _ width ( mc - 167447 ) ( # 4784 )
simonstewart : force the firefox driver to start to one page by default
updated condition to include additional HTTP method checks for connection handling to ensure proper response status codes for both CONNECT and GET requests
change task accept action from " compile " to " process - classes " to better reflect the processing type in the application
bug 52389 - httpclient : make sure to close idle connection when stop ( ) be call
added a conditional check for aggregate function suffix before processing identifiers to avoid unnecessary processing of metrics when the aggregate function suffix is not present
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use it to improve consistency in handling fullscreen parameters across the task view
added a new Java class to calculate the frequency of a given number to provide a solution for a solution that reads and outputs the frequencies of a given number
[ java ] set socketchannel to null to avoid potential npe when shut down cluster .
modified MutisignOperationerGodicTest . java file to improve test coverage and fix existing issues
added error handling to readToStartFragment and readToEndFragment in StaxEventItemReader to ensure graceful handling when the item index is at the end of the file
updated import statements in ShadowTextView and modified return logic in TestAttributeSet to streamline code and enhance null safety in resource retrieval
replaced import of ` com . nimbusds . jose . shaded . json ` with ` net . minidev . json ` in ` ClaimConversionServiceTests ` and ` ClaimTypeConverterTests ` to modernize the code and ensure compatibility with the newer libraries
modify OS family handling to support AIX systems to ensure proper identification of the operating system
cloudstack - 3229 : fix access detail api in vr when dev mode be enable
added a method ` invokeWithoutBlockingWithResultSync ` to ` Display . INSTANCE ` in ` CN . java ` to enable synchronous task execution using ` RunnableWithResultSync `
int - 2135 , int - 2117 : remove xmpp ignore test ( add by mistake )
replaced integer multiplication with Math . round for position adjustments in PortraitPagedViewHandler . java to ensure consistent rounding behavior for position adjustments and improve readability
updated the argument order in the KMeansDriver run method calls and adjusted the output paths for consistency to improve clarity and maintain uniformity in the code structure
hbase - 13071 fix keyvalues . getrowcache ( ) in non - deterministic order for non - deterministic keyvalues
camel - 6630 : add a type converter to the registry so it can be use a converter .
added task handling for ConditionalTask in SparkCrossProductCheck . java to ensure proper dispatching of conditional tasks during execution
updated action handling in Launcher and LauncherModel for better state management to ensure proper action updates for managed profile updates
update conditional logic in LoginInfoEndpoint to handle non - jsonResponse scenarios and add new test cases in LoginInfoEndpointTests to ensure proper handling of account chooser conditions and validate functionality of the login info endpoint
hbase - 27479 add descriptive string for region state , ts and server ( # 4879 )
[ huobi ] add result field to accountinfo to provide more information about error
added functionality to support adding a period column in MariaDB to ensure proper SQL generation for period columns in the database
[ beam - 8470 ] add doc for configuring worker env for java 8 and 11
add android 7.1 - you now have launcher shortcut and fix a few bug fix .
changed the access modifier of NUM _ MILLIS _ IN _ DAY from private to public and added an import for utility functions to allow external access to the number of milliseconds in the tests
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] correct invocation of aeron client aeron client to ensure it be configure and not rely on context .
added validation checks for implicit lambda parameters and updated type handling in method signatures to ensure correct handling of raw types and improve type safety in lambda expressions
refactor menu item visibility logic into separate methods for improved readability to streamline menu item handling and reduce code duplication
[ btc - e ] fix withdrawal and deposit data type in btc - e change ( # 1954 )
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve handling of duplicate entries and enhance method flexibility
added @ Deprecated annotation to PluginLoader . java to mark the PluginLoader class as outdated for future removal or replacement
modify conditional logic in LastQueryExecutor to include a case when both timestamps and versions are equal to ensure correct handling of unseq time in chunk processing
updated newline character handling in HttpResponse to ensure consistency in newline formatting
added static block to set the logging system property to " ERROR " to standardize logging configuration for HTTP errors
added safe area to the title bar in the Sheet class to enhance user experience by preventing accessibility of the title bar
reversed the iteration order in the OverflowSeriesImpl class to improve performance by iterating through TimeSeriesChunkMetaDataList directly
added SQL parsing and deparsing for renaming columns in AlterTest . java to ensure correct parsing and deparsing of SQL statements for alterations
make copystate ( ) public so it can be use by derived class .
fixed - rclusteredexecutor . executecallables ( ) method may return a non - completable future < t > . # 2008
replaced the static final String PART _ SUFFIX constant with a new constant in Constants . java and FileLister . java to improve code readability and maintainability by using a more descriptive constant name
[ hotfix ] [ table - planner - blink ] fix license header
removed unnecessary null check for valueArg and nameArg in CompareFunctionsProcessor . java to streamline code for better readability and maintainability
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task before reduce scope
added ` toString ( IndexReader ir ) ` method to ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to improve string representation for these classes for better debugging and logging
added a state check in AbsSwipeUpHandler and unregistered task stack listener if it in TaskAnimationManager to improve stability by preventing actions when the handler is invalidated
refactor getLockTimestamp and setLockTimestamp methods to use PreferenceManager directly and update their usage in DrawerActivity to streamline lock timestamp management and improve preference handling
modified artist handling in MediaInfoParser by replacing direct calls to ` MI . get ( general , 0 , " Performer " ) ` with a new method ` getArtist ( ) ` to improve robustness by ensuring valid artist retrieval logic
fix npe in case of wrong data be pass to ncfirebasemessagingservice
nifi - 3742 : fixed possible npe in splittext when empty
nifi - 3353 : allow to load a keystore on window for http connector
increase check timeout in resttemplatesendertest and webclientsendertests ( # 6035 )
added a condition to handle the case where a file does not exist or if it is not found to improve error handling related to file synchronization based on the result code
added animation control features to Slider class to enhance user experience by allowing customizable animations for smoother transitions
updated assertions in LineSeparatorProcessorTest to use correct variable names to ensure accurate comparison of line separators in tests
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to improve texture packing capacity for better performance
added a test to verify that negated parentheses do not unwrapping to ensure proper handling of nested expressions in code cleanup
camel - 15656 : camel - hazelcast should not set body if it ' s not null
add a new test class TextFeedbackTest for testing text feedback functionality to facilitate testing of text feedback in the application
replaced Math . round with Float . compare for score comparison to improve accuracy in score representation
updated case statements in AddAndScaleMultiImage and ResourceEditorApp to use DENSITY _ HD instead of DENSITY _ HD for specific DENSITY values to improve image scaling options and ensure proper resource handling
read array element offset from hotspot location when it ' s need
improve default log publisher performance ( fixes # 669 ) . ( # 669 )
added remote SCM support functionality to Configuration and RuntimeEnvironment classes to enhance flexibility and control over remote SCM support in the application
[ mielecloud ] add new onoff type for new launcher ( # 11779 )
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for logging to standardize logging across different Android versions
( chore ) camel - local zookeeper : fix checkstyle violation
added tests for project generation events in EventSerializationTest . java to ensure correct serialization and deserialization of project generation events
ggb - 2118 support for view point in av ( by default )
refactor JavaCompiler . java for improved readability to enhance maintainability and ease of understanding for future developers
add an error log to help diagnose test failure
updated multiple Java files related to heap and stack sizes to improve code organization and maintainability
added gc - sections and nocopyreloc options to the NdkCxxPlatform class to enhance compatibility with additional garbage collection options
updated circuit breaker URI handling in SpringCloudCircuitBreakerFilterFactory to utilize expanded fallback URIs to improve URI construction by ensuring the correct scheme and scheme are used for fallback URIs
simonstewart : clean up the javadoc comment out some unused test class
bug 66425 : avoid use of ' name ' variable when read shared string table from a xref table
added a method to retrieve an accountnet via HTTP requests to facilitate account management and retrieval in the application
added a check for available text width before returning clip string in SwingUtilities2 . java and improved exception handling in Test6635110 . java to ensure proper handling of text dimensions and enhance robustness by avoiding exceptions during testing
refactor FlatteningIterator to simplify iterator initialization and introduce nextBlank variable to enhance code readability and maintainability by simplifying iterator logic
replace HTML removal method calls with HTML replacement for title and body in NotificationUtils . java to improve readability and prevent potential HTML injection vulnerabilities
doc : generate sample code in the java microgenerator ( # 419 )
add test case to ensure that delete all exist question be delete
bug 58775 : fix for hssfsheet . getrowcount ( ) return wrong value for row1 , row2 and row3
added permission checks for launcher activities to enhance security to prevent malicious intents from being executed without proper permissions
[ java ] send init session during replay and reconnect to cluster rather than schedule for a long time .
implemented hashCode method in AbstractParquetMapInspector and updated related null checks to improve hash code computation and ensure robustness against null values
fix memory leak in http3 stream when remotely close .
added AutoCloseable interface to SplitReader to ensure proper resource management and allow for automatic closure of resources
added a deepCopy method to GsonBuilder for instance creation to provide a copy of properties for better object - oriented design
sulong : cache the source map to avoid get out of sync
refactor file handling in RestClientRequestImpl to improve asynchronous operation handling to enhance performance and maintainability of file upload processes
corrected the formatting of the dispatchStatusString method call in GrblController . java to ensure consistent formatting of status string operations
updated ClassLoader handling in MockFactory and added a new class SearchingClassLoader for better loading management to improve the flexibility and searchability of class loaders in mock instances
* added test for refresh flag bug in scene component of jme3test
added support for LEFT _ SEMI _ JOIN in the constant propagation logic to enhance query optimization for LEFT _ SEMI joins
updated response handling in HttpReceiver and HttpSender to check for CONTINUE _ 100 status code to ensure proper termination of responses based on the response status code
use arrayopdesclengthoffset ( ) to avoid allocation
fix unit test failure , need to set a default policy for the broker
rename multiple KDC classes to improve clarity to enhance code readability and maintainability
added a check for the running state before stopping the app context to ensure that stop is only called if the application is running to avoid potential errors
changed the return type of the drawItem method from void to GlyphLayout to enable retrieval of the drawing layout of the item for further use
refactor metrics handling in SpringmvcClient to utilize MetricsPublisher instead of JsonUtils to improve code clarity and maintainability by centralizing metrics extraction logic
removed the specific constant for SAFE _ ACCOUNT _ AGE _ DATE and updated the mapping function to use the accountAge variable directly to simplify the code and improve readability by using a more concise variable name
reformatted code for better readability and consistency in StructureHeader and StructureReader classes to improve maintainability and clarity of the code structure
added a ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration and associated tests to enable the exclusion of resource URL providers during webflow execution
add dexreturninliner to make it easy to manipulate return - inlining code
add miss property to enrich ruledto to allow more flexibility in data
8152776 : [ testlib ] fix aliascheckerSymlinktest for symlinks
[ flink - 20537 ] [ table ] remove the sql dialect config option for sql client
updated references to ` rDotJavaPackages ` and ` hasRDotJavaPackages ` to use a ` Supplier < ImmutableSet < String > > ` for better supplier handling to improve flexibility and clarity in packageable collection logic
[ java ] pmd : added test for package declaration .
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor to enable flexibility in managing compaction configurations
[ hotfix ] [ runtime ] move active resource manager from kubernetes to kubernetes
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestTestCheckColumn _ WrongOrder ` to temporarily disable the test due to known issues
updated ZipResource to handle URISyntaxException and improved URI creation to enhance error handling and ensure correct URI formatting for feature files
refactor ExpandableUploadListAdapter for better readability and consistency , and update thumbnail handling logic to enhance code maintainability and ensure proper thumbnail generation during uploads
updated RobolectricTestRunner to merge parent class and method configurations more efficiently to enhance test configuration resolution by merging parent class and method configurations correctly
fix : filter out null item and block from registry in model loader ( # 2324 )
refactor method signatures in AbstractDataChangedListener to remove the " abstract " keyword and update session handling in WebsocketDataChangedListener to streamline method declarations for better readability and consistency across the codebase
updated JSONPojoConvertor to handle enum types and improved color management to enhance type safety and ensure correct color handling for enum values
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the option will be removed soon
changed the type of originalPayload from String to byte array and updated its usage in GWTRequestWrapper . java to improve performance and simplify the parsing of GWT RPC method names
added orientation correction listener to the GyroControl class to enhance responsiveness to device orientation changes
set the BIOME _ LIST _ SIZE to the size of the biome gen array instead of 256 to improve memory efficiency by adjusting BIOME _ LIST _ SIZE based on the current biome gen array size
change visibility of Foo and Foo2 from package - private to public to allow access to these interfaces from other packages
removed an unnecessary assignment of the Environment variable in FileCompilerConfig . java to streamline the code by eliminating an unnecessary duplicate variable
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a generic framework for collecting byte data in a stream processing context
added a preload parameter to the MMapDirectoryFactory class to allow optional preloading of the map based on user input
added custom metrics for various enabled components in BukkitPlatform . java to provide detailed metrics on component usage for better analytics
updated QuickConnectREST . java file to improve functionality to enhance user experience during quick connection operations
added aspect assignment and initialization of mDefaultCardImage in CardPresenter . java to ensure correct image display for improved UI consistency
( scott phillips ) add protection against implicit authentication to the authentication count selector and login redirect .
lucene - 1751 : return empty array instead of empty object when clone ( ) return null
added unit tests for system . nanoTime ( ) in TimeChangeTest . java to enhance testing capabilities for JIT interpreter behavior
added handling for empty lines in MultiPartFilter and printed the parameter in MultipartFilterTest to ensure proper trimming of blank lines and improve test coverage
fire the experiencedrop event for when a player be drop , close # 1144
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to include localized configuration errors to improve clarity and maintainability of error reporting for configuration issues
[ sql ] do n ' t accept unsupportedoperatorsvisitor in sql planner
added new dependencies and updated the GraphEnhancementQueryEnvironment class to support Rdeps functionality to enhance dependency management and ensure correct functionality in the graph enhancement process
modified character handling logic in Character . java to enhance performance and maintainability of character operations
added a check to determine whether the component is a Rocket or a parallel stage before setting the selected index to ensure that the selection option correctly reflects the current rocket component behavior
[ ds - 3952 ] remove unnecessary array . tostring ( ) call in updatableresulttest . testbytearray
added time boundary handling for hybrid and realtime tables in the broker request processing to ensure proper time boundary information is available for better routing and data management
simplify the addition of a socket in ajp / http 1.0 ( there ' s no need for synchronization ) .
updated regex pattern and modified image metadata extraction in EightmusesRipper . java to enhance image handling and ensure accurate metadata retrieval for image sizes
replaced direct calls to ` mDevice . wait ` with ` TestHelpers . wait ` in multiple test classes to streamline code for improved readability and maintainability by centralizing wait logic
make hotseat report shelf height on large screen device .
replace usage of getValue ( query , PROPERTY ) with query . unwrap ( QueryImpl class ) in PartTreeJpaQueryIntegrationTests to improve query safety by using a more appropriate unwrap method for obtaining Hibernate queries
replaced direct calls to ` Files . readAllLines ` with a new method ` readMatchingLines ` to improve security by using privileged actions for reading lines
added dynamic check for result stream method in JpaQueryExecution to enhance flexibility in retrieving results stream through reflection
fixed an npe in physicprocess . getregisteredentity ( ) when the entity be null .
add test to ensure that entryprocessor clear the map when value attribute be indexed
added operationsetjitsimesettoolssipimpl to handle join room header for sip conference .
[ netbeans - 4294 ] fix color format for japanese font ( # 1359 )
add disable property to menu and consolidate name normalization ( # 5321 )
updated the scratch path format in Aapt2Link . java and added RmStep import in BuildTargets . java to enhance clarity and maintainability of the code by using dynamic path generation
replaced instances of ` new Capture < > ( ) ` with ` capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and changed the mock creation in ` ThriftOverHttpServiceTest . java ` to use ` NiceMock . createNiceMock ( ) ` to improve object creation efficiency and adhere to best practices in mock instantiation
ticket # 3973 : make sure the selected geos be clear and not update itself ( despite the fact that it ' s not change )
fix yldvalidator crash on emptystackexception .
added ` isCanceled ( ) ` method implementations for multiple classes to standardize cancellation handling across the codebase
refactor multiple classes to implement a default method for checking annotation presence to improve code consistency and reduce redundancy across these classes
- add default implementation to removeallwidgets ( ) for ease of use
[ flink - 1749 ] [ test ] add log message to flink - test for easy debugging
opensslcipher : use ` math . max ` to reduce output size .
added handling for high - res content in PlaybackController to ensure compatibility with Fire TV Stick devices
[ beam - 8470 ] only show datasetsource in spark session once [ spark branch ]
consolidated import statements and enhanced listener management in GpsLoggingService . java to improve code readability and ensure proper handling of GPS and passive listeners
change the return type of putString from boolean array to byte array and modify width handling in Relay . java to enable correct handling of byte arrays and improve compatibility with different graphics formats
added support for BaseItemDragListener in FolderIcon to enhance drag functionality by utilizing shortcut information for items
added ` createEmptyArtifact ` method to ` RepositoryConnector ` , ` FileSystemConnector ` , and ` SignavioConnector ` classes to handle String , boolean , and long type casting to ensure proper handling of artifact types and improve type safety in the connector configuration
removed unnecessary line breaks in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed a condition for determining if the video link is part of a specific calendar to simplify the condition for clearer logic in the video fragment
camel - 8727 : fixed sftp to work on window a well . thanks to joerg kessler for reporting .
make test a little more deterministic and increase timeout
renamed variable ' groupSortStr ' to ' sortWithinGroupStr ' for clarity to improve code readability by using a more descriptive variable name
added support for LARGE _ FERN in BlockDoublePlant and BlockType classes to enhance functionality to accommodate additional plan types
changed focusable property from focusable to requestFocusEnabled in TranscodingTab . java to improve user experience by enabling request focus when needed
added exception throwing in VirtualMachineManagerImpl . java to ensure proper handling of exceptions during execution
added DB2TestSystem ' s acceptLicense method and modified import statements in DockerDatabaseWrapper and TableIsEmptyGenerator to enhance license handling and improve database management logic
[ netbeans - 6769 ] fixed optimizer not update units on double
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading operations for BTC and ZMW
added functionality to set the number of sampling in the PBRLighting class to ensure that the PBRLighting feature behaves correctly when sampling is available
updated test cases in StepWithSimpleTaskJobParserTests to remove unnecessary package names to streamline test cases for better readability and maintainability
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to enforce immutability for better code safety
[ giac ] correct formatting of ggbabs ( )
added multiple calls to ` addServiceOutput ( ) ` and conditionally added service output in ` DDLSemanticAnalyzer . java ` to ensure proper handling of service output updates based on the presence of triggers
add support for handle bigdecimal type in drlx parse util method ( # 1588 )
added " org . eclipse . jdt . " to WebAppContext . java to hide Jdt usage in jetty
modified return value from super . useAuthCache ( ) and cacheSPNEGO to false to simplify authentication logic by removing unnecessary cache checks
extracted namespace from segments [ 0 ] to capitalize to ensure consistency in namespace handling
camel - 7467 : fixed direct consumer do n ' t work if consumer be not available on a direct endpoint
added a null check for the ZooKeeper object before setting it to avoid potential NullPointerExceptions when zooKeeper is not initialized
standardize the spacing in the progressBar step description to improve readability and maintain consistency in code style
added a new utility method to run on the UI helper thread for vibration effects to improve UI responsiveness by allowing background task execution on the main thread
added a method to update the last remote stream ID to ensure the last remote stream ID is accurately updated for processing
added text anti - aliasing support in EditorHeader , EditorToolbar , and Preferences classes to improve text rendering quality by enabling anti - aliasing
[ java ] : do n ' t use term window size for flow control .
refactor : remove static import of enums in ctannotationimpl . java ( # 2564 )
update exoplayer . builder javadoc to mention buildexoplayer ( )
replaced the implementation of ` getRGBPixelImpl ` with a new method returning ` getRGBPixels ` to improve performance by utilizing a rectangle for pixel retrieval
add a new method ` newPrintStream ` to handle specific encoding for output streams to improve flexibility in setting output stream encodings based on system properties
tweak touchablemovementmethod ' s vibrate to get a smoother transition .
add some import for good readability
reordered the constructor of WebSocketClient to remove redundant parameters to simplify the constructor and improve readability by maintaining consistent initialization
move i18n test from / selenium - server / tests to / selenium - server / tests / html
refactor error handle to more accurately reflect that they may be throw at build time
added restoreAuthSystemState ( ) method call in XmlWorkflowServiceIT . java to ensure proper state management during the test execution
[ gr - 23589 ] make lowercase comparison of tregex feature into feature set .
refactor JavadocTool to improve error handling and streamline the parsing process to enhance code maintainability and provide clearer diagnostics when no source files are found
simonstewart : adding a test for toggle an option on firefox and firefox
added validation to check if the length of keys is 9 to ensure correct number of keys to prevent processing errors
added error handling for fetching attributes in HDF5BatchReader to log warnings when fetching attributes for Huge objects BTrees with single records
return writeresult instead of pDone to reduce api usage
[ netbeans - 4037 ] fixed npe while upload binary content of template file
added a new file TestMultiANewArray . java that tests multi - array functionality to ensure proper handling of dynamic class file creation and verify expected results
bug 11814 : remove secondary . storage . vm config option in managementserver
fix ( net ) : if the last index do n ' t match the net _ fork _ num , do n ' t add the block to the list
added a theme setting method for the preview tab content to ensure the preview displays the correct theme based on user preferences
added null check and closing logic for the reader object to ensure proper resource management and prevent potential memory leaks
added a new test method for validating idle time in ConnectorTimeoutTest . java to ensure proper handling of idle connections and validate server response behavior
add dictionary property to dcoref and make it accessible from the config file .
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve clarity in parsing tag names and enhance code readability
resolved - issue batch - 1161 : jpa 2 upgrade to jpa 2.1 . 2
hive - 23790 : reduce log level for findchildnode ( prasanth jayachandran review by gopal v )
updated color extraction logic to utilize hotseat palette retrieval instead of direct palette updates to streamline palette handling and improve compatibility with different Android API levels
added methods to set and retrieve table entry and cell transformers in TypeRegistry to enhance flexibility in handling data table transformations
removed assertion for ` newAvailableShared ` in ` AtomicRemainder . java ` to streamline code by eliminating unnecessary assertion
doc : [ language ] fix docstring formatting ( # 9451 )
removed the projectGenerated boolean field and its getter method to streamline the project generation process by eliminating unnecessary state management
[ java ] fix checkstyle violation in util / driverutils . java
added contact form handling routes and introduced a new Contact class for managing contacts to enhance the application ' s capability to handle contact data effectively within the application
guac - 567 : simpleuser should use objectpermission objectpermission instead of permission objectpermission .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new release version for better release management
fix ( traitfactory ) : remove todo , fix setmode signature
updated method signatures to use both name and alias for better matching to enhance the accuracy of SQL queries by considering both name and aliasing
replaced manual iteration over PerDocConsumer instances with IOUtils . closeSafely to improve resource management and avoid potential memory leaks
rename AbstractDataChangedListener and HttpLongPollingDataChangedListener classes to maintain consistency in naming conventions across the codebase
added a click listener for the overflow button in the menu display to enable navigation to the menu when the user clickes it
updated error messages for null and non - null references in subject classes to improve clarity and accuracy of error reporting for null subject references
ggb - 2321 fix : height of avhelp button do not change when user click on it .
move test case from p2p to core and add miss package
fix ` ` divider position & width ' ' display in jabref , fix # 4068
add support for cross reference which exist in subgenerator ( e . g . goto analysis ) .
[ geos - 8042 ] remove cast to map to avoid classcastexception in resourcepool
corrected the spelling of " extractTypes " to " dataTables " in the RecipeDescriptor class to ensure consistency and accuracy in variable naming
fix duplicate update contact and add a listener for when a contact have change .
updated import statements for ShellCommand and ShellFactoryImpl to correct package references to ensure compatibility with the latest SSHD API changes
added a test method to verify the cleanup of the audit log table post parameters to ensure that the audit log table clean up correctly after parameters are applied
added a suppress warning annotation and modified the inject method ' s return type to improve type safety and reduce unchecked cast warnings
ambari - 21181 . fix parsing of ACL comment line ( dlysnichenko )
updated MapRDBFormatMatcher and MapRDBSubScan to incorporate dynamic DrillTable for better data handling to enhance functionality to support dynamic table operations in the Drill framework
added handling for ancestor dimension values in StarTreeImpl . java and updated node name splitting in StarTreeNodeImpl . java to improve clarity and efficiency in dimension representation during node splitting
added user unlock check before dumping plugin manager data and modified closeOpenViews method to improve state management based on user unlock status and streamline view closing process
updated condition to check for positionStr instead of widthStr to ensure proper validation of positionStr variable
refactor PKIXValidator logic to improve certificate validation structure to enhance readability and maintainability of the validation process
[ flink - 26011 ] [ hadoop ] [ test ] add archunit test for the test code
updated package names for integration tests from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to ` org . apache . shenyu . integrated . test . alibaba . dubbo ` to better reflect the purpose of the classes and ensure consistency in package naming
vpc : enable access control where vpcid be not need ( # 4447 )
updated the method to retrieve labels by type in RuntimeTypeAdapterFactoryFunctionalTest . java to ensure correct retrieval of shape type and improve test reliability
add getter and setter for storeundoinfo ( fix issue # 511 )
7127827 : jre8 : javaws fail to launch on oracle linux due to xrender
[ java ] fix flakiness of streamclosetest .
lucene - 6338 : remove unused doafterflush ( ) from docconsumer and docfieldprocessor ( # 785 )
ignore non - deprecated property when generate json schema
refactor capacity and mask assignments in BiInt2ObjectMap and Int2ObjectHashMap classes to use final variables instead of local variables to improve code clarity and ensure immutability of capacity and mask variables
increased the number of threads from 25 to 15 in HiveConf . java and updated the rename method call in Hive . java to increase the number of threads and ensure consistency in file handling during rename operations
add some extra logging to the parallel multipassender to debug build issue .
added a null check for the context in SchemeAndroidIDE . java to ensure safe creation of an instance when context is null
[ gr - 29399 ] [ gr - 39399 ] fix custom class loader issue when generate native image .
changed the return type of the modifyGrantedAuthorities method and updated the usage of originalAuthorities to return a List to enable the modification of granted authorities for improved functionality and flexibility
refactor JaxrsIntegrationTest to extend JaxrsIntegrationTestBase and introduce new classes JaxrsSpringMain and JaxrsSpringTest to enhance test structure and organization for better maintainability and organization
fix # 188 allow to set query timeout while jdbc 1.1 compliance
added DataProviders for general and supplementary character tests in XslSubstringTest . java to improve test coverage and organization for XSL substring functions
update the close method in StaxEventItemWriter to use delegateEventWriter instead of eventWriter to ensure proper resource management and prevent potential resource leaks during stream operations
added support for MariaDB sequences and updated handling of sequence parameters in the CreateSequenceGenerator to enable proper sequence functionality in the MariaDBDatabase implementation
removed unnecessary whitespace in error messages and improved formatting in multiple Java files to enhance code readability and maintain consistent formatting
added TableDataManagerProvider and ServerMetrics to multiple test files to enhance monitoring capabilities for table data processing
do n ' t disable fx extension by default ( fix # 474 )
updated iterator types and initialization in ObjectHashSet . java and ObjectHashSetIntegerTest . java to improve iterator functionality and ensure proper string representation for expanded set instances
updated exception handling in MainActivity and adjusted character count in Compose and TweetFragment to improve error handling and ensure accurate character count representation
add ' datapoint _ ttl ' field to cassandra datastore ( # 1592 )
modified the method ` checkForAndKillXcodeIfRunning ` to accept an additional ` enablePrompt ` parameter and improved error messaging to enhance flexibility and provide better feedback regarding Xcode interaction based on the process manager ' s availability
add terraingrid . gettileatcell ( cellcoordinate ) method for use in terraingrid . gettileat
added default value handling in expression printing and created a new class T6665791 for compiling annotations to ensure default values are printed correctly during annotation processing and facilitate testing of annotation compilation
added error handling for loading keys in ResourceLoader to provide clearer logging when the QuestEncryptionKeys file is not found
modified return statement to check if a request is not pushed to ensure proper handling of non - push scenarios
updated the PointValue class to improve functionality to enhance the accuracy of point value calculations
update blockCapsule . sign method to sign private keys to ensure proper signing of private witnesses in the block logic
return the first root or null if no roots exist in FileSystemView . java , and added security checks in Win32ShellFolder2 . java to enhance robustness by handling empty root cases and enforcing read permissions during folder access
fix arrayindexoutofboundsexception when copy last row of table ( github # 152 ) .
refactor undo and undo notes handling in ListFragment to utilize SparseArray for storing notes to improve management of selected notes and maintain consistency in view updates
[ # 8803 ] fix issue with backup data not update in ui ( # 8803 )
added a null check for the data parameter in the getTransferData method to avoid throwing an exception when the data is null
# 961 - remove internals to remove pstmtdelegate interface
replace custom Padding class with Rect from AppWidgetHostView for widget padding calculations to simplify padding retrieval and improve compatibility with widget framework
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code organization and enhance argument filtering for ConsString type
refactor ClassGraph and ScanResult classes for improved readability to enhance maintainability and clarity of the codebase
refactor CountDownLatch usage in IdleTimeoutTest to use goAwayLatch for clarity to improve code readability and maintainability by using more descriptive variable names
updated assertions in IterableSubjectTest to use hasMessageThat ( ) instead of getMessage ( ) to improve readability and maintainability of error message assertions
pdfbox - 2852 : get rid of threadlocal call , a suggest by valerybokov
added support for checking if a class supports the object type in ContactSecurityVoter to enhance type safety and prevent runtime errors related to unsupported object types
removed unused import statements for GachaHandler and Tools in DataLoader . java to clean up the code and reduce unnecessary dependencies
added functionality to track and log the number of rows successful in multiple update steps to provide better feedback and tracking of successful updates in the system
ticket # 4810 : precompute the margin before set the scaler style , a suggest by michael klink
updated foregroundFPS and backgroundFPS values from default to 60 to standardize frame rates for improved consistency
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog classes to ensure proper tracking and release of object releases during transactions
replaced DefaultWebSocketFrame with a listener for closing the WebSocket frame to utilize a more flexible listener for WebSocket closure
updated test class names and introduced new listener classes in StateMachineErrorTests . java and DocsConfigurationSampleTests . java to improve clarity and functionality of event listeners in the state machine error tests
replaced the background intent creation in SettingsActivity with a method to set the list background color to simplify the background handling and improve code readability
updated import statements in RMEThingHandler . java to replace the Apache Commons Lang utility with OpenHAB utility to ensure compatibility with OpenHAB utilities and improve code clarity
added a new method ` accumulate ` that calculates the sum and count based on a given integer to enhance functionality by allowing dynamic adjustment of accumulator metrics based on input values
hbase - 23367 fix broken checkstyle in hbase - replication
replaced Set with Map for cache management in RegExpFactory to improve regex pattern compilation efficiency and maintainability
added a reset method to the GameThread class to enable reinitialization of the gameThread instance
added a realm comparison in the DigestAuthenticator class to ensure that only valid realm instances are used for authentication
updated parameter handling in SavedRequestAwareWrapper to improve parameter retrieval and merging to enhance the robustness of parameter management and ensure consistency in data processing
fix for log4j2 - 834 : log4j2 - 834 do n ' t show hidden singleton in configuration .
fix race condition in commit log and ha service ( # 1701 )
added a check for the Android version in PhotoViewerActivity and created a utility method to handle auto - complete functionality to ensure compatibility with Android O and above
updated schema info level from minimum to basic in SchemaCrawlerTest to improve clarity of schema information by using a more appropriate severity
mahout - 4957 - fix npes in save task , ensure buffered output be write to avoid warning .
updated byte handling and encoding in TestPayloads . java to improve accuracy and performance of byte array conversion
fix entity not be load on the server side ( mc - 103516 ) ( # 4722 )
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter " to the list to support integration with Tomcat ' s container adapter
[ drools - 7 ] fix marshalling and serialization issue for multi - accumulate variable
updated case statements in NowSearchTerm . java and SearchTermBuilder . java to streamline switch statements for better readability and maintainability
pdfbox - 2576 : make class public again , a suggest by michael klink
added HTTP method and headers management to RemoteEndpointServiceAccessStrategy to enhance endpoint URL resolution using Spring ' s expression capabilities
refactor response building by introducing a new method ` newResponseBuilder ` to improve code readability and maintainability by centralizing response creation logic
added notification of COMMAND _ START in AsyncBackgroundTaskManagerTest to enable immediate notification of the command start in the test
refactor ` computePreviewDrawingParams ` method to public and update its usage in ` FolderIcon ` and ` PreviewItemManager ` to improve visibility and functionality of the method for updating drawable parameters
updated LukeRequestHandler to use CharFilterFactory instead of Tokenizer to enhance support for character filtering in token analysis
replaced error handling for null arguments with a utility method for null checks to improve code readability and maintainability by centralizing null checks
modified verbosity handling in JavacStep and ExecutionContext to allow for conditional printing based on context ' s verbosity to enhance flexibility in output formatting based on user preference
add support for oracle schema handling in DbSqlSession . java to ensure compatibility with Oracle database types
log4j2 - 1349 fixed bug in asyncloggerallthreadcontextimplementationstest
added a new file TestShrinkToOneRegion . java to implement a test for shrink - to - region behavior
replaced string splitting with Splitter for customPackages to improve code readability and maintainability
replaced utf8ToString ( ) with direct usage of context in AnalyzingInfixSuggester . java and added new tests in AnalyzingInfixSuggesterTest . java to improve code efficiency and ensure correct handling of binary contexts
updated the handling of local attachments in PushsaferMessageBuilder to improve clarity and correctness in determining content type and encoding
remove the provenancehash command from stripprofilestatement since it have no usage
pdfbox - 2576 : remove unneeded null check , a suggest by valerybokov
remove ` ` final ' ' modifier from function declarations in multiple test files to allow for greater flexibility in function declarations
updated UDFRound . java to enhance rounding functionality to improve handling of null values and rounding policies
[ jsscripting ] avoid npe by use configmap in graaljssscriptenginefactory ( # 11846 )
changed class declarations from ` Test1 ` and ` Test2 ` to ` public ` to allow access to these classes from other packages
updated permission templates and variable names in PlayerEventListener to improve clarity and consistency to enhance code readability and maintainability by using more descriptive names
fix optimizations . remove ( ) and compareinconstantset bug
updated the test case in BaseNormsFormatTestCase to use NumericDocValuesField instead of LongProducer to improve clarity and functionality in theNorms format testing process
added new test cases for box and circle creation , and reset friction for contacts in Box2DCharacterControllerTest . java to ensure proper rendering and friction of dynamic entities in the game world
added memory size tests for FLIGHT reorder options in TestBadOptionValues . java and updated memory options in TestMemoryOptions . java to improve robustness of configuration handling and ensure correct memory allocation for different VM sizes
remove unnecessary shouldcontain ( ) check in objectalignment and options
added target package extraction functionality to various classes to enhance manifest handling and ensure accurate package name extraction from manifest files
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
fix initialization of acceptablethrowawayitems to work with list
changed method calls to explicitly cast boolean and char types to improve type safety to avoid potential ClassCastException at runtime
improve thread safety and code style in messagehandler .
[ java ] update inflection javadoc to reflect api change
add methods to retrieve and set the locale in EvaluationContext to enable flexible locale management in the application
removed unused import of Plugin in SummaryPrinter . java to clean up the code and reduce unnecessary dependencies
added a break statement in DrawerActivity . java to terminate a loop or switch case execution early
updated import statements in MongoQueryCreator . java for better readability to streamline import statements and improve logging clarity
http : / / issues . apache . org / jira / browse / amq - 3135 - add a system property to support custom loggerfactory
update test method names in AdminAddPeerWithP2PDisabledAcceptanceTest to clarify the distinction between target and input nodes to enhance test clarity and maintain consistency in naming conventions
change bean name in conditionalonmissingbean annotation to avoid bean conflict .
added concurrent map support to LocalPStoreProvider to enhance performance by allowing concurrent access to PStore instances
changed the visibility of the deleteFiles method from public to private to restrict access and encapsulate functionality within the class
refactor ServiceLoaderSpliterator to use ServiceProvider for clarity and consistency to improve code readability and maintainability by using consistent naming conventions
[ gr - 24405 ] do not throw illegalaccessexception in javainteropreflect . setfield and javainteropreflect . setfield for some code .
added checks for created toolchains in AbstractCell and DefaultToolchainProvider classes to ensure compatibility with Android SDK changes when toolchains are present
do n ' t need to wait for the engine to be initialize even if no context be need .
performance - use ` contains ` instead of ` indexOf `
updated PrebuiltCxxLibraryDescription to use exported linker flags instead of empty lists to ensure correct linker options are used for shared libraries
refactor recents rotation handling by replacing the onConfigurationChangedInternal method with a new updateRecentsRotation method to streamline rotation updates for better code clarity and maintainability
updated type checks in multiple classes to use generics for better type safety to enhance code clarity and prevent potential type safety issues
fix blockchain bug when use blockchain . gethashstring ( ) .
[ rocketmq - 367 ] fix potential nullpointerexception in defaultmessagestore # getstorepathphysic
remove unnecessary try - with - resources in micrometermetricmanager ( # 1595 )
[ issue # 7304 ] fix get message count stats in compaction log ( # 7683 )
see http : / / code . google . com / p / mybatis / issues / detail ? id = 435 . mark all query class a deprecated
added a method to check if a system UI object exists and execute a shell command for input key event 82 to enhance functionality to verify system UI interactions in the launcher
updated logger variable to be static in SessionRegistryImpl . java to enforce immutability for better thread safety
fix cookie - store . removeall ( ) to return false when empty
add log for bonsaivalue . tostring ( ) ( # 4026 )
changed the method parameters of ` getText ` from ` String ` to ` CharSequence ` in multiple repository classes to improve flexibility in text handling , enhancing type flexibility
[ java ] ignoring a test fail because of marionette regression
added a try - finally block to ensure the connection is returned in the SocketConnector class to improve error handling and resource management during connection handling
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related classes to reflect this change to clarify the purpose of the escape being used for create processes on Windows
added synchronization to the heartbeatExecutorService initialization and adjusted thread cancellation policy handling to ensure thread safety during shutdown and maintain thread integrity during the heartbeat process
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and introduced new method ` wrapWithTracingAndCancellation ` to enhance asynchronous processing and improve code clarity by isolating tracing and cancellation logic
fix for drag - selecting text out of the text area ' s bounds .
added Hadoop file path configurations to configuration overlays in TestInformationSchemaWithPrivilege . java to ensure proper directory structure for testing information schemas with privileges
refactor graphics configuration retrieval logic for clarity and efficiency to streamline the process of obtaining the graphics configuration and enhance readability
tika - 3776 -- do n ' t set serverstatus to true in xftestbase , and add a new test for oom in legacy mode
camel - 20297 camel - core - optimize to reduce number of call in process method when use the same pipeline
add - model argument to printtaglist to allow user to use them
changed the method from ` getFullyQualifiedName ( ) ` to ` toString ( ) ` in ` InsertDeParser . java ` and added a new test in ` InsertTest . java ` to ensure the correct string representation of the table while addressing issue # 526
[ amq - 7037 ] fix the issue of jenkins failure after jdk - 8285757 ( test failure )
[ java ] resolve intermittent failure of startfromtruncatedrecordinglogtest due to timeouts .
update arc calculation and outer rectangle calculations in LineBorder . java to improve accuracy in arc positioning and ensure proper rendering of rounded rectangle
added checks for empty galleryImages list in PostGalleryTypeImageRecyclerViewAdapter to improve robustness by preventing potential NullPointerExceptions
added deployment ID update and reset functionality in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to ensure proper handling of deployment IDs in the change log history
pdfbox - 4071 : rename and fix typo find by codespell on fdf
refactor index and refIndex methods in AlterTableAddConstraint . java for clarity and consistency to enhance code readability and simplify the index validation logic
added support for multiple provisional engines in QuickfixjComponent and updated related tests to improve engine management and ensure proper functionality during testing
added displayZoomControls property and modified setMixedContentMode method to enhance control over display of zoom controls in RoboWebSettings
add corporea block and slab ( # 6242 )
refactor ConnectionFactory methods for improved readability to enhance maintainability of the connection handling logic
added a method to Enable disable menu items and updated the mnu annotation for editing menu items to improve user experience by providing appropriate feedback when menu items are disabled
updated the message in the ExtendedListFragment to use a more descriptive string resource for empty favorites to enhance clarity and maintainability of the favorite list message
replaced @ ServiceRegistry . Setting with @ Setting in EntityTests . java to simplify the code and improve readability
modified MotorMountConfigurationPanel to use subpanel instead of this in the constructor to enhance the flexibility of component management within the Motor mount configuration
changed LINE _ SEPARATOR from System . lineSeparator ( ) to System . getProperty ( " line . separator " ) to ensure compatibility across different operating systems
added getter and setter methods for creator and subject in POIXMLProperties . java , and created a test method for document properties in Test POIXMLProperties . java to enhance functionality for managing creator and subject properties in the spreadsheet
added a call to the superclass ' s doStop ( ) method to ensure proper execution of the stop method in the HandlerWrapper class
[ java ] handle case of empty cnc file .
rename the ' NonMarkedFoo ' interface to ' Command ' and update method signatures accordingly to improve clarity and consistency in the code structure regarding command handling
added functionality to handle jmod - related classes in ClassFileSourceImpl . java to enhance modularity and ensure correct processing of mod files
updated TreeBackedElement , TreeBackedEnter , and TreeBackedPackageElement to use Nullable instead of PostEnterCanonicalizer to improve null safety and clarity in method parameters
introduce a new ` PublicTokenRequest ` and set request parameters in ` Saml2TokenGranterTest . java ` and ` UserTokenGranterTest . java ` to enhance token request handling by setting request parameters for better integration testing
int - 957 , int - 957 change arrayindexoutofboundsexception to valuerangeobject in abstractfrompropertyvaluerangedescriptor .
add a sync method to the ZKAssign and ZKWatcher classes to enable synchronization of node paths for better data management
test ( gl ) : add check for EGL14 . eglGetCurrentContext ( ) return value of glutil . getcurrentcontext ( )
jbrules - 3684 : if the ruleflowgroup be already active , do n ' t remove it
added a return statement to HystrixDashboardConfiguration . java to improve method exit point clarity
updated error handling for pipe deletion in DropPipeProcedure . java and IoTDBPipeIT . java to ensure proper failure messaging when the pipe does not exist
added cleanup to clientqueuedisruptiontest [ hz - 2197 ] ( # 24831 )
refactor : use defaultjavaprettyprinter in ctreferenceimpl . getsignature ( ) ( # 3568 )
changed method visibility of validateInstance from public to protected to restrict access to the validateInstance method for subclasses
updated GeoPointField , GeoPointTokenStream , GeoPointPrefixTermsEnum , and GeoPointNumericTermsEnum classes to improve clarity and maintainability of the code related to GeoPoint fields and terms
add a new class FakeBuildable that simulates the build process to facilitate testing and mocking of buildable behavior in unit tests
fix npes from itemstack . getitem ( ) which return null in some case .
renamed ` RewriteRuleSubtreeStream ` to ` RewriteRuleSubtreeStream ` and updated variable names for clarity to enhance code readability and maintainability by using more descriptive names
updated the method of obtaining the Velocity value and added a check for negative values to ensure the value is always non - negative to avoid potential errors
fix the bug that duplicate blob can not be find ( # 7041 )
replaced a call to ` VertxUtils . blockCloseVertxByName ( " transport " ) ` with a ` finally ` block to ensure the transport is closed regardless of previous operations
# 454 - postgres history ddl - add sql file to drop column when necessary ( # 455 )
updated test case to check for clustering engine with a different parameter value to ensure functionality with the new expected behavior of clustering algorithms
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as not requiring it to be rewritten
replaced the ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in the ` ParserCacheCommand ` and created a new ` ParserStateObjectInputStream ` class to handle deserialization of ` ParserState ` more effectively
add a check for the change log ' s object quoting strategy to ensure proper initialization of the object quoting strategy based on the presence of a change log
updated MetainfoParser instantiation from parsing to parsing from XML stream to improve compatibility with XML file format
deleted the CsrfControllerAdvice . java file to remove unused code to streamline the project
replaced direct string concatenation with a method to quote path strings in the AntCompiler class to ensure proper handling of file paths that may contain spaces
added scrim animation functionality to enhance visual feedback during screen transitions
[ iotdb - 167772 ] fix type inference bug ( # 7112 )
regenerate client with updated copyright year ( # 4382 )
added expected Windows path handling and corresponding tests in WindowsPathParser and PathOps to ensure correct parsing of path strings with backslash characters and improve error handling for invalid paths
removed unnecessary InetSocketAddress creation for multicast socket creation to simplify the socket initialization and improve code readability
fix testquestionmark by change the order of close ( ) in the testquestionmark .
replace return statement to clone nBits before returning it to ensure that the original nBits array is not modified externally
change the access modifier of ` deriveCollectorName ` method from private to protected and add a new ` TestCollector ` class for testing to enable subclasses to access ` deriveCollectorName ` and improve test coverage for custom collector names
updated the type hint handling logic in MappingMongoConverter and added a new test case in MappingMongoConverterUnitTests to improve type safety and ensure correct writing behavior for simple types
added performance measurement for proxy factory creation to enhance performance tracking during factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during compilation for improved code clarity
updated exception handling in TCPConnection . java to include detailed exception details to improve error reporting and provide more context about connection issues
refactor reinflateWidgetsIfNecessary ( ) method to the Workspace class for better organization to improve widget management by encapsulating widget inflation logic within the Workspace context
added a new test class ` DeleteInsideFileDialogTest ` to manage file deletion in a dialog to facilitate testing of file dialog interactions and ensure correct behavior when deleting files
* remove dead code and add display . processmessages ( ) if the renderer be not call
[ 4566 ] instructorstudentlist : fix test case to show picture
added methods to manage ignored variables based on the " onlyrun " and " method " system property to enhance test flexibility by allowing the exclusion of specific methods based on environment variables
removed ' pointer ' parameter from the fling method signature to simplify the method signature for improved readability and usability
added null check for pageable in QueryDslJpaRepository and created a corresponding test in QueryDslJpaRepositoryTests to ensure robustness by handling potential null pointer exceptions
[ flink - 23790 ] [ runtime ] add memorymanager . computememorysize ( fraction ) .
camel - 9287 : fix the unit test which randomly fail on slow ci server
modified SnowballAnalyzer . java to enhance functionality to improve text analysis accuracy for Snowball files
updated the handling of the previous index in StreamingAggTemplate to correctly manage the state of the previous batch to ensure proper management of the current index and prevent potential errors during processing
make handling of null check the receiver of a plugin non - null safe .
added a new method ` stream ` that takes a ` TableIdentifier ` using ` computeIntensityDefault ( ) ` in ` StreamSupplierComponent . java ` to provide a standardized way to stream entities with default parallelism
retry to move a file to trash if it have be fully played
updated InjectorProxy and related classes to change access modifiers and method implementations to improve flexibility and allow for more flexible object creation in the injector framework
[ hotfix ] [ stream ] fix file descriptor leak in flinkstreamingcreatefunction
add tests for SQL parsing and deparsing of CREATE TABLE statements in ShowStatementTest and UnsupportedStatementTest to ensure proper handling of unsupported SQL syntax and improve test coverage
change return value from null to ImmutableList . of ( ) to allow for returning an immutable list instead of a null pointer
updated the test data in NamedSetTest . java to reflect the correctness to ensure that the test reflects the correctness of the data provided to the application
updated WebSocket handling logic to include a condition for reconnecting and improved connection state management to enhance the reliability of websocket connections and better manage connection states
replaced direct attribute calls with session removal for ACEGI _ SECURITY _ AUTHENTICATION _ KEY and ACEGI _ SECURITY _ TARGET _ URL _ KEY to simplify code by using removeAttribute instead of setAttribute for better readability and maintenance
hbase - 27494 attempt to fix testregionreplicageregionreplicationendpoint failure on occasion .
added PMS initialization and configuration to FormatRecognitionTest . java to ensure proper integration of PMS features during recognition
cloudstack - 4494 : create / update template api at the end , to not change state of image upload if template be create in ova
updated test class imports and modified the test setup for PrincipalAttributeRegisteredServiceUsernameProviderTests to enhance compatibility with JUnit4 and ensure proper testing of the principal attribute provider
added multiple @ Override annotations to CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy to enhance code clarity and ensure proper method overriding
added metricVal1 and metricVal2 to multiple tables and updated table names in AppendOnlySchemaIT . java to ensure consistency in metric data handling across the test cases
added a check to compare deleted and segment document counts in SegmentReader . java to ensure consistency and prevent corruption due to inconsistent document counts
add a method to get logger name and improve the logging .
added a new constant for shorter length in FilamentFactory . java to accommodate staves w / no starting barline scenarios
set default value of handleFileUploads to true in VertxPlatformHttpServerConfiguration . java and update bodyHandler . setFileUploads ( true ) in VertxPlatformHttpEngineTest . java to enable file uploads by default and ensure proper handling of multipart requests
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests . java ` to ensure that the filter correctly handles case - sensitive HTTP methods to maintain security
replaced static final field references with direct variable references in HotSpotObjectConstantImpl . java to improve code readability and reduce redundancy in field retrieval
updated method names from ` add ` to ` addFrequency ` in multiple classes to improve clarity and consistency in naming conventions regarding frequency addition
[ beam - 12285 ] replace fileio . matching with watermark ( # 12287 )
fix npe when copy cte from cte ( # 4461 )
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize SQL result set metadata for improved functionality
added the project root path to the command line arguments for better clarity to ensure that the command line program runs with the correct root directory
updated the angle slider range from 180 to Math . PI in RailButtonConfig . java to improve usability by providing a more intuitive range for slider adjustments
fix worldedit . save ( ) so that it can work with modded saves .
ambari - 21164 . add kerberos property to support kerberos expression language . ( attila magyar via adoroszlai )
removed conditional checks for remoteMountPointComponent and its usage in ThirdPersonRemoteClientSystem . java to simplify code by eliminating unnecessary checks for null
updated setupViews method to accept a ScrimView parameter and modified related animation settings to enhance UI transitions by integrating scrim features for better visual feedback
[ flink - 30613 ] [ statebackend ] add config option for whether to enable periodic materialization on changelog state backend
fix for http : / / issues . apache . org / activemq / browse / amq - 2840 - add default value to protocolparameter
add a unit test for a chunking test in TestHttpServlet . java to ensure the ChunkingServlet behaves correctly with and without a head header
add ` ` bedped ' ' status to the router ' s response ( it ' s still a leftover ) .
added a content type header for " Content - Type " in SwitchToPostInterceptor . java and updated SearchRequestUnitTest . java to include " application / x - www - form - urlencoded " to ensure proper content type is sent in HTTP requests
camel - 7028 : fix doc typo in the doc of embedclientconnector
replaced SQLFeatureNotSupportedException with a warning log for ignored fetch size setting to improve error handling and provide more informative logging for SQL operations
fix a bug where we be n ' t initialize the net object in the start ( ) method of the first request .
fix typo in lilRealtimesegmentdatamanager . getnumrows ( ) ( # 11943 )
removed the " false " parameter from depositAddresses method calls and added " Bitcoin " , " Monero " , " Monero " , and " Monero " to these deposit addresses list to simplify the API calls and ensure consistent handling of deposit addresses
hbase - 25823 remove prefixtreecodec from hbasemaputil ( # 210 )
added inflation failure handling in DesignerActivity and modified root variable declaration in XMLLayoutInflater to improve back navigation and ensure immutability of root variable
modified the PushbackInputStream class to enhance input stream handling to improve performance and maintainability of the Pushback input stream processing
add schedule phase to lower phase to improve control flow optimization
updated error message to use " sync _ folder _ failed _ content " instead of " download _ folder _ failed _ content " to ensure the correct message is displayed for synchronization issues
update makefiles to handle \ \ r \ n and \ r \ n for both tab and tab
replaced direct retrieval of deleted documents with MultiFields utility to enhance compatibility with Lucene ' s handling of deleted documents
replaced the ` super . setTransformRefresh ( ) ` method with ` setBoundRefresh ( ) ` and introduced a new method ` setTransformRefresh ( ) ` to enhance refresh handling in SimpleBatchNode to include RF _ TRANSFORM
[ gr - 46711 ] use isuninterruptible ( ) to check for uninterruptible method .
added framebuffer size handling to LwjglWindow to improve window resizing and ensure proper handling of window size changes
updated animation parameters and variable names in LauncherAppTransitionManagerImpl . java for consistency to improve clarity and maintainability of the animation logic
updated ` LiteralNode ` implementation to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` and modified the static methods accordingly to enhance type safety and functionality by accommodating null values
lucene - 1500 : fix bug with compoundfilewriter # write ( int ) , when write to file , only set file length when write to cf
updated AndroidNdkScriptGenerator and AntScriptGenerator to enhance directory handling and added new test classes in LwjglDebugStarter to improve code organization and ensure proper testing of native libraries
camel - 16936 - camel - aws2 s3 : improve source / destination key / bucket management
updated authorization logic to handle wildcard roles and improved test coverage for collection - based authorization to enhance authorization flexibility and ensure proper validation of resource paths
updated ZookeeperClientServerRegisterRepository to improve data handling and import statements to enhance robustness and clarity in processing URI registration data
renamed methods and variables related to mock creation and serialization in ReturnsDeepStubs . java to improve clarity and consistency in naming conventions regarding mock creation and serialization
modify the handling of call values to return a default byte representation when they are empty to improve data consistency and prevent potential errors when the call value is empty
fix log ` ` date can not be parse ' ' exception ( # 2488 )
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and changed the algorithm name from " PBEWithHmacSHA1AndAES _ 128 " to " PBEWithHmacSHA1AndDESede " to improve algorithm handling and ensure compatibility with the new encryption algorithm
tmi - tiff : extract validation into try / catch to prevent eofexception .
in progress - issue batch - 159 : jobexecutor should return a jobparametersnotfound exception for invalid parameter .
removed carriage return characters from the content assertion in SmtpTests and MailTests to ensure the content is correctly formatted as a plain string
updated case statements in ExtendedConnectionDataSourceProxy . java for better clarity to enhance readability and maintainability of the code
camel - 16419 : fixed race condition in longsequencegenerator . incrementlastsequenceid ( # 8547 )
added a new file Test . java containing a method to calculate the sum of values to provide a utility for computing the value dynamically based on specified conditions
changed private fields to protected in ShadowWifiManagerTest and WifiUsabilityStatsEntryBuilder to improve accessibility for subclasses and enhance extensibility
added a new Java file that implements a solution for sorting and manipulating multiple integers in a given list to provide a solution for a problem that requires sorting based on specified criteria
do n ' t attempt multiple map entry for the same keyspace when restart the same keyspace
refactor taskbar recreation logic in TaskbarManager . java to improve clarity and maintainability of the code regarding screen orientation changes
refactor SyncFutureCache . java for improved synchronization logic to enhance performance and reliability of cache management
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and changed the corresponding version from " 2.0 . 1 " to " 2.0 . 2 " to reflect the latest release and ensure compatibility with the latest features and fixes
[ java ] stringvalueof : fix false negative with literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the correctness of the symmetric component drag behavior in different rocket configurations
add option to set the maximum type shard size for kotlin
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to ensure compatibility with new configuration options
[ hotfix ] [ javadoc ] fix typo in CompilationTask . java
updated database parameter handling in DDLTask and added a test mode check in TestSemanticAnalysis to ensure correct database location is displayed in test mode and enhance test coverage
added execution of ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to clear the database change log table for improved performance
added version handling in RestClient and CallPath classes to ensure proper URL construction and manage path attributes based on version information
phoenix - 1122 improve thread safety of close ( ) and registerconnection ( ) method .
replaced return statements with throw UnsupportedOperationException in multiple classes to improve error handling by signaling unsupported operations instead of returning null
added test setup and cleanup methods in ConflictsResolveActivityIT , FolderPickerActivity , UploadFilesActivity , and FolderPickerActivity to improve test reliability and maintainability by ensuring proper resource management and screenshoting behavior
[ gr - 36769 ] fix - h : + respectdevmode option in generate - image .
[ issue - 2370 ] fix stringhelper . removeprefixandendingstring ( ) to return the empty string if the length of the string be less than 2 .
refactor JpaQueryCreator to enhance type handling and add a new method to find users with not containing characters to improve code clarity and functionality in querying users based on their last names
add a check to avoid too aggressive push of branch in sip storage that can take too long .
added a dispatch call to the P25Message class to ensure the dispatching of messages for the specified duid and alias list
added null checks for the WebSocket handler and implemented a new test for clearing client handlers on end to ensure proper handling of exceptions when the socket is closed and to validate that the client handlers are cleared when the socket is closed
( scott phillips ) add test case for indexablepooltask and indexeventconsumer .
updated widget padding handling in AppWidgetResizeFrame and Launcher to utilize a default padding to ensure consistent widget padding across different devices
added hide methods to TaskbarUIController and modified closeOverlay method in BaseActivityInterface to enhance taskbar management and improve overlay closure functionality
removed synchronized sleep and replaced sleep with a join method in CrawlJob . java to improve performance by reducing unnecessary sleep time
fixed positioning issue with mouse wheel in simulator . fix issue with zoom level in simulator .
fix notification not send ( # 4246 )
add a new test case and fix an out of bound exception that occur if a static final function be use .
hbase - 27894 addendum add retry number for test thrifthbasetesthandler ( # 4704 )
change the log level from info to debug for the Half offset commit message to reduce log verbosity and improve performance during high traffic
fix npe in resourceutils . getsignedkey ( ) ( # 641 )
added a new method ` BittrexTickersResponse ` and modified ` BittrexMarketDataServiceRaw ` to utilize it for fetching tickers to enhance the market data retrieval functionality and improve code organization
refactor enumConstants retrieval to improve type safety and accessibility to enhance code clarity and ensure proper type casting for enum constants
minor refactor to make it easy to understand what the unit test mean
updated character set clist in FileUtils . java to include additional characters to ensure proper handling of Unicode characters in file paths
added resource management and stylesheet handling in ResourceService and ResourceHandler classes to improve resource loading efficiency and ensure correct stylesheet content is returned
added clearIndex ( ) method to TestFiltering . java to reset the index before tests for improved functionality
updated method invocation from ObjectParameterStrategy to PointerParameterStrategy to ensure proper type handling for address retrieval using pointer parameters
updated condition to exclude CockroachDatabase in the CreateSequenceGenerator to ensure compatibility with CockroachDB in the sequence generation process
revised conditional check for the name of the object stream class to simplify the logic for identifying string types
change exception type from UnsatisfiedLinkError to SymbolNotFoundError and add a new class SymbolNotFoundError to improve error handling specificity for symbol not found issues
updated binary response writer to handle pseudo fields more effectively to improve compatibility with Solr ' s indexing process and enhance code clarity
added support for WebSocket PING and PONG types in WebSocketImplBase and created a test for WebSocket pause functionality to improve the WebSocket handling and ensure proper WebSocket pause / pong functionality
updated the NON _ IDENT _ ESCAPES string to include a hyphen to ensure proper handling of special characters in regular expressions
fix hostname resolution with a cache option
added a conditional annotation to check for the presence of MessagingTracing class to ensure that the tracing feature is only enabled if the MessagingTracing class is available
mondrian : fix bug in sqlquery , ` ` distinct distinct ' ' do n ' t work in db2
updated import statements in IDelanguageClientImpl , EditorTextActionMode , and IDEEditor classes to include necessary event classes to ensure proper functionality and maintain consistency in event handling within the project
added handling for the ' / ' character in XMLLightweightParser to ensure proper handling of close tags during XML processing
removed visibility setting for GONE in TouchCharInput . java to improve user interface responsiveness during interactions
added a null check for the current user before comparing an entity ID to avoid potential NullPointerExceptions during execution
added conditional handling for JSObject member setting in JSObjectLinker . java to improve flexibility and correctness of member assignment based on index
modified DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to allow customizable suffix and improve flexibility in generating unique ticket IDs
added a @ Deprecated annotation to SecurityConfig . java to mark the class as outdated for future removal or replacement
added @ Deprecated annotations to multiple classes to indicate that these classes are obsolete and should not be used in future development
deleted the JoglDebugAdaptor class and updated its usage in RocketFigure3d . java to eliminate unused code to streamline the project
add tostring ( ) method to extrafieldpropagation and make it easy to debug
added PendingIntent import and updated content intent assignment in FileDownloader and FileUploader classes to ensure compatibility with Android ' s PendingIntent management
refactor nextOrd method to use a private boolean method and update its implementation to improve code readability and maintainability by encapsulating logic in a separate method
refactor DateTimeFormatter class for better readability to improve maintainability and ease of understanding for future developers
removed unnecessary try - catch block for ClassNotFoundException in WToolkit . java to simplify the code for better readability and maintainability
added null and empty check for the principal in the KerberosOperationHandler to ensure that null or empty principal values do not cause KerberosAuthenticationException
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and updated width calculations for tablet and multi - panel layouts to ensure proper handling of widget widths for different device configurations
pixeldensity ( opengl ) : update the render to the sketch ' s window color
refactor Hashing class to improve hash algorithm efficiency to enhance performance and reduce memory usage during processing
update file sender factory to use getbasename instead of file . contains
added string resources for user information in UserInfoActivity and updated method signatures to include content description to enhance user interface by providing clearer context about the user information
removed null checks for the type variable in the JavaType class to streamline code by eliminating unnecessary null checks
change ACTIVITY _ START _ DELAY from 500 to 800 to reduce the maximum delay for better user experience
added a static variable WEBAPP _ HOME in SolrJettyTestBase and updated its usage in JettyWebappTest to improve maintainability by centralizing the web application path configuration
fix issue with motor selection panel , when user click on the motor , clear the motor selection before show the motor selection
added BufferUtil import and clearing method for buffer to enhance buffer management and prevent potential data loss
bug fix : use originator id for notification rule processing
ambari - 155 . change authorization to authentication in ldap configuration . ( aonishuk )
http : / / issues . apache . org / jira / browse / amq - 3872 - fix durableontransient issue with apache jms
[ hotfix ] [ test ] remove timeout assertion in bulkslotproviderimpltest
[ java ] connect to server should report error when fail to connect to remote server .
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter . java to improve code structure to enhance maintainability and readability of the code
[ sulong ] handle illegalstateexception when try to determine if a sulong member be not find .
updated schema references and modified Spring Security version references in multiple files to ensure compatibility with Spring Security 6.3 features and updates
name resolver : fix name resolution issue ( # 113 )
added conditional handling for non - empty annotations and introduced method to determine earlier position to ensure correct positioning of annotations while maintaining compatibility with existing code
add " com . sun . naming . internal . " to CheckPackageAccess . java to ensure access to internal package names
set strict to true in StaxEventItemReader to enable strict processing by default
fix bug in OfflineSorter for handling duplicate lines to improve data integrity checks during sorting and enhance code clarity
refactor ActionResetingPool class for improved clarity to enhance code maintainability and readability
added a boolean check for whether the light state is in XY mode before converting it toHSBType to ensure that only valid color modes are processed for valid light states
updated folder creation logic to target cell and adjusted drawing parameters to improve folder creation flexibility and visual consistency with different screen orientations
removed direct call to showLoadingDialog ( ) in FileOperationsHelper , FileDetailFragment , and OCFileListFragment to streamline loading dialog management by delegating it to FileDisplayActivity
added a null check for uigestureFile before loading logs to avoid potential NullPointerExceptions when accessing the file
updated method calls to use Locale . getDefault ( ) for name comparisons to ensure consistent behavior across different locales in the test cases
added methods to set listeners in XmlSuite to enhance listener management for XML processing
added a new method ` loadWithNewGlobal ` and modified several existing constants in the ` Global ` class to enhance functionality by allowing loading a new global context
added JSON serialization and deserialization methods to StarTreeIndexSpec and updated tests in TableConfigTest to improve JSON handling and ensure correct functionality of the StarTreeIndexSpec class
added import for ObjectPostProcessorConfiguration in HttpSecurity , OAuth2LoginConfigurer , and OAuth2LogoutConfigurer classes to enhance security configuration capabilities and maintain consistency across security components
replace string replacement for strings with single quotes in Android , Gwt , and FileHandle classes to improve code readability and maintain consistency in string handling across the codebase
[ drools - 6324 ] fix in operator to handle null value correctly ( # 3810 )
added commit ( ) and purgeFieldCache ( ) method to TestDistributedSearch . java to avoid FC insanity during search operations
added test case for issue # 487 : http : / / github . com / activiti / activiti / issues / 1167 / issues / 5688
- add method to resolve static call and update call site to avoid call site .
http : / / issues . apache . org / jira / browse / amq - 4213 - add option to set hash bucket for message group owned by a queue
use slotid instead of slot to represent nativeslot in the nss internal module
added a new method ` add ` in ` Layout . java ` and modified the ` startRenderering ` method in ` GdxRenderer . java ` to include alignment handling to enhance layout flexibility and improve renderer functionality
[ hotfix ] temporarily disable unalignedcheckpointitcase . testunalignedcheckpoint ( ) test
6738524 : jdk13services allow read access to system property from untrusted code
tagger : do n ' t add keyword to the map if it ' s already the same
camel - 7566 fixed the issue that splitter . exchange . keys ( collection < Processorexchangeexchange > > ) throw classcastexception
remove dead code ( dead code )
fix escape character in flavorstatsdlinebuilder ( issue # 644 )
add udp port support for jdk 1.6 . only for jdk 1.5 .
rename the class OperatorMulticast to OperationMulticast across multiple files to better reflect the functionality and improve clarity in multicast handling
increase send timeout to help prevent test failure
added a try - finally block around the assertion and resource management in the VertxTestBase class to ensure proper resource cleanup and avoid potential memory leaks during test execution
stop cache event listener registry on session destruction
# 1331 implement a test to check if jwt _ token be present in local storage
[ api ] fix ivalueutilstest compile error ( # 775 )
added a task stack listener to manage task stack animations in RecentsView to improve handling of task stack animations for better user experience
add a test case and fix a bug in defaultsplitcharacter . checkdatepattern ( )
camel - 8242 fixed the issue of camel - cxf fails to create a proxy on camel - cxf
refactored pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
add log to debug playtime crash and band aid fix for release build .
added a conditional check for BailoutOnException before throwing a RuntimeException in C1XCompilation . java to improve error handling by differentiating between compilation failures and exceptions
changed signup and passwd initializations from " / create _ account " and " / forgot _ password " to null in Links . java and updated assertions in IdentityZoneConfigurationBootstrapTests . java to handle potential null values instead of hardcoded values
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to get reservedallocations
updated the variable name from onlyFormat to format and introduced a new method getOnlyFormat to improve clarity and encapsulation of date formatting logic
[ geot - 7461 ] make sure nodatacontainer can be read from geosolutions / jaiext / geotiffreader use it for test
sulong : llvm : return ` ` < unknow > ' ' for unknown source section in error message
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java ` and ` DefaultExecutionContextSerializerTests . java ` to ensure proper object creation for string conversion
fix a race condition in the testpathchildrencache . testconnectionstatesize [ hz - 2244 ] ( # 24425 )
refactor the ArrayTypeHandler class to add null safety checks before retrieving the array to enhance robustness by preventing potential NullPointerExceptions when the array is null
8151537 : jakarta regexpcapabilities use reflection to get the prefix value
use application . class instead of null to allow for future extension of application
[ bz - 1155852 ] avoid npe on mutable global context ( # 3597 )
replaced Preconditions with TransactionUtil for asset name and description validation to enhance asset validation and provide clearer error handling for invalid inputs
trac - 567 do n ' t add parent to copypaste if it ' s already the same
improve log for offline device in lgwebos ( # 8666 )
replace node configuration methods to include provided seeds and active nodes to streamline node configuration for improved clarity and functionality
add some extra info to basetokenstreamtestcase to help diagnose failure
log4j2 - 1343 add a modulus parameter to the getnexttime method and use it for log4j2 - 3343
added methods to perform item click and find item containing text in ShadowAdapterView and ShadowListView to enhance functionality for text interaction in the adapter view
pdfbox - 3353 : avoid classcastexception a suggest by valerybokov
fix possible npe in igv , after a method that have a recursive dependency .
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and improve attribute retrieval to enhance code clarity and ensure accurate security context management in the session lifecycle
added a test method to verify the service name change in Zipkin using a manually provided name to ensure that the tracer correctly reflects custom service names in span reporting for improved observability
added logging for excluded classes and modified the spooling behavior in Java and Javac to enhance debugging capabilities and improve control over spooling to jar processing
renamed ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and updated related imports and references to improve clarity and consistency in naming and functionality
test fix : increase timeout in try - lock
added DEFAULT _ CACHE _ CAPACITY and updated return statements to include it to improve cache management and provide more flexibility in handling different cache configurations
renamed the remind checkbox to checkAtStartup and updated related UI elements to improve clarity and maintainability by using localized labels for updates
add method declarations for strong key , weak values , and factory in NodeGenerator . java to enhance type specification for better configurability and configurability
hhh - 11019 - fix incorrect istransient ( ) call in cascadingactions . delete ( .. )
added methods for retrieving and setting prototype properties and methods in ScriptObject . java to enhance flexibility and maintainability of script object manipulation
changed default read mode from heap to mmap and added logging for segment loading success to enhance performance and provide visibility into the loading process
added support for handling byte data type in ArrayTemplateBuilder to enable support for byte data types in the ArrayTemplateBuilder
added Hipchat property and its associated getter / setter methods to SamlServiceProviderProperties , and created a new configuration class for Hipchat to enable Hipchat integration in SAML service provider configuration
changed ` List < URL > ` to ` Set < URL > ` for ` commandRegistryUrls ` and updated resource retrieval logic to improve performance and ensure uniqueness of URLs in the command registry
updated warning messages in ConstraintSecurityHandler to include the current context and added debug logging to enhance clarity of uncovered HTTP methods and improve debugging information
camel - 7094 : camel - sftp - allow to only log in when authenticated
camel - 6504 : ensure that session be not transact if a transaction manager be lazy create or lazy create .
api : fix npe in vmwareresource . java ( # 3702 )
updated method implementations in Timers . java to improve performance and maintainability of the code
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to ensure consistency in naming conventions for zip output handling
remove deprecate / non - static final string in order to keep old source code intact
removed the Map < Object , Object > from the ScriptObject class and updated related assertions in ContextTest to simplify the class hierarchy and improve readability by reducing unnecessary complexity
rename EventBusMetrics for consistency to improve clarity and maintainability of event handling logic
[ ds - 3952 ] always use i18nutil . getepersonlocale ( ) for euser .
replaced @ PostConstruct with @ InitializingBean and removed the @ PostConstruct annotation to enhance bean initialization for better compatibility with Spring framework
removed null check around inserting a type into _ pgNameToSQLType to simplifies the code and simplifies the insertion of type information
added Server instances to multiple handler instances in ScopedHandlerTest . java to ensure consistent server configuration across different handler instances
fix calltimeoutexception bug ; call timeouts should not increment retry count and should not be delegate to caller .
added a check for an empty password in the RestLoginProcessingFilter to handle cases where the password may not be provided
change permission check from ` Objects . equals ` to ` * ` in ` CommandMap . java ` to ensure that only wildcard permission nodes are evaluated for permission nodes
rename variable and method related to encoding from ` encoding ` to ` sourceCharset ` in AbstractCompiler and ICompiler classes to improve clarity and consistency in naming conventions regarding character encoding handling
change postLogin method return type from byte array to String in HostBean and TerminalBridge classes to facilitate more flexible handling of post login data types
[ fix ] generaloptimizer : do not copy the rocket
camel - 15836 : camel - core - optimize . allow to turn off context reload by default .
updated log4j configuration in CommonTestUtils . java to use different log levels and configurations to standardize logging setup and improve clarity in console output
[ java ] fix javadoc for log size sanity check
renamed NearbyListFragment . java to improve clarity to enhance code readability and maintainability
added a check for non - marked input streams before invoking invokeSafely to ensure proper handling of non - marked input streams
fix # 4177 : do n ' t allow to use the embedded setting ( # 4177 )
fix ` ` move ' ' command not work due to not use entityentity . getcomponent ( )
refactor RandomLoadBalancer to include a half - length total weight parameter to improve weight generation logic for better performance and resource management
updated ` GsonParser ` to simplify cache string handling and modified test method names for clarity to enhance code readability and ensure correct validation of timestamp values
added comments to clarify the sorting behavior of the GCMdir in ApacheHttpClientMediaWikiApi to improve code readability and maintainability by providing context for the sorting properties
replace the call to checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) in multiple classes to improve clarity and consistency in handling transaction synchronization status
pipe : remove the lock from pipetaskcoordinator to avoid lock contention issue ( # 11524 )
updated version retrieval logic based on the " usePreinstrumentedJars " system property to ensure compatibility with different Robolectric environments based on the system property
changed the condition from " if ( ! isSilent ) " to " if ( isSilent ) " in ExecDriver . java to correct the logic to check for silent execution
added validation checks for default and required attributes on dynamic fields in IndexSchema . java and created a new test case in BadIndexSchemaTest . java to ensure proper error handling for invalid dynamic fields and enhance test coverage for schema validation
remove unneeded randomness from read repair logic
replaced ImmutableSortedSet with Iterables for adding includeRoots and added a test for including directories in PrebuiltCxxLibrary to improve code clarity and ensure correct behavior when adding system include roots
refactor ` AdaptableX509CertSelector ` by initializing start and end dates without default values and introducing flags for sensitivity to enhance clarity and control over sensitive key identifiers and serial numbers
no effective change - simplify buffer size parse in nosqlappender
add @ Deprecated annotation to GuiScreenEvent . java to mark GuiScreenEvent as obsolete for compatibility with version 1.16
removed methods to add and remove categories from CategoryEditSearchRecyclerViewAdapter to streamline category management functionality in the RecyclerViewAdapter
# 627 - enh : add cachetype to ebean cache factory - add getloaded ( ) and getdata ( ) to ebean cache
updated the structure of the RocketComponent to update child properties for mass , CGOverriddenBy to improve clarity and maintainability of the component inheritance logic
- javabuilderservice should clean up cache when the compiler service be destroy .
refactor Task implementation to use a Supplier for better lazy initialization to improve code readability and reduce boilerplate code
fix findbugs npe and make wanreplicationserviceimpl thread - safe
added null checks before returning paths in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to ensure safe handling of null values and improve driver instantiation clarity
[ scb - 2370 ] remote service registry : remove rejectedexecutionhandler and use lambda expression ( # 2373 )
added a new test class FilesTest for testing file deletion behavior to ensure proper functionality of file system operations under various conditions
remove unnecessary try / catch block that be cause socketadaptor to throw exception .
update the class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to ensure proper identification of logger instances in the context of logging
refactor working directory handling logic in Project . java to improve clarity and maintainability of the code by using a dedicated method for adding working directories
added a null check for ` cn ` in ` ItemInfo . java ` and set ` mInsets ` in ` Workspace . java ` to ensure safe handling of null values and maintain proper layout adjustments
changed the access modifier of the String constant from public to private to restricts access to the String constant for better encapsulation
removed the URL reference from the Java - Dtype assignment in SimplePostTool . java to streamline the configuration for better clarity and maintainability
apps - 2184 remove infinite recursion from getsymbolicdiffers ( )
refactor exception handling in JavaxWebSocketClientContainerProvider to improve clarity and ensure proper registration and deregistration of the client container
modify conditional check to allow for a null type case to ensure both type is not null and open with application is present , improving logic accuracy
fix resource leak in unit test . ensure the webapplication be clean up on teardown .
added a method to retrieve a search string from the request URI and modified the HTML structure for better resource management to enhance user experience by allowing dynamic search results from the requests
removed the visibility of the neutral button in SetupEncryptionDialogFragment to allow users to hide the neutral button for better user experience
update itemserviceimpl to just count items withdrawn , and also include archived item in deletion result
updated the construction of createTab _ stmt string concatenation to include quotes around table names and columns to ensure correct SQL syntax for proper execution of database schema definitions
add oauth2 error reporting to CheckTokenEndpoint to improve error reporting and debugging capabilities
refactor multiple Java classes related to series painting to improve code organization and facilitate better maintainability
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to improve test structure and correctness by using the appropriate API for identity zones
updated tooltip delay settings and added new tooltip text for better clarity in SQL console to improve user experience by providing more informative tooltip descriptions and enhance code readability
update actionproviderimpl to support junit 5 . use it instead of the old version .
changed exception handling from ` Exception ` to ` RuntimeException ` in ` WorkerShellStep . java ` to provide a more general runtime exception for io issues during process execution
[ flink - 6701 ] [ datastream ] change the flink annotation from publicevolving to @ experimental
add a warning on streamcepstrumsource . getstreamcepstrum ( ) which show up in case of failure .
fix arrayindexoutofboundsexception in list . removeifabsent ( ) .
updated assertions in CloneHelperTest to reference Parenthesis instead of OrExpression to ensure correct type validation for the Parenthesis class in tests
modified DebugPaste class to include confirmation and required type requirements to enhance user experience by ensuring confirmation is always required
( chore ) camel - management : avoid redundant call to get ( ) in configuration
ticket # 4810 : further preparation before the fix , a suggest by michael klink
updated imports and method signatures in GoBinaryDescription . java for better consistency and compatibility to improve code maintainability and leverage immutability for better immutability support
added a check for the presence of " application . env " in the classpath and updated logging logic to improve configuration handling and ensure proper logging setup based on application environment
resolved - issue batch - 1036 : replace retrylistenersupport with interface
fix reporting of metric in elastic registry ( issue # 498 )
fix bug where author and email be never set ( regression since 3.14 . 1 )
replaced a loop with a do - while loop that processes a period after the length to improve readability and ensure all output format is appended correctly
refactor the handling of the " elements " field to ensure it is instantiated as a LinkedList to improve type safety and prevent potential ClassCastException at runtime
improve error message in ` StaxEventItemReader ` to include URL details to enhance clarity of exceptions by providing more context on resource validity issues
* fixed testmultiregiontarget so it work for more than one light .
added null check for currentProfile and improved client retrieval logic to handle potential null values gracefully and provide informative logging when the current client cannot be found at the all
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
added BigInteger construction for cryptographic operations in KeyStoreManager . java to enhance security by supporting additional cryptographic operations
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` MeshCollisionShape . java ` to utilize the new method for retrieving indices as a list in the mesh
change ` ` activiti - 5 ' ' engine version in bpmnDeployer ( # 4022 )
updated property names for resource loader properties in SpecificCompiler . java to improve clarity and consistency in naming conventions
add a new method to verify thread attachment in centrypointsnippets .
modify GenericUDFMapValues to handle null maps and ensure correct addition of values to improve robustness and prevent potential NullPointerExceptions
corrected a typo in the method name from " interceptors " to " handlerInterceptors " to ensure consistency in method naming across the codebase
add config option to set the oil spouts generation rate and updated the generator accordingly to allow for configurable spouts generation and enhance configurability in the game
added cleaning mechanism in ImportContext and updated job queue files to check for the existence of the . clean - me directory to ensure that the directory is eligible for setting up resources and improve resource management
make memoryrealm error message a little easy to understand
updated import statements in CRLDistributionPointRevocationCheckerTests . java to streamline imports for clarity and maintainability
updated the EXTID _ ZIP64 and EXTID _ NTFS constants in ZipConstants . java and added an import statement in ZipEntry . java to ensure proper handling of ZIP extensions and improve code organization
refactor ZipFileSystemProvider to enhance file existence checks and improve exception handling to enhance reliability and maintainability of file operations and error management
bugfix # 162994 - do not use preferred size of conditional label in ifcontrollerpanel .
added miss ` @ override ` annotation to fix build .
added Gson @ SerializedName annotations for several fields in ServiceOsSpecific . java to enable better serialization and deserialization of JSON data in the ServiceOsSpecific class
fix crash when delete a non - existent book in the system .
fix javadoc issue with the ` @ dataprovider ` annotation
corrected the calculation of the buffer length in AbstractAjpProcessor . java to ensure correct handling of message lengths during processing
- fix a bug where the admin console be not properly shut down and the context be n ' t be destroy .
refactor unregisterHandlers method to directly register messages for clarity to improve code readability and maintainability by reducing unnecessary method calls
added configuration properties for device ID transformation methods and enabling ID tables to ensure proper configuration during initialization
reduced the number of documents in the test from 2000 to 100 and added a new DelayingSearchComponent class to enhance test performance and accommodate new search functionality
corrected a typo in the condition for mocking TSP to ensure proper error handling when the token token is not present
fix transaction . hashforwitness ( ) to work with updated bloom filter .
updated the expression to include both ` fieldType ` and ` fieldType ` to support additional schema types in queries
added null completer checks to the Completers class and created a new OptionCompleterTest class to ensure proper handling of null values and add tests for option completer functionality
fixed checkstyle issue due to commit 0b6a0a0a0a0a0a0a0a0a0a0a0a0
change data type of sourcePeerId from String to int in multiple classes to accommodate larger peer IDs for better data handling
refactor FtpHelper to introduce a new UploadFile method and streamline file handling to improve code organization and enhance clarity in file upload process
removed unused imports and added alpha settings for replyButton in TweetFragment . java to streamline the code and improve UI responsiveness
fix flaky test in accesslogsupportstest due to improvements in datetime handling
make file marycachetest . marycachefile tmp / testfiles - deleteme available
remove null check and unnecessary null usage in settingimpl . subscribers ( )
added a null check for marshaller in AbstractSamlObjectBuilder and removed initialization checks for XMLObjectProviderRegistrySupport to improve error handling by throwing an IllegalArgumentException when marshaller is not provided for object initialization
replaced printStackTrace ( ) method calls with LogUtil . warn ( t ) for better error handling to improve error logging and provide more informative logging output
modified the check for static directory inclusion in development mode and added a new test for handling non - existent static directory in dev mode to enhance the reliability of the AssetsController and ensure correct behavior when serving static files in development mode
[ hotfix ] rocksdbkeyedstatebackend should pass writeoptions to db operation
changed the default format from " value - tag - index " to " value - index " to align with the updated naming convention for better clarity
fix dijkstrabi hint in some apps
feat ( native ) : enable native dependency by default
rename DuclsSandboxTest to SandboxTest for consistency to ensure uniformity in class naming and improve code readability
( chore ) camel - cxf : do n ' t log stack trace
make the return value of the method public to allow wider access
updated SQL query to include additional parameters of 20ms to improve query performance and resource management
[ mng - 5343 ] warn user about file not support during profile activation
refactor Style class for improved readability to enhance maintainability and ease of understanding
added Zoom functionality to handle back key events in ShareActivity to enhance user experience by allowing zoom navigation through zoom option
added conditional logic to skip hidden fields for deprecated fields to improve code clarity by preventing unnecessary processing of deprecated fields
added animation listeners for slide _ in _ left and slide _ out _ right in LauncherFragment . java to enhance user experience by improving visual feedback based on floatingCompose visibility
[ hotfix ] fix checkstyle violation in yarn / yarnutils
added Progressable parameter to multiple method signatures and updated output stream handling to enable progress tracking during file operations
fix checkstyle issue for ` ` coordinator executor thread ' '
remove an contribution and update panel ordering and colors in the ContributionListPanel to ensure the contribution panel is updated correctly and maintain visual consistency
renamed ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and adjusted the corresponding conditional checks to fix a typo in the class name and ensure proper validation logic
added a default value for dPath if it is empty to ensure the application uses the user ' s current directory as a fallback
defaultaudiosink : use a minimum sampling value when the sample rate be not specify .
log4j2 - 1343 : fix multiple findbugs warning in mapfilter .
refactor VerificationInOrderWithCallsTest . java to improve test coverage to enhance reliability of test scenarios
[ fix ] quaternion . getfromaxis return wrong y axis in case of rotation .
corrected the spelling of " colelction . delim " to " collection . delim " to ensure consistency and accuracy in the representation of collection data
curator - 688 . add a unit test to make sure that a listener be connect at the start of the first run .
fix # 5255 do not show generic type of interface
refactor one - handed mode support handling in RecentsAnimationDeviceState . java to improve code clarity and maintainability by consolidating property retrieval
added onDetachedFromWindow method to manage task cancellation in AppsCustomizePagedView to ensure that tasks are properly removed from the window when detached
add dictionary resource support to the MorfologikAnalyzer and MorfologikFilter to enhance functionality by allowing custom dictionary resources for Polish language processing
removed count and exception handling variables in ResultSetTest . java to streamline exception handling logic for improved clarity and maintainability
changed the placeholder in the InitializeProjectMessage message from " debug " to an empty string to standardize the placeholder format for better clarity
[ phenomena ] add mvcc anomaly detection and update locking ( # 1358 )
refactor tooltip text handling in ComponentTreeRenderer to improve code clarity and maintainability by consolidating tooltip text logic
increase await timeout in zipkinstreamtests from 5 seconds to 10 seconds to allow more time for the zipkin server to become available during tests
- add deviantart a a username , password , and set a default value in the cookie if none be provide
refactor Google package signature handling by replacing the KNOWN _ GOOGLE _ SIGNATURES array with constants for better readability and maintainability to streamline the algorithm and reduce redundancy in package signature management
create solutionBusiness before use in test to avoid possible deadlock .
add a method to notify window state changes in WWindowPeer . java to improve event handling for window state transitions and enhance logging
added email description to response and update detection description in TestEntityGroupKeyEmailContentFormatter to enhance user experience by providing context about the email description
fix error in userdata . remove ( ) due to lack of synchronization
modified language retrieval logic in Locale . java and added error handling in LocaleTest . java to improve accuracy of language code retrieval and ensure correct locale handling
refactor the creation of ChangeLogParser to use a dedicated method for creating UpdateVisitor to improve code readability and maintainability by centralizing the creation logic
added a check to return early if screen pinning is active to improve performance by avoiding unnecessary processing when a screen is pinned
added functionality for setting and displaying a text when no chart data is available to improve user experience by providing guidance when no chart data is available
added synchronization to check if the response head has been sent in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety and prevent IllegalStateExceptions when attempting to access shared resources
refactor chunked input handling to use a separate chunkHandler method to improve code readability and maintainability by reducing duplication
updated header settings and test methods in Http2TestBase and TestHttp2Section _ 8 _ 1 to ensure proper handling of HTTP headers and improve test coverage
fixed - rlocalcachedmap . getkeyset and rlocalcachedmap . getvalues do n ' t work in localcachemode . # 5796
camel - 8569 fixed the npe issue of camel - jpa with thanks to mark .
- rename ` ` fall ' ' to ` ` jump ' ' ( no functionality change )
added a condition to check if reparsedFunction is null alongside the existing syntax extensions check to ensure the function is only processed when reparsedFunction is not set
refactor logging variable names and introduce new order book creation methods in BitstampPusherService . java to enhance code clarity and maintainability by using consistent naming conventions and improving order book handling
added deprecated methods for retrieving old upload segment URIs in FileUploadDownloadClient . java to align with updated API requirements for URI handling
updated the method call to findOne in MongoDbTailTrackingManager to include a filter parameter to ensure that the correct record is retrieved based on the specified filter
add test to validate that the predicate in juel be not empty .
added alpha bound to RecentsView ' s alpha to ensure the value is within the valid range of 0 to 1
updated regex in ManifestReversion . java to format the version string correctly to ensure proper formatting of the import package version string
refactor DataSyncConfiguration class for improved clarity to enhance maintainability and reduce technical debt
added import for JavaSnippetRepository and initialized it to initialize the snippet repository for proper functionality
modified the matching and updating logic for timeBuckets in StarTreeRecordStoreCircularBufferImpl . java to ensure that the update logic correctly handles cases where dimensions do not match
danielwagnerhall : update to point to the new googleapis page .
camel - 9014 : prepared statement in camel - pgevent should use prepared statement . thanks to kirill dubovikov for the patch .
fix for tika - 1435 : upgrade rome to 1.5 contribute by johannes mockenhaupt < git @ jotomo . de > . this close # 16 .
update transfer completion handler to correctly set the Content - Length header for the transfer adapter to ensure accurate tracking of request length for improved performance
modified the Dialog class to enhance user interface responsiveness to improve user experience by providing smoother interface updates
updated the constructor of EnhancedRuntimeException to include additional parameters to improve exception handling flexibility and maintainability
[ log4j2 - 1343 ] improved test stability of socketappender
camel - 14263 : camel - core - do not import eventadminendpointbuilderbuilder . thanks to tracy snell for the patch .
updated method parameters and exception handling in ByteArray . java to improve error handling and maintain compatibility with potential exceptions
added a method to disable input proxy and log warnings for invalid touch events in RecentsAnimationWrapper . java to improve input handling and prevent UI issues during touch interactions
camel - 6770 : re - enable restlet domain test ( # 8905 )
removed the currentIdx parameter from the resizeAndRehashIfNeeded method to simplify method signature by eliminating unnecessary parameters
move modulepathtest to test package instead of test package
add sourcedirs to javabuilder . getcompiler and javabuilder . getcompiler method .
removed conditional logic for menu item visibility in TweetPager . java to simplify menu management by removing unnecessary visibility checks
rename methods and variables related to node ancestor checks in AncestorDescendantTests and Node classes to improve clarity and consistency in naming conventions
make sure we have a worldeditplayer . gety ( ) return negative value to avoid a crash .
updated methods in InsertNode to include PathNotExistException and improved data type handling to enhance error handling for non - existent paths during data insertion
removed extraneous quotation marks from the end of a method to correct syntax and ensure proper compilation
[ flink - 25958 ] [ runtime ] fix mailboxexecutor be not set when create mailbox executor in streamoperatorfactory
hbase - 27411 [ accesscontroller ] add tablestate getters and fixmeta method to client ( # 469 )
updated the mapping method for retrieving meter IDs in GatewayMetricFilterTests to enhance code readability and maintain consistency in method references
bugfix : run blockjunit4classrunner on the class instead of theories
use ` lastTimedata ` instead of ` remoteItems ` when delete items to ensure consistency in data handling during the delete operation
update calculation for allAppsCellWidthPx by modifying the formula to ensure proper alignment of cells based on their padding
[ flink - 15637 ] [ core ] move all logging package to flink - core in coreoptions . java
lucene - 7751 : fix booleanscorer2 to use ' this ' instead of ' doc ( ) '
added a forceMerge call to the writer in TestMultiPhraseEnum . java to optimize the merging process for better performance
hhh - 13066 do n ' t return null when close ( ) return null
modified the GetLocations class to improve location management functionality to enhance user experience by providing better location - related information
avro - 1167 . java : fix printing of stacktraces to stderr in schemavalidatortask . contribute by rodrigo peinado .
updated exception handling to ignore IOException instead of throwing UncheckedIOException to improve error handling by focusing on a specific exception for non - io exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
ruby flavor : fix pattern match issue
changed logging level from warning to debug in DerbyDatabase and added null checks for username and password before putting them in BaseLiquibaseTask to improve logging granularity and prevent potential NullPointerExceptions
remove unused switch ( and control ) the use of cache for nio and nio2
updated CasGeoLocationConfiguration to use CasConfigurationProperties directly instead of MaxmindProperties to streamline the configuration process and eliminate potential null pointer exceptions
update test file to reflect new state of instructor result page
phoenix - 4769 : avoid qualifier list optimization for raw table ( addendum )
removed public access modifier from method declarations in ApprovalStore . java and ApprovalsControllerService . java to enforce package - private access level for better encapsulation
added a check to cancel download notifications if the download has started to improve user experience by removing unnecessary notifications
replaced the open view check with a dedicated method for retrieving any views to enhance clarity and functionality of floating view management in the code
updated version from " 1.0 . 11 " to " 1.0 . 13 " and adjusted the right label in JFreeChartResources . java to reflect the latest release version and improve clarity in the displayed text
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper usage of the Thread class for asynchronous operations
updated GsonBuilder class for improved JSON handling to enhance performance and maintainability of JSON parsing
theorem proving : fix nullpointerexceptions if ' centergeo ' be null
add espressohome option and remove option for truffle ( graalvm ) .
doc : fix javadoc regard get / set method ( # 1897 )
migrate deletesession action to use ' setmaxinactiveinterval ' instead of ' getdeletesession '
rename ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to fix a typo in exception class name
updated error handling in JoinQParserPlugin and modified SortedIntDocSet initialization in SolrIndexSearcher to improve error reporting and ensure correct handling of edge cases
modified the triggerMediaScan method to include an additional parameter to ensure that the method triggers the correct media scan for a newly created file
removed verbosity control for posting test results in TestRunning . java to simplify code and improve readability by directly posting test results
updated custom G - code settings for custom values in MainWindow . java to ensure consistent customization of G - code settings
camel - Additionaljaxb : fix encode issue with jaxb output .
refactor JsonElement class to improve structure and readability to enhance maintainability and facilitate future updates
added exception handling for unsetting the sys property in TestBadConfig . java to enhance test reliability by managing exceptions during tests
added a method to remove a fragment and action bar in GpsMainActivity to ensure proper handling of fragment changes when closing the action bar
fix broken test by add miss parenthesis
updated range handling in RemoteMediaHandler and RemoteRawHandler to improve consistency and correctness to enhance handling of null ranges and ensure proper content type management
updated G - Code Sender file path and modified G - Code ViewParse regex patterns to improve file naming clarity and enhance matching functionality for G - code rendering
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwardsCompatibility . java to ensure compatibility with the latest versions of the software
adjusted formatting of the assertion statements in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency in formatting
fix ( sql ) : if the query have no output stage , close exchange client
fix # 1260 integrity check do not work with local file
removed unused SolrClient import and associated field from ChaosMonkey . java to clean up code and improve maintainability
fix possible npe if fas be null .
removed unnecessary line breaks in the NestedRepositoryTreePanel class to improve code readability and maintainability
made the constructor of the ` ExtensionTypeHeader ` public and added a validation check for the ` type ` parameter to allow external access and ensure the ` type ` parameter is within acceptable limits
pdfbox - 2370 : do n ' t swallow ioexception when generate appearance
set deleteonshutdown property to true for pushonshutdown
updated ` ReactiveStateMachineExecutor ` to utilize ` MonoSinkStateMachineExecutorCallback ` and added error handling for trigger operations to improve error management and provide better error logging
added a new test method to verify that multiple Python executables on the first path are set to ensure correct functionality of Python executable settings in the configuration
added a default button to the root pane in InitialAccountRegistrationFrame to enhance user interface by allowing dynamic button assignment
added a new configuration parameter for dynamic semi - join reduction in Hive and Tez to improve performance by optimizing the semi - join optimization for map - joins
add exception to log when wrong password info send
move reflection class to util package ( move to util instead of reflection )
added a method to list JWT claims in OidcIdTokenClaimCollector and created corresponding test cases to enhance functionality for handling JWT claims in the OIDC framework
remove unused center variable ( should be remove by mistake )
simplified the conditional check for the pcollection in RegisterAndProcessBundleOperation . java to enhance code readability by removing unnecessary parentheses
updated SslContextFactory configuration parameters to enhance security and compatibility with latest SSL / TLS standards
[ hotfix ] [ configuration ] remove unnecessary ignore in configurationproperties .
update access confirmation return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more specific error handling related to access violations
fix # 5042 : filter out the default classloader ( # 5043 )
added a new parameter ` copyRowHeight ` and ` resetRowHeight ` to the ` shiftRows ` method and modified its implementation to allow for dynamic row height adjustment during row resizing
change icon assignment from `RolloverIcon ` to `RolloverPressedIcon ` to ensure proper handling of pressed icons in the font configuration
updated grid translation handling in TaskViewSimulator and related classes to improve grid positioning consistency across different task states
assertion # bylessthan : fix javadoc warning
added null check for currentDateTimeFunction in multiple database classes to ensure that a valid function is returned when currentDateTimeFunction is not null
added an anonymous path method to IOUtils and updated Log4jUtils to use it for generating paths to improve file path handling and ensure consistency in file path formatting
updated the ` call ` method to include an additional parameter for content description and modified the callback to include this value to enhance functionality by providing context for task descriptions while maintaining existing functionality
[ java ] reduce wait time of catalogtracker . getmetaserverconnection ( true ) to 50 second .
rename LineNumberTagAggregator and TestDominance classes for consistency to improve code readability and maintainability
change item to return the default value in case of change in item ( # 1738 )
added integration provider support and a test for fetching PostDTO in BidirectionalOneToOneNPlusOneTest to enhance data retrieval capabilities and ensure proper integration of post data in Hibernate
fix issue where extra page would scroll to first when workspacescreens become empty . ( bug 6452288 )
replaced HashMap and HashSet operations with constructor parameters in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to optimize memory usage and improve code readability by reducing unnecessary addAll operation
changed string delimiters from single quotes to double quotes in MessageFormat in GoogleLineChart and GooglePieChart classes to ensure consistency in string formatting across the codebase
fix for http : / / issues . apache . org / jira / browse / amq - 3872 - prevent outofmemoryerror in sendingsenderor
hbase - 23367 [ walprettyprinter ] add a position property to walprettyprinter . ( # 804 )
updated the parameter in TestNettyTransceiverWhenFailsToConnect from 1 to 0 to enable the connection to the server immediately
modified SimpleReport to sort events before generating the report to ensure the report is sorted by start time for better readability
add a test method to verify double quote handling in CSVFileLogger to ensure proper formatting of CSV descriptions containing double quotes
minor change to fix the benchmark itest and make the test work again .
of - 1809 : do n ' t send iq message if the server be remote .
removed the @ JniImpl annotation from VM . java to eliminate unnecessary dependencies and streamline the code
updated calculations for the last variable and changed configuration keys for configuration in Fetcher2 . java to improve code clarity and ensure consistent use of protocol constants
added a condition to check if the media ' s HDR format is not null and removed several debug print statements to ensure proper handling of media formats and clean up console output
fix ` asttests ` to work with new package name
fix : allow for change worldborder ' s dameter ( # 4198 )
hbase - 27451 addendum add getwalgroupsreplicationstatus ( ) method to avoid npe if not on the master
ggb - 2331 remove the call to the getlogin ( ) method from the web view when check for open , and make sure it be call again .
refactor instance configuration generation in RoutingTableTest to use a new method for generating instance configurations to improve code clarity and maintainability by consolidating instance configuration logic
changed the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
o add test to make sure that there be also a reference to a mavenproject
simplified the condition for equality checks in PropertyMap . java to improve code readability and maintainability by reducing complexity
updated method signatures to accept nullable controllerId and adjusted related logic to improve clarity and flexibility in retrieving controller IDs based on configuration
replace sessionFactory . close ( ) with session . close ( ) to ensure proper resource management and avoid potential memory leaks
removed the condition checking for refresh token in the OidcConsentApprovalViewResolver to streamline the refresh process when the refresh token is being generated
remove debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced a lambda expression with a NoopGetter enum in BaggagePropagation . java to simplify the extractor retrieval process by using a singleton pattern
[ hotfix ] [ test ] fix some typo in conditionalonenabledresourcechain
added a condition to check if the tree root contains child nodes before proceeding to ensure proper handling of child relationships in the tree structure
pdfbox - 2852 : fix call to deprecate method
updated session logging messages and enhanced session status handling in FacebookImpl . java to improve clarity of log messages and ensure proper execution flow during login and permission handling
replaced hardcoded return values with return skeleton in ShadowICU . java and updated test cases in ShadowICUTest . java to improve code clarity and ensure proper functionality of date picker handling
removed the usage of KeyguardManager in the TouchInteractionService class to simplify the condition check for device status updates
cloudstack - 8883 : get the disk offering with null value , and set the default disk offering id only if it be not null
replaced FileChannel with AsynchronousFileChannel for improved efficiency to enhance performance by reducing object overhead during file operations
removed unnecessary whitespace in the SigInt and SigIntTest classes to improve code readability and maintainability
rename method and parameter to prepare bounding box size ( refactoring )
change return value from - 1 to 0 in Asset . java to correct the method ' s return value to reflect zero functionality
benchmarker : use static final function to reduce allocation .
added setOnRefreshListener method to UploadListFragment to notifyDataSetChanged when the upload list updates
pin file handle in context to avoid npe . fix # 737
replaced direct access to emitters with direct access methods in ParticleEffect . java to improve code readability and maintain encapsulation by using direct access to emitters
improve tomcat . gethost api to allow injection of service container . patch by jbellis
updated error message formatting in BuildRuleFactoryParams and Console classes to enhance readability and maintain consistency in error reporting
added a check to return early if playback state is not PLAYING to improve performance by avoiding unnecessary processing when not in PLAYING
replaced the use of ` ServiceComponentDesiredStateEntityPK ` with a direct call to ` findById ( 0L ) ` to simplify the code and improve readability by removing unnecessary dependencies
added a new class ` InnerClassFieldClash ` and modified the logic for determining the presence of inner classes in the ` Java2TypeScriptTranslator ` to fix error handling related to inner class fields in structural contexts
add option to turn off log / redirect .
replaced direct call to displayChanged with awtUnlock and awtLock for better resource management to ensure thread safety and prevent potential deadlocks during display changes
hhh - 10183 add test for sql server 2008 and remove skip for hibernate - 10183
properly close input stream in ziphelper . verifyzipheader ( ) , a this seem to be a bad idea of what be happen .
changed visibility of storeClassFile method from private to public to allow access to the method from outside the class
updated SingletonSortedSetDocValues . java to allow for handling missing values without a check , and added a new test class TestSortedSetDocValues . java to enhance test coverage for handling missing values and improve validation logic
updated error messages in CGIHandler and added JavaVMCallbackHandler for handling runnable tasks to improve clarity of error messages and enhance flexibility in starting Java virtual machines
added additional newline character checks in LineReaderImpl . java to handle specific line endings to improve parsing accuracy for multi - line input
change data structures of ` multiFetchSourceFiles ` and ` createFetchSourceFilesRequest ` from ` List ` to ` Set ` to enhance the flexibility of handling multiple hashes in the data structure
oglesshaderrenderer : do n ' t attempt to render if no vertex configure for a mesh
renamed the method ` shouldUseArgumentTypeWhenOverloadingPuzzleDetectedByVerificationInOrder ` to ` shouldPrintNameOnVerificationInOrderError ` and introduced new test methods in ` IncorectBindingPuzzleFixedTest ` to enhance clarity of test purpose and ensure proper exception handling during verification
fix for file not be delete when create a folder
javadoc : remove unused import , no logical change
updated JsonObject class to improve data handling to enhance performance and maintainability of JSON operations
updated condition in SelectChannelEndPoint . java and modified idle time check in HttpConnection . java to ensure correct idle time handling and improve resource management logic
fix farmland block allow for plant without have a block . close # 4471
added a new table SALTEDTABLE123 and updated queries in QueryDatabaseMetaDataIT . java and UpgradeUtil . java to enhance database metadata handling and improve index management
updated SimpleDateFormat instantiation to use Locale . US and added a new B6791927 class for testing cookie expiration date validation to ensure consistent date formatting across different locales and validate cookie expiration behavior
removed multiple redundant calls to close the database connection if it is not null to improve resource management and prevent potential memory leaks
increase poll timeout in batchmessagelistenercontainerintegrationtests to avoid spurious failure
[ gr - 29138 ] elconomy : append trace register phase when tracera be enable .
fix issue with save key not work in jabref gui ( # 4029 )
refactor ObjectMapper initialization to use a static block and set system property for line separator to ensure consistent line separation across different operating systems
fix change of window path into ' / ' in nativerepository
refactor Application references and add initialization in multiple test classes to streamline application management and ensure proper resource cleanup during tests
[ java ] remove redundant validation of record log .
chore : update java and python dependency ( # 98 )
mvstore : disable travis test until ci url fix apply
removed shared preferences for reverse image management in CameraManager to streamline the process of retrieving the reverse image preference
fix broken build when use java 8
[ mdm - 820 ] fix mdmmatchlinkservicetest and enable some test ( # 6642 )
updated JUnit test imports and modified method visibility in AuthenticationSuccessListenerTests . java to migrate tests to JUnit 5 features and improve encapsulation
return - 1 instead of try to create a new array for settypes ( we ca n ' t use new . arraylist ( ) )
refactor methods in TypeUtil for improved readability to enhance maintainability and reduce complexity in the codebase
[ te ] alert notification : use ` LocalDateTime . ofinstant ( ) ` over ` java . time `
added a method to handle the creation of AbstractMethodError in MethodHandleResolver to improve error handling by throwing an AbstractMethodError when necessary
camel - 11298 : camel - core - avoid illegalargumentexception when validate simple expression a a body .
remove dead code in abstractparser # fromexplore ( ) , it ' s superfluous .
camel - jclouds : copy input stream to avoid leak
camel - 13553 : remove @ ignore in camelconsultest . thanks to karuturi karlsen for the patch .
modified the condition to include the default access flag in the Check . java file and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java to ensure correct handling of default methods and verify access permissions for default methods
[ java ] use driver timeout in channelvalidationtest to avoid time issue on slow machine .
added a new file ` FileExtensions . java ` that includes various file extensions to provide centralized list of source and header names for better maintainability
updated DateFormatUtil to use ThreadLocal for thread - local formatting to improve thread safety and simplify initialization of DateFormat instances
8179106 : [ testbug ] remove deprecate test in vmtestbase / nsk / jvmti / client / vmti / cgroupmemorylimitforheap
added display name property and updated client identity provider configuration to allow customization of display names for better user experience
added EarlyTerminationException to multiple operator classes to handle early termination errors consistently across operators
removed unnecessary whitespace in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
updated response handling in HttpBindServlet and HttpConnection to utilize the consumeResponse method to improve resource management by ensuring proper response consumption for connections
fix a nullpointerexception when create a capability dispatcher for another peer ( # 6372 )
wallettool : remove keycrypterexception from catch ( )
go back to old name completion service for now a it be deprecate .
[ netbeans - 1087 ] fix handling of Hyphenation tree initializers by adjusting the length before create a new one
added sleep to give the registration process enough time to complete before proceed .
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue # 250
updated the descriptions of the PARAMETER _ NEEDS _ TO _ BE _ NAMED constant in ParameterBinder . java to clarify the distinction between Java 8 and Java 8 for named parameters handling
make sure we do n ' t recreate provider if nothing be change .
added a method to quote tokens in the SemanticAnalyzer to ensure proper handling of quoted identifiers in token replacements
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated type safety and suppress warnings in SolrResourceLoader . java to improve code clarity and ensure proper type safety during class lookup
modify condition in Window . java to include a loop that retrieves the current parent when the hit is not null to improve the accuracy of the event handling within the window ' s boundaries
added null check for appManifest before accessing its targetSdkVersion method to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator to use a new method and streamline code for improved clarity and efficiency to enhance maintainability and reduce complexity in the codebase
hive - 2748 : user name need to be set on the driver ( daniel dai , review by thejas nair )
added setter methods for transformer sources in XsltBuilder to enhance flexibility in configuring transformer sources
added HadoopShim support to ContainerRunnerImpl and TaskRunnerCallable classes to enable integration with Hadoop shim for improved performance optimization
updated expectedFileSize calculation and improved URI parsing in Shadow tests to ensure correct file size handling and simplify code for better readability
fix nullpointerexception if no context can be find ( e . g . cooky )
[ log4j2 - 2999 ] fix bug in throughputlogger ( # 4j2 - 2999 )
8180551 : java / lang / invoke / compilerconfigwarning . java fail to intermittently due to java . vm . version in diagnostic mode
refactor DefaultLogPublisher to use a dedicated Map for MeterDetailStatisticsModel to improve code organization and maintainability by centralizing the statistics model mapping
[ java ] change logback configuration to allow user to override the logback . configurationfile system property .
added NotNull annotations to method parameters and updated class names for consistency to enhance code robustness and clarity in cookie value management
replace ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in multiple files to ensure compatibility with different operating systems
[ beam - 8470 ] fix flaky test in httpwaitstraptest due to race condition in container creation .
lucene - 6271 : rename testlucene50fieldinfoformat to testlucene60fieldinfoformat
updated formatting in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to enable tracking of shield addresses through the wallet
change return type of readConsoleInput from byte array to String and update related method calls to improve handling of character encoding and enhance code clarity
updated regex patterns and changed run flavor variable from PLATFORM _ PRESUBMIT to PLATFORM _ PRESUBMIT to improve accuracy in matching platform and presubmit configurations
updated DefaultSolrHighlighter to adjust fragment count and modified highlighting tests to ensure correct handling of multi - valued fields and improve highlighting functionality
modified the tryToLogin method to accept username and password as parameters and updated the return value logic to enhance functionality by allowing credential handling and returning the result of the tryToLogin method
modified handling of entities in HandlerSceneEntityDrownReq and removed redundant broadcastPacket calls in PacketSceneEntityDrownRsp to streamline entity management and improve code clarity by consolidating similar logic
reformatted code in jmsproducer for good readability .
replaced the wrapCollection method with a direct parameter parameter in the update method to simplify the method call and improve code readability
added logging functionality for unknown currencies in BTCEAdapters . java to improve error handling and provide better diagnostics for currency - related exceptions
[ java ] remove redundant call to getclientid ( ) to avoid npe
pdfbox - 3353 : fix typo , a suggest by valerybokov
modified ` startController ` method to accept ` useTenantIsolation ` parameter and added new tenant creation methods to enhance the configuration flexibility for tenant management during testing
replaced ImmutableMap . Builder with a direct cast of the response value to simplify the code and improve readability
added a check for an empty list in the ProjectWorkspace class to ensure that the condition is met only when there is more than 4096 attributes
added abstract methods for retrieving JDK name , jdk type , and language level in IjProject configuration classes to enhance code readability and provide more granular control over project configuration
updated the error message from " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify the purpose of the optimization for bucket count compatibility
updated test method names to clarify the purpose of the method in handling user details as principal to enhance test clarity and ensure correct behavior of effective ACL resolution with different authentication contexts
update javaparentypedeclarationadapter to use getsonjavalangobject ( ) instead of getreflectiondeclaration ( ) .
added a new variable ` numberOfButtons ` and a constant ` MAX _ BUTTONS _ SUPPORT ` to manage button counts to limit the number of buttons available and improve usability
updated import statement for assertion methods in RedefineInterfaceCall . java to ensure compatibility with the Oracle test library
added MessagePackFactory class for improved flexibility and organization of unpacker creation to enhance maintainability and flexibility of the MessagePack implementation
add new tag ' is _ desert ' and ' is _ cave ' , fix # 5956 ( # 5956 )
rename method ` present ` to ` draw ` in multiple screen classes to improve clarity and consistency in method naming
updated layout settings based on horizontal orientation and added UI IDs for toggle elements to improve layout behavior and ensure proper UI updates for different UI components
remove unnecessary dependency on doi _ url _ pattern ( # 3418 )
change return type from ` touchHandler instanceof AndroidMultiTouchHandler ` to ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput . java ` to improve clarity and consistency in handling multitouch input functionality
[ java ] have clustertest . java use close to check if commit position counter be available before try to release .
# 1179 - enh : add querybuilder example for userSite and recordid class
fix : fix npe in httpconverterregistrar . getport ( )
bug 9452 : listcapacity - when the host > 200 the host _ id and storage _ pool _ id start colliding , to workaround that also compart the capacity type .
replace file input handling with file length setting to improve efficiency and reliability of NRT caching data management
lucene - 6271 : refactor compiler to reduce duplicate code and improve performance
changed synchronization to a static block in UISettings class to improve performance by reducing overhead from unnecessary synchronization
added native text input support and changed method visibility from private to public to enhance text editing experience and improve accessibility of data change events
[ beam - 9687 ] improve the retry logic for aborted transaction ( # 9687 )
jdk 1.5 compatibility : use diamond operator ( jdk 1.4 support )
updated array type check from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray . java class for testing to ensure correct array handling during deserialization and validation
changed logging level from error to warn for ID token claims and improved nonce handling logic to enhance error reporting and provide clearer nonce management for authentication failures
duracom - 86 added support for handle ' relation . ' relationship field in DCInputSet . java to enable proper handling of relationship fields in the model
added server slogan functionality to the FileDataStorageManager and updated the FileContentProvider to utilize this new method to enhance the management of server slogan capabilities in the application
simplified the condition for tinting menu items in DrawerActivity . java to improve code readability and maintainability by reducing redundant checks
replaced a failing test with an assumption in SolrRequestParserTest . java to allow tests to run only if there are no exceptions , improving test reliability
add a return statement for empty events in MissingSymbolsHandler . java to avoid processing unnecessary events when there are no missing symbols
add some test case for the new ` ` data ' ' structure
fix # 43 - improve warn message when return an empty data provider
( chore ) camel - base - engine : replace usage of collections . empty _ list with collections . emptyList ( )
bug fix : selection style should n ' t be add to node geometry if there be out of bound node
fixed bug in physicsrigidbody . setrestitution ( ) , which lead to incorrect object id
added a new file ` AutoFtpActivity . java ` that implements an activity for testing FTP ftp tests to implement functionality for automated FTP testing in the application
refactor tab name handling to improve clarity and support for StringLiteral type to enhance code readability and ensure correct processing of string literals
added methods to retrieve and set component state in multiple classes to improve functionality and flexibility for managing component states in the application
add a new class RemoteExecutionEnabled for remote execution control and testing to enable and disable remote execution when the remote execution is enabled or disabled
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated file reading methods to use UTF - 8 encoding for improved compatibility to enhance code readability and prevent potential issues with character encoding
added assertion to ensure working score is not stale in abstractscoredirector . getworkingscore ( )
updated the SEMI JOIN _ CONVERSION configuration from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " to improve performance and clarity in query optimization settings
added logging functionality to DatagramPacketByteArrayDecoder , DatagramPacketDelimiterDecoder , and DatagramPacketDelimiterDecoder classes to improve error handling and logging for non - Netty ByteBuf instances
replaced file removal logic with a directory removal method and updated error handling in the FileDisplayActivity to improve directory management and provide user feedback when the current directory is unavailable
added assertions to verify the presence and consistency of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the PollingTransactionReceiptProcessor correctly handles transactions with the specified hash
fix sonar warning and mark old test a deprecate .
add check for null sample mime type on new format to avoid illegalargumentexception
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23PoolingDataSource . java ` to improve thread safety by ensuring all waiting threads are notified
updated annotations in J . java to include JsonCreator configuration to ensure proper JSON creation mode for generated objects
feat ( index ) : optimize create index on view ( # 3418 )
add a new class Website with methods for managing Javanet types in PopulatorImplTest to provide functionality for populating and populating web collections related to website information
added JUnit setup to BSFormatterTest class that sets default locale for testing to ensure consistent test environment across different environments
now detect badly downloaded jar file in coremodmanager . see coremodmanager . getcoremodfiles ( ) .
updated assertion in MultiPartParsingTest to use Matchers for string comparison to improve case - insensitive comparison of expected values during assertion
added additional checks for single parameter and variable expression token handling in SimpleExprGenerator to ensure proper processing of parameters for function signatures and enhance functionality
added a volatile boolean flag ` createdVertx ` and modified the condition to check if the vertx is not null to ensure that the vertx instance is only created if it was successfully created
updated the method call to writeAttributes to include a node parameter instead of a null reference to enhance flexibility by allowing the writer to accommodate different node types
updated logging messages for consistency in SynchronizeFolderOperation . java and added null checks in FileDisplayActivity . java to improve clarity of log messages and prevent potential NullPointerExceptions
added a new boolean field ` ignoredReadStatus ` and updated related entries and its usage in ` CategoryREST ` and ` FeedREST ` to ensure that ignored entries are returned regardless of their read status , improving API functionality
updated resource resolution methods in TestAnnotationConfiguration , TestAnnotationConfiguration , and WebAppContextTest to use MavenPaths instead of MavenTestingUtils to ensure consistency and correctness in path resolution for test resources
[ type : fix ] optimize and optimize uri register executor ( # 4348 )
updated the condition for isPlaying to check if the sound is paused to ensure proper handling of paused sound states
added a new permission check for admin area access in MainCommand . java to enhance security by enforcing admin area permissions
replaced ImmutableMap with HashMap for query options and updated the query execution logic to enhance code clarity and maintainability by simplifying the query options handling
updated path comparison logic in ReloadableJava11ParserInputFileObject and Java8ParserInputFileObject to use ` path . getFileName ( ) ` to ensure accurate validation of file names
fix resourcestest to work on window .
8073108 : [ testbug ] compiler / loop / whitebox / testloop / testlargepagewithunsubscribing fails due to non - deterministic stack growth
[ flink - 30613 ] [ serializer ] migrate javaeitherserializersnapshot to javaeithersnapshot
updated AddressResolverOptions and AddressResolver to support dynamic resolv option handling to enhance flexibility in address resolution options based on configuration
added call to the superclass ' s associate method in RequestRockerTemplate and created a test for it to ensure proper handling of null references in the RockerTemplate object
pdfbox - 4892 : avoid npe , return empty string instead of null if the dictionary could n ' t be find
updated XML path references in multiple classes to use the correct namespace structure to ensure compatibility with the latest Liquibase library structure
move commonmimetypelocator to test package to avoid split package
change the initial state of RepositoryVersionState from INIT to NOT _ REQUIRED across multiple classes to ensure that the repository state is not mandatory for processing
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to enhance the comparison capabilities by providing specific schema comparisons
[ drools - 7 ] use junit4 and junit4 dependency in executable model and compiler .
added a new file ProgressiveJPEGTest . java to implement a test for rendering and rendering progressive JPEGs to verify the functionality and performance of progressive graphics in the BadiveJPEG library
fixed npe in load material with no resource ( thanks andreas )
make window native - toolchain target architecture error message more informative
added a null and empty check before setting the size of the label to avoid potential NullPointerExceptions when setting the size of the label
fix bug that read integer large than integer . max _ value in large value cause integer overflow in data . readint
changed PushUtils class to be final and added constructors to the PushUtils class to prevent instantiation and enhance utility
replaced the calculation of the length with the actual length from curConfig to simplify the code and improve readability by eliminating unnecessary complexity
removed unnecessary type casting of dir in TestDirectoryReaderReopen . java to simplify code by eliminating unnecessary type casting
updated the file path in the componentPresetDao . load method to allow for dynamic loading of presets based on index
added a condition to check if the app is in TaskbarStashController and updated animation handling in InvariantDeviceProfile and FloatingIconView to improve accessibility handling and ensure compatibility with various Android versions
updated Node initialization in NodeManager to use RefreshTask to ensure consistency in node information retrieval throughout the application
pmd : do n ' t attempt to target two jdk 1.3 + on jdk 1.5
server : fix quotaresponsebuilderimpltest ( # 4440 )
added custom output stream handling to TestSchemaToolCatalogOps to allow for more flexible error output during testing
hbase - 27409 fix a bug in fanoutoneblockasyncdfsoutputsaslhelper where data encryption be not clear in case of connection loss
updated MongoQueryMethod and related classes to accept RepositoryMetadata as parameters to enhance query functionality by integrating metadata capabilities
switch to entityresolver2wrapper to allow more flexible entity resolution .
updated imports in MetaDataEndpointImpl . java to use specific class names and constants to streamline the code and improve clarity by removing unnecessary imports
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and introduced retry logic for managing deadlocks to improve the robustness of transaction management and ensure proper handling of deadlock attempts
renamed variable ` xl ` to ` xAxis ` for consistency and clarity to improve code readability and maintainability by using a uniform naming convention
added methods to validate and validate Unicode system names in FsUtils . java to enhance compatibility with Windows and improve character handling within the application
rename ` ` in ' ' to ` ` use ' ' to make code more consistent
added process plugin configuration option to DefaultMaven and DefaultProjectBuilder to improve error handling and control over project building processes
fix int overflow report by coverity
test : fix integration test for google - cloud - vision
changed return values from " STUB " to " null " and added a method to retrieve the remote host to improve consistency in handling connection records and ensure consistent retrieval of remote host information
( scott phillips ) add check for admin permission to community list servlet .
compactsplit : log number of compaction thread in debug
updated package name retrieval in WallpaperChooser . java to use resources instead of application context to improve maintainability and ensure correct resource management
updated the method for generating the list of players in the Near class to improve clarity by ensuring only the relevant players can be displayed in the plot
refactor multiple classes including AndroidManifest , ResName , and ShadowMediaPlayer to improve code organization and maintainability
refactor MlibOpsTest to improve test clarity and organization to enhance maintainability and reduce complexity in testing code
8173943 : remove reliance on string literal in sun . management . internal . getoperatingsystemimpl
changed the attribute name from " referencedContainer " to " ReferencedContainer " in the SchemeGenerator classes and added a new test method in the SchemeGeneratorTest class to ensure consistency in naming conventions and validate the functionality of buildable references
removed redundant null checks for key and initialization vector in UploadFileOperation . java to simplify code and reduce potential NullPointerExceptions related to key and initialization vector
added @ Stability annotation to WorkProfileTest . java to indicate stability for local and post submission to address bug b / 243688989
removed a condition that checks if the table ' s bucketing version is set before continuing to avoid unnecessary processing for non - bucketing tables
changed the method call from ` setCursorPosition ( x , y ) ` to ` input . setCursorPosition ( x , y ) ` to utilize the input object for setting the cursor position
updated LockFreeBucket to extend abstract classes and added new LockFreeBucket _ FinalFields _ CacheLinePadding for better inheritance to improve code organization and functionality for managing lock free bucket performance
add the tpstats command to the node prober to show available thread pool statistic
update methods to accept user preferences for maximum bitrate to ensure optimal bandwidth settings based on user preferences
updated ZipkinHttpSpanExtractor to handle trace and span IDs more robustly to improve code clarity and ensure proper handling of span debugging conditions
move getuserpaymentAccounts ( ) from mutable to abstract and replace with getuserpaymentAccounts ( ) .
remove reflection from dartservercompletioncontributor ( # 4463 )
added a method to set the cache properties for the filesystem to enhance the performance by optimizing cache management
added ProjectFilesystem parameter to several JsBundle - related classes and updated command line arguments to include the root path to improve flexibility and correctness of build root management in the build process
updated multiple Java files related to envelope and databinding functionality to enhance code organization and improve maintainability of the data handling components
update MetricsDSLContext class for improved metrics handling to enhance performance and maintainability of metrics management
removed the VersionConfig interface and modified VersionBuckConfig . java to simplify the code structure and improve readability
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException to improve robustness by gracefully handling potential exceptions when the type is not present
changed the access modifier of the validateTypes method from static to public and updated the exception message format to improve accessibility of the validateTypes method and enhance clarity of error messages for better debugging
fix : update gapic - generator - java with mock service generation fix ( # 259 )
added SLF4J logging to SimulationStatus for better tracking of simulation status updates
update VERSION _ POSITION _ Y to 150 and set VERSION _ FONT to 14 in Splash . java to update font positioning to reflect new application requirements
modified the way notifications are added to the list in UserInterfaceComponentImpl to ensure that notifications are added on the main thread for thread safety
updated the implementation of ReturnsElementsOf to enhance functionality to support specific return values for improved test coverage
fix typo in error message ( # 11902 )
add a new test method ` testLineFileDocs ` to validate the functionality of ` LineFileDocs ` to ensure proper handling and indexing of indexed documents in the Lucene index
added a method to retrieve the version code from MainApp and updated references to use this new method to improve code maintainability and ensure consistency in accessing package information
camel - 6379 : beaninfo should handle method with the same parameter a the string body . thanks to josh reagan for the patch .
changed method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to ensure consistency in naming conventions for multipart files
added buffer ownership checks and adjusted buffer handling in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper disposal of byte buffers and improve buffer management
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through the login form
camel - jersey fixed the c error of getresourcepaths
int - 1471 fixed consoleinboundchanneladapterparser and consoleoutboundchanneladapterparser to use the fully qualified class name .
fix error in typeutils . isassignableto ( ) and remove redundant typecasttest .
added methods to manage the last row and column count in StringDict and table to improve functionality for handling string data in the application
added @ Deprecated annotations and implemented customization for container creation commands to improve code clarity and facilitate future removal of deprecated features
changed logging level from info to error for error message in MediaInfo . java and updated exception handling in RendererConfigurationTest . java to improve error reporting and ensure proper configuration handling during tests
added handling for " schemapattern " option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enable proper configuration of the schemapattern for database connections
bcjsse : fix npe in ProvSSLSessionimpl . getid ( ) .
refactor ratio calculation and Bitmap creation for better readability and maintainability to improve code clarity and ensure correct handling of bitmap dimensions
updated Base64 . java file to enhance base64 implementation for better performance
sulong : clean up getstackfromthreadnode and add fallback to llvm
simonstewart : explicitly mark the test a ignore on the iphone
renamed FlowBuilder and FlowJobBuilderTests classes to improve clarity and consistency in naming conventions
changed the type of ` resName ` from ` ResName ` to ` int ` across multiple classes to simplify data representation by using a more descriptive identifier for resource identifiers
allow for more flexible configuration of docker client ' s tls certificate ( # 206 )
dataes - 962 - fix incorrect test setup / teardown in elasticsearch repository test
modified type variable handling in ` mmm Attr . java ` and added a new class ` T6450290 . java ` with nested classes to fix type variable resolution issues and demonstrate generic type usage in javac
added support for configurable logging level in LoggingFlags and LoggingOptions to allow users to customize the logging granularity for better debugging and monitoring
add log to help debug delete app icon .
added methods to handle all file options in FileActivity and PreviewImageActivity to enhance user experience by allowing users to navigate to the root screen
added new methods for processing ` forEachOperation ` and ` hasMatching ` in ` MutationOperationGroup ` to enhance flexibility and maintainability of the codebase
updated the calculation of numPredictiveAppCols for phone devices to ensure accurate app column count for better user experience on various devices
updated StringUtils . java to create a new String instance with UTF - 8 encoding to ensure proper handling of character encoding for better compatibility
added new classes RequestMatchers and RequestMatchersTests to enhance request matching functionality to improve testing and flexibility of request matching logic
ticket # 3874 : choose a different input box to select a point , not a point
adjust position calculations in the ProgressBar to account for background height and width to ensure correct rendering of the knob position relative to the background
[ native ] fix compilation error on benchmarks
made fields in BruteArgumentMoverHandle final and modified the permuteArgs method to accept additional parameters to enhance immutability and provide more flexibility in argument handling during permute operations
added a condition to check if the state handler is invalidated in the gesture state check to improve state management by ensuring the handler only processes valid gestures
updated layout handling for landscape and portrait layouts and optimized cell size calculations to improve layout responsiveness and maintain consistent layout metrics across different screen orientations
added a condition to check if the redir file matches " / robots . txt " to ensure that the redir file is validated correctly before processing
http : / / issues . apache . org / jira / browse / netbeans - 4444 - constant string should be replace with staticresource
update event name from " continue " to " createWorld " and change button " close " to " return " to accurately reflect the functionality of the game setup screen
updated null checks in UDFOPDivide . java and added a new test class TestUDFOPDivide . java to ensure correct handling of zero values and validate functionality through unit testing
enhanced code formatting and added null checks in the job execution logic to improve readability and ensure proper handling of interrupted jobs
refactor ` FormLoginBeanDefinitionParser ` and ` LogoutBeanDefinitionParser ` to use bean definition for " filterProcessesUrl " and " requiresAuthenticationRequestMatcher " to enhance flexibility in matching logout requests based on configuration
unbind the upload service connection when the activity is destroyed to ensure proper resource management and prevent memory leaks during activity destruction
corrected a typo in the variable name from ` thumbnailNail ` to ` thumbnail ` to ensure the correct tag is used for image representation
renamed multiple Java classes for consistency in naming and structure to improve code maintainability and readability across the project
added request timeout configuration to RaftServerConfigKeys to enhance server request handling by managing timeout settings
updated logging behavior in TsFileResourceManager and modified test cases in ResourceManagerTest to improve error handling and ensure comprehensive testing of resource management functionality
added system properties to the model source and system properties in MavenModuleLoader to ensure that system properties are correctly initialized for model processing
add readiness check metric ( # 10685 )
add the animatedtorch model to the blockanimatedtorch . close # 1489
added null check before closing the writer resource to prevent potential NullPointerException when accessing writer
refactor HiveConf initialization to use a new method for directory paths to enhance flexibility in configuring Hive settings across different environments
added a new link to " Muting Users " in FeatureActivity . java to provide users with direct access to the muting Users feature
add initialization properties for direct method handle to disable this feature to ensure compatibility with direct method handle usage
hbase - 27195 splitonLeadingvarcharcolumnspolicy should extend SteppingSplitPolicy instead of ConstantSizeRegionSplitPolicy to improve performance by utilizing a more efficient split policy implementation
[ flink - 31212 ] [ yarn ] fix the npe thrown when the plugins / lib directory do n ' t exist
updated method calls to retrieve pronunciations from a dictionary instead of directly calling getPronunciations to improve code clarity and ensure correct retrieval of pronunciations
remove unnecessary newline character from JSON utility tests to improve code readability by removing unnecessary newline characters
added extra handling for tweet ID in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper identification of tweets during composing
add warn about terminating messagelistener due to messagelistener corruption
improve a good exception when we do n ' t find any class to analyze
replaced import of java . security . Key with java . security . PublicKey to utilize the correct key class for improved functionality
set isIncompatible flag to true in DLNAResource . java to enable compatibility checks for resources
updated the signature of the createAccount method in RpcApiService to use AccountCreateContract to align with the new contract type requirements for account creation
pdfbox - 4892 : avoid npe if no range be provide a a value , a suggest by derek liu
resolve : http : / / issues . apache . org / activemq / browse / amq - 2695 - set permison cause on remembered message
enable off heap format by default and update config value for star tree format version to improve performance and maintainability by using a centralized version configuration
modified title handling in FeedUpdateService to ensure a maximum length of 2048 characters is applied to the content title
updated JColorChooser and BasicColorChooserUI to utilize a preview panel factory method to improve encapsulation and ensure proper handling of the preview panel
changed log level from info to debug for extensions checks to reduce log verbosity and improve performance during development
android tilebitmap : check for null to avoid potential crash
add ` getLayoutParams ( ) ` method to ` FakeView ` class to provide access to layout parameters for other components
added a check to throw an IllegalStateException when a cursor is closed in DefaultCursor . java to ensure proper error handling and state management when a cursor is already closed
pdfbox - 3441 : avoid npe when look at a page that have the same parent , a suggest by derek kids
( chore ) camel - jms : disable fail test
added a ` ts ` field with getter and setter methods to the ` Message ` class to store and manage the timestamp associated with messages
add log to exception mapper , fix http : / / github . com / opengrok / opengrok / issues / 10
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
move remove ( ) method to routeresource to allow reuse
changed class visibility from public to package - private for several test classes to restrict access and simplify the structure of test classes
refactor CSRF token handling into a separate method for reusability to improve code readability and maintainability by reducing duplication
fix issue with lombok . launch . packageshader and shadowclassloader not work when the bootstrap flag be set .
[ drools - 2844 ] allow to disable a rule cell ( # 4224 )
changed log level from info to debug for default values in HiveConf to reduce log verbosity and improve performance by reducing log verbosity
added null checks for axes and buttons in Lwjgl3Controller and modified controller management in Lwjgl3ControllerManager to ensure proper handling of null values and maintain proper controller management
updated ObjectFactory import statements in WeldFactory and WeldFactoryTest files to align with the latest Cucumber library structure
refactor port forwarding logic to ensure that the savePortForward method is called on the correct HostDatabase instance to improve robustness by ensuring that the savePortForward method is only called if the host is not null , preventing potential NullPointerExceptions
added snapshot data control functionality to GlobalConfiguration and related classes to allow users to control whether snapshot data is enabled by default
removed unnecessary job scheduling and added event logging for better debugging to improve error handling and avoid null pointer exceptions during job execution
fix typo : ` ` null ' ' should be ` ` null ' '
simplify touch event comparison logic in StatusBarTouchController . java and modify swipe logic in TouchInteractionService . java to improve code readability and maintainability by removing unnecessary complexity
hive - 12807 : fix jdk 1.6 build and remove obsolete feature ( sergey shelukhin , review by prasanth jayachandran )
replaced ` ArgumentMatchers ` with ` Matchers ` across multiple test files to align with the newer Mockito library standards
refactor ` getRelativePath ` methods to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` to improve clarity and consistency in path retrieval across the codebase
updated variable names and method signatures to use RecordReaderFileConfig instead of RecordReader to enhance code clarity and consistency by using a more descriptive file name
fix argument extractor to only deal with specialized extractor , and fallback to original argument extractor
cloudstack - 2120 : add method to find correct max secondary storage for domain and account
add a potionshiftevent to allow client to cancel the shift screen . close # 2139
hbase - 23939 removed the deprecated key ` cold _ reads _ to _ omit ` from the compaction operator scope to fix the compatibility issue ( # 4209 )
[ java ] call leech . stop ( ) to fix build on window .
[ issue # 6768 ] fix popmessageprocessor always report the retry result ( # 6769 )
update KeyboardAddonSettingsFragment to improve functionality to enhance user experience with improved input handling
replaced the @ Test annotation with the @ Ignore annotation in ShadowDateUtilsTest . java to mark the test as ignored for future development
polish ` ` enable netty auto configuration for mongodb ' '
added UpgradeRequest and UpgradeResponse handling in UpgradeConnection and created a test for upgrade requests in ClientConnectTest to enhance websocket connection functionality and ensure proper handling of upgrade requests
added connection timeout functionality to AndroidImplementation to allow configurable connection timeouts for improved stability
updated methods to retrieve user and team access for repository permissions to enhance security by restricting access to repository members and teams
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL queries with quoted expressions are correctly parsed and deparsed
added a check for root directories and modified assertions in Misc . java to ensure assertions are only validated for non - root files
added logging functionality and improved thread executor selection in FixedThreadExecutor . java to enhance thread management by allowing configurable thread groups
added null checks before checking for " field " in AbstractChangeGenerator . java to enhance robustness by preventing potential NullPointerExceptions
updated event listener imports and method signatures from CasEventListener to InitializingBean in multiple configuration classes to align with the new naming conventions for event listeners
refactor animation end handling by introducing a separate endAnimation method to improve code readability and maintainability by encapsulating the animation end logic
added an overridden close method to the DeflaterOutputStream class to ensure proper resource management and prevent potential memory leaks
added a new Java class ` gsp001 ` with a native method for retrieving system properties to facilitate testing of system property retrieval on early phase agent _ OnLoad
include superclass field in beandefinitioninjectprocessor ( # 5412 )
- add jme support for node in jme3 export
refactor PopupNotificationPanel to utilize SwingUtilities for clarity and maintainability to enhance code readability and ensure proper handling of parent window disposal
7187104 : inference cleanup : remove unused exception class in infer . java
added a new method ` getFeatureValue ( ) ` to return the value of ` featureValue ` to provide access to the feature value for external use
changed the parameter type from int to long in the after method to improve compatibility with larger time values in Mockito
added onBuild and executionDriver properties to ContainerConfig and Info classes to enable configuration of on - build execution settings in the application
modified toolbar icon styling logic to differentiate between RTL and other layouts to enhance visual consistency and usability across different text directions
added support for enabling position increments in StopFilter to allow more flexible control over the filtering behavior
[ test ] added internetaddress to test case
added a boolean variable ` mTryShareAgain ` and initialized it to false to control shareAgain behavior in the activity
added TTY name detection feature in JansiNativePty . java to enable the selection of TTY names based on configuration
refactor byte size calculation in BandwidthProcessor to correctly reflect the size of transactions based on the dynamic properties store to ensure accurate representation of memory usage in transaction operations and improve code clarity
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to improve test stability and allow for asynchronous task completion
[ easee ] fix access to api base for cluster node
[ beam - 13430 ] increase default startup retry time for kafkaio to 5 second
fix # 2327 search by name cause nullpointerexception ( # 2329 )
added SSL trust mechanism using trustAllCerts in OkHttp . java to enhance security by ensuring all certificates are trusted for the client and server
updated long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and maintainability of button types by using direct method references
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` for field length instead of ` byte ` to implement functionality for generating hyperlink formulas in HSSFWorkbook
added nullable annotations to ShellStep and ensured non - null workingDirectory path is used to improve code robustness by handling potential null pointer exceptions
increase timeout in an attempt to reduce false failure
updated the escapeDatabaseObject method to correctly escape object names and improved method signatures to enhance code clarity and ensure proper functionality when handling database objects
mob - 825 : rename and rename material dialog : do n ' t show the material name if the card have an input field .
added a test for state changes in ShadowDisplayTest and implemented the setState method in ShadowDisplay to ensure correct handling of display state changes across different SDK versions
[ geos - 8294 ] add direct invocation to dispatcher , and add a test for it
# 5158 fix tabbing issue for export to web
updated SQL queries in PgDatabaseMetaData to accommodate PostgreSQL server version 9.0 to ensure correct retrieval of PostgreSQL dependencies for specific server versions
remove unused variable ' message ' in queuechannel ( # 1656 )
updated the ` getPathsFromResource ` method to throw ` URISyntaxException ` and ` IOException ` instead of ` IOException ` to improve error handling and simplify URI creation
added support for monitoring nodes based on the Jenkins node monitoring system to enhance functionality for better application context management
refactor attribute resolution in ` HeadersBeanDefinitionParser ` to use ` resolveAttribute ` for better consistency to enhance code readability and maintainability by centralizing attribute resolution logic
hbase - 23794 protobuflogreader ( addendum ) do n ' t seek at the end of the stream ( # 800 )
reorder method calls in DefaultApplicationDeployer and add shutdown method in NacosRegistry to ensure proper cleanup of resources and handle potential exceptions during service destruction
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor status code handling in ` GoAwayGenerator ` and ` GoAwayBodyParser ` to utilize ` writeStatusCode ` for better readability and introduce version handling to enhance code clarity and maintain compatibility with SPDY versions
refactor AuditEvent and its tests to improve clarity and structure to enhance maintainability and readability of the test code
added checks for floating error before returning the cbrt value in the Interpolation class to prevent division by zero errors when processing float values
fix default path in forgediteworlded . close # 2638
refactor code to assign the absolute path to a variable before adding it to the builder to improve code readability and maintainability by clarifying variable context
added assertions to compare PointRangeQuery instances in TestPointQueries . java to ensure correct type checking and functionality of PointRangeQuery comparisons
hbase - 8703 [ window ] testhfilecleaner should use relative path for the archived hfile directory ( ted yu )
add a check to avoid duplicate file name and set a new one if it do not match
remove throw of jce from jedisclustercommand . execute ( ) a it do not need to be throw by jedisclustercommand . execute ( )
[ flink - 23476 ] [ stream ] fix RowTimeMiniBatchAssginerOperator to use chainingstrategy for improved performance
update FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of regular expressions to improve the handling of path - based filtering in the FilterInvocationDefinitionSourceEditor
add benchmark to qmap and improve performance
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to store additional functionalities related to the plot world
groovy repl : support for get [ a - z ] , get [ a - z ] . * , and get [ a - z ] . * command .
make sure number . setdrawable ( false , false ) for eg eg dot ( 3x )
hive - 27113 : hiveserver should not use socket timeout and keep alive by default ( ashutosh chauhan via thejas nair )
renamed the method from ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve method clarity regarding the functionality of the method
# 430 - remove unused import to fix error
remove joda . time . format from realtime segment relocator ( # 1004 )
no need to declare a success variable here , so it ' s always true
update window alpha calculation and change condition in WindowTransformSwipeHandler and FloatingIconView to improve accuracy of window alpha handling and ensure proper state checking
update warning message in SecurityNamespaceHandler to specify Spring Security 4.0 schemas to ensure users are aware of the latest Spring Security features and bug fixes
delete useless check on proto from test file
fix disruptor memory leak cause concurrent access error ( # 4406 )
added a new file TestConfigureUDF . java to implement a custom UDF test to enable the testing of configuration functions in Hive using Hive ' s UDF system
update UTF - 8 string matching in LogMessageWaitStrategy and add parameterized tests in LogMessageWaitStrategyTest to improve text matching accuracy and ensure proper handling of wildcard patterns
simplified logging by removing unnecessary final variables to streamline code and enhance readability by reducing redundancy
updated method names from ` updatePurgedShardNodes ` to ` deletePurgedShardNodes ` in ` SchemaDao ` and ` ShardCleaner ` to improve clarity and consistency in shard deletion operations
add new java language version 17.1 . 17 to the classpath and documentation .
make fileappenderresiliencetest more tolerant , add code wait for compression job
[ gr - 46711 ] make volatilereadnode # hasonlyusagestoresof ( memory ) assertion - safe .
added a method ` getSteps ( ) ` to return an unmodifiable list of steps to enhance functionality by allowing external access to step data
removed redundant variables from ` fromBase58 ` and ` toBase58 ` in ` TronJsonRpc ` and updated error handling annotations to streamline code and ensure consistency in error reporting
refactor currency pair creation in BitstampAdapters . java for clarity to improve readability and maintainability of the code
apply base time unit to longtasktimer and meterregistrycompatibilitykit ( fixes # 618 )
# ! [ euphoria - flink ] make reducebykeytranslator aware of guava .
changed preference handling in HostEditorActivity to improve type safety and simplify color value retrieval to enhance code readability and maintainability while ensuring correct functionality for list preferences
refactor database version handler to use DatabaseVersionHandler instead of IncompatibleDatabaseHandler to improve clarity and maintainability of database configuration handling
added a constant for maximum number of tweets in the conversation to limit the number of tweets processed in the conversation for better performance
http : / / issues . apache . org / jira / browse / amq - 4213 - set default refresh interval to 2000
fix race condition that occur for delete tail page ( # 1844 )
fix checkstyle issue in util / glowserver . java ( # 783 )
refactor code to introduce a grow method for better readability and reuse to improve code clarity and maintainability by encapsulating the growth logic
added import statement for DataOutputStream in GdxSetup . java to enable proper handling of stream operations in the setup process
camel - 10560 , add getsubmittedfilename ( ) into partdatasource to retrieve file name specify by the client
added a method call to markReadForLoad in LauncherFragment . java to facilitate the reading of data during loading operations
updated exception handling in JarInstrumentor to include ClassNotFoundException to improve error handling for negative array size classes during instrumentation
added a method to check for spill possibilitys in HashAggTemplate to ensure proper handling of unselected partitions to prevent memory issues
lucene - 8711 : do n ' t call indexwriter . getdocstoresegment ( ) multiple time ; do n ' t call this method twice
added a default value for the name ID format in SamlProfileSamlNameIdBuilder to ensure supported names are not added if none is provided
added error handling for password change completion in ChangePasswordPage . java to improve user experience by notifying when a password change is aborted
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent potential compilation issues
add maxidletime to nio receiver mbean , for use in test .
deleted the FontScalingTest . java file to the test was deemed unnecessary or redundant in the project
[ rrd4j ] improve error message when use ' start ( ) > end ( ) ' in filter ( # 19953 )
added a check to return early if numVectors is negative to avoid unnecessary processing for invalid vector values
test : migrate executablereftest to junit 5 ( # 4463 )
added null checks before setting view and glass pane to avoid potential NullPointerExceptions when invoking certain methods
camel - 5384 : added wiretap support and dynamic processor to use . thanks to simon steiner for the patch .
change method visibility from public to protected to restrict access to the method for better encapsulation
added a new option ' TOPN ' to the PlannerSettings class and integrated it within the PushLimitToTopN class to enable configuration of the planner ' s top N functionality based on user settings
[ java ] remove redundant aerondirectoryname assignments in test .
fixed - batch in redissonclient . ping ( ) method throw npe if redisconnection . setqueued ( false ) fails
refactor to use URL for storing configuration variables and remove the LoopingByteArrayInputStream class to streamline resource management and improve code clarity
[ api ] use criteria . device ( ) instead of default device ( ) in model creation ( # 1358 )
updated menu inflation logic in SimulationViewer . java to enhance menu functionality for better user interaction with menu options
doc : fix docstring formatting ( # 305 )
allow the hawtio . home property to be specify . this will allow to change the parent directory if they do n ' t exist .
added a check for empty comments and return SINGLE _ SPACE when whitespace is empty to improve handling of whitespace in code formatting
changed variable declarations to be volatile in multiple Dictionary and related classes to ensure thread - safety for concurrent access
added printStackTrace ( ) method to Throwable for error handling to enhance debugging capabilities when exceptions occur
move customitemdroptest to integration test and fix a bug
added optional ' ifNotExists ' parameter to DDLTask and related classes to enhance flexibility in partition creation logic
fix read more than 1 byte at the end of nfs secondary storage
[ java ] remove redundant call to controlrequeststreamid in test code .
geos - 7116 , allow the wfs spatial operator to be use for wfs intersecting
added import for LuceneTestCase and annotated the test with AwaitFix to address compatibility issues related to SOLR - 2161
refactor Http11InputBuffer to improve handling of request line phases to enhance code readability and maintainability by simplifying condition checks
[ java ] set ` isIngressExclusive ` to false to avoid false failure in the cluster test .
hbase - 27113 make hbase . offheapcache . ioengine and hbase . bucketcache . size . key configurable ( vladimir rodionov )
added currentRecordNumberInFile method and modified record counting logic in JSONRecordReader . java to improve clarity and accuracy in tracking the running record count
added filtering of out years from mergedItems in CategorizationFragment to ensure that out years are filtered properly from the UI
updated drawColor method calls to use the correct color value of mCacheCanvas to improve visual consistency by using a solid color instead of a fixed value
added OpenGL 2.0 render method checks and updated exception handling to ensure compatibility with OpenGL ES 2.0 and improve error handling
ww - 3441 update actioncontext to null in backgroundprocess # setinvocation
hive - 23702 : show default database name in table name when unescaping identifier ( krisztian kasa , review by jesus camacho rodriguez )
make connection timeouts configurable for fast startup
added multiple assertions for query execution in TestHiveAggregationQueries . java to ensure that the percentile function works correctly for different order key orders
change default idle and write timeouts to 30 second and update connection handling to improve clarity and consistency in timeout management across WebSocket connections
fix : use current user ' s account when sharing file
updated type casting and improved type safety in Inet6Address . java to enhance code clarity and prevent potential type casting issues
replaced multiple method names and updated button visibility management in PlaybackControlView . java to enhance code clarity and maintainability by using a unified method for enabling and disabling buttons
updated session presence check to use ` id ` instead of ` session ` to ensure consistency in session identification logic
updated collection method to use getImmediateClasspaths ( ) instead of getTransitiveClasspaths ( ) to ensure immediate class paths are included for the exported JavaLibrary
make useexceptionprobability default to do a good job under - graal
updated color handling for homed app icons in PredictedAppIcon . java to ensure correct color application for themed items
ticket # 263 : fix a bug in mysqluser where only one user can be create and change password .
added " centre " alias to the " center " alias in the Middle class to support separation of concerns in the centering algorithm
added DirectUpload class import and injection method to CommonsApplicationComponent to facilitate dependency injection for managing direct uploads
added space adjustments to left and right axes in BarChartActivity and BarLineChartBase to improve chart formatting and ensure proper handling of edge cases
added support for multiple ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance functionality by allowing additional source ABI flavors in library descriptions
add operation event status type to request data and change services list to an ArrayList to improve tracking of operation event statuses for better resource management
add visibility annotation to DexAnnotation and print them in debug output to improve debugging by providing visibility information for method parameters
use teardown rather than startbundle to teardown resource
log4j2 - 1343 fix test failure of SortedArrayStringmaptest
updated the path handling in PackageResourceLoader to include a custom separator for resource loading to improve compatibility with Android resource loading conventions
[ hotfix ] [ dataset ] remove redundant ' this ' keyword
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable the test due to bug b / 243855320
added escapePercent to stack trace formatting in ` ShouldHaveMessage ` to ensure stack trace is properly formatted to avoid AssertJ default String formatting
fixed - jcachemanager . geturi ( ) may n ' t return cache object if close ( ) method return false . # 3054
change log level to info when close already claimed exception
added a block to initialize the ALPNClientConnectionFactory in HTTP2Client . java to ensure proper initialization of the ALPNClientConnectionFactory for future use
fix : send max value in entitypropertiespacket . report by damian minkov .
do n ' t show notification sound when thing be not initialize ( # 2370 )
increase await timeout in ContextRegisterListenerTest and SpringMvcClientBeanPostProcessorTest to allow more time for countdown latch to complete successfully
change log level to debug for thing effect light type detection ( # 1588 )
fixed bug in asynctaskmanagerimpl - if execution be reject , return it to the queue for next turn .
updated method signatures and error messages in Reporter and ReturnsSmartNulls classes for improved clarity to enhance code readability and provide more informative error information for better debugging
changed variable name from ' Frame ' to ' DataFrame ' in DataGenerator . java to improve code clarity by using consistent naming conventions
updated multiple package - info . java and module - info . java files for consistency to improve readability and maintainability of the module documentation
added a check for non - empty physical column names in the OrcPageSourceFactory and created a new test method for ORC file handling to ensure proper handling of empty column names and improve test coverage
fix mix play method cla [ need backport ]
modified JComponent and SynthTextPaneUI classes to improve code structure and maintainability
updated calculations for the firstConfirmedCenter and adjusted test dimensions in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to ensure accurate positioning of the first confirmed center and enhance test coverage
removed unnecessary checks for presence of leadingIncludePaths in PreprocessorDelegate . java to simplify the conditionals for clarity and maintainability
- fix npe when evaluate a matrixmultiplication expression with null value
fix for # 401 , add search to the proxy
defaultaudiosink : use a minimum sampling value when the sample rate be not specify .
added formulaparameter . getformulaptring ( ) to allow xssfname to have formula value
increased the target value from 60000 to 90000 in HighDimensionsTest . java to adjust for larger dataset targets to accommodate increased scaling requirements
[ gml - 6541 ] do n ' t throw indexoutofboundsexception when check for constraint of type 0
added unit tests for ClassPathXmlJobRegistryContextTests to ensure proper functionality of job retrieval and context configuration
changed data types of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to accommodate larger data values and improve precision
camel - 12320 : camel - restlet should mark the endpoint a deprecated ( # 12320 )
camel - 14263 : camel - log - dsl - remove default showout parameter . this be already support by log4j2
replaced direct calls to ` submitTraceEvent ` with a new method ` writeChromeTraceMetadataEvent ` to improve code organization and encapsulate event creation logic for better maintainability
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to improve the accuracy of the order management by filtering out irrelevant order statuses
added pixel offset calculations and validation to ensure correct image layout to improve image processing accuracy and handle potential layout errors
updated Event and JrubyEventExtLibrary classes to utilize RubyTimestamp for timestamp conversion to improve timestamp handling and maintain consistency with Ruby ' s built - in timestamp utilities
added a check to return the resource if a real path does not exist in the WebAppContext to improve resource handling and ensure the server correctly handles paths that do not exist
updated the name handle in ScriptFunctionImpl to correct the function name to ensure proper functionality by reflecting the actual function type
fix jedittextarea scroll bug for mac o x
fix crash due to callerloopscope be null value
test : migrate sniperjavaprettyprinterjavaxtest to junit 5 ( # 4501 )
wrap URLOutputStream in a try - with - resources statement and update exception message assertions to compare to compressing whitespace to improve resource management and enhance exception message accuracy in tests
added @ Entity annotations to Mail . java to facilitate entity - related modifications in the Mail class
updated default values of ` includeTablespace ` from ` false ` to ` true ` and modified the ` includeTablespace ` logic to enable the tablespace configuration and improve the flexibility of table management
added getter methods for metaDataBuffer ( ) and valuesBuffer ( ) in CountersReader . java to provide access to the underlying buffer for better data handling
added functionality to clear empty file vectors in ScanBatch and created a test for it in TestJsonReader to ensure proper handling of empty file scenarios and verify functionality through testing
updated failure strategy to include custom naming for string comparisons to enhance failure reporting and improve clarity of failure messages
[ pytorch ] fix pytorch engine ( # 1358 )
updated catch blocks in JrtJavaBasePackages . java and PackageHelper . java to catch both Exception and Error instead of ClassNotFoundException to improve error handling by addressing more general errors
hbase - 26975 masterfilesystem # writefs ( ) should check if in safemode before write data to disk ( ted yu )
updated error message formatting in TranslatingJavacPhaseTracer . java to include exception type to improve clarity of error reporting for better debugging
[ mng - 7642 ] remove defaultplugincache . clone since it ' s superfluous .
fix jabber contact status change . it ' s not actually update the parent group ' s contact , but it ' s online .
remove getrequestxxx / withresourceandparams from getrequestdetails since it have be replace by getresourceandparams .
added integration test for fetching account information in the BTCE exchange to ensure the PollingAccountService correctly retrieves account information from the BTCE exchange
added mouse wheel functionality to VDUInput and vt320 classes to enhance mouse input handling for better user experience
fix problem with . lwjgl . librarypath system property change ( # 1182 )
# 961 - remove @ columnhstore ... migrate to @ bean ( annotation = @ bean . deprecate )
add player _ SKIN _ FLAGS field in metadataindex and update doc
attempt to fix flaky test case with master url .
fixed an npe in mapservice . getaddressfromeventdata ( ) when event data be empty .
updated os version retrieval to use AccessController for enhanced security to improve compatibility with modern Java security practices
added a configuration file suffix constant and updated file suffix handling to improve flexibility in file suffix management based on configuration
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure correct handling of message queues and validate functionality through new test cases
ggb - 4496 hide toolbar panel animation in case when the user click on the toolbar
replaced bindConditionally with bind method to handle caret visibility to improve responsiveness to text area when there is no caret
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to incorporate declaredPlatforms from CxxBuckConfig to enhance platform management and ensure consistency across different descriptions
replaced instances of SimpleParameterAccessor with ParameterAccessor across multiple classes to improve parameter handling and facilitate more flexible query parameter management
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerExceptions when passwordAttribute is not provided
add a check to handle array types in DataUtilities and implement tests for default values in DataUtilitiesTest to ensure proper handling of byte and string array types and validate functionality through unit testing
updated SslContextFactory to handle null addresses properly to ensure correct host name verification by allowing client authentication when no address is provided
updated assertions in TestFSTableDescriptors to use assertTrue instead of assertEquals to improve clarity and correctness of cache hit count validation
simonstewart : add a function to delete an exist cookie on w3c
added a new boolean field ` mHasEndedLauncherTransition ` and modified the return condition to include it to ensure that the launcher transition state does not interfere with the existing one
add a ` ` meta charset = ' ' utf - 8 ' ' to the html tag ( which be not utf - 8 )
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
increased the maximum length for HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH in HiveConf . java , updated the statsPrefix calculation in TableScanOperator . java , and utilized a new appendPathSeparator method in Utilities . java to accommodate longer statistics keys and improve path handling in the stats aggregation logic
modified the addition of arrowButton in BasicComboBoxUI . java and added a new class bug6337518 . java to fix issue 6337518 related to arrow button functionality in the JComboBox UI
8151522 : [ testbug ] testrandomaccessbuffer . java need update to copyright header
refactor UserInfoActivity to improve code structure to enhance maintainability and readability of the code
added HomeContentProvider import and modified content URI notification in multiple services to facilitate notification of changes in the content provider
added a background state management mechanism to BubbleTextView and Launcher classes to enhance user experience by managing background interactions more effectively
updated FallbackResponse method signatures to include Throwable as a parameter to enhance error handling capabilities in fallback policies
8057551 : let the - d flag dump _ all _ generate class to disk and work outside -- compile - only mode
[ java ] fix possible npe in uri . gettags ( ) ( # 15388 )
updated regex pattern to allow additional characters after the ' . ' character to ensure correct parsing of SQL patterns containing spaces and multiple matchers
add a title for the action bar in FileActivity and update it in FileDisplayActivity to ensure the action bar title reflects the current state and correctly updates the action bar title
updated the method to retrieve the last convertedElements instead of only the first element in PythonDslProjectBuildFileParser . java and added a new test in ConfigSettingIntegrationTest . java to ensure the parser correctly identifies the last converted elements and validate the functionality through testing
removed the minute parameter from the schedule annotation in CleaningService . java to allow the schedule to be scheduled with a default hour value of 0
hive - 13058 : validate the table path correctly for both partitioned table and structure table in transactionalvalidationlistener ( yin huai via ashutosh chauhan )
solr - 8096 : clarify the javadocs of replicationhandler . getpolling ( ) . add a typo for the polling property .
change the type of generatedKey from int to long and modify the SQL execution command to support larger keys and ensure proper handling of auto - incrementing in SQL operations
simplify the return statement in SimpleReferenceCache . java to improve readability and maintainability of the code
8274234 : [ testbug ] add failure to shouldnotmatch to demonstrate why inlining be fail to inline
camel - 7314 fixed the issue of deadlock between share and custom keep - alive .
deleted the HttpTestAccount001 . java file to the test class is no longer needed for the current implementation
[ dispatchertest ] fix handling of exception in dispatchertest and improve logging .
camel - 2312 : camel - cxf - do not handle message attachment in cxf endpoint . thanks to edward capriolo for the patch .
added a case for the ' ~ ' character in ClientUtils . java to enable proper handling of user input for the protocol
camel - slack : use java . time . duration to set consumer delay . thanks to john taylor for the patch .
make harvesting fireblockharvesting event instead of getblockdrop
adjusted layout parameters for components in TranscodingTab . java and added space before the encodedAudioPassthrough checkbox in JCheckBox to improve UI layout and enhance readability of the checkbox text
added a new file ` bug8057791 . java ` implementing a GUI test for JList rendering to address bug 8057791 related to color selection in different UI themes
8015348 : [ jvmci ] fix off - by - one warning for lambda field in interface
when enabling eth _ network on the mainnet , do n ' t register a websocket method for p2p support
change condition from checking if ' to ' is length to checking if ' to ' is not null to improve null safety and avoid potential StringIndexOutOfBoundsException
drill - 8231 : fix for reading large integer in parquet , thanks to ryan gustafson for the patch .
refactor conditional checks and calculations for better readability and maintainability to improve clarity and functionality of the PortraitPagedViewHandler regarding landscape orientation
added logging aspect and annotation for improved logging functionality in the application to enable unified logging before and after method execution , enhancing debugging and monitoring
updated thread trace string concatenation in QueuedThreadPool . java to ensure proper formatting of thread state information when trace is not empty
updated CacheGenerator and CacheProvider to support multiple implementations to enhance cache generation functionality and improve type safety
bugfix : do n ' t use the total size for the referencemap , it should n ' t be necessary
refactor TypesafeConfigurator to improve type management to enhance code maintainability and readability
add a karaf test for camel - graphql , we can use in a karaf container
added new methods ` bug1 ( ) ` and ` bug2 ( ) ` to generate a specific bug ID to implement functionality for demonstrating a specific bug in the application
remove unnecessary urlencoder . encode call in httpclientintroductionadvice . tostring ( )
replaced the unsupportedPlatformTool implementation with a dedicated inner class for better encapsulation to improve code clarity and maintainability by using a dedicated class for the unsupported platform tool
changed the variable type for loopCount and updated the log message format to improve clarity and precision of recovery delay handling
added the size method to FlightConfiguration and FlightConfigurationImpl classes to provide a way to retrieve the size of the Flight configuration map
[ scb - 2687 ] change addressmanager test to throw nosuchmethodexception
updated separator and row specifications in VLCVideo . java for better layout management to improve component alignment and enhance user interface clarity
rename bisq to bitsquare / github for more accurate link ( # 2382 )
updated the authority string in HomeContentProvider from " com . klinker . android . talon . provider " to " com . klinker . android . twitter . provider " to align authentication with the new application requirements
[ mng - 4761 ] fix user . xml not find error message
added buffer binding for GL20 in VertexBufferObjectWithVAO . java to enable proper buffer management for rendering
updated ServerHttpSecurity configuration methods to enhance security features and improve request handling
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers to HttpClientProperties and CasCoreHttpConfiguration to allow for flexible handling of HTTP headers in the application
add coverity check password vulnerability for expired user
deleted the NoOpConfigPathGetter . java file to the class was deemed unnecessary for the current implementation
replaced Codec . base16Decode with Bytes . fromHexString for signingKey initialization to improve performance and compatibility with byte - based operations
updated FloatUtil to handle float properties and modified inline block positioning to improve flexibility in rendering float values and ensure correct rendering of inline elements
jbrules - 2835 : update doc to reflect new property model
updated DefaultHeaders method to return a MultiMap instead of a Map to improve header handling consistency across multiple classes
ntlm : remove the use of utf - 8 . name ( ) by default , it ' s superfluous .
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to enable retrieval of job ID for better tracking and testing
replaced compareTo method calls with direct equality comparison for comparison objects to improve readability and simplify comparison logic
reduce error log in jdk / http client to debug . ( # 7108 )
updated import statements in LegacyAuthenticationHandlerAdapter . java to correct imports to ensure proper usage of NamedAuthenticationHandler and UsernamePasswordCredentials for authentication handlers
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
fix npe on filtermanager . removefilter ( ) when filter have owner and the same signature
move the wrap method from pgppublickeyring to pgppublickeyring and relate to github # 1020 .
wrapped the initialization of DataOutputStream in a try - finally block to ensure proper resource management and prevent potential resource leaks
hive - 21690 : fix jdbc adapter for select all on view ( krisztian kasa , review by jesus camacho rodriguez )
modified FocusTransitionTest . java to update test cases to improve test coverage for focus transitions
mow - 1098 fix gwt compile error due to correct dependency
phoenix - 1343 counterstatsaggregator should return a counter value for mapredtasks which have no counter
added null checks for the readListener variable in HttpInput . java to ensure the readListener is not null to prevent potential NullPointerExceptions
added a change listener to color selection in the AppearancePanel class to enable dynamic color changes in the color selection
changed the constructor call from false to hidden in TaskHelper . java to allow for more flexible control over the task execution behavior
make the test a little more deterministic and avoid the race condition
pdfbox - 3370 : use file lock to avoid lock problem in ccittifffile
added import for DefaultParameterHandler in LanguageDriver . java to enable handling of default parameter handlers in the SQL execution process
lsra spill optimization : avoid short circuit for a loop
add a new file MicronautAstBuilder . java that defines a method for compiling Groovy scripts and building them sequentially to facilitate the processing of Groovy modules within the project
fix : double call close ( ) twice on result set to improve connection stability
[ java ] default serviceadvisortype to PYTHON to be consistent with other default .
avro - 308 . reduce memory footprint of genericdatumreader . getresolver ( )
change the return type of the Path constructor from Collection to List and update related methods for better performance to enhance flexibility in handling paths and improve memory management during rendering operations
modified the output addition and assertion methods in SendCoinShieldTest . java to use a random byte array to improve randomness and ensure consistency in test assertions
added a method to set a personized date with locale in SkeinParameterSpec to enhance functionality for generating user - friendly date parameters
removed redundant code block from CodeGenerator to streamline logic to enhance code clarity
adjusted scroll direction parameters across multiple classes for consistency to improve clarity and maintainability of the scrolling functionality
changed the pointer field from private to public and added reset methods to allow external access to the pointer variable and provide flexibility in resetting state
rename ` ContentDigestHistory ` class to ` BdbContentDigestHistory ` across multiple files to better reflect the purpose of the class in the application
use ternary expression for boolean cast expression where possible .
replace ArrayList with a boolean for handling all accepts to simplify the logic and improve readability of the code
removed a redundant import statement and added a default value of false to streamline the code for better clarity and functionality
added a method to check if the table ' s auto - increment field is enabled in LiquibaseDataType to ensure proper handling of auto - increment columns in table creation
add default value to errortext to indicate internal server error .
updated imports and added utility imports in DeadListenerTest and LocalManagementTest classes to improve compatibility with test library and enhance performance control features
replaced ` add ` method with ` push ` method for currentStatus and boosterStatus in ` BasicEventSimulationEngine . java ` to ensure proper handling of status changes during simulation
added ajp connector setup and logging for port handling in GitBlitServer . java to ensure proper binding of ports to the GitBlit server
added type coercion handling for compound components and created a new class Intersection03 with assertions to ensure proper type coercion and validate functionality through automated testing
rename embed test to it so it match the junit name
added a native method to start the toolkit thread and modified the initialization logic to ensure that the toolkit thread is only started if it is initially initialized to avoid redundant initialization
localization : add a compressionpool to bundlecontentsubstitutedlocalizationsupport to reduce memory usage
fix to pgraphics2d surface on window if opengl hide them
set the temp directory by class name instead of a hardcoded value to improve test isolation and maintainability by using meaningful identifiers
added configuration options for enabling HTTP services based on full node and solidity configurations to allow dynamic configuration of HTTP service behavior based on user settings
added service property to GoogleCloudFirestoreTicketDocument and updated related methods to include service to enhance ticket management by associating ticket instances with their corresponding services
rename Generate . java files to improve clarity and consistency in file naming
fix scalarfunction to allow null argument to be allow
added a new boolean flag ` DOTS _ ONLY ` and modified related conditions to differentiate between text and icon checks to enhance the badge rendering logic to include a flag for dot notifications only
ww - 4441 freemarkermanager # getconfiguration should not be final
ww - 4187 add an exception throw for invalidExcludedpackagepatterns with a parameter
modify deviceUdid initialization to conditionally handle " mac " platform to improve flexibility in choosing the platform used for test execution
updated DefaultHttpClientFilter to log warning messages and modified exception handling in tests to improve error reporting and ensure proper response status codes are returned for forbidden operations
refactor the binding and execution of the root script and state saving logic to ensure scripts are correctly initialized and executed during the initialization process
added a static boolean flag ` TEXT _ BURN ` and modified the conditional check for it to ensure shadow layers are set for better text visibility
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure a clean state before tests to prevent data loss
added retrieval of parser from SecurityNamespaceHandler to enhance namespace handling by retrieving parser information
adjusted formatting in BoundedLocalCache . java and added a new test method in BoundedLocalCacheTest . java to improve code readability and ensure proper cache movement functionality
modified the ` RawConnection ` interface to extend ` WebSocketConnection ` and modified the close method to improve WebSocket connection management and enhance data flushing
added multiple assertions to SoftAssertionsPerfTest for better coverage to enhance reliability of tests by allowing for more flexible validation of assertions
added handling for test failure codes in PythonRunTestsStep and modified ProjectWorkspace to public to ensure appropriate exit codes are returned for Python test failures
updated the handling of xAdvances in GlyphLayout . java to ensure proper processing of xAdvances when markupEnabled is true
refactor score handling in TestBooleanRewrites to use Java streams for better readability to improve code clarity and ensure accurate comparison of expected and actual scores
update the method used to retrieve the enclosing class in TypeHandlerRegistry to ensure correct class hierarchy handling for anonymous classes
remove code duplication relate to socket flush / flush
added an initialization check and modified the removal of OnDrawListener in Launcher and LauncherAnimUtils to improve performance by ensuring listeners are only registered once and are removed correctly
refactor multiple classes related to index handling and factory methods to improve code organization and maintainability
replaced specific import statements with wildcard imports and modified condition check to exclude NOT _ APPLICABLE to simplify import statements and ensure that the condition only applies to applicable conditions
change the default return value of a method from false to true to enable the MEDIAPARSERV2 option to ensure the LibMediaInfoParser is enabled by default
include inherited method from aop proxy ( # 6301 )
added permission checks and table deletion in FolderPermissionBase . java to ensure proper permission handling for warehouse and partition operations
fix issue # 36 : publish the status of a provider due to the wrong state .
updated color calculation in PastelColor . java to use a calculated color base to ensure consistent color representation and improve code readability
modified the ScriptEngineFactory class implementation to improve performance and maintainability of the scripting engine
updated the handling of bitmaps in the HolographicViewHelper to include original and outline variants to enhance visual representation and functional clarity in the interactive state management of the view
cloudclient : fix npe while parse request method
tweak multicontainer . gettag to use the parent of the tree instead of the tagger for the text that contain the word .
[ hotfix ] [ test ] remove unused import of ioexception
updated class loading logic to differentiate between Hive PasstHROUGH _ OF _ CLASSNAME and Hive output format handling to ensure compatibility with different Hive output formats during runtime
add warning on use of non - deprecated api when building chunk .
added bounds checking for ' start ' and ' length ' in DOMBuilder . java to ensure valid input for ' ch ' to prevent potential errors
updated conditional logic in ClusteringCoefficient , EigenvectorCentrality , GraphDensityUI , and NbBundle for consistency across multiple classes to improve code correctness and ensure accurate messaging for different graph types
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , fixed c
added a new file ` TestClass ` implementing interfaces with static and default methods to demonstrate the usage of static methods in interfaces and their default methods
camel - 5014 : fixed password in default key selector . thanks to jens kleine - herzbruch for the patch .
replaced the handling of ThreadDeath exceptions by directly throwing the caught Throwable instead of checking for ThreadDeath to simplify error handling and reduce unnecessary type casting for ThreadDeath
renamed multiple Java classes related to key management and security policies to improve clarity and maintainability of the codebase
updated JGit version from " 1.0 . 0 - r " to " 1.1 . 0 - r " and refactored jars to include multiple versions to reflect the latest version and ensure compatibility with new features
add conditional handling for client path in HttpClientIntroductionAdvice . java to ensure clientKey is set correctly when it ' s not already set
int - 1414 add namespace handler for ' transformer ' endpoint and a unit test to make it easy to plugin custom transformer .
replaced the BACK _ FACTOR constant with a REWIND _ TIME and updated related conditions to improve clarity and precision in time comparison logic
added a method to check if the scroll wheeling state is active in CodenameOneImplementation and JavaSEPort classes to ensure that actions are only fired when the scroll wheeling feature is disabled
updated usage formatting in utilityCommands and modified usage string handling in DocumentationPrinter to improve readability and ensure proper empty string handling for empty command usage values
corrected the attribute name from " collection . map " to " collections . map " to ensure consistency in naming conventions for collection data
remove unused method from crossspacecompactionresource ( # 10720 )
fix checkstyle issue in examples / Observation . java ( # 797 )
refactor : only synchronize the ruleset when update project
fix a synchronization issue . when two thread resolve sootfieldrefs with phantom field , this could lead to a deadlock .
change name convention in elastic meter registry ( fixes # 27 )
added methods for listener management and Gcode command creation in IController and TinyGController , and updated BackendAPI to use IController instead of AbstractController to improve flexibility and functionality of the controller interface while standardizing the controller type used throughout the application
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to ensure the rendering of horizontal lines is working correctly
replace System . out . print statements with TTY . print in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to improve code readability and maintain consistency in output formatting
refactor multiple classes related to OAuth and response handling to improve code organization and enhance maintainability
updated condition from " frameLength = = 0 " to " frameLength < = 0 " to ensure proper handling of frame length values
added assignment of zeroValue to IntFloatMap and IntIntMap classes to ensure consistent return value handling for zero values
fixed issue where imagedownloadservice could fail to update component form when the size change .
added null check for handler registration and modified demand check to improve robustness by preventing null pointer exceptions
remove unused native method hasNextSibling in Node classes and update return statement in IeNavigator to streamline code and improve readability by reducing unnecessary native method declarations
fixed - npe in redisdistributedmapcacheclientservice . getvalues ( ) method if redis do n ' t return value ( addendum )
updated log messages in MobFileCache to include cache size details to improve clarity of cache initialization status for better debugging
modified ColConvCCMTest . java file to enhance test coverage and fix existing test failures
replaced instance variable declarations with local variables for ` target ` and ` allowCovariantReturns ` , and updated method calls accordingly to enhance code clarity and maintainability by reducing instance variable usage and improving scope handling
pdfbox - 2852 : remove some eclipse warning , apply the patch with thanks .
updated Json serialization method to use asString ( ) instead of asFloat ( ) and added a new class X with functionality to improve type handling and provide a structured representation of JSON data
camel - 15624 : avoid race condition when attempt to delete a file due to lack of data in cache
added a new Runnable inside EventQueue . invokeLater for asynchronous execution to improve UI responsiveness by ensuring tasks are executed on the Event Dispatch Thread
updated the calculation of the max size in the CompressExtension class to ensure the correct maximum size is used based on the policy
updated steeringValue calculations in multiple test classes to adjust the steering value during testing
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve precision and leverage security features for password comparison
updated date handling in JdbcSerDe to utilize LocalDateTime and LocalDate for better date conversion to improve accuracy in converting dates and timestamps to local date and time representations
update VERSION from 2 to 3 and modify metadata handling logic to support new features and improvements in metadata processing
added FlywayAutoConfiguration and FlywayInitializerJpaConfiguration to enable dependency injection for Flyway and its tests to enable better integration with JPA and ensure proper initialization of Flyway instances
javainterop : fix # 1883 classloadexception when run with - dtests . multiplier > 1
added a method to retrieve the current stable state in LauncherStateManager and updated AbstractLauncherUiTest to use this new method to improve code clarity and encapsulate functionality related to launcher state management
refactor SharedInformer class for improved readability to enhance maintainability and reduce complexity in the codebase
8274234 : [ testbug ] restore java / lang / invoke / testclosescope0 . java for jdk 16 broke
increase test timeout due to time issue on build server .
modified CaptchaChannelProcessorTests . java to improve test coverage to enhance reliability of certificate processing functionality
fix item ownership after import them . patch contribute by sebastien mazy .
added retry logic for saving registry cache files in AbstractRegistry . java to enhance reliability by retrying failed configuration attempts
replaced ` mergeDirectory ` with ` directory ` in the TrackingDirectoryWrapper initialization to ensure the correct directory context is used for tracking operations
fixed bug 119808 - unusedimports no long report a false positive for a few case where
hive - 26475 : iceberg : prevent insert overwrite on bucket partitioned iceberg table ( adam szita , review by peter vary )
updated assertions in BootstrapTests to reflect correct expected number of keys and added a check for legacy SAML keys to ensure accurate validation of SAML configuration keys and verify legacy SAML keys in tests
clarify handling of non - static inner class in excluder
synchronize on the socket to avoid a deadlock . no functional change .
removed specific comment constants related to WAITING _ FOR _ LINE _ BLOCK _ COMMENT and WAITING _ TO _ LEAVE _ BLOCK _ COMMENT to streamline code by eliminating unused constants
added IOException handling to lock release methods in IndexWriter , Lock , and NativeFSLockFactory classes to improve error management and ensure proper resource cleanup during lock release
changed package declaration from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to better organize test - related classes under a more appropriate package
added a check for unary operators in SpelExpressionTransformer and modified return logic in LiteralNode and OperatorNode to ensure proper handling of unary operations and simplify operator node checks
updated ByteBuddy instantiation to disable type validation to improve compatibility with byte buddy ' s type handling
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` and update related method names to improve type handling and clarity in the code
updated lock handling in LockModePessimisticReadWriteIntegrationTest and adjusted lock timeout values in MySQLTableLockTest and MySQLTableLockWithEmployeesInFirstDepartmentOnlyTest to ensure proper exception handling for lock scenarios and increase lock timeout for better stability in tests
move logfiles from loglistener to logevents so it can be reference by application PID
added HTTP redirect handling and updated connection logic in ServiceApiRequest . java to improve HTTP request processing and ensure proper connection management
added new constants for service and version mappings in ServiceCombConstants and enhanced microserviceFactory to use these new configurations to improve configuration handling and flexibility in accessing service and app information
changed the property name retrieval method in ToeThread . java from proc . getName ( ) to proc . getBeanName ( ) to ensure the correct bean name is used for processing steps
replaced direct database path construction with a static prefix and updated database validation logic to enhance code readability and ensure database integrity during tests
updated the method to return the unread count to use the current account to improve accuracy of unread count retrieval in the HomeFragment
renamed the method ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool ` to clarify the purpose of the test and add a new test for virtual thread pool previews
modified the ` getAllOrder ` method to accept a ` long limit ` parameter and improved the handling of the ` MARKET _ COUNT _ LIMIT _ MAX ` value to allow a limit on the number of market orders and enhance data accuracy
added a null check for the user before querying user settings to prevent potential null pointer exceptions when retrieving user settings
[ hotfix ] fix localfilesystem . match not work for relative wildcard path
added constants for maximum width and height while modifying instance bounds to ensure that instance dimensions do not exceed defined limits for better layout constraints
updated CommonsHttpSolrServer to improve connection manager timeout handling and logging to enhance reliability and provide better logging for connection management issues
replaced ExceptionHandler with direct exception handling in PrintController . java to improve error handling by avoiding unnecessary exception logging
refactor CrateType to use . map instead of Optional for formatting filenames to simplify code readability and reduce boilerplate
added validation for input strings and utility methods in SpellChecker . java and created a test case in SpellCheckerTest . java to ensure correct handling of input values and validate functionality through unit testing
no actual changes were made to the MESSAGE constant in HelloWorld . java to maintain consistency in message formatting
added file action handling in the FileDisplayActivity class to enhance file display functionality to improve user interaction with file actions within the application
hbase - 23652 log replication time and config file in a daemon mode should not cause daemon failure ( liu shaohui )
updated the update method call syntax in StoreCachedTest . java to ensure consistency in code formatting
refactor StreamerLoader constructor to accept MaterialHolder instead of materials to improve flexibility in loading streamer materials by allowing multiple materials to be assigned directly
added additional gdx - controller - gdx - backend - gdx - controllers - gdx - controller - gdx - backend - gdx - controllers - gdx - controller - gdx - backend - gdx - controllers - gdx - controller - gdx - backend - gdx - controllers - misc .
added recycling of recycler view pool in AppsContainerRecyclerView to enhance visual layout by enhancing grid row allocation
added a new test method ` testBuildingBinariesSeparately ` to verify the build process functionality to ensure that the build process works correctly and adheres to expected standards
fix baritone control not work with minecraftable . close # 352
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to support additional parsing and resource access functionalities in the procedure change process
added null handling support in FilterOperatorUtils and created a new test for range filtering in QueryOperator to enhance query capabilities and ensure proper handling of null values during range queries
update bootstrap method argument validation to ensure only valid signatures are used to improve error handling and maintainability of the bootstrap method
try to fix the ci test error of camel - jms
remove clearing of file names in CucumberInstrumentation to improve performance by avoiding unnecessary file loading operations
change the type of the contacts list from RegisteredService to DefaultRegisteredServiceContact and update the return type for better type safety to ensure proper handling of service contacts and improve type safety in the code
updated workspace cell padding logic in DeviceProfile . java to ensure proper visibility of workspace labels based on cell size
refactor assertions in ReplicationFactorTest for clarity and consistency to improve readability and maintainability of test code
[ gr - 21605 ] llvm be pre - initialized by auxiliaryenginecache because it define llvm # patchcontext ( ) , but llvm do not support pre - initialization .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to enable execution of tests that were previously ignored
replace RuntimeException with JsonIOException in error handling to provide a more specific exception for JSON - related issues
fix java 1.4 compatibility issue with jdk 1.6 .
updated error messages and modified directory handling in Copy . java to improve clarity of error messages and ensure correct directory size during copying
refactor segment name validation logic by introducing a new method ` isHighLevelConsumerSegmentName ` to improve code readability and maintainability by encapsulating the segment name validation logic
added startActivity and startActivityForResult methods to ShadowFragment , and created corresponding test cases in FragmentTest to ensure proper handling of activities and exceptions when a fragment is not attached to a container
modify return statement to use clockReader ' s current time instead of the current time to ensure accurate datetime conversion by using the current time from the clockReader
updated the return statement to include a specific CPU option for x86 _ 64 - none - linux - android to enable compatibility with 64 - bit Android targets
added a method to delete specified account files in FileDataStorageManager and implemented a corresponding delete operation in ManageAccountsActivity to improve file management by allowing for efficient deletion of account files
updated command line option for " - h " in SchemaCrawlerCommandLine . java to improve clarity of help output for users
added a method to create a suite description with a unique identifier and updated equality checks to use this unique identifier to improve description creation functionality and ensure unique identification for tests
refactor SnapshotThread to use MultiFormatReader for decoding barcodes to simplify the code and improve readability by using the appropriate decoding method
removed unnecessary ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor and reduce unnecessary dependencies
added unit tests for range calculations in GWCZoomContextFinder to ensure correct range validation for grid sets and broker configurations
added support for dependency tracking in JRubyScriptEngineConfiguration and updated the JRubyScriptEngineFactory to ensure dependency tracking functionality is conditionally enabled based on configuration
update request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` to ensure correct validation for the request path
handle already add table and column family migration more gracefully . patch by jbellis
refactor WelcomeWindow to utilize a cache image for improved rendering logic to enhance performance by reducing rendering overhead when the background image changes
restructure tuner configuration so that they can be resubmit to the libusb
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enhance functionality by integrating test capabilities for ShBinary handling
added conditional logic to include " db : hsqldb " in TestFilter . java to ensure proper handling of database connections
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
truffle : do n ' t materialize stack trace if there be no other exception .
add jvm ci export to graalservices . load ( service )
add unit test for duplicate command handler resolution in aggregateannotationcommandhandler
[ flink - 20865 ] [ stream ] add fine - grained shuffle mode option to config
fixed entityfish hook not use blockstate . getstate ( ) when check for block placement . close # 1564
camel - 8561 : create an aws - ftp component base on sdk v2 , fix description
renamed method and variable references from ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
hbase - 23343 addendum . add option for compress package name in gangilia reporter ( # 944 )
added a check for empty items in AppsContainerRecyclerView to prevent further processing when there are no items to display
added a conditional annotation for the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration . java to ensure bean creation only if it does not already exist
- add support for mdc property in xmllayout a find in lbclassic - 22 contribution
added support for omitting response headers in CommonParams and related classes to enable flexible control over header processing during response generation
fix bug # 51197 - use getpropertynumber ( ) instead of getid ( ) for the property
replace ` Description . getBuildRuleType ` calls with ` Description . getBuildRuleType ` call to ensure consistency in method usage and improve maintainability
added scene modification in SootClass . java to ensure proper hierarchy modifications during method calls
add null check to avoid npe in tradedisputedatavalidation . validate
added an ` getObjectHash ` method to ` AbstractNamedObject ` and modified several methods to include a ` table ` parameter to enhance object hash generation and improve column retrieval functionality by allowing for additional table context
change transaction confidence type to not _ SEEN _ IN _ CHAIN when send a wallet . resolve issue 43 .
fix # 4246 : support multiple header in httpclient . thanks to bilgin for the patch .
[ 3.0 ] ignore certain field when process json conditions
hbase - 27373 possible deadlock on hregion # close ( )
replace redundant length comparison with variable for better readability and efficiency to improve code clarity and maintainability by reducing redundant checks
[ java ] do n ' t re - register a subscription when it have an image before it be send to a client .
[ hotfix ] make testjvmprocess . destroy ( ) interruptable
mondrian : fix break test for oracle .
camel - 3916 : avoid npe when connect to a mail store and ca n ' t connect to it
added parsing logic to handle cases where tokens in the document have not been consumed to ensure that a parsing cancellation exception is thrown when there are more tokens in the query that have not been consumed
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` k ' ' complete
add datafile attribute to hmmmodel ( fix # 1043 )
added email domain features to LdapIdentityProviderDefinition , IdentityProviderDefinition , and IdentityProviderEndpoints classes to enable flexible email domain configuration for LDAP identity providers
added new configuration constants for read and connect timeouts in the configuration classes to improve code maintainability and allow for flexible timeout settings
add defensive code to the terminate loop ( # 2171 )
added RedisCategory annotation to RedisServiceRegistryTests to categorize tests as related to Redis integration
updated test classes to use ParameterizedTest and modified method parameters for null and empty source handling to improve test parameter flexibility and enhance test coverage for new functionality
updated the paintComponent method in WaterfallPanel . java to ensure proper image height handling in the UI
removed unused import statements from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
updated ContractEventTriggerCapsule and LogEventWrapper to use eventSignatureFull for signature handling to improve clarity and maintain consistency in event signature management
update filter condition to only filter against " _ " for session ID to improve accuracy of file path filtering based on session ID
replaced clearing of rectangle with filling of the background color using ` getBackground ( ) ` and ` fillRect ( ) ` to ensure the background color is preserved during rendering
fix for : add packagecompilationdata ( ) if there be no invokers
removed unnecessary print statements from multiple Java files to improve code clarity and reduce unnecessary console output
added a check for NaN scores before assertions in TestFieldCacheSort . java to ensure that score is validated correctly when it is NaN
[ dubbo - 2404 ] fix nullpointerexception in devicestate # getentitykeys ( # 24049 )
added handling for zero time strings in ColumnSnapshotGenerator and introduced a test for date default values in MySQLIntegrationTest to ensure proper handling of zero time values and validate database schema changes
rename multi - signature key to btc public key ( should use taker btc wallet )
updated method signatures to use generics for better type safety to enhance code clarity and prevent potential type safety issues
[ bz - 1155852 ] avoid npe when edit a session model in a kiesession ( # 11015 )
updated the initialization of HiveMetaStoreClient to use ` this . conf ` instead of ` conf ` to ensure proper context is used for the MetaStore client initialization
make modal base ui change in taskview only if modalness change .
add a test case to validate the creation of codec profile levels in ShadowMediaCodecList to ensure that codec capabilities correctly handle different codec formats
fix issue # 5460 ( when enter key use , focus be wrong )
added validation for width and height , handled potential OutOfMemoryError , and ensured valid XRSurfaceData is used to improve robustness and error handling in image creation processes
updated the delimiter for the thousands in the UV locale to ensure correct representation of the UV locale in internationalization
replaced integer array with AtomicInteger for thread safety in AsyncStressTest and StressTest classes to improve concurrency handling and ensure safe access to thread data
added beta flavor functionality to AchievementsFragment and LeaderboardFragment to handle unavailable beta states to enhance user experience by providing feedback when beta flavor is unavailable
added access and name and desc fields to the SearchMethodVisitor class to ensure proper context - based access and retrieval for improved functionality
added sleep calls in IoTDBInsertWithoutTimeIT and updated exception handling to include InterruptedException to introduce a delay for synchronization during test execution
restructured the code for better readability in DLNAResource . java to improve maintainability and clarity of the media duration setting logic
camel - 8999 : apt compiler to generate json schema documentation for the xml module , whcih we later use to enrich the xml xsd to include documentation . work in progress .
fix ( core ) : fix deadlock problem when read table and there be too many transaction .
flume - 2704 . make keymanager and trustmanager configurable . change to use the tl . keymanager . algorithm from the security property .
refactor ` PrimitiveWrapperClassConstructorToValueOf ` to use ` Applicability . or ` instead of the ` JavaIsoVisitor ` implementation to improve code clarity and maintainability by leveraging the new ` Applicability ` API
fix blockmania . tab not work in repeat event . close # 268
replaced occurrences of ` PACKAGE _ PRIVATE ` with ` NONE ` in multiple files to standardize return values to improve clarity and maintainability by using a more descriptive constant name
renamed method ` unHandled ` to ` unhandled ` and introduced a new class ` T6199153 ` with error handling logic to improve clarity in method names and enhance error reporting for better debugging
updated OrcInputFormat to correctly retrieve stripes and stripe statistics from ORC files to ensure correct handling of stripe statistics for different input formats
added a null check for the exception variable before proceeding with further processing to avoid potential NullPointerExceptions when handling exceptions
make myhentaicomics . com secure ( # 2623 )
add commandline argument handling and an option to show the current version in the app to improve user experience by providing a quick version check option
fix export list for applet with space ( bug # 1588 )
added rotation handling in ConsoleActivity and TerminalView for better user experience with keyboard shortcuts to enhance user experience by providing default orientation when keyboard is n ' t active
changed the type of the ` hq ` variable from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` to ensure proper type safety and eliminate unchecked cast warnings
check for null owner connection address before try connect to connect
camel - 4906 : added annotation to managedcamelcontext to allow to turn off the header map factory .
added a single quotes around a closing brace in JavaCompiler . java to ensure proper syntax and syntax in the compiler
int - 1257 added initialization to the outbound - gateway bean and a new parser for the jms namespace handler
adjusted the index parameter in the ArrayFunctions class from ' i + 1 ' to ' i2 ' to correct the logic to ensure proper handling of array operations
camel - 10266 : fixed classloader issue when add scripted processor ( # 10278 )
added support for Postgresql ' s PGStatement class in Proxy . newProxyInstance calls to enhance compatibility with PostgreSQL ' s built - in statements
updated method names to include ` flushMemTables ` and ` flushMemTablesAndRefreshSizeEstimates ` for better clarity to ensure that the memory table and size are properly flushed to the database
reduce log level when fragment limit be insufficient .
modified compaction controller to ensure minTimestamp is set correctly and added a new test for aggressive fully expire TTL to improve accuracy of timestamp handling in compaction scenarios and ensure correct functionality of TTL expiration feature
fixed - rblockingdeque . toseconds ( ) method may return nan if timeout be less than 1 second # 4357
removed unnecessary " format " parameter from JobInspectCommand to simplify output formatting for improved readability
fix documentation for miss engine class ( # 641 )
fix class loader bug in childholder # getchildren
[ issue # 6740 ] fix bug of rocketmq remoting command not work in karaf ( # 6741 )
change condition from " numIndexDims = 1 " to " numDataDims = 1 " to correct variable name to ensure proper functionality
[ hotfix ] fix npe in notebookserver # run
rename variable ' funN ' to ' lt ' in expressionnodeevaluator to make it more concise
removed the public access modifier from the verifyIdsAreStable method and getNodeId method to enforce encapsulation within the NodeIdAccessor class
cloudstack - 8727 : error message when create snapshot policy fail due to invalid storage pool .
removed the ` public ` access modifier from method declarations in ` ItemWriter . java ` to enforce encapsulation within the package
updated the ThingImpl constructor to include a " test " parameter to facilitate the testing of the Thing implementation using a specific test case
fix tostring ( ) on imagenamesubstitutor to always return the description
replaced FSDirectory with RAMDirectory for directory initialization to improve performance by using in - memory directory for testing
add a check to ensure the text height does not exceed the buffer ' s height to improve layout consistency by accounting for potential text height issues
refactor WalletAppKit class for improved clarity to enhance maintainability and reduce technical debt
# 207933 - refactor hat . js and hat _ nashorn to conform to proguard
fix npe when remove a chat transport from the selector box .
added resolve and replace methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes to enhance functionality and flexibility of template handling in data import handlers
add a nullable annotation to handle potential null values when updating the bsq block chain explorer to improve robustness by preventing potential NullPointerExceptions when the bsq block chain explorer is not available
added attribute management methods to StandardSession and Session classes to allow better management of session attributes and improve data retrieval
added assertions to verify the employee bean ' s name and alarm in TestDbJson _ List . java to ensure that employee beans return expected values for correct data handling
replaced pageSize with initialPageCount in MonotonicAppendingLongBuffer . java to ensure the correct array size is used for retrieval
polish ` ` add batch - line option ' '
added SQL data source and transaction manager beans to BatchMetricsApplication to enable support for HSQL database connections in the application
implemented HttpService interface in GlowrootLogHttpService . java to enable HTTP service functionality for improved performance
pdfbox - 2843 : set the stroke to the internal state , a suggest by michael klink
removed synchronization from close method and refreshed IndexFileDeleter field in IndexWriter to improve performance by reducing unnecessary synchronization during segment closure
added methods to retrieve and set multiple and validation properties in UiBinding . java to enhance the flexibility of property management for UI components
updated method calls to use ` setReflectively ( " name ( ) " instead of ` name ( ) ` for better readability to improve clarity and consistency in method naming conventions
fix save ( ) to not update the subtree when add a new subtree
refactor Affix class to use a map for condition patterns and update related methods to improve pattern management and support for seen patterns in the Dictionary class
replaced the explicit type argument of ` ArrayList < KrakenFee > ` with the diamond operator to simplify code and improve readability by reducing verbosity
removed the import of CharTermAttribute and its retrieval from DefaultIndexingChain . java to streamline the code by eliminating unused dependencies
updated NBJavacTrees class to improve functionality to enhance performance and maintainability of the code
removed an exception throw for unsupported data encoding in VectorizedPrimitiveColumnReader . java to simplify error handling for unsupported data encodings
added a static import for MarkerFactory and modified logging logic in HttpSolrCall . java to improve code clarity and ensure consistent logging practices
destroy metadata service proxy when service instance be remove . ( # 9735 )
add a maximum level limit to defaultentityqueryrepository to prevent infinite recursion
added null check for changelog registration in HubChangeExecListener . java to improve communication failure messaging for better user experience
add a try harder hint to the abstracttelortestcase to help diagnose the failure
updated the ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of ` int ` and added a new test for error handling in ` CxxPreprocessAndCompileStep ` to improve type safety and ensure comprehensive handling of compilation results
updated event handling logic in ObjectStore . java to ensure proper maximum events to prevent out - of - bounds errors during event processing
change the support check to always return true to allow validation of @ configurationproperties bean be consider a @ validation .
fixed issue in block entity aware world that cause them to be delete before clear them .
remove dead code in intrinsifyarraycopyphase that be identical to intrinsifyarraycopyphase
enable debug log to investigate gump failure
replaced the WantedAnywhereAfterFollowingInteraction class with more descriptive stack trace information to improve clarity of stack trace messages for better debugging
added null checks for account and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure proper handling of missing accounts and improve error messaging when invalid addresses are encountered
scriptlauncher : use treemap to sort command by name , to make it easy to read
fix : [ cloudplatform ] add v2bet and v2bet namespace to protobuf ( # 9672 )
replaced multiple calls to ` addProperty ` with ` property ` for setting properties in ` BaseSingleTreeBuilder . java ` to improve code readability and maintainability by consolidating property management
updated AsmLibraryLoader to use the interface class loader and added constructors to AsmLoader to ensure proper class loading and initialization with the appropriate ClassLoader context
pdfbox - 3546 : avoid npe and check for initial moveTo , and update cosdecode to use the color space method to improve robustness
updated Java2TypeScriptTranslator to adjust export namespace handling based on definition scope to improve code clarity and maintain consistent formatting for TypeScript export definitions
replaced EmptyServerHandler with AbstractHandler to manage input / output streams to improve file handling and ensure proper output stream management for HTTP requests
removed unnecessary String array creation for listener arrays in HelloInput . java to simplify code and improve readability by using direct string literals
hhh - 15420 avoid npe in findpath method of abstractsqmpath # geths ( ) if it be null
updated package structure for test classes to improve organization and clarity of test structure
fix for freeze on mac o x , also fix bug concern grayscale in awt .
[ gr - 37894 ] fix jvmciversion when in native image .
[ beam - 10670 ] remove dataflowportabilityapiunsupport from test .
fix bug in mockphishingprotectionservicev1beta1impl where response . remove ( ) return null
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
log warn when max - size per _ node config do not allow any data in map
javadoc update to reflect new lst spec
fixed bug in thread - acousticscorer . getall scoreable ( ) method that return null for all scoreable
nethooks . run : do not throw an assertion on first call , just return null .
updated method calls and variable names in ApplicationControllerFluentLeniumTest . java for clarity to improve readability and ensure consistency with the window implementation
added default method makeString in ParallelIterable , RichIterable , and AbstractMultiReaderParallelIterable classes to provide a consistent way to construct strings with specified start and end parameters
replaced direct reference to ` Ordered . HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` in ` OidcServicesManagerRegisteredServiceLocator ` to improve code readability and maintainability by using a named constant instead of a magic number
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer and updated related methods to enhance the validation of weak associations and improve the handling of proposed weak associations
refactor Deflater class for improved performance to enhance compression efficiency and speed
added error handling for IOException in Font . java to improve robustness by converting exceptions into IOExceptions
[ gr - 46711 ] fix error return empty version for empty string in typebinding .
refactor ` NearbyListFragment ` to streamline place loading and attribute handling to improve code readability and maintainability by reducing redundancy
( chore ) camel - core - languages : avoid check for lowercase content type
github - 1045 : add opensh key format to comply with openssl standard .
modified the updateItemLocationsInDatabaseBatch method to accept a boolean parameter for managing folder name suggestion to enhance flexibility in updating item locations based on whether the folder name needs to be bound
replaced specific Hibernate annotations with wildcard imports and added entity retrieval for PostgreSQL to streamline import statements and ensure proper entity access within the JPA context
updated import statement for DefaultOAuth2RequestFactory and added a new method to TofuUserApprovalHandler to ensure correct import path for DefaultOAuth2RequestFactory and enhance user approval handling functionality
fix influx name convention application ( fix # 645 )
change to use dump ( ) instead of print out + print out
6986400 : change cookie to cookie2 in 6980004 fix
added a method to check if a class is not available in a Platform class to improve error handling by explicitly indicating unsupported methods
added functionality to manage the visibility of the mClearAll button based on user preferences to enhance user experience by providing clear - all functionality based on user preferences
changed ` desiredRepoVersion ` to ` final ` and updated the persistence logic for ` ClusterStackVersionResourceProvider ` to ensure ` desiredRepoVersion ` is immutable and improve error handling when creating cluster stack versions
remove memoryleaktest since that be a fragile way to check memory leak . we can detect memory leak in our stress test
updated the return statement in ServletTester to conditionally include the local host and port to ensure correct formatting of the local URL by including the local host and port
added a check for MVDWAPI feature in ServerListener and updated related settings to enable MVDWAPI integration and provide clearer guidance on supported plugins
fix partition assignment test by assert cluster size before terminate node
added SingletonHolder to manage FFI provider instances to ensure a single instance of FFIProvider is used throughout the application
tika - 3864 -- add test for hierarchical file list which be fix by tika - 3864
added null checks and updated property handling in MongoTemplate and MongoTemplateTests to ensure robustness against null values and improve test coverage for saving functionality
fix nodeclass . getchild ( ) to return a node _ list , not the same a 0
added accTradeValue field and corresponding getter method to BithumbTicker and updated TradeHistoryParams initialization to enable tracking of trade values for better trading data management
add more log for segment data in realtime ( # 1816 )
changed the variable name ` maxParallelThreads ` to ` MAX _ PARALLEL _ TASKS ` and updated references accordingly to improve code clarity and maintainability by using a more descriptive constant name
replaced ArrayList with CopyOnWriteArrayList for header and data readers to improve thread safety for concurrent access
updated multiple dictionary classes to reflect changes in their respective implementations to improve consistency and maintainability in the codebase
added a null check for destBuffer in FlipTransition . java to avoid potential NullPointerExceptions during execution
fix camel - jbang test which randomly fail on slow ci server
updated conditional check from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` to ensure proper handling of cases where the currentCycle and accountCapsule are not equal
increased the ` RandomValueStringGenerator ` initialization from 6 to 10 in ` JdbcExpiringCodeStore ` and modified the expected length in ` CodeStoreEndpointsTests ` and ` AutologinIT ` to accommodate new features and improvements in code generation
modify StandardObjectChangeFilter to handle UniqueConstraint instances to ensure correct matching of unique constraints in the filtering logic
added new string manipulation methods and improved code structure in MediaDetailFragment . java to enhance readability and maintainability of the code
try to fix ` ` arrayindexoutofboundsexception : expect arrayindexoutofboundsexception ' '
add search by reference filter in listimagescmd ( # 2889 )
camel - 9441 : camel - jms - remove option to not support bridgeerrorhandler . thanks to joerg kessler for the patch .
added conditional checks for specific line patterns in OpExclusionUtils . java to improve handling of specific conditions for exclusion operations
added two return statements in the DatabaseCommand class to ensure proper handling of database command execution errors
- add example for honestpolitician . insert ( ) to avoid conflict with all politician
[ zeppelin - 2326 ] do not use null a valid default interpreter initialization file
camel - 4027 : fix issue with restlet component port be not configure properly . thanks to bjoern ohm for reporting .
remove ` ` wall sign ' ' block from schematicformat , since it ' s deprecate .
set the maximum query length to a maximum of 100Mb in QTestUtil . java and remove overridden configurations in SessionState . java to ensure query limits do not exceed database limitations and clean up configuration management
updated access modifiers and refactored HttpConfiguration initialization in WebServer . java and WebServer . java to enhance encapsulation and improve HTTP connection handling
updated processor names from " writeHadoop " to " hdfsSink " across multiple classes to better reflect the intended functionality of handling Hadoop and Kafka sources
update HiveConf and HiveSparkClientFactory to handle the case where the Spark application name is not set correctly to ensure correct application name handling and improve configuration management
rename variable from ` whiteName ` to ` includedName ` in ` ManagedClassFactory . java ` to improve clarity by using a more descriptive variable name
jasonleyba : fix windowtest . testcanrestorethewindow and add a new maximizewindow handler .
reapply : do n ' t ignore main cell ' s buck - out when create projectfilesystem
added an assertion to check if the exception message contains " entity expansions . " to ensure proper handling of entity expansions in the testing framework
update table offset and length calculations to mask out sign bits to ensure consistent handling of integer values within positive range
removed the customize method that asserts the form ' s customized field is not null to streamline the code by eliminating unnecessary customization logic
refactor LineChartRenderer to improve coordinate handling to enhance clarity and maintainability of the rendering logic
refactor flavor handling in AndroidBinaryDescription to improve clarity and error handling to ensure that requested targets do not contain specific flavors , enhancing robustness and usability
updated buffer assignment from offset to index in LwjglGL11 . java to ensure correct buffer generation for the specified index
added two new files , Property . java and PropertySuper . java , and created a test class TestClassResolutionFail . java to enhance functionality and ensure proper error handling during class resolution
fix possible race condition when terminate hazelcast instance in cluster mode
updated FilterChainProxy to use FilterChjainProxy and adjusted parameter names in VirtualFilterChain constructor to enhance clarity in class naming and improve logging consistency
[ iotdb - 2274 ] percentileaggregationfunction : fix arrayindexoutofboundsexception ( # 4104 )
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure that schema data is loaded before loading , improving error handling
updated baseType initialization to set it to null and added literalPrefix and localizedTypeName variables to improve clarity and functionality of the data type representation
updated multiple Java files to replace string literals with link structures to improve code readability and maintainability by using simpler syntax
updated evaluator instances in EvaluatorFactory to use final static instead of static methods to simplify code and ensure singleton instances are always created
updated build command and configuration paths to use " \ nbuck / config / constraints " instead of " \ osx _ x86 - 64 " to ensure consistency in naming conventions across the codebase
added sound effect handling in AllAppsView . java to enhance user experience by enabling sound feedback on interactions
changed the exception type in the main method from Exception to IOException to provide more specific exception handling related to I / O operations
added leftAxis granularity enablement in BarChartActivitySinus to enhance precision in chart representation
replaced manual version comparison with a new method ` compareVersions ` to improve code readability and maintainability by reducing complexity in version comparison logic
added OS support checks and modified file paths in ContextHandlerGetResourceTest . java to ensure compatibility with different operating systems and improve file existence checks
added close methods to various classes and implemented closing logic to ensure proper resource management and prevent resource leaks during operations
improve mockappender to reduce time sensitivity
[ beam - 4142 ] improve error message in case of resource with non - directory uri
isometrictaggeredtiledmaprenderer . add license info so it report a warning
fix item unbind bug ( # 5489 )
refactor configuration and attribute classes for improved clarity to enhance maintainability and reduce complexity in the codebase
removed redundant condition for touch tracking in OtherActivityTouchConsumer . java to simplify code logic for better readability and maintainability
updated navigation button handling in NavbarButtonsViewController to incorporate dynamic UI mode management to enhance UI consistency by using dynamic theming based on the current configuration
make Polybenchlauncher throw exception instead of abort if can not determine the language
6996563 : 6984311 change forget to update vmstructs . cpp for new field _ operands
updated findBox methods to include BlockFormattingContext parameter and adjusted box positioning accordingly to enhance layout rendering flexibility by accommodating different block formatting contexts
added error handling methods to WorkerProcess and improved output management in WorkerShellStep to enhance process launching reliability and provide better error output information during job execution
added null checks for the operator parameter and improved error handling in CheckedListReplaceAll to ensure robustness by throwing NullPointerException and providing clearer error messages when null operators are passed
added a conditional test and callback for socket data writing in SslConnectionTest . java to ensure proper functionality during SSL connection handling
refactor DeviceFlag and FeatureFlags classes to enhance listener management and initialization to improve code organization and ensure consistency in handling device configuration changes
added import statement for JUnit Ignore in GatewayRSocketIntegrationTests . java to mark the test as ignored due to issue gh - 1114
added import statement for MalformedURIException in StandardRequestHandler . java to enable proper handling of malformed URI exceptions in the application
[ # 8042 ] instructorfeedbackedit : make sure to set focus on input field ( # 8043 )
refactor the KrakenStreamingTradeService to improve code structure and indentation to enhance maintainability and readability of the code
changed print statements to use system . out instead of system . err for ignoring Class - Path entries to reduce unnecessary error output during execution
hive - 16377 : use a randomaccess instead of randomaccess for the rowmatrix to incorporate randomaccess .
bug 8124 : do n ' t persist the usage event when the volume be delete ( # 8125 )
refactor the handling of the Hive plan file input to support dynamic plan path based on job configuration to improve flexibility in specifying the plan path based on the job type
[ beam - 7954 ] import org . apache . beam . vendor . guava . v26 _ 0 _ jre . com . google . common . collect . mapmap instead of com . google . common . collect . map . guava . guava . guava . guava . guava . guava . guava . guava . guava . guava . guava . guava . guava . guava . guava . guava . guava . v26 _ 0 _ jre . com . google . common . guava . com . google . guava . guava .
bugfix # 211160 , do not register memorycctprovider in resetinternalstate ( )
add null check for multichat user chat operation set in conference chat manager .
check if save . save ( ) succeed before save the new package .
added a new ` FolderSyncActivity ` to handle folder synchronization navigation to enhance user navigation by providing a dedicated navigation option for sync folder data
[ flink - 31889 ] [ runtime ] fix the unstable test of sequential channel state reader
well handling of number in spanish tokenizer , fixes # 557
replaced the use of ` reader . pointValue ( ) ` with ` heapPointWriter . getPackedValueSlice ( i ) ` to improve code clarity and reduce reliance on ` reader . pointValue ( ) `
add a new ` LocaleRandomizer ` class and its corresponding unit tests for its functionality to enhance testing capabilities for locale - related randomness in the randomness system
tika - 3971 -- add unit test for font - printer metric and fix a few typo in the doc .
bugfix # 208921 , make packaging of 10.0 and 9.0 optional
move the ` AccessController . doPrivileged ` call to encapsulate the ` run0 ( ) ` method execution to enhance security by ensuring ` run0 ( ) ` runs with elevated privileges
jetty - 9 - http2 : set readtimeout to 0 for non block mode .
increase timeline initial delay default to 600 second to reduce flakiness .
fix primary key column restriction message ( s )
added date formatting support in ThirdEyeJiraClient to enhance date processing capabilities in the application
fix # 4237 - priority frame must not depend on parent stream id
added a constant for maximum scalar replace code size and updated the scalarReplace condition to use this constant to improve code readability and prevent potential issues with variable size limits
add ` ` date _ takEN ' ' a an option in order to categories / categories
updated drawing rectangle parameters in TexturePacker2 . java for better image positioning to improve rendering accuracy by accounting for additional dimensions
issue # 3888 - make sure websocketupgradefilter be run in a separate container
added shutdown calls in validateSignService and trxHandlePool in multiple classes to ensure proper resource management and prevent potential memory leaks during shutdown
added RawJsonRequestBody annotation processor to handle RawJsonRequestBody processing to enable support for raw JSON data in generated Swagger documentation
added a new method ` newTarget ` that accepts a ` TargetExtension ` parameter to create a new instance of ` Target ` for logging purposes
changed ListBeanContainer instantiation from a generic list to a ArrayList in BeanContainer . java and added unit tests in AllUtilTestsSuite . java to enhance type safety and test coverage for list operations
fix wrong metric name in test for block cache hit percentage
camel - 2905 : fix potential deadlock in cachedoutputstream that lead to disk leak .
added device ID setting from position to TeltonikaProtocolDecoder to ensure proper handling of device IDs during position processing
updated the method for reading the first line in HybridProjectBuildFileParser to improve code clarity and ensure consistency with character source processing
added a null check for the operator in theAssignOp class and created a new Test class to ensure proper handling of assignments when the operator is null and to test the handling of unknown classes
added a boolean flag to control account handling in FirstRunActivity and modified mixin registry call to ensure that onCreate is only called when account handling is enabled
fix # isochroneresource to not throw illegalargumentexception when number of point in a polygon be less than available
added a path parameter to the DrillViewTable constructor and modified related methods to allow dynamic path resolution for views
added configuration options for the network allocator in PooledByteBufAllocatorL to enhance flexibility and performance by allowing configuration options
updated array type check from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray . java class for testing to ensure correct array handling during deserialization and validation
added LLAP _ IO _ THREADPOOL _ SIZE configuration to enable configuration of the number of threads for low - level IO thread pool
adapt to removal of sun . security . ssl . debug and sun . security . ssl . logger in jdk 11 +
updated latitude and longitude range checks in LatLonGrid and added tests for growingPolygon in TestLatLonGrid to improve validation of latitude and longitude limits and enhance testing coverage for polygon growth functionality
alexeibarantsev : extend expectedconditions to be more flexible with selenium - backed selenium
added an additional parameter to the ` replaceFiles ` method and modified its parameters to account for an insert overwrite option to enhance file management behavior during insert operations
added a test method to the ReflectorTest class to verify the enclosing object ' s type to ensure the correctness of the inner class reflectors in unit tests
updated configuration settings for auto - generated Android facet sources in ` IjProjectBuckConfig . java ` to enable automatic source generation for Android faceting in the project configuration
updated logging messages to include context for changeset author information to improve clarity and provide more informative feedback during the update and rollback process
[ quicklink ] add ability to override parent link ' s properties .
added ` toString ` method to ` YamlConfigFileDTO ` and modified ` InitialConfig ` and ` YamlConfigFileDTO ` to override this method to provide a string representation of the class for better debugging and logging
camel - 15836 : fixed the eclipse compiler error in camel - awaitable - client
refactor ` forName ` methods to accept ` CallerSensitiveAdapter ` and update calls to ` forNameImpl ` to enhance flexibility in class loading and maintain compatibility with different caller - sensitive implementations
[ ds - 3952 ] add authentication to request item repository it test
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` for better abstraction to enhance concurrency support and improve code clarity
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
updated TimeStepdefs . java to replace HumanTime with Calendar and modified imports to enhance compatibility with Cucumber ' s API and improve code readability
fix incorrect pattern for spark upgrade in spark project . close apache / incubator - rocketmq # 35
updated the ` RestProxyFactory ` calls to use ` getUri ( ) ` instead of ` exchangespecification ` to ensure that the correct URI is used for proxy creation and improve code clarity
simplified the output statements by removing unnecessary print statements to improve code readability and maintainability
camel - 8180 : fix auto commit for kafka consumer with offset
replaced the release lock logic in Liquibase and updated output statement formatting in LoggingExecutor and StandardLockService to improve resource management and ensure proper SQL output handling
updated suppress warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to improve code clarity and maintainability by reducing unnecessary compiler warnings
- remove this from database . closefiles , database . preparecommit and database . preparecommit and database . closefilestore ( ) from a race condition .
camel - 11014 : fixed maven plugin plugin to consider mutable property .
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to align with the updated market data handling in the application
camel - 17712 : fix camel - core test due recent change .
changed the way the " testId " field is retrieved in HoneycombJdbcInterceptor . java to ensure compatibility with system property instead of UUID generation
fix concurrent modification issue of dateformat and longnumberformat in defaultjobparametersconverter
update package - info . java files for mmm and ppp to ensure consistency and clarity in package documentation
updated height scale setting in FractalHeightMapGrid to allow dynamic adjustment of the height scale based on input
fix : remove unnecessary type check ( jdk 1.4 compatibility ) .
fix print print sink dump bug when dump partition id be not specify
added UTXO outputs setup in UTXOSetTest . java to facilitate testing of transaction output functionalities
[ java ] fix false positive with unused package name
pdfbox - 4892 : avoid npe , a suggest by valerybokov
fix new job parameter override .
added a new boolean field ` disallowBatchOnCascade ` and a method to it to provide functionality for batch management on cascading operations
removed redundant principal initialization logic in JaasAuthenticationHandler . java to streamline code for improved readability and maintainability
replaced direct core closing in SolrCores with an executor for better resource management to improve handling of core shutdown and ensure proper resource cleanup during shutdown
removed unused import statements and updated visibility logic for mActionsView in RecentsView . java to streamline code and ensure correct visibility based on fullscreen progress handling
[ hotfix ] [ test ] remove code duplication in runidincrementer
refactor BasicEntity and TestUtil classes for consistency to improve code maintainability and readability
added two new test cases to retrieveMatched devices in SchemaRegionBasicTest to ensure the correctness of nested device retrieval and expected results
add tryinvoke to metriceventbus to catch exception ( # 9041 )
modified the EigenvectorCentrality class and added a new EigenvectorCentralityBuilder class to improve accuracy of centrality calculations and provide a centralized statistic builder for statistics
updated multiple Java files to replace hardcoded port values with dynamic port assignment to improve flexibility and ensure that the lookup uses a random port instead of a fixed one
fix geometrygenerator ( and maybe later ) to work on mac o x
change beacon equation ' s animator to 0 ( # 4177 )
refactor TubeCalc class for improved readability to enhance maintainability and reduce complexity of the code
change default value of enabled to false and simplify health check scheduling in ServiceHttpClientFactory to ensure proper initialization and improve code readability
change the type of ' groups ' from List < Class > to List < ? > and add validation methods for validation groups to enhance type safety and ensure that the groups array is validated correctly for valid classes
8057791 : [ testbug ] javax / swing / jlist / jlist / 8160438 / 8163161 / bug8057791 . java fails due to bug 8160438
modified the scheduled executor to use a daemon thread for better thread management to allow the executor to exit via the main method completion fix # 322
fix problem with lexicon version display in version list . close # 259
added reflection check in JavaAdapterFactory for type access to enhance security by ensuring proper reflection access
add lazysessioncreation = true to the test so that they do n ' t interfere with each other .
updated the initialization of HadoopRecordReader to accept an additional RecordReader parameter to enhance flexibility in handling different input formats during record reading
deleted files ClassLoaderHolder . java and LoaderManager . java to remove unused class to simplify the codebase
add a method to configuration changes and updated filesystem handling in FileStore and JavaLanguageServer to ensure that configurations are validated and improve filesystem retrieval functionality
added try - catch blocks around session callback registration and unregistration to handle potential exceptions that may occur during registration or unregistration
updated index file paths in TestBackwardsCompatibility . java to ensure compatibility with the latest index structure
[ hotfix ] [ service ] add createstart to akkarpcserviceutils
hbase - 13088 fix unstable test case by disable retry of empty mapreduce . map . maxattempts
pdfbox - 4877 : do n ' t create non - symbolic font embedder for type1 font embedder , a suggest by zhichao yang
added a new test class SslConnectionTest to verify SSL connection handling to ensure proper SSL communication and error handling during connections
added validation for IPv4 and IPv6 address family in InetAddress and NetworkInterface classes to ensure proper handling of address types and prevent InvalidObjectException
added a test method for serializing dates in a collection in DefaultTypeAdaptersTest . java to ensure proper handling of date formatting and locale settings in JSON output
no jira - edit javadoc for message . getbody ( ) - > message . getbody ( )
nifi - 259 : fixed issue where the first update key be n ' t update when generate sql .
corrected an off - by - one error in the loop condition to ensure proper handling of the running width in the table output
pdfbox - 4892 : avoid npe , simplify code , a suggest by valerybokov
change the priority of FormatStringChecker from NORMAL _ PRIORITY to HIGH _ PRIORITY and update the BugInstance constructor accordingly to enhance the severity of critical errors in format string processing
[ java ] add a property to ignore non - final local variable to a for - each statement
use pdf version 1.5 and change background color to black .
add unit tests for LdapUserDetailsMapper to ensure correct mapping of role attributes to authorities and non - retrieved roles in the LDAP implementation
add ldap read timeout config in context to ldap context ( # 2936 )
8209804 : [ graal ] vmtestbase / nsk / jvmti / scenarios / sampling test fail with ` ` too small stack of resume thread ' '
updated Pixmap , ManifoldPoint , TextureRegion , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity by indicating allocation rather than cache checks
added a condition to check if the state handler is invalidated in the gesture state check to improve state management by ensuring the handler only processes valid gestures
updated max distance and old rotation parameters in Workspace . java to improve user interface responsiveness and visual consistency
updated property resolution logic in OciConfigConfigSource . java to use ConfigProviderResolver to enhance flexibility and maintainability of configuration handling
[ testjsig ] correct typo in testjsig . java
fix mana item not return mana in creative / mana ring , close # 2379
regenerate client with updated copyright year ( # 4382 )
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress the warning about the missing serialVersionUID field
remove all tsfile when validate empty tsfile ( # 10461 )
[ j2kt ] fix j2kt test due to change in j2kt version .
updated error message formatting in ComparableSubjectTest . java to ensure clarity in test failures during type conversion
[ bug - 63294 ] ooxml : make sure xml standalone be enable by default , add a test case
update conditions and error handling in Int2ObjectCache . java and add equals and equals methods in Int2ObjectCache . java to improve array size validation and enhance equality comparison functionality
updated security filter chains configuration and added tests for ordered filter chains to ensure that security filter chains are processed in the correct order for proper application ordering
removed the TimeInForce parameter from the order type in BinanceTradeService . java to streamline order handling by eliminating unnecessary time in force mode
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update return type for Float values to enhance functionality and ensure proper value validation for range randomization
updated KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to correct the character representation of the SEP character
camel - 11713 : camel - jms - add support to get a json schema for activemq component
added error handling in SourceUtils and created a new test class TestGetBound to improve robustness of bound retrieval and ensure correct functionality through unit testing
refactor filtering logic in LeafFilterFactory to use a dedicated method for obtaining FilterPredicateLeafBuilder to improve code readability and maintainability by reducing complexity in code
modified the way originalArtifactName is extracted based on the length of the artifact name and added resource cleanup methods in JobContextFactoryBeanTests to ensure proper handling of artifact names and resource management during tests
updated certificate generation logic to loop for available certificates and changed server key generation to include serial numbers and issuer details to enhance security and clarity in managing certificate serial numbers and issuer details
modified the handling of null values in DnsFallback . java and added a test class DnsFallback . java to improve robustness of default value retrieval and ensure correct behavior for null values
ww - 3637 add additional context to exception when write tag fails
changed the type of the ' success ' variable from boolean to String and updated related JSON properties to enable the representation of the URL instead of a boolean value
replaced a lambda expression with a lambda expression that properly releases the pLuid to ensure proper resource management and prevent memory leaks
removed " address " and " phone " from scope definitions in CommonOAuth2Provider . java and its tests to simplify scope definitions by eliminating unnecessary parameters
fix # 2530 - managedselector . ondeath can cause thread to hang .
[ wled ] add support for extract color from primary color ( # 9461 )
replaced the ` isValidCaller ` method with a ` Set < String > VALID _ CALLERS ` to simplify the code and improve performance by eliminating unnecessary checks
added a new method ` caseJSRInst ` to the InstSwitch class to support JSR instance handling in the switch statement
added transaction management to the subscription activatingsubscriber . ( # 4888 )
updated SQL statement preparation and handling for data updates in DBMSProcessor . java to improve efficiency and clarity when deleting data from database
remove elevation property and related code from ContactItemInflater . java to streamline elevation handling for devices running Lollipop or higher
renamed ` typeInformation ` to ` identifier ` and updated related method calls to improve clarity and consistency in variable naming
replace direct file reading and deletion with privileged action in SandboxFileManager to enhance security by ensuring file operations are executed in a privileged context
added support for handling binary type access in Groovy parser and printer classes to enhance the flexibility and correctness of binary type handling in Groovy
updated warning message format in MetaDataFetcher . java to include class name instead of the exception object to improve clarity of log messages for better debugging
updated byte handling and variable names in RecordInputStream , UnicodeString , and TestUnicodeWorkbook classes to improve clarity and correctness in byte manipulation and ensure proper functionality through testing
added a new test method ` downloadsFileWithNorwayCharactersInName ` to validate the functionality of file downloading with Norway characters to ensure correct handling of invalid characters during file name downloads
updated error handling in AsyncResource to use CancellationException and improved cancellation checks to enhance error handling by providing a more specific exception type for cancellation scenarios
fixed an npe in timedmemberstatefactory when statistics be null .
refactor MongoTemplateTests to improve dependency injection and add a new test method for removing an object from an explicit collection to enhance test coverage and ensure proper functionality of the collection removal feature
move the pgraphics module out of the core module , a it ' s deprecate . ( bug # 1743 )
fix ` ` not deterministic ' ' exception message should use ` ` % n ' ' .
introduced a new boolean variable ` mIsClearAllButtonFullyRevealed ` and updated scroll handling logic to improve clarity and functionality of the scrolling logic based on revealed state
refactor HiveIcebergMetaHook to use a common map for managing parameters to improve code readability and maintainability by reducing repetitive calls to getClient ( )
replace instance check for BindException with a method to check if the address is in use to improve code clarity and maintainability by centralizing address checking logic
added a argument to the TestNestmateAttr class to specify the classpath for the test environment
added a new verbose schema detail type in Grep . java to enhance the clarity of schema output for better debugging
add miss @ override annotation and remove unnecessary import
# 1747 - enh : add transaction . getnestedusesavepoint ( ) to allow nested transaction to be use
replaced the fetchSize variable with a ThreadLocal for better thread safety to improve performance by using a thread - local mechanism for fetch size management
[ java ] remove the backoffidlestrategy and sharenetworkidlestrategy for embeddedpingpong .
add a lambda to the handleblockingcall so that it can be invoke in a supplier - based manner . ( # 4638 )
added HDP version property handling in SliderAppsViewControllerImpl . java to ensure that the application uses the current HDP version for proper configuration management
add service loader call to javacprocessingenvironment . close ( ) to force serviceloader . reload ( ) to call close ( )
added a DeepCloner class and modified method block parameters to clone in ParameterizedRobolectricTestRunner . java and RobolectricTestRunner . java to facilitate the use of deep cloning for method calls in test scenarios
added a method to bind a Boolean annotated with the JETTY _ SHOW _ STACKTRACE to ResourceBase . java to control the visibility of the stack trace for debugging purposes
added a check for OBJECT type in NativeObject . java to ensure proper handling of OBJECT types to prevent runtime errors
updated import statements and refactored OopField usage in SystemDictionary . java to improve code clarity and maintainability by using direct static fields
updated JwkKeyListView and JsonWebKeyEndpoint to use PublicKey serialization instead of RSAPublicKey handling to improve key management by supporting additional key types in JSON serialization
[ gr - 43954 ] fix issue with use - only - writable - boot - image - heap .
updated MBeanServerMXBeanUnsupportedTest . java file to improve clarity and maintainability of the test cases
removed import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies by eliminating unused imports
updated method names and implementations in multiple actuator - related classes to use ByteString instead of ByteString to improve consistency and compatibility with protobuf serialization
add a simple main ( ) that can be run from your ide easily to run a broker use jmx
replaced direct byte array conversions with conditional statements for min and max values to improve clarity and reduce redundancy in byte array handling for min and max values
add source - empty index to protobuf annotation for node with zero target
[ java ] do n ' t need to hold a reference to removal when remove a correlation and it from the list in drivereventsadapter .
added conflict saving logic in FileDataStorageManager and FileUploader classes to ensure consistent handling of file conflicts across different storage states
fix some raw type warning and warning
replaced all instances of StrUtils with Lucene ' s splitFileNames method across multiple filter factory classes to standardize file handling and improve code consistency across the project
updated database driver properties for Oracle and MySQL to ensure correct remarks reporting and useInformationSchema for Oracle databases
added a new serialVersionUID field and updated the constructor to use it to ensure proper serialization of the MethodInterceptor and maintain consistency in variable usage
updated time measurement logic and modified conditional checks in FileChangedExclusiveReadLockStrategy . java to enhance accuracy of file trigger conditions and improve readability
[ hotfix ] [ sql - client ] fix classloading issue in localexecutor
added onBufferChanged method to TerminalView and TerminalTextViewOverlay classes to handle buffer changes to ensure proper UI updates when the buffer changes
add service pid namespace when process config file ( issue # 170 )
fix ( freeze ) : do not throw modificationexception for tvm freeze
added insecure property and its getter / setter methods to TlsConfig , and implemented insecure trust manager creation in TlsUtils to enable configuration of SSL insecure mode for improved security management
refactor code to improve readability and maintainability by simplifying the path handling logic in JavadocTool . java to enhance code clarity and reduce complexity in package management
updated ` NodeColumnsGDF ` to ` edgeColumns ` and modified ` ExporterGDFs ` to use case - insensitive comparisons for edge ID to ensure correct handling of edge ID columns and improve data management
updated the @ OneToOne annotation to include cascadeType . ALL to ensure all related entities are persisted to maintain data integrity
change the equal ( ) method to make it a little more natural to compare the message .
test fix for http : / / issues . apache . org / jira / browse / amq - 3298 - add support for unicode encode to asyncprovider
[ flink - 25958 ] [ test ] remove unused iskeyserializertypevariablesized from rocksdbSerializedcompositekeybuilder
added a method to retrieve static permissions in ProtectionDomain and updated SubjectDomainCombiner to use this new method to improve code readability and maintainability by centralizing static permission handling
fix some null check and format issue in some recipe
fix for tika - 352 : parser . parse ( ) hang for empty string
added a new method ` showConnectionErrorPopup ( ) ` in ` UploadMediaDetailFragment ` and modified the error message display logic in ` UploadMediaPresenter ` to handle UnknownHostException correctly to improve user feedback when encountering network errors during upload
added a new file ` Issue596 . java ` and created a test for handling an unhandled request in ` Issue596 . java ` to ensure that the server correctly returns a 404 error for unsupported media types
fixed an int overflow in the bitwise operation of nodebitmap to ensure proper handling of integer values during bitwise operations
added new import statements to ImportLayoutStyle . java to enhance code organization and maintainability
added terminal configuration constants and updated console wrapper logic to improve terminal compatibility and enhance user input handling
replace mock account manager callback with TestAccountManagerCallback and update related assertions in ShadowAccountManagerTest . java to enhance test clarity and maintainability by using a more suitable mocking framework
[ java ] do n ' t cache the enclosing type a it should n ' t need to .
renamed methods from ` getProperty0 ( ) ` and ` getConcatSeparator ( ) ` to ` entries ( ) ` in ` Pairs . java ` and ` InPairsExpression . java ` to improve consistency in method naming conventions
nifi - 3746 : remove timeout for putallcallable to work on slow machine
fix npe when register or get consumer running info or when consumer be empty or not ( # 5012 )
[ java ] reorder source identity to help optimiser .
added a new class ` TopTabAction ` to handle a toolbar action to provide a user interface for tab navigation in the application
camel - 17684 : fixed dynamicrouter eip to work in parallel
updated imports and class annotations in AggregateItemReaderTests . java for better compatibility with JUnit 4 features to improve test structure and maintainability by aligning with JUnit 4 conventions
[ hotfix ] [ table - common ] fix generic type in abstractobjecttypemap
updated AchievementsActivity and related classes to integrate wikidata edits functionality to enhance user experience by integrating wikidata edits feature
added validation to ensure the length is within the short range to prevent illegal argument exceptions when using large lengths
fix for false positive on max / min value in dumbmethods .
renamed multiple dataset classes related to dataset types for consistency to improve clarity and maintainability of dataset classes
updated exception messages in ProvisionClusterRequest to include acceptable values to improve clarity of error messages for better debugging
updated v assignment in TestVectorUtil to use random ( ) for random number generation to improve accuracy and performance of random number generation
changed the return type of the compareBy method from int to long and simplified the comparison logic to improve precision of date comparison and enhance code readability
added SSL property handling in TestUtil and introduced it in PGPropertyTest to enable proper SSL configuration for testing purposes
enable safebrowsing by default , add test for harmful window and dmg file downloads .
added null checks before setting flight configuration in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is enabled in DLNAResource to ensure proper handling of transcoding based on configuration
modified DataTable to return an empty list if no columns are present and changed TableDiffer to handle empty lists to improve robustness by preventing NullPointerExceptions during column retrieval
added a custom ignore tag handling in RobustJavaMethodParser to enhance flexibility in processing optional native code elements
camel - 16462 : camel - core - optimize lock exception should not throw runtimeexception when update fails
include parent configuration property in beandefinitioninjectprocessor ( # 7954 )
updated AboutActivity and PreferencesActivity to extend LimitlessIDEActivity and modified constructor parameters to improve UI responsiveness and maintain consistency with new design principles
deleted the ClusterNodeInfo . java file to remove unused components to simplify the codebase
restructured return statement formatting in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output for ciphersuite selection in ServerHandshaker . java to enhance debugging capability during the handshake process
added template selection handling and visibility logic in ChooseRichDocumentsTemplateDialogFragment . java and ChooseTemplateDialogFragment . java to improve user experience by displaying appropriate templates based on user selection
added a nodeLabelMap to track duplicate nodes and modified logging behavior to improve handling of duplicate nodes and enhance error reporting for better debugging
created a new file R2303044ListSelection . java for list selection functionality to implement a simple GUI that tests item selection in a list
[ java ] check for client timeout before put the registration in a cache .
added a null check for mWorkspace in Launcher . java to prevent potential null pointer exceptions during execution
added a new test method ` testCompoundPropertyTwice ` to validate compound property handling to ensure that compound properties are correctly registered and not used in the context
hive - 23790 : create rowcount from parent row set when create rowcount ( krisztian kasa , review by jesus camacho rodriguez )
added path URL formatting and query parameters to API method documentation in SpringBootDocBuildTemplate . java to enhance path handling and parameter management for better API documentation
fix a couple of npe in the notificationserviceimpl and the introduction of logger in notificationmanager .
replace DistBuildCachingEngineDelegate with CachingBuildEngineDelegate and update related method parameters to improve caching mechanism based on remote configuration settings
replaced a RuntimeException with a more informative exception message to improve error reporting for better debugging
added a DEBUG flag to the log statement when DEBUG is true for logging to improve log management by reducing noise in debug messages when DEBUG is true
modified Console and Scanner classes to improve code readability and maintainability
lucene - 10494 : do n ' t divide by zero when compute disjunction for disjunction
resolved - issue batch - 1212 : add email - sending item writer
added new exit and quit methods with corresponding properties to Global . java and removed the duplicate quit method from ScriptingFunctions . java to standardize exit functionality and eliminate redundancy in the codebase
make sure to close context after shut down loan broker shark detector demo
renamed methods from ` getFirstUnverified ` to ` findFirstUnverified ` and updated corresponding tests to improve clarity in method naming to better reflect functionality
fix nullpointerexception in vmwarecontext . getservicecookie ( ) and move getrequestproperty to it ' s place
reordered assertions in ResinAcegiAuthenticatorTests . java for consistency to improve readability and maintainability of the test code
change the result of the ` bigIntegerToBytes ` method calls to use a maximum of 32 bits to ensure consistent data size for improved performance
fix ( fml ) : correctly reference fml . modstates system property
refactor account selection handling in ReceiveExternalFilesActivity by introducing a dialog method for better user experience to streamline account selection process and improve code readability
[ java ] improve error message when client can not connect back .
refactor ` ValidatorContractController ` to handle empty results more gracefully to improve robustness by throwing an exception when there is an unexpected result from the validator smart contract call
added a null check for the root file before reading fields in TexturePackerFileProcessor . java to avoid reading empty files and ensure safe handling of the file structure
check to see if datasource be available , before try to use it .
[ test ] fix memory leak in testrefprocsanity
fix ( editor ) : fix write to system . out when currentconsole be not available
[ flink - 23790 ] [ kinesis ] [ test - stability ] set default refresh delay to 100ms for kinesis
replaced multiple instances of AlertDialog . Builder with a single method showInfoAlert to simplify the code and improve readability by reducing repetition
modified the loop structure and added a package parameter to the test method to improve code readability and maintainability by explicitly defining the package option
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUseCases . java to ensure compatibility with the latest Jetty features and improvements
added a wildcard import and modified dependency handling logic in PluginBundleManager . java to simplify import statements and ensure dependencies are only processed if they are not already provided
added a HashSet to manage ZipFileInputStream instances and adjusted the releaseInflater method to ensure proper resource management and prevent memory leaks by closing unused streams
rename data _ matRIX to data _ matRIX to be consistent with other year
sequence generator : turn off idle processing if not active
[ hotfix ] correct typo in blobserver getactiveconnections method
updated the ` getAnnotations ` method in ` AnnotatedDelegate ` and ` SyntheticAnnotated ` classes to use ` Collectors . toSet ( ) ` for filtering and returning annotations to improve code clarity and performance by leveraging Java ' s stream operations for annotation retrieval
added support for ppc64le architecture in Bits and ByteArrayAccess classes to ensure compatibility with ppc64le architecture in the application
updated error message to include details in RoboMonitoringInstrumentation . java to provide clearer context for debugging activity resolution issues
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of MINUTES to improve flexibility in managing timeout values for transaction failures
fix dateutiltest failure due to change in jdk 8
refactor BytesRef class to improve performance to optimize memory usage and reduce execution time
added a toast message to indicate the YouTube Player does not work on Lollipop yet to improve user experience by informing users when attempting to update from Google
fix : improve error message for invalid dollar quote
deploy - release : do n ' t show the vibration if there be no vibrator .
updated table border properties and modified color settings in DotRenderer . java to improve UI consistency and enhance readability of column colors
added a method to check if a string is encoded in HiveConf . java and updated print statements in SetProcessor . java to enhance configuration handling for encoded Par inputs and improve output formatting
pdfbox - 2852 : do n ' t swallow stringindexoutofboundsexception , add some comment
updated X509Certificate class to improve certificate handling logic to enhance security and reliability of certificate processing
fix : properly support proxy uri in config ( # 3903 )
added image loading functionality to NetworkedCacheableImageView and updated related classes to improve image handling and compatibility with new features in the app
updated method signatures of LauncherAnimUtils to remove the target parameter to simplify animation creation by eliminating unnecessary parameters
added a new variable ` controllersVersion ` and updated related code in ` BuildScriptHelper . java ` and ` DependencyBank . java ` to dynamically track the version of controllers and ensure compatibility with different configurations
improve the javadoc of launchedurlclassloader to make it clear how it be instantiate
resolve http : / / code . google . com / p / mybatis / issues / detail ? id = 437 : jdbc health indicator should return row count
[ ds - 3952 ] disable cache nag for authentication , since it ' s not need .
updated string formatting in ZkController to use Locale . ENGLISH to ensure consistent message formatting across different locales
modified the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility in initializing SolrQueryParser with different analyzer options
corrected the copyright year in multiple Java files to ensure compliance with licensing requirements and remove unused import statements
added a semicolon to the MainTest . java file to ensure proper execution of the test code
refactor TypeContributions class for improved readability to enhance maintainability and ease of understanding for future developers
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector in batch processing
updated parameter name from templateName to reqName in StatementGenerator . java to improve clarity by using a more descriptive parameter name
remove boolean . class check from config ( already available in abstractconfig )
[ java ] reset timestamp before offering to maintain consistency with the publication api .
renamed methods ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` and ` maxTrustedIndex ` in ` XForwardedRemoteAddressResolverTest ` to standardize method names for clarity and consistency
add a flag to suppress bootstrap if none of the annotation be annotate with @ bootstrap .
hbase - 15603 tabledescriptorchecker should use tabledescriptorbuilder # getValue for max _ filesize and flush _ size ( stephen yuan jiang )
updated references to ` maxCommits ` and ` requestedCommits ` in ` BranchGraphServlet . java ` to ensure consistency in tracking the number of requested and commit lists
8024831 : [ test bug ] test javax / swing / jslider / 6794831 / bug6794831 . java do not wait long enough for test result
added a new constant ` BUILD _ ID ` and a method ` fillInOriginFromCache ` in ` CachingBuildEngine ` and its test to store and retrieve build metadata to improve the handling of build metadata and ensure consistency in the retrieval of build IDs throughout the caching mechanism
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to clean up the code and improve readability
replaced the existing ` markAsDone ( future , channel ) ` method call in ` HttpProtocol . java ` to ensure consistency in the asynchronous marking logic
added import for TezConfiguration and implemented copyInto method in TezConfigurationFactory to enhance configuration management for improved data processing
added null check for keyPurposes in TimestampedSigner . java to ensure proper handling when keyPurposes is not initialized
changed the conditional check for visibility in CustomPlaybackOverlayFragment to simplify logic for better readability and maintainability
added a method to forget the most recent sound and updated the stop method to handle potential null pointer exceptions to improve robustness by ensuring that null values are handled gracefully and avoiding potential NullPointerExceptions
fix ` SimpleBasePlayer ` to update ` state ` correctly when position discontinuity changes
added new number formatting options for numeric tick units in NumberAxis . java to allow for more precise representation of number tick units in chart representations
refactor the creation of TargetGraphAndBuildTargets instances to streamline the creation of immutable TargetGraphAndBuildTargets instances to improve code clarity and efficiency by eliminating unnecessary builder pattern
removed unnecessary filename filtering and simplified file checks in IndexFileDeleter and SegmentInfo classes to simplify the code by eliminating unnecessary complexity and enhance readability
add the ability to check for collision bounding box instead of write the debug . stitched _ texture . should be disable by default for now .
added a compressionLevel parameter to the SignedJarBuilder and related classes to allow customization of compression levels for better performance
added a test method to include static fields in the stub jar to ensure that static fields are correctly included in the generated Java jar
updated ` UNDEFINED _ FIELD _ SIZE ` to ` UNDEFINED _ METRIC _ SIZE ` and modified related logic to accommodate the new ` BYTES ` data type to improve clarity and functionality in handling byte - related data types
updated string builder usage and formatted error messages in multiple test classes to enhance clarity and maintain consistency in error message formatting
replaced custom hashCode method with Objects . hashCode in Trade and KucoinDealOrder classes to enhance null safety and improve code clarity
added cache management functionality to ` SpringDataJPAJoinFetchPaginationTest ` and its configuration to enable proper updates of the post cache for improved performance
fix for ticket : 143 : support pronunciation in non - us locale .
modified form body creation in SimpleHttp . java and added tests for handling null Post bodies in TestHttpPlugin . java to enhance form handling and ensure proper configuration of null post configurations
added dispatcher configuration and shutdownNow method to ClientSideSlb and created a test for it in ClientSideSlbTest to ensure proper resource management and shutdown of the executor service in tests
added conditional logic to adjust texture positioning based on clipping state to ensure correct texture positioning when clipping is active
address review comment . change defaultdiscoveryservice to throw invalidconfigurationexception instead of hazelcastexception
fix npe in metricspublisher when there be no context
[ bz - 1062501 ] [ drools - 6562 ] do n ' t reinit the modified class during jdk 9 .
fix btree map root header not be preserve in java serialization .
added precompiled header handling and improved checks in AbstractCxxSourceRuleFactory to enhance header management and ensure correct usage of preprocessor headers in different configurations
replaced WeakReference with a custom AccWeakReference to incorporate security context handling to enhance security by ensuring privileged actions are executed with the correct access control context
modified the visibility of ` findNextIndex ` method and adjusted imports in multiple classes to enhance encapsulation and maintain consistency in method access levels
[ fix ] issue 894 , isdirect be wrong .
bug - fix : map . get do n ' t return audioeffecthelptextmap . get ( effectname )
updated method signatures from ` void ` to ` Vector2 ` in ` Actor . java ` and ` Group . java ` to enable retrieval of local coordinates instead of void
pdfbox - 5764 : fix bug in randomaccessreadbuffer - use limit instead of capacity
added a null check before removing the close hook in the VertxImpl class to avoid potential NullPointerExceptions when context is not initialized
updated border spacing logic in CellLayout and DeviceProfile to support different folder types to improve layout consistency and accommodate different folder types
refactor numeric handling in ColumnConfig to use a new ValueNumeric class for better encapsulation to improve code readability and maintainability by consolidating numeric parsing logic
updated the condition to check if the response is not deferred before returning the login status to improve the accuracy of authentication handling based on deferred status
updated argument checks from " -- module - start - ini = " to " -- add - to - start " in StartArgs . java to ensure proper handling of module configuration options
added a default partition value retrieval in DynamicPartitionFileRecordWriterContainer to ensure that the application handles cases where the default partition value may not be provided
[ flink - 10363 ] [ runtime ] add nullability annotation to streamnode and make operatorfactory nullable .
updated method calls to simplify string concatenation in DefaultArtifact . java to enhance readability and maintainability of the code
camel - 9406 : fixed kafkaproducer . consumer . subscribe ( ) to first call if it have already be call .
improve error message if target class can not be find
add ` ` enable gmail notification ' ' property to disable the notification ( default to true ) .
doc : clarify the purpose of ` cipherkey ` ( # 697 )
reduce expect message count for multi - thread test ( # 1651 )
fix : do n ' t read player name if player be dead
[ core ] fill out the miss @ return tag description
api : make secret _ key a required field in updateuser api call
replaced switch - case statements with if - else conditions for better readability in multiple classes to improve code clarity and maintainability by using explicit type - checking
polish ` ` remove redundant and misleading comment ' '
added handling for SQLIntegrityConstraintViolationException for specific table usage in Hive to ensure that only valid database tables are removed from the materialized view , improving error reporting
changed the property name from " githubAccessToken " to " gitHubAccessToken " to maintain consistent casing for property naming
add a new file RoboExecutorService . java extending the RoboExecutorService class to mark the class as outdated for future removal or replacement
added conditional checks for root groups in GroupTreeView . java to ensure proper handling of hierarchical group additions in the menu
fix a bug in the service discovery interceptor when service path be a root directory
8076995 : gc / ergonomics / testdynamicnumberofgcthreads . java fail with java . lang . runtimeexception : ' new _ active _ workers ' miss from stdout / stderr
changed method return types from ImmutableFlavor to Flavor in CxxPlatforms . java and KnownBuildRuleTypes . java to enhance type safety and improve consistency in handling host flavors
refactor CreateTable and CreateTableDeParser classes to utilize PlainSelect for building SQL statements to enhance flexibility and maintainability of table creation options handling
chat : make background opaque for dark mode
test : migrate ctiteratortest to junit 5 ( # 4422 )
added clear ( ) method to CharTokenizer , KeywordTokenizer , and StandardTokenizer classes to ensure proper handling of token clearing operations in the tokenizer and streamline code
add a test case to demonstrate bug
added error handling for StateMachine configuration with a StateMachineConfigurerAdapter to improve robustness by providing clearer exceptions when configurers are missing
alexeibarantsev : remove useless check for ` ` link = ' ' in elementfinder . getlocator ( )
updated StringConverter to allow for maximum number of fractional digits and adjusted the conversion logic accordingly to improve flexibility in handling numeric values and ensure proper conversion behavior
remove unnecessary ' instance ' check from AggregateLifecycle . getcurrentscope ( )
updated touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to ensure correct handling of touchable insets for better user interaction
removed a condition checking for the ' ~ ' character in FencedCodeBlockParser . java to simplify parsing logic for better readability and performance
added socketTimeout property handling to ConnectionFactoryImpl and ConnectionFactoryImpl classes to allow configuration of the socket timeout value for improved connection stability
added sleep functionality in ElementAttributeTest to ensure proper handling of interruptions during execution
updated BufferedReader initialization to use UTF - 8 encoding to ensure proper handling of character encoding for reading input
refactor List class for improved efficiency to optimize performance and reduce memory usage
fix # 1656 io . vertx . core . file . asyncfile . handler should report failure when write stream fails
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to establish their stability status for better API documentation and usage clarity
nuage vsp : fix npe in case where no vsp device be configure on the physical network
updated method names and logic in FileUploader and UploadListActivity to improve clarity and functionality to ensure proper handling of failed uploads based on the current account
attempt to fix test in jdk9 again : constantpooltagtests be not use java 8
add miss - xlint option to compiler to suppress warning
added a method to remove all headers from the client header map to improve resource management by allowing for client header removal
replaced Vector with List for handling input and output files to improve performance and readability by using more efficient data structures
updated the default GRID _ COLUMN value from 4.0 f to 3 f to improve layout consistency by using a smaller grid column
Updated the condition to include a check for view creation in the CalcitePlanner class to ensure that the view creation logic behaves correctly in specific scenarios
updated regex pattern to exclude brackets in tests to ensure correct formatting of date values for improved readability
[ gr - 27454 ] fix snippetreflection to return an object on exception .
simonstewart : update the single test to firefox driver and add a new test for access page with an insecure ssl certificate
fix ( core ) : fix off by one when byteoffset exceed byteblockpool . byteblocksize
change feature vector encoder from static to instance variable and change string formatting to be locale - independent to improve flexibility and ensure consistent string formatting across different locales
resolve http : / / issues . apache . org / activemq / browse / amq - 2695 - stop thread on unexpected error
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress the warning about the missing serialVersionUID field
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and updated imports in ` OcamlDebugLauncher ` to simplify the class structure by removing unnecessary dependency on ` SourcePathResolver `
change database change message to be more informative
added validation for response types and improved error handling in OAuth20 device token controller classes to enhance security and ensure proper access control for device token requests
added chk method call to DrillBuf . java to enhance buffer handling functionality
hbase - 18823 add initTableMapperJob method with inputformatclass parameter for mapreduce job ( gopal v , review by matt mccline )
replaced the method call ` append ( jrubyClasspath , testClasspathElements ) ` with a direct call to ` append ( jrubyClasspath , testClasspathElements ) ` to streamline classpath management by reducing redundancy
[ gr - 4888 ] throw meaningful exception when llvmpolygloteval . no _ lang access be enable .
deprecated configuration of reserve commit duration and added validation for deprecated usage to ensure compatibility with Solr 7.1 and improve clarity on commit duration configuration
camel - 20297 camel - dih - cache should use cache _ key a key , not cache name ( # 11015 )
change the return type of ` generateECKeyPair ` and related methods from ` long [ ] ` to ` Object [ ] ` to improve compatibility with larger byte arrays in the EC key pair generation
[ flink - 13514 ] [ runtime ] update restarting to suspend all job when job be complete .
replaced singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` RotationTouchHelper ` to improve flexibility and reduce dependency on the singleton instance for better performance
[ unifi ] fix error with unifi port override json element ( # 9748 )
update thread identification to use unique thread identifiers instead of ` int ` to improve clarity and maintainability in thread management by using more descriptive identifiers
remove offerbook item when it have the same offer id and update log if it be different
remove the dependence on org . apache . tomcat . util . compat . tls in testssl and testclientCertTls13
updated MockitoMethodInvocationControl to handle Class instances before performing interception to improve flexibility in handling mock interactions for different class types
update exception constructors to use ' this ' instead of ' DatabaseObject ' to ensure proper context is maintained when throwing not loaded exceptions
replaced the import of DisplayUtils with using intent extra for file handling to streamline code by eliminating unused imports and ensuring the correct data is stored
added error handling and closing logic for old compaction files in StoreDirect . java and StoreWAL . java to improve reliability and debugging when renaming files fails
implemented asynchronous task snapshot retrieval and updated the stopSwipePipToHome method to improve performance and ensure task snapshots are captured during swipe up
added hidden property to the LiquibaseCommandLine and CommandArgumentDefinition classes to manage the visibility of command arguments in the builder
nifi - 9092 fix flaky test due to change in socket address type
[ geos - 8762 ] get catalog from style group directly via geoserverextension . getdatasld ( )
added permission checks for launcher activities before launching shortcuts to enhance security by preventing malicious intents from being executed without proper permissions
added an ID property and its getter / setter methods to TiledMapTile and its implementations to enable proper handling of tile IDs in the map loading process
refactor Manager class to improve method organization to enhance code readability and maintainability
[ iotdb - 6667 ] use version = v _ 0 _ 13 for jdbc example ( # 6667 )
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo and modified the DiffOutputControl initialization to allow for more flexible control over schema generation during the change log generation process
use put ( ) instead of putifabsent ( ) to ensure that the registry instance is stored in the cache
planner - benchmark : fix logging of warmup exception
changed the visibility of the method ` doPutRecord ` from final to non - final to allows for subclassing and improved flexibility in method overriding
update return statement format in Tools . java and FileSelectorFragment . java to correct syntax to ensure proper file path construction and eliminate unnecessary physical dimensions
added tests for handling large response content with slow client in FastCGIProxyServletTest . java to improve reliability and performance of HTTP requests
added a call to start the ReadInteractionsService service to enhance read interaction tracking with the read service
added a conditional check for ' lintClassfile ' before logging warnings for missing annotation methods to improve clarity and control over when to log warnings based on linting preferences
( scott phillips ) add configuration to define the port number for smtp .
add retry mechanism when reloading SSL factories ( # 10946 )
fixed # 3736 : objectmapperprovider date format should use ` ` ss ' ' as separator
corrected a typo in the assertion message in SpyingOnRealObjectsTest . java to ensure clarity and correctness in the assertion failure message
added functionality to handle line ending with br tags in InlineBoxing and LineBox classes to improve handling of line endings dynamically based on context
updated the construction of filePathString to handle null parent cases to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to clean up the code and reduce unnecessary dependencies
refactor input stream creation in NinjaServletContextTest . java to streamline multipart request handling to improve code readability and maintainability while enhancing test coverage for different character encodings
add more to the config to help troubleshoot test
added validation to ensure the current graph is a dynamic graph to prevent runtime errors caused by invalid graph types
fix : improper handling of @ bean ( # 5320 )
camel - 15014 : camel - jsonpath - add option to suppress exception on jsonpath
fix the issue that helixserverstarter fail to start up due to race condition ( # 4209 )
updated usage messages in CLHSDB and HSDB to reflect command - line syntax changes to clarify command usage for improved user understanding
updated the configureChunkProvider method in FaultTolerantStepFactoryBean to streamline chunk provider configuration to enhance code readability and maintainability by consolidating chunk provider management
[ beam - 1347 ] remove write package to allow reuse of write
refactor accessibility manager tests to use a instance variable for better encapsulation to improve code clarity and maintainability by reducing method calls
add displayid for flutter usage statistic . ( # 2391 )
removed SourcePathResolver and updated class inheritance in multiple files to simplify code structure by eliminating unnecessary dependencies
introduced a new class ` PostgreSQLEnumDataTypeHelper ` and simplified enum value retrieval logic to improve code organization and enhance maintainability by encapsulating enum data type handling
fix logpath test when run on window
replaced direct calls to ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency in accessing the map red local work data throughout the application
added index table check in HiveMetaStoreClient to improve error handling for unsupported operations when dropping index tables
added visibility check before updating disabled scroll flags in RecentsView to ensure actions are disabled when the visibility is not visible
added a condition to set a specific highlighter for the REPL operating system to ensure compatibility with non - Windows environments
add miss local variable annotation to cross site scripting , see bugzilla 4994
fix pinotfs to use file . getpath ( ) . touri ( ) . getrawpath ( ) instead of file . getpath ( ) . touri ( ) . getrawpath ( ) .
removed an extra space in the removeCaptureListener method call to improve code readability and maintain consistency
change the value of _ metaDataComplete from true to false to update logic to reflect that the metadata has not been completed
changed the return type of removeTaskTarget to void and modified bitmap creation logic to improve task removal handling and ensure proper bitmap resizing management
added flavor handling and environment variable modification in JsBundleGenrule to enhance build configurations to correctly expose and manage release flavors
6500701 : enhance for loop with generic generates faulty bytecode
add new test method crlfNewLinesInComments to verify new line formatting in Javadoc to ensure proper handling of new lines in comments and Javadoc in the import logic
added hubMode property and updated configuration in AbstractLiquibaseChangeLogMojo to allow configuration of the Hub mode for better Liquibase management
removed unnecessary null check condition in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify the code for better readability and maintainability
modify linkDb path handling in IndexerMapReduce to ensure it is valid before adding input paths to improve robustness by handling potential IO exceptions during indexing
replaced direct method lookup for setting the indexer thread pool configuration to simplify the code and improve readability by directly referencing the configuration class
updated SMS address format to remove trailing " 5000 " character to ensure proper formatting of the SMS endpoint
added a copy method to executionsById and updated related implementations to prevent unintended modifications to the original job executions map
added a new file ` DownloadTest . java ` for testing image size and texture handling to implement a test case for downloading images from the GDX framework
normalize language to be consistent with other codecs / comment .
updated exception handling in GenericUDFRound . java to use UDFArgumentTypeException to improve error reporting for ROUND function arguments and ensure proper type validation
add null check to managedependencies to prevent npe
added multiple AntPathRequestMatcher objects for various types in SecurityConfig . java to enhance flexibility for matching various Ant path requirements
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
do n ' t attempt to generate bean definition for self - referential class . fix # 2804
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] fix code style issue ( # 10496 )
remove unnecessary code ( socketstatus = = ' ' open ' ' and socketstatus = ' ' timeout ' ' ) .
deleted the SunToolkitSubclass . java file to the class was deemed unnecessary for the current implementation
- add hasrotationorscaling ( ) and gettranslation ( ) method that return zero if there be no rotation or scaling
add unit test for registerwrapperhandler before primitive type handler ( # 165 )
added a method to convert PDLab colors to RGB images in PDSeparation . java to improve color handling for different appearance in PDF rendering
updated references to ` CommonsApplication ` to use ` BuildConfig ` instead of ` CommonsApplication ` to centralize configuration management and improve code clarity
camel - platform - http : add health check to camel - http - main
fix an npe in entitythornchakram . getworld ( ) if there be no block location .
added a test for altering tables with indexes extend primary keys in AlterTableWithViewsIT . java to ensure that the table alterations correctly extend primary keys for improved data integrity
updated the ` off ` initialization in ` FileFloatSource . java ` and modified the assertion in ` TestFunctionQuery . java ` to enhance code clarity and ensure consistent behavior with the reader context
remove the DrillMongoConstants . ID field from the MongoRecordReader to clean up unused fields and improve code clarity
added disconnect method to YeelightHandlerBase and DeviceBase classes to manage connection disconnection to ensure proper resource management and disconnection of the device during operations
fix auto _ increment compatibility with postgresql
fix : bug fix for : sharedindexInformerfactory return null when it return null
fix npe : do n ' t convert private template to template before create a new one
refactor image handling in ShadowBitmapFactory and color array initialization to improve clarity and functionality of image processing and color array initialization
removed deprecated constants from LauncherProvider and LauncherSettings to streamline code and improve maintainability by removing unused elements
jbrules - 3564 : move the rule file to the ' org / drools / examples / broker / rules ' directory
added legendTop and legendTop variables to PieChart . java to adjust the legend ' s positioning based on available data
added a condition to return early if the world transform is empty to improve performance by avoiding unnecessary processing when there are no world transformations
add a new file MaryScriptCreator . java that implements a simple script creation process to create a demonstration of database selection in a specified directory and output
nifi - 3742 : expose the remote host in listener so that it can be use to configure the flowfile attribute on the rest listener
updated the initialization of the compaction logger and added file deletion logic to ensure proper resource management and prevent potential file leaks during compaction
replaced " xlink : href " attribute with " href " for license and location elements to simplify the link syntax to ensure proper functionality
camel - 16836 - camel - aws2 s3 : use different timeout checker for the stream upload producer
hbase - 23034 [ server ] improve the warning of closed region during cluster shutdown
fix broken test ( duh )
trim whitespace from the active option added to the configuration to ensure consistent handling of active options by removing leading and trailing spaces
add wallpaper depth effect setting and update wallpaper zoom settings based on user preferences to enhance wallpaper zoom behavior flexibility based on user settings
added an assertion to check the successful count of the overseer to ensure accurate verification of overseer status updates
modified the kernel version retrieval logic in LinuxFileStore . java to simplify the code by always returning true for Linux attributes
[ flink - 33581 ] [ table - runtime ] improve the description of table - runtime ' s dependency
removed import of ScreenRecordRule and the associated annotation from ThemeIconsTest . java to eliminate unused dependencies related to screen recording functionality
added a method to set scan attribute for paging in TableSnapshotResultIterator and incorporated it in ScanUtil to enhance scan management by enabling paging functionality in the scan processing
fix lowRange bound check to avoid infinite loop . ( # 888 )
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and adjusted cache estimate logic in AsyncWriteCache . java to allow subclasses to access these variables and improve cache size estimation logic
cloudstack - 2120 : update api to return zone uuid only when it ' s not null
[ zeppelin - 2326 ] fixed encode issue in zeppelin interpreter
update filesystem removal logic to use explicit comparison with zfs to simplify the code and improve readability by reducing unnecessary condition checks
rename variable from ` obj ` to ` json ` and update its usage throughout the ` HttpRequestBuilder ` class to improve clarity and consistency in variable naming
updated the poll timeout calculation in SoftAutoCommitTest to allow more time for soft commits to improve synchronization during the soft commit process
fix # 1633 do not log failure to listener when listener invocation fails
updated classes related to the dial package for consistency in naming and structure to enhance maintainability and clarity of the dial - related components
fix ( core ) : fix typo in log message
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to incorporate the latest features and improvements in the container
change the return value from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and introduce ` TestHook . java ` with a test class to enhance the functionality of bootstrap path retrieval and provide a test mechanism for loading and validating classes
allow customization of patchy library ( # 3763 )
[ hotfix ] [ yarn ] remove yarnclient usage in yarnitcase
add more stats per map to localmapstatsprovider . stats ( ) ( # 18288 )
deleted the AllTests . java file to the test class is no longer needed for the project
add conversion for 30 and 31 character ( base on patch submit by damien roth )
added a new test class ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest to verify memory behavior on large stack trace invocations to ensure that memory methods do not starve on large stack traces do not
updated the method call to use getResultMappingsForRowKey ( ) instead of getResultMappings ( ) to improve code clarity and maintainability by directly accessing the result mapping map
added a new boolean variable ' handled ' in the UIText class to enable tracking of event handling state within the UIText component
deleted the ` Controller . java ` file and renamed the ` Weldby ` class to ` WeldModule . java ` to reflect the new functionality and clarify the purpose of the classes
disable zero - width quantification check for flavor with speculative flavor .
changed the visibility of the ` liquibaseProLicenseKey ` variable and removed the initialization of it to allow subclasses to access the ` liquibaseProLicenseKey ` variable directly
mondrian : fix memory leak in rolapcube ( and not memory ) .
add a handler for debug info value update for manually generate debug information .
mondrian : fix for bug # 1743813 , document mondrianproperties . jdbcfactoryclass
added support for handling source paths in Kotlin compiler and jar generation to enhance flexibility in specifying source paths for Kotlin compilation
added aliases for BATK , BRAH , and MANDAIC in Character . java and refactored file handling in CheckScript . java to improve script alias management and enhance input stream processing for better functionality
updated equality checks in ExecutionCommand and added stringToExecutionCommand method in StageUtils to enhance string comparison accuracy and improve JSON processing for execution commands
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to SystemScope class to provide a readable string representation of the SystemScope object for easier debugging and logging
updated CSS parsing logic to handle both numeric and percentage types and improved error handling to enhance parameter validation and ensure proper functionality of the cmyk ( ) function
added a new test method to verify the correctness of local index reverse scan to ensure that the reverse scan functionality works correctly and returns the expected result
updated imports and method names in test classes for clarity to improve code readability and align with new testing practices
updated toast messages to use localized strings for better localization to enhance user experience by providing more descriptive messages
simplified condition checks in RendererUtilities for better readability to improve clarity and maintainability of the code logic
replaced Iterator usage with ArrayNode for ask and bid data in KrakenStreamingAdapters . java to improve type safety by ensuring correct handling of arrayNode items
added error handling when adding a column in FileContentProvider to gracefully handle SQLite exceptions during the upgrade process
remove debug print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
hive - 23354 : convertjoinmapjoin : incorporate hash table load factor into actual size computation ( jesus camacho rodriguez , review by gopal v )
refactor the buildView method to use a Context parameter and update background resource settings for better resource management to improve background resource handling for better UI consistency and maintainability
added an assertAuthentication consumer to SecurityMockMvcResultMatchers for better authentication handling to enable conditional assertion of authentication based on user - defined criteria
vpc : disable vpc creation for gatewaynet without vpc
[ beam - 10955 ] make flink savepoint test run against 1.11 .
fix the position of intdef annotation on field in the ui module
modified the loop condition to include an additional check for index before processing actions to ensure proper handling of action execution based on the size of actions
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex API changes
[ task 67684 ] add test for virtual metadata for the relationship endpoint
fix bug in noclassdeffounderror due to mesh . getlodlevels ( ) return null
updated conditional token filter configurations and adjusted test cases accordingly to ensure proper handling of token positions and prevent potential issues with token filtering
fix unsafestorenode to account for graph . unique ( ) add to the graph .
replaced super . putAddress with io . putAddress in BoundedMemoryIO . java to streamline code by using the appropriate utility class for address writing
added an assertion to check if the event repository is empty before proceeding to ensure that the event repository behaves as expected without any data
removed unused parameters from AuthenticationAttrProcessor and AuthenticationAttrProcessor to improve code clarity and reduce complexity
added null checks for the key parameter in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that null keys are handled correctly and provide a test for expected exceptions
removed the setTypeface method that throws a RuntimeException to provide clearer error handling when the typeface is not set in the runtime
added open methods to AzurePinotFS , LocalPinotFS , and HadoopPinotFS classes to enable retrieval of file input streams from URIs for improved functionality
[ java ] removing deprecate method from webdriverrunner
modified the conditional check for item size to simplify the logic for better readability and maintainability
refactor DefaultResultSetHandler to directly use constructor mappings and simplify result object handling to enhance code clarity and maintainability by reducing unnecessary abstraction
updated SQL assertion to include quotes around the table name reference in the generated SQL string to ensure compatibility with SQL standards for better readability
added filtering logic to the VectorizationContext class based on the mode to enable filtering capabilities based on the result type of the vectorization expression
add a type parameter to the inheritConfig method for moveSelectorConfig to ensure proper type handling and avoid unchecked conversion warnings
update ReorganizeTableStatement instantiation in ModifyDataTypeChange . java to streamline code by using a more concise statement for modifying data types
[ iotdb - 59 ] make default cluster name visible to user ( # 11942 )
improve connection handling and error reporting . resolve issue 302 .
added multiple style string handling for various CSS styles in Nano . java to enhance flexibility and usability for different font sizes
fix new data fix for item type in schematic , fix block entity fix , fix type conversion issue .
update the string return message in NoToStringOnStringType . java to clarify the purpose of the string representation
8236106 : [ testbug ] shenandoah : make testthreadfailure more resilient
fix dataproviderretryanalyzer to properly return the count of failed operation
updated return statement to reference the bandwidth value instead of the first token to ensure the token is accurately represented for processing
simonstewart : add some method to implement the pop - up , deselect , and capture network traffic .
refactor keystore handling in Main . java and Resources . java for clarity and maintainability to streamline certificate validation and improve code readability
removed unnecessary whitespace in TaskAsyncCallTest . java to improve code readability and maintain consistency in task execution handling
added validation checks for dialog opacity and background properties in multiple classes to ensure that dialog components respect their decoration conditions to prevent illegal state exceptions
changed the access modifier of the ' state ' field from private to private final to ensure the field is immutable after initialization
update RedisObjectFactory to handle sentinel configuration more robustly to improve connection flexibility and error handling for Redis connections
add a mechanism to save a chat room ' s lastseendelaymessage and use it for updating it .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to simplify the code by reducing unnecessary complexity in notification handling
refactor share creation and sharing operations to use an Intent for better event handling to improve code organization and maintainability by consolidating operation service logic
do n ' t resolve getters when @ value be not inject ( # 7293 )
use y - start instead of minbuildheight for classic plot ( fix # 2165 )
make the smack integration test work on java 6 .
tmi - 99 : fix a bug in the exifreader that read a sub directory with interop subdir .
added support for version target graph mode ( ENABLED _ LS ) in VersionTargetGraphMode and versionedTargetGraphCache to enhance dependency management based on version target graph mode settings
added a condition to check if the child format is video before processing to ensure that processing only occurs for video formats when appropriate
chore : integrate new gapic - generator - java and rules _ gapic ( # 377 )
added a mechanism to load the Lwjgl Natives in LwjglApplet and LwjglNativesLoader to ensure that the JNLP ServiceManager can be loaded dynamically during runtime
updated CSV strategy to support customizable escape handling to enhance flexibility in handling different CSV escape formats
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure support for only the Authorization Code grant type and improve test coverage for related scenarios
updated error handling to include the current context and cause in exceptions to improve debugging capabilities by providing more context in exception messages and ensuring proper handling of null causes
added a new SQL query and updated the OrderedResultIterator ' s constructor to accept a limit parameter to improve query validation and ensure proper iterator behavior with data projections
add rSquare field to RegressionEvaluator and update StreamExpressionTest to verify that the rSquare value is correctly represented in the regression context
log4j2 - 1343 add support for context - level header in mdc ( # 4237 )
replaced casting of ` ( MapWork ) work ` with a variable ` mapWork ` for clarity and consistency to improve code readability and maintainability by reducing redundancy
refactored image retrieval logic in PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for fetching images to improve code readability and maintainability by centralizing image fetching logic
updated caching strategy in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer handling to improve cache management and ensure proper authentication flow for trusted issuers
fix resource check on sql init directory location
add miss argument to get ( ) and update related test
remove unnecessary sleep in abstractbasicmockingintegrationtest
added a new file KernCrash . java that implements a kerning kerning crash to implement a kerning feature for better font rendering
added a fail ( ) method to LinkedHashTreeMapTest . java to ensure proper failure handling in test cases
added a method to retrieve interface addresses with a specified prefix to enhance functionality for managing network interface addresses
prevents block housekeeper from be schedule in a pool ( e . g . test ) .
duracom - 86 fix npe in grouptransferservice when client connect to failover
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
added a new test class Issue247Test for testing the TreeMap functionality to ensure the correctness of the put operation using the TreeMap implementation
changed the type of the results set and modified method signatures to use ArrayList < String > instead of ResultSet to improve type safety and simplify result handling in the CategorizationFragment
make test more strict by default if today be 29 and not 28
added GrblLookups for alarm and error codes in GrblController to enhance error handling and improve response processing
added a condition to retrieve the home button label based on the number of screens being zero to improve user experience by displaying appropriate labels when screens is not available
removed the count parameter from the getTrades method and its calls to simplify the method signature and improve usability by reducing unnecessary parameters
modified ConsoleReader behavior to handle null input and updated index management in MemoryHistory to enhance input handling and ensure correct indexing in memory history data
removed the file extension for jdk in JavaBuild . java to simplify the path construction for better readability and maintainability
refactor method calls to use a direct method call instead of accessing the description object to improve code readability and maintainability by reducing repeated method calls
added logging functionality to JFCModel and updated related classes to enhance error handling and improve logging clarity during model creation
fix : maximuminscribedcircle check to throw illegalargumentexception when tolerance < 0 .
added methods to create and drop a view in TestUtil . java to facilitate database view management in tests
added support for skipping float and double tests based on system architecture to improve test stability by avoiding unnecessary execution on incompatible systems
added a new class DesktopTaskbarUIController to manage hotseat icons for a taskbar to facilitate the use of desktop tasksbar features in the launcher
fix ( search ) : show progress bar when mod be instal
updated file handling methods in Files . java to improve efficiency and maintainability of file operations
refactor methods and variable names in AnnotationGrpcServiceDiscoverer and NettyGrpcServerFactory to improve clarity and consistency to enhance code readability and maintainability by using uniform naming conventions
added @ FunctionalInterface annotation to DomainAwareServicesManager and removed the ChainingServicesManager interface to simplify the interface declaration and improve usability
fix mod file name generation , and add log for mod file name
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
added grow methods to the Cell class to allow modification of the expand and fill coordinates for better cell management
replaced the use of ` currentBindings ` with a more concise ` bindings ` map to improve code readability and simplify the management of key bindings
ignore exception when try to receive a message in an attempt to reduce false positive .
replaced long array with byte array and updated iteration logic in MetricsMemoryTester . java to optimize memory usage and add a retry count check during the allocation process
deleted the JobParametersPrototype . java file to remove unused code related to parameter handling
added a securityEnabled flag to MappingsTable and updated related implementations to enable conditional execution based on security settings for improved security management
rename constants from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ EXIFT _ EXPORTED _ OBJC _ CXX _ HEADERS and update references accordingly to clarify the purpose of the constant and improve code readability
changed the DUMP _ TO _ FILE constant from true to false to disable DUMP functionality in the TestMSPowerPointParser
do n ' t attempt to ETA audio propagation workaround for amazon api > = 17 .
[ java ] connect to the metadata buffer and update the ordering of the publisher limit to be more efficient .
updated condition in BaseFormatter . java to handle cases with no output options to improve robustness by ensuring output options are correctly configured
[ mondrian - 1409 ] use ssl = false a default for presto and presto driver uri
pdfbox - 4892 : do n ' t write error output to user , a suggest by michael klink
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
http : / / issues . apache . org / jira / browse / amq - 3218 - add retained = true to event and session
[ test ] add test case to eventserializationtest
[ flink - 32913 ] [ table - planner - blink ] fix join - time table creation for group function
updated import statement for Parsed from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` to streamline dependencies by removing unnecessary imports
improve ssl lock and set ssl context timeout handling ( # 651 )
updated conditional checks from ` cp . size ( ) = = 0 ` to ` cp . isEmpty ( ) ` and modified the ` Watcher ` constructor to improve clarity and functionality to enhance code readability and ensure proper handling of empty collection collections
[ calcite - 2652 ] upgrade from calcite - sql 1.7 . 0 to calcite - sql 1.7 . 0
changed log level from debug to trace for firmware update handler message to improve logging granularity for better debugging insights
added tests for null date and timestamp retrieval in GetObjectTest . java to ensure correct handling of null values in database interactions
refactor string representation in StringSubject and add a new test for custom failure message in RelabeledSubjectsTest to enhance clarity of error messages and ensure proper functionality in string formatting
added a test for repository permission handling multiple teams in UserModelTest . java to ensure proper access control for multiple repositories in the repository
added a new file Test7088020 . java implementing a test for invoking methods with different stack frames to ensure proper error handling for missing stack frames and validate expected behavior in method handles
modified the Saml2ResponseValidator to filter audience URIs before matching them to improve error handling by providing clearer audience validation logic
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener to ensure proper handling of data changes to improve cache management and reduce redundant method calls
updated ` StdErrLog ` to conditionally use ` PrintStream ` when it is null to improve handling of error messages by allowing default behavior when ` _ stderr ` is not set
added a new warning constant for stage order in BasicEventSimulationEngine . java and updated the existing warning list in BasicEventSimulationEngine . java to enhance safety checks by tracking the order of active stages more effectively
updated optimize method call from offlineTableConfig to realtimeTableConfig to align query optimization with realtime data structure
updated the SQL statement generation in PhoenixHBaseAccessor . java and added a property for hbase . normalizer in UpgradeCatalog240 . java to enhance the flexibility of the SQL generation and control the normalizer ' s configuration
update SavepointV2 and FileStateHandle classes for consistency to improve code maintainability and readability
added functionality to set and get Bluetooth class in ShadowBluetoothDevice to enable testing of Bluetooth interactions and ensure proper handling of Bluetooth class updates
fix integration test break by change contains to containsprofile
drools - 5338 fix sum function npe ( # 1593 )
remove unnecessary call to graph . readUnlockAll ( ) in DataBridge . java to simplify code and improve readability by eliminating redundant method calls
updated coreNodeName concatenation to use coreProps . getCoreName ( ) to ensure the correct core name is used for node identification
chat activity : backpressure update to prevent crash .
added tagger parser test cases in TaggerParserPosTagCompatibilityITest . java to enhance test coverage for tag parsing functionality
added suppression for the SimpleText codec in BaseVectorSimilarityQueryTestCase to avoid issues with codec compatibility during testing
updated elementtype comparison logic to include additional checks on element type and added a new class T7005671 with multiple generic methods to enhance type safety and flexibility in handling different array types
updated triangle positioning calculations in DelaunayTriangulator . java and changed test class name in LwjglDebugStarter . java to improve clarity and correctness of triangle clipping functionality
updated multiple Java classes to include ` @ Override ` annotations to improve code clarity and ensure proper method overriding
refactor JWTClaimsSet initialization to use builder pattern for better readability to improve code clarity and maintainability by utilizing the builder pattern
fix performance regression for stack overflow ( un ) protection .
added SQLiteDatabase and SQLiteDatabase shadowing capabilities to Robolectric tests to enhance compatibility with Android ' s testing framework and improve code maintainability
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java ` and added ` initiateGL ( ) ` method in ` LwjglGraphics . java ` to standardize rendering initialization and improve code clarity
replaced ` bytesPerDim ` with ` ByteArrayComparator ` and updated the comparison method to improve compatibility with byte array comparisons and enhance code clarity
updated Locale constructor to include a script property and modified default locale initialization to enhance access control for locale - related operations
updated the method to return the last set text alpha instead of the current text alpha to ensure the view reflects the most recently set text alpha value
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to ensure clarity and accuracy in messaging regarding property source mismatches
replace usage of LoginMockMvcTests with UaaJunitSuiteRunner to streamline test suite management and eliminate unnecessary dependencies
updated token parsing to trim whitespace and modified the order of elements in ` GzipFilter ` and ` GzipFilterDefaultTest ` to ensure proper parsing of parameters and maintain consistent formatting
formatted the assignment of the output type in Response . java to improve code readability and maintain consistency in formatting
updated regex implementation property from JDK to JONI to use the preferred regex implementation for improved performance and compatibility
replaced Handler with FutureTask in ViewCapture . java for better task handling to improve performance and responsiveness in background data capturing
added support for get style from the voice and dfki - pavoque - styles header ( ticket : 302 )
added a check to ensure the parent folder exists before creating it to avoid errors when attempting to create non - existent directories
updated log message to use ` 127.0 . 0.1 ` instead of ` 0.0 . 0.0 ` and set nodeDiscoveryIp ` to " 127.0 . 0.1 " to ensure correct representation of the bind IP address
( chore ) camel - jbpm : fix typo
pdfbox - 4892 : remove obsolete comment , a suggest by valerybokov
renamed ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and updated associated methods to clarify the purpose of the container and ensure consistent height management in the UI
rename various tag classes for consistency and clarity to improve code readability and maintainability by standardizing naming conventions
fix : fix a bug in the prettyprinter of the class when the type parameter be a implicit class
[ flink - 22946 ] [ runtime ] fix the memory freeing of operatorcontext in the driver context .
removed carriage return from string formatting in QueryByExamplePredicateBuilder and modified string assertion in StringQuery to simplify output and enhance readability by removing unnecessary assertion
fix race condition in concurrentlrucache . getstats ( ) due to incremental eviction
add a new method ` runAndWaitInJavaFXThread ` to improve thread execution handling to ensure actions are performed on the JavaFX thread for reliability
fix classcastexception in getlocalhost ( ) if localhost instanceof inet4address and intendeddestination instanceof inet4address
initialize database data root and source field in mainframe ( # 1712 )
added a method ` MarkedClientEnabled ` to ` AdminClientBootstrapConfiguration ` and registered a ` MarkedServerEnabled ` class to log the successful enablement of the admin client and server server in the specified mode
[ hotfix ] [ table - common ] fix typo in javadoc
updated timeout handling in MapperBuilderAssistant and modified related methods in MappedStatement and ExecutorTestHelper to ensure consistent timeout values and improve clarity in configuration management
updated method signatures to remove unnecessary parameters and streamline code to enhance readability and maintainability of the code
added serialization of GeoLocationRequest and GeoLocationResponse classes to the CasCoreAuthenticationComponentSerializationConfiguration to enhance the serialization of GeoLocationRequest and GeoLocationResponse objects for improved data handling
updated Preconditions checks and modified tests to use BuildArtifact and ImmutableSourceArtifactImpl instead of ImmutableSourceArtifactImpl to ensure correct type checking for build artifacts and improve code clarity
tika - 2221 -- add error message when xls do n ' t contain the number formats header / footer
make sure scriptable element be not trigger concurrent modification , fix geot - 4810
add a sleep between the channel to make sure that the connection be close before attempt to write .
added checks for equality of actual and expected values in GuavaOptionalSubject to ensure robustness of assertions by providing clearer error messages when assertions fail
updated BackgroundAppState to exclude VERTICAL _ SWIPE _ INDICATOR from visible elements and modified visibility logic in ShelfScrimView to enhance UI responsiveness by ensuring proper visibility management based on launcher state
fix a npe in the shader node editor when the navigator panel be collapse
ggb - 2221 fix for center image on android .
add note about how to route error be capture in case of an exception .
[ astro ] use schedulewithfixeddelay to create new discovery result ( # 6571 )
simplify . no need to check for - 1 when incrementing irr / pemunit
disable test hang for now ( fails on hudson )
updated import statements in GuiceFactoryTest . java to use specific classes instead of wildcard imports to improve code clarity and reduce potential import conflicts
added a system feature list to RobolectricPackageManager for managing system features to enable more flexible management of system features in tests
[ rca ] support augment path property in rca - config . xml ( # 1358 )
[ hotfix ] remove unused log in task . schedulecancelledog
added a null check and reset of enumerationValues to avoid potential NullPointerExceptions when enumerationValues is empty
changed variable names and logic for handling start and end text in BoxBuilder . java and InlineBoxing . java to improve clarity and functionality of inline box creation and layer validation
fix ( system ) : change server . sendtelemetrydata to send telemetry data asynch
removed conditional logic for altering the UPGRADE _ ITEM _ ITEM _ ITEM _ TEXT column type in MySQL to simplify the code for better readability and maintainability
[ pinot - 2379 ] fix error message in table directory that could not be create
updated DatasetUtilities class to improve data validation to enhance accuracy and reliability of dataset processing in the application
added functionality to append the selector ID in the key string to enhance clarity of selection information in the application
fix logging , a per http : / / github . com / codenameone / codenameone / issues / 2147
updated taskbar visibility management and added alpha control for smoother transitions to enhance user experience by improving the animation behavior and visibility of the taskbar while interacting with different states
reorder key exchange data retrieval in KeyExchange . java to improve code readability and maintainability
added a check to ensure the connection is an instance of JdbcConnection before querying the version to prevent potential ClassCastException when interacting with the JdbcConnection
refactor index calculation in ServerMainTest . java to use dynamic file names to enhance readability and maintainability of the code
added methods to retrieve the media recording MIME type in CodenameOneImplementation , MediaManager , and ImageIO classes to improve accessibility of media recording MIME type for better user experience
move shaderhelper . useshaders ( ) from ConfigHandler to ShaderHelper . java and adjust the visibility of useShaders ( ) method in RenderTileEnchanter . java and RenderTilePylon . java to improve accessibility of shaders and ensure consistent method usage across the classes
[ calcite - 2424 ] druid adapter it should use both > = and < and > instead of < to fix a bug
updated ZkStateReader instantiation in CloudSolrServer . java to ensure proper timeout handling during Zookeeper connection
tika - 2271 -- turn off external entity detection and doctype declaration . this close # 154
added a new interface ClientRegistrationIdentifierStrategy for handling client registration to provide a standardized way to retrieve client registration identifiers
replaced a conditional check with a while loop for checking the presence of scripts to ensure the loop continues iterating through all scripts instead of just checking for them
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and introduced a new test class ` VarargsAndWildcardParameterizedTypeTest ` to improve clarity of variable usage and enhance testing for varargs accessibility after resolution
bug 55714 : border should be check for null to avoid nullpointerexception in borderpropertytemplate
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during debugging
modified import statements and added HubRegisterResponse handling in InternalDropAllCommandStep and HubUpdater classes to enhance functionality by integrating HubRegisterResponse for better registration handling
replace bitwise operations with Byte . toUnsignedInt for byte conversion to improve code clarity and ensure proper handling of unsigned integers
removed unnecessary parentheses around the string conversion in OpenTracingTransactionProducer . java to improve code readability and maintain consistency
updated default value from CachingBuildEngine . DepFiles . ENABLED to CachingBuildEngine . DepFiles . CACHE to align with the updated caching behavior in the build engine
changed the default value of rangePannable from true to false to align the functionality with intended usage of the plotting feature
update the work mode handling logic in AllAppsContainerView . java to ensure proper addition of views based on the current active page type
changed variable visibility from static to private for GLCaps and GcodeRenderer , and FPSAnimator in Visualizer2TopComponent . java to enhance encapsulation and maintain proper variable scope
added handling for CancellationException in FunctionTest . java to improve robustness by preventing application crashes due to cancellation issues
[ ci ] change constructor to protect
add some javadoc for defaulttrackselector to indicate that it ' s the only implementation
added sleep mechanism for UnseqMerging in LevelCompactionTsFileManagement . java to ensure proper synchronization during concurrent operations
update FeeCurrency assertion from Currency . AUD to Currency . BTC in BTCMarketsAdaptersTest to ensure test verifies the correct currency of the user trading
updated SQL table names and improved test assertions in HibernateDTOProjectionTest and JPADTOProjectionTest to enhance clarity and ensure correct retrieval of post data and assertions
modified the Unicode . java file to enhance data handling to improve data processing efficiency and maintainability
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added the ` updateHiveLLAPSettingsIfRequired ` method to ensure proper service component integration during auto instance installation
try to fix the build ( time issue in ci )
replaced SSECustomerKeyDeserializer with JSON POJOBuilder for better serialization handling to enhance flexibility in JSON object creation and support for custom key formats
added support for BIG _ DECIMAL in RangePredicateEvaluatorFactory to enable proper handling of bigdecimal values in the evaluator
refactor the inner class method calls to use a more consistent naming convention for processing environments to improve code clarity and maintainability by using a uniform naming convention
removed print statements for annotations in ParameterInfo . java to clean up the code and reduce unnecessary console output
fix : exoplayer2 crash when a video be create in live tv
added a new map to store the value of a response in the LocalNode class to ensure the response contains the expected data as JSON content
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement . java and DiskFileItem . java to address the deprecation warning of DBCP and FileUpload
[ iotdb - 2445 ] extend extend templatetemplateit to cover select - into statement ( # 4468 )
modified RTimerTree class to enhance functionality to improve performance and accuracy of timer data handling
change package name from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graphbuilder ` in multiple Java files to reflect the new organization of the classes within the core package
add a new test case for issue # 358 ( numberformatexception occur in some case )
updated the initialization and naming of QueuedThreadPool and ScheduledExecutorScheduler to include unique names to improve thread management and debugging by providing clearer identification of client threads
fix view result display and add option to show error log
add documentation for user and phone number endpoint .
added private constructor to several classes and created private methods to enforce singleton pattern to prevent instantiation
added null checks for responseMap and HTTP status codes in JsonHttpPropertyRequest . java and URLStreamProvider . java to improve error handling and logging for null responses
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
fix : do n ' t generate test suite for non - default parallelism
summary : add vmware . java test to ensure it run with jdk 8
add handling for SCARD _ E _ NO _ SMARTCARD in the error check to improve error reporting related to smart card presence
added @ SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary console output during test execution
camel - 4573 : camel - bindy should support bindy model to a value set ( # 4747 )
disable jabref preference now that they do n ' t apply
modified method signatures to use ThrowingRunnable instead of Runnable to enable more flexible exception handling by allowing subclasses of ThrowingRunnable
fix possible npe in crawldispatching recipe that may not have crawldispatching
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from 4.1 . 1 to 4.2 and refactored object handling in LiquibaseXMLTransformer . java to reflect the new version and improve type handling for better data processing
change the default certificate validity to 90 in proxycontrol . java to enhance security by allowing more certificates
improve frame time calculation by introducing smooth delta and lastDeltaUpdate to enhance animation smoothness and accuracy in frame timing
added null check for paginator and modified rawUrl initialization in HttpBatchReader and HttpScanBatchCreator to ensure proper handling of pagination when paginator is not set
added null check for compactionInfo client in Worker . java and implemented a test case in TestWorker . java to ensure proper handling of null values and validate functionality of the FindNextCompactRequest
fix shadowfragmentactivity . onsaveinstanceinstance to call onsaveinstancenotification on fragment
formatted code in BatchResourceFactoryBean . java for improved readability to enhance code clarity and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest . java to ensure correct color reference parsing for Android devices
added error handling for NoResultException in AbstractJPAQuery and created a new test for null as uniqueResult in AbstractStandardTest to improve robustness by handling potential NoResultException and ensure unique results are correctly retrieved
fix a bug where the community list be not include in a hierarchy hierarchy .
updated depth preference retrieval to use LawnchairApp instead of LawnchairLawnchairApp to ensure compatibility with the Lawnchair framework ' s depth effect settings
removed unnecessary import of ProcessTools in LocalManagementTest . java to streamline the code by eliminating unused dependencies
modified the updateTotalEnergyAverageUsage method to remove the current time parameter and directly accessed the head slot to simplify the method signature and improve code clarity by eliminating unnecessary parameters
improve tostring ( ) method of extensionstack to handle null value
2 . x : fix flatmap . onerror ( ) not call on onerror ( # 6896 )
added connection timeout handling to MultiGetRequest and ControllerStarter to improve connection management and allow configurable timeout values
updated the placement of the ` androidPlatformTarget ` initialization in ` AndroidPrebuiltAarDescription . java ` to ensure proper retrieval of the platform target object
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to test the model using a more generic model testing framework
added multiple instances of SystemResourcesEdgeEventFetcher and adjusted the inlineImage method to use this new boolean parameter to improve resource management and ensure consistency in image handling
added a new test to verify that the output hash is not calculated when the cache is not writable to ensure that the cache behaves correctly in handling build results without unnecessary data
camel - 8461 fixed the issue of camel - netty with thanks to mark .
modify the partition alteration call to use the table name instead of the old name to ensure correct table context is used for alteration
updated the error message for IllegalArgumentException in Transport . java to clarify that the Vertx instance must be created with the preferNativeTransport option set to true to ensure proper configuration of the transport option for domain sockets
add a new test for the color type handler ( # 4893 )
refactor StreamEx . java to improve code structure to enhance maintainability and readability of the code
updated hint settings for query timeouts in SessionImpl . java to ensure proper timeout settings for JavaEE queries and locks
add a new file ` StaticLoggerBinder . java ` implementing logger factory binding for static loggers to provide a centralized way to handle static logger instances for easier debugging
hbase - 23367 remove extra use of cellutil . clonefamily in put and put
added orientation comparison in TaskbarManager for improved resizing logic to enable dynamic resizing based on configuration changes
escape xml in occupant to avoid security vulnerability . smack - 65
fix ( db ) : fix race condition in storedirect . putlongstackput .
added multiple @ SuppressWarnings ( " mutable " ) annotations to multiple Main classes to suppress compiler warnings related to mutable operations and improve code clarity
jbrules - 2623 : fix a broken test break by previous commit
updated condition checks in DLNAMediaInfo , DLNAResource , and FFMpegVideo for better readability and logging to improve code clarity and maintainability by using ` System . arraycopy ` for array copying
fix non - blocking test so it pass for ci
move total difficulty update to the end of the chain ( # 1443 )
updated action handling logic for playback controller to simplify action assignment when the player is not seekable
refactor NativeLibrarySupport and SecurityServicesFeature to use CopyOnWriteArrayList and improve method parameters to enhance thread safety and maintainability of the code
be 0ace11f4 : make sure that the blenderer3d be render correctly . bug 2239818 .
added a check for the presence of a colon in the key alongside the existing index check to enhance validation logic for processing headers in HttpURLConnection
added PrincipalResolver as an Qualifier for principal resolution in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable the use of principal resolution for enhanced authentication metadata management
replaced ObjectMapper with Noggit ' s JSONParser for parsing JSON body to improve JSON handling and compatibility with modern JSON utilities
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve string handling by ensuring trailing slashes are properly removed from the builder
added pattern matching functionality to PatternsMatcher class and corresponding unit tests to enhance the flexibility of pattern matching based on user - defined patterns
hbase - 21623 addendum remove unneeded string concatenation in loadincrementalhfiles
fire potion change , now handle potion potion change ( # 1489 )
updated the order of parameters in the beginOrAdjustReorderPreviewAnimations method call to improve the consistency of the reorder preview animations
updated calculation of decreasePercent for clarity in ContractStateCapsule and ReceiptCapsule files to improve code readability and correctness
updated async handling in AsyncContentProducer and BlockingContentProducer to improve readiness checks to ensure correct processing of servlet states during asynchronous operations
removed null check for weightField in DocumentDictionaryFactory . java to enforce mandatory parameter requirements for weightField handling
added support for variable substitution in AppleBundle and created a test for Info . plist in AppleTestIntegrationTest to enhance functionality and ensure correctness of plist variable handling in the build process
fix turret bullet and add shooting option to the liquibase
change return type of adaptOrder methods to use OrderCreateApiRequest . OrderCreateApiRequestBuilder to ensure proper type casting for order adaptations
added a new file ` PreParseGrammarTest . java ` with XML grammar parsing functionality to facilitate testing of XML schema grammars with the specified schema
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java files to suppress warnings about missing document elements
added FontManager import and font overriding logic to ExtendedEditText to ensure custom font rendering for improved user experience
added a null check for user in the AuthorizeTag class and created a test for handling unauthorized requests to ensure proper handling of unauthorized requests and improve test coverage
camel - 8205 fixed the issue that camel - jaxrs component do n ' t handle unsafe character in the uri
added an override method to the setUpData method in JDBCGeometryTestSetup . java to ensure proper data initialization for the testing environment
added import statement for DumpHandler in MultipartFilterTest . java to enable the use of DumpHandler for improved logging capabilities
added a check to ensure the backend is closed before stopping the restore attempt to prevent potential errors during task cancellation
add server . rmi . create to help figure out how to create registry
use stringutils . join instead of string . join to improve code readability and reduce dependency on external library
added display metrics handling in the Resources class and updated test cases to utilize these qualifiers to ensure accurate retrieval of display metrics and improve test coverage for different SDK versions
[ java ] add memberid to service heartbeat counter for cluster .
added a conditional check for VersionCheck and updated numAttributes assignment based on its version to ensure compatibility with Java versions below 21 and above
custom expression : handle special case for ' - ' and ' - ' ( # 13792 )
updated debug and warning log messages in AjaxListener . java to improve logging clarity and ensure more accurate error reporting
added authentication and authorized routes to the AuthenticityController and implemented corresponding tests to enhance authentication process and ensure proper functionality through unit testing
add assertion to lower phase to ensure that there be not use of node in the lower stack
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for the HttpClientRequest functionality
update track selection to prefer content over technical preference .
[ hotfix ] fix checkstyle violation in runtimeserialization
ggb - 2331 fix for crop problem : only create new point if need .
improve javadoc of unitofworkfactory ( move to core )
added a new field ` allAppsCellWidthPx ` and updated references in ` DeviceProfile ` and ` WidgetPreviewLoader ` to use these variables to ensure consistent width definition for all apps in the application
added content type parameter handling and updated resource name setting in MailContentHandler . java to improve content type management and ensure consistent naming conventions
updated URI construction to use getLocalId ( ) instead of getRemotePath ( ) and modified logging message format in ThumbnailsCacheManager . java to improve clarity of URI and ensure accurate logging of generated thumbnail information
add mark ( ) and reset ( ) to reset input stream in order to prevent premature garbage collection .
add @ deprecate tag to com . jetbrains . http : / / issues . apache . org / activemq / browse / amq - 2184 - deprecate - migrate to jdk 1.5 . 0
ambari - 20744 . add an option to hide error stack on the error page ( dlysnichenko )
bug 11490 : add some logging to managementserverimpl and accountmanagerimpl when domain deletion fails
removed unnecessary null check for fremCall and dremCall in SPARCArithmeticLIRGenerator . java to simplify the code by directly emissing foreign calls without unnecessary exception handling
[ incubator - kie - issues # 5 ] mark mark _ templates a unsupported ( # 547 )
fix indefinite blocking of purchase callback in non - android apps
increase default test timeout from 100ms to 1000ms to allow for longer test execution time .
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and correctness in handling resource names
deleted two files and added classes MrefStat and MrefStat1 with relevant methods to introduced new class implementations for improved lambda method reference statistics
added StringUtils import and modified scope handling in DependencyInsight . java and DependencyInsight . java to ensure proper compilation behavior when scope is blank
[ btc - e ] improve error message handling in case of no trade history
use hamcrest assertion instead of junit in microprofile / fault - tolerance - backport main ( # 1749 ) ( # 6250 )
add ` getPaymentRequestUrls ( ) ` method to ` BitcoinURI ` and corresponding tests in ` BitcoinURITest ` to support multiple payment protocol requests for the bitcoin URI
planner - 383 improve error message when property type be not find / correspond to a wrong collection
removed duplicate setting of folder info in FolderPagedView . java to eliminate redundancy and improve code clarity
do n ' t interrupt buffer write if lock owner can release the lock
[ java ] fix basicabstracttuple to hold any element of the value when check for null
replaced Java NIO file reading with IOResource for parsing linter configurations to improve compatibility with modern Java file I / O operations
replace direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post to ensure UI updates are executed on the main thread for thread safety
fix inventory . oninventorytick method call to correct inventory index handling to ensure proper tracking of inventory tick events
added support for OCELOT _ BABY event in PlayerEvents . java to enhance player event handling for bABY interactions
[ flink - 15616 ] [ state ] add miss @ publicevolving annotation for the private field in statetaketimeconfig
added handling for null values in PreparedStatement and Array classes to ensure proper type management when passing null values to the set method
[ java ] correct description for recordings in archive tool .
changed string concatenation from double quotes to single quotes in StringBuilder to ensure consistency in character formatting across different operating systems
added a new test method for JSON serialization in SnapshotVariationsTest . java to ensure proper functionality of JSON serialization in the application
refactored BroadTest to encapsulate transaction caching and block invalidation logic to improve code readability and maintainability by isolating cache management functionality
added support for LensMask handling in IPCameraHandler and DahuaHandler to enable / disable primitive modes for improved configuration management
removed NoSuchBuildTargetException from method signatures in BuckConfig and BuildRuleFactoryParams to simplify code by eliminating unnecessary exception handling
refactor ChangeLogIterator to accept parameters for list of ChangeSetFilters to improve flexibility in handling different change set lists during initialization
make sure we do n ' t get stack trace for guest exception in the launcher
fix : eclipselink ' s option _ out _ tracking be disable by default
added serialVersionUID to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization and version control for these classes
fix spacebefore ( ) for annotation with parent
add copy ( ) method to ServerCacheOptions and change default return type to DefaultCacheHolder to enable the copying of ServerCacheOptions based on user preferences
added a new test method ` testHiddenBorder ` to verify visibility of hidden borders to ensure that the UI behaves correctly under floated elements with overflow hidden
updated the type of ProjectGraph from ActionGraph to TargetGraph in WorkspaceAndProjectGenerator . java and ProjectCommand . java to enhance graph functionality by integrating with Buck ' s rules framework
changed the variable name from LIVE _ URI to PROD _ URI and added error logging for the Kucoin host exception to improve clarity of code and enhance error handling for better debugging
updated resource path handling and error messages in SpringResourceAccessor . java to ensure proper path resolution and improve clarity in error reporting
[ smart home ] fix unit test for micrometer and cicrometer ( # 6874 )
updated vertexMask retrieval to use getMaskWithSizePacked method to ensure correct handling of size packed vertex attributes
deleted the Tls12SocketFactory . java file to the functionality was deemed unnecessary or redundant
fix the issue that texentryresolver do n ' t resolve any of the ref entry of the bibdatabase
added a method to check if the Robolectric is legacy mode before executing legacy resources to prevent unnecessary execution of legacy resources in Robolectric tests
added a check for FirebirdDatabase to return a specific DatabaseDataType to ensure proper handling of double precision data in Firebird databases
added null checks for data source and transaction manager in DefaultBatchConfigurer to ensure proper initialization when datasource is not provided
test ( stubs ) : move package - info . java to unittest
updated command from " ping - c5 www . google . com " to " ping - c5 127.0 . 0.1 " and changed test timeouts to include timeout to improve command validity and allow for test execution with longer timeout values
no effective change - use try - with - resources
updated TermScorer to conditionally use scoreMode for scoring to ensure correct scoring behavior based on score mode
make dataflowmetrics a first non - null to avoid npe
server : fix listvirtualmachines to work by ip address
refactor dynamic partition pruning logic to use a new method for obtaining object inspectors to improve code clarity and maintainability by making object inspection logic more explicit
added a method to remove build artifacts from the artifact filesystem and corresponding unit tests to enable efficient deletion of existing build artifacts before execution
added functionality to update selection interval for selected rows in ThrustCurveMotorSelectionPanel to ensure that selected rows are dynamically updated when needed
replace assertthrows arraystoreexception . class with assertarraystoreexception in our integration test .
refactor PropertySource class for improved readability to enhance maintainability and ease of understanding for future developers
allow to configure user agent in http client ( # 1588 )
refactor session management in MemorySessionStore to use SessionData for better encapsulation to improve maintainability and streamline session restoration process
updated assertions in IssueTest to include a detailed error message for expected 5 distinct test instances to improve clarity of test results and ensure consistent data provider behavior with identity collections
fix - fix npe when read binary data from file with no byte type
add event on activationrequestdenied ( ) for character system .
added @ Override annotations and modified method calls in GraphApplet . java to improve code clarity and ensure proper method overriding
update task view snapshot radius when recent view change .
added logging functionality to generate Swagger for 3rd party services to improve visibility into generated Swagger for better debugging and tracking
changed the return type of the put methods in ArrayMap from void to int to enable the method to provide results for further processing
updated KafkaContainerCluster to include startup timeout configuration and simplified broker handling to improve stability of Kafka container startup processes and enhance code readability
no jira - fix for http : / / issues . apache . org / activemq / browse / amq - 2517 - push consumer send back should not be swallow
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy by preventing duplicate header additions
updated EventListenerList to use ReflectUtil for package access checking to enhance security and ensure proper package access during event type registration
added a new ` CustomAdapter ` class and modified the ` onCreateView ` method to use it in the ` ApplicationsFragment ` to enhance functionality by allowing custom application list and image lists for better user experience
updated the applyIcon method signature and added null checks for iconView and task in KeyboardQuickSwitchTaskView . java to improve code clarity and ensure proper handling of null values
improve resource management in downloadtracker , remove unnecessary try / close block
fix : http : / / code . google . com / p / mybatis / issues / detail ? id = 437 . we should push the current sqlexception to the stack instead of use it .
added JUnit test annotations and modified the execution context handling in HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to enhance test coverage and improve code clarity by removing unnecessary context initialization
http : / / issues . apache . org / jira / browse / amq - 3872 - fix potential outofmemoryerror in slip
added support for ENABLED _ TS in VersionTargetGraphMode and versionedTargetGraphCache to enable dependency management in the build process
updated UpgradeCatalog150 . java file to enhance catalog upgrade functionality
renamed ` createTestNet3 ` to ` createOldTestNet ` across multiple classes to improve clarity and consistency in naming conventions for test network parameters
only update selection in propertiesview when there be more than one geos
updated onboarding preferences handling in AppsDividerView and added nullability annotation in ActivityContext to improve code clarity and ensure proper null checks for onboarding preferences
replaced the deprecated ` IndexOutput ` class with ` BufferedIndexOutput ` and updated the ` flushBuffer ` method to improve compatibility with Lucene ' s buffer handling and enhance code clarity
pdfbox - 5414 : avoid clipping to create a rectangle when there be no child
removed synchronization around local address assignment in SocketChannelImpl . java to improve performance by reducing unnecessary synchronization when the channel is open
added methods to add multiple values to the row in TemplateTransformer and implemented a corresponding test in TestTemplateTransformer to enhance data handling and ensure correct processing of multi - value values in transformation
fix a bug in save wallet on window . resolve issue 61 .
replace the indirect reference to ALPHABET _ STRING with a constant CHECK _ DIGIT _ STRING for clarity to improve code readability and maintainability by using a more descriptive constant name
truffle - dsl : fix type inference of unexpected return type .
removed redundant check for stored field in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : fix query with timestamp with nan in where clause
remove unnecessary ' if ' statement around runnables . pop ( ) .
camel - 14650 - camel - gcs : improve the documentation for the default storage url
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to introduce a wait mechanism for initialization checks to improve synchronization during connection initialization
updated directory context references from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistent data retrieval by using a single directory instead of null
refactor FaultTolerantChunkProcessor to use a dedicated filterCount variable instead of size to improve code clarity and maintainability by centralizing filter management
modified tabbedMethod method to correctly nest tabs and updated import statements to improve code readability and ensure proper handling of exceptions during file operations
replaced multiple conditional checks for terminal instances with a single assumption check to improve code readability and reduce boilerplate code
[ # 8803 ] remove admin check from getfeedbacksessionsaction ( # 8803 )
adjusted calculations for currentSelection and currentSelection in AllAppsView . java to improve selection logic by adjusting column calculations and enhancing responsiveness
bugfix # 211320 , make sure threadinfo . initialize ( ) do not notify client on result availability
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog , modified encryption handling in ExportPanel , and improved file listing logic in DataModelManagerDialog to enhance functionality and maintain consistent behavior when managing database connections
replaced hardcoded buffer size value with a static final variable WRITE _ BUFFER _ SIZE across multiple classes to improve memory management and maintain consistency in naming conventions
lucene - 8711 : do n ' t compute size of empty segment a size might cause indexwriter . adddocument ( ) to fail
bugfix : fix a bug that cause armature modifier to not work if dvert be empty .
refactor FileDisplayActivity for improved readability to enhance maintainability and reduce complexity of the code
avoid fill in stack trace in applyspecialization
update the method to return the average height of lines instead of the fixed size to improve accuracy of height calculation by considering line average values
replaced singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing display configurations
optimize the processing of quoted strings in ` valStr ` to improve efficiency by avoiding unnecessary quote processing
replaced Long . valueOf with IdConversion for better type safety and updated traceId handling in ServletHandlerInterceptor to ensure correct conversion of IDs and improve trace management in the server tracing process
renamed the method ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig ( ) ` in ` ServerDatagramConnectorTest . java ` to improve clarity of test methods and implement a test for larger data sizes
solr - 7406 : fix a typo in testsqlentityprocessorDelta . java testsqlentityprocessorDelta . java
modified caching logic in Cache . java to enhance performance and efficiency of data retrieval
updated variable names and method calls in ResourceSetRegistrationEndpoint . java for clarity and consistency to improve code readability and maintainability by using more descriptive variable names
lucene - 5969 : remove unnecessary checkindex call from testunifiedhighlightertermvec ( # 1240 )
added a JFrame and a data data point button to the GcodeTable class to enhance user interaction with the GcodeTable data source
change use of webapp connection timeout from a constant to config value .
updated various classes to enhance error handling and improved code clarity to enhance maintainability and readability of the codebase
updated the TestMediaService class for improved functionality to enhance media service testing capabilities
rename the static string for the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK constant to improve clarity and consistency in naming conventions
add a new file MarketsPrintTool . java that prints market currency details and cryptocurrency details
add hostname validation and throw exception if component be not valid in account id
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance functionality for registering security keys in the application
modified the ServerSpanThreadBinder class structure to enhance thread safety and improve performance
updated BulletPhysics and BlockItemSystem classes to improve user pointer retrieval and adjusted block bounds calculations to enhance code clarity and ensure correct functionality of user pointer management
fix csv2shape ' s tostring ( ) method ( # 1151 )
fix unused import and remove some dead code
refactor parameters class for improved clarity to enhance maintainability and readability of the code
added a line to ignore null values in the PiePlot class to improve compatibility with null value handling in charts
refactor bundle loading logic in ResourceBundle . java for improved clarity and efficiency to enhance code maintainability and reduce complexity in bundle processing
fix bug with underscore in pdf name ( # 788 )
aFreeplaneaction : do n ' t allow action to be edit in script ( except during edit )
added a userModified flag to LoginSamlAuthenticationProvider to track whether the user has been modified during authentication
added a new file TestSealedObjectNull . java containing a test for SealedObject with null cipher to verify the behavior of SealedObject with null values in Java
renamed methods onOpen to setResponse and succeeded in ConnectPromise . java to improve clarity of method functionalities regarding response handling
fix compatibility with 1.16 . 5 and remove tag . snow . istags
added a lastTradeId tracking mechanism to the CryptsyAdapters class and updated Trade class to include the trade ID to ensure trades can be accessed by their ID for better tracking and representation
added error handling when closing the HMS connection to ensure proper resource management and logging when closing the Hive connection
fix ( build ) : use random . nextlong ( ) to generate unique seed
updated device profiles and device specifications in DynamicGrid . java to enhance the dynamic grid configuration for Nexus 5 devices
2 . x : add disconnectbeforeconnect support ( # 6014 )
replace type ' s newInstance method with ReflectUtil ' s newInstance method in SynthContext . java to improve instantiation handling for SynthContext
added support for a new whitespace option ` WHITESPACE _ AROUND _ TEXTUAL _ OP ` in the PHP format handling logic to enhance format formatting capabilities to include additional whitespace requirements
updated file validation logic in SaveTask . java and added unit tests for its functionality to ensure only valid files are processed and improve test coverage for project - related functionality
[ iotdb - 3181 ] fix concurrent modification exception of mlogwriter . save ( ) due to lack of synchronized
http : / / issues . apache . org / jira / browse / amq - 3872 - fix regression inmtpmanager . add ( mutablelogevent )
replaced LengthLike with NonNegativeLengthLike in PrimitivePropertyBuilders to improve the handling of non - negative length aliases
tsp : do not pass user info to createcontext ( ) a per sebb note
fix problem with j2cl and j2cl handling of nested exception
added an import statement for Joiner and updated error message formatting in AndroidPlatformTarget to improve readability and provide clearer guidance on installing subprojects using the Android SDK Manager
reduce cache size to 8gb in OmniNotes . java to improve performance by reducing overhead associated with memory overhead
[ scb - 2370 ] set default value of invocationstagetrace to 0.0 , also add a new test case for invocationpublishingmodel ( # 2370 )
added work around for npe issue with fips keystore and empty stream .
updated server socket configuration and port handling in UpstreamCheckUtilsTest . java to allow dynamic port assignment and improve test reliability
ticket # 3703 : fix bug that could cause that the split pane do n ' t disappear
add a check to configure how shader storage blocks are used in the GLRenderer class to ensure compatibility with OpenGL 3.0 and OpenGL 4.0 environments
modified PopulatorContext class to enhance context management to improve performance and maintainability of Populator operations
skip saveallnotification for project that do n ' t require it ( # 2971 )
fix encode issue , use file . encoding in zookeepermanager
modified argument validation in IkStepDefinition . java to ensure proper handling of empty arguments to prevent potential ArrayIndexOutOfBoundsException
replaced string literals with direct string literals in FakeOSSOHeaderDecoder to improve code readability and maintainability by reducing string literals
camel - 17684 : deprecate the generated java source and configuration class in camel - maven - plugin ( # 7444 )
modified debug log messages in DerbyDatabase . java to remove unnecessary details to improve clarity in error reporting and reduce noise in logs
[ drools - 5862 ] fix flaky test ( # 1623 )
changed parallelStream ( ) from parallelStream ( ) to stream ( ) for improved performance
updated method checks and messaging for improved handling of the hub configuration to enhance code readability and provide informative feedback when the hub mode is already set
added new constants for Java VM versions and a corresponding test method to enhance compatibility with the Eclipse OpenJ9 VM
updated font logging messages in FontFamily . java and added a new DebugFonts . java file to enhance clarity of log messages and support for different font types during addition
added import for HttpVersion and updated NegotiatingServerConnectionFactory to use it to enable support for HTTP / 1.1 in the server configuration
added RateControl import and set it in MaxConcurrentStreamsTest . java to disable rate control for HTTP / 2 connections to improve performance during concurrent stream processing
added a new file Test6741426 . java that implements a JTextField with custom Nimbus look - and - feel to provide a demonstration of using NimbusLookAndFeel for custom UI appearance
update the assertion to display the exception message instead of a failure message to provide more context in error reporting for better debugging
added null checks for ` dbMgdPath ` and ` dbExtPath ` in HMSHandler . java to ensure that made managed , external , and database paths are validated before proceeding
add package s3copyobjectrequest to support copy / paste functionality
removed the accentColor parameter from setup methods and added theme handling for category settings to simplify theme management and improve consistency with the app ' s theme
updated the error message to include the fileAtRoot variable to provide more context in the exception message for better debugging
replaced specific TypeInformation < Map > and Collection < ? > types with ClassTypeInformation . LIST in MappingMongoConverter . java to simplify type information handling and improve code readability
fix check for null or empty address in client network config . fix # 4203
8277488 : add exception for expire docusign root to verifycacerts test
change compute to return the number of event instead of void , return zero for all compute method .
added conditional checks before setting menu mode in ModeToggleMenu . java to ensure menu state only updates when appropriate
pdfbox - 5714 : fix arrayindexoutofboundsexception bug ( alexander pivovarov via jason dere )
add a new test class ` FinalizerInfoTest ` to verify the finalization of objects to ensure that the ` MyObject ` object is properly initialized and finalized within a concurrent environment
camel - core optimize : use doonnext instead of map to avoid call to map twice .
refactor the handling of custom receiver addresses in BurningManService . java to improve clarity and flexibility in determining the receiver address during compaction requests
refactor StringSubject class to enhance readability to improve maintainability and ease of understanding for future developers
temporarily ignore batchvalidatesigncontracttest . testlongdata ( ) because it be too slow .
change method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to maintain consistency in method naming conventions
modified query saving to include the " from : " prefix in the recents query to ensure correct handling of query strings by removing the " from : " prefix
removed the conditional check for rebalance in SimulatorDiscoverer . java to streamline the code by eliminating unnecessary checks
added YubiKey account import functionality in YubiKeyAccountRegistryEndpoint to enable proper handling of yubikey account states during device registration
refactor shader names and texture handling in multiple classes for consistency to improve clarity and maintainability of shader usage across the application
added null checks to ` cnt ` in ` Container . java ` and set padding in ` SideMenuBar . java ` to improve code robustness and ensure proper padding during rendering
fix typo in AbiWriterProtocol . java file to improve code clarity and maintainability
fix nullpointerexception when use dimension caption in hierarchy hierarchy ( # 1588 )
[ ds - 3952 ] change entityitem # setdataflag to use gratinity instead of immOBILE .
another partial fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 50737 to show up on jdk 6
reactivate requestblindVotelistfromnetwork refactoring ( remove unused method )
added a new test method ` testCase4 ` to validate PostgreSQL connection and connection behavior to ensure proper functionality and reliability of database interactions in a multi - threaded environment
updated substring method in SubtitleUtils and modified the index used in RemoteUtil to improve code readability and consistency in string handling
fix : pretty - printing should handle multi - line comment ( # 3416 )
[ gr - 8258 ] use atomicreferencefieldupdater in singleimplementorsnapshot to improve performance .
added a null check before adding query data in SimpleFacets . java to avoid potential NullPointerExceptions when excluding main queries
fix a bug in get merged thing ( # 4379 )
updated error handling in Ktab . java to use error messages instead of printHelp to improve user feedback by clearly indicating when a command is not provided
added a check for the existence of the output directory before returning it to ensure that the process does not proceed if the output directory already exists
[ amazonechocontrol ] bugfix : fix parsing of iso date .
add test case for high performance java persistence
changed ` canAccessDbaRecycleBin ` from a boolean to a Boolean and updated error handling logic to improve type safety and provide warning for non - existent database connections
added a SimpleClientHttpRequestFactory to set connection and read timeouts for HTTP requests to improve request handling by setting timeout settings for better stability
fix issue with sourceroot file with the same name .
remove useless system . setproperty call ( graalvm _ version )
added token validity handling to ClientAdminBootstrap to ensure that new token validity settings are set to null if not already set
update return statement to account for Android API version to ensure compatibility with different Android API levels
refactor : remove redundant ' this ' keyword in propertyplaceholderhelper , and update related code for clarity .
remove extra information about number ( use in log message )
refactor ZkSolrClientTest to improve synchronization and collection processing logic to enhance thread safety and reliability of collection management in the tests
added BigInteger type to simpleTypes in MongoMappingContext . java to support proper handling of larger numeric values in MongoDB operations
added a condition to check if the button text equals the view string to ensure proper handling of toast messages for the current view
modified the conditional logic in MEncoderVideo . java to include a condition for isMencoderNoOutOfSync to ensure proper handling of MEncoder - related conditions during video processing
reduce event loop size down to 15 thread
changed access modifiers of variables and methods in CountMin4 and related classes for better visibility to enhance encapsulation and improve code maintainability
updated ExternalFileField to implement file sorting functionality and added a new test class to ensure proper sorting of external files and validate functionality through unit testing
update error message from " Invalid URL " to " Connection error " in DoiFetcher . java to clarify the specific error context for better debugging
added functionality to save and retrieve source ID from rocket components in OpenRocketSaver . java and FlightDataBranchHandler . java to enhance the serialization of rocket components by including their source information in the generated XML
make check ( ) final to allow subclass to override
added handling for synchronizing file operations in FileActivity to improve user experience by providing specific feedback when a file cannot be synced
updated URI construction and added URL encoding for image generation in ThumbnailsCacheManager to improve URI clarity and ensure proper encoding of image URLs
added a null check for the " cn1 $ infinite " property in InfiniteContainer . java to prevent potential NullPointerExceptions when the property is not initialized
change the initialization of the total variable and adjust the calculation logic to correct the total value calculation in the IntHashSet class
added a lock check before updating an entry in FeedRefreshUpdater to ensure that updates occur only if the feed lock is enabled , improving error logging
refactor handling of ACE flags in SolarisAclFileAttributeView . java to improve readability and maintainability of the code
refactor the creation of edges and simplify the creation of nodes in LatLonTree to improve code efficiency and maintainability by reducing unnecessary list creation and enhancing sorting capabilities
added IOUtils import and improved resource management in ZkCLI . java to ensure proper resource cleanup and prevent potential memory leaks
remove \ n and \ x0a and \ x0b from comment , \ n should be \ n
added strict parameter handling in Main . java and corresponding test cases in MainTest . java to enhance flexibility in command line argument parsing for strict mode
add custom constraint to defaultvalidator . fix # 1856 ( # 1856 )
camel - 14263 : camel - http should use http4 a default to avoid reflection . work in progress .
added a call to waitForThingsToLevelOut with a delay of 30 seconds to improve stability by addressing potential waiting issues
simplified the length validation logic in UBJsonWriter . java to improve code readability and maintainability by reducing unnecessary complexity
updated ApplicationTest . java to modify import statements to streamline code by replacing outdated references
change connectionfactoryimpl to use stringbuilder instead of string for string concatenation
refactor : use new type enum in method generator ( # 2169 )
[ java ] handle completion of recording descriptor and subscription descriptor in archive .
added cache key and lookup configuration to EntityProcessorBase to ensure proper handling of missing ' cacheKey ' and ' cacheLookup ' parameters for entities
added a new file PutfieldError . java that demonstrates the throwing of IncompatibleClassChangeError to validate that the expected error is thrown during runtime exceptions handling
fix client fail to connect to domain that have whitespace in host ( # 4887 )
add log to memtable to help diagnose deadlock
replaced instances of ` Space . build ( " " , Collections . emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple files to standardize space configuration for better consistency across the codebase
replaced the method ` encodedLength ( ) ` in ` Flyweight . java ` to maintain consistency in method naming conventions
rename TestMethodResultMapBuilder class to improve clarity and consistency in naming conventions
added handling for Integer method invocations in FindNullDeref . java to ensure proper exception handling for Integer types and prevent runtime errors
[ flink - 28454 ] [ runtime ] remove unused method from tasklocalstatestoreimpl
update string return values in mmm Utils . java and ppp Utils . java to include leading zeros to improve readability and precision of time representation
updated Utilities and FloatingIconView to handle DeepShortcutView instances separately to improve the handling of view types and ensure proper drawable retrieval for both ImageView and DeepShortcutView
changed the type of the JwtClaimValidator from String to Object and updated the validation logic accordingly to enhance type flexibility and improve the validation process for JWT claims
updated method names in Coinmate classes for better clarity and consistency to ensure uniformity in naming conventions and improve code maintainability
move the code to a new file for cobertura and define a cobertura coverage controller
added a check to ensure the event bus is not registered if it is already registered to prevent potential NullPointerExceptions when invoking the EventBus
added ASCII - only check to normalize method in NormalizerBase . java to optimize normalization process by skipping unnecessary operations for ASCII strings
[ flink - 23737 ] [ runtime ] fix the bug of migration task check
added error handling for SQL update in SpillableGroupByIT and created test cases in NoOpStatsCollectorIT to ensure proper error reporting and validation of SQL statistics collection in the test suite
camel - 16400 : split unit and integration test for camel - cometd and camel - ssl
added support for OK attribute in HtmlTag . java and updated relevant test cases in OtherTagsTest . java to ensure compatibility with version 4. 01 and above
add a line break to the HTML report in HtmlCoreReport . java to improve readability of the report output
update memory usage calculation to handle null scores to ensure accurate memory usage estimation even when scores are not provided
added a custom type adapter for custom types in CustomTypeAdaptersTest . java to ensure proper serialization and deserialization of collection elements in Gson
added extra data setting from mining parameters in MergeCoordinator and created a test for extra data retrieval to ensure correct handling of extra data during mining operations and validate functionality through testing
added a new static final Map < String , Integer > to the DependencyParser class to store specific arguments for parsing to improve configuration flexibility and maintainability by allowing dynamic property retrieval
add a bit more javadoc about server . properties
fix potential deadlock issue during migration from 3.0 . 3 to 3.0 . 3 ( # 2918 )
add miss type parameter to restclientrequest . attach ( ) to avoid classcastexception find by lgtm . com .
move twitterbootstrap css to twitterbootstrap css to avoid conflict with other jar
remove treebank language pack parsing since it ' s not use
add load method to abstractentityloader and define it in uniqueentityloader .
hbase - 25836 the problem with cancel element from taskpool should use clear instead of remove
deal with empty width / height case , call super . setsize ( w , h )
fix hikaripool . getconnection ( ) return null if there be no connection to create a hikaripool
replaced the ` assureMatchVersion ( ) ` method with a ` Version . LATEST ` in multiple filter factories to ensure consistency in version handling across the analysis factory implementations
fix proxy resolution for default interface method ( # 8043 )
tighten parser for drill - 80 : switch off parser with COMMA token for drill - 80
refactor multiple subject classes including GuavaOptionalSubject , MapWithProtoValuesSubject , and ProtoSubject to improve code organization and maintainability
add a check to throw an exception when the payload length be zero for an invalid frame .
moved the PublishSubscribeChannelParser and related classes from the ' channel ' to the ' dispatcher ' package to better organize the code structure and avoid potential naming conflicts
hive - 16428 : added numeric execution id for optimized bootstrap to avoid npe ( prasanth jayachandran review by gopal v )
change imageprocessor to avoid image resolution .
added imports and modified logging in SolrConfig and SolrConfigHandler classes to enhance functionality and improve parameter handling in SolrConfig
updated delayUntil calculation to use current time instead of a constant to improve responsiveness by reducing automatic synchronization delay
updated the declaration of the variable ' afterConversionTime ' in SegmentV1V2ToV3FormatConverterTest . java to ensure consistency in variable declaration style
refactor path handling in QueryProcessExecutor to use a consistent Path object instead of fullPath to improve code clarity and maintainability by standardizing path construction
[ geos - 7109 ] fixed package scan when there be a ' file : ' in the url
[ flink - 20727 ] [ table ] introduce timestampextractorutils to extract unique field reference for tsextractors
added a new file SpringSecurityAuthenticationSource . java to handle LDAP authentication sources to provide a structured way to retrieve principal and credentials for LDAP users
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
change the minimum SDK version in ShadowAlarmManager from Lollipop to KITKAT to ensure compatibility with newer Android versions while maintaining existing functionality
refactor custom filename dialog implementation in GenericViewFragment to use a cached list to improve code maintainability and streamline the custom file name display process
added a new test method ` testNewput ` and modified assertions in ` StoreAPITest ` to improve testing coverage and correct assertions for asset issues
removed the collection name from the stream method signature and initialization in MongoTemplate . java to streamline the code by eliminating unnecessary method calls
map overview : fix mouse zoom , now work as expect
added similarity handling to KNearestNeighborClassifier and updated related tests to enable customization of similarity for improved classification accuracy
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query performance and maintainability by using a more efficient query parser
replace ` toString ( ) ` method with ` getReason ( ) ` method in ` LowResourceMonitor . java ` to ensure accurate retrieval of reasons associated with the low resource check
update package - info . java files for mmm and ppp to ensure consistency and clarity in package documentation
added MTU request handling and testing in ShadowBluetoothGattTest to ensure correct MTU request behavior on BluetoothGatt interactions
refactor the creation of the ServletOutputStream to a separate method createServletOutputStream to improve code readability and maintainability by reducing duplication
added logging for UnsatisfiedLinkError in VoskSTTService to enhance error handling and provide clearer diagnostics for unavailable links
fix concurrentmodificationexception in channelprocessingmanager ( # 2203 )
updated Japanese language messages in Resources _ ja . java to improve clarity and accuracy of displayed information
corrected condition from ' size > 0 ' to ' size > 1 ' in JDBCTypeMapping . java and modified test assertions in JDBCTypeMappingTest . java to ensure correct handling of size limits and improve test accuracy
made methods ` addPlayer ` and ` removePlayer ` synchronize and updated their usage in ` GenshinScene . java ` to improve thread safety for player addition , removal , and entity modifications
refactor screen reader management by replacing the isScreenReaderActive method with a stateTester to improve thread safety and enhance accessibility handling within the terminal view
added support for show navigation functionality in MenuBar and SideMenuBar classes to enhance user experience by allowing more flexible button visibility options
updated the subscription function in PoloniexManualExample . java and added disconnection handling in WampStreamingService . java to improve code clarity and handle disconnect states more effectively
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator to ensure energy limit is greater than 0 and improve error handling
renamed variable ` url1 ` to ` javaUrl ` for clarity and added ` protocol ` property to enhance code readability and maintainability by using more descriptive names and properly managing URL protocol
camel - 567 : added getter / setter for the namespaceprefixref to be use in camel - jaxb
refactor assertions in TestRange to use a new utility method for comparison dates to enhance code readability and maintainability while ensuring accurate date comparison logic
added security checks for JettySolrRunner in BasicAuthIntegrationTest and updated ZkStateReader to utilize securityProps to enhance security by verifying access to the correct security settings for authentication processes
add pricefeed to price feed and update currency code in price feed
refactored configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to ensure consistent default values for replication configuration in tests
8015349 : ` ` abc ' ' . lastindexof ( ` ` a ' ' , - 1 ) should evaluate to 0 and not - 1
added file downloading and saving functionality in FileDownloader . java to enable file management for downloaded files in the application
[ java ] : make sure to set the length of the log file to be set .
added a method to check if the registry is running and a retry file deletion in FileUtils to improve reliability of registry checks and enhance file deletion reliability
added import statements for componentPresetDao and invoked startLoading ( ) method in Quick3dMain and TextureTest classes to streamline code by eliminating unused imports and ensuring proper loading sequence
added suppressing and suppressing raw type warnings in multiple Java files to improve code clarity and suppress compiler warnings for raw types
added null check for instances in TraceFeignContext . java to ensure safe handling of null instances to prevent potential NullPointerExceptions
phoenix - 4875 add support for transaction _ must _ be _ enabled _ to _ set _ isolation _ level exception in phoenixconnection ( addendum )
added transaction attribute handling in AbstractStepFactoryBean and improved error handling in ItemOrientedStep and SkipLimitStepFactoryBean to enhance transaction management and ensure proper exception handling during processing
refactor CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient and update security logic class to enhance abstraction and maintainability of the codebase
added functionality to add a new category in the navigation drawer to enhance user experience by providing a convenient way to add categories through the navigation drawer
renamed method ` cancel ` to ` cancelMatchingOperation ` and updated method names for clarity to better reflect functionality related to matching operations in the application
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to use TypedValue for text size to improve clarity and maintainability by using a more descriptive variable name for font size
make sure that only valid constant frame be analyze . ( bug # 1193232 )
refactor multiple Java classes including DistBuildTargetGraphCodec , ConvertingPipeline , and Parser to improve code organization and maintainability
changed return statement to return a new ArrayList instance to ensure the returned list is pre - populated to prevent unintended modifications
removed unnecessary lock service waiting and adjusted the lock retrieval method to streamline the code for better readability and efficiency
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to utilize this method to enable dynamic updating of the revision for improved instance management
updated foreign key and index handling in TableRetriever and AbstractRetriever classes to improve clarity and consistency in foreign key and index names generation
camel - 16067 - camel - aws2 - s3 : configuring endpoint should not override endpoint in the same component - s3
removed unnecessary import of TradeHistoryParamCurrencyPair in BitstampAccountService . java and added a new method getBitstampUserTransactions in BitstampAccountServiceRaw . java to streamline code and enhance transaction retrieval functionality
added a try - catch block around the component retrieval to handle potential NoSuchComponentException to improve robustness by returning null when the component is not found
changed push method return type from void to boolean and updated related imports to enable push functionality to provide feedback on whether the push was successful or not
updated LegacyAddressTest to load test data from a dataset and improved comparison logic to enhance test coverage for legacy address configurations
changed the access modifier of the findDropTargetAt method from private to public to allow access to the method from other classes or packages
added a new setupPushWarning method and refactored notification handling in NotificationsActivity to improve code organization and enhance notification display consistency
nettyasynchttpprovider : closing a channel on an exception ( smack - 371 )
use stringutils . isempty instead of ! = null to avoid npe .
add marble diagram to the stubber and the user guide
[ core ] disable memorymanagertest on circleci
nifi - 1744 : added timezone support to web interface . this close # 437 .
fix bug in split that could trigger arrayindexoutofboundsexception .
no effective change - code cleanup - remove unnecessary null check
fix issue when add a circuit to a different cache ( # 2747 )
replace GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
- move source / sink getter to factory method to make it easy to use .
changed logging behavior in FastBindLdapAuthenticationHandler from error to info level to improve logging clarity for authentication failures
updated ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance user experience with better focus management
fix classcastex and point length for freehand ( function [ { 1 , 2 , 3 , 4 } ] ) , should be int64
changed the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to CasRiskBasedAuthenticationEvaluationStartedEvent to ensure consistency in event handling
refactor database connection handling and logging in SchemaCrawlerMain . java and Executable . java to improve error handling and resource management to ensure robust execution of database connections and enhance debugging capabilities
bump default tl version to v1.2 with a fallback for old jdks
[ java ] fix typo in exception message for allocate counter .
modified the stopAudio method and adjusted audio index handling to ensure proper functionality when stopping the audio queue and its position is invalid
updated debug logging statements in HttpConnection . java to simplify the logging structure and improve readability
added support for the ` @ Transient ` annotation in ` JpaPersistentPropertyImpl ` and created a corresponding unit test for it to ensure proper handling of transient properties in JPA persistence layer
updated test cases to ensure correct stack ID retrieval for HDP - 2.1 . 1 to ensure accuracy of stack version comparisons within the cluster
fix eval return type to allow jdk 1.5 to work .
change visibility of ` isBinaryType ` method from private to public and enhance logging in ` Proxy . java ` to improve accessibility of ` isBinaryType ` and enhance debugging information for binary content type detection
corrected the configuration key for the maximum data size in HiveConf . java to ensure consistency with the naming convention for dynamic partition pruning
remove unused code and improve performance
lucene - 1772 : remove the deprecated default _ OFFHEAP constant from bloomfilterhandler and dictionaryindextype ( # 7262 )
use system property for line separator in tablewritertest to avoid cross - line line problem .
rename DebugHelper class in the codebase to improve clarity and consistency in naming conventions
added a boolean field ` ownsTexture ` to the ` ParticleEffect ` class and conditionally called it in the method to improve performance by preventing unnecessary processing when ` ownsTexture ` is set to false
added LDAP authentication configurations to HiveConf . java to enhance security features for LDAP operations
doc : add scope attribute to datacatalog search ( # 7952 )
refactor input method toggle logic for improved clarity and functionality to enhance user experience by ensuring soft input is shown for better user experience
add more test for data type converter that be fail due to primitive type conversion .
hbase - 26942 fix flaky test by delete mv db file and increase size
update error message to be more informative
changed the ` dropSequences ` method in multiple database classes to be abstract and overridden to ensure proper exception handling during schema migration processes
added a null check for the status variable to prevent potential null pointer exceptions during execution
codacy : avoid declare a variable if it be unreferenced before a possible exit point .
bug fix : only place icon in hierarchy if it ' s an active node
added a test for the findOne method in MongoTemplateTests to ensure that upsert functionality works correctly for non - existing documents
updated calculations in RowIndexSeekerV1 , ByteBuff , and CellFlatMap classes to use explicit low and high comparisons to improve clarity and consistency in bitwise operations
added stats recording functionality and improved broadcasting with null checks to enhance user experience by preventing null pointer exceptions and ensuring correct broadcast handling
added graphics2d initialization and disposal in JavaSEPort . java to ensure proper rendering and disposal of the component
remove unnecessary parameter and replace with new method to avoid code duplication .
added a check for zero values in the inventory ' s ID counter and created a test for ID generation to ensure that player - specific IDs are generated correctly when ID is zero
[ camel - 14000 ] fix a possible infinite loop in configdescriptionregistry . getconfiguration ( # 14000 )
add a new parameter to a method in the ReloadableJava parser visitor , and update return type handling in the ReloadableJava parserVisitor classes to ensure that null return types are correctly handled when necessary
modified the initialization of TileMapRenderer to handle blended tiles more gracefully to improve robustness by avoiding potential null pointer exceptions when processing tile data
6044481 : add some known class to the probe for use with jdk . util . concurrent
minor improvement , theorem proving : do n ' t materialize over the last segment when calculate the area .
throttling can now be configure with a potentially new throttle rate . fix issue # 784 .
pipe : fix eventbus . modifyspeed ( ) to override the superclass method .
solr - 573 : raise the timeout value in zkcontrollertest . test Zookeeperclose ( ) from 1000ms to 2000ms .
added a new test method in TokenMvcMockTests to validate passcode with client parameters to ensure correct handling of OAuth2 access tokens in the authentication process
added support for LengthFilter and KeepWordFilter constructors to brokenOffsetsConstructors to enhance testing capabilities for specific text analysis scenarios
added import statement for JUnit Ignore in RandomPlaneTest . java to enable execution of tests related to random plane functionality
fix ( griffin ) : update x86 _ 64 _ vm memory map to use unsigned long .
replaced direct calls to ` btCollisionObject ` and ` upcast ` methods with instance retrieval in ` btCollisionObjectArray ` and ` btRigidBody ` to streamline code and enhance efficiency in handling collision object instances
added a new property ` BUILD _ COPYRIGHT ` and updated the URL in ` AboutDialog . java ` to include copyright information and updated the URL in ` AboutDialog . java ` to ensure the correct copyright year is used and updated the URL for accurate information representation
add getdistributedobjects ( ) method to jetclientinstanceimpl ( # 1656 )
added debug print statements to FinSet and updated expMOI _ tr variables in MassCalculatorTest to improve debugging and ensure correct parameters are used for testing
updated memory management in SmartDexingStep to use MAX _ MEMORY instead of total _ MEMORY to improve memory handling by distinguishing between total and maximum memory limits
[ iotdb - 5859 ] fix typo in schema fetcher exception ( # 7461 )
remove validation for delayed payout validation . already in use .
fix jsonloadertest . testjson ( ) to work with jdk 1.5 .
update the constraint check for tableSize in ObjectSet . java to ensure the capacity is within the acceptable range of 0x40000000
core - 2329 improve the logic for generate column snapshot with decimal digit
removed the @ AddToRuleKey annotation from several optional fields in AppleTest . java to simplify the code and reduce unnecessary dependencies
added error handling for retrieving the filename and modified content truncation logic in FileHelper and TextHelper to improve robustness of file retrieval and ensure accurate content management
added support for resolving attributes with multiple attributes in ShadowThemeTest to enhance theme attribute resolution functionality
updated sheet name validation in HSSFWorkbook to use the size of sheets instead of a hardcoded value to ensure correct sheet name matching based on available sheets
changed the primary color used in ManageAccountsActivity from ` primaryColor ` to ` elementColor ` to ensure the correct color is used for better UI consistency
add null check for replyHandler in DefaultEventBus and adjust path resolver in DefaultPlatformManager to improve handling of null responses and simplify path resolution logic
added support for collating database names in MariaDbDbmsType , MySqlDbmsType , and FilterSortedSkipOptimizer classes to enhance database query optimization by allowing collation to be applied
added a method ` whenType ` to the Tree class to return an ` Optional < T extends Tree > ` to enhance type safety and handling for tree type casting
refactored itemlauncher so it can deal with destinations . instance . librarybrowser
updated response handling in FeedREST to use temporaryRedirect instead of OK to improve user experience by providing a direct redirection instead of a successful status
[ flink - 33063 ] [ kinesis ] improve error message when use non - serializable deserializer
camel - 8205 : add a bit of javadoc for camel - spring - xml
modified the handling of Zookeeper client initialization in LeaderElectionTest . java to ensure proper resource management and avoid potential memory leaks
rename ` setIconAndDimTransitionProgress ` method to ` setIconsAndBannersTransitionProgress ` across multiple classes to better reflect the functionality of managing icon sizes along with banners
refactor read method calls in ProxyHandler to use a new read method to improve code clarity and maintainability by centralizing the read logic
replaced ` BufferUtil . allocate ` calls with ` ByteBuffer . allocate ` for correct parameters to streamline buffer allocation process for improved performance
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success or failure to improve the logic for determining the preparation of streams to upload
[ scb - 2716 ] bugfix : invalid jar file should be load with integer . max _ value
add a new file PicOfDayAppWidget . java to handle picture - in - day app widgets to implement a feature for updating application widgets in the application
server : fix bug in internal lbvmofferingid , we should not allow to set default internal lbvmofferingid to 0
updated import statements and modified join condition splitting in HiveParserCalcitePlanner . java to enhance support for Hive query optimization in the parser
[ flink - 16443 ] [ table - planner - blink ] deprecate now - required kaf and file - based transform class in the project
added user and password options for remote jmx access to enable secure connection to the remote jmx server with appropriate credentials
removed the declaration of BytesRef for better memory management to optimize memory usage by eliminating unnecessary variable declarations
modified conditions for widget application in AppsCustomizePagedView . java and adjusted method calls in Workspace . java to improve widget rendering logic and ensure correct icon caching based on the number of pages
ggbapplet . getviewfor3d ( ) : use getviewfor3d ( ) to get active view for 3d view
update rotation calculations in GcodeRenderer to ensure proper rotation range to prevent rendering issues
added workspace option to TerminalClient and updated DAEMON option description to enhance functionality by allowing configuration of the workspace directory
fix the cli test so it work in an ide - dev environment
[ uaa ] update ScimUtilsTest to use JUnit 5 ( # 2469 )
updated the OAuthConfirmationController to streamline the model management by replacing unnecessary parameters and simplifying the confimAccess method to enhance code readability and maintainability by simplifying model attribute handling
refactor assertions in HibernateIT to use assertTrueEventually for better structure to improve readability and ensure session management is cleared before assertions
rename EventBusHook class for consistency to improve maintainability and clarity of event handling logic
modified the MultiPaintEventTest class to improve event handling efficiency in rendering
removed the ` final ` modifier from the variable ` mNewScale ` in the ` WorkspaceStateTransitionAnimation ` class to allow for potential modification of the variable during animation transitions
refactor SyncFactory methods for improved synchronization handling to enhance performance and maintainability of the SyncFactory class
added functionality to handle unique key fields in LukeRequestHandler to enhance unique key tracking for better schema management
add roundborder color attribute and set document filter to border editor .
speed up assert by not include asserts . neverpartofcompilation ( ) .
[ hotfix ] [ runtime ] replace deprecated slotpoolimpl with declarativeslotpoolbridgebuilder
added logging for pending requests and modified return values in GatewayRSocket , GatewaySocketAcceptor , PingPongApp , and GatewaySocketAcceptor classes to improve debugging capabilities and refine packet handling for backpressure
added a toolbar menu item functionality to RecentChatFragment to allow users to access recent chat data directly from the toolbar
changed the ` InfoDropTarget ` class to extend ` UninstallDropTarget ` and modified method implementations to return a boolean to enhance clarity on the purpose of the methods related to uninstalling drop targets
replaced ` add ` and ` removeTail ` methods with ` push ` and ` pop ` methods across multiple classes to improve clarity and consistency in scope management operations
updated URLs in CommonsApplication from " testwiki " to " commons . wikimedia . org " to align with the new project structure and ensure URLs are correctly referenced
refactor index management by introducing separate index increment and decrement methods to improve code readability and maintainability by reducing duplication
replaced usage of collections . sort with direct method calls for sorting to simplify code and improve readability by using direct method calls
added a new string array for date patterns in FormatData _ hr _ HR . java to support more flexible date representation in HR
added a call to clear the focus of the clickedView in DetailFragment to improve user experience by ensuring the focus is properly cleared when a view is clicked
fix # 2877 do n ' t update language when drop down ( # 2877 )
updated time zone names from " WSST " to " WSDT " across multiple Java files to accurately reflect the daylight and daylight time zone representation
improve performance of getfield ( ) use native method to register global and weak field
[ java ] fix reflection fail to handle union type with null value
updated the timeout value in SedaBlockWhenFullTest . java from 300 to 1000 to allow more time for the blocking operation to complete successfully
added a null check before remaping the resource class to avoid potential NullPointerExceptions when the resource class is not initialized
[ hapi - 2445 ] add default constructor to hapifhirdialect ( # 2391 )
add an explicit connection close header to http : / / issues . apache . org / activemq / browse / camel - 205
updated socket timeout from 60000 ms to 120000 ms in BasicDistributedZkTest . java to allow more time for distributed zk operations to complete successfully
add test to ensure count be correct when final price cts > 0
refactor Parser class for improved readability to enhance maintainability and ease of understanding
refactor CasProcessingFilter class for improved readability to enhance maintainability and reduce complexity of the codebase
change getfirstelementchild ( ) to getfirstelementchild ( ) to avoid casting .
simplify the look - up process when the object be an enum
[ java ] wait for cluster node to shutdown to reduce flakiness .
improve log when we do n ' t purge cached bean
set content - type for webdav to ` ` application / octet - stream ' '
added getQueueSize method to LazyTraceThreadPoolTaskExecutor and created corresponding test class to ensure the queue size is accurately represented and validated within tests
add distance check for env0 , env1 ( # 692 )
ww - 3908 renames ' require ' field into ' requiredlabel ' for improved clarity
updated the ` next ( ) ` method to call ` updateProgress ( ) ` instead of overridden ` next ( ) ` to improve code clarity and ensure consistent progress updates
added a method ` getAsUnescapedPath ( ) ` in ` SchemaPath ` and replaced ` getAsSchemaPath ( ) ` in ` VectorUtil ` with ` getAsUnescapedPath ( ) ` in ` VectorUtil . java ` to enhance path handling by properly escaping paths for array types in drill
add abstract method height and width to basemonochromebitmapource to improve bitmap manipulation capabilities
added validation to ensure only three points contain at least 3 points to avoid runtime exceptions and ensure proper handling of polygon inputs
replaced ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) in multiple files to improve object mapper initialization and enable default instance creation for better performance
implicit curve : avoid array allocation in case where coeff be null
updated ExternalNameRecord to support reading between Unicode and LARGE names to address bug 47384 related to Unicode data handling in the external name processing
camel - core - jms : fix typo in the description of the processor class
added conditional logic to return login prompts based on configuration to enhance flexibility in handling login prompts in the application
replaced ` remove ` method with ` removeIf ` for listener removal to ensure that listeners are removed only if they are equal to the existing listener
added a case for action toggle spin in PieChartActivity to enable dragging of the chart based on user interactions
kill the vhd copy process if copy _ vhd _ to _ secondarystorage return null
hbase - 23352 namespace auditor should not try to normalize table with the namespace ( # 3804 )
refactored import statements and added a resize method to AndroidInput . java to improve code organization and manage input handling more effectively
add a method propertyvaluesof ( ) that take a list , use this in propertysupport . instance ( ) . propertyvalues ( ) .
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to mark the test as ignored due to blocking PRs
hopperhocks now honor range for get entity from a world , fixes # 2696
added authentication dialog implementation in SsoWebViewClient . java to enhance security by enforcing username and password validation
updated TestStressIndexing2 to improve error handling and added deleteDoc and deleteByQuery methods to enhance robustness of document deletion and query handling in the indexing process
[ flink - 22559 ] [ test ] disable upsert test on hadoop 0.9
replaced ` get ` method with ` computeIfAbsent ` for type retrieval and modified variable names for clarity to improve performance and readability by avoiding unnecessary calculations
added a configuration to accept single values as an array in DefaultEntityMapper to improve flexibility in handling incoming data formats during deserialization
updated localization update log messages to include BE , UK , SL to enhance clarity of localized updates for better debugging and auditing
add a method to retrieve shortcuts from ResourceUtils and modify it to use this to improve flexibility by allowing multiple categories to be stored
change method name from visitexpressioninstanceof to visitreactivexpertiessearchexpressioninstanceof and add test
nifi - 220 : added content - type header to gethttp to capture the mime type of the flowfile
modified provenance retrieval in ResourceHistoryTable to use historyEntry ' s toProvenance method to ensure proper handling of resource provenance data during history updates
renamed ` exitButton ` to ` doneButton ` and updated related listener names to reflect functionality to better reflect the purpose of the button and improve code clarity regarding its purpose
polish ` ` remove redundant comment ' '
refactor the ` invalidateStalePartition ` method to accept a list of ` PartitionNameWithVersion ` objects instead of a lambda expression to improve flexibility and context handling for managing partition invalidation
bug 53737 - view result tree visualizer : improve performance
updated icons from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to better reflect the purpose of the icons in the user list
use volatile to get long value to ensure thread safety
renamed test methods in MocksCreationTest for consistency to improve readability and maintainability of the test code
added a new constant DATA _ SOURCE _ NAME to the CSVThirdEyeDataSource class and changed access modifier of generateDetectionConfig ( ) method to public to enhance code clarity and make method public for better accessibility
updated awaiter timeouts from 10 seconds to 30 seconds in multiple locations to allow for a longer processing time during phaser synchronization
removed the BuildSlaveFinishedStatusEvent class and updated the publishBuildSlaveFinishedEvent method to simplify event handling and improve code clarity
fix findbugs encode issue in vmwarestoragemanagerimpl . java template template name generation ( # 6863 )
add test for deposit workspace item without a workflow
updated ClassLoaderSupportImpl to include distinct classpath files to eliminate duplicates from processing results
remove unused method ` isBoxedPrimitive ` from ` Unbox . java ` to improve code clarity and reduce redundancy
refactor argument parsing in SpecificCompilerTool to use indexOf for better index handling to improve code clarity and maintainability when processing command - line arguments
added a check for table type and external before deleting the partition path in HiveMetaStore to ensure that the partition path is only deleted if the table is not an external table and to validate its functionality through testing
hive - 24790 : add a new configuration variable for async executor size ( ashutosh chauhan via thejas nair )
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
updated UpgradeResourceProvider to use a constant for service and component names and modified filter initialization to improve code clarity and maintainability by replacing hardcoded values with named constants
add a diff field to correlate patch from telephony conference .
fix an issue with reloading of the log ( # 4696 )
updated return statements in ChannelEndPoint . java to include additional conditions for socket shutdown status to ensure proper handling of shutdown states in the channel endpoint
refactor SetNullableGenerator class to improve code clarity to enhance maintainability and readability of nullable handling logic
camel - 4353 fixed the Filenamegenerator issue of camel - example - reportincident
updated import statements in NettyRoutingFilter and FormIntegrationTests to streamline form handling and ensure compatibility with boot 2.0 . x
add @ apioperation annotation for the hello ( ) method of our service interface . fix # 1687 .
update lifecycle listener management in Lwjgl3Window to ensure proper handling of lifecycle listeners when updating and disposing the window
change the FG _ FK color value from 90 to 200 to improve visibility of the foreground color for better user experience
mow - 330 make mp3 audio format optional . see also http : / / github . com / codenameone / codenameone / issues / 2208
fix secondaryindexmanagertest to actually test the built index
add a bundle - version header to the pmd plugin ' s about text
[ hotfix ] [ test ] replace throwable . getcause ( ) with optional . getcause ( )
clarify in javadoc that mediaformatutil . getformat ( ) should return mediaformatutil . getformat ( ) if it return null
added a method ` isCellEditable ` to the ` GeneralTab ` class to enforce cell editing functionality for better user experience
added a method ` isOnlyPrintCommands ( ) ` and modified message construction in ` AbstractUnusedDependenciesFinder ` and related classes to allow conditional printing of unused dependencies based on the configuration
fix bug in vocalTractmodifier ' s vscales configuration .
updated import statements for BaseScalarUdfTest in multiple test files to ensure consistent usage of BaseScalarUdfTest across test files
added hashcode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthenticationDetails
* fixed testskeletoncontrolrefresh to work with old ogre . mesh . xml
rename NodeFilter to NodeCountFilter and update related method signatures accordingly to improve clarity and consistency in node filtering operations
updated condition to check for a minimum size of SYNC _ FETCH _ BATCH _ NUM to ensure the fetch condition matches the expected size of SYNC _ FETCH _ BATCH _ NUM
updated debug expression parsing parameters and replaced hardcoded Unicode characters to enhance readability and ensure correct representation of debug expressions
fix pom and excludedependency to work with transitive scope
replaced the temporary method with dst2 method and updated the lerp method signature to improve method clarity and maintain consistency in naming conventions
initialize the ' args ' variable to an empty object instead of null to avoid potential NullPointerExceptions when accessing ' args '
refactor linker argument handling in RustBinaryDescription to use ImmutableList instead of List to improve flexibility in handling linker flags for Rust build configurations
[ # 10638 ] adminemailpageuitest : fix test case that fail on travis ( # 10644 )
added new configuration for hive query name and improved logging in GenericUDTFGetSplits to enable better identification of DAGs related to LLAP splits and enhance logging clarity
added import statement for java . io . File in TileAtlas . java to enable proper handling of file - based operations in the TileAtlas class
[ netbeans - 1043 ] do n ' t fail build if a build have be abort or there be an open stream .
updated the validateQuery method to accept multiple arguments for error messages to enhance error reporting by including multiple arguments for better debugging
updated INDEX _ VERSION from 1 to 2 and modified the getTree method to improve clarity and efficiency in handling commit tree retrieval
[ flink - 11323 ] [ core ] make kryo serializers backward compatible .
added a null check before adding configuration properties and adjusted test assertions to ensure proper handling of property removal and enhance test coverage for new configurations
refactor Boolean handling in MetaStoreDirectSql by replacing direct null checks with a utility method for BooleanUtils to improve code readability and maintainability by leveraging existing utility methods
added hideCustomizationDrawer ( ) method to Launcher . java to enhance user interface by maintaining customization options
replaced the handling of warnings in the TermVectorComponent to improve clarity and maintainability of warning handling logic
8059231 : verify that octane raytrace now work with optimistic type turn off . add well log for optimistic type in the compiler .
updated expectations handling in Expect . java to enhance clarity and maintainability of the code
added support for Unix socket in Docker configuration to enable access to Docker localsocker on unix environments
[ beam - 10670 ] fix flaky test in closeablestoosfiltertest ( # 10688 )
camel - 13636 : better error message in case of reactive stream have no active subscription
refactor Vectorizer to use a more consistent naming convention for map work instead of MapRedTask to improve code clarity and maintainability by standardizing method names
add a boolean parameter to the constructor of StringAppender and LogDivertAppender to enable synchronous initialization of StringAppender and LogDivertAppender
fix npe in jmetertreemodel when there be no gui package
[ gr - 38661 ] fix linkage declare in sulong to prevent oom warning .
8081306 : implement consistent process for quarantine of test
test ebean - io - ebean : added test for ebean . get ( ` ` h2 ' ' )
added a check for invalid operation handle in the HiveStatement class to improve error handling and provide better feedback for server - side operations
renamed ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL and updated command type references accordingly to clarify the purpose of the ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL feature in the command handling
camel - 17644 - support ability to create a secret manager with minimal configuration
refactor SimpleTree class to improve structure to enhance maintainability and readability of the code
removed exception message wrapping in response status code to simplify error message construction for better readability and maintainability
updated the ` fromContent ` method to include a subTree parameter and adjusted its parent logic to allow for better control over the tree structure during content processing
ensure that the column width is correctly represented as a short value in the Sheet class and add a test method for column width retrieval to improve column width handling and ensure correctness of column width calculations in HSSFSheet
added configPath parameter to the command less method calls to allow for dynamic configuration of the path used in the command
updated method signatures to use Collection instead of Set for better flexibility in handling collections to improve code usability and maintainability by using a more appropriate data structure
use 1.0 . 0 image for sshd in testcontainers ( # 4188 )
bug 8921 : remove the assert statement in agentmanagerimpl . checkhostid ( ) that be never null .
replaced conditional handling for single - valued columns with a loop for generating a raw key to streamline the key generation process for multi - valued columns
refactor testSeek method to clarify error handling for seeking exceptions to improve code maintainability and ensure accurate testing of seeking behavior
fix a bug in the bcsiliconrecipes . getallinput ( ) method . close # 1221
fix bug in configuration mix in # 689 , fixes # 689
simplify code and enhance visibility management during drag and drop operations to improve code readability and maintainability by reducing redundancy
update ModifyRequestBodyGatewayFilterFactory to use original body and modify request handling to ensure proper handling of empty request bodies in the gateway logic
updated constructorFinder , FieldFinder , and MethodFinder to include package accessibility checks to enhance accessibility validation for better encapsulation
change log level from warn to trace in LoggingHandler . java to improve logging granularity for better debugging and analysis
fix stringindexoutofboundsexception in WhiteBlackList . java and add test
added menu functionality and improved image handling in GalleryActivity to enhance user experience by enabling direct navigation through menu items
added a singleton instance and refactored the service creation logic in MongoDBServiceFactory to ensure a single instance of MongoService is used for better service management
patch from stefan penndorf to describe the behaviour of inline constant mutator with booleans
refactor decode method in RecordTest to include a Blackhole parameter to enhance functionality by incorporating a black hole for decoding
fix : update gapic - generator - java with mock service generation fix ( # 657 )
[ knx ] skip empty unit ( # 9041 )
dbManager . getWitnesses ( ) . clear ( ) to reset the witnesses list to reset the database management state before tests
do n ' t swallow exception in jdbcpagesink . abort ( )
removed the stack property from the script object and replaced it with getter and setter methods to improve encapsulation and control over stack management
added a check to ensure the path name starts with " . " to prevent processing of paths that start with " . "
corrected spelling of " onboard " to " auto load " in multiple Java files to enhance code readability and ensure consistent functionality throughout the application
added a call to clearIndex ( ) in BasicFunctionalityTest . java to reset the index before each test case execution
update BOLDWEIGHT _ NORMAL from 190 to 0x190 to improve visual stability by using a stronger weight
made fThreadGroup volatile and updated related methods to improve thread safety and enhance timeout handling functionality
updated the formatting of methods in ValueResultData . java for consistency to improve code readability and maintainability
updated hash code initialization and equality check in FuzzyQuery . java to ensure proper behavior in hash - based collections and improve null / equality checks
removed unnecessary print statement for SIMON in PushedResourcesTest . java to clean up test output and improve code readability
fix return type of removefile and removedirectory in sharedopenfilescachetest
updated product version in JdbcDriverInfoRetrieverTest from " 2.5 . 1 " to " 2.6 . 0 " to ensure compatibility with the latest features and improvements in the driver
updated the ` retrievePersonAttributes ` method to use an empty ` HashMap < > ( 0 ) ` instead of creating a new ` principal ` instance to improve performance by avoiding unnecessary object creation and ensure the principal is built correctly
changed log level from info to warn for connection errors in OpenWebNetBridgeHandler . java to improve logging clarity by using more appropriate log severity
updated method names and hashing functions in several hash map classes to improve clarity and consistency in method naming conventions
added a new constructor for ThumbnailGenerationTask and modified bitmap validation to ensure that storageManager is not null to prevent potential NullPointerExceptions during image processing
updated the condition for stopping the count in GroupSelectionQuery to ensure it does not exceed the maximum number of attempts to retrieve data
added a new file ` Bug1933922 . java ` implementing a recursive compilation process to provide a mechanism for retrieving and manipulating multiple compilation programs
simplified comparison by removing unnecessary parentheses in multiple classes to improve code readability and maintainability
updated the character check in FileResolver . java to include a comment to clarify that control characters 0 - 31 are invalid
added call to requestFocus on the component to ensure the component receives keyboard input for better user experience
improve test data and add new test data for each test case
renamed ` JsonParserAsync ` to ` JsonStreamParser ` and updated related classes accordingly to better reflect their purpose in handling JSON data formats
updated the handling of Crouton notifications and added an onPause method in DetailFragment to improve code clarity and ensure proper lifecycle management of the main activity
[ iotdb - 5831 ] add test for query and fetch with unrelated schema ( # 7014 )
modified the Dialog class to enhance user interface responsiveness to improve user experience by providing smoother interface updates
replaced direct execution of process with ProcessBuilder for improved command handling to enhance process execution flexibility and remove unnecessary options
replaced local host retrieval with direct IP address conversion in HintedHandOffTest to ensure compatibility with local IP addressing standards
refactor metrics handling to use a unified path method for controller and subsystem to improve code readability and maintainability by reducing redundancy
skip some test in daemon lifecycle test that do not require apple platform
compiler : fix jvmciversioncheck to not throw npe if the property map be miss
updated Mockito dependency version in the project to fix compatibility issues and ensure access to the latest features
8207271 : [ testbug ] testLargepageuseforAuxmemory . java time out after jdk - 8207148
added charset handling methods to BinaryParser , PlainTextParser , and ParsingExecutionContextView classes to enhance character encoding management and improve flexibility in processing input streams
add support for setting and getting multi - part form data in HttpConfiguration to enhance flexibility in handling multi - part form data requests
added support for JDK - 17 in GradleDistributionManager to enable compatibility with JDK 17 features
refactor ` addType ` method in ` DatabaseSnapshot ` and ` SnapshotControl ` classes to use this new method to improve code readability and maintainability by encapsulating the addition logic in a dedicated method
refactor Term class to improve structure to enhance maintainability and readability of the code
modify return statement to handle null and empty runWith cases to ensure proper handling of null or empty values for runWith
add test case to verify that share resource between jms and xasession work correctly .
updated multiple Java files by renaming and restructuring them to improve code organization and maintainability
fix for issue # 545 : blackbox problem cause by bad angle calculation .
updated the tinting method to use tintAmount directly instead of amount to improve clarity and maintainability of the tinting logic
drill - 6570 : add new file ` Sumzerofunctions . java ` that aggregate all sumzero value to reduce function call count .
firstvaluefunctionit and nthvaluefunctionit : fix typo
hbase - 27547 bucketcache # getallocationfailwarningmessage should only print the hfile name when the recent fail allocation succeed ( ted yu )
added a null check before inserting values into the role object to ensure that null values are handled safely to avoid potential NullPointerExceptions
made several fields ` mTouchSlop ` and ` mCanIntercept ` public in ` StatusBarTouchController . java ` and added ` @ VisibleForTesting ` annotations in ` RecentsView . java ` to enhance testability and ensure these fields are accessed in the testing environment
add dockerclient . logcontainerstream ( ) method that keep container stream open indefinitely
mvstore : addperformance test for mvstore . cache ( ) .
changed the data type of LONG from " L " to " J " in PrimitiveType . java to correct the data type representation for consistency
changed the return type of delegatingApplicationListener from private to static to allow the method to be called without an instance of the class , improving utility
set the body of the message to null in RestBindingAdvice . java to ensure that the message body is reset to avoid potential data loss
added FileDeletingTasklet and TaskletJobFunctionalTests classes to implement tasklet task management and execution verification
apps - 2323 call updatesizekeepdrawables ( ) on the companion instead of the view itself
updated array access operations in BitUtil , Int2IntCounterMap , and Int2IntHashMap to use bitwise operations on the index to ensure consistency and correct handling of index out of bounds in data processing
updated event sending methods to use an ordinal parameter for state management to enhance clarity and maintainability in event handling within the accessibility manager
updated logic to handle video thumbnail requests in the RequestHandler and Request classes to ensure proper handling of video processing based on user agent and format availability
improve error message when there be no line ( issue # 269 )
modified layout constraints for menu buttons based on the UI theme to enhance UI consistency for different UI themes
added " libskia " to the value and link configuration in Skia . java to enable proper loading of the Skia library for improved functionality
add a new constant ID _ UNITTESTNET and use it to return unit tests to facilitate handling of unit tests in the network parameters
added HumanReadableException for invalid format arguments in QueryCommand and created corresponding test cases to improve error handling and ensure query arguments are validated correctly
updated capacity handling and position counter calculations in IntIterator . java to improve code clarity and maintainability by using more descriptive variable names
updated the parameters of ` walkRuleAndAdd ` to include ` projectConfig . getSrcRule ( ) ` and modified the ` shouldVisitDeps ` logic to improve dependency handling based on project configuration and source rules
fix module patch not work when use osgi . ( # 4957 )
[ java ] remove protocol version check from candidate election .
updated OwnCloudClientManagerFactory ' s default policy based on authentication type to ensure compatibility with SAML authentication by using ALWAYS _ NEW _ CLIENT
add nullability check for mappedtableresource in readbatch and writestream
simplify close ( ) a we do n ' t need to check for resource leak .
refactor AnonymousAuthenticationFilter to use a Supplier for handling deferred security contexts to enhance flexibility in security context management during anonymous authentication
modified actor removal methods to include an additional parameter for unfocusing to enhance control over actor unfocusing behavior
use valid configs instead of hardcoded string to improve code readability and maintainability
added logging support and improved asynchronous handling in NettyHttpServer and RoutingInBoundHandler to enhance logging capabilities and ensure proper context flushing during write operations
renamed multiple Java files to maintain consistency in naming conventions to enhance code readability and maintainability across the project
replace direct call to update with SwingUtilities . invokeLater to ensure update is performed on the Event Dispatch Thread for thread safety
camel - groovy : fix thread safety issue with spring boot auto configuration on camel - groovy
return an empty set instead of the plugin data structure when there be no deps
[ hotfix ] make cli - client class constructor public .
updated TestSharedPreferencesEditor to implement TestSharedPreferences and added tests for SharedPreferences functionality to enhance testing capabilities and ensure correct behavior of SharedPreferences persistence
removed the storage alias extraction and certificate chain output from HttpsMessenger . java to streamline the storage key management and reduce unnecessary output
on behalf of andreashaas : implement a good error message when the response body be not be convert to json . this resolve issue 368 .
change access modifier of updateImage methods from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access these methods for better flexibility in image handling
drop specific resource when place in invalid place ( # 8738 )
added native method calls for spatial location calculator configurations in DataOutputQueue and depthai classes to enhance spatial location calculator functionality and improve code organization
fix javadoc warning on old jdk 6 beta
modified the ` isEmpty ` method in ` TreeTrie ` to use ` _ root ` instead of ` keySet ( ) . isEmpty ( ) ` and added new tests in ` TrieTest ` to improve clarity and functionality of the isEmpty method and ensure correctness through testing
updated foreground and background calculations in AttributedStringBuilder . java to improve rendering accuracy by using appropriate parameters for rendering
updated the logic for determining ` doFingerprint ` based on system property to ensure fingerprint behavior is controlled during peersync operations
changed the visibility of the moveFunds method from private to public and modified the method signature of the moveFunds method to allow access to the method from other classes or packages as needed
refactor MongoTemplate event emissions and add a new test for UUID handling to improve event emission logic and ensure proper context management during tests
fix for collectionitem serialization bug .
remove double close of input to avoid leak file descriptor
updated exception handling in TestCollectionAPIs to use ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling consistency and align with Solr ' s API conventions
updated the loading process in OptionsParser . java by removing an unnecessary space to streamline the code and improve readability
[ issue # 7258 ] instructorfeedbackcopyactiontest : remove redundant space ( # 7259 )
[ hotfix ] [ runtime ] minor code cleanup improvement in java 8
removed the ` step ` attribute and its getter / setter methods from ` HmDatapoint ` and related classes to simplify the data point representation by eliminating unnecessary step management
added logging for shared lock acquisition and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest to improve debugging and monitoring of lock management in PostgreSQL
remove schedulejob ( ) from basereschedulerserviceimpl to avoid infinite loop .
jasonleyba : fix intermittent test failure in my local environment
updated logger management to use ThreadLocal for better thread safety to improve performance by preventing blocking operations on logger instances
updated FunctionInitializer to use @ VisibleForTesting and replaced JMockit with Mockito in tests to enhance testability and improve compatibility with newer Mockito features
modified type checking and boxing behavior for better handling of primitive types to ensure type compatibility and prevent errors related to unboxed primitive types
updated focus handling in RecentsView and TaskView to ensure proper orientation state management for the focused task view
hbase - 24425 fix flaky testflushfromclient . testflushfromclient [ hz - 1881 ] ( # 23057 )
fix wrong repo usage during transaction creation
updated balance calculations to use dynamic properties instead of a constant for issue fees to ensure accurate representation of asset issue fees in dynamic properties
refactor cache management in RealisticRenderStrategy to support URI - based cache management to improve cache management efficiency and flexibility when loading texture data
renamed variable ` srcRas ` and ` dstRas ` to ` tmpRas ` and created a new test class ` Bug7049339 . java ` to improve variable naming clarity and implement a test for a specific bug
added ` isUnselectedStyle ` boolean and modified string width calculations in ` Label ` and ` DefaultLookAndFeel ` classes to ensure consistent string width handling based on the selected style settings
updated initialization of collections to use an initial capacity to optimize memory allocation for better performance and resource management
removed the ` flags ` parameter from multiple method signatures in ` ShadowApplicationPackageManager ` to simplify method signatures and improve readability by eliminating unnecessary parameters
refactor PingRequestHandler to enhance performance to improve response time for client - side requests
add a new constant for mp4 sample with increasing timestamps . mp4 .
[ tradfri ] fixed nullpointerexception while shut down the device client ( # 9041 )
update javadoc for ajaxelementlocator to have it own implementation
modified layout conditions in BoxLayout and DefaultLayout to include " table - cell " to ensure proper layout behavior for table cells in the user interface
reorder json element in order to avoid infinite loop
fixed - blockcache . releaselocation ( ) invocation should only call releaselocation ( ) on removal , not the notification
[ flink - 33065 ] [ test ] disable fail savepoint test till i can fix it
added unit test annotation to DroolsMvelParserTest . java to ensure proper functionality of the test suite
changed instance variables to be final in ContextRegisterListener . java to ensure immutability and prevent accidental reassignment
refactor the iterator initialization in ObjectHashSet to allow customization of iterator behavior and add test cases to enhance flexibility in iterator initialization and ensure proper resource management during object collection
added batchBytes constant and updated batch processing logic in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure proper handling of batch size boundaries for data processing
use mode _ PRIVATE instead of mode _ WORLD _ READABLE + mode _ WORLD _ WRITEABLE in appsettings and updatetable
updated JdbcProxyGenerator to modify log messages and added connection handling during the abort process to improve clarity of logging and ensure proper resource management during connection termination
updated animation state retrieval and added accessibility setting in Workspace . java to enhance accessibility features for better user experience
reduce log warn to debug ( # 11528 )
update scope substring handling and add a new test for persisting revocable scopes to ensure correct processing of scope strings that exceed 1000 characters
updated imports in SchemaRetrievalOptionsBuilderTest and enhanced the toString method in AvailableJDBCDrivers to improve code clarity and ensure consistent object representation in logging
[ bz - 1155857 ] add executablecommand interface to allow use in kie - api
remove the jdbc table service since it be no longer use
added padding getter methods to CellLayout and modified bitmap creation in Launcher to improve readability and maintainability of padding calculations for different orientations
added a check for empty sb before populating the cands list to avoid unnecessary processing when there is no candidates to process
updated SAML metadata handling to use Action instead of SamlMetadataUIParserAction to enhance compatibility and flexibility with webflow actions in the application
added a method to check if a given port is open in LdapMockMvcTests . java to enhance the flexibility of process checking for LDAP ports
log4j2 - 1343 bugfix : use executorservices . shutdown ( ) instead of executorservices . shutdown ( ) a the default timeout .
updated URL handling in Fetcher and modified log level in HTMLMetaProcessor to enhance URL validation and provide more informative logging for redirect actions
updated SolrQuery instantiation and modified assertion message in TestSpellCheckResponse . java to ensure correct spell checking format and improve test clarity
updated console initialization to use Karaf Console API to enhance compatibility with various Java classes while maintaining existing functionality
bugfix : fix classcastexception by use mloopcol in getverticescolors ( )
added a filter to exclude TIMESTAMPED report directories during directory copying to improve performance by avoiding unnecessary file operations during copy operations
remove datavalidator test code that be junit 4 + and need to be upgrade to junit 4 +
pdfbox - 2576 : remove unused method addmetadata ( ) , a suggest by michael klink
added error handling for form binding errors in FieldUtils . java to ensure proper execution of form error expressions within a template context
removed print statement for event reporting to clean up console output for better readability
added a flag to allow extracting private fields and updated the field reading logic to enhance flexibility in handling private fields and improve error handling during field retrieval
[ webdata ] fix issue with duplicated device name ( # 1569 )
fix ( griffin ) : platform should use lookup . newinstance ( ) if possible .
refactor weights method to use weightsByDouble instead of weights to improve clarity and consistency in handling weights for various data types
added database parameter to the ` writeCustomHTML ` method signatures across multiple classes to ensure compatibility with database handling during custom HTML writing
updated key serialization and added assertions in BTreeMap . java to ensure correct handling of key values and improve code clarity
updated exception handling to catch BalanceInsufficientException and added ContractValidateException to improve error handling specificity and provide clearer error messages during transaction failures
add conditional logic to generate zerofile zero byte array in abstractlongmap .
replaced stream printing statements with direct message sending in the Main class to improve code readability and streamline error handling
updated the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed generic record assignment in HortonworksEncodedSchemaReferenceWriter . java to optimize memory usage and ensure generic records are always used for processing
added ItemProcessListener import to multiple Java classes to enable handling of process processing events in the batch processing pipeline
refactor method calls and variable declarations in AbstractProviderModule . java for clarity to enhance code readability and maintainability
updated print statements in SearchFiles . java and modified method parameters in SortedSetDocValuesFacetCounts . java and MessageFilesParser . java to improve clarity of output and ensure consistency in handling document counts
8153804 : remove intermittent key from test7005594 . java and move back to tier1
[ buck ] [ i18n ] make all resourcevalidatortest pass
[ hotfix ] [ table - planner ] fix typo in topkrollupphaseonejob
server : fix npe while deploy vm with unsupported ip address ( # 4900 )
add a method to support analog and modify the logic for modifier digital triggers to enhance input handling and improve gesture scaling functionality
refactor ` iteratesOverSequence ` method to accept ` Iterable < T > ` instead of ` Object < T > ` and update related imports and imports to enhance type safety and improve clarity of method signatures
camel - 9833 : add miss check for empty header value in defaulthttpbinding .
added assertions to verify expected results of various SQL queries in the ActivityHistorySQLServerStoredProcedureTest to ensure that the retrieved records are correctly retrieved from various entities
updated BarChartActivityMultiDataset , BarLineChartBase , and Chart classes to introduce a new LargeValueFormatter and adjusted label generation logic to enhance value formatting for better readability and consistency in chart representation
refactor character handling in CommentsParser to use a constant for the INNOCUOS _ CHAR and update related logic to improve code readability and maintainability by avoiding magic strings
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation to address compatibility issues with the argument type in the code
[ fix ] tracera [ lsra ] : fix typo in traceLinearscanlostestphase
added a TODO comment to the NullAssertionValidator class to prepare for future implementation of the method stub
added support for appending rule keys in DefaultRuleKeyBuilderFactory to enable proper handling of rule key files in the build process
create a directory for the system profile directory if it do n ' t exist
fix testcontainersdockercmdexecfactory thread creation to work with jdk 8
refactor HttpChannelOverHTTP and HttpReceiverOverHTTP to use a new method for retrieving messages to improve code organization and maintainability by encapsulating message retrieval logic
added a accept attribute to the ImageFileInputDialog to enable user input for image files
updated import statements and modified transport client initialization in ElasticIndexWriter . java and TestElasticIndexWriter . java to streamline code and improve clarity by reducing dependencies on external clients and enhancing readability
added additional logging for witnesses and their class names in ForkController . java to enhance debugging information by providing more context on the class relationships
added a new test class for handling null pointers and empty arrays to verify that null references and empty arrays do not result in NullPointerExceptions
remove unused code related to source path generation in iq module
added a method to construct wildcard patterns with any character delimiters in UaaStringUtils to enhance flexibility in handling wildcard pattern matching
added validation for aliases in MapWork to ensure all aliases are validated and improve error handling for invalid aliases
[ test ] remove redundant mockito . runners usage
added a loop to set firmware settings in TinyGFirmwareSettings . java to handle potential exceptions when setting values
camel - 2883 : fixed issue with accept - language header in httpurl do not return all language
reordered and updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java to improve readability and maintainability of the test code
hbase - 17477 prepare ( ) should return snapshothandler . prepare ( ) before attempt to load the table - addendum ( yu li )
[ j2kt ] implement finally to handle null return value .
remove the test that verifies that the http - rpc endpoint have be modify after the recent okhttp fix
added a suspended flag and modified thread state handling in the Thread class to improve thread management and ensure proper exception handling for suspended threads
replaced Javadoc . Author and Javadoc . See with Javadoc . Serial in Java11JavadocVisitor and ReloadableJava8JavadocVisitor to enhance clarity and correctness of Javadoc representation and reference handling
fixed potential npe when use @ contextinject with a spring - cloud service
removed multiple ` @ Override ` annotations from multiple security - related classes to streamline code and improve readability by reducing unnecessary overrides
added module import handling and updated test assertions in Java2TypeScriptAdapter . java and MyComplexEnum2 . java to enhance module functionality and improve test coverage for enums
[ bug - 63203 ] update jaxb export to use http : / / www . w3 . org / xmlschema # language
added content description handling for badged items in BubbleTextView to enhance the visual representation of badges in the UI
added a mouse wheel listener to the scroll pane to handle mouse wheel events to improve user interaction by enabling more intuitive mouse wheel interactions
added close method for PDDocument and created a new test for positioning absolute to ensure proper resource management and validate the functionality of the positioning feature
rename currency pair references from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to ensure consistency in naming conventions for currency pairs
updated location type parameters in VacuumController , VacuumFrame , and VacuumView classes to improve type safety and consistency in handling location values
removed conditional currency assignment for DSH , DASH , QTM , and QTUM in BitfinexAdapters . java to simplify the code by directly returning the uppercase of the bitfinexSymbol
replaced the import statements and refactored field output logic in JsonFormat . java to enhance code clarity and maintainability while ensuring default values are correctly handled
remove unnecessary handling for array and enum types in JacksonXmlFormatMapper to improve code clarity and maintainability by simplifying type conversion logic
updated variable names and logic in VirtualThread . java for clarity and consistency to improve code readability and maintainability by using more descriptive names
refactor DirectoryTaxonomyWriter to use a variable for the cat term and update related methods for clarity to improve code readability and maintainability by separating concerns
rename VetoableChangeSupport class in the codebase to improve clarity and consistency in naming conventions
modify the calculation of the y - coordinate in BrowserContentPane to correct the vertical alignment of the owner ' s height
pdfbox - 2852 : do not throw invalidpasswordexception , a suggest by valerybokov ; use ioexception instead
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure correct behavior of security manager when setting short and long support messages
bugfix : make ` ` open online help ' ' and ` ` close help ' ' button intuitive
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced fixed sleep durations with a dynamic wait loop in BackendInitializerHelper . java and updated G - code processing in TerminalClient . java and GcodeParserUtilsTest . java to improve responsiveness and ensure proper handling of controller state transitions
updated the handling of release status in SwingStartup to improve accuracy in updating application preferences based on release status
add ` ` comment ' ' to migration xml generation , default to off .
updated argument types from " < player > " to " < player | * > " across multiple classes to ensure compatibility with updated permission requirements for adding , removing , and trust commands
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused components to streamline the codebase
updated method calls to use " optionName " instead of " nameVariableName " to improve code clarity by using more descriptive method names
add a condition to handle parallel class loading in TestNGContentHandler to ensure compatibility with parallel suite configurations
http : / / issues . apache . org / jira / browse / amq - 4798 - fix logic for set enableactingmaster to false when use old version broker
refactor : remove static import of enums in ctmethodimpl . java ( # 2564 )
added serialVersionUID to multiple exception and exception classes to ensure proper serialization of objects across different versions
renamed DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve clarity and consistency in naming conventions
updated ShibbolethCompatiblePersistentIdGenerator to include a separator parameter and modified the shaBase64 method to accept this parameter to enhance flexibility in generating values with varying hashing algorithms
updated the return statement to handle null parameters for SYSTEM _ ACTIONS _ ENABLED to improve robustness by ensuring that null values are handled appropriately
add a new Person class in the Maven project to provide a base class for managing Person data related to the project
remove call to fbutilities . getlocaladdress ( ) a we do n ' t need to have
fix case - sensitivity issue for time column in postgres
added assertions to verify metadata fields for timeColumn , timeUnit , and totalDocs to ensure accurate representation of metadata in tests
updated the color import from java . awt . Color to net . sf . openrocket . util . Color and changed the foreground color to DARK _ RED to ensure compatibility with the OpenRocket ' s color management system
added a new disconnectEmitters . onNext ( new Object ( ) ) method to NettyStreamingService . java to enable proper handling of asynchronous data disconnects
fix : work around bug in spring 3.0 . 3
danielwagnerhall : click on an element hide by double overflow do n ' t work .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
enhance transactionmanager to allow custom jndi location ( # 1598 )
changed the access modifier of the method pickUri from public to private to restrict access to the method for better encapsulation
remove unused method hasfunction ( ) from library
fix some minor bug that break the tlsv1.3 test
[ beam - 13164 ] update bigquery to return correct timestamp type in storage write . ( # 13686 )
replaced multiple exception handling with ` requireNonNull ` for buffer and null checks to improve code readability and maintainability by reducing redundancy
fix issue with resolve default value in valueresolver ( # 2311 )
added bounds checking for row and column indices in FlightConfigurablePanel to ensure that the index is within the valid range of the table ' s row and column limits
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to enhance user interface responsiveness during selection changes
[ java ] unnecessarylocalbeforereturn - fix false - neg for member
refactor scriptEngine initialization to directly use the singleton instance to improve code clarity and reduce reliance on direct instantiation
lucene - 8705 : fix eligibility distance so that it do n ' t throw npes .
simplify and remove an unnecessary runnable in datatracker . incrementallybackup
refactor relativize method to accept both base paths and normalized root paths separately to improve path handling by ensuring extra paths do not add extra dots to the relativized paths
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper initialization and representation of data types
fix test bug cause by file . delete ( ) not delete 1 . log . tmp
change ` toHexString ` method to ` toJsonHex ` for byte array conversion to ensure consistency in converting byte array to hex format
[ ci ] move error handler into error
replaced terminal reset method calls in UnixTerminal and WindowsTerminal classes to ensure consistent behavior regarding terminal state resetting
[ netbeans - 4767 ] - fix for tiny collectionToArray ( fixes $ collection $ collection not work ) .
client connection : fix race condition with tryacquireconnection ( )
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple classes to ensure consistency in naming conventions for LDAP date converters
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to include classLoader to improve clarity of error messages for better debugging
added exception handling for reader and writer threads in LargeStreamletTest . java to ensure proper exception management during tests
add logic to update the current page index based on page type from settings to improve user experience by adjusting extra page display based on user preferences
added handling for broken Gaussian in image rendering and modified the return statement to include this check to improve robustness of image rendering and ensure compatibility with different Android SDK versions
remove the suppressnode ( ) method from baseparser . label ( ) since it have no usage .
hive - 23790 : cache hdfparser in a try - with - resources ( matt mccline , review by krisztian kasa )
deleted the file TestDocInverterPerFieldErrorInfo . java to the test class is no longer needed for the current implementation
added a shell command to execute a keyboard command in AbstractLauncherUiTest and modified the assertion in LauncherInstrumentation to enable keyboard input handling and improve test reliability
added JSON serialization for the output file path in FileDumper . java to ensure the output file points to the correct file format during JSON processing
bugfix # 211320 , make sure that resultnotified be reset to false after close the server
bugfix : fix a bug that cause all texture to be add to the cache when load the image .
fix test to not start with ` ` application : ' '
updated the ISB randomizer version from " 9781797745008 " to " 9781797845005 " to reflect the latest randomization requirements for the application
fix wrong notification sound on android 4 .
add a new method reportLoopCount to the RootNode class to enable reporting of loop counts for better debugging and analysis
do n ' t finalize the cluster stack version when finalizing the cluster .
fix delete portable ip fail if region be delete by portableip
resolved - issue batch - 520 : itemorientedstep . getstream ( ) return null when streammanager be miss .
added a new file CountedLoopProblem . java that demonstrates the use of ` Math . abs ( ) ` for generating a loop with a specified value to implement a test for a specific problem related to loop behavior in Java
replace ' metaspaceMethod ' with ' nativeMethod ' in CompilerToVM and CompilerToVMImpl classes to standardize method signatures for improved clarity and consistency
[ gr - 21341 ] fix jvmci error when calculate pending failed speculation offset .
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities and return value in transformation
[ # 7547 ] instructor view : constantsum statistic view : added ` ` Received ' ' entry ( # 7816 )
removed the call to applyToActivitiesIfAvailable ( ) in BaseApplication . java to enhance functionality by ensuring color availability
added thread management and stack trace dumping functionality in CloseRace . java to improve error handling for child threads that do not finish gracefully
converted the return value to a ` intValue ( ) ` method in ` IntPointField . java ` and added multiple assertions in ` TestPointFields . java ` to ensure consistency in value handling and enhance test coverage for new functionality
fix for issue 582 : arc size be now a fraction of 0.1 instead of the width
increase the size of the image ' s high width so it do n ' t change at all .
[ flink - 27409 ] [ sql ] make shrinkwhitespacesinsql a configurable option
refactor ` waitForStateTransitionToEnd ` method to separate logic in ` AbstractLauncherUiTest ` and ` WorkProfileTest ` to improve code readability and maintainability by reducing redundancy
added configuration classes and updated imports in multiple test classes to enhance the organization and consistency of CAS configuration in tests
volume : fix volume read slowness on netty4 +
camel - 8054 : camel - http - optimize to avoid unnecessary reflection . work in progress .
refactor the creation of the boot classpath in DeclarativeHintsParser . java to improve clarity and maintainability of classpath path setup
add defaultscriptscopeprovider to allow script scope for audio and voice ( # 4896 )
added methods to retrieve and set layer manager in AnimComposer and modified event handling in AnimEvent to improve layer management functionality and ensure proper handling of animations
added a check to return early if the queue is empty in DeferredHandler . java to improve performance by avoiding unnecessary processing when no tasks are queued
added null checks in MapRecordProcessor and modified exception handling in TezProcessor to improve robustness and ensure proper handling of exceptions during processing
cylinderregion : move center to proper height calculation ( y - coordinate )
make expectedexception more resilient to failure ( jboss 2.4 . 0 )
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 537 : multi - threaded sub - execution issue
[ gr - 48822 ] security : enable or disable customization by default .
added " rctag = android % 20app % 20edit " to the API call to include additional context for the editing app
updated test cases in Test . java to improve test coverage and ensure accuracy of functionality
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in the key generation process
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
added a call to ` writeSectionDefinition ( ) ` in ` RtfDocumentHeader . java ` to enhance the functionality of the document header for section definition writing
added distance calculation and discarding point checks in GpsLoggingService to improve accuracy of gesture tracking and handle potential issues with time differences
removed debug print statements from TableCellLayout , TableLayout2 , and TableLayout2 classes to clean up the code and improve performance by eliminating unnecessary logging
doc : generate sample code in the java microgenerator ( # 419 )
updated InsightFilter class to use WeakReference for rootNameFn and sourceFilterFn to improve memory management and prevent memory leaks when interacting with objects
simplified the addition of elements to the ` data ` and ` added ` lists by removing binary search to improve performance and code readability by avoiding unnecessary searching
replaced ThemedPreferenceActivity with PreferenceActivity and updated SettingsActivity to use PreferenceActivity instead of ThemedPreferenceActivity to simplify the code structure and improve maintainability by consolidating preference activities
updated the class name from " HostD " to " UseUnresolvedD " in ValueTypeTests . java to clarify the purpose of the class in testing scenarios
swapped the assertion order in the FST class to correct the assertion for better clarity and consistency
added an assertion to verify that the security policy exists or not to ensure the correctness of the policy handling logic
camel - 14263 : camel - olingo2 should use source code generate configurer to avoid reflection configuration .
increase sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow additional time for thread synchronization
removed the exception parameter from the log statement in MongoPersistentEntityIndexResolver to simplify logging by eliminating unnecessary exception information
added image upload by http and add a rule to publish them by an image via an HTTP client .
camel - 6946 : camel - netty should not throw exception if the producer can not get a channel local .
fix url format in BalancedClickhouseDataSource to handle multiple valid host names correctly to ensure proper parsing of URLs that include encoded characters
jetty - 1378 remove the compiler . disablejsr199 system property to prevent the use of outdated and modern jetty code
added handling for null string values in CSVRecordReader and its configuration to ensure proper formatting of null values in CSV data processing
added LiquibaseService annotation to multiple connection classes to enable the use of Liquibase service filtering during database connections
update the calculation of aggregated scope to use JavaSourceFile instead of J . CompilationUnit to ensure correct handling of Java source files during aggregation
add a new topic field for all event ( # 3420 )
updated exception handling imports from BeanCurrentlyInCreationException to BeanCreationException to resolve issues related to bean creation errors in the application configuration
updated case statements in SolrXmlConfig and added validation for " zkCredientialsProvider " and " zkCredentialsProvider " to improve clarity of configuration and mark the old method as deprecated
fixed mana tablet not show mana mana , close # 289
[ dubbo - 2404 ] fix identifier collection npe in p25p2decoderstate ( # 2404 )
removed unused import of DictionaryCompoundWordTokenFilter and HyphenationCompoundWordTokenFilter to clean up the code and improve maintainability
removed an extra character character from the thread pool name in the ScryptUtil . java file to standardize the naming convention for better consistency and clarity
renamed class ` GeneratedCode ` and updated its references to improve clarity and maintainability of the code
add asserts to ensure that the definition is not null before being removal to improve error handling and clarity in assertion failure messages
hide the shareWithMeIcon view in the LocalFileListAdapter to improve user interface by reducing unnecessary UI elements
updated URLs in various classes to use ` https ` instead of ` http ` to enhance security by using secure connections
added validation annotations to RouterFilter and modified header handling in RouterServerListFilter to enhance code robustness and ensure proper handling of null or empty header values
added detailed assertions to the TestIndexWriterMergePolicy class to improve debugging by providing more context on assertion failures
- add @ deprecate tag to various shenyu client and network module ( # 1275 )
added a null check for context in CrawlerSessionManagerValve and introduced a new test method for multiple contexts to enhance the session manager ' s functionality by ensuring proper context validation and improving test coverage
added security context retrieval to JspFactoryImpl to enhance security when using security features
update RocketComponentConfig to use min and max values instead of a hardcoded value to improve flexibility in handling component length boundaries
added dependency injection for NonceService and OpenIDAuthenticationProviderModule to ensure NonceService is bound to the correct scope for dependency injection
update child link when parent link be update . fix # 2324
refactor method signatures and remove unnecessary parameters in SpringCloudPlugin . java to improve code readability and maintainability by simplifying method parameters
increase test delay for obscure precision
implement shift - code - always option to enhance flexibility
[ java ] allow heartbeat to be report to a zk node if it have not be reach outside of the zk cluster .
removed unnecessary line breaks in NearbyActivity . java to improve code readability and maintainability
nifi - 11943 : use identity . isreference ( ) instead of identity . getName ( ) ! = null check
modified the newInstance method signature to include a noop parameter to enhance flexibility in creating ArtifactCache instances based on configuration
try to fix test which randomly fail on slow ci server
fix issue with patch by erkki nokso that nokso can not pass a null argument .
replaced ` Map ` with ` Set ` for managing libraries and modified the ` RawNativeLibraries ` class to improve performance and simplify library management
int - 1489 add namespace support for ' apply - sequence ' and ' ignore - send - failures ' for channel
remove x509 reference from clientkeypublishermapping and jwkviewresolver ( # 5444 )
modified the handling of the first readers parameter in QueryComponent to ensure proper initialization of the subReader when it has a single readers
replaced the existing ValueSourceParser implementation with a new Double2Parser for max and min to enhance precision in parsing maximum and minimum values
remove unnecessary focusable check and pointer event return statements in Container . java to simplify the code logic for better readability and maintainability
removed unused variables ' n ' and ' minScore ' in Highlighter , SpanGradientFormatter , and TokenSources classes to streamline code and improve readability by eliminating unnecessary declarations
cloudstack - 2120 : fix user creation time out in multiple account mode
fix issue with multifactor authentication webflow configuration with conditional on web application
updated connection handling in WriteJdbcPTest . java and modified table creation methods to improve connection management and ensure accurate table creation testing
remove fallback to editor . laf in favor of always register it
refactored code to use direct access on entity instead of getter methods to improve code readability and maintainability by reducing method calls
simplified margin calculation and adjusted margin handling in FloatingTaskView . java to improve code clarity and ensure consistent behavior for different device orientations
added a condition to handle non - running conditions and updated the status line of the navigation share tab to improve user experience by ensuring proper termination and providing clearer status updates
bugfix # 221290 , do not increment the thread id when compute the call graph
[ desktop ] make sure perspective have the default toolbar ( for now )
added NetworkAddressChangeListener interface to HomekitImpl and improved logging messages to enhance network address management and enhance error reporting clarity
updated lease retrieval methods to use leaseRenewalTime instead of leaseByPath to improve accuracy in handling lease renewal time calculations
replaced prefixHeader and linkStyle with Optional . absent ( ) in CxxLibraryDescription . java to simplify optional handling for better clarity
added null check for exception messages in ExceptionHandlerRegistryFactory to ensure proper handling of null messages and improve error management
changed ` nextID ` from ` int ` to ` volatile int ` and updated related methods for consistency to ensure thread safety and improve clarity in handling the nextID variable
fix test which randomly fail on slow ci server
added HasSourcePath interface and updated AbstractThinArchiveArg and FileListableLinkerInputArg classes to implement it to provide a unified way to retrieve source paths across different argument classes
replaced StringBuffer construction with direct string concatenation in IllegalArgumentException to simplify code and improve readability by eliminating unnecessary string concatenation
lucene - 10311 : add index field name to ordinalmappingatomicreader to support custom index field name
updated the ` toEpochMilli ` method to handle negative seconds and positive nanoseconds correctly to ensure accurate conversion of time values for edge cases in the Instant class
updated attribute retrieval in OGLESShaderRenderer and LwjglRenderer to use the buffer type as a string to ensure consistent retrieval of buffer attributes for better clarity and reliability
make sure paste script be always visible ( fixes http : / / github . com / codenameone / codenameone / issues / 2106 )
8209863 : c2 : ( ch ) charbuffer . put ( char ) lead to underflow
resetTemporalAttributes ( ) in ChannelState and implement contains method in AudioPacketWaveRecorder for better management of audio packet processing to ensure proper handling of temporal attributes and streamline data processing for audio packet processing
camel - 5620 : fixed parse error and documentation
updated vendor name from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java and AudioSystem . java to reflect the change in ownership from the Sun Microsystems to Oracle Corporation
refactor console initialization and add version command functionality to improve code modularity and enhance user experience by allowing versioning commands
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to use a consistent naming convention to improve code clarity and maintainability by standardizing naming conventions
make sure we throw eofexception for an invalid inputbuffer when read < 0 .
add unit test for defaultgroupprovider . deletemember ( ) and defaultgroupprovider . deletememberfromnonexistentgroup ( ) .
( chore ) camel - ftp to remove unnecessary object [ ] allocation
deleted the V2ReplicationProtocol . java file to remove obsolete replication protocol implementation to streamline the codebase
update references from ` ImmutableSortedSet < BuildRule > ` to ` SourcePath ` for compile time classpath references to better represent source paths in the Android build configuration and processing
added new classes ConstructorArgsDemo and StrictDemo with constructor and secret handling functionalities to provide structured and flexible object - oriented design for testing purposes
geos - 7094 : fix memory leak in directtemplatefeaturecollectionfactory ( use threadlocal instead of threadlocal )
updated assertion in WriteResponseHandler to compare ' responseCount ' against 2 * REplication factor to enhance accuracy of response count validation
added a null check for the index number before comparing dates to avoid potential NullPointerExceptions when accessing item data
corrected the spelling of " Anchestors " to "Ancestors " across multiple classes to ensure consistency in terminology related to ancestor filtering
ggb - 501 do n ' t try to hide the message when there be n ' t enough space on the screen .
updated equality check in ChangeLogParameters and added a new test for handling non - global inner files to ensure correct behavior when comparing change log parameters and validate functionality through unit testing
changed the visibility of the loggers map from static to final to ensure that the loggers map cannot be modified after initialization
modify return statement to call getBasePlot with a boolean parameter to ensure the return value reflects the current plot context
camel - 8193 : only log upload directory create message if it ' s not create externally .
added a boolean parameter ` sendStatus200 ` to several classes and updated related constructors and methods to support flexible control over HTTP status sending
added a check to ensure the comment is not empty before processing it to prevent potential errors when processing comments
added file type management functionality to manage file types to ensure proper handling of file types in the Buck module
simplified import statements for various functions in ComposedUtil . java to enhance code readability and maintain consistency in type handling
added a new error message for unsupported CPU and O version in ` RTMGenericCommandLineOptionTest . java ` and updated test cases in ` TestUseRTMLockingOptionOnUnsupportedCPU . java ` to improve clarity of error messages and ensure compatibility with different operating systems
minor change , adjust code formatting , remove extra space
updated the Player class to improve player data handling to enhance performance and maintainability of player operations
[ modbus ] fix OSGi unit test ( # 9491 )
fix indexoutofboundsexception when call host _ reflective _ call in the host stack .
added context management and reset functionality for FontsContract in AndroidTestEnvironment and ShadowFontsContract to enhance testing reliability and ensure proper context reset during tests
added time granularity handling and improved time query logic in TimeGranularity and PinotDataSourceMaxTime classes to enhance accuracy of time calculations and ensure consistent time zone management
ensure proper handling of controlflow ` ` exit ' ' and ` ` continue ' ' in try - finally block
updated assertions in ` assertEquals ` to handle arrays with the same size and improved error messaging to ensure accurate array equality checks and enhance debugging capabilities when assertions fail
fix false negative when try to click on an unknown slot
corrected bitwise operation syntax in MeshBuilder . java to ensure proper handling of integer values during indexing
nifi - 7462 : remove unused controllerserviceprovider in standardprocessscheduler . getprocesscontext ( )
added KotlincToJarStepFactory to manage Java annotation processors and their paths to enhance compilation configuration for better integration with Kotlin plugins
updated RESCROLL _ DELAY constant and modified snapping logic in PagedView and Workspace classes to improve drag - and - drop performance and enhance code readability
reload workspace when the shortcut have a host permission
added handling for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance user navigation functionality
added null check for the core name in CoreAdminHandler and implemented the reload action in CoreAdminHandlerTest to ensure robust handling of null values and improve error messaging for non - existent cores
added marker selection functionality to the NearbyMapFragment to improve user interaction by managing marker display and bottom sheet behavior
added error handling for Throwable in FileSyncAdapter . java to improve robustness by logging stack traces that may occur during error handling
refactor tests to ensure output is validated with exception handling for expected memory and swap space sizes to improve robustness of memory checks by capturing exceptions during Docker execution
updated the referenceill ( ) method call and modified the feed retrieval process to exclude heavy load conditions to improve efficiency by skipping unnecessary operations when the application is in heavy load mode
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
updated PackageType and ResourceCompressionMode to use ` Locale . US ` for string transformations to ensure consistent behavior across different locales when converting package types and compression modes
updated XML MIME type from " text / xml " to " application / xml " in multiple test files to ensure compatibility with the application ' s XML format
updated configuration file initialization to remove the instance reference to ensure proper configuration loading by using the singleton instance
camel - 17962 : fix test which randomly fail on slow ci server
updated import statements and modified the logic for handling integer values in HiveExpandDistinctAggregatesRule . java to accommodate larger values and prevent overflow issues
add headless exception handling in the Toolkit class to improve error management for headless graphics environments
add furnace match check to exoflamefurnacehandler . cansmelt .
mondrian : add ` ` move thread count ' ' explain the thread count ( if any ) .
fix # 4237 - correctly handle wrong resource with same spname
added a new test class ` Issue582Test ` for testing feature handling in a MapDB database to ensure proper functionality and stability of feature sorting and key serializers in the application
[ native ] add decimal overflow check .
refactor LoadingCache . java for improved performance to enhance loading efficiency and reduce processing time
add rule to avoid non - constructor method with classname . fix # 2640
alexeibarantsev : handle staleelementreferenceexception when return expected condition .
refactor ViewExistsPrecondition and JdbcDatabaseSnapshotGenerator for improved view existence checks and error handling to enhance database snapshot management and provide clearer error messages when views are not found
refactor DOMUtil class to improve performance to enhance response time for better user interaction
added translation calculations and a new method to log matrix transformations in TaskViewUtils and Utilities to enhance animation functionality for better visual representation and debugging
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper . java to disable fixed rotation transformations by default
added a method to walk FSTs and updated doc frequency handling in TempTermOutputs to improve the processing of FST arc collections and ensure correct output format during term processing
added SolrQueryRequest parameter to multiple factory methods for creating documents to enable integration with Solr query request for improved query handling
replaced ` post _ content _ check BEFORE ` with ` post _ content _ insert _ check ` and added a new table ` announcement _ validUntil _ update _ check ` to improve data integrity checks and ensure proper handling of null values in database operations
refactor comparator management in FieldValueHitQueue to use a dedicated setComparator method to improve code clarity and maintainability by centralizing comparator assignment logic
phoenix - 5381 : quote column _ char to prevent query failure
fix potential test failure cause by Spark integration test .
added methods to manage and save total storage properties in DynamicPropertiesStore to improve configuration flexibility for storage settings in the application
added support for determining the source directory for file streaming in AssetsController . java and updated related methods to enhance resource loading functionality while in development mode for better error handling
updated the method to retrieve the map mark key in MapMarksManager to ensure the correct key is used for checking the existence of maps
added a TokenRewriteStream parameter to several methods and updated default value retrieval to use it to improve flexibility in handling token replacements for default values
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to simplify method signatures and manage exceptions differently
updated file path variable handling and improved logging messages in JxBrowserManager . java and FileUtils . java to enhance clarity and robustness of file loading and logging
updated image file creation logic to use ` equals ( ) ` instead of ` = = ` to ensure compatibility with different file formats and improve code readability
[ somfytahoma ] fixed debug log spam ( # 4731 )
( chore ) camel - core : disabled flaky test on github
make some test use static final and simplify trust manager implementation .
fix logging of NaN metric value in dynatraceexporterv2 ( # 1853 )
remove a sessionid from the sessioninfo map when it be remove to ensure proper cleanup of session information
ambari - 22743 . fix receive alert from server side ( dlysnichenko )
409403 fix illegalstateexception when spdy be use and the response be write through bufferutil . writeto byte by byte
[ drools - 7007 ] move kmodule . xsd from kie - api to kie - api in order to support kjar format
added unit test for seeking media player in ShadowMediaPlayerTest . java and implemented seekTo method in ShadowMediaPlayer . java to ensure correct position of media player seeking and support different seek modes
rename createTask methods to createThrowingTask in multiple executor classes to clarify the purpose of the task as thrown in the execution pipeline
added empty border for the close button in Aqua Laf mode to improve UI consistency and appearance when using Aqua Laf
added POST request and read timeout settings to TSPTimeStampService and modified test assertions in TestSignatureInfo to improve request handling and enhance test readability
add some security permission so xstream can be create with a custom mapper ( e . g . jackson ) .
added error logging for non - parameterized diamond types and created a new class for testing to improve diamond handling and demonstrate usage of parameterized types
[ calcite - 3241 ] fix typo in reloptutil method argument ( jesus camacho rodriguez )
updated validation conditions for setting IDs and values in Http2Settings . java to improve clarity and maintainability of the validation logic
deleted the file ` Issue664Test . java ` to the test file is no longer needed for the current project requirements
[ flink - 22398 ] [ test ] remove unnecessary test for session . insert ( test2 )
ticket # 3703 : fix order of write object to json wms ( # 3704 )
updated the index setting method in PopupMenuButton . java to ensure proper handling of integer values when setting the selected index
added a method to check if the application can be unstashed to improve unstashing control by skipping unnecessary checks for manual unstashing
camel - 9040 : fixed xml dumproutesasxml ( ) to dump all route without custom id attribute .
updated getEventMismatchMessage method to accept a boolean parameter for wait time to improve flexibility in event mismatch detection based on user requirements
added a new file ` HeaderFileProcessor . java ` that implements a header processing mechanism to handle package - specific header files for better data management
added a new permission constant and modified the handling of loading completion in the Launcher and LauncherProvider classes to improve code readability and ensure the correct binding of the first load action to the widget manager
deleted the Android file for the SuperJumper implementation to eliminate unnecessary code and simplify the project
update return value from true to table disposal in SystemTableScan . java and modify query setup in TestStarQueries . java to ensure correct behavior of table scanning and improve test setup for new functionality
remove unused interface keyvaluesprovideraware from Observation .
fix container leakage due to miss item from registry .
updated return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index ` i ` to a long to ensure correct calculations with large index values
added caching mechanism to track the last modified format string to improve performance by reducing redundant calculations
updated the request in RemoteAuthenticationEndpointTests to include a filter parameter to ensure the results are of the correct username for user filtering
change def input check from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure correct handling of def input state
add container info and page index to the stats log for all apps exit to enhance analytics for better user insights and analytics
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
remove the deadlocktest . java file which be unnecessary
do n ' t add marker to group if there be no parent
add an ' open in browser ' menu item to allow re - opening the browser .
added a new error message for inconsistent output and modified exception handling in SemanticAnalyzer to improve error reporting and ensure proper exception management when multiple times are involved
modified the runnable implementation of the addEntryListener method to use an anonymous inner class to enhance code clarity and ensure proper handling of null predicate parameters
fix a bug in coordinatearrays . reversed ( ) ( # 614 )
removed an extra space in the setOpen method call to improve code readability and maintain consistency
added a boolean variable ` first ` to the TestPayloads class to initialize the variable before testing payload handling
replaced overview mode handling with showOverviewMode method to streamline the display process for better user experience
make sure to set the destination of the message dispatch in networkroutetest
int - 1671 use integer . max _ value instead of integer . min _ value for good compatibility
minor code cleanup : remove unused variable
fix race condition when write buffer .
updated verboseLevel assignment and modified artifact replacement format to improve clarity in output messages and ensure compatibility with Solr ' s analysis features
pdfbox - 4892 : avoid classcastexception , remove unneeded cast
removed unnecessary print statement in ReferenceUtil . java to streamline the code for better readability and performance
add query type to visible field predicate ( # 2231 )
added configuration for HTTP solidity port and enabling in multiple classes to allow dynamic configuration of JSON - RPC port usage based on user - defined settings
added a type check for folder before removing it as a drop target to ensure type safety and prevent potential ClassCastException
refactor the creation of the stubJar in StubJarTest . java to use a new method createStubJar to improve code readability and maintainability by encapsulating the creation logic
added setup wizard and documentation for features in StartPageTopComponent . java to enhance user guidance on setup wizard and manage complex projects with Workflow helper
use non - scheduled task to avoid race condition during daemon shutdown
fix another test broken when i figure out why it fail ( e . g . due to infinite loop ) .
replaced ReturnAttributes . NONE . value ( ) with ReturnAttributes . ALL _ USER . value ( ) in LdapUserGraphicalAuthenticationRepository . java to ensure that the return value is consistently used for user authentication
updated the onIdleTimeout handling logic in HttpChannelState . java to improve clarity and functionality to enhance the readability of timeout handling and ensure proper callback execution in case of failure scenarios
modified the CreateEndPoint class to extend Invocable instead of Runnable to allow for non - blocking operations while maintaining existing functionality
update TABLE _ HEADER _ SEPARATOR regex to support additional whitespace and add a new constant COL in TableBlockParser . java ; add a new test for single - column single - column handling in TablesTest . java to enhance parsing logic for better handling of table headers and ensure correct rendering for edge cases
change return value from 32.0 f to 31.5 f to improve camera precision
added a preference for " startonbootup " in GpsSettingsActivity and updated return values in Utilities , Utilities , and GeneralLocationListener to disable startonBootSetup functionality to ensure compatibility with application settings and streamline URL formatting
increase client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to accommodate larger values and improve data integrity
updated assertion message in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to reference " enablePassingNulls ( true ) " instead of " enablePassingNulls ( false ) " to ensure accuracy in error reporting regarding null parameters in parameter registration
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to mark the test as ignored due to instability issues
refactor PinotFS methods to improve error handling and initialization to enhance code reliability and maintainability by utilizing PluginManager for file system instances
add locale handling in TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct date formatting based on user locale
added MetalLookAndFeel support to UIManager to enhance the UI aesthetics with the Metal Look and Feel
refactor ping handling to use a ScheduledExecutorService for better management of ping tasks to ensure proper cleanup and avoid potential memory leaks during shutdown
[ type : bugfix ] fix stack trace not be capture in globalerrorhandler . thanks to shenyu for the patch .
renamed parameters in ModuleTable and PackageTable for consistency to improve clarity and maintain uniformity across the codebase
added handling for CmdLineException in PinotAdministrator . java to improve error handling for command line exceptions
replaced deprecated ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and ` hashCode ( o ) ` in ` Subject . java ` and ` Subject . java ` to ensure proper usage of ` isEqualTo ( o ) ` and prevent usage of deprecated methods
updated method signatures and variable names for clarity and consistency in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and maintainability
updated zoom level settings in BasicMapViewer . java from 10 to 0 to improve visual layout by enhancing zoom options
refactor admin user and group retrieval methods to use process user and group names to improve flexibility and maintainability of user management based on process settings
8028270 : files . readsymboliclink call accesscontroller directly so security manager ca n ' t grant the permission
added ArgumentExtractor support to DelegatedClientAuthenticationAction and its tests to enhance service resolution by including argument extraction capabilities
changed the defaultGroup variable from non - final to final to ensure immutability of the defaultGroup variable after initialization
tilesizechanger : use destroytilecaches ( ) instead of destroy it and create tilecaches ( )
removed redundant calls to addInfoRow and remove all views in InfoLayoutHelper to streamline the code for better readability and maintainability
refactor and improve cleanup logic in DatabaseCleaningService and ScheduledTasks to enhance code readability and maintainability by reducing complexity in feed cleanup operations
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with a direct variable ` auth ` to improve code readability and maintainability by reducing repetition
nifi - 259 : this close # 53 . remove system . out . tmpdir from filebasedclusternodefirewalltest .
mob - 1798 : conic curve will now always return 1 / 2 if conic curve be nan .
pdfbox - 4892 : fix typo , a suggest by valerybokov
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod . java to suppress unchecked warnings during compilation for improved code clarity
refactor image handling by introducing native creation methods for better memory management to improve performance and clarity when creating CImage objects
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to use the correct comparator for binary data processing
rename runtimeVisibleMethodOfFieldAnnotations to runtimeVisibleFieldOrMethodAnnotations across multiple classes to improve clarity and consistency in handling field and method annotations
replaced null checks in equality checks with utility methods for better readability and consistency to improve code clarity and maintainability by using standard utility methods
fix name resolution of class with disambiguation pass canonicalization
added verification of Ninja default view properties in NinjaDefaultTest . java to ensure default values are correctly retrieved for different view scenarios
renamed method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and introduced a new ` allAppsCellSize ` parameter in ` InvariantDeviceProfile ` to improve clarity of method purpose and enhance flexibility in managing all apps display options
adjusted padding calculation in DetailFragment and changed listViewPositionOffset to 16 to improve layout responsiveness and adjust position offset for better user experience
updated exception handling in ZkStateReader . java to ensure proper thread interruption handling to improve robustness and prevent potential interruptions during execution
added null checks for field values and created a test for empty headers in the RequestTest class to ensure that null values do not occur , improving robustness of header processing
public ipaddressmanagerimpl : if static nat service be not support in the network , return true
added call to reset the header scrolling state and visibility states in OCFileListFragment to ensure proper handling of the scrolling state during file operations
fix issue where extra page hang around ( issue 11634172 )
added a fixWidth flag and modified xAdvances logic for glyph handling to allow for improved positioning of text glyphs when fixed width is enabled
removed the boolean parameter from the createFragment method and replaced it with a direct method to create a Bundle to simplify the fragment creation process and improve code readability
added preEvent and postTransition methods to AbstractStateMachineFactory to enhance event handling and transition management in the state machine system
fix config description provider ( # 11945 )
updated role creation in TestAuthorizationApiAuthorizer and modified MetaStore initialization in StorageBasedMetastoreTestBase to ensure proper role ownership and enhance configuration handling for Windows compatibility
solr - 3507 : fix infinite loop when facet . sort = ' ' true ' ' and facet . mincount = ' ' false ' '
assign overriding properties before setting the cache file path to improve flexibility and ensure the cache file points to the correct build directory
added logic to stop jetty instances in DeleteInactiveReplicaTest to improve test stability by ensuring active slices are properly stopped
updated FileActionsDialogFragment to accept a filename parameter and adjusted header visibility based on file name to enhance user experience by displaying relevant file details when dialog is created
added a constant for invalid direction and updated condition checks for reorder direction to improve code clarity and maintainability by using a constant for direction values
updated InnerTransferRequest to include currency details and modified API path in AccountAPI to improve data accuracy and consistency in API endpoints
add jobexecutionservice . getexecutionidforjobid to be able to query the execution id for a job ( # 1656 )
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . admin . client . config ` package to enable the configuration of admin client functionalities within the application
simplified import statements and added new visitIdentifier method to enhance type handling and marker management to improve code clarity and maintainability by reducing import complexity and enhancing identifier processing capabilities
added action text color to the AuthenticatorActivity to improve the visual appearance of the action for better user experience
added a new method ` find ` in ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` to find entities with a ComparableField , and updated related implementations to enhance entity retrieval functionality with respect to Speedment ' s comparators
renamed methods ` addTestStepsForPickleSteps ` to ` createTestStepsForPickleSteps ` and updated corresponding calls to improve clarity and consistency in method naming conventions
renamed test methods and updated method names in StaticHandlerMethodResolverTests and MethodInvokingMessageHandlerTests to improve clarity and consistency in naming conventions
added a method to cancel a client and updated the timeout handling in SparkClientImpl to ensure proper management of client processes and improve error handling during connection failures
added ` getImplicitPreCoercionValue ( ) ` method implementations in ` SkylarkParamInfo ` , ` ParamInfo ` , and ` ReflectionParamInfo ` classes , and updated the handling of ` null ` values in ` SkylarkParamInfo ` to ensure that implicit parameters return default values when absent , improving robustness
initialize lastDisplayedUser to an empty optional to avoid potential NullPointerExceptions when accessing lastDisplayedUser
added a method to ` QueryDslMongoRepository ` to retrieve all entities with a specified order specifier to enhance the repository ' s functionality to support multiple order specifications
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions when stopping instances
planner - 290 : do not swallow the warm - up loop in case of failure
feature - add xread method and response for binary stream ( # 3954 )
removed unnecessary comment from LinkedBufferInput and StreamInput classes to streamline code for improved clarity and maintainability
added WebSecurity configuration and customizers to CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to enhance security management and enable customization of HTTP security settings
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` for testing JDBC with ` TestJdbcWithDBTokenStore ` to ensure functionality works correctly with the new Kerberos authentication mechanism in Hive
added registerProviderInternal method to ShadowContentResolver and modified provider creation in ContentProviderController to enhance content provider registration and streamline provider creation in tests
updated the constructor of AttributeReader to use ClassFile . Version instead of Version to ensure compatibility with the latest class loading requirements
fixed - singleconnectionmanager do n ' t set keep - alive to false when try to establish connection
[ java ] : add supplier to be able to have custom flow control within the driver .
ggb - 515 do n ' t blow up if no point in 2d
added concurrent collections and improved error handling in WebSocket connection handling to enhance thread safety and provide better error reporting during asynchronous operations
updated WebDriver instantiation to use a configurable Selenium driver and enhanced screenshot handling to improve flexibility and usability for different selenium environments
use assertj assertion instead of junit in microprofile / shadow - api - backport main ( # 1749 ) ( # 6202 )
remove trufflelanguage . getcontextreference , no longer need .
fix # 1187 . correctly handle invocation error in stub ( # 1188 )
updated coordinate retrieval logic in Actor and Group classes to ensure correct handling of ascendant actors and improve error messaging for better clarity
added location permission handling for location access in LocationPickerActivity to enhance user experience by enforcing location access through dedicated permissions
http : / / issues . apache . org / jira / browse / amq - 4568 - add countermdb a jms queue example
added cookie specification to request configuration in GetHTTP . java to ensure proper handling of request cookies for enhanced security
simplified the overlap logic in the Intersector class to improve code readability and maintainability by using the overlaps method directly
replaced DeemphasisFilter with NonClippingGain for audio processing to improve audio processing by utilizing a non - clipping gain
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsPanel classes to enable users to browse to the monitoring UI based on the current device
add kubernetes . service . create - timeout config option ( # 4370 )
added a switch statement to handle different place descriptions in NearbyListFragment to improve clarity and user experience by providing appropriate icons based on place descriptions
add null check for class with no package ( eg - http : / / search . maven . org / # search | ga | 1 | luaj - jse ) . this be a problem when packaging liquibase in a fat jar .
added a new file PrintInlining . java that prints " Passed " to provide a starting point for using the printInlining feature
fix : support nest brace in javadoc tag ( # 4089 )
[ java ] remove redundant field in test for clarity and maintainability .
updated the constructor to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) for the model to ensure that both edges and meta edges are included in the model
removed unused import statements from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
updated logging messages for playback speed in VideoManager . java to enhance debugging clarity by providing more detailed timing information
make sure to send roomremovedevent when cluster be start .
updated the string from ' replicas ' to ' cores ' in the AutoScalingHandlerTest . java file to ensure clarity in the output of the AutoScalingHandler functionality
added key clipping and mips to the TextureHelper class to enhance texture manipulation capabilities for better user experience
refactor project build file parser initialization to use CloseRecordingProjectBuildFileParser to enhance event tracking and improve clarity in parser lifecycle management
[ j2kt ] add librarynormalizationpass to pass normalizationpass .
changed the method name from ` nextResponseBodyConverter ` to ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and added a new test for delegates in ` Java8OptionalConverterFactoryTest ` to streamline the method usage and ensure proper converter resolution in the Retrofit implementation
[ flink - 1765 ] [ core ] fix memorymanager . segment memory leak detection for dead segment .
add temporal annotation to consensessionvo for mysql compatibility
added new files Hbs . java and HbsTest . java to implement template engine for handlebars to enable the compilation and testing of handlebars in the application
fix # 4287 show message info only when it ' s not null
fix importcsv to use keyset instead of keyset ( # 3469 )
# 2743 clearer test to confirm dialog appear in firefox
added a condition to return null if the count of distinct column indices exceeds 2 in ReduceSinkDeDuplication . java to improve handling of cases where fewer columns are present
refactor MiscUtils to improve path handling and processing logic to enhance clarity and maintainability of path processing and output handling
regenerate client with updated copyright year ( # 4382 )
updated dependencies from " websocket " to " jetty - websocket - server " and " jetty - websocket - client " in TestOSGiUtil . java to align with the new package structure for better organization
changed return type of identity . getAttributes ( ) to return an unmodifiable map to enhance immutability of the identity attribute map to prevent unintended modifications
ticket # 2114 : update the header after save sketch code change , a suggest by michael klink
replaced instances of ` new Double ` with direct return values in multiple classes to simplify code and improve performance by eliminating unnecessary object creation
changed method call from ` getDate ` to ` getTimestamp ` in ` JdbcDataSource . java ` to ensure correct retrieval of timestamp instead of date
update class name handling in HtmlJndiTreeReport . java to ensure proper context class resolution for JNDI classes
refactor default database options handling in StorageUtils . java and update log messages in Manager . java to improve clarity of database options and enhance logging accuracy for block generation
changed edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutable edge types
add allow _ slippery _ touches to make statusbartouchcontroller slippery be : 918776ee51
fix error in getarraysizestruffletfield by use array instead of min for stable dimension .
added Google Drive folder path preference handling to the application to allow users to customize the folder path for Google Drive operations
ticket # 4810 : implement a new method to allow random input to show the suggestion
added @ Nullable annotation to multiple assertThat methods in Truth . java to improve null safety and clarify that the parameters can be null
update the return logic in ArrayUtil to use bitwise operations instead of bitwise operations to improve correctness and performance of the contract of the method
added a new test class ApiExceptionTest for testing ApiException instrumentation and modified constructor logic in ClassInstrumentor to ensure proper handling of API exceptions and improve code clarity
fix race condition when connect to remote .
added isKeyguardSecure property and its getter / setter methods to ShadowKeyguardManager , and updated tests in ShadowKeyguardManagerTest to support secure keyguard functionality in API 23 and above
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization processes
modify the splitting of status strings and add a conditional check for overrideParts to improve string handling and ensure correct initialization of Point3i
rename the test method from assertEmptyThrowsMutipleFailureExceptionForManyThrowables to assertEmptyThrowsMultipleFailureExceptionForManyThrowables to clarify the test ' s purpose and enforce consistency in exception handling
fix asyncfile # checkdrained ( ) not call after file . close ( ) if drainnotcallafterclose be true
updated light intensity values and modified shader configuration in HybridLightTest . java to improve lighting effects and ensure better performance in rendering
replaced instances of ` TestProjectFilesystems . createProjectFilesystem ( ) ` with ` getProjectFileSystem ( ) ` in multiple test classes to improve consistency and leverage the project file system management
updated method signatures and variable types to use PathWithLines instead of String in RuntimeOptions and CucumberFeature classes to improve type safety and enhance clarity in handling rerun file paths
refactor Gson and JsonArray classes to improve code organization to enhance maintainability and readability of the codebase
remove @ notnull from TEST _ DIRS and add todo 2022.1
added a call to Shadow . directlyOn for closing ParcelFileDescriptor to ensure proper resource management by closing the ParcelFileDescriptor instance
added thread - local support for managing prefix indices in ` BasisLibrary ` to improve thread safety and isolate prefix index states across different threads
added debug logging capability to TestDistributedStatsComponentCardinality to improve troubleshooting and monitoring of HTTP connection issues
added calls to throwIfImmutable ( ) in IntList . java to ensure modifications are handled correctly in the IntList class
added @ NotNull annotation to method parameters and updated ManagedChannelBuilder initialization to improve code clarity and ensure proper null checks for event handling
move away dependency to jline - demo ( graal - > jline - demo - utils ) ( # 290 )
invalidate function array when insight . keysunsynchronized ( ) be call .
fix manifest generation on window to handle line endings correctly
changed the priority of FindNullDeref from LOW _ PRIORITY to HIGH _ PRIORITY and added a new class RFE3531161 to adjust priority levels and add a test for redundant null checks
added @ Nullable annotation to ConfigDescriptionRegistry and ensured null checks in getConfigDescription method to improve code safety and prevent potential NullPointerExceptions
fix throwables in masterjobcontext should not be cast to throwable .
pdfbox - 3468 : fix regression in pagedrawer . add image to first page
updated ManagerBase class implementation to enhance the functionality and maintainability of the Manager components
added a new BooleanFlag ` ENABLE _ ALL _ APPS _ IN _ TASKBAR ` with a debug flag to allows enabling all apps access from the system Taskbar
replaced the implementation of FragmentActivity with a direct implementation using Robolectric to simplify the code and improve readability by utilizing the ActivityController directly
renamed method ` getFileCoordinates ` to ` processFileCoordinates ` and updated associated references to improve clarity and consistency in handling file coordinates within the application
rename ` ABCase1 _ 1 ` , ` ABCase2 ` , and ` ABCase7 _ 3 ` classes to ` TestABCase1 _ 1 ` and ` TestABCase7 _ 3 ` to clarify purpose of test classes for consistency in naming conventions
renamed parameter ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` and added a null check in ` Manager ` to improve parameter clarity and prevent potential null pointer exceptions
[ fix ] call dosimschanged ( ) before set the current rocket ' s handler .
add a new class ChangeDependencyGroupIdAndArtifactId to manage Maven dependency group ID and artifact IDs to enable dynamic updates of group ID and artifact IDs for improved modularization
refactor file system and segment checking logic in IndexingJob . java and SegmentChecker . java to improve handling of file system paths and segment validation
fix checkobjectheap to use lte instead of lt
added memoization for ` replacementPaths ` and ` pathToSourcePathMap ` and improved exception handling in ` PreprocessorDelegate . java ` to enhance performance and handle exceptions more effectively during path resolution
renamed class JsonExamples to Examples and updated package - info . java to improve clarity and consistency in naming conventions
added debug logging statements to ViewExtractor . java for better traceability to enhance debugging capabilities by providing better insights into the extraction process
for # 401 , apply a consistent copyright notice to the java / tree .
added a new Main class to handle Java oop entry point events to facilitate the execution of Java oop code points in the project
fix a classcastexception that cause some issue around sip account registration wizard .
removed redundant continue statements from NativeScanner . java to streamline the code and improve readability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` to better organize tests related to the renderer configuration
replaced the use of ` ImmutableSet ` with ` Supplier < ImmutableList < BuildRule > > ` for dependency fetching to improve performance by reducing the overhead of creating immutable collections
replaced ` stream ( ) . count ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to improve performance by using a more efficient data structure
added content encoding handling in ExtractingDocumentLoader to ensure correct processing of content encoding metadata
fix cloud config sql error when username be empty ( # 3209 )
fix a bug with the player inventory and window listener that cause a slot to disappear
add -- ignore - transitive - repositories option to maven plugin to allow use of transitive dependency
removed the background job manager injection from ContactsPreferenceActivity to streamline the code by eliminating an unnecessary dependency
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
added a null check before closing the selection object to prevent potential NullPointerException when selection is null
added a conditional check to break if the index equals the length of the matcher to improve performance by avoiding unnecessary iterations when the index equals the string length
make ` ` server . port = 0 ' ' the default port number for the ci server
added a new user - defined function ' reverse ' in the Hive framework to provide an ' reverse ' operator for user - defined functions
updated method calls to use ofNullable ( ) instead of getContextPathEncoded ( ) for context path retrieval to improve consistency and correctness in retrieving the path information
updated Tracer class to improve performance to enhance the efficiency of tracing functionality
[ hotfix ] [ test ] disable flink - test - rocksdb state backend test
simplified import statements in XMLChangeLogParserTest . java to enhance code readability and maintainability
added synchronization and buffer clearing functionality in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety and correctness of buffer operations during splitting
updated forecast time values in OpenWeatherMapOneCallHandler . java to extend forecast durations for improved user experience
tweak @ test to avoid hang in ci
added logging for splitTaskIds and implemented animation and suggestion mode functionality in RemoteTargetGluer and FloatingHeaderView to enhance debugging capabilities and improve user experience during app deployment
changed ` parseRerunFile ` to return a ` Stream < Collection < FeatureWithLines > > ` and changed return type of ` parseRerunFile ` from ` Collection < FeatureWithLines > ` to ` Stream < Collection < FeatureWithLines > ` to improve method flexibility and streamline return types for better data handling
add some item to the creative tab in order to fix ghost flickering .
updated assert statements in TestRadioButtons . java for consistency to improve readability and maintainability of test code
added support for file size options in RCFileCat and introduced a method to get the number rows in RCFile to enhance file size management capabilities and provide access to the number of rows in output
renamed multiple Java classes to improve consistency in naming conventions to enhance code clarity and maintainability across the project
added multiple check for ` ndArray ` in ` JnaUtils . java ` to improve error handling and validation of MXNet ndarray parameters
[ hotfix ] [ javadocs ] fix typo in blobserver . java
fixed bug 12444251 - unusedprivatemethod no long report false positive for static private constructor .
updated variable names and added assertions in Global . java for clarity to enhance code readability and ensure proper null checks before accessing lexicalScope
int - 1708 add test for sftp auto - startup for sftp adapter
added methods to retrieve level and root bindables in various classes for improved flexibility in graphical representation
updated version parsing logic to handle the minor version number correctly to ensure accurate extraction of version number components and improve code reliability
fix exception while persist item tag ( # 3763 )
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and created a new method ` fromDateTime ` in ` DateTimeFunctions ` to enable parsing of time strings into epoch milliseconds , enhancing date formatting capabilities
hhh - 17100 change behavior of customtype # disassemble to not return null
renamed Log4j2ConfiguratorServlet . java file to improve clarity in servlet configuration management
replaced temporary exception creation with direct return of of a new HiveException and AuthorizationException to streamline code for improved readability and maintainability
modify CGoCompileStep to correctly format " CC " string in CGoCompileStep . java and add a new test in GoBinaryIntegrationTest . java to ensure proper handling of command prefix and validate the functionality of prebuilt C++ libraries
fix : add builder annotation to customresource ( # 4448 )
remove override annotation ( java 1.4 compat )
added a constant for socket timeout in HttpClientFactory to improve connection handling by allowing for a longer timeout duration
added new pipeline names in PerBuildStateFactoryWithConfigurableAttributes and updated performance event scope in RawTargetNodeToTargetNodeParsePipeline to enhance clarity in performance event tracking and improve flexibility in pipeline identification
rename variable and method to make it easy to read
removed the @ Singleton annotation from ApplicationController . java to ensure proper instantiation of the ApplicationController instance
refactor username retrieval in ShareActivity to handle OwnCloudAccount initialization to improve account handling and ensure valid username is used
added support for batch status management in JobLauncher and created a test for resuming paused job in SimpleJobLauncherTests to enhance job execution behavior and ensure proper handling of paused states during batch processing
added null check for cacheConfig before generating last modified time string to avoid potential NullPointerExceptions when cacheConfig is null
[ grid ] making docker session public , and updated import statements
refactoring : remove unnecessary import and add default package constant
pdfbox - 1640 : support special case for dictionary root object , a suggest by michael klink
mahout - 6952 - fix checkstyle / eclipse warning in testdistributedlanczossolvercli . java
updated HttpServerTestBase . java to modify test cases to enhance test coverage and fix existing issues
ww - 4719 add miss test case to demonstrate bug
add test for dynamodbignorenull - on - list inner bean ( # 4123 )
fixed - spring starter and springboot auto configuration be n ' t apply to spring 5 . x
modify the logic in the Indicator class to handle index correctly and add a new test class indicatorTest to improve accuracy of value conversion and ensure functionality through unit testing
[ grid ] add execincontainerwithuser and execincontainerwithuser method to allow specify user / command to be use in a container
update the logic for determining interested in byte and text messages to improve clarity and reduce redundancy in message handling logic
add test to ensure semgrex comprehensiveness
added a broadcast intent to send a notification for the CLEAR _ PULL _ UNREAD intent to enable users to easily navigate to the CLEAR pull action
removed conditional checks for Android version compatibility in TouchImageView . java to simplify the code for better readability and maintainability
allow jpa 2.4 . x to flush default profile validation before each other .
( chore ) camel - base - engine : do n ' t need to track if a veto can not start
added FloatingActionButton and related functionality for handling a FloatingActionButton in ShareActivity to enhance user experience by allowing quick access to main FABs easily
added inline parslet support and modified empty list initialization in ToDateTokenizer . java and corresponding test cases in TestFunctions . java to enhance date parsing functionality and improve test coverage for new functionality
rename TestAnonymousClassUnloading . java file to improve clarity regarding the test purpose
corrected terminology from " tecken " to " funktionstoken " in multiple error resource files to improve clarity and accuracy of the error message for better user understanding
updated server check logic in AuthenticatorActivity to ensure service binding only occurs when the server is not checked
fix wrong position getendcolumn - > getendline
added process wait and error handling in CxxPreprocessAndCompileStep . java and implemented waitFor method in ManagedThread . java to ensure proper handling of exceptions during process execution and improve thread management
added a new boolean field ` requireAllRepositorySources ` and modified ` PrincipalAttributesProperties ` to include it to enhance attribute handling based on repository source requirements in the authentication process
fix wrong max size handling and improve test timeouts
add support for enable or disable ssl protocol ( # 12657 )
refactor SetOnce class to use AtomicReference for better atomic handling to improve thread safety and maintainability of atomic operations
updated QueryDslMongoRepository to return an empty string when no path expression is given to enhance robustness of field name retrieval in case of null properties
updated assertions in RoundRectBorderTest to specify equality and change failure conditions to improve test clarity and ensure proper validation of border changes
fix # 597 : check for empty genesis config and replace ibft2 with bft
remove test that fail frequently in parallel
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' , added a validation check for the ' sign ' array length , and improved error logging to ensure correct thread counting , validate input parameters , and enhance error information clarity for debugging
inverted the conditional check for ' windows ' to ' ! windows ' to correctly handle the condition for non - Windows environments
replaced direct calls to ` ArrayList < T > new ( ) ` with new methods ` empty ( ) ` and ` greatest ( ) ` and ` minN ( ) ` in ` MoreCollectors . java ` to improve clarity and consistency in method naming conventions
added null check for order book and updated currency handling in BitmexStreamingMarketDataService and BitmexManualExample to improve robustness and maintain consistency in service interactions
added validation for lat and lon in GeoPointField to ensure that invalid lat and lon values throw an appropriate exception
renamed methods for creating and saving workflow files in OozieProxyImpersonator and WorkflowFilesService to enhance clarity and consistency in naming conventions regarding file creation
refactor ResponderId class for improved clarity to enhance maintainability and readability of the codebase
updated the ` getTableDocument ` method to accept a boolean parameter for including dependent tables to enhance flexibility in managing dependent tables based on user requirements
added a condition to display a notification dialog for consecutive uploads without coordinates to improve user experience by providing feedback on upload counts when no coordinates are available
added caching functionality for profile data retrieval and introduced a new API for viewing profiles to improve performance by reducing redundant serialization of query profiles
updated JpaMetamodelEntityInformation to handle nested values more effectively and added ID property extraction logic to improve property value handling and ensure compatibility with various entity types
phoenix - 5014 : last timestamp should not change during upgrade if table or view have change ( jamestaylor )
add default exception mapper to dropwizard - jersey config ( # 2968 )
added a boolean parameter to the EntryEditor constructor to provide additional control over the feature behavior of the entry editor
modified the nativeCreateNSWindow method to include an ownerPtr parameter and adjusted the return value of nativeCreateNSWindow to improve window pointer management by associating it with the owner ' s pointer
update SQL table syntax to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure proper schema generation for the file content provider
added a new ` STOCK ` object and modified event handling in the ` Tile . java ` file to support the ` STOCK ` event and improve animation control
fixed - rbuckets . get ( ) and rbuckets . get ( ) method return wrong value # 4796
added annotation to find unrelated type in genericcontainer to enable more precise diagnostics
added progress animator classes for animations in LauncherBackAnimationController to enhance user experience by providing smoother transitions during back animations
changed the ` _ initialPageNo ` variable to a non - final variable and added logic to handle page numbers to allow for more flexible handling of the initial page number values
calculate correct result of calcite ' s block of operand ( fix # 588 )
added comment parsing functionality in FormattedSqlChangeLogParser and corresponding unit tests to enhance changelog comment handling and ensure correct parsing of comment information
fix a bug where the default archiver be not be pick up when build a jar .
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing a more specific exception for unchecked loading failures
refactor aggregation handling in TSServiceImpl . java and add a multiAggregationTest method in DaemonTest . java to improve code readability and ensure proper testing of multi - aggregation functionality
added checks for unsupported format and type , and implemented pixel reading functionality in GwtGL20 . java to ensure compatibility with GWT backend and improve pixel handling efficiency
added a new test method and updated method calls in OutputMemoryTest . java and PrintR . java to improve test coverage and enhance dynamic method invocation reliability
replaced ` UnmodifiableClassException ` with ` Throwable ` handling in ` InlineBytecodeGenerator . java ` and added a ` lastException ` field to improve exception management and provide clearer error messaging when instrumenting classes
enhance class initialization trace reporting and add tracking for initialized classes to improve debugging capabilities and provide better insights during class initialization
[ issue # 10270 ] fix the regression of query level timeout in broker request handler
use caffeine cache for topic route service ( # 4494 )
added a read - only flag to the MBTilesDataStoreFactory and modified the createDataSource method to include it to allow users to create data sources in a read - only manner
updated INVALID _ SOURCE _ TARGET _ RELEASE regex pattern to allow optional leading spaces to improve flexibility in target release formats during build checks
updated URI construction and added location intent checking in DetailFragment . java to improve readability and ensure proper functionality of the intent
nifi - 12044 fixed npe in standardparametercontextdao when getreferencedids ( # 3946 )
6716623 : clarify the spec of classloader : : getclassloadinglock for non - parallel capable loader
added logic to set and set the origin response headers in the ProxyRequestHelper class to ensure proper handling of HTTP headers in the proxy request
added a new instance of ProfileSettingDrawerItem in GpsMainActivity . java to enhance user interface functionality related to profile settings
jbrules - 2835 : add ability to disable xml validation during the compilation context
simonstewart : fix the firefox driver to work as expect with the new firefox driver
added maxRows handling and modified fetch size logic in IoTDBStatement . java to ensure proper limit handling and provide clearer error messaging
refactor isCountOptimizable to allActionsAreOptimizableFilters for clarity to improve code readability and maintainability by using more descriptive method names
added support for node and mouse click event types in StandardVizEventManager to enhance interaction with the VizController for improved user interaction
[ java ] reimplement zerobuffer method to avoid boxing and unboxing .
refactor xorGroup initialization to use a memory object instead of directly accessing it in TerminalNode to improve code clarity and maintainability by ensuring xorGroup is only set from the node ' s memory object
pdfbox - 4892 : remove unused method , a suggest by valerybokov
refactor SourcePathResolver to use a private method for path resolution to improve code clarity and reduce redundancy in path resolution logic
fix issue # 241 , fix invalid attribute in dstu2 ( # 244 )
updated the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and modified the URI building to utilize an encoded version to enhance the flexibility of the method ' s design to accommodate different WebSocket configurations
rename configuration files for LLVMPaths and TestGCCSuiteCompile to improve clarity and consistency in file naming conventions
added a method to retrieve CxxPlatform based on HaskellBinaryDescriptionArg to improve flexibility in retrieving platform values based on build target
added imports for Javadoc in multiple Java files to enhance Javadoc documentation clarity and consistency across the codebase
fix concurrentlinkedstack to prevent npe and add test
add isMatched and setMatched methods to BinaryHeapQueueTest and BaseQueueable classes to manage theMatched state of the binary heap queue
added null check for mDirectories before initializing mDirs to avoid potential NullPointerExceptions when mDirectories is null
updated gesture handling logic in RecentsView . java to differentiate between overview state and first layout conditions to improve responsiveness of the gesture handling logic
added multiple package - info . java files for various Apache Lucene packages to enhance documentation and structure for better organization and clarity
added localization support for the visibleAutoLeveler field to enhance user experience by providing a localized message
added callback invocation to ` DirectUpdateHandler ` , ` DirectUpdateHandler2 ` , and ` UpdateHandler ` to enable optimization of Solr events after updates
changed the initialization of decompressor and compressor to use a padded length to ensure consistent handling of compressed data size during compression
fix ( shaderc ) : remove useless check ( # 3704 )
updated retry logic to include a check for local metastore to ensure retries are handled correctly when the meta store is not available
propagate connectionclosed exception to homios solo so that exception can be swallow
refactor ` Subject ` class references in ` mmm ` and ` ppp ` files to improve code clarity and maintainability
fix potential deadlock in abstractserializationservice . typetypes ( # 17355 )
make hssfPalette . findsimilarcolor respect min color distance , see bugzilla 49191
doc : fix broken link in new resource
alexeibarantsev : adding test for finding multiple element by numeric id , return empty list when empty
added a new flag parameter to the registerReceiver method and updated related calls to enable flexible scheduling of broadcast receivers based on specific flags
fix flaky test ffmpegtest . test ffmpegversion ( )
refactor Ogg input handling to manage memory leaks to improve resource management and prevent memory leaks during input stream processing
replaced hardcoded string for a failure message with a constant to improve maintainability and readability of the code
[ te ] fix migration failure bug ( # 4062 )
refactor BaseActivity to replace Toast notifications with a dedicated showToast method for better code organization to enhance readability and maintainability of the user interface
updated the request creation method to use the delegate ' s HTTP method instead of the method to improve flexibility by allowing the use of different request templates
added name validation checks and modified LDAP referral handling in LDAPCertStore . java to enhance robustness by ensuring valid names and proper referral processing logic
remove size - based retain call from rsockets in gatewayrsocket . do n ' t call retain ( ) multiple time .
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test method for item click handling to improve clarity and ensure correct functionality of item click event handling in the list view
[ hotfix ] [ test ] do n ' t subclass the test setup / teardown
drop itemuiprovider as it not use ( # 4181 )
add a getter / setter for the selectedobject field in sipCommselectorbox . this allow to change the associated object in a future update .
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to mark the test as isolated to improve test stability by allowing access to the FileSystemPool method
added a line to set the host using HTTP _ INFO . bindAddress in the HttpServer class to enable proper binding of the server to the specified address
updated access token validity settings in DynamicClientRegistration to accommodate different grant types to enhance token validity handling for improved functionality in different grant modes
added a CloverInstrumentationFilter class to filter classes and updated conditional checks for synthetic properties in SplitLogCounters to improve class filtering logic and ensure proper handling of synthetic fields during splitting
added support for the Smartmi Evaporative Humidifier device in MiIoDevices . java and updated the write statement in ReadmeHelper . java to enhance compatibility with smartmi Evaporatives and improve code clarity
fix bug with mining duration detection , fixes # 368
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari - 20742 change to warn log if ambari do n ' t have baseurls for install package step before eu / ru ( dili )
increase the return condition in IntHashSet to allow for more flexible handling of missing values
added Serializable interface to RuleAdministrator to enable serialization for the RuleAdministrator instance
updated ` allowedOrigins ` and ` allowedTimingOriginPatterns ` to use ` Set < String > ` instead of ` List < String > ` and added a ` Set < Pattern > ` for matching origin patterns to enhance the flexibility and efficiency of origin matching logic
add additional g3d - related file from head . g3dj to g3d / knight . g3dj ( pull # 1305 )
added error handling for updating the latest solidified block by adding a check for negative position to ensure stability by logging errors related to invalid solidified position updates
hbase - 13839 fix npe in execresult # serialize ( ) and call . contains ( ) with null value
added a method to check if a remote user is a admin user and modified error response handling to improve access control checks and ensure proper response is not null
refactor ClassMirror and StubJar classes to enhance byte source handling and improve code organization to enhance maintainability and readability of the codebase
added functionality to display the internal link text based on whether the file is a folder or a regular file to enhance user experience by providing clearer sharing options
updated assertions in PredictionTest to use Locale . ENGLISH to ensure consistent formatting of accuracy values across different locales
fix model zoo test ( # 1185 )
added visibility control for IME hiding in AllAppsContainerView and modified hideIme method in LauncherAllAppsContainerView to enhance user experience by ensuring proper handling of IME visibility and logging
added integration test for inmemoryeventstorageengine to the eventhandlingconfigurationtest
refactor BsdFileStore to simplify path handling and introduce getmntonname0 method to improve code clarity and maintainability by reducing complexity in path retrieval logic
add test case for issue # 1599 resolution of varargs type
add fallback to getrandompositioninCircle in spawning command ( # 4461 )
adjust content area size calculations to ensure minimum height and minimum content dimension to improve layout consistency and prevent resizing within available space
remove extra debug scope for hotspot typo ( jdk 1.5 issue ) .
fix test bug : newdirectory ( ) relies on window semantics
added pluginCheckClassNames to pluginChecks and adjusted the addColumnsToUpgradeTable method in UpgradeCatalog280 to ensure proper handling of plugin check classes during the upgrade process
fix minor flaw in source code format of environment . java
added import for LuceneTestCase and annotated with @ BadApple to address the issue reported in SOLR - 7421 and improve test accuracy
updated home path handling in CodenameOneImplementation . java and removed unnecessary checks in HashtableContent . java to ensure consistency in file path formatting and improve code clarity
updated FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _ STREAMS and modified condition check in DefaultTsPayloadReaderFactory . java to clarify the purpose of the flags and ensure proper handling of audio streams
replaced specific import statements with a wildcard import and modified resource access method in LiquibaseEntityResolver and XMLChangeLogSAXParser to simplify import statements and improve resource handling clarity
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier classes to enhance security by preventing users from using TLS algorithms
replaced ` CxxDeps . EMPTY ` with ` CxxDeps . of ( ) ` in multiple files to simplify dependency management by eliminating an unnecessary constant
rename expectedDirectory and actualDirectory to expectedStubDirectory and updated its usage in StubJarTest . java to improve clarity and consistency in variable naming
change the access modifier of the resizeThreshold variable from private to private to ensure the resizeThreshold variable is retained in the class hierarchy
updated folder name hint logic to utilize TextUtils for setting empty hints to improve clarity and maintain consistent behavior when the folder name is empty
added " uaa " as a parameter in the loadClientByClientId method to ensure proper client identification during tests
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access and encapsulate functionality within the class
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to use a conditional operator for improved clarity to enhance readability and maintainability of the logging output
pdfbox - 4071 : fix typo find by codespell on fossies . org , improve javadoc
rename file to supportviewprovider to well reflect their purpose
add a new test for unnecessary parentheses handling in UnnecessaryParenthesesTest . java and update the instanceof check in UnwrapParentheses . java to address issue # 3904 and improve type checking in parentheses handling
add location . teleport ( ) ( need for teleportation )
replaced Base64 encoding implementation with URL - safe encoding in TokenKeyEndpoint and tests to enhance security and ensure accurate base64 encoding for JWT keys
updated TranslatorManagerHelper to incorporate ProjectComponent and statistics reporting functionality to enhance statistics reporting capabilities by integrating project component integration
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and intent of the annotation ' s purpose
added a null assertion for the ID ( ) method in ObjectIdentityImpl . java to ensure that the ID is expected to be non - null
refactor retweeter handling in TimeLineCursorAdapter to improve clarity and functionality to enhance user interaction by properly checking muffled users and retweeter visibility
updated the verified text functionality to conditionally display the verified text based on the addon theme setting to enhance user experience by displaying appropriate verified text based on the user theme
refactor AbucoinsDigest class to improve encapsulation and remove the instance variable to enhance code readability and maintainability by reducing the need for instance - checking
camel - 14874 : camel - mongodb should use source code generate configurer to avoid reflection configuration .
added ` sourceIndex ` parameter to the ` AttributeMapping ` class and updated related methods to allow tracking of the last index instead of the first one in each attribute mapping
improve error message when partition modify incorrectly .
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security features for user authentication
rename classes related to connectivity in the application to improve clarity and maintainability of the codebase
[ geos - 5882 ] add html escape to contact email in the geoserver home page ( # 5904 )
chore : update jdk version to 3.6 . 3 ( # 4844 )
update feature count in joinmodeller to reflect the actual number of feature
bugfix : avoid stringindexoutofboundsexception ( stringindexoutofboundsexception )
( chore ) camel - single node : fix checkstyle error
updated usage of ACTION _ SET _ PLAYBACK _ SPEED to use PlaybackStateCompat to ensure consistency with coding standards and improve maintainability
updated motor lifecycle handling and added new methods for launch stage management to improve event capturing and interoperability between the motor and other components
tika - 2271 -- properly check if ascii name length be valid and compare to unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > ascii - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode - > unicode
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest to mark test as ignored due to compatibility issues with JDK 1.7 and 1.8
refactor lock file creation logic into a separate method to improve code readability and maintainability by centralizing the lock file creation logic
updated the preference key from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and associated data structures in UpdateUtils . java to ensure compatibility with the latest features and improvements in versioning
added a check to return null if the username equals the federated user to enhance security by preventing unauthorized access to federated users
[ gr - 29399 ] do not cast value to truffleobject in executemethodnode .
[ junit test ] remove unnecessary @ disabled annotation
- do n ' t show an error if no filter be enable
7057785 : add note about optional support of recursive method for self - referential collection / map
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize the version utility for improved functionality
add handling for specific index schema in MissingPrimaryKeyChangeGenerator to ensure compatibility with Oracle database comparisons and improve schema management
updated the ` execute ` method to include ` MetastoreException ` and modified exception handling in ` MsckOperation . java ` to improve error handling capabilities and provide clearer error messaging for invalid partition names
[ flink - 31900 ] [ connector / kafka ] avoid commit empty transaction list to avoid potential deadlock
[ issue # 6323 ] use Receipthandleprocessor in forwardmessagetodlqactivity ( # 6324 )
added a services parameter to DockerComposeContainer and modified the runWithCompose method to allow multiple services for starting the Docker compose container and ensure proper handling of service configurations
fix concurrentmodificationexception in export and Structcontextdecorator
simplify code by eliminating unused imports and enhancing error handling in FeedParser . java to improve code clarity and maintainability by eliminating redundant code
removed condition for app customization in Launcher and updated how CellLayout is retrieved in Workspace to simplify logic and ensure correct layout handling based on custom page count
change data type of energy sums from int to double in MeterRealtimeBodyDataDTO to allow for more precise sums during energy calculations
added a new file ` bug4150029 . java ` implementing a JApplet with file chooser functionality to address bug 4150029 related to keyboard behavior in the application
added a boolean flag for Spark configuration and updated related classes for better resource management to ensure proper handling of Spark session closure and prevent potential memory leaks
added ` getLongPressIndicator ( ) ` method to ` AppIcon ` and ` AppIconMenuItem ` classes and modified ` Launchable ` to include this new parameter to enhance the flexibility of long press indicator configuration for better user experience
fix for geot - 4877 : wkbwriter handle empty polygon correctly
refactor UnflavoredBuildTarget instances to use builder pattern and remove @ Value annotations to improve object creation and reduce memory overhead during object creation
add a new class MultiplyByMaxInt implementing a test for a specific integer operation to implement and test multi - dimensional multiplication for performance optimization
removed the call to ` onActionViewCollapsed ( ) ` in ` OCFileListFragment . java ` to ensure the drawer indicator reflects the current file ' s root context
update package name from " org . apache . lucene . index . store " to " org . apache . lucene . store " and removed unnecessary imports to streamline the package organization and improve code clarity
replaced FixedBitSet with BitSet in Automaton and Operations classes to simplify code and improve performance by using a more efficient data structure
drools - 2348 dmnevaluator error message should use a constant for no _ expression _ for _ name _ on _ node
replaced ` @ ContainedBy ` with ` @ Repeatable ` in multiple test files to align with the new feature requirements for array type annotations
update the file sending console to include a formatted duration to improve clarity of log output by displaying the file duration
updated class name handling in OpenMBeanAttributeInfoSupport . java for better access checking to ensure proper package access validation by using a safe class name method
add defensive validation to readresponseresolver and quorumresponsehandler . patch by jbellis ; review by stu hood for cassandra - 615
update freeSize calculation in StoreDirect . java to adjust freeSize for improved memory management
fix that touch event will not be ignore when enter keyboard
replaced the instantiation of SslContextFactory with SslContextFactory . Server in multiple files to enhance SSL context configuration capabilities for improved server support
replaced the use of privileged actions with direct socket creation in PG _ Stream . java to simplify the code and eliminate unnecessary security dependency
modified InputTest . java to modify input handling logic to improve test coverage and reliability of input functionality
added support for pausing blurs in the DepthController and modified task handling in AbsSwipeUpHandler to improve user experience by ensuring proper alpha control during recents animation
removed current location marker and added a null check before removing the current location marker to streamline the code and prevent potential null pointer exceptions
update method calls to use clientDetailsService for retrieving client IDs to ensure proper retrieval of client details during secret removal
[ sql ] fix sqlsourcebuildertest fail on window ( # 2472 )
fix for http : / / issues . apache . org / activemq / browse / amq - 2695 - increase default timeout
added unit tests for the ` SlidingGanttCategoryDataset ` class to validate key - related exceptions to ensure correct handling of unknown key keys in the dataset tests
refactor filter logic to use Optional for potential null pointer exceptions to enhance code robustness by avoiding potential NullPointerExceptions
change from spatial to spatial to make it more generic .
simplify code structure and suppress warnings in StdErrLog . java to improve readability and maintainability of the code
added context checks and method calls to HttpSessionEventPublisher and its tests to ensure proper context handling and event publishing
[ j2kt ] allow cq to be create with a specific syntax ( v0.14 . 1 ) .
[ doc ] fix typo in flinkiosink
add a counter for custom simplification considers the node when it be a simplifiable
updated the method to set the file icon using a context parameter instead of a null value to ensure the correct context is used for icon rendering
updated indexOrConstraintName retrieval to use schema . getName ( ) instead of schema name to ensure correct retrieval of index and constraint names based on the provided schema
[ bigqueryio ] fix parse bigquerydatetime with time field . ( # 24489 )
implemented ` findViewWithTag ` method in ` ShadowView ` and ` ShadowViewGroup ` classes to enable retrieval of views with specific tags for better view management
changed enumeration types to use generics in multiple Java files for better type safety to enhance code clarity and reduce casting errors
phoenix - 4601 remove unused import ( addendum )
added new constants for JSON value and JsonCreator , and updated the method to handle multiple Java annotations to improve code clarity and functionality by ensuring correct retrieval of enum values based on method annotations
fix handling of jar file when generate resource .
update CUDA _ R constants in CUDA . java for clarity to improve readability and maintainability of the code
refactor ResourceLoader to utilize FileFilter for resource loading to improve resource management by allowing multiple layout directories
enable blockredstonetorch . getattachedface ( ) in order to support non - simple material data ( # 1073 )
[ hotfix ] [ table - planner ] add support for VARBINARY type in reltostageconverter
added import statement for DateHelper in NoteAdapter . java to utilize date utility functionalities in the application
updated backup error handling and messaging in Backup . java to provide clearer feedback on backup loading failures to enhance user feedback regarding backup operations
ticket # 3874 : make sure to move the style of the eview1 element into the correct place
modify file creation logic in ShadowParcelFileDescriptor . java to simplify temporary file handling and improve clarity
sec - 668 : remove poll / addfirst usage in securitycontextinjectorstrategy , since it be superfluous .
[ doc ] fix falseinversiontest due to controversial
added tests for both XorNode and BinaryNode types in IntegerEqualsCanonicalizerTest and modified field calculations in IntegerEqualsNode to improve test coverage and ensure correct handling of both lowercase and uppercase node types
added a constant for STRING _ ARRAY in TypeFactory . java to facilitate type handling for String arrays in the TypeFactory class
refactor keyboard hiding logic into a separate method and log for all apps events to improve code readability and maintainability by centralizing keyboard hiding logic
second pas at fix ' 186022 _ b ' , ' 186023 _ e ' and ' 186024 _ e ' to make state container work again .
improved assertion messages in TimelineMetricCacheSizingTest and modified cache removal logic in TimelineMetricCacheTest to enhance clarity of assertion failures and clean up cache management
add a method to calculate the maximum texture size and use it for fetching it to improve performance by reducing unnecessary texture size calculations
[ java ] ensure trystoplogrecording be always call to stop all the consensus module on stop .
added a condition to reset the startPosn variable based on the transformation state to ensure proper handling of the transformation process during text analysis
add querycontext . setskipstartree ( true ) to disable star tree in aggregation ( # 7153 )
fixed # 2242 show progress bar at startup if nearby place be unavailable ( # 2539 )
add factory method for map to improve extensibility
refactor EmeddedObjects and EmbeddedObjects classes for improved clarity to enhance maintainability and readability of the codebase
added handling for launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance functionality by providing a structured way to load launcher widget span information
use eventlistener instead of swing . event . changelistener for stage selector to allow more intuitive interoperability with the event system .
added methods to set and reset the calling process UID in ShadowBinder to enable testing of process UID behavior for improved functionality in unit tests
updated ExpectationFailure class to support nullable messages and improved the creation of ExpectationFailure instances to enhance flexibility and usability when handling ExpectationFailure instances
remove log when no support for deserializing
update interpolation logic for new dimensions in ImageReplacedElement . java to ensure new dimensions are correctly set based on new dimensions
added handling for control characters in Markdown rendering to improve formatting for better data presentation
added a warning button to the SharePasswordDialog and refactored the setPassword method for clarity to improve user experience by highlighting warnings and consolidating permission setting logic
refactor mapping methods to use a dynamic class loader for file channel operations to improve flexibility and maintainability by allowing access to mapped methods dynamically
changed access modifiers to package - private for several methods and updated method visibility in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to enhance encapsulation by restricting method visibility and improving method visibility
added new slider options and updated the LlapOptionsProcessor to handle keytab configurations to enhance configuration flexibility for slider settings in HDFS
modified the tearOutGraphViewContainer method to accept a JFrame parameter and enhanced animation control to improve the flexibility and responsiveness of the graph view handling process
added functionality to handle workspace binding completion and assert workspace state to ensure workspace bindings are skipped only once during loading , preventing potential UI issues
replaced the ` isFinished ` variable with ` isFinished ` and updated related methods across multiple operator classes to improve data integrity and correctness in managing finished states and node paths
renamed methods and classes to include messageType parameters in IssueInterface and ValidationReport classes to enhance method clarity and improve the purpose of the interfaces
added a method to retrieve the provider name from a cipher and improved exception handling to enhance debugging capabilities and provide clearer error messages during handshake failures
[ hotfix ] rename containerconfiguration . getdynamicconfiguration ( ) to get flinkconfiguration . get flinkconfiguration ( )
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity for better clarity
remove unnecessary if ( size ! = size ) { @ code } .
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public static to allow access to these BITMAP constants from outside the class
remove the @ Ignore annotation from CovariantOverrideTest . java to enable the test execution when the interface is not implemented
refactor the curly method to use a dedicated Qtype variable instead of a new parameter to improve code readability and maintainability by reducing redundancy in type handling
camel - 13656 : camel - core - avoid to create a jaxbcontext when it ' s already in use
added space minimum and maximum settings to the X - axis of ScatterChart to improve visual spacing for better data visibility
modified string concatenation syntax in ExpressionStringBuilder . java to ensure consistency in formatting for " as INTERVAL "
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` and its implementations in ` BaseState ` and ` StateManager ` to enable data state preservation during reapply operations
added a check for the presence of the UTF8 key in CheckEncodingPropertiesFile . java to ensure that the UTF8 key is present and conform to the specified system resource
lucene - 3995 : fix test failure which be cause by lucene - 3995
added a UI event for long - pressing an AllApps item in the StatsLogManager to enable logging of user interactions for analytics and performance tracking
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of changes without modifications during database operations
fix issue with show surface info only when sector be in a separate group
changed type casting from CompositeType to CompositeType < ? > in multiple classes to ensure type safety and eliminate unchecked cast warnings
refactor Enum class to improve readability to enhance maintainability and ease of understanding for future developers
fix nearby random can only be create with non - random selection ( # 1975 )
remove removal of item from temporary cache , and send to server only once .
[ geos - 8763 ] fix newlayerpage do n ' t show the web ui element in ui
set Availability _ availability to Availability . UNAVAILABLE in ContextHandler . java to ensure availability status is set to unavailable for better resource management
updated synchronization logic in FetchInvDataMsgHandler and improved method parameter types in PbftDataSyncHandler to ensure proper handling of sync states and enhance code clarity
fix : update v1beta1 _ service _ config to v1beta1 _ service _ config ( # 149 )
changed the type of ` _ freeSpaceReclaimDisabled ` to ` _ freeSpaceReclaimQ ` and updated related methods to allow a variable number of reclaim attempts and improve error handling for invalid inputs
changed access modifiers of KDC options from public to private static and added a new KdcDefaultOptions class to enhance encapsulation and provide a default option test for KDC options
refactor JsonWriter initialization and ensure proper casting to improve code clarity and prevent potential ClassCastException
updated variable declarations for consistency and clarity in the ProfilePager class to improve code readability and maintainability by ensuring consistent formatting
change method name from paintBackground to paintComponentBackground to clarify the purpose of the method regarding the background painting
added a method to retrieve a value from a class constant and improved logging for property warnings to enhance the flexibility and correctness of property handling in configuration objects
log error message if kafkaservice fail to initialize
replaced the initialization of RESOURCES _ TO _ ALWAYS _ ACQUIRE with an ImmutableSet of resources to facilitate the inclusion of additional resources based on the build process
http : / / issues . apache . org / jira / browse / amq - 3872 - allow to configure a default output channel for a message endpoint . base on patch by jbellis
added keywords handling to HTMLDocument and created a new test method in TestDemo to enable the indexing of queries and ensure proper functionality through testing
update SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
refactor the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to improve code clarity and ensure proper handling of null values
log4j2 - 1343 fix compile failure in eclipse
fix : typo in comment in builder
update isbntoibibtexfetcher to return a proper error message instead of npe
make sure to suppress the original exception when leave the polyglot .
added a null check for the text before firing data change events to avoid potential NullPointerExceptions when processing text input
fill in some blank , such a by reuse code from the dvparser project
trim whitespace from the line in SuffixURLFilter . java to ensure consistent formatting of the line input
added a condition to return early if the player is in godmode to prevent further processing in god mode
ggb - 2118 fix : disable keyboard event for text input dialog
removed unnecessary import and modified constructor parameters in LinkedHashMapCache and BoundedLinkedHashMap classes to streamline code and enhance clarity by removing unnecessary imports
replaced the ` _ channel . close ( ) ` method with ` close ( ) ` and adjusted the buffer length calculation to improve resource management and ensure proper buffer handling during operations
added null check for keyIndex and updated key index builder parameters in FixAcidKeyIndex . java , and introduced a test for missingKeyIndex in TestFixAcidKeyIndex . java to improve robustness of key index handling and ensure proper functionality when keyIndex is missing
added Locale . ROOT to SolrException handling in DirectUpdateHandler2 . java to ensure consistent exception formatting for better readability and maintainability
add storecheckguard field and update usage calculation in writenode
[ gr - 21205 ] fix out of bound exception for jsr return .
add getclassificationdisagreement ( ) method to abstractcloud , add disagreement check .
replaced ` BuildTarget . copyOf ( buildTarget ) ` with direct assignment of ` buildTarget ` in multiple files to simplify the target creation process and reduce unnecessary method calls
refactor SqlRunner class to improve readability to enhance maintainability and ease of understanding for future developers
changed the type of ` date _ taken ` from ` String ` to ` long ` and updated related method parameters to accommodate larger values and improve clarity in handling timestamps
rename ` knownApis ` to ` knownSdks ` and update related classes accordingly to improve clarity and maintainability by reflecting the purpose of the data structure
add confidenceprogressindicator a the spinner for display purpose only once .
updated header check from " Cling / " to " UMS / " in multiple files to accurately reflect the type of user AGENT request
fix block index not be update when iterate away from builder , fix # 1544
change text view type to illustrate problem with message .
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL . java ` to ensure proper encoding of names to ASCII format
separate out a specific rule for conj to eliminate some conflict with advcl
[ fix ] texturepacker now write a pack entry for duplicate padding .
replaced the ` getVisitors ` method implementation with a default ` apply ` method in ` RefactorModule . java ` and modified the stream processing in ` AddGradleEnterpriseToMavenProject . java ` to simplify the code and improve readability by using a more concise method for processing refactories
added methods to retrieve elements by their name and recursive names in the Xml class to improve functionality for retrieving child elements while maintaining existing functionality
set the " Content - Charset " header for " UTF - 8 " in HttpSolrServer and its tests to ensure proper handling of special characters in HTTP requests
added SystemUiControllerFlags annotation to multiple classes and modified UI state handling to enhance code clarity and maintainability by centralizing UI state management
remove the clientService variable from the IntrospectingTokenService class to streamline the class and reduce unnecessary dependencies
enhanced error message formatting in HiveRecordSet . java to provide more context for debugging issues related to opening Hive splits
of - 2716 : remove unused field ownerId in nodeentry
cloudstack - 7223 : rename configuration parameter from backupsnapshotafertakingsnapshot to backupsnapshotaftertakingsnapshot .
modified the ` merge ` method to update the score value within the ` TextFragment ` class to ensure score does not exceed the original ` score ` when merging text fragments
camel - 12413 : camel - md4 password encoder should use encryption for encryption .
added validation to ensure maximumUnimprovedStepCount is non - negative to prevent illegal argument exceptions during execution
added a check to return early if no open editors are available to improve performance by avoiding unnecessary processing when no editors are open
# 712 : added ` ` verify ' ' method to bddmockito so that it can be use with unit test .
fix ( pathscanner ) : use class . getclassloader ( ) instead of thread . getcurrentcontext ( ) .
modified the ` sayHi2 ` method to return a ` CompletableFuture < String > ` and added a new ` sayHi2Async ` annotation to enhance the functionality of the ` sayHi2 ` method to improve asynchronous handling and ensure compatibility with the Pojo client interface
added logging to abstractsplitbrainprotectiontest to track down spurious failure
modify logout configuration to handle null values more gracefully to improve robustness and maintainability of the login process
ca : fix giac array construction for polynomial [ 1 , 2 , 4 , 5 , 5 , 5 ]
refactor DockerComposeContainer to enhance logging mechanism and add a new test class for DockerComposeLogConsumer to improve log message management and ensure proper unit testing for DockerCompose logs
added generic type parameter to the testMapping method in StandardJavaTypeMappingTest . java to enhance type safety and maintainability of the test code
removed unused import statements for IOException and FileUtils in AmbariMetaInfoTest . java to clean up the code and improve readability
enhance exception handling by add a static method ` fromSupplier ` to improve flexibility in supplier creation
replaced ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure the method returns a boolean value indicating success
fix response body issue on camel - http and add test for post
added methods to handle platform separators in path resolution to improve cross - platform compatibility in file path handling
added a null check for authorizationContext ' s parameters before iterating to avoid potential NullPointerExceptions when accessing parameters
added a call to ` throwExceptionIfFail ( ) ` in ` NativeLibraries . java ` and modified the loading method to use this method to improve error handling by controlling loading behavior based on security settings
updated SDK version from " 4511349 " to " 4514284 " and added new test cases for the text speak function to ensure accurate tracking of text state changes in the application
store transactionlogkey in transactionlogkey for easy debugging
added support for SQL without profiling in JdbcEnvironmentProperties and updated related classes to enhance flexibility in SQL query performance and provide default profile values
added a try - finally block around the write method call to ensure that the data is properly managed and logged after writing to the server
fix compiler issue with nested type inference . close # 8905
fix the date parser so it work with western timezones .
updated ` CachedThreadStatesGaugeSet ` and ` ThreadStatesGaugeSet ` to include stack trace depth to enhance thread information retrieval by providing more detailed stack trace information
added a new variable ` prevTlogOnPrecommit ` and implemented commit handling in ` UpdateLog . java ` , and adjusted sleep duration in ` LeaderTragicEventTest . java ` to enhance transaction management and ensure proper cleanup of temporary files
updated job image version from P2 - V6 to 1.17 in BukkitPlatform . java to utilize the latest features and improvements in the latest version
fix npe in segmentgeneratorconfig . getinputpath ( ) when path be null
added a new method to calculate normal vectors in ObjUtils and updated TriangulationHelper to use it to improve code clarity and reduce redundancy in vertex retrieval
updated the method signature of ` find ` to include ` identityZoneId ` instead of the principal parameter to enhance the method ' s functionality by associating it with the correct identity zone
rename SpanCollector class to improve clarity to enhance code readability and maintainability
add a null check on the getcursorsession ( ) method in order to avoid npe .
no effective change - add javadoc for transactionIsolationlevel
renamed printLVgroups to printLogicalVolumegroups and updated corresponding method names to accurately reflect the purpose of the method related to logical volume groups
fix jdk7 / jfr testsession . testforward ( ) so it show up on the correct thread .
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
replaced the manual creation of a new ArrayList with a direct return of an empty list to simplify the code and eliminate unnecessary complexity
add OverviewToAllAppsTouchController to the list to enhance touch interaction functionality in the RecentsUiFactory
updated ` scaleHotseatWithWorkspace ` method to ` getHotseatScaleAndTranslation ` and introduced a new method ` getHotseatScaleAndTranslation ` to enhance hotseat scaling functionality and improve code organization
added a check for JUnitRule in theStackTraceCleaner to ensure only relevant elements are filtered based on JUnitRule
[ java ] do n ' t use internal api to get the offset of the source buffer .
fix , remove balance listener from DepositListItem when balance change
added a conditional check to adjust color values based on edge mode to ensure proper color conversion for different edge modes
added null check for httpClientResponse in HttpClientBeanPostProcessor and simplified log initialization in LogFactory to improve robustness by preventing null pointer exceptions and ensure consistent logging format
refactored GradleProtocolDecoder to utilize PatternUtil for pattern validation to improve code clarity and reduce dependency on traccar utilities
updated playback timing logic in FullDetailsActivity to include a new check for last playback event time to improve reliability of playback event handling during updates
well spanish xml parsing ( well handling of word without elliptic attribute )
clear the dc ' s language if it be empty or null
updated ReactiveLoadBalancerClientFilter to conditionally set the scheme based on the response ' s secure status to ensure the correct scheme is used for secure responses in the load balancer
fix checkstyle issue in defaultmessagesstore
make fullfilepathfromclassname non - final to allow for extension .
replaced inline Correspondence implementation with a lambda expression to improve readability and conciseness of the code
replaced instances of ` isNonUSSupported ` with ` isNonENSupported ` and updated corresponding references in ` JRELocaleProviderAdapter . java ` to correct terminology and ensure proper handling of localization data
remove redundant null check condition in LocalTransactionSigner . java to simplify the conditional logic for better readability
add a client class to force the use of tessellator to render block . close # 162
added a return statement to the TxCacheDB class to improve function exit point clarity
replaced imports from ` com . sun . xml . internal . ws ` to ` jdk . internal . jdk ` in multiple Java files to standardize imports to use the internal Java package for better compatibility
pdfbox - 4892 : fix typo , a suggest by valerybokov
fixed npor : make sure to close the nio session when the session be close . jm - 1022
update flight event timestamps in FlightEventsTest . java for consistency to ensure uniformity in data representation and improve test coverage
[ beam - 7954 ] use org . apache . beam . vendor . grpc . v1p26p0 for protobuf import
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
[ # 7793 ] instructor : result page : expose link to the instructor ' s result page ( # 7806 )
added a short rule to the DefaultPasswordValidator and implemented a test for long password validation rules to enforce stricter password validation rules and ensure compatibility with long passwords
alexeibarantsev : implementing ability to control whether to retrieve last remote control log or not .
removed the import of org . junit . Test from ProxyClassSerializationTest . java to simplify the test class and reduce unnecessary dependencies
updated SQL command syntax in DLNAMediaInfo . java for improved syntax handling to enhance readability and maintainability of the code
remove unnecessary import and optimize test code .
added a condition to exclude the AUTHENTICATION _ MANAGER from bean definition checks in AuthenticationManagerBeanDefinitionParser . java to ensure proper handling of bean definitions that may not be defined in the registry
updated ForwardedRequestCustomizer to handle port assignments for forwarded hosts to ensure proper handling of forwarded requests with different server configurations
added a line to reset the StringBuilder to zero to ensure the console output starts with a clean state
change visibility of allowed and disallowedRoles from private to protected to allow subclasses to access and override the role list dynamically
updated OpenIDE - Module - Specification - Version values in multiple files to ensure compatibility with the latest version specifications
hbase - 27113 set the default tl wrap size for x509util / nettyrpcserver ( # 4785 )
Updated multiple Java files to reflect changes in package names to Ensure consistency and accessibility of classes across the project
updated FixedLengthTokenizerTests to remove inheritance from TestCase and added multiple test cases to improve test coverage and ensure proper exception handling for tokenizer functionality
added protocol binding configuration to OpenSamlAuthenticationRequestFactory and created corresponding unit tests to enhance flexibility in specifying SAML protocol bindings and ensure proper validation during authentication
replaced direct call to apply the transaction in DepthController with a call to applyTransactionOnDraw to improve performance by ensuring transactions are applied to the root view when drawing
update version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility with version 2.5 . x
hbase - 25836 ` ` create ' ' table access policy should be correct for create table ( ashutosh chauhan via thejas nair )
optimize unseqfileManagement to optimize unseq compaction ( # 11371 )
camel - 1744 : fixed issue with convert file stream to inputstream in camel - core
added login handling to DefaultShardManager and modified DefaultShardManagerBuilder to conditionally call the login method to improve flexibility in enabling or disabling the login feature based on user preference
fix user data memory leak on function deletion .
updated the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to better reflect the purpose of the table in the database schema
fix ( hopefully ) a race condition when terminate the response .
update logic to show giver response only for userstudent
added support for linked profile permissions in BMPImageReader to enhance security by enforcing linked profile access control
corrected substring parameters in setSimpleCuboid method calls and adjusted block positioning in ClassicPlotManager . java to correctness of placeholder positioning and ensure proper block handling during plot operations
added a wait message to the browser and wrapped the action in a Runnable for asynchronous execution to improve user experience by ensuring actions complete on the main thread
refactor grid presentation initialization to streamline setting grid sizes and improve readability to enhance code maintainability and ensure correct handling of grid sizes based on poster size settings
change return values from false to true in ContributionsListFragment to enable the functionality of the fragment
phoenix - 4069 limit the limit for distinct query should not push it to the server
pdfbox - 4892 : add test for acrobat checkbox group property , a suggest by michael klink
added a method to retrieve the last modified timestamp of a file to enable checking file modification times for better resource management
updated file format determination logic to include a condition for valid metadata tables to ensure correct file format handling for metadata tables
change caffepositform currency selection to use comboboxs for currency select
hbase - 23367 properly catch all throwables in writestreamflusher # close ( )
added a new boolean flag ` mStartedEnterAnimation ` and modified animation handling in ` IconRecentsView . java ` to improve animation behavior when entering an item range
added a new variable activeKeyId to the UaaConfiguration class to store and manage the active key ID more effectively
[ ci ] use @ text / sendAttachments instead of new array < > ( )
change isActive variable to be volatile to ensure visibility of changes to isActive across multiple threads
changed the method name ` isDesc ( ) ` from ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext . java ` and updated its usage in ` SelectionPartiallyOrderedByDescOperation . java ` to improve clarity and consistency in naming conventions regarding the ordering behavior
make sure typecasts be explicitly cast , to fix compile error
added a check for the owncloud app name in the DisplayUtils class to ensure that only the owncloud app name is used in the conditional check
hbase - 1841 fix creation of root directory when security be enable ( chaoyu tang , review by sushanth sowmyan )
fix # 726 - avoid nullpointerexception on jakartaservletwebexchange . getlocale
8196609 : improve javadoc for java . time . instant . getepochsecond
updated the state format return type from int to String in multiple classes to allow for more flexible state handling in collections
updated logging statements in CentralAuthenticationServiceImpl . java and modified the class check in AbstractTicket . java to streamline logging and enhance clarity in ticket management
added check for IllegalArgumentException in PDICCBased . java to enhance error handling by addressing additional exception types
fix checkstyle break by previous commit
fix bug where an exist file be not add to a plugin directory if the parameter be already a file or a directory .
[ beam - 10946 ] only register protobuf coder with coder registry ( # 12745 )
modified the JpaQueryParsingToken instantiation to include a boolean parameter and added a new test for query with signed numeric literals to enhance functionality and ensure correct query behavior for edge cases
refactor launch lug creation and separation handling in LaunchLugHandler to improve clarity and separation configuration by separating instance count and separation
updated the getNonceFactory method to return a synchronized value factory to provide a default implementation for nonce generation in BitmexStreamingExchange
[ camel - 19189 ] minor fix to make it easy to debug log in camel - mail
[ java ] use default timer interval in driver conductor test rather than configuration .
changed the initialization of initializeLoadedClasses from true to false to disable class loading during scanning operations
added focus handling for the search field in FullTextSearchPanel to improve user experience by ensuring the search field receives keyboard input
fix spotbugs failure in tlsconnectionlogging ( # 17093 )
updated assertions in StatementTest . java to specify random values to facilitate testing by providing variability in the code
updated assertion in TestSolrConfigHandler to include additional server URL details to enhance debugging capabilities by providing more context on the expected values during testing
replaced HttpMethod and related mock objects with ServerHttpRequest and ServerWebExchange mocks in the CsrfWebFilterTests to enhance test reliability by using the appropriate reactive types for server requests
added density handling and modified regex pattern in FilterResourcesStep . java to ensure proper filtering of drawable resources based on density
introduced a buttonUIID variable and refactored component retrieval methods to use a new method to improve code clarity and maintainability by centralizing component prefix handling
removed unnecessary import and modified condition for screen rotation in RecentsAnimationDeviceState . java to simplify the condition for better readability and maintainability
8316601 : [ backout ] compiler / gen / lib / compiler _ longarray . sh should be jdk - 8202443 .
solr - 6157 : mark replicationfactortest as awaitsfix until we can make the underlying corruption detection reliable
fixed - rqueue . schedule ( ) method return null if schedulewithnextstarttime ( ) return null # 4647
simplified the condition for updating credential in FileDownloader and FileUploader classes to enhance code readability and maintainability by reducing redundant checks
refactor the creation of StoreFileScanner list to handle null scanner cases to ensure proper resource management by closing scanner gracefully when no valid scanner is provided
improve error handle for unknown network interface ( # 12419 )
added a test for the nonce claims in the TokenMvcMockTests to ensure the correctness of the nonce handling in token creation
renamed multiple chart editor - related classes to improve consistency to enhance code maintainability and clarity in naming conventions
change layer pane width / height settings for consistency to ensure proper sizing of the layered pane across different screen sizes
removed unnecessary import statements and added a method to calculate the maximum height of the owner to streamline the code and ensure proper height calculation based on the owner ' s height
modified the database opening method to return a boolean indicating success or failure to enhance feedback on database connection status for better user experience
updated DockerTestUtils to use Platform . DOCKER _ COMMAND instead of a static final string to improve code consistency and maintainability by centralizing the command definition
make the test more robust , if there be no input file find .
updated drawLeaveBehind method to accept a dynamic color parameter for folder leave behind to enhance flexibility by allowing customization of folder leave behind colors
show explicit compatibility error for android studio ( # 5269 )
cloudstack - 2120 : identityproxy fail to create if the table name be null
added module persistence enable / disable lists to StartArgs . java to control module persistence settings for improved configuration management
updated the argument length check in GeminiMarketDataService . java for better clarity to ensure proper handling of single argument and improve error messaging for the last trade time
replace HashSet with LinkedHashSet for storing questions in VerifyPasswordResetRequestAction . java to ensure order is maintained when storing question data in the request context
add test case and fix miss test case
fix : [ hawtio - backend ] filter advisory from hawtio - backend when hawtio . home be set to false
fix postdelay so postdelay do n ' t run twice in the order they ' re run in order in the scheduler
updated method signatures in multiple classes to use varargs instead of arrays to improve flexibility in argument handling for command execution
updated XMLParser to handle end - of - stream conditions while reading characters to ensure robustness by preventing potential errors during input reading
# 180 - failing - test that text overflow page do not appear on overflow page .
added arrow width and height adjustments in DeepShortcutsContainer to ensure proper arrow positioning based on icon visibility
remove call to printstacktrace ( ) in listener ( # 2737 )
modified the handling of task visibility in the AbsSwipeUpHandler to differentiate between home and new tasks during the animation update process
pdfbox - 4071 : use class . getname ( ) instead of java . apache . pdfbox . extractoronts
improve error message in case of wrong ipv6 address
refactor method calls to use ' this ' directly in multiple classes for consistency to improve code clarity and reduce potential null reference issues
updated the ` SizeBasedDocIdSet ` and related classes to use a consistent naming convention for ` _ maxDocId ` to improve clarity and maintainability of the code by standardizing variable names
update promptToOpenFile method to accept existing file names as parameters to enhance user experience by allowing dynamic file selection based on file start
updated widget sleep delays and refactored method to use a new method for updating page counts to improve code clarity and maintainability by centralizing page count updates
added instance context handling and transformation logic to FlightConfiguration and FlightConfigurationTest classes to improve the efficiency of component positioning and ensure accurate testing of flight configurations
fix test after introduce direct : replace
updated DateTimeFormatter instantiation to use Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3952 ] filter out private metadata in dspaceobjectconverter . getmetadata ( )
added a test method ` testMissingRequired ` to validate the handling of missing dimensions and metric names to ensure that the configuration builder correctly handles missing dimensions and metric names correctly
add an option to build dynamic recipient list in springroutebuilder
refactor InlineLayoutBox to improve structure and repaint logic to enhance maintainability and ensure proper repaint handling based on drawing context
replaced detectAuthenticationOperation with a service connection for operations to streamline authentication process and improve code maintainability
