refactor SocketAppender initialization to use setRemoteHost and setPort methods to improve flexibility by allowing remote host and port configuration
refactor header handling in BasicAuthPlugin to use a dedicated method to improve code readability and maintainability by reducing duplication
remove redundant call to RecordDescriptor . msgLengthOffset ( recordIndex ) in ManyToOneRingBuffer . java to simplify code and improve readability
cloudstack - 4892 : fix overcommit ratio be not apply when vm detail be null .
added anti - alias functionality to the ShadowPaint class and updated tests accordingly to ensure proper handling of anti - aliasing in the Paint class
updated the dialog title in MassSetFieldsDialog to use a localized string to improve user experience by providing a clearer and more descriptive
do n ' t fail test if eclipse be use to compile
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5358 - fix digest
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` constructor to utilize it to provide an interface for handling input
refactor conditional statements in OrcEncodedDataReader . java for clarity to improve code readability and maintainability
updated filter condition in HomeConnectBridgeHandler to check if a thing is enabled to ensure that only active handlers are processed in the HomeConnectBridge
added null checks before removing and adding policies in AuthorizeAdminServlet to prevent potential NullPointerExceptions when bs is null
updated assertions in DefaultTypeAdaptersTest , ObjectTest , and DefaultDateAdaptersTest to use assertThat instead of if - else statements to simplify
added JSON serialization and debug logging for DAG information in TezTask . java to enhance debugging capabilities by providing detailed DAG information
updated time calculation in ComputedSummary . java and added getHeapTime method in HprofHeap . java to improve accuracy of heap dump time
replaced the ` RxJava2Tasks ` class with a direct call to ` CommonsApplication . getInstance ( ) . getMWApi ( )
removed unnecessary checks for database MVStore in MVTable . java to simplify the lock logic for read - committed transactions
[ issue # 1867 ] fix commitlog size calculation ( # 1867 )
added a check to ensure the folder info is marked as open when it is not associated with a specific tag to ensure that the associated folder is
added a test method to verify the sorting order of PGProperty values to ensure that PGProperty names are correctly sorted in ascending order
removed the constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN from Common . java to streamline the
updated method parameters from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget . java ` to improve type safety and clarity
updated the assertion in RequestBuilderTest to use ` getMessage ( ) ` instead of ` hasMessage ( ) ` to improve clarity of error message
replaced instances of " RetainedFragment " with " NearbyListFragment " and updated related fragment references to improve clarity and maintain
updated the parameter name from ' status ' to ' sessionStatus ' in the FlatProfileContainerFree constructor to improve clarity and consistency in variable
added a new configuration property ` sendZeroAnomalyEmail ` and its getter and setter methods in ` EmailConfiguration ` to enable sending zero an
[ hotfix ] [ kafka ] fix bug in flinkkafkaconsumerbase # open
removed unused methods ` getUser ` and ` getGeofence ` from ` DataManager . java ` to streamline code by eliminating unnecessary
added a constructor to ` BlockingResponseListener ` that accepts a maximum length to enhance flexibility in handling response lengths based on request size
refactor memberBroadcastsReceived method to accept a byte array instead of a single ChannelData array to improve code clarity and maintainability by
replaced ` System . out . println ( snapshotPaths ) ` with ` logger . info ( snapshotPaths ) ` and added a try -
updated test assertions in LoginSAMLAuthenticationFailureHandlerTest to remove unnecessary trailing slashes to streamline test cases for better readability and maintainability
[ hotfix ] [ test ] fix checkstyle violation in configmetadataserializertest
updated the method signature of ` updateNoteReminder ` in ` SnoozeActivity ` to use ` noteToUpdate ` instead of `
refactor directory stream filtering to use a dedicated AcceptAllFilter class to improve code readability and maintainability by centralizing directory filtering logic
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and ease of understanding
[ hotspot ] fix finduniqueconcretesource method to throw noclassdeffounderror
added a new utility class ` DockerImageName ` for validating Docker image names and updated ` GenericContainer ` to utilize it for tag validation to
updated the login failure messages in LoginActivity from " username " and " password " to " incorrect credentials . " to improve user feedback by providing
added autofocus settings for multiple UI components to ensure consistent behavior across the application
added tests for IdentityZone configuration properties in SamlIDPRefreshMockMvcTests to ensure correct handling of SAML properties for identity zones in the
added a check to ensure the list is not empty before adding it to the stack and added a new test for MNG 7644 to ensure
replaced topLeftMode ( false ) and topRightMode ( true ) with bottomRightMode ( false ) and adjusted return values to ensure
refactor imports and package structure for ParallelUniverse and ParallelUniverseTest classes to improve organization and clarity of the codebase
refactor method handle assignment in LocalCacheFactory and NodeFactory to use a new variable FACTORY _ CALL to improve code readability and maintain
changed the style from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to align the style
added functionality to display edges and self - loops in the ProcessingPreview class to enhance user experience by providing visual representation of self - loops in the
updated references from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 0
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
added a line to set the translation Y - coordinate of the drag handle indicator to zero to ensure the drag handle indicator reflects the current state
removed unnecessary logging statements in CollectionViewer , CommunityViewer , and ItemViewer classes to streamline the viewing process by eliminating unnecessary
updated the documentation for pushing predicates down in the query optimization configuration to clarify that filters may be pushed down in the operator tree and
added an assumption to skip tests on non - OSX environments to address build server issues related to finding itself
added Maven bundles for " jetty - alpn - java - client " in TestJettyOSGiAnnotationParser . java and conditional
fix for act - 1193 : do n ' t retry async job in case of optimistic locking
refactor Transaction class to improve code readability to enhance maintainability and ease of understanding
replaced ` @ AddToRuleKey ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude
danielwagnerhall : fix issue with firefox not be able to run on window .
replaced ` putIfAbsent ` with ` putIfAbsent ` for ` colFamToDynamicColumnsMapping ` to avoid duplicate entries to improve performance by avoid
[ hotfix ] [ runtime ] fix checkstyle violation in hivetuplewrappingiterator
added a condition to check if the client version is less than MIN _ SPLITTABLE _ SYSTEM _ CATALOG and apply derived columns and indexes
[ # 8271 ] update student ' s googleid when instructor email change ( # 8272 )
updated import statements in AllXSSFTests . java to use TestCellReference from the correct package to ensure compatibility with the latest Java library
add miss hardness check to the piston ' s piston ' s mobility check
added a new file LongPointerPressTest3049 . java that implements a form with network error handling to implement a test for long pointer
[ gr - 10625 ] remove dependency on trufflefunctioninlining from partialevaluator .
refactor conditional statements to use a ternary operator for clarity to improve code readability and maintainability
removed unnecessary check for ListBlockParser in ListBlockParser . java and added a new test for deeply indentedList in SpecialInputTest .
added a new file ` AbstractOptionalAssert . java ` and refactored ` OptionalAssert . java ` to utilize it to improve code
ignore webflux test until http : / / github . com / spring - cloud / spring - cloud - gateway / issues / 1070 be
[ java ] remove jsinterop . global . tojsstring from testcaselogger .
[ hotfix ] fix checkstyle violation in routestartuporderlasttest
added a condition to check if the format is a video in RemotePlayHandler to ensure web subtitle functionality only applies to video formats
added import of Security and set " jdk . tls . disabledAlgorithms " to an empty string in ComHostnameVerifier and JavaxHostname
server : do n ' t try to start vm from local storage pool in zone - wide zone
updated logging statements to use a local variable for CacheEntry to improve code readability and maintainability by reducing redundancy
added a ` skipModel ` option to ` ManageDependencies ` and updated related logic in ` AddManagedDependency ` and ` AddManagedDependencyVisitor
added a test for sending a PendingIntent with a specific request code in ShadowActivityTest to ensure that the intent sender correctly handles pending intents
added FBO functionality and improved rendering hints in RocketFigure3d . java to enhance rendering performance by enabling and disabling
added synchronization to the controllerListeners list in HydrawiseAccountHandler and modified the dispose method in HydrawiseControllerHandler to ensure thread safety
solr - 9893 : skip test that do not work with java 9
updated year retrieval to use ` ChronoField . YEAR _ OF _ ERA ` instead of ` Math . abs ( localDate . getYear (
fix possible npe when disconnect a jabber connection .
updated the string format in TxnHandler . java to include a new variable ` cur _ ws _ commit _ id ` to ensure accurate tracking of
replaced ` ByteChunk ` with ` ByteBuffer ` and updated related methods in ` BufferedInputFilter . java ` to improve performance and clarity
added a new method ` toSync ` to ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to facilit
added ActionGraphBuilder to multiple compiler factories and updated related methods to utilize it to enhance compiler configuration flexibility by integrating ActionGraphBuilder
added a test for uploading files with hidden file input in UploadTest . java to ensure that the upload functionality correctly handles hidden file input scenarios
removed unnecessary import statement for java . util . Date in SQLManager . java to streamline code by eliminating unnecessary dependencies
added a check to return the local Maven directory if the file does not exist to ensure that the method handles cases where the file does not exist
ggb - 1351 make sure algebra label be hidden when add a new label .
fix ( core ) : fix npe in ctelementimpl . getmetadata ( )
replaced ` setFlags ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` addFlag ( C . BUFFER _ FLAG
added a check to ensure the cache is not sorted by ID before reordered the entity to prevent unnecessary reordered operations when sorting by ID
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added null check for backupFolder before logging expiration date to avoid potential NullPointerException when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` that demonstrates the use of ` java . lang . reflect .
added @ AddToRuleKey annotation to the toolType field in ClangCompiler and GccCompiler classes to indicate that the toolType field
replaced hardcoded timestamp and lastStart checks with a constant PINCODE _ TIMEOUT to improve code readability and maintainability by using a
[ metric ] make prometheus sample sample sample by default
removed @ Ignore ( " requires mongodb server " ) annotations from multiple test classes to streamline test execution by eliminating unnecessary tests
fix the build error of consumecompressuncompressedmessagetest
updated the condition to check if the table is an artificial table instead of a name prefix to ensure that the table is not treated as
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty checks for session attributes in MongoSessionManager . java to ensure proper handling of session attributes and avoid potential NullPointerExceptions
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
replace direct access to ` _ stopping ` with a local variable ` stopping ` in ` AbstractConnector . java ` to improve code readability and
removed unnecessary line breaks in HuobiStreamingService . java to improve code readability and maintainability
camel - 10663 : defaultmessagehistory should use system . currenttimemillis ( ) to calculate elapsed time
[ hotfix ] [ test ] use lambda instead of lambda in delayedmonopublishertest
updated error assertion to check for WebSocketHandshakeException instead of assertTrue to ensure that the expected error is not an instance of WebSocketHandshakeException
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener instead of an anonymous inner class to improve code readability and maintainability by
refactor variable names from ' theHandler ' to ' handler ' for consistency to improve code readability and maintainability
add defaultoutputchannel attribute to the < xpath - router > element to allow customization of the default output channel
changed cacheSeconds from an int to a DurationCapable String in MessageBundleProperties . java and updated cacheSeconds assignment in CasCoreWebConfiguration
updated OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple test files to
removed the append method call from ByteBufferPool . java to streamline the code by eliminating unnecessary operations
added a check for the presence of the alt - rt . jar file in the boot class path to skip processing if it ' s present in
updated username handling in JdbcScimUserProvisioningTests to use upper case instead of lowercase to ensure consistency in usernames and improve test accuracy
replaced ` Arrays . asList ` with ` List < String > ` for options in ` FlightRecorderProfiler . java ` to improve flex
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if ` _ contentView . hasContent ( ) ` is false in ` HttpParser . java ` and implemented a
camel - atmos : fix checkstyle issue in endpoint / atmosendpoint . java
added additional method checks for " printf " and " print " methods in Java2TypeScriptAdapter . java to enhance functionality to support additional print
added a new file ` TestCapacityUntilGCWrapAround . java ` and a native method ` incMetaspaceCapacityUntilGC ` in `
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
updated the endTime calculation logic in SamplingStatCalculator . java to ensure that the end time is correctly updated based on the timestamp of the res
added unit test base on user forum issue
updated warning handling in JPEGImageReader and added a test for invalid ICC single chunk bad sequence in JPEGImageReaderTest to improve error reporting
fix the rod of the terra shatterer be not equip properly . close # 489
updated JoobyModule , SpringModule , and JoobyExtension to conditionally register beans based on type checks to ensure only
use container . getparentclassloader ( ) instead of thread . currentcontextclassloader ( ) . getclassloader ( )
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 395 : add
added a new variable ` started ` to track the state of the ellipsoid region selector to ensure accurate tracking of the starting state of the ellips
replaced all instances of " http " with " https " in JavaSEPort . java and added a default codename one com protocol to
[ geos - 5698 ] wfs getfeature should throw an exception if the sortby attribute be null or an invalid value be
replaced ` grantTuple [ 0 ] . equals ( ) ` with ` grantTuple [ 0 ] = = null ` in ` AbstractJdbc
added imports for GraphicsConfiguration , GraphicsEnvironment , and Transparency , and modified image handling in DiagramGenerationTest . java to ensure compatibility with
throw a runtimeexception if the minecraft logger be n ' t install properly .
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
make locktest more resilient to slow machine
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for tokenization and joining tokens to improve tokenization functionality
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5638 - use response
added commandIndex variable and updated command parsing logic in SystemHighlighter . java to improve command handling and ensure proper handling of empty commands
updated VERSION and VERSION _ DATE constants in Constants . java to reflect the latest snapshot version and mark the version date as PENDING to ensure compatibility with
updated buffer position to use dimensionSize instead of idx to ensure correct buffer positioning based on dimension size
added functionality to check if a shell drag is ready in QuickstepTestInformationHandler and related classes to enhance drag state handling in the application
[ java ] fix test that fail on java 7 .
added support for PSK - AES256 - GCM - SHA384 + TLSv1.2 in TestCipher . java to enhance security
updated NearbyMapFragment to use getLongDescription ( ) instead of getDescription ( ) . getText ( ) for displaying place descriptions to improve cl
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the ScimGroupMember class
refactor HqlQueryRenderer to handle reserved words and support schema scoping to improve query parsing accuracy and ensure correct handling of reserved words in
rename variable ' d ' to ' s ' in SubscriptionHelper . java to ensure consistency with variable ' s ' for clarity
refactor Parser class to improve code readability to enhance maintainability and ease of understanding
added a new parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method and updated related method calls to enhance functionality by allowing
tika - 697 -- add mime type for cpio file , a suggest by tika - 697
[ hotfix ] [ table - planner - blink ] remove outdated monotonicity method in flinksqloperatortable
added ` equals ` , ` hashCode ` , and ` toString ` methods to ` OneTimeTokenAccount ` and ` OneTimeToken ` classes
added a condition to check if the assistant is not launched before fling to ensure that fling behavior only occurs when the assistant is not launched
added a new file SolarisShortDSA . java that implements key pair generation and verification using DSA to demonstrate the
added a call to toggleSearchLabel ( false ) in ListFragment . java to improve user experience by disabling search functionality
cloudstack - 4892 : fix the bug that create snapshot on primary fail to lock the volume .
refactor ` ServiceConnection ` to ` DetailsServiceConnection ` and update its initialization logic to improve code clarity and ensure proper cleanup of the
refactor error handling in HttpClientTLSTest to use an AtomicReference for better thread safety to improve reliability by ensuring the correct exception is
removed the equals method from ConjunctionScorer class to simplify the comparison logic for better readability and maintainability
added a null check for item binding in mmm Launcher . java and ppp Launcher . java to improve error handling for item binding
make cpmemberaddremovetest stable by wait for commit
refactor cache size handling in DefaultCache to use a variable for desiredSize to improve code readability and maintainability by reducing redundancy
updated API endpoints from v2 to v3 and modified order properties in various classes to ensure compatibility with the latest API standards and improve data
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if the ` freen
added Optional handling for page data in AsyncPageReader and updated test annotations in TestDrillParquet and TestDrillParquetReader to
updated argument handling and validation logic in SerumStreamingService . java to enhance input validation and ensure correct data type handling for market data types
add a config to disable the charge animation when an item be charging on the top of a mana pool .
[ java ] do n ' t wait for cluster to be challenged in case of timeout .
added error logging for InterruptedException in WaitForHelper . java to improve error handling by providing more informative error messages
refactor DefaultServletTest to use assumeTrue instead of conditional checks for directory creation to improve code readability and maintainability by simplifying directory
removed duplicate imports of dialogStylesScss and openScreenStyle in ResourcesInjectorFull . java to streamline the code by eliminating red
updated the type of ` changeLogFile ` and ` outputFile ` from ` String ` to ` FileResource ` in ` BaseLiquibase
updated method calls from direct access to getter methods in BlockWorldVector . java to improve readability and maintainability of the code
removed unnecessary comments in LongConcurrentLRUMap . java to improve code readability and maintainability
replace singleElement ( args ) with regex . quote ( literal ) in ReflectionProcessor . java to ensure proper handling of special characters in resource configuration
modified FileCredentialsCache to handle KRB5CCNAME environment variable retrieval and modified EmptyCC to accept command - line arguments for the credentials cache
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
enable fast sync by default if there be no peer available .
simonstewart : fix checkstyle issue in io / selenium / webdriverservlet . java
do n ' t expand " areequal [ segment [ x , y ] , segment [ z , w ] ] " format expression for segment
added a check to clear pending rendering operations when the implementation is minimized to ensure that pending rendering operations are only cleared when the implementation is minim
fix flakiness in hazelcasttestsupport
fix continuously update delay time window in write - behind queue
added a line to set the icon of a JLabel to null to save some space for better user experience
updated test methods in TestBlacklistAwareRedirectResolver to replace strict matching with non - strict matching to improve test clarity and ensure correct behavior of
added IO . close ( serverSocket ) in ShutdownMonitor and improved test methods in ShutdownMonitorTest to ensure proper resource management and ensure proper
[ calcite - 1861 ] optimize the calculation of movesize in randomaccessstore .
refactor field retrieval to use a local variable for clarity to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ runtime ] move componentclosingutil to coordination
server : destroy all volume when vm be in error state
server : fix ipv6 range be not use for vlan ip address in listvlanipranges api call
renamed ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` and updated related variable names to improve clarity
increased the timeout duration in the getLeaderRetry method from 15 seconds to 30 seconds to allow more time for the leader retry operation to
replaced the ` errorMessage ` method with a direct ` Exception ` return in multiple classes to simplify error handling by removing unnecessary input parameters
updated image drawing parameters in URLImage . java to correctly handle negative coordinates to ensure proper rendering of images with negative coordinates
updated field name comparison in SolrTestCaseJ4 from ` solrDocument1 ` to ` solrDocument2 ` to ensure consistency in field name
no effective change - code cleanup - remove unnecessary try / catch block
[ hotfix ] [ runtime ] add cause to streamtaskexception in streamconfig
refactor tag processing logic in Preprocess . java for improved clarity and efficiency to enhance code readability and maintainability by reducing
reformatted the read method in MessagePack . java for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standardized way
do n ' t encode empty extension list if the parser do n ' t support it
updated string splitting logic in Artifact . java and modified artifact extraction logic in LibraryManager . java to ensure proper handling of external meta with no internal
added an alias for " node _ popup _ scripting " in the entryNavigator to improve clarity and organization of scripting menu items
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants in OverviewActionsView . java
camel - jbang - camel - jms : camel - jms - should use getout ( class ) instead of getout ( ) .
removed ` throws IOException ` from method signatures in multiple Java files to simplify error handling and improve code clarity
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove unused code to streamline the codebase
updated ` GzipHandlerTest ` to use ` final ` for ` content ` , ` contentETag ` , and ` contentETagGzip ` ,
fix ( rxjava2 ) : fix onsubscribereo not call backpressureutils . getandaddrequest
added logging functionality and improved code formatting in SpeedmentImpl . java to enhance debugging capabilities and improve code readability
add a new file LoadDSpaceOAIConfig . java to initialize the DSpaceOAI configuration to facilitate the loading of
refactor StoreScanner to handle null kv cases and increase batch size in TestWideScanner to improve robustness by preventing potential NullPointerExceptions
camel - 17454 : camel - jbang - enable / disable jmx for test that use jmx
replaced hardcoded ' / ' with a constant CANONICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation . java to improve code readability
added methods to find and return the YARN binary path in HiveConf and updated RemoteSparkJobMonitor to print application information for YARN
added support for " maria " database connection to ensure compatibility with both MySQL and Maria databases
[ hotfix ] [ runtime ] fix checkstyle violation in splitlogmanager
added a new file ExecuteAndReturnStringTest . java to implement a test for handling network errors in a form to ensure that the application correctly
added a new file InvokespecialInterface . java implementing an interface and dynamic method invocation to facilitate testing and testing of dynamic method
[ hotfix ] [ runtime ] fix checkstyle violation in evictingboundedlist
do n ' t force turncosts = true when turncosts = false .
added a check to ensure selection is non - negative in SelectBox . java to prevent illegal argument exceptions when selection is negative
added a null check for the method ' s metadata in RpcServer . java to ensure proper error handling for unsupported methods
updated hotseatCellSize and hotseatIconCenter calculations to incorporate border spacing to improve layout adjustments for hotse
refactor key string construction in ExpressionTree . java to use values . get ( " partitionColumnIndex " ) to improve code readability and maintain
fix serialization of namedtaskdecorator and taskdefinition with v4.1
updated the method used to retrieve the new index directory from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the
changed the default value of the ' equal ' variable from false to true to ensure that the ' equal ' condition accurately reflects the actual
pdfbox - 4071 : fix problem with high - codepoint unicode character in latex format
added checks to ensure only ISO control characters are processed in OAIDCCrosswalk . java and Item . java to ensure proper handling of
danielwagnerhall : do n ' t re - select the window handle if it ' s the same a the original
added a button to clear all tables and modified the return condition in the BookmarksPanel class to enhance the user interface by allowing users to clear
refactor the base URL generation in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for better URL handling to improve code clarity and maintain
refactor SoftAssertionsTest to use Dates . parseDatetime for date comparisons to improve accuracy of date comparisons and enhance readability
updated the ` adaptOrders ` method to include a ` reverse ` parameter and modified the return type of ` BitmexAdapters ` to enhance
fix a bug in prettyprinter where var be not print correctly .
simonstewart : fix the compilation error of the selenium - testing module
updated Configuration initialization to use a boolean parameter and removed unnecessary conditional logging to streamline configuration handling and improve code clarity
changed the method call from ` super . drawChildren ( batch , parentAlpha ) ` to ` super . draw ( batch , parentAlpha )
added unit test base on user forum issue
replaced usage of ` System . getProperty ( Globals . CATALINA _ BASE _ PROP ) ` with ` context . getCatal
added unit tests for ` getBestDateTimePattern ` in ` ShadowICUTest . java ` and modified ` ShadowICU . java ` to
update color mapping in PlotSquared . java to use a 16 - dimensional map to improve visual representation of color codes in the plot
added support for ZuulProperties in TraceRestClientRibbonCommandFactory and related classes to enhance tracing capabilities by integrating Zuul
tika - 1349 - add test to verify that tika - core work with utc time zone .
added new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use ` getBuildTime ( ) ` to
updated the calculation of ` xDist ` to use the absolute value of ` mScroller . getFinalX ( ) ` and ` m
deleted the GUIRWTester . java file to the functionality was no longer needed in the project
removed nullable annotations from constructors and methods in LazyMessage and StandardSubjectBuilder to simplify code by eliminating unnecessary null checks
updated error message format in TestStream . java to include a placeholder to improve clarity of error messages for better debugging
[ thymeleaf ] move markup - related class to org . thymeleaf . templateparser . markup package
added a test method for XPath string evaluation in XPathTest . java to ensure correct handling of XPath strings in the XPath evaluation process
added @ Nullable annotation to FutureUtils . java to ensure null safety in future utility methods
add warn when invokedynamic be not resolve during call - graph construction .
updated email addresses in ContextTest . java from " myfakeemail @ gmail . com " to " myexample . com " to ensure
updated HTTP response handling in HttpConnectionTest . java and modified URI validation in URIUtil . java to ensure correct HTTP status code is returned for
added the ` getColumnDataType ` method implementation in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a
chore : implement default serviceclientconfiguration ( ) method in v2testdynamodbbaseclient
refactor HSSFPictureData class to improve code organization to enhance maintainability and readability of the code
replaced ` long ` with ` Instant ` for time measurement in ` Statistics . java ` to improve time handling by utilizing ` Instant `
added version handling for media info parsing in LibMediaInfoParser to ensure compatibility with newer media library versions
removed unused imports and refactored proxy creation logic in ProjectReader . java to improve code clarity and maintainability by eliminating unnecessary
added a new SerialHeap class and updated the heap mapping in Universe . java to utilize it to facilitate the management of
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types . java to suppress serialization warnings for better performance and maintainability
change mouse wheel event to use position instead of mouse . getposition ( ) .
datamongo - 1608 - fix nullpointerexception when call findbyfirstnameignorecase with null parameter
[ hotfix ] [ map ] fix the wrong return value in maptypeinfo . equals and hashcode
added a method to retrieve an active OIDC identity provider by its issuer in XOAuthProviderConfigurator to ensure that only unique identity providers are retrieved
pdfbox - 4892 : fix parsing of cmap with poor whitespace .
refactor ContactsBackupJob to use a new OperationsServiceConnection class for better service management to improve code organization and maintainability by centralizing
refactor type constraint handling and introduce new classes T6938454a and T6938454b to improve type inference and enhance type
add isconfighidden ( ) method to accountid and use it to check if the account be hidden .
added a condition to log an error when the number of supported display bounds changes to improve error handling for inconsistent display states in the application
replaced ` SchemaUtil . getSchemaName ( ) ` with ` schema . getSchemaKey ( ) ` in ` PMetaDataImpl . java `
ggb - 1342 fire passive login event after login .
added a new ` Box2DTest ` class and updated ` GDXTester ` and ` Box2DTest ` to implement it to
[ hotfix ] [ table ] fix npe in localbypartionertype
[ hotfix ] [ runtime ] increase default buffer request timeout to 5 minute
chore : update gapic - generator - java version to 0.0 . 5
added a help button with a help action in OpenOfficePanel . java to enhance user experience by providing guidance on how to access documentation for
[ java ] make tcp _ nodelay child option for netty acceptor and publish decoding server .
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService to use
refactor class name retrieval logic in ScanResultObject . java to improve clarity and maintainability of class reference handling
refactor connection handling and stream processing in DecodeServlet . java to improve error handling and streamline image decoding process
updated Querydsl to use a new method ` toQueryDslNullHandling ` and added a new test class ` QuerydslIntegrationTests `
added null check for actor in ParallelAction and modified index handling in SequenceAction to ensure proper action processing and prevent potential NullPointerExceptions
fix : fix checkstyle violation in cttypetest
added synchronization around the access to sfWriters in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its implementations ` JJ ` and ` JK ` , along with a
added functionality to revoke an existing CA certificate and updated related tests to enhance certificate revocation process and ensure proper error handling during certificate revocation
added a check for no body response codes in the AbstractHttpTest class and implemented a test case in HttpServerTestBase to ensure proper handling of
added error handling for script engine initialization in ScriptTransformer . java to ensure compatibility with Java 6 and improve error reporting for script execution failures
updated the connection pooling type in HiveConf and added HikariDataSource imports in TxnHandler and TestTxnHandlerNegative to enhance connection management
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added file locking functionality to the FileMenuFilter and updated OCFileListFragment to handle file locking and unlocking actions to improve user experience by
updated versioning logic in mmm Version . java and ppp Version . java files to improve clarity and maintainability of the versioning
clear endpoint cache when new keyspace be update
refactor synchronization logic into a separate method ` waitForState ( Thread . State state ) ` to improve code readability and maintainability by redu
updated methods in SkylarkDescription , SkylarkDescriptionArg , SkylarkRuleContext , and Skylark
alexeibarantsev : introduce new storage interface for html5
added null check for existing views in PlanExecutor and refactored assertions in CreateViewStatementTest to improve code robustness and ensure proper handling
changed exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error handling clarity by explicitly
updated query string retrieval logic in SpellCheckComponent . java to ensure proper query string handling and avoid potential NullPointerExceptions
added checks for illegal characters in headers and implemented validation for header values to ensure that headers do not contain illegal characters or whitespace after CRLF or LF
[ gr - 13434 ] fix array base offset in hybrid layout ( # 13434 )
[ net . sourceforge . pmd . rule . apex ] remove setcontainscomment ( ) method from astcommentcontainer interface .
hhh - 510 - log warn for lazy association with @ fetch ( fetchmode . lazy )
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter
added database and table name assertions in TestCompactionTxnHandler and updated database and tablename settings in TxnHandler to ensure consistency in database and
camel - 18443 : timer consumer should be suspendable so we do n ' t need to swallow exception during shutdown
added a condition to check if a block is processed before adding it to the traces list to avoid adding unnecessary traces when the block is not processed
updated null check in ProviderManager to use CollectionUtils for checking providers to ensure proper handling of null elements in the providers list
simplified the database type check in the InsertOrUpdateGeneratorPostgres class to improve code readability and maintainability by eliminating unnecessary
added SQL queries to check for local index limits in LocalIndexIT . java and modified scan handling in BaseScannerRegionObserver . java to ensure
added a check to prevent adding collections with the same name with different types in AlterTableStatement . java to ensure that collections with the same
updated cursor positioning logic in VDUBuffer and vt320 classes to ensure correct cursor positioning based on screen base calculations
added a constant USE _ RETRIES with a value of " useRetries " in HttpShardHandlerFactory . java to facilitate
updated the VERSION _ NUMBER regex pattern in JavaVersion . java and added a test for JavaVersion . parse in TestJavaVersion . java to
added a check to return early if all input gates are empty to avoid unnecessary processing when no input gates are available
[ hotfix ] [ test ] remove empty test method in testreceivingmessagesourceparser
added a null check for properties before retrieving its value to avoid potential NullPointerException when properties are null
refactor IOException handling in FileSystemBlobStrategy to use a variable for clarity to improve code readability and maintainability by using a more d
updated error message from " rolling upgrade to fail . " to " stack upgrade to fail . " to clarify the purpose of the upgrade
replaced the existing ` addTxConfidenceListener ` method with a new ` txConfidenceListener ` instance in ` TxIdTextField .
added a constant G1 _ PERM _ GEN in JmxSupport . java and updated its usage in JmxSupport . java to
removed unused imports and simplified return statements in NearbyController . java to improve code clarity and maintainability by eliminating unnecessary complexity
pdfbox - 4892 : make class public , a suggest by valerybokov
updated condition in BaseSwipeUpHandlerV2 to include a check for non - home activities to ensure proper handling of home activities in gesture
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and consistency
updated method names and logic in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and consistency in method naming con
updated the setUnfreezeAmount method call in UnfreezeBalanceV2Actuator . java to ensure correct handling of unfreeze balance in the
[ conference scheduling ] fix typo in conference scheduling xlsx file
danielwagnerhall : use commons . io . fileutils . copydirectory instead of com . google . common . io
refactor assertion classes for consistency in naming conventions to improve code readability and maintainability
2 . x : improve javadocs for observable . repeat ( ) and observable . repeatwith ( )
replaced manual key - value storage with a method call to add multi - field operations to improve code readability and maintainability by reducing
added a null check for ` randomUUID ` before setting it in ` hubChangeLog . setId ` to avoid potential NullPointerException when ` randomUUID
added onHoverEvent method to InputConsumer and its implementations in OverviewInputConsumer and InputConsumerProxy to handle hover events for better user experience
added a delay before checking the bootstrap configuration in CoreContainer . java to ensure that the bootstrap configuration is only set when there are multiple server instances
camel - 15827 : camel - netty - http - http should use label instead of default value
increased the number of client retries from 5 to 35 in HBaseTestingClusterAutoStarter . java to improve test reliability by allowing
replaced ` toPath ( ) . resolve ( templateRelativePath ) . toFile ( ) ` with ` new File ( baseDirectory . getAbsolutePath ( )
make encodedgraphcachetest more tolerant to slow machine .
updated the query command from " customer _ count " to " all _ tables " and added a new test method for query over output to improve
added currency adaptation logic for Kraken assets in KrakenAdapters . java to enhance currency management by utilizing the asset ' s
added a ` toString ` method to the ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test ` to
updated variable names and logic for extracting email subject from dimensions in AlertTaskRunnerV2 . java to improve code clarity and maintainability by
[ beam - 10625 ] improve influxdb publish error message ( # 10625 )
updated method names from ` doTransform ` to ` downCast ` across multiple converter classes to improve clarity and consistency in method naming conventions
updated IP address filtering logic in NetUtils . java to include unique local address checks to enhance security by ensuring only unique local addresses are excluded
replaced direct call to ` getColumnNames ( ) ` with a new method ` quoteColumnNames ( ) ` in ` DataTextFormatter . java
added methods to set properties and retrieve properties in WrapSystem and StrUtils , and enhanced method signatures in CompileMethodEntity to improve property management and
added a constructor to the UpdateRequest class that accepts a URL parameter to facilitate the creation of UpdateRequest with a default URL
updated enum declaration from static to non - static in ProtoTypeAdapter . java to ensure consistency and clarity in enum usage across the project
added an experimental format warning to the response in RequestHandlerUtils to indicate that the response format is likely to change in future versions
updated debug logging to include a formatted list of module names to improve clarity of module names in debugging output
change the row height of some table to match the default font .
[ hotfix ] [ runtime ] fix potential npe in defaultbrokerheartbeatmanager
added null checks for meanPartitionSize , partitionCount , and splitCount in CqlInputFormat . java to ensure proper handling of null values
removed unnecessary condition in JUnitTestsShouldIncludeAssertRule . java to simplify the condition for better readability and maintainability
[ hotfix ] [ table - planner - blink ] fix npe in ruleterminalnodelefttuple
added StageIDsRearranger import and resolution logic in TezCompiler . java to enable dynamic stage ID rearrangement based on configuration
move messagingservice mbean to org . apache . cassandra . net
refactor memory consumption logic in LotsOfOutput . java to improve clarity of memory checks to enhance readability and maintainability of memory
added import statements for ` Document ` and ` DimConfig ` in multiple facet - related classes to enhance code clarity and maintainability by
updated LdapAutoConfiguration and LdapProperties to manage anonymous read - only properties to improve LDAP configuration flexibility and ensure proper handling of anonymous read -
refactor DatabaseMetaData class to improve code readability to enhance maintainability and ease of understanding
changed the visibility of the EchoInputDoFn class from public to private and removed the @ RunWith annotation to restrict access to the class for
added a ` finishMocking ` method to ` MockitoSession ` and updated its implementation in ` DefaultMockitoSession ` to handle exceptions
removed unnecessary dependency on extraDeps in GoTestDescription . java and added new test methods in GoTestIntegrationTest . java to streamline dependency
renamed ` buffer ` and ` handler ` to ` readBuffer ` and ` writeBuffer ` , ` writeHandler ` , and ` writePending
replaced the static block retrieval with the slowing block retrieval in BlockLiquidWrapper . java to ensure the correct block is used for
updated intent data handling in AndroidLocationPlayServiceManager and adjusted location listener retrieval in BackgroundLocationHandler to improve URL parsing and ensure correct location listener
[ java ] fix checkstyle violation in aprendpoint
[ hotfix ] [ table - planner - blink ] fix json dump for streamingplan
refactor recipe retrieval logic to use computeIfAbsent for better performance and clarity to improve code readability and reduce potential null pointer exceptions
[ hotfix ] [ test ] fix flaky test
removed unnecessary parentheses in whitespace checks in TabsAndIndentsVisitor . java to simplify the code for better readability and maintainability
added a pattern matching for " pg _ temp _ " in NeuteredLinesFilter . java to enhance filtering capabilities for temporary lines in the
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added checks for " INTERVAL " data type and modified conditionals for " LONG " , " NCLOB " , and " NVAR
added a method to check if the wavefront timer is publishing a histogram and updated related metrics accordingly to ensure that metrics are only added when the
updated the handling of divide upstreams in ShenyuClientRegisterSpringCloudServiceImpl and modified the return statement in DivideUp
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to provide a way to register a sensor event listener with specified
added exception handling for ` SocketException ` in ` SelectChannelServerSslTest . java ` to log a warning for ` SocketException ` during
camel - 15656 : camel - ignite - osgi - karaf should use camel - ignite 1.5 . 0
added a conditional check for zero line numbers and modified the logic for determining if the result set is reaching to improve error handling and ensure accurate
pdfbox - 4892 : catch all exception instead of just ioexception , a suggest by valerybokov
added unit tests for the ` setDisplayHdrCapabilities ` method in ` ShadowDisplayTest ` to ensure proper functionality and error handling for hdr capabilities retrieval
added a finally block to reset the classLoader to null to ensure proper resource management and prevent potential memory leaks
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve clarity of error messages for better debugging and
added a default constructor to the Message class to provide a default constructor for the Message class
do n ' t report warning for non - awt component in serializableidiom .
updated the constructor of PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and improved BigDecimal handling to enhance type safety and ensure proper precision
replaced ` GZIPOutputStream ` with ` OutputStream ` in ` CompressionResponseStream ` to ensure proper output stream handling when the response is already committed
updated variable and method names from ` WWWAuthenticate ` to ` authenticateHeader ` in ` Authenticator . java ` to improve clarity and consistency
removed specific condition checks for EJS and _ prefix directories in DCD . java to simplify the code by eliminating unnecessary checks
refactor thread name retrieval to use a dedicated method for clarity to improve code readability and maintainability by reducing duplication
added logging functionality to MethodInvocationPrivilegeEvaluator to improve error handling and debugging capabilities
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nut
refactored imports in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy to improve code readability and maintainability
kvm : fix iso migration for user vms in kvm
removed exception handling logic for signal handling in SigInt . java and updated test method names in SigIntTest . java to streamline signal handling
replaced static import of ` isEmpty ` with direct usage of ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code read
updated import statements and annotations in AxonAutoConfigurationWithSpringCloudTest . java to use Spring Boot ' s auto - configuration annotations to
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and maintainability
planningentityselector : remove unused resetinitializedplanningentities field and related getter / setter
added build time handling to the TwoLevelArtifactCacheDecorator and related classes to ensure accurate tracking of build time during artifact processing
updated the handling of fields in GroupByOperator to use getFields ( ) instead of getFields ( ) and adjusted the conditional check for numEntriesHash
added null check for the block before adding appearance to avoid potential NullPointerExceptions during block addition
added CNC _ BTC currency pair and updated ticker retrieval in BTCEUtils and TickerDemo to support CNC and BTC
updated the skewAllowance value from 5 to 15 and modified related logic in multiple classes to allow dynamic adjustments based on the service ' s
added sorting functionality to SongListActivity and updated sorting logic in Utils to enhance query functionality by allowing users to specify sorting criteria
updated the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to handle request body processing to ensure proper handling of request bodies by
refactored mobspawnerblock and signblock to use legacybaseblockwrapper .
refactor snapshot handling in IcebergBranchExec to use SnapshotRef for tag retrieval to improve clarity and maintainability of branch creation logic
replaced ` newArrayList ` with ` Collections . singletonList ` for setting external groups whitelist to simplify the code and improve readability by using a single
refactor PhotonMappingDemo and HybridDemoSsboInstancing classes to improve clarity and maintainability of bounce
updated password change validation logic in IdentityProviderEndpoints . java and added logging for unsupported operations in IdentityProviderEndpointsMockMvcTests . java to ensure
added a line to remove the ' assumeReflective ' flag from ' notInitializedInConstructors ' to ensure that the ' notInitializedInConstructors
modify error handling in JdbcExecutor to determine the URL based on the connection state to ensure proper URL is used when the connection is closed
[ scb - 2203 ] add test case for springmvcclient . postforobject
updated regex patterns for user and password in CredentialInjector . java and corresponding test in CredentialInjectorTest . java to improve clarity and consistency in
added a new menu item " Item4 " and a key binding for the enter key in ActionListenerCalledTwiceTest . java to enhance user
updated print statements in TestCoreParser . java to include query class name and modified result assertion logic to improve debugging output and ensure results are only
updated equality check in SimpleNode to use ' id ' instead of ' children ' to ensure consistency in comparison logic
changed the access modifier of the PopulatorContextStackItem class from public to package - private to allow subclasses to access the PopulatorContextStack
updated the method for retrieving document count in MoreLikeThis . java and added a new test method in TestMoreLikeThis . java to ensure
reformatted code for better readability in QuestManager . java to improve maintainability and clarity of the code
[ hotfix ] [ test ] make networkbufferpooltest extend from testlogger
updated query construction in MongoSessionDataStore . java to include additional parameters to enhance query performance by reducing unnecessary object creation
added a native method ` unsafeGetLong ` to the ` CustomizedUnsafeLoadMacroNode ` class to facilitate native method access
updated time zone identifier for " Asia / Amman " from ARAST to EET across multiple language files to standardize time zone
updated the id from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of the code
hhh - 15827 - handle jdbcexception in case of rollback - only
do n ' t try to download external file if there be no extension
set apple . laf . usescreenmenubar to false on macos
add integration test for piecewise ( x ^ ( 2 ) , x ^ ( 2 ) , x ^ ( 2 ) , x ^ (
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods in ` BaseSw
added modWhiteListPattern assignment in HiveConf . java and a test case for modifying Hive metastore URI in TestJdbcWithSQLAuthorization
added a mapping of entryName to value in invalidClasses to ensure proper handling of invalid entries in the EntryLoader
updated target assignment to use player . team ( ) instead of Team . sharded to ensure correct target positioning based on player ' s team
updated the cookie domain to use the domain helper ' s host name instead of a hardcoded value to ensure consistency with the domain used in the
added validation logic in MissingColumnChangeGenerator , MissingTableChangeGenerator , and ColumnSnapshotGenerator to manage nullable constraints based on search conditions to ensure
refactor multiple security - related classes for improved organization and clarity to enhance maintainability and readability of the codebase
added tests for deletion and adding documents in CustomCollectionTest . java and made several variables static final in CompositeIdRouter . java to improve test
replaced InputStreamList with SnapshotGeneratorFactory and added snapshot handling methods in ExecutablePreparedStatementBase . java and PostgreSQLIntegrationTest . java to improve snapshot
updated conditional checks for ` max _ cached _ files ` , ` max _ cached _ file _ size ` , and ` max _ cache _
added drag and drop functionality to the tabbed pane to enhance user experience by allowing users to drag and drop bibfiles
updated the description creation method in ExecutionUnitRunner and modified test assertions in CucumberTest and ExecutionUnitRunnerTest to improve clarity and
replaced ` ! isEmpty ( ) ` checks with ` StringUtils . isNotEmpty ( ) ` for ` myVersion ` and ` buildTimeString `
removed public access modifier from several methods in TimeUtils . java to enforce encapsulation and improve code readability
added a method to check for SecurityFrame or InjectedInvoker classes and refactored conditional checks in RefectionMHTests to improve code
updated file extension checks in PreviewImageFragment from " jpg " and " jpeg " to " . jpg " and " . jpeg "
updated method return logic in NativeImageDebugInfoProvider to handle HostedMethod instances to ensure correct Java type conversion for HostedMethod instances
added getIcon ( ) method to Data class and updated ClassDisplayed initialization in DataTableTopComponent to enhance icon retrieval functionality and ensure consistent display behavior
refactor substring logic in CounterRequestAggregation . java to handle cases where the last index does not exist to improve robustness by avoiding potential
refactor the replacement logic in FindAndReplace . java to tolerate dollar signs to ensure proper formatting of dollar signs when the regex
[ smack ] fix npe when try to connect to jabber server .
refactor SchemaExtractionProcessor to improve code organization to enhance maintainability and readability of the code
added a method to copy a directory to a specified destination directory in IO . java and updated imports in SpecWebAppTest . java to improve
added error handling for unknown datum classes in JacksonUtils to improve robustness by throwing an exception for unknown datum types
replaced direct calls to buildAbiFromClasses ( ) and buildRuleResolver . addToIndex ( ) with requireRule ( HasJavaAb
removed unnecessary calculations for itemHeight and backgroundPadding in SelectBox . java to simplify height adjustment logic for better readability and maintainability
added normalization for database and table names in ObjectStore . java to ensure consistent identifier formatting for database and table names
refactor database type handling in DbSqlSession to use a local variable for schema to improve code readability and maintainability by reducing red
replaced the logout mechanism with a direct call to finish the activity to simplify the code by eliminating unnecessary logout logic
[ hotfix ] [ test ] fix test failure in streamingruntimecontext
updated FastImportAction to handle null candidates before retrieving the priviledged list to improve robustness by preventing potential NullPointerExceptions
updated the logic for determining if a bean is managed in ContainerLifeCycle . java and modified test assertions in ContainerLifeCycleTest . java to
rename iexecutionattributesdialect to iexecutionattributedialect for consistency
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure the metadata is properly cleared before
make sure gettime ( date , month ) return an empty string if the location be null
added null check for measurement in TabletInsertionDataContainer and introduced a custom exception handler in DisruptorQueue to improve robustness by preventing
deleted the Session2Token . java file to the class is no longer needed in the project
do n ' t remove destination volume if the volume can not be create
added a new Install class and integrated it into SystemShortcut for launching activities based on app support to enhance user experience by allowing web UI interactions
added a null authorities populator to the LdapAuthenticationProvider class and created a test for it to ensure that the LdapAuthenticationProvider correctly handles
updated retrolambda jar retrieval logic to check for its existence and fallback to the default version if it can not be found to ensure compatibility with
replaced ` buildOrThrow ( ) ` method with ` build ( ) ` method in ` ShadowCamera . java ` to simplify the build process
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` to improve flexibility in handling live documents
added handleNullResult method call in JMESPathExtractor . java to ensure proper handling of null results in JMESPathExtractor
updated import statements in AuthorizeTag . java to use specific utility classes and added a null check for currentUser authorities to improve code clarity and
updated assertions in multiple test files to ensure consistent formatting of assertions to improve code readability and maintainability
server : fix typo find by codespell on fossies . org
updated annotation handling in ` RobolectricTestRunner ` and changed ` ArrayList ` to ` HashSet ` in ` Config ` and ` Rob
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to align with the new socket connector
added a method to check if partial partition keys are equal in HiveAlterHandler . java to improve accuracy of partition key comparison logic
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to facilitate the display
removed unnecessary whitespace in SimulationStatus . java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback in StandardDeployer and StandardUndeployer , and updated ContextHandlerCollection to use getHandlers method to
added WorkspaceListener to handle workspace updates in PreviewControllerImpl to ensure the preview graph is refreshed when the workspace changes
added a check for VM anonymous classes in ReflectionFactory and modified class name retrieval in ReflectUtil to ensure proper handling of anonymous classes and improve class
refactor TransportHelper class to improve code readability to enhance maintainability and ease of understanding
updated file path formatting in CatalinaAcegiUserRealm . java to ensure consistent file path formatting across the application
updated server and action manager initialization log messages in AmbariServer . java to improve clarity of server and action manager initialization logs for better
added null checks and assertions for ` init ` and ` modify ` in ` JSONWriter . java ` to ensure proper handling of null values and
refactor ` run ` methods in ` SliderAppsViewControllerImpl ` to accept a ` FileSystem ` parameter and update user creation logic to
added a check to ensure backgroundManager is not attached before attaching it to avoid potential memory leaks
set the current tab to 1 in AllAppsTabbed and Launcher , and adjust child layout calculations in PagedView and Workspace to ensure
added a null check for the URL in BaseDataSource and a corresponding test case in SimpleDataSourceTest to ensure that invalid URLs are handled correctly and
added JUnit @ EnabledOnJre annotation to PebbleModuleTest . java to enable tests for different Java versions to ensure compatibility with
added a new ` EditNameDialogListener ` to handle directory creation dialogs in ` FileDisplayActivity ` to enhance user experience by providing a
added functionality to toggle the bar border width of the chart in multiple activities to improve user interface responsiveness by allowing toggling bar borders
updated OkCoinExchange API URLs from okcoin . com to okex . com in OkCoinExchange . java to align the API with the
jbrules - 3892 : remove the ` ` fix ' ' prefix from test method
refactor file handling to use SeekableByteChannel instead of FileChannel to improve performance and maintainability of file operations
refactor getFlattenFieldTransferPair method to use a FieldReference parameter for improved clarity to enhance code readability and maintainability by
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
removed redundant checks for SERIALIZATION _ TYPES and PROXY _ SERIALIZATION _ TYPES in SerializationConfigurationParser . java to streamline
added heap limit configuration for debug devices in QuickstepProcessInitializer . java to optimize memory usage for debugging purposes
replaced direct calls to ` mapper . applyAsDouble ( t ) ` with a variable ` val ` for clarity to improve code read
[ log4j2 - 1348 ] re - enable failing test
added a conditional check for top - level deletion in PrecompactedRow . java to ensure proper serialization of top - level deletion data only when
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to improve rendering
added a MeterRegistryLifecycle bean to manage the lifecycle of MeterRegistry instances to ensure proper resource management and prevent memory leaks during metrics configuration
change log level of config center not find error to info
added test cases to validate the behavior of the generateCertificate method with zero or one byte arrays to ensure that the method correctly handles certificate generation with
camel - 18443 : simple predicate parser should handle ambiguity of binary operator . thanks to jbellis for the patch .
removed unnecessary null checks from onTabUnselected method in EditorActivity and added onFocusChanged method in IDEEditor to streamline focus handling
updated error logging to include the user name in the error message to improve error reporting by providing more context about the user ' s context
updated scaling values in SkeletonModelGpuSkinningTest and improved null check in OgreXmlLoader and SkeletonModelViewer to
removed ` throws InterruptedException ` from the ` createOrThrow ` method signature to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse . java to indicate that these classes are outdated and should no longer be used in future development
added support for generating d . ts files with the specified output directory to enhance the transpilation process by allowing users to specify the output directory
[ flink - 10663 ] [ connector / kinesis ] increase default fetch timeout for kinesis consumer factory
[ hotfix ] [ runtime ] add . html file extension to streamingdataflowworker
increased the maximum number of threads in the Hive metastore server configuration from 100 , 000 to 1000 to improve performance by reducing
changed the return type of the ` onTaskSnapshotChanged ` method from ` void ` to ` boolean ` and added a return statement to indicate
updated the method call from ` setShadowRadius ( mMaxShadowRadius ) ` to ` setShadowRadius ( shadowRadius ) ` to ensure
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to verify the behavior of the ` aggregatorInput `
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure correct iteration
[ gr - 13535 ] use source . isinteractive ( ) instead of source . isinternal ( ) in polyglotcontextimpl
updated conditional logic in CreateKeytabFilesServerAction . java to handle null cases for previousCachedFilePath to ensure proper validation of cachedKeytab
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer to utilize DisplayController functionality for improved UI responsiveness
updated toolTipText assignment logic for root directories in MetalFileChooserUI . java and SynthFileChooserUIImpl . java to ensure
replaced ` getToolkit ( ) ` with ` Toolkit . getDefaultToolkit ( ) ` in ` LooksFrame . java `
change the return type of the ` recognise ` method in ` TensorflowRESTCaptioner ` and ` TensorflowRESTRecogniser ` classes
added methods to insert and remove entities from a list in JPASQLBase . java and implemented a test for fetching results with factory expressions
adjusted drag index logic in FreeformFinSetConfig . java to ensure proper drag behavior when a point is removed from the finset
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to reflect the
fix a typo in the error message and spend all gas .
fix ` elementsshouldsatisfy ` and ` zippedelementsshouldsatisfy ` to use ` % nerror ` instead of `
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should not be used in future development
refactor unsafe registration logic into a separate method to improve code readability and maintainability
added @ Hint ( isDep = false ) annotations to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and AndroidBinary
changed the initialization of mCenterPagesVertically from true to false to align the application with the new design requirements
updated migrationInfo . doneProcessing ( ) call in MigrationRequestOperation . java to ensure proper processing state during migration operations
[ konnected ] rename host to baseurl in konnectedhandler and konnectedupnpserver ( #
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java
added database - specific table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate the parsing and deparsing of SQL
added a new method ` startCopyMode ( ) ` and refactored the ` switch ` statement in ` ConsoleActivity . java ` to
refactor ` writeXmlOutput ` method to use ` Writer ` for XML output generation to improve XML output handling and ensure proper resource management
camel - 10663 : fixed npe in abstractlistaggregationstrategy when use custom aggregation strategy with no exchange
camel - 18443 : camel - core - optimize log to reduce memory usage .
move basicconfigurator from logback . classic to logback . classic . basicconfigurator
do n ' t generate type qualifier for phin node .
remove unused import of sharedstringsource in testxssfrichtextstring
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with additional parameters
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] [ test ] migrate readablewritabletest to junit 5
updated equality checks in multiple classes to use ` . equals ( ) ` instead of ` = = ` for field comparisons to improve code readability
changed the access modifier of the singleton variable and the constructor from public to private in IndexFileNameFilter . java to allow subclasses to access the singleton
refactor IfStatementTest to use a local variable for plugin definitions and update graph assertions to improve code readability and maintainability by reducing
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
refactor ` TypeAdapter ` methods to remove the ` nullSafe ` method and simplify method calls to improve code readability and maintainability by
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected value for distribution tests
added a new file ` EXIFReader . java ` to handle image metadata processing to facilitate the extraction of Exif images from
change default value of cloudwatch . standardunit from unknown _ to _ sdk _ version to none
( chore ) camel - jbang - apply - pmml : fix classcastexception in pmml4datafactory
improve error message if we receive a repeated countercurrencytransferstartedmessage .
added a check to ensure the bubble bar is visible before proceeding to avoid unnecessary operations when the bubble bar is not visible
[ gr - 13539 ] handle branchtargetoutofboundsexception in aarch64 backend .
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java to ensure proper resource management and prevent potential
added a ` find ` method to ` TicketCatalog ` and improved logging in ` DefaultTicketCatalog ` to enhance ticket retrieval functionality and enhance
removed unnecessary concatenation operators and improved code readability in TestSSL . java to enhance code clarity and maintainability by eliminating unnecessary
[ hotfix ] [ runtime ] fix potential resource leak in sort - shuffle result partition
camel - jbang - fix for http : / / issues . apache . org / activemq / browse / camel - 212 -
updated ` PluginHandleController ` , ` PluginHandleDTO ` , and ` PluginHandleDO ` classes to include ` type ` and ` sort
replaced ` spanCreator ( ) . start ( ) ` with ` spanCreator ( ) . createSpan ( ) ` in ` DefaultSpan
added new configuration options for drawable format , depth format , and stencil format in IOSApplicationConfiguration and updated IOSGraphics constructor to use these
refactored login logic to use attemptLogin method and added a test for user locking out after failed attempts to improve code readability and ensure
[ pytorch ] throw unsupportedoperationexception for real / complex function in pytorch engine
removed the check for ` t . isInterrupted ( ) ` in a loop and replaced it with a loop that retrieves ` lockName ` to
refactor Implements and ShadowPicker classes to improve code organization to enhance maintainability and readability of the codebase
refactor HttpClientOptions creation in RestTransportClient and add methods to retrieve HTTP / 2 connection properties in TransportClientConfig to improve configuration flexibility and
added a check for ` DynamicArray . class ` in ` DynamicStruct . java ` and improved error handling in ` SolidityFunction
updated getStringProperty calls to include a default value of true for " text - align " and " font - size " properties to ensure consistent behavior
added constructors to ` CopyStep ` and a corresponding test in ` CopyStepTest ` to facilitate the construction of ` CopyStep
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) method throw illegalargumentexception . #
camel - 18443 : fix the test error of camel - core
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
replaced instances of ` String ` with ` ByteString ` in ` WitnessScheduleStore . java ` and related methods to ensure compatibility with protobuf
added a check for non - empty results before printing them to avoid printing empty results for better error reporting
refactor ConcurrentLinkedQueue logic for improved null checks and added a new RemoveLeak class for testing to enhance robustness by preventing
added a boolean parameter ` addSpecialTokens ` to multiple ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] [ runtime ] replace arraylist with collections . nCopies in taskmanagerservices
[ iotdb - 4892 ] fix load single tsfile npe ( # 4892 )
added session storage context handling in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to improve session management by enabling
add a test for the schema validation feature in the jspdocumentparser
added a default constructor to TypeAdapter and updated comments in Java17RecordTest and ReflectionAccessTest to clarify the purpose of the class
refactor event handling in Debugger . java and introduce a prepareKill method in SuspendedEvent . java to improve clarity and functionality of
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
fix a bug in addbitstreamsaction and remove some unused parameter from the createresourcepolicy method .
added null check for _ deflaterEntry before releasing it to avoid potential NullPointerException when _ deflaterEntry is not initialized
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
added normalization to the MD5 calculation in CheckSum . java to ensure proper formatting of checksum values for improved accuracy
refactor command handling in Example . java for improved clarity and consistency to enhance code readability and maintainability by reducing redundancy
made the ProfilerKeyListener variable final and added multiple @ Override annotations in BasicProfilerState . java and BaseAppState . java to ensure
updated the type of ` objectToSave ` from ` T ` to ` DBObject ` in ` MongoTemplate . java ` and added a
added methods to handle multiple remote addresses in RequestUtils . java and corresponding tests in RequestUtilsTest . java to improve handling of multiple remote addresses
changed return type of ` getJobArgs ` method from ` String ` to ` ObjectBuilder ` and updated related method calls to improve type safety and
refactor CookieManagerTest and UnmodifiableMaps to use a static method for retrieving the host address to improve code readability and maintainability by
refactor glyph processing logic in GlyphLayout . java and add a test case in BitmapFontTest . java to improve code clarity and ensure
added methods to pause or resume PulsarSplits in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase
added HIVESCRIPTIDENVVAR configuration in HiveConf . java and updated ScriptOperator . java to retrieve and store operator ID in the environment
refactor ` getListedTermCounts ` method to utilize ` Stream ` and ` SimpleImmutableEntry ` for better handling of term counts to
added a new action class ` UseSeparateStepSizeAction ` to manage the use of separate step size in the application to enhance user interface
refactor FileMenuFilter to use AccountManager and FileLockingHelper for file locking functionality to improve code clarity and maintainability by ensuring
hbase - 14832 roundrobintablesplit do n ' t handle empty regionserver list correctly ( chunhui )
updated header values from " false " and " true " to " 0 " and " 1 " in HttpClientRequestAdapter and its corresponding test to
pdfbox - 4892 : use ioutils . closequietly ( ) instead of manual null check
updated GwtApplication and GwtGraphics to support fullscreen mode functionality to enhance user experience by providing visual feedback on screen size changes
changed the type of ` issuers ` and ` parameterName ` from ` String ` to ` URI ` in ` WebfingerIssuerService `
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration properties of ` DubboConfig
updated file path handling in SkinLoader to use resolve method instead of Gdx . files . internal to improve code readability and maintainability
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced ` lock ( ) ` method with ` lockInterruptibly ( ) ` method in multiple servlet files to improve thread safety by using a
removed unnecessary whitespace in package declarations to improve code readability and maintainability
refactor conditional logic in NullDerefAndRedundantComparisonFinder to use an else statement and add exception handling to improve code clarity
refactor manifest fetcher to use DefaultHttpDataSource instead of content ID to improve clarity and maintainability of manifest fetching methods
added a new configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` and its getter method
change return type of configuration . set ( ) method from writableconfig to configuration . set ( configoption < t > option , t value )
added error handling for command operations in AutoScalingHandler . java to ensure proper error reporting during command payload validation
refactor CombinedDataset class to improve code readability to enhance maintainability and ease of understanding
updated variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve code readability
added methods to remove cryptography restrictions and check for restricted cryptography permissions in the Utilities class to enhance security management by ensuring cryptography restrictions are
added a check for cancellation in the moveToNether method and implemented a scheduled task for teleportation to improve stability by preventing potential cr
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to verify the functionality of
added null check for vContext before initializing it to avoid potential NullPointerException when vContext is null
fix wialon speed decoding ( fix # 589 )
hbase - 10663 addendum change default _ metric _ user _ enabled _ conf to false
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` JsonObject `
added a new boolean variable ` mAttached ` and modified the receiver unregistration logic to ensure that the receiver is only unregistered when it is attached
refactor multiple classes including AsyncFile , HttpClientRequest , HttpClientResponse , NetSocket , and ReadStream to improve code organization and maintainability
[ hotfix ] [ runtime ] add params to zadd call in pipelinebase . zadd ( )
[ ds - 3852 ] fix checkstyle issue in util / metadata / metadataimportit . java
renamed the test class from ` TestAsyncMessages ` to ` TestAsyncMessagesPerformance ` to clarify the purpose of the test class
added a method to retrieve an optional target node in VersionedTargetGraphBuilder and updated tests handling in VersionPropagatorBuilder to improve code clarity
updated epoch seconds comparison logic in TimeZoneProvider . java to use standardized constants to improve code readability and maintainability
updated the return statement in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java to improve
modified the initialization of the ' row ' and ' column ' variables in JSONParser . java to streamline the code by eliminating unnecessary
replaced ` JavaType . FullyQualified ` with ` Pattern ` for type matching in ` FindTypes . java ` and ` JavaType
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added functionality to retrieve local trailer data to enhance user experience by allowing
added removal of glyph information cache in CStrike . java and declared a native method in CStrikeDisposer . java to improve memory
fix : terminate all process instance when terminate end event
camel - 17462 : camel - xml - bind - avoid npe when use @ xmlrootelement annotation on type with @ namer
updated the endpoint in the test from " http : / / www . apereo . org / scottb . html " to "
add ` ` prdef ' ' option to reset all preference to default value
hbase - 25827 thriftmetrics should not be private ( # 2696 )
[ danfossairunit ] remove deprecate channel manual _ fan _ speed
use hamcrest assertion instead of junit in integrations / cdi / spring - boot - starter - hamcrest
removed redundant null check for expansionHelper before stopping it to streamline code by eliminating unnecessary null checks
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure proper handling of null values and ensure proper hash
server : set root disk size in custom vm detail if it ' s not already set
updated visibility logic in PredictionRowView to account for preference settings to improve user experience by enabling preferred apps in the drawer based on user
[ geos - 5849 ] bbox bbox validation should handle invalid crs
added validation methods for value , position , and Merkle tree depth in LibrustzcashParam . java to ensure values are non -
deprecate ithrowableentity in favor of ithrowableentity
added random number generation for the x and y properties in NodeDataImpl . java to ensure that the node ' s position accurately reflects the
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should
refactor JavacStep to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new release version
added a condition to check for the item type DEEP _ SHORTCUT to ensure proper handling of the DEEP _ SHORTCUT item
added a ` hashCode ` method to the ` TimeGranularitySpec ` class to ensure consistent hash code generation for different object types
changed access modifiers of classes and variables from private to protected in BooleanQuery and DisjunctionMaxQuery classes to allow subclasses to access these classes and
added a boolean flag ` useProxyResponseCode ` and modified proxy handling logic in ` HttpURLConnection ` to ensure proper handling of NTLM proxy
aarch64 : fix memory leak in aarch64move .
server : fix vm size calculation for ssvm and domr
added a null check for maxScore in JSONResponseWriter and included a query in TestDistributedSearch to ensure that score is included only when
updated audio recoder from 22050 to 44100 in AudioRecorderTest . java to improve audio recognition accuracy
adjusted the calculation of newOriginX by incorporating a scale factor to ensure correct positioning of the rocket figure based on
updated DruidQueryBasedInputFormat to check for null or empty data source and set default interval to ensure proper handling of empty data sources and
added a new field ` ORIGINAL _ TYPE ` to the ` CustomProperty ` class and updated the pattern in ` CustomPropertyTest `
added a static method ` create ` to create an ` IndexImpl ` instance using a ` Table ` and a ` Map ` to facil
simplified the return statement by removing unnecessary variable to improve code readability and maintainability
added index tracking and updated compatibility checks in SchemaCompatibility and TestSchemaCompatibility classes to ensure correct handling of reader and writer types during schema compatibility checks
mondrian : fix a bug in queryutils . getjoin ( … ) for entity path .
added synchronization to the spans list and modified return statements to ensure thread safety to avoid Iterator pitfalls in collections . synchronizedList
replaced ` List < Object > ` with ` List < ? > ` in multiple method signatures across multiple classes to enhance type flexibility and
updated exception handling in ViewContextImpl . java to use InvocationTargetException and added logging for authentication failures to improve error handling clarity and provide clearer
refactor OAuth2AccessTokenEntity to improve code readability to enhance maintainability and facilitate future updates
updated error messages from " System is starting and not ready for remote calls or shutting down in progress " to " The request is rejected , as
added new project files for iOS data and moe resources in GdxSetup . java to enable loading of Default - 1024w - 136
updated TestSearcherManager to use ConcurrentMergeScheduler for improved performance to optimize performance by using a concurrent merge mechanism
added a null and empty check for the session state in QTestUtil . java and modified list handling in GenericUDTFInline . java
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
added multiple calls to ` e . preventDefault ( ) ` in ` SpreadsheetKeyListenerW . java ` to prevent the event from being
added persistence and session factory services to HibernateBundleActivator and updated test cases in OsgiTestCase to enhance service management and ensure proper
fix incorrect timeout calculation in pool . getconnectiontimeout ( )
[ voice ] move component . xml into src / non - packaged - resources
updated file handling logic in Compat . java and FileOpener . java to improve file path management and ensure proper directory handling
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to allow the method to
check that the port number be not duplicate before use it in the cli
added a null mask feature to the WebSocketClient and updated the WebSocketConnectionD12 constructor to support dynamic mask generation based on null settings
refactor ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of returning a `
added node selection statistics tracking in NodeScheduler and related classes to improve tracking of preferred and non - preferred node selections during node selection
added a new class ` Person ` with a private name property and its getter and setter methods to facilitate the management and retrieval of
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to improve code readability and maintainability by avoiding
added clock functionality to PlaybackOverlayFragment to enhance user experience by providing a fade - in and fade - out animation to improve user experience by
remove unnecessary call to ` world . updatecomparatoroutputlevel ( pos , this ) ` in some place
modified the access modifier of the ` IMPL ` variable and improved exception handling in ` SegmentReader . java ` to enhance code clarity
updated Sudoku . java to run cell updates on the Event Dispatch Thread using SwingUtilities to ensure that cell updates are executed on the Event
replaced DefaultInetAddressAdapter with CollectionTypeAdapter in DefaultTypeAdapters . java and updated type hierarchy factory method in MiniGson .
added methods to handle double , long , boolean , and string values in the Series class and corresponding tests in DataFrameTest and LongSeriesTest to
updated the option for audio time stretch from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
updated boundary checks in GeoRelationUtils and modified bounds calculations in GeoUtils and TestGeoPointQuery to improve accuracy of geometric calculations and ensure
cloudstack - 5892 : fix npe in listvirtualmachines api by use getdiskofferingid ( )
added cleanup method to HazelcastTest for proper resource management to ensure proper resource cleanup after tests are executed
added tests for retrieving AES algorithms with no padding in BlockCipherTest . java to ensure compatibility with different cipher modes and provide clearer error messages
added filters for printing operations logs in QFileClient to improve logging clarity for operations in the client
improve javadoc for abstractbeandefinition . getparametertypes ( ) and aopproxywriter . visitparametertypes ( )
set the currentconnectionaddress if it be n ' t already set
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to simplify the code
replaced manual resource management with try - with - resources for ImageOutputStream to ensure proper resource management and avoid potential NullPointerExceptions
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct launching ` SearchActivity ` in multiple
removed the ' this ' keyword from the instantiation of ` schemaCrawlerOptions ` in ` SchemaCrawlerCommandLine . java ` and adjusted the ` toString
fix for http : / / issues . apache . org / activemq / browse / amq - 2237 - add osgi
added an ` @ Autowired ` field for the ` PersonRepository ` in the ` RepositoryIndexCreationIntegrationTests ` class to facil
updated the ` stop ` method signature from ` Exception ` to ` InterruptedException ` in ` UIServer . java ` and corrected a log message in
fix switch / cases indentation see blockcactus . java .
refactor mouse handling in ThemeSelector to use a separate handleMouse method to improve code readability and maintainability by encapsulating mouse event handling
[ java ] make abstractminmulticastflowcontrolfields extend abstractminmulticastflowcontrolrhspadding .
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance flexibility in editing text
throw an illegalargumentexception instead of a generic exception in stattokentannotator .
added a condition to check if the query is a distinct query and modified aggregation logic accordingly to ensure distinct queries are not processed in aggregation and having
[ gr - 13939 ] add a method to find the closest linkage by name and descriptor .
jmeter : fix checkstyle issue in util / jmeter / jsyntaxtextarea . java
added null check for children in PartitionPruner . java to prevent potential NullPointerException when children is null
added tokenPosition and currentPosition variables , and updated JSON parsing logic in MessagePackParser . java , along with corresponding tests in MessagePackParserTest
added locale management in AbstractSolrMorphlineTestBase to ensure consistent test execution by resetting the default locale after tests run
removed unnecessary conditional checks for ` DrawerActivity . translucent ` when calculating ` size ` in ` LauncherFragment . java ` to
added a new test class ` MetricsReporterTest ` for verifying metrics registration to ensure proper functionality of the ` MetricsReporter ` for various metric
camel - 17654 : camel - osgi : remove unused field in osgiserviceregistry
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for the Rectangle class
[ hotfix ] [ kafka ] fix flaky test in streamkafkaptest
refactor DSAParameterGenerator to simplify the handling of strength values and improve clarity to enhance code readability and maintainability by reducing
added configuration option to use FQDN of the AM machine when submitting work to LLAP to allow the AM machine to be used in the
make clientoutofmemoryhandlertest more reliable by wait for shutdown
added a new method ` getCmoObjectId ` in multiple shape classes and updated calls to use it to ensure consistent object ID retrieval across shape classes
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of the ` distinct
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
fix : remove bindextensionadapter and unbindextensionadapter method from managedkubernetesclient
updated subtitle text setting to use a new utility method for displaying episodes and media streams to improve code readability and maintainability by centralizing
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot . java and TestRSAProviderTokenManager .
do n ' t throw exception if summary generation fails
removed parameters from reset methods for intPool and bytePool in TermsHash . java to simplify the reset process by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
added a new ` WindowSessionDelegateU ` class and modified the API level check in ` ShadowWindowManagerGlobal . java ` to accommod
refactor URL handling logic in UrlHelper . java and add a test for non - standard port in UrlHelperTest . java to improve URL
added support for MSSQLDatabase ' s RESTRICT option in foreign key constraint generation to ensure proper handling of foreign key constraints for M
hbase - 13939 fix checkstyle violation in hbase - client
fix the emzuli pipe not work properly . also add a filter event handler .
simonstewart : make the ` ` shouldbeinjected ' ' log message configurable
replaced ` getProducedTableSchema ( ) ` with ` getTableSchema ( ) ` in ` HiveLookupTableSource . java ` and
clarify that player . setlistener ( ) be only call from the main thread .
updated schema name retrieval in SequenceSnapshotGenerator to use CatalogAndSchema to ensure compatibility with Liquibase ' s schema configuration
updated color scaling in SpriteBatch and SpriteCache classes and replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugSt
fixed - redissonconnection . tocompletablefuture ( ) . join ( ) and redissonconnection . tocompletablefuture ( ) .
added logic to add base core to the statisticYearCores list if it does not already exist to ensure that the statisticYearCores list only contains
renamed the method ` launchTask ` to ` launchTaskFromView ` and introduced a new method ` launchTaskFromView ` to improve
updated import statements and refactored MorfologikFilter to use specific dictionary resources and added a static method to load dictionary resources to
updated sorting options for community and critic ratings in GridFragment . java to ensure correct sorting order for community and critic ratings
added imports for ViewKt and ListRow , and modified visibility logic for ListRow items in CustomListRowPresenter to improve code organization and
refactored the switch statement in StressAction . java to use a try - finally block for resource cleanup to ensure proper resource management and
refactor HttpClient to improve code readability to enhance maintainability and ease of understanding
replaced calls to ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in ` CatalogAndSchema ` and ` CatalogComparator
[ thymeleaf ] enable jsr310 support for jackson in thymeleaf
replaced the import of ` org . apache . log4j . MDC ` with ` org . slf4j . MDC
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve code clarity
removed unnecessary line breaks in CoinbaseTransaction . java to improve code readability and maintainability
added a method ` getBuildTargetList ` in ` BuckConfig ` and a method to check for forced build targets in ` ProjectCommand `
added a call to System . gc ( ) in the initialization of the IdleStrategy to ensure proper resource management and prevent memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and ` FileList ` classes to utilize a more
removed redundant state change checks for autoscale , createMissingNodes , and self - loop checkboxes in ReportPanel . java to streamline the
[ hotfix ] [ test ] fix npe in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` to implement a recipe to remove calls to ` System . gc ( )
removed redundant calls to super ( ) in various exception classes to streamline exception handling by eliminating unnecessary super ( ) calls
added an override for the setUIID method in ScaleImageLabel to ensure that the UIID is correctly set based on the icon ' s
updated variable names from ` foundEntry ` to ` update ` for clarity to improve code readability and maintainability by using a more d
added support for " - cp " option alongside " - classpath " in addition to " - classpath " to enhance flexibility in handling
updated compiler option from options to compiler in avutil . java to ensure compatibility with the latest compiler features
removed unnecessary whitespace in StorageService . java to improve code readability and maintain consistency
updated Test7196045 . java file to improve test coverage and maintainability
updated the density and decay values in ShaderParametersLightShaft . java from 1.5 f to 1.0 f and 0.
added new properties ` withState ` and ` stateData ` to ` OidcConfiguration ` and modified ` OidcRedirectActionBuilder ` to
hhh - 14827 - fix ddl generation for non - nullable column in unique constraint
added federated sharing checks in UsersAndGroupsSearchProvider and modified folder check logic in EditShareFragment to ensure proper handling of federated share
added a method ` needsDocValues ` that always returns true in the ` TestBBoxStrategy ` class to ensure that documentation values are correctly documented
refactor BufferAlignmentAgent and BufferAlignmentInterceptor for improved clarity and error handling to enhance code readability and provide clearer error messages
added a new method ` intForEach ` in ` Int2ObjectHashMap ` to handle iteration over integer values to improve handling of null values
fix scoreboard data not be associate with the global mapstorage ( # 4806 )
changed return type of count methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository classes
refactor MManager . java to improve MTree snapshot creation logic to enhance clarity and maintainability of MTree snapshot creation logic
refactor dot product score calculation in VectorUtil and TestVectorUtil to improve accuracy and accuracy of dot product calculations
added IRREVERSIBLE _ THRESHOLD parameter and methods to manage the latest confirmed block number in the DynamicPropertiesStore to enhance security by allowing
replaced the ` setLocale ( ) ` method with a call to ` Systems . setLocale ( ) ` in ` GpsMainActivity ` and
added a check for database creation status in LauncherClings . java and modified LauncherProvider . java to track database creation status to ensure
updated formatting of assertions and exception messages in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability
refactor conditional logic for setting is64Bit based on datamodel to improve code readability and maintainability
added thread - safe check in TestIndexWriterDelete . java to ensure thread safety before proceeding with operations
changed the access modifier of the closeDatabase method from private to protected to restrict access to the method for better encapsulation
updated imports and method calls to use ` ModelCompat . asSdk ( ) ` instead of ` apiclient . model . dto . Base
added attribute handling for SVG elements in BatikSVGDrawer . java to ensure all SVG attributes are properly set in the document
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error handling for user configuration parsing errors
added a check for " WaitForResult " extra in CodenameOneActivity and modified waiting logic in AndroidImplementation and CodenameOneActivity
refactor ` HitQueue ` , ` SpanPositionQueue ` , and ` PriorityQueue ` to use a ` Supplier < T > `
added a private TextView for widget descriptions and modified visibility handling in WidgetCell . java to improve widget display functionality and ensure proper visibility based on widget
added a validation check for the maximum attribute count in the Attribute class to ensure that the registration count does not exceed the maximum allowed attribute count
move predicatestest to impl package
camel - 1770 : added case - insensitivity option to camel - default - header - filter - strategy
updated alignment logic in InlineLayout and Breaker classes to improve boundary handling to ensure proper alignment logic and prevent unbreakable strings
added nullability annotations and improved view inflation logic in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
refactor ` shouldInstrument ` method to include ` isFromAndroidSdk ` check for Android SDK instrumentation to simplify instrumentation logic by eliminating
added a condition to check if the association is an insert destination before the source in BrowserContentPane . java to ensure the correct number of columns
use ` / sys / fs / cgroup / memory . max ` instead of ` / sys / fs / cgroup / memory . limit _ in
replaced instances of ` CxxDeps . of ( ) ` with ` EMPTY _ INSTANCE ` in ` AbstractCxxDeps . java `
added a null check for the rule in JavaTestRule . java to ensure that a specific source under test is not among its dependencies to avoid
change minecraft version check to use mc _ version . tostring ( )
added a check to ensure atIndex is non - negative to ensure proper handling of negative index values
increased timeout duration from 100 milliseconds to 500 milliseconds in BuckBlockJUnit4ClassRunner and adjusted sleep duration from 1000 milliseconds to
refactor TaskOverlayGo to accept AssistContentRequester as a parameter to improve flexibility in handling assist content requests
replaced ` StringUtil . createReadableString ` with ` StringUtil . encode58Check ` in ` VoteWitnessProcessor . java ` to ensure proper
refactor DefaultMethodRegressionTests for improved readability to enhance maintainability and clarity of test cases
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the code
updated KafkaProducerException to KafkaException in KafkaOutboundAdapterParserTests to ensure compatibility with the latest Kafka library version
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and implemented unit tests for various exception types in FaultTolerantExceptionClassesTests to
[ hotfix ] [ runtime ] improve error message in configbuilder
added ` extraProperties ` parameter to multiple tuner classes in ` TableConfigTuner ` and ` TableConfigTunerUtils ` to support
added a check for in - progress instances in the PinotRealtimeSegmentsManager to ensure only unique instances are added to the list to avoid
added a check to return null if the touchable is disabled to ensure proper handling of disabled touch scenarios
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw a retryable exception if a cache config have not be create yet
updated module installation logic in JSweetTranspiler . java and added a method in ProcessUtil . java to check node package installation to improve
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enable proper management of beans and destroying components in the application
updated conditional check from ' if ( settings . inAppBrowser ) ' to ' if ( false ) ' in LongClickableSpan . java
refactor equality checks in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` " 0 " .
updated type checking logic in mmm Types . java and added new classes T6558559a and T6558559
add some more information to the worldeditlistener log about the current and current position .
camel - kafka - fix the issue that camel - kafka do n ' t shutdown the kafka consumer properly .
added a default method to the examples ( ) method in the Schema class to provide a default implementation for the method
refactor thread termination logic in AgentRunner . java to improve clarity and correctness in handling timeout scenarios
removed the time column from the dimensions in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure that the dataset ' s time column is removed
simplified the condition for checking shards in FacetComponent . java to improve code readability and maintainability
replaced the use of LinkerProvider with CxxPlatforms . getParseTimeDeps in RustBinaryDescription and RustLibraryDescription
added private String field ' name ' and its getter and setter methods in multiple authentication properties classes to improve clarity and consistency in property management
updated CFGPrinterObserver and IdealGraphPrinterDumpHandler to improve error handling and logging to enhance debugging capabilities and provide clearer error messages during
refactor code to use a local variable for ScanRanges and introduce small scan threshold configuration to improve code readability and maintainability by central
added routeId to the retry filter output in RetryGatewayFilterFactory . java to enhance debugging by providing more context about the retry configuration
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
replaced the ` onOverviewShown ` method implementation with ` showForOverviewIfNeeded ` and added delay handling in ` DiscoveryBounce ` to
refactor null and size checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and add a test for
updated the ` publish ` method call to use ` updateLastState ` instead of ` true ` to ensure that the last state is updated when
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper handling of string list IDs in SQL queries
added a null element to the exp collection in SpliteratorCollisions . java to ensure proper handling of null values in the collection
danielwagnerhall : add textcaseinsensitivity and exacttextcaseinsensitive to condition
replaced ' do ' with ' while ' in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
# 1186 - enh : add queryengine . forwardonlyfetchsize ( ) ( # 1186 )
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid logging errors when a channel is already closed to improve error handling and avoid
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
updated the initialization of ` mWindowRadius ` to use ` initialWindowRadius ` based on ` supportsRoundedCornersOnWindows ` to
refactor the background handling in DesktopTaskView to use a view instead of a ShapeDrawable to improve code clarity and maintainability by
refactor UpstreamCheckService instantiation in UpstreamCheckServiceTest . java to ensure proper initialization of the upstreamCheckService instance
replaced warning log statements with debug log statements in AbstractSession and AbstractSessionManager classes to improve logging clarity and maintainability by reducing
replaced error logging and exception throwing with a return statement in ZooKeeperHiveLockManager . java to streamline the code by eliminating
[ hotfix ] [ runtime ] fix checkstyle violation in test
modified the mipmap generation logic in FileTextureArrayData . java to check for custom data presence before generating a mipmap to ensure
updated string literals in assertions from quotes to single quotes in DefaultMaskingFormatterTest . java to ensure consistency in string representation across tests
added selectable flag and methods to manage selection state in the List class to enhance user interaction by preventing touch events when not selectable
removed a check for empty field vector values in LlapArrowBatchRecordReader to simplify the logic for handling empty vector cases
added file separator handling and improved logging in PolicyContext to enhance code clarity and debugging during policy evaluation
replaced ` HashSet ` with ` ArrayList ` for ` flatQueries ` and ` expandQueries ` in ` FieldQuery . java ` to improve
refactor TLSRestrictions class for improved security to enhance security and maintainability of the code
[ flink - 20619 ] [ kafka ] fix npe on shutdown when producer be n ' t close
updated the ` assertNodeStateProvider ` method to include a ` ignorableNodeValues ` parameter and modified the copy of ` oneVals `
added functionality to delete a lock file if it exists in RocksdbMavenPomCache . java to ensure that the lock file is
updated the way the standalone server factory is instantiated in MiniZooKeeperCluster . java and modified the assertion in TestHQuorumPeer . java to
refactored the response retrieval logic in RestClient . java to improve error handling and logging to enhance code clarity and maintainability by central
[ hotfix ] [ runtime ] fix bug in ingestionutils where segment tar uri be not convert to string array
updated the password used in the loginStudent method from TEST _ STUDENT2 _ ACCOUNT to TEST _ STUDENT1 _ PASSWORD
added null checks for item ID in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions during item deletion
reduced the number of strings from 500 to 100 in TestSpecialOperations . java to improve performance by reducing the number of string operations
replaced the custom ByteArrayInStream implementation with a default byte array initialization in WKBAttributeIO . java to simplify the code by elimin
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a check to return early if a transition is a direct substate to ensure proper handling of substates in the state machine
added type checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding unit tests in MultimapTest . java to ensure correct
added JoinOperation interface to the PostJoinOperation class to support join operations in the application
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to verify PostgreSQL functionality to ensure that
[ amq - 5035 ] fix intermittent failure of test amq5035test
refactor AvaticaDatabaseMetaData class to improve code organization to enhance maintainability and readability of the code
updated MongoDbConnectionPoolProperties to use ` @ DurationCapable ` for ` lifeTime ` , ` idleTime ` , and ` max
updated the method for creating audio media format to use the media service ' s media factory to ensure compatibility with the latest media service implementation
refactor methods in FacetProcessor to return boolean values indicating applied filters to improve filter processing logic and ensure proper handling of applied filters
added a timeout handler with an enabled flag in ShuffleHandler . java to enable or disable timeout handling based on user - defined settings
refactor mQuickStepStartingRotation initialization to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code readability
camel - 14884 : camel - saxon - optimize the log and deprecate xquerybuilder . evaluateasbytes ( ) .
[ java ] fix javadoc warning in java . awt . data
[ net . sourceforge . pmd . cpd ] added test case for escape back slash
added a check for the presence of the ' atlas ' property in the map and threw an exception if it is missing to ensure that the map
camel - 17443 : camel - core - remove property placeholder support from camel - core .
added a call to close the database in BlockchainTest . java and removed unnecessary receive listeners in KafkaTest . java to ensure proper resource management
refactor code to use a new method ` getLines ` for extracting lines from a literal to improve code readability and maintainability by redu
updated import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code readability and maintainability
replaced ` ImmutableList . Builder ` with ` ImmutableList ` for argument handling in ` SQLBindings ` and ` AbstractSQLClause ` classes to improve
added a condition to check if the Java VM name contains " OpenJDK " in addition to existing Java vendor checks to ensure compatibility with Open
added keepAlive ( true ) to the base URL configuration in ReactorClient . java to ensure proper connection management during reactor communication
replaced string literals with constants from ShaderProgram constants in MD5Renderer . java and ObjLoader . java to improve code readability and
camel - 16950 : camel - jbang - add support for add a property component to the camel - spring - boot context .
updated null check for accountCapsule in UnfreezeBalanceActuator . java to ensure robustness by avoiding potential null pointer exceptions
update version number to 3.8 . 1 . alpha so that we can release 3.8 . 1 .
replaced instances of ` t ` with ` t . unannotatedType ( ) ` in multiple locations to ensure consistent handling of unannot
updated assertions and configuration settings in StorageGroupProcessorTest . java to ensure proper handling of sequence tsFileSize during processing
updated Jetty - related classes to use the new package structure and introduced a new method to retrieve all environments to ensure compatibility with the latest J
added a parameter ` waitbeforestart ` with a value of 2500 in ` FFMpegVideo . java ` to control the wait time
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related methods to simplify the code by eliminating
updated imports and refactored test methods in AccessorsTest . java for improved clarity and consistency to enhance code readability and maintain
lirgenerator : provide access to the framemap in the generated lir .
replaced ` @ Ignore ` with ` @ ConditionalIgnore ` in ` DynamoDbTicketRegistryTests ` and ` BaseAuthenticationRequestRisk
fix boat not render correctly in water
modified the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
simplified the conditional check for experimental options by removing the allowExperimentalOptions ( ) method to improve code readability and maintainability
added two overloaded methods ` then ` and ` then ` to the ` BDDAssertions ` class to enhance assertion methods for better cl
renamed variable ` hp ` to ` hostField ` and updated related logic in ` ForwardedRequestCustomizer . java ` to improve code
updated logging level from debug to warn for missing Kubernetes config files and added a warning for not desired Kubernetes configuration to improve user experience by providing clear
added functionality to handle file uploads in UploadListActivity to improve user experience by ensuring OCFile is properly updated during upload process
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to use it instead of ` ProviderInstaller ` to improve the
replaced instances of ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests `
updated the SelectFromDatabaseChangeLogStatement to use a computed column configuration instead of individual fields to ensure that the database change log data is computed
hhh - 15827 - fix test failure on postgresql 8.1
fix partition count calculation when data member size be 0
added scheduler state checks and improved error handling in ExecutionSchedulerManager and ExecutionSchedulerImpl classes to ensure proper scheduling behavior and provide clearer error
simplified the instantiation of InlineBox by removing unnecessary toString ( ) method call to improve code readability and maintainability
[ hotfix ] fix checkstyle violation in statisticmap
updated the return value of getStagedRectSlideEnd ( ) from 383 to 500 to improve the responsiveness of the UI by allowing
replaced hardcoded strings with localized bundle keys in WaveInfoDialog and PlacementFragment to improve localization support and maintain consistency across the application
updated condition in BukkitMain . java to check for owned plot paths to ensure correct handling of road indicators in the plot area
added a test for setting touch exploration enabled in ShadowAccessibilityManagerTest and refactored listener handling in ShadowAccessibilityManager to ensure
pdfbox - 5328 : fix indexoutofboundsexception in cmapsubtablet
replaced usage of getpropertyasstring ( testelement . name ) with setname ( )
replaced multiple instances of creating NPOIFSFileSystem with a single method call to POIFSFileSystem . create to streamline the code
added import statements for PlotArea and modified return logic in Move . java to improve plot area retrieval logic to enhance code robustness by ensuring correct
updated version regex pattern in TestWebHCatE2e . java to include additional characters to ensure compatibility with new versioning requirements
changed the condition from ` count < 0 ` to ` count < 1 ` in ` Filters . java ` to ensure that ` count ` is
[ hotfix ] [ kafka ] fix clientid not be set if consumer thread > 1
updated import statements and added error handling in JavacCompiler . java to improve code clarity and provide clearer error messages when javac
ggb - 1343 repaint the view when the option be close ( not only when the option be visible )
camel - spring - batch : fix checkstyle violation in camel - spring
added a method ` isAnimationFinished ` to check if an animation is finished to provide a mechanism to determine if an animation is finished based on
reorganized import statements in LoginMockMvcTests . java and added a new test method for custom fav icon with line breaks to improve code
added a null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified the refreshing text in ` HomeFragment
ggb - 1342 fix for space character in text field .
refactor ObjectHashSet to improve code readability to enhance maintainability and ease of understanding
refactor equality checks in DataUtilities . java to simplify null checks and improve code clarity to enhance readability and maintainability of the code
fix nbt data comparison , allow for deletion of enchanted books , mc - 12770
[ java ] add test for async resource in microprofile
rename ` TARGET _ FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP _ SUFFIX ` and
added error handling and improved logging for email sending failures in MailService . java to enhance error reporting and provide insights into email sending failures
replaced ` resetTaskItemView ( ) ` method with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` Task
added unit tests for partition retrieval with multiple batch sizes in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct behavior of partition
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
replaced ArrayList with List in OCFile . java and OCFileListAdapter . java to improve code readability and maintainability by using
updated the index used in the removeViewInLayout method from 1 to 2 to correct the positioning of the bubble bar view to ensure the
removed redundant " org . eclipse . jetty . websocket . util . server . internal " and " org . eclipse . jetty
updated the ` false ` parameter in the ` S3Request ` constructor from ` true ` to ` false ` to ensure that the ` expires
fix jfxradiobutton animation when no timeline be available
updated the condition for parsing DeweyNumber and added an exception for zero or greater splits to ensure proper handling of DeweyNumber parsing
refactor category set string handling in MwVolleyApi . java to improve readability and maintainability of the code
updated assertions in WebSocketClientTest to use " Invalid close code 1111 " instead of " Invalid close control status code 1111 " to ensure
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader to ensure robustness by preventing NullPointerExceptions
hhh - 14827 - fix npe in persistentattributetransformer when a @ mappedsuperclass be not present
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to validate the ` PorterStemFilter ` functionality to ensure that the ` P
modified the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and added a conditional check for successful writes
updated package name from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
fix a concurrentmodificationexception in chatwindowmanager
removed redundant calls to Sys . touch ( ) across multiple Java files to streamline code by eliminating unnecessary calls to Sys . touch (
updated the ` untrackedFiles ` method in ` HgCmdLineInterface ` , ` NoOpCmdLineInterface ` , and ` H
camel - 15936 : camel - netty - netty - use hashedwheeltimer for read timeout handler . thanks to jboss
made ` direction ` , ` color ` , and ` range ` final in ` DirectionalLight ` , ` PointLight ` , and
replaced target . getWidth ( ) and target . getHeight ( ) with variable w and h in X11GraphicsConfig . java and WGL
added a ` toString ( ) ` method to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a way to
added a new class AnnoFilterTreeSet and methods to check for inner classes and annotations in ClassFinder . java to enhance annotation filtering functionality
modified the overflow check for ` newLength ` in ` BytesColumnVector . java ` to ensure proper handling of integer overflow to avoid potential runtime
replaced assertEquals with assertTrueEventually in WriteBehindMapStoreWithEvictionsTest . java to improve test reliability by
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI
ggb - 1348 add equality check to polyfunction . expandtopolyfunction ( )
added a null check for the table before retrieving the column class to avoid potential NullPointerException when accessing the column class
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException when loading classes
refactor ` DistBuildConfig ` to replace ` ConfigPathGetter ` with ` BuckConfig ` and introduce a new method to retrieve
do n ' t show export warning when use double entry
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a broke due to
changed the return type of the doJoin method from void to boolean and added conditional checks in multiple classes to ensure proper handling of join operations and
added a method ` getAutodeps ( ) ` to the ` JavaLibraryDescription ` class to provide access to the ` getAutode
updated intent flags to include FLAG _ ACTIVITY _ NEW _ TASK in LauncherTimelineCursorAdapter . java to ensure proper task management during
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide a way to check pagination order
updated assertions in RepositoryConventionPluginTests to reflect the correct index of repositories to ensure correct retrieval of the correct repository URLs
http : / / issues . apache . org / jira / browse / amq - 4892 - introduce a new task to
improve error message when uri be invalid
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array handling in CacheKey and refactored equality checks in CacheKeyTest to improve object comparison logic and enhance code readability
updated file type detector implementations across various filesystem - related classes to ensure compatibility with the latest file system features
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
updated ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to use ` VirtualSensorCallback ` and ` VirtualSensorDirectChannel
added a condition to check if the context is not removed from the session in ` HttpSessionSecurityContextRepository ` to ensure that the session is not removed
replaced the variable name ` lch ` with ` loopback ` and updated the logic for retrieving the loopback address to improve clarity and functionality
replaced ` BUF _ SIZE ` with ` DEFAULT _ BUF _ SIZE ` for consistency and clarity to improve code readability and
updated validation logic in KeyInfoReferenceResolver and improved exception handling in TransformXPath to enhance security and clarity in error reporting during XML processing
added a boolean flag to track if the icon change listener is installed and modified its action listener removal logic to ensure proper handling of icon change listeners
added Russian language support in the Language . java file to support Russian - related functionality in the application
hhh - 14827 fix duration type in sqm to sqlastconverter
[ gr - 13434 ] disable frame state verification in substrategraphkit .
added system property reset functionality in RobolectricTestRunnerTest and a tearDown method in TestUtil to ensure proper cleanup of system
added ` org . slf4j . LoggerFactory ` to ` ViewClassLoader ` and updated tests in ` ViewClassLoaderTest ` to ensure
added a check for " jar " packaging in ChangePackaging . java and created a test for it in ChangePackagingTest . java
updated file download method to use ` withExtension ( " txt " ) ` instead of ` download ( ) ` in ` FileDownloadViaHttp
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the command buffer
replaced default units with preferred units in the JogService , Settings , and JogStatusLineService classes to improve clarity and functionality
updated the expected date format in DatePatternConverterTest to use UTC timezone to ensure the expected date reflects the correct time zone of the event
removed unnecessary whitespace in Terminator . java to improve code readability and maintain consistency
updated error messages for file URI validation and added error handling for HDFS namenode host resolution to improve error clarity and provide clearer feedback
change show tracking notification to run in one minute
updated reconnect attempts in FtpReconnectAttemptServerStoppedIT and modified connection counting logic in FtpEmbeddedService to improve test reliability and ensure
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` class to improve performance by reducing the number
added ` ignore ( Throwable ignored ) ` methods to multiple log - related classes to ensure proper logging behavior when the logger is ignored
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when accessing runningTaskView
removed unnecessary type casting for item and contents in BukkitWorld . java to simplify code and improve readability by eliminating unnecessary type
removed the call to GraphicsUtil . cleanImage ( img ) in PanelManager . java to streamline image handling by eliminating unnecessary garbage
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing map and file system operations to facilitate the use of MMap
added null check for ` ic ` before creating ` cleanUpColor ` to avoid potential NullPointerException when ` ic ` is ` null `
updated the assertion in QueryEqualityTest to use field1 _ s instead of field1 to ensure accurate comparison of graphTerms with the correct field
updated ExtendedOperatingSystemMXBeanImpl . java file to improve performance and maintainability of the code
added functionality to install left commands in the SideMenuBar class to improve user experience by ensuring all commands are installed in the title area
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity ` to
added SybaseDatabase to the condition check in DropPrimaryKeyGenerator . java to support additional database types in the primary key generation process
refactor Client class to improve code organization to enhance maintainability and readability of the code
[ java ] wait for leadership to be ready before update lastrecordingposition .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement in NearCachedClientMapProxy . java to prevent potential null pointer exceptions during method execution
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a shutdownHttpServer method to handle server startup exceptions to ensure graceful shutdown of the server and handle potential exceptions gracefully
camel - 14836 - camel - aws2 - s3 : fix the build error of camel - aws2s3
[ hotfix ] [ runtime ] remove unused taskmanagermetricshandler . parameter _ tm _ id
db upgrade : drop key that do n ' t exist in 2227 version of the db
added a new test class ` TestThriftCLIServiceSecurity ` and modified the password handling in ` TOpenSessionReq ` to ensure that password
added maxEnergyLimit variable and updated its assignment based on transaction ' s fee limit to ensure accurate energy limit calculations based on transaction ' s
added a ` maxInMemorySize ` property and its getter / setter in ` HttpClientProperties ` , and modified the ` webClientPlugin `
refactor caching logic in Cache . java to improve performance and maintainability of the code
added two new test files , RunCucumberTest . java , StepDefinitions . java , and RunCucumberTest . java to
added error handling for parsing double values in TypeJsonUtils and corresponding test cases in TestArrayOperators to ensure robust parsing of double values and validate
removed duplicate byte array entries for " 656469746564 " and " 808080656469746564 " from U
added checks for parameter sets before appending parameters in mmm Params . java and implemented a new method isParamSet in RestInvocationHandlerTest .
camel - 14884 : circuit breaker load balance should not allow to configure more than one output
updated assertions in TestIndexWriterExceptions . java to use a more concise syntax to improve readability and maintainability of the test code
replaced calls to ` toString ( ) ` with ` Sha1HashCode ` for resource APK , primary Dex , and string assets
removed multiple static methods for enum value , integer , and long value types in AsmRuntime . java to streamline code by eliminating
[ 1.19 . x ] add miss biome tag for mangrove swamp , deeparser and deepar
fix for http : / / code . google . com / p / papplet / issues / detail ? id = 235 , use
changed access modifiers of several fields and methods in BaseTableUpsertMetadataManager from private to protected and refactored preloadSegments method to improve encaps
replaced instances of " \ u0646 \ u0648 \ u0631 " with " \ u0623 \ u
replaced calls to ` getImage ( ) . equals ( varName ) ` with ` hasImageEqualTo ( varName ) ` in ` AbstractSun
camel - 18443 : camel - jbang - add -- repos option to run command
added handling for NaN scores in CrawlDbReader . java to improve robustness by preventing invalid score values from being processed
added a cleanup method that deletes temporary files in OnStartupTriggeringPolicyTest . java to ensure that temporary files are cleaned up after tests run
replaced requestFocus ( ) with requestFocusInWindow ( ) in FilterConditionEditor . java and modified focus handling in FindAction . java
[ hotfix ] [ checkpoint ] make checkpointscleaner implement autocloseableasync
added a new file ` XPathWhiteSpaceTest . java ` to test XML schema validation to ensure proper handling of whitespace in XML schemas
do n ' t create trie log if it do n ' t exist
[ hotfix ] [ runtime ] fix checkstyle violation in fillednewarrayinstruction
added a timeout of 60 seconds to multiple ` @ Test ` annotations in ` SimpleNetworkTest . java ` to improve test reliability by allowing
updated the method to check if the parent path ends with a slash instead of substring to ensure correct handling of file paths with trailing slashes
added a print statement to indicate the failure of loading the skin file to improve error handling by providing clearer feedback during skin loading failures
added markDirty ( ) and isValid ( ) methods to LgoGroupedLevel2Update and modified accumulator filtering in LgoLevel2BatchSubscription
added a new constant ` UNDEFINED ` in the ` Result ` class and updated the return statement in ` TestStep ` to use this constant to
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of NullPointerExceptions during transaction registration
refactor uploadjobmultipartoperation to use operationservice . getfactoryid ( )
improve error message when recover data at a specific position
do n ' t take into account the node ' s child count when compute summary level
removed the ` volatile ` modifier from the ` pos ` variable and added a ` sizeMask ` variable in ` DataOutput2 . java `
added @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java files to mark tests as ignored
fix potential indexoutofboundsexception in storageproxy
[ hotfix ] fix checkstyle violation in filemanager
added new transform function types " plus " , " minus " , " times " , " ceil " , and " log " to TransformFunction
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` and ` Element ` classes to provide method
updated RFC version from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compatibility with the latest RFC standards
updated version number from 2.17 . 3 to 2.17 . 4 and changed type casting from int to Character in SearchAnnotationVisitor .
replaced LruCache with a loop for restoring selected items in ListActivity and replaced HashMap with SparseBooleanArray in NoteAdapter to improve
refactor conditional statements in DirectUpdateHandler2 . java for clarity to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation to ensure correct file path formatting and avoid potential issues with relative paths
updated the instantiation of ` PreviewPositionHelper ` to accept a ` Context ` parameter and modified the clipping insets logic based on multi - window mode
[ java ] remove redundant check for leadershiptermid in election . newleadershipterm
refactor test assertions in PMDCoverageTest to use StandardErrorStreamLog for better clarity and accuracy to improve test reliability by
modified the skip logic in ByteArrayInputStream and added a new Skip class with tests for skipping bytes to improve the accuracy of skipped bytes in input streams and
rearranged conditional checks for promptUpdate in UpdaterTask . java to improve code readability and maintainability
peer : do n ' t download block if there be too many header .
add rt . jar to the STANDARD _ LIBRARIES list in modclassloader . java
do n ' t try to send a framed hello message if the local node be not ready
refactor GranuleDescriptor and related classes to use constants from the Utils class for property retrieval to improve code readability and maintainability by
added a check for committed status before sending an error response in HttpChannel . java to ensure that errors are only sent when the response is already
refactor conditional checks in HttpSession . java for clarity to improve readability and maintainability of the code
updated fade - out behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorialController to enhance
add name to the prefab if it do n ' t exist
updated external group settings in LdapMockMvcTests . java to include " internal . superuser " and " internal . superuser " to ensure
updated thirtyDays initialization in FreezeBalanceActuator . java and added validation for transfer amount in TransferActuator . java to ensure proper
updated lastIndexOf method to use File . separator instead of a hardcoded ' / ' to ensure compatibility with different file systems
ggb - 1348 fix problem with keyboard button not work in some case .
updated GpsMainActivity to retrieve session description instead of an empty string and modified AnnotationViewFragment to use EventBus for command events to improve
updated JsoupNonVisualRegressionTest to handle cases with different number of pages and save a PDF file to improve test reliability by
[ jme3 ] deprecate androidbufferallocator in favor of androidnativebufferallocator
added checks for flags that start with " ! " in Main , PrimaryItem , and Util classes to handle flags that start with " ! "
added a comment to clarify that we do n ' t do anything with the result set
refactor code to use a constant for ITEM _ USE _ GRANT _ SELECT _ REWARD instead of a string comparison to improve code read
added a new ` PriorityElement ` class with a ` toString ` method to ` PriorityElement ` and updated assertions in ` QueuePriorityTest `
cloudstack - 4892 : fix the unit test error of affinityapunittest
added a null check for the main command and modified the argument check to include the HELP option to ensure proper handling of command - line options
increased LightOutputStream size from 5 to 4 in multiple classes to optimize memory usage for better performance
changed the access modifier of the Scanned class from static to public to allow access to the Scanned class from other packages
added a new boolean variable ` showBlank ` and updated conditional checks in ` ClassWriter . java ` , while creating a new class ` T80
removed the assertion for the length of a string in the Person class to streamline the code by eliminating unnecessary assertions
added null check for file extension in VirtualFile . java to prevent potential NullPointerException when accessing the file extension
replaced return statement with continue statement in ContactRightButtonMenu . java to improve code clarity and control flow
[ hotfix ] [ runtime ] fix checkstyle violation in simpleslot and slotsharinggroupassignment
simplified the screen index calculation in InstallShortcutReceiver . java to improve code readability and maintainability
refactor the binding logic in PlainSocketImpl to use a delegate instance for improved clarity to enhance code readability and maintainability by
added functionality to manage and clear removed items in the BookmarkListRootFragment and MediaDetailPagerFragment to improve the management of removed items in
updated log message to reflect the element ' s in - view center point instead of the center of element to clarify the accuracy of offsets
added a new file ` bug4865918 . java ` implementing a GUI test for a scrollbar to verify that the scrollbar block increment is
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code by using a more
replaced specific imports with a wildcard import and added a new case for group triggers in QuestCommand . java to improve code readability and
fix crash when try to select account without file manager
added Lombok ' s @ ToString annotation and imported Lombok ' s @ ToString in PartitionChangeEvent and TbApplicationEvent classes to ensure
refactored CloudService to use a constant CONFIG _ URI in the ConfigurableService annotation to improve code readability and maintainability by centralizing
removed viewport component and JScrollPane settings from BrowserPanel to streamline the UI by eliminating unnecessary components
replaced KEYCODE _ DEL with KEYCODE _ FORWARD _ DEL and added KEY _ BACK case handling in Lwjgl
added a conditional check for indexing MIME type parts based on configuration to ensure proper handling of content type parts based on configuration settings
added a regex pattern for matching author comments in JSDoc . java to improve code readability and maintainability by ensuring only valid author comments are
[ flink - 20627 ] [ metric ] rename delta _ total _ dbs and delta _ total _ tables to create _ total _
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for improved table retrieval to enhance
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` for query parameters to enhance error handling
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al
updated the supported condition in WebAudioWrapper to exclude Firefox devices to ensure compatibility with both IE and Firefox
added a method to append an interceptor in GrpcServerBuilder and removed the private constructor in InterceptorConstants to enhance the server builder functionality by allowing
added a default charset option to the auto _ increment column in the database schema and updated related test cases to ensure compatibility with the new default charset
removed unnecessary whitespace in ` WriterRecordBatch . java ` and modified conditional logic in ` StreamingAggTemplate . java ` to improve code readability
[ hotfix ] fix typo in executiongraph
added a boolean flag ` hasFrom ` and modified related methods in ` Delete ` , ` DeleteDeParser ` , and ` DeleteTest `
refactor ` isSuccess ` method to ` isMultiStatus ` and update related logic in ` SynchronizeFolderOperation . java ` to improve clarity
refactor applicable test handling in RecipeScheduler to use a new method applicableListTests to improve code readability and maintainability by centralizing
updated regex pattern in LogAnalyser . java to include a colon in the log line to improve clarity and consistency in log output formatting
( chore ) camel - google - cloud : enable integration test by default
fixed - rsearch . value ( ) method should use ismaxexclusive ( ) instead of isminexclusive ( )
refactor license selection logic in CCLicenseStep . java to improve type safety and clarity to enhance code readability and maintainability by
mondrian : fix npe when there be no globalid
refactor equality check in OptionalAssert to use objects . getComparisonStrategy ( ) . areEqual ( ) to improve code readability and maintain
updated memory management in NoNewLineParagraphCssApplier , ParagraphCssApplier , and ParaGraph classes to utilize a boolean variable for
added a new file TestArrayCopyToFromObject . java that tests array copy behavior to ensure that ArrayStoreException is correctly thrown when copying an array
replaced instances of ` Escaper . escapeAsBashString ` with ` Escaper . escapeAsPythonString ` in multiple
fix for http : / / issues . apache . org / activemq / browse / amq - 1188 - ajp connector
craftinghelper . findfiles ( modcontainer , path , boolean , boolean ) now support visitallfiles flag .
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable to address issue HIVE -
refactor request handling in TestInternalInputBuffer to check for null exceptions before asserting response status code to improve robustness by avoiding null
refactor autoloadCall method to include a locking mechanism for class loading to improve thread safety by avoiding duplicate autoload calls
added server version comparison logic in CustomPlaybackOverlayFragment and updated user preferences handling in PlaybackController to ensure compatibility with server versions and enhance user
replaced instances of ` BasicKrb5Test ` and ` OneKDC ` with ` OneKDC ` and modified principal keys to
updated Jsr250Voter to return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the jsr250AttributeFound flag
updated import statements in MP4Parser . java for improved clarity and organization to enhance maintainability and readability of the code
added a new constant for the HS2 proxy user and modified the session parameter handling to ensure the session parameters include the user ' s username
camel - 14827 : camel - hdfs - compress should use snappy codec for bzip2 and snappy
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure thread safety during test execution
fix xssfcell . setcelltype ( cell . cELL _ type _ blank ) and xssfsheet . removecell (
updated glyph positioning logic in GlyphLayout . java and modified text in BitmapFontTest . java to improve font rendering accuracy and clarity in
updated file path handling and refactored image loading logic in Fabric8IstioIT . java to improve code clarity and maintainability
replaced ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . getPlaybackManager ( ) . report
use bufferedinputstream instead of fileinputstream to avoid memory leak
[ hz - 3892 ] fix maploader hit eviction on initial load .
replace bitwise operations with bitwise operations for LENGTH _ BIT and ERROR _ BIT in ResponseFlag . java to improve code readability and maintainability
fix : add read policy to the list of default policy
added a ConcurrentHashMap to cache CompositeFont instances and modified font lookup logic to improve thread safety and performance in font management
set prefHeight to 0 instead of using getHeight ( ) in Tree . java to ensure consistent height calculation for node elements
( chore ) camel - dmn : fix validation of dmn feel
removed unused imports and improved generic type usage in multiple Java files to enhance code clarity and maintainability by ensuring type safety
changed the access modifier of the ` finishRunningRecentsAnimation ` method from private to public in ` TaskAnimationManager . java ` and modified
added null checks for node ID and type in ElementFactoryImpl and ImportContainerImpl , and modified node value parsing in ImporterGDF to
[ beam - 10663 ] fix npe in fnapicontrolclient and beamfnstategrpcclientcache
[ hotfix ] [ runtime ] fix npe in binfiles when a flowfile be large than bin limit
refactor core retrieval logic in Teams . java to use a loop for finding the closest core to improve code readability and maintainability by
added a check to skip copying content - length headers in RestTemplateCopyHeaderFilter to ensure proper handling of content - length headers in requests
updated Java2TypeScriptTranslator to handle string literals and added assertions in SyntaxTests to ensure correct formatting of literal values in TypeScript translation
updated filter calculations and sample sizes in multiple classes to improve clarity and maintainability of the code
hbase - 17454 add an option to canary to turn off all region on a regionserver
[ hotfix ] [ test ] remove unused nodemodule from cassandraconnectorfactory
reset the order index cursor position in KahaDBStore . java to ensure consistent cursor behavior during order processing
added minimum size constraints to CallDialog and adjusted frame dimensions in OneToOneCallPanel to ensure proper resizing of the call panel based on the
fix blockfalling state not be save during world gen . close # 2890
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static imports and simplify the setup and teardown methods to improve code readability and
added null check and removal logic for KerberosPrincipalEntity in KerberosPrincipalDAO . java and removed unused imports in KerberosPrincipalEntity .
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method call by eliminating unnecessary parameters
[ java ] do n ' t swallow exception in aprendpoint . poll ( ) .
updated error message in AndroidGradleBuilder to reference " Monetization setup " section instead of " Service & Apis " to clar
updated the creation of ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and removed unnecessary
[ drools - 5852 ] fix relative package name resolution for executable model ( # 4396 )
added an assumption to skip the test based on the runtime version to ensure compatibility with Java 19 and improve test reliability
removed unused context parameter from assignTargetsForSplitScreen method and improved target assignment logic to streamline target assignment logic and enhance code clarity
refactor LeaderLatch class to improve code readability to enhance maintainability and ease of understanding
added methods to initialize zk - SNARK parameters in SolidityNodeHttpApiService to enable dynamic configuration of zk - SNARK parameters for
replaced the ` setDepthInBlocks ( ) ` method with a new ` getDepthFuture ( ) ` method in ` TransactionConfidence `
added a createMediaRecorder method to CodenameOneImplementation and renamed longtitude to longitude in Location and MapComponent classes to improve cl
set default value of platformName to " ios " to ensure compatibility with iOS devices
doc : update sample code to set total timeout , add api client header test
added curly braces to conditional statements in Graphics2D . java to improve code readability and maintainability
refactor CreateVisibleSignature class for improved readability to enhance maintainability and clarity of the code
added a try - catch block around the outgoingFrame method call in AbstractExtension . java to handle potential exceptions during frame processing
replaced a try - catch block with a privileged action for obtaining the caller class loader to improve security by utilizing privileged actions
added logic to reset child categories to their parent when they are not equal to the current category to ensure that all child categories are removed from the
updated contrib manager dialog to use a consistent title based on the contrib type to improve clarity and maintainability of contrib manager dialogs
added a new BigDecimal field ` vwap ` to the ` Ticker ` class and updated related methods to enhance the ` Ticker `
added a noWidgets view and updated bottom inset handling in SearchAndRecommendationsScrollController and WidgetsFullSheet classes to improve widget
add rendergraphapi to make it easy to add a tintnode to the render graph .
added primary color setting to NCFirebaseMessagingService to ensure the messaging service uses the correct primary color for the messaging service
refactor ShadowUsbManagerTest to improve code organization to enhance maintainability and readability of the test code
updated calculations in ` AbstractDifferenceRecommenderEvaluator ` and ` AverageAbsoluteDifferenceRecommenderEvaluator ` to use ` evaluationPercentage ` instead of `
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration updates correctly
updated width and height calculations in AndroidGraphics to ensure minimum values of 1 to prevent potential errors with invalid bounds
pdfbox - 4892 : use linkedhashmap instead of hashmap , a suggest by valerybokov
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory ` to improve closure management by utilizing a centralized closure
camel - 17443 : migrate camel - test - junit to junit 5 for camel - example - route - main
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , to implement WebSocket integration tests in the
[ zeppelin - 4892 ] remove unused test and fix javadoc
refactor authentication comparison logic to use a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by
added a check for the " jnr . ffi . compile . x86asm " system property to ensure compatibility with the JNI F
replaced calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` to improve code readability and maintainability
added a new annotation ` Insecure ` and modified the ` MessageBuffer ` constructor to incorporate it to enable the use of insecure mode
added new Hive configuration variables to HiveConf . java to enhance configuration flexibility for various Hive components
initialize scopes and policies as new HashSet instances in ResourceSet . java and add a null check for policies in DefaultResourceSetService . java to
made the ` decrefOnClose ` variable final and updated the constructor of ` MultiReader ` to accept a ` Collection < ReaderFinished
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 files to
simonstewart : refactored test to use setvalue ( ) instead of clear ( )
removed the ` getFirstTypeArgument ` method and made ` EntrySet ` , ` KeySet ` , and ` GsonTypesTest ` classes final
changed return types of keySet ( ) and values ( ) methods from Set < Integer > and Collection < Integer > to KeySet and Values to
added a duration parameter to the FlipTransition class and updated related methods to allow dynamic adjustments based on the transition duration
removed logging statement for non - valid subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating
bump major and minor version number to 9.10 . 0
replaced System . err . println with LowLevelLogUtil . log for warning messages in StackLocator . java to improve logging clarity for
fix : add support for javaparser version 16 .
updated padding settings for the status view based on the number of replies to ensure correct padding behavior for the status view when there are multiple replies
[ hotfix ] [ runtime ] fix partition backup replica anti - entropy task for version 3.9 +
added a ` metadata ` map to ` SeedUrl ` and ` SeedResource ` classes , along with a corresponding getter and setter in ` Seed
added a null check for the declaration variable before creating a cloned pattern to avoid potential NullPointerException when the declaration is null
[ hotfix ] [ test ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
[ scb - 2203 ] add package name to annotation action validator
updated null checks in IterableTest to use Arrays . < Object > instead of null to ensure proper type handling for null arguments in tests
added ` stream ( ) ` and ` parallelStream ( ) ` methods to ` MapIterable ` , ` PrimitiveObjectMap ` , and `
return a cloned instance of notifInfo instead of the original to ensure that the original object is not modified during modification
do n ' t call getstring ( key ) for command that do n ' t exist
refactor AEADBlockCipher class to improve code readability to enhance maintainability and facilitate future updates
added ` isVariableLocal ` methods to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a null check for ` id ` in ` PackageResourceTable ` and changed the default resources mode in ` RobolectricTestRunner
added a conditional check for ` ulSize ` and ` ulPos ` before accessing ` head _ Table ` and ` post _ Table ` to
refactor SignPlugin to accept a list of HttpMessageReaders instead of a static message reader to improve flexibility in handling multiple message readers in
refactor Int2ObjectCache for improved performance to enhance performance and reduce memory usage
removed dependency on MavenDeployer in StandardMavenAuthenticationProvider . java to simplify the code by eliminating unnecessary checks for remoteRepository type
refactor AudioNode class to improve code organization to enhance maintainability and readability of the code
added SSL configuration and improved error handling in LinkyHandlerFactory . java and updated cookie management in EnedisHttpApi . java to enhance
added imports for OracleSqlOperatorTable and SQLStdOperatorTable , and refactored the HiveFunctionRegistry class to utilize Java Streams for
fix for http : / / issues . apache . org / activemq / browse / amq - 2596 - fix mbean name
updated the ` getBuildTargetForAlias ` method to include a new parameter ` possiblyFlavoredAlias ` for improved clarity to enhance
[ camel - olingo ] fix olingo2 consumer return 0 for empty result
added a mapping of Hive versions to the equivalent version in MetaStoreSchemaInfo . java to ensure compatibility with different Hive versions in the code
server : fix npe while expunge a vm ( # 4696 )
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used in future development
updated ONDashClockExtension and AlarmReceiver to use a new method for retrieving note titles to improve code clarity and maintainability by
updated ` GoogleAuthUserConfigTable ` and ` TotpEndpointIntegrationTests ` to use ` nvarchar / varchar ` instead of `
replaced ` commit ( ) ` method calls with ` apply ( ) ` method calls across multiple classes to improve code readability and maintain consistency
added TestIdleListener to the StandardSession instantiation in AsyncTimeoutTest . java to ensure proper handling of idle sessions during test execution
add test _ id to testbigquerytable so it ' s easy to identify
added background resource and reset functionality to HotseatPredictionController and reset the icon in BubbleTextView to enhance user experience by providing
[ mondrian ] rename getflushafterquery property to flushafterquery
[ native ] add test for native system query
updated LIMEExplanation to handle the retrieval of active features based on the presence of ALL _ OUTPUTS to ensure correct retrieval of active features
added support for command - line arguments in the AppleSimulatorController and InstallCommand classes to enhance flexibility in command - line argument handling
fix potential npe in lineselection . getcurrentlinestartinparargraph
added a check for the availability of the Lifecycle state in both ContainerBase . java and StandardContext . java to ensure that the Lifecycle is only
added a line to clip the background of the QSB widget to the outline to improve the visual appearance of the QSB widget
added time tracking and flag processing logic in SQLManager and improved string processing in BlockTypeListFlag and PlotArea to enhance performance monitoring and
added conditional depth handling for floating text rendering based on whether the text is occluded to ensure correct rendering behavior when the floating text is occluded
rename libffi _ libffi _ libffi _ contextlinux to libffi _ libffi _ context _ linux to
added a private ` propagationBehavior ` field and its getter / setter methods in ` JdbcAggregationRepository ` to allow customization of the propagation behavior
refactor layer validation to support both L1Regularization and L2Regularization in the BaseLayer configuration to ensure proper handling of regularization
refactor readWrite method to include exception handling and improve error logging to enhance error management and provide clearer feedback on read / write failures
changed the access modifier of ` colorStack ` from static to instance variable to allow external access to the ` colorStack ` array
updated method calls from ` getMappedStatement ( id , false ) ` and ` hasStatement ( id , true ) ` to ` getMapped
updated BTCEDepth retrieval to convert tradableIdentifier to lowercase to ensure consistency in currency handling across market data services
updated test assertions in ChannelStateTests to reflect new command values to ensure accurate validation of channel state values for improved accuracy and accuracy
remove deprecate versionedhashes field from enginepayloadparameter
set trigger price to an empty string if it ' s not set to avoid potential null pointer exceptions
refactor : fix checkstyle issue in studentfeedbacksubmissioneditsaveaction
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 2698 hstore . get ( ) should return null if the result be null
hhh - 14827 - fix for entitybeaninterceptor when setmanyproperty ( ) be call twice .
added a boolean property ` _ alwaysSaveUri ` with getter and setter methods in ` FormAuthenticator ` to allow configuration of the always - saved
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide functionality for
replaced specific imports with wildcard imports in LWChoicePeer . java and added methods to handle popup menu visibility to improve code readability and
removed redundant null check and initialization for the ` insert ` variable in ` StressProfile . java ` to streamline code by eliminating
replaced calls to ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable `
added null checks for requests in MockServerEventLog . java and enhanced logging in HttpForwardObjectCallbackActionHandler . java to improve robustness
[ hotfix ] [ runtime ] log warn when property file can not be load
[ java ] use try - with - resources to prevent resource leak
added a condition to check if the network supports multicast and is up in SetOutgoingIf . java to ensure proper handling of multicast network interfaces when
updated the construction of ` sqlCommand ` to use a fixed length of ` len ` to improve flexibility in handling SQL command strings
updated the latestConsumeTime and latestConsumeTimeForEnergy methods in UnDelegateResourceActuator and removed redundant methods in BandwidthProcessor and
added a method to set the ` invalidSessionStrategy ` in ` SessionManagementConfigurer ` to ensure that the ` invalidSessionStrategy ` is
improve error message when a token can not be find
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` containsKeys ` in ` MapAssert `
refactor JdbcProxyGenerator to use a new DelegatorGenerator and introduce JDBC4TemporaryPreparedStatementMethods interface to improve code clarity and maintain
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated ` DirectUpgradeTest ` to use ` Handler ` instead of ` Context
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` and ` CxxSource . java ` to
pdfbox - 4892 : optimize point2d . float usage , a suggest by valerybokov
replaced the initialization of MethodHook arrays with a static final EMPTY constant to improve performance by avoiding unnecessary array creation
added a boolean flag ` grantAccess ` and modified the ` MockAuthenticationManager ` constructor to handle access granting to enhance flexibility by allowing
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to allow for more flexible job execution handling in job
added a condition to check if the file is executable in SharedLibraryLoader . java to ensure that the file is only writable if the file is
doc ( regen ) : update protoc to v3.15 . 3
mondrian : use samplerevent instead of sampleresult in samplerservice . savesampleresult ( )
added constants for battery level , annotation , time with offset , start timestamp , and profilename in BundleConstants . java and updated CustomUrl
updated the method signature of ` applyRule ` from ` Hashtable ` to ` Map ` to allow for more flexible handling of search strings in
movedobject - > absolutescreenlocatable rename to avoid confusion
updated JoglGraphics and ProjectiveTextureTest classes to adjust texture resizing behavior and filter options to improve rendering accuracy and enhance texture rendering
refactor the ` setResourceToDelegate ` method to return a ` File ` object instead of void to improve clarity and return type of the
camel - 17443 : fixed property component not be resolve from uri . thanks to jbellis for the patch .
changed the condition from ' > ' to ' > = ' in ActionScheduler . java and updated the expected attempt count in TestActionScheduler .
updated dbg _ zip assignment to use a temporary directory and added null check for debug _ log to ensure debug _ zip is not set to a
renderingdebugconfig now have the ability to hide the debug overlay .
move pipe . resetgate ( ) to pipe . resetgate ( ) so it do n ' t have to call markblockneedupdate (
added locale management in TestSupplementary . java to ensure consistent locale behavior during test execution
updated the team ' s color range in the Team constructor from 0.8 to 0.4 to improve randomness of the team ' s
replaced Set with ArrayList for activeMatchedStates and added logging checks for fine - grained logging to improve performance and clarity in state management
updated the condition to check for null annotations in SoftAsserts . java to ensure proper handling of null annotations and improve code clarity
updated error handling in StorageResources and added imports for InvalidTypeIdException and UnrecognizedPropertyException in StoragePluginRegistryImpl to improve error reporting and
refactor call tree csv reporting into a dedicated method to improve code readability and maintainability
added null checks and improved note handling in DetailFragment . java to enhance robustness and prevent potential NullPointerExceptions during note retrieval
added a variable ` peakTasks ` to track the number of tasks and modified the logic for determining the fractional loaded value to improve task tracking accuracy
danielwagnerhall : enable native event on window by default
added custom metadata handling for Nutch scores and fetch intervals in the Injector class to improve flexibility in specifying custom score and fetch interval values
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` to ensure compatibility with
solr - 1792 : add corecontainer . isshareschema ( ) and testcorecontainer . isshareschema ( )
updated method calls to use ` info . sizeInBytes ( true ) ` instead of ` info . sizeInBytes ( ) ` across multiple classes to
updated assertions in VersioningTest to check for null version1 _ 2 to ensure correct validation of version1 _ 2 objects
updated SQL query to include a condition for non - null types in pg _ catalog to ensure correct handling of non - null attributes in database connections
[ java ] do n ' t call appendnewleadershiptermevent if there be no new leadership term event .
removed the method ` buildMediaType ` from ` WebClientPlugin . java ` to streamline the code by eliminating unused imports
updated method names from ` fill ` and ` fillUsingLengthPrefix ` to ` fillSlice ` and ` fillAndGetIndex ` across multiple classes
updated AcidUtils to use a local variable for base compaction status and added a new test for major table compaction to improve code readability and
updated initialization of immutableStorageScheme and qualifierEncodingScheme to handle null values to ensure robust handling of null values and avoid potential NullPointerExceptions
added new classes PojoProducersCustomized and RestProducersCutomized to provide customizable components for PojoProducers and Rest
updated references from " cache " to CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve clarity and consistency in configuration
replaced the existing registration method for AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to ensure
add miss replacement for wooden slab in oredictionary
refactor multiple session - related classes for consistency and clarity to improve code maintainability and readability across the application
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 15827 - fix test failure on oracle and mariadb
corrected the calculation for the center Y position in the spriteBatch drawing method to ensure the correct positioning of the sprite batch is applied
updated the y - coordinate calculation logic in PlayerFunctions . java and improved string representation in PlotId . java and WorldGuardListener . java
added a deprecated static final Version constant for LUCENE _ 8 _ 5 _ 0 to indicate that this version should no longer be used
updated print statement formatting in SSLSocketImpl . java to improve code readability and maintainability
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing functionality for
updated dependency type handling in CoNLLUOutputter and introduced a new DependenciesType enum in SemanticGraphCoreAnnotations to improve clarity
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods to use ` parseContext . makeTargetDescription ` to
updated the test method from ` testFromMain ( ) ` to ` test ( ) ` in ` MyChild . init ( ) ` to
replaced the array size of ` configBlocks ` from ` Block . blocksList . length ` to ` 256 ` and adjusted the loop iteration
update bukkit main to check for git - spigot and craftbukkit to support title
updated SQL statement escaping logic for PostgresDatabase in AbstractSQLChange . java and corresponding test cases in AbstractSQLChangeTest . java to ensure
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
added checks for file names ending with " . adoc " and improved error handling in BuildNavAndPDFBody . java to ensure proper
fix for http : / / issues . apache . org / activemq / browse / amq - 2237 - nhcmq
updated how the change set is retrieved by using a null check for the root change log to ensure robustness by avoiding potential NullPointerExceptions when
[ type : refactor ] remove unnecessary new instance of methodresult in staticmethodinterceptor
added database dropping functionality in TestHiveMetaStorePartitionSpecs . java and logging in TestObjectStore . java to improve database management and
added a new parameter ` order _ currency ` to the ` BithumbAuthenticated ` and ` BithumbAccountServiceRaw ` classes to
[ thymeleaf ] remove ssefluxwebconfig since it be no longer use
updated method checks to use ` getReturns ( ) . isVoid ( ) ` instead of ` getReturnType ( ) . getFullyQualifiedName ( )
[ te ] add listyamls ( ) endpoint to list all yaml configs
removed the public access modifier from the equals ( ) and hashCode ( ) methods in the Marker class to enforce encapsulation by restricting access to
refactor thread factory to use lambda expressions and introduce a new method for awaiting asynchronous channel termination to improve code readability and maintainability
added unit tests for ` PersonWithAList ` in ` MongoTemplateTests ` and created a new class ` PersonWithAList ` to
synchronize applet panel size in web ( not only in web )
replaced direct visibility setting of the toolbar with a delayed execution using a Handler to improve UI responsiveness by allowing toolbar visibility to be set
refactor the initialization and unpacking of the first page reader into separate methods for clarity and efficiency to improve code readability and maintainability
server : do n ' t save vm password if vm be not run
added boolean flags ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` to control output stream and writer behavior
added a warning check for assignment side effects in the GroupDialog to improve user feedback during group assignment
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated the condition to check for maxWidthWithMargin instead of maxHeightWithMargin in FileUploadApiController . java to ensure proper handling of icon dimensions
refactor ` RegisteredServiceProperty ` and update ` JwtTokenCipherSigningPublicKeyEndpoint ` to use ` JcaPEMWriter ` and improve public
added checks for file existence and readability of content types based on the operating system ' s operating system to ensure compatibility with different operating systems and
update nettyconnection to support jzlib
added a new method ` doesClassLoaderDescendFrom ` to ` Util ` and removed redundant checks in ` Class ` and ` MethodHandles ` to
replaced the ` doConnect ` method with ` connect ` in ` ChannelProvider . java ` and ` ProxyChannelProvider . java ` to
added a new test method for handling empty final columns in CSV processing to ensure correct handling of empty final columns in CSV processing
added compass gravity and margins to NearbyMapFragment to enhance visual appearance of the NearbyMapFragment
added a new test method ` testInterpolation ` in ` GeoPathTest . java ` to validate distance calculations to ensure correctness of distance calculations
added exception handling to methods in LeafFilterFactory , ParquetFilterPredicateConverter , and TestParquetRecordReaderWrapper to improve error handling and
added a condition to set the language of the current audio track if it is blank to ensure the correct language is set when the current audio track
added a warning log for versions less than the old version in MicroserviceRegisterTask . java to clarify compatibility issues related to schemas in
replaced custom array resizing and resizing logic with a unified ` addAll ` method across multiple array classes to improve code maintainability and reduce
reformatted try - catch blocks for clarity in DataSourceProxy . java to improve code readability and maintainability
added constructors to ` InMemoryClientRegistrationRepository ` and ` InMemoryReactiveClientRegistrationRepository ` to accept a map of ` ClientRegistration
added a method to reset the UI state in SchemaUpgradeHelper to ensure that the UI state is properly reset based on the current cluster state
added logic to handle failed steps in JUnitReporter and created test cases for strict and non - strict behavior to ensure proper reporting of pending exceptions
add playerselector patch to allow . in entity selector . fix # 823 .
implemented the Closeable interface in the Selector class to ensure proper resource management and prevent memory leaks
added a connection pool using MultiplexConnectionPool in MaxConcurrentStreamsTest . java to improve connection management and resource management in the client
added multiple stringType ( ) method calls to CoreOptions . java to enhance functionality by allowing string type handling
updated HqlQueryRenderer to handle character and parameter contexts correctly to ensure proper handling of character and parameter contexts in query processing
updated status checks and method names for consistency and clarity in HttpGenerator , HttpChannel , HttpChannelState , and Response classes to improve code
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated HikariCPCollectorTest to use a mock data source instead of a hardcoded JDBC URL to improve flexibility in testing by allowing
updated ParquetFormatPlugin and ParquetGroupScan to enhance file selection handling and metadata cache management to improve code clarity and maintainability by
updated the logic for determining compilation success in Jsr199Javac . java to ensure proper handling of compilation errors during ABI compilation
added a TableModelListener to handle table changes in DefaultSortedTableModel to improve event handling for table changes in the user interface
updated the range check from 49152 to 65535 in ServerConfig . java to ensure that the number is within the range of a valid range
added DocumentsContract import and notifyChange calls in AuthenticatorActivity and AccountRemovalJob for API level KitKat and above to ensure proper
removed the startLogging method call from MainApp . java to streamline logging process by eliminating unnecessary logging calls
refactor exception handling in FilterChainProxy to utilize ThrowableAnalyzer for better error handling to improve robustness by ensuring wrapped RequestRejectedException is
updated the calculation of ` newSize ` and modified the arraycopy method to use ` this . length ` instead of ` length + length ` to ensure
pdfbox - 4892 : check for empty filterlist , a suggest by valerybokov
add a new file tbstopwatch . java that implement stopwatch interface .
fix checkstyle issue in io / entity / pliststore . java
added @ Deprecated annotation to multiple Continuation classes to indicate that these classes are outdated and should no longer be used in a future release
[ zeppelin - 4892 ] fix the classloader of the current thread in remote interpreter server .
fix checkstyle issue in entity / commandsourcestack . java
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with newer SDK
corrected variable name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to
# 1745 - queryplan now include the simple name of the bean .
updated URLs from " wro / all . js " and " wro / all . css " to " static / all . js "
added a new test method ` showLatestTimeseriesTest ` to validate the retrieval of the latest timeseries from the database to ensure that the latest
updated parameter names from " appContextLocation " to " contextConfigLocation " in multiple files to improve clarity and consistency in parameter naming con
modified exception handling in OCSPChecker to differentiate between CertPathValidatorException and other exceptions to improve clarity and correctness of exception handling
benchmarker : add option to disable write output solution
doc ( regen ) : set default maxinboundmessagesize to max int
added a new test class ` Issue _ 815 ` to verify the behavior of ` sliceSize ` method in ` SortedTableMap ` to ensure
added a recipe for pipe waterproof and slime ball in the BuildCraftTransport class to enhance the recipe ' s shifting capabilities
[ mahout - 389 ] fix arrayindexoutofboundsexception in sequentialaccess sparse vector .
added handling for Shulker entities in BukkitMain and updated entity metadata in EntitySpawnListener to improve entity management for shulk
added a method ` getDebugLogger ( ) ` to both ` DIHWriter ` and ` SolrWriter ` classes to provide access to the debug
replaced wildcard imports with specific class imports in IOHelper . java and added methods to retrieve maximum directory and file names to improve code clarity
refactor the UpToTagChangeSetFilter implementation to include a check for seen tags to enhance error handling by providing clearer feedback when no tags
[ beam - 10720 ] fix a findbugs warning in beam - fn - api
[ hotfix ] fix checkstyle violation in brokerroutingmanager
updated color constants in CandlestickRenderer from Color . gray and Color . green to Color . GRAY and Color . GREEN
refactor InsettableFrameLayout to utilize a new LayoutParams class and improve layout parameter handling to enhance flexibility and maintainability of layout
added a new method ` getDuration ( ) ` to the ` BuildTargetDurationListener ` class and updated related test cases to include a new duration
replaced ` @ Profile ` with ` assumeTrue ` in multiple migration integration test classes to ensure tests are only executed when the database profile is
added a null check for the user before processing claims to avoid potential NullPointerExceptions when the user is not initialized
camel - 17405 : camel - test - infra - test - infra - camel - test - infra - spring - boot
use nonblockinghashset instead of concurrenthashset to avoid concurrentmodificationexception
api : listpublicipaddresses - add sourcenetworkid parameter to listusagerecords api
added a new method ` isIgnoringBatteryOptimizations ` in ` ShadowPowerManager ` and corresponding test in ` ShadowPowerManagerTest `
updated the retrieval of the Jetty version property to use a dynamic property from the build properties instead of a hardcoded value to improve flexibility
added unit tests for verifying multiple invocations in ` NumberOfInvocationsInOrderVerifierTest ` to ensure correct behavior of ` inOrder `
refactor evaluation logic in TRegexExecNode . java to improve clarity and correctness in handling no match instances
updated the profile start method to include a foreground flag to enhance user experience by allowing the profile to run in foreground mode
refactor executor variable names and improve resource management in MiniSolrCloudCluster . java to enhance code readability and maintainability by using more d
replaced ` Map < String , String > ` with ` String [ ] ` for ` parseFieldnames ` in ` MetadataIndexer . java
updated file name logging to include the file name in CodeEditorView . java and added action list removal logic in EditorTextActionWindow . java
updated skipped entry logging to include exception messages to improve error reporting for skipped entries in ClassFileReader and JdepsTask
added LinkStorage integration and modified document storage settings in Fetcher and FetcherMain classes to enhance link storage functionality and improve document storage management
updated the ` populateBubble ` method to accept an existing ` BubbleBarBubble ` parameter and added a check for existing bubble to
updated error handling in CronScheduledRoutePolicy to throw an IllegalArgumentException when no stop , stop , and resume times are specified to improve error clarity
refactor ` buildRpcExt ` method to accept a single ` Method ` instead of an array to simplify method signature and improve code clarity
[ java ] use a dedicated nak delay generator for multicast conductor .
replace GsonBuilder with Gson and modify JSON serialization in ClientInformationResponseView . java to improve code clarity and ensure proper serialization of client information
added a conditional check for zero fieldAmount before setting the order ' s average price to ensure that the order ' s average price is only set
removed the rawExecutionReports method from the BinanceStreamingMarketDataService class to streamline the subscription logic for execution reports
added a fail method to handle exceptions and modified the failure condition in LdapTimeoutTest . java to improve error handling and provide clearer output during
jphonemiser : do not try to read user dictionary if they do n ' t exist .
updated password handling logic in AmbariServerConfigurationHandler and modified test expectations in RootServiceComponentConfigurationResourceProviderTest to improve clarity and
added a check for segment parsing in ParseSegment . java and implemented the isParsed method in SegmentChecker . java to prevent parsing of already parsed
[ hotfix ] [ yarn ] make application _ attempt _ failures _ validity _ interval configurable
do n ' t crash if the h2 driver be not include in the classpath
hbase - 15920 add default readtype for snapshot - based inputformat ( # 15920 )
added fixed height and width parameters to the LoginInstanceRequest class to allow dynamic adjustment of instance login options based on user preferences
added cornerRadius parameter to the update method across multiple classes to allow dynamic adjustment of the corner radius based on the current rectangle size
updated COMMANDS _ TO _ REMOVE array to include additional SQL commands and added filter filters for cross - product queries to enhance data retrieval capabilities
added a retry mechanism for connection pooling in TxnHandler . java to improve stability by allowing retries when a connection is already available
[ flink - 14939 ] [ backup ] fix backup reservation in preparation of backup
added a private final char [ ] [ ] strings field to the FirstOfStringsMatcher class to allow external access to the strings array for better
updated DELETE statements from " DELETE ROWS " to " DELETE ROWS SERVER SELECT " and " DELETE ROWS CLIENT SELECT " in CostBased
updated exception handling in BaseServiceException to include retry logic for insufficient data written to improve error reporting by distinguishing between socket timeout and insufficient
added a new parameter ` rapidInstallTypes ` to the constructors of ` AdbHelper ` , ` RealAndroidDevice ` , and `
updated the SeedPattern regex to allow negative values for the " - srand " option to enhance flexibility in seed validation
refactor ` MultimapSubject ` to use a factory for creating ` IterableValuesForKey ` and ` iterableEntries ` to improve code clarity
simplified the return statement by removing the conditional check for device orientation to simplify the code for better readability and maintainability
added a transmux feature to the Transformer and TransformerInternal classes to enable customization of transcoding behavior based on media item size
added localization for string values in Picker . java to ensure localized strings are properly displayed in the UI
camel - 23484 : camel - cxfrs - should not try to connect to the cxfr if the camel exchange have an exception
hhh - 14827 postgresql should use pessimisticlockexception and lockacquisitionexception instead of deprecate lockacquisition
added null check for queryId in TestJdbcDriver2 . java and modified imports and annotations in HiveStatement . java to ensure queryId is
[ beam - 10720 ] exclude usesunboundedpcollections from pardotest . testvalidatetransform ( ) test
updated HTML formatting in GpsSimpleViewFragment to remove unnecessary folder references to simplify the display of formatted file names for better readability
[ java ] remove unused leadershiptermid from joinlogasfollower .
refactor HttpSender to use a local variable for the HttpExchange instance to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
updated the method name from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to align
added null checks and improved marker handling in Recipe , Markers , and SearchResult classes to enhance robustness and prevent potential NullPointerExceptions during
pdfbox - 4071 : use double instead of float for font size , a suggest by valerybokov
refactor email handling from matchSingleDoCoMoPrefixedField to matchDoCoMoPrefixedField for improved clarity to enhance
refactor exclusions handling in RawMavenResolver to use a set instead of a stream to improve code readability and maintainability by reducing
added error handling for null DSX exchange info and introduced new fields for quoted and base currency in DSXAdapters and DSXPairInfo classes
updated test classes for consistency in naming conventions to improve code readability and maintainability
[ drools - 90 ] fix incremental compilation fail if kiemodule pom be invalid
updated the ` NativeArray ` constructor to use ` finale - k ` and added a check for ` sobj . has ( k )
rename JacksonDataFormat and JacksonXMLDataFormat files to improve clarity and consistency in naming conventions
truffle - api : do n ' t use reflection for getter and setter in hostfielddesc .
added a method parameter annotation for CompletableFuture in DefaultNullnessAnnotations . java to ensure proper handling of completion stages in the database
adjust the calculation of mFreezeCheckPoint from 9000 to 10000 milliseconds to adjust the freezing threshold for better user experience
removed the run method from PowerMockRunner and added internal state setting in AbstractCommonPowerMockRunner to streamline the code by eliminating
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshalIn ` to ensure correct type
refactor indentation handling logic in TabsAndIndentsVisitor . java for better clarity to improve readability and maintainability of the code
replaced LuceneTestCase with TestCase in TestSingleTokenTokenFilter to ensure compatibility with the latest JUnit framework
updated the write method in HtmlProcessInformationsReport to include a wrapped text column to enhance the display of wrapped text in the report
refactor JdbcStepExecutionDao and MapStepExecutionDao to utilize JdbcExecutionContextDao and MapExecutionContextDao for improved execution context
added a condition to check if a new media folder should be hidden before adding it to the root folder to ensure that media folders are only added
replaced UnsupportedOperationException with IllegalArgumentException for null actor handling and added widget removal logic to ensure proper widget management and prevent potential NullPointerExceptions
added handling for JavaType . Parameterized in RemoveUnusedImports . java to improve type management for parameterized types in the code
fix npe in uniquemodlistbuilder when there be no modinfo
changed the logger from private final to private static final in TicketGrantingTicketImpl . java to ensure the logger is accessible from different classes
updated the SQL string in PhysicalPlanTest . java to include a new version of RLE . 81 + 12 to ensure compatibility with the latest
added a method ` isValue ` to ` AttrData ` and modified ` Converter ` to check for value presence to improve value retrieval logic and enhance
added support for character modifier keys in US International PC locale in CPlatformResponder . java and implemented corresponding methods in LWCToolkit
[ java ] set aeron _ publication _ connection _ timeout for c medium driver test .
added a check to return false if the request URI starts with " / css " , " / images " , or " / favicon "
added assertions to verify the installation failure of an APK in TestUtil . java to ensure that the device is rooted before proceeding with
# 1746 - remove oracle - specific sqllimiter from oracle platform
added Mockito mocking for MultiMap in TestSimpleBodyHandler and updated the expected length of secure transport protocols in TestVertxTLSBuilder to
updated JavaLib1 . java paths in DiffRuleKeysScriptIntegrationTest . java to reflect the new version of the library to ensure compatibility with
added a boolean flag to track if dismissing haptic is running in TaskViewTouchController to ensure proper handling of haptic dismiss
fix explosioneventworldexplosion not send the source of the projectile
added ` setHasStableIds ( true ) ` and modified ` getItemId ( int position ) ` method in ` SymbolInputAdapter ` to
updated path parameters from @ PathParam to @ QueryParam in Bitfinex . java and increased limit values in BitfinexPollingMarketDataService . java
camel - 14850 : camel - core - xml - stax - fix test failure on window
[ hotfix ] [ runtime ] add tostring ( ) method for kubernetesleaderelectiondriver and zookeeperleaderelectiondriver
refactor SqlSessionFactoryBean to improve code organization to enhance maintainability and readability of the code
[ hotfix ] remove useless reflection in tripleinvoker . getpureargument ( )
replaced Gdx . app . error ( ) with throwing a GdxRuntimeException for error reading to improve error handling by throwing a runtime exception
added a method ` isStarted ( ) ` in ` Deadline ` to check if the current deadline is active and updated timer management in ` Raw
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages when the channel is closed
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when genres is null
[ flink - 20663 ] [ checkpointing ] reset the master hook before restore it in region recovery
fix : add support for map container in prefab ( # 1186 )
[ flink - 20619 ] [ wal ] fix the problem that walnode do n ' t return the old unpinned mem
refactor handler handling in Endpoint . java and add a new test for retrying the same host on callback failure in HttpTest . java to improve
truffle / tutorial : fix typo in package - info . java
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL server functionality to ensure correct handling of special characters in query parameters
added @ NonNull annotations to constructors in CamelModule and modified the findBean method in JoobyBeanRepository to ensure non - null routes
replaced synchronized block with a utility method for waiting in JavaFXSEPort . java to improve code readability and reduce synchronization overhead
move ParameterFlags to a new package ` com . kenai . jaffl . provider ` to align with the new package structure for
refactor cropperBehaviour creation to use a dedicated method for creating cropperBehaviour to improve code readability and maintainability by redu
removed the ` appName ` parameter from the ` configure ` method signatures in ` InputRC ` and ` LineReader ` classes to simplify method signatures
[ gr - 13954 ] fix handling of ignored deps in catalog and uninstall command
replaced calls to ` setHeadless ( true ) ` with ` addArguments ( " -- headless = chrome " ) ` in multiple
replace direct assignment with value . intern ( ) in VersionedValue . java to ensure proper memory usage during object serialization
added " MOVE " status check to the connection status validation to ensure proper handling of the " MOVE " status in the connection process
updated US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME constants in FixedDateFormat . java
replaced the import of ` org . apache . curator . shaded . com . google . common . collect . Lists ` with the
[ hotfix ] [ runtime ] remove redundant check from startspilling ( )
updated permission checks in Visit . java to include untrusted visit flag to ensure proper handling of untrusted visit permissions based on plot flags
fix a problem with the jabber jabber when the jabber provider be not register .
updated URL normalization logic in BasicURLNormalizer . java and added a test for curly braces in TestBasicURLNormalizer . java to enhance URL normalization
changed method visibility from protected to private for ` addRemoteAnimations ` and ` unregisterRemoteAnimations ` and ` unregisterRemoteTransitions ` to
added a conditional check to compare clock rates in EncodingConfiguration to ensure correct comparison of clock rates when encoding changes
added a method to retrieve the project path and modified the generateProjects method to return an ImmutableSet of generated project paths to improve project path management and
removed unnecessary conditional check for native digit in HostLocaleProviderAdapterImpl . java to streamline code for better readability and maintainability
added a new file ` MSwingUtilities . java ` with utility methods for image scaling and exception handling to facilitate the use
camel - mail : camel - mail - should use defaultasyncproducer instead of defaultproducer . thanks to jbellis for the
added ` @ RefreshScope ` annotation to ` CasCoreWebConfiguration ` and ` PasswordlessAuthenticationConfiguration ` classes to ensure proper refreshing of
added unit test base on user forum issue
added new Main and ScriptRenderer classes for scripting functionality to facilitate the rendering of JavaScript scripts in the application
added a condition to check if ` _ inputState ` is ` __ NONE ` before processing ` content _ type ` in ` Request . java
added null checks for width and height in BitmapFont , implemented isDescendant method in Group , and improved touch focus handling in SelectBox to
replaced calls to ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager ` and added a test for failure deployment in `
change lexicon recipe mapping to not ignore meta item . close # 489
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve test stability by allowing more time for
updated import statements in LoincHandler . java to use a wildcard import and modified the conditional check for shortName to enhance code readability and
remove classpathurlstreamhandler , use classloader . getresource ( ) instead
added a new file ` FieldUtils . java ` with utility methods for accessing and retrieving fields to facilitate utility functions for field access
removed the check for SPECULATIVE mode in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding adjustments for custom content to improve
[ xabber ] update the xabber account ' s sync state when an invalid token be receive from the server .
added a new method ` setvar ` to the ` Commands ` class to facilitate setting variables based on command - line arguments
fix catentity not fire animaltame event properly . close # 789
fix ( core ) : fix npe in windowframe . getrow ( )
pdfbox - 4892 : check that the / help font be present in the appearance stream , a suggest by valerybok
added a method to set the application ' s mode in PageListController to ensure the application reflects the current application ' s mode
added support for ` dockerFilePath ` and ` buildArgs ` in ` ImageFromDockerfile ` and created a corresponding test class ` Dockerfile
added a null check before initializing threadInfos in ThreadInfos . java to avoid potential NullPointerExceptions when accessing thread information
updated the condition in PieChartRenderer to use a constant for floating - point precision to improve code readability and maintainability by using a
[ hotfix ] [ runtime ] add more logging to singleinputgate and singlecheckpointbarrierhandler
added new table types to the mmm Schema . java and ppp Schema . java files to enhance functionality and maintainability of the schema management
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors to enforce a minimum similarity parameter to enhance query flexibility by allowing
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
update layoutwrappingencoder to allow immediateflush to be set from an outputstreamappender .
added RabbitAutoConfiguration and KafkaAutoConfiguration to the AutoConfigureAfter annotation in ZipkinAutoConfiguration . java to support additional Rabbit and Kafka configurations
added null check in JLayer . java and created a new test class bug6875716 . java to ensure proper handling of null components
replaced the import of ` avro . shaded . com ` with ` com . google . common . base ` in multiple Java files to
add return and unwind block to the blockmap in the bytecodebuilderphase .
refactor conditional checks and add getter and setter methods for the legacyRenderer property to improve code readability and provide getter and setter methods for legacy
replaced custom intToFourBytes method with Google Guava ' s Ints . toByteArray method in AbstractJweDecrypter and Abstract
added null check for mObserver in NavigationModeFeatureFlag to prevent potential NullPointerException when mObserver is not initialized
modified the signature of the ` thenComparing ` method in the ` Comparator ` interface and added a new ` Department ` class with corresponding
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
updated the end time setting in UserRuleAnomalyFunction from null to currentKey bucketMillis to ensure the end time is set correctly based on the
added error handling for parsing integer values in VisualScoreTagTest . java to ensure that NumberFormatException is not thrown when parsing values are invalid
added a setClassLoader method to MockFactory and set the class loader in MockFactoryTest to ensure proper instantiation of MockFactory with the correct class
added a new ` OriginalFormat ` class and modified the ` formats ` list in ` ConverterWithEnumFormat . java ` to include it to
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils . java to improve code
refactor JAWTRenderer class to improve code readability to enhance maintainability and facilitate future updates
camel - 14884 - camel - aws2 - * : enable autowire on the lambda client , fixed test
server : fix npe in uservmmanagerimpl when mac address be invalid .
removed the condition checking for " Authorization " header in ProxyServlet . java to simplify the condition for better readability and maintainability
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService . java ` to improve method clarity by using a more
added ` getDetails ( ) ` method to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes ,
updated the random usage logic for ` randUsePoints ` in ` SolrTestCaseJ4 . java ` to ensure that ` randUsePoints
change method name from appenddot ( ) to end Sentence ( ) in multiple classes to improve clarity and consistency in naming conventions
updated TimeFormat . formatForConsole method to accept a Locale parameter to ensure consistent formatting of time values across different locales
updated imports in GroovyParserVisitor . java and modified the handling of unparsedArgs in GroovyParserVisitor . java to improve code clarity and ensure
added boundary checks for top and right inset dimensions in Border . java to ensure proper positioning based on input dimensions
refactor GestureState initialization to use a static DEFAULT _ STATE constant to improve code readability and maintainability by centralizing gesture state creation
replaced Joda - Time ' s DateTime with Java ' s Instant and DateTimeFormatter for date formatting to improve compatibility with Java ' s built -
refactor openblas and openblas _ nolapack files for consistency to improve code maintainability and readability
[ api ] use java . io . io . io . close instead of ioutils . close
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction manager initialization
increased wait time in ` AbstractDistribZkTestBase ` and ` AbstractFullDistribZkTestBase ` from 120
added a new class ` SearchResults ` to handle search results to provide a mechanism for retrieving and storing results in a list of documents
do n ' t recreate the refresher if there be no thread cpu
initialize the body if the primitive array be null to avoid npe .
added new version constants for Lucene 8.10 . 0 and LUCENE _ 8 _ 11 _ 0 in the Version . java
updated the feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the App
added a new API endpoint to retrieve tenant pools for the current instance to provide functionality for retrieving tenant pools for the current instance
refactor early termination logic in TopFieldCollector to improve clarity and structure to enhance code readability and maintainability while ensuring proper handling of
added a check for ` isToString ( ) ` in ` InlineBytecodeGenerator . java ` and updated tests in ` InlineByteBuddy
added logging statements to CxxCompileStep and CxxPreprocessStep for compiling , preprocessing , and error handling to improve debugging and
add stringutil . removecharacter ( string , char ) method to remove character from a string
[ zeppelin - 1348 ] fix metadata service protocol not support ( # 1348 )
( chore ) camel - kie - runtime : move datatransform interface to kie - api
changed the type of ` values ` and ` objval ` from ` Object [ ] ` to ` Number [ ] [ ] ` to ensure
remove unnecessary boolean flag in FormatStringChecker . java to simplify condition checks for better readability and maintainability
updated initialization of SolrCore in ElectionContext . java to ensure proper initialization of SolrCore
refactor ITestDbTxnManager for improved clarity to enhance code readability and maintainability
refactor database connection handling to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added a new method ` testMapModel ` in ` CodeFirstPojoClient ` and implemented it in ` CodeFirstPojo ` to
pdfbox - 4892 : optimize code , a suggest by valerybokov
refactor selection handling in ScaleDialog to improve clarity and functionality to enhance user experience by ensuring the selection state is correctly set based on the
fix npe cause by miss step height on forge
pdfbox - 4892 : do not throw an exception if there be no appearance stream , a suggest by valerybokov
replaced TreeSet with LinkedHashSet for storing keys in ExecuteSqlCommandStep . java to maintain insertion order for better performance
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 and modified the method signature in PagePreview
updated preload library version from libdc1394 - 22 to libdc1394 - 25 in dc1394 . java to ensure compatibility with
added a conditional check for agent support before calling setAllConstructorsToPublic in MainMockTransformer . java and created two new test classes for mocking
pdfbox - 4892 : optimize code , a suggest by valerybokov
fix window title for sun . awt . x11 . xtoolkit
updated depth calculation logic based on pixel size in XRSurfaceData . java to ensure correct depth assignment based on color model ' s pixel size
added error response body handling in OkHttpDataSource and updated InvalidResponseCodeException to include it to improve error reporting by providing clearer context for
added a static exit method to TopLogging and updated TopThreadGroup to use this new exit method to streamline error handling by eliminating
updated the initialization of the start variable in NativeRegExp . java to handle cases where the regexp is not global
planner - 468 ignore test until upgrade to optaplanner 6.3 . 1 +
updated variable assignment from lowIndex to highIndex in DefaultAllocator . java to ensure correct allocation retrieval from availableAllocations
added a method to clean entries without feeds in DatabaseCleaner and updated FeedEntryDAO to use this method to ensure that entries without feeds are
changed the return type of ` appendToLabel ` method from ` void ` to ` AtomicCounter ` to allow method chaining to return the current instance
[ java ] add no - op idle strategy to the low - latency medium driver .
added handling for ` HttpStatus . NOT _ MODIFIED ` in ` CacheControlHeadersWriter ` and ` CacheControlServerHttpHeadersWriter ` to
replaced SpliceInstrumentListener with ToolEvalNodeFactory and updated related methods in InstrumentationPartialEvaluationTest . java to improve clarity and
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to correctly calculate the width and height of the tab area
refactor KrakenMarketDataService and KrakenMarketDataServiceRaw to accept arguments directly instead of using a count parameter
camel - 17462 : camel - ftp should use java . io . file instead of java . io . file . separator
added a new method ` build ` to ` JavaProvenance ` and modified imports in ` MavenProjectParser ` and ` JavaProvenance `
added trace logging for registered Hive functions , UDFs , and non - deterministic UDFs in HiveFunctionRegistry . java and introduced a new test
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test reliability by allowing more time for
do n ' t deliver hint for deleted cf
added a check for writable output files in NativeErrors . java to ensure that the test runs as root when the output file is not writable
added package info retrieval and error handling in LauncherModel . java to ensure the application is enabled before proceeding with package access
cloudstack - 4102 : fix databaseupgradechecker to handle cloudruntimeexception
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet to improve skip logic to ensure non - skippable exceptions are
replaced ` startsWith ( completed ) ` with ` regionMatches ( ) ` for string matching in ` LineReaderImpl . java ` to improve
added imports for SourcesFileErrors , SourcesFileResults , and SourcesFileErrors , and modified data table handling in Recipe . java to improve
added functionality to dismiss all tasks from the overview when there are tasks to improve user experience by ensuring all tasks are displayed in the overview
dbupgradesystemvmtemplate : introduce dbupgradesystemvmtemplate interface to implement dbupgrade interface .
removed redundant null checks for the connection variable in LdapClient . java to simplify the connection handling logic and improve code clarity
refactor index handling to use a temporary variable for clarity to improve code readability and maintainability
fix cassandraserver . set _ keyspace ( ) to be thread - safe
added a check to skip synthetic fields in ReflectUtils . java to avoid processing synthetic fields that are not synthetic
added a new LoggerProvider class and integrated it into ApplicationController to provide logging functionality in the application
updated the type of the map from ` ImmutableMap < String , String > ` to ` ImmutableMap < String , Object > ` and modified related code
added deprecation warning for configuration of multiple glue classes in SpringFactory to provide a clearer error message for users that have multiple glue classes that configure
added a new method ` deepStart ` to ` Startables ` that accepts a list of ` Startable ` objects to facilitate
removed the deprecated method ` reservePrimitiveExtensionArray ( ) ` from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the
make laser table extend from ilasertargetblock , fixes # 248
simplified the condition for checking object names in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
set the expiration message period to zero in MemoryLimitTest . java to ensure the test accurately reflects the intended behavior of the policy entry
removed unnecessary null checks in RequestHandlers . java to simplify code and improve readability by eliminating unnecessary null checks
replace ' - ' with ' . ' in the getServletName method to ensure the logger name starts with a hyphen
updated the handling of the PYTHONPATH environment variable in ProjectBuildFileParser . java to filter out certain keys before adding them to the Python
updated audio frame size calculations and error handling in DirectAudioDevice and Toolkit classes to improve robustness and robustness of audio data processing
modified the return logic in ElasticSearchStringLookupService to handle null enums gracefully to ensure proper handling of null values and avoid potential NullPointerExceptions
updated the error message format in CommitLogReader . java to include additional context to improve clarity of error reporting for unexpected end of segments
added a policy assignment from the container scope in the WebSocketSession class to ensure the session ' s policy reflects the current container ' s policy
removed the check for ` hasStaticFieldsOfCurrentType ` and adjusted the initialization logic in ` Java2TypeScriptTranslator . java ` to
updated the webroot parameter in the StaticHandler instantiation to allow dynamic configuration of the web root directory
( chore ) camel - spring - boot2 - junit5 : migrate component to junit5 ( # 4696 )
[ netbeans - 4892 ] fix classnotfoundexception in profiler
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple classes to improve clarity and consistency in header creation logic
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and
reset the buffer in ReduceRecordProcessor to ensure proper memory management during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is
updated conditional checks in FloatingDecimal . java and added a new class ToString . java to improve clarity and functionality of the FloatingDecimal
updated property type checking logic in PropertyDescriptor . java and added a new test class Test7189112 . java to improve property type validation and
removed maxVersion parameter from the getVersions method in RealTimeGetComponent . java to simplify version retrieval by eliminating unnecessary maxVersion parameter
updated the origin setting logic in NettyRequestFactory to ensure the correct origin is set based on the URI ' s scheme if not already present
updated animation behavior for task overlay animations in RecentsView and TaskView classes to improve user experience by providing visual feedback during modal transitions
updated error messages in ORCRecordReader to include field context in error messages to improve clarity of error messages for better debugging and debugging
added new samples for " Clear HLS : TearsOfSteel . m3u8 " and " bipbop
removed HIBERNATE52 _ ENTITY _ MANAGER _ INTERFACE and HIBERNATE43 _ ENTITY _ MANAGER _
updated log initialization to use the correct class reference for ExecRPCInvoker and WritableRpcEngine to ensure consistency in logging context across the application
added diagnostic logging functionality and a test for union and fixed fields in TestSpecificCompiler . java to improve error reporting and test coverage for generated code
modified the session creation logic in WebSocketEndpoint . java and added a test for session closure in WebSocketIT . java to ensure proper handling of session
updated delay values and method names from onDaoStateBlockChainChanged to onChangeAfterBatchProcessing across multiple service classes to improve clarity and functionality
replaced OpenSymphony mappings with Apache Struts mappings in XmlConfigurationProvider . java to ensure compatibility with the Apache Struts organization in the
added conditional logic to stop video tracks based on the stream ' s stop status to ensure that video tracks are properly stopped when the stream is stopped
changed the type of ` chartData ` from ` List ` to ` ArrayList ` in ` BittrexChartDataResponse ` and added a
updated import statements in GMLExamples . java for improved clarity and functionality to enhance maintainability and readability of the code
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in ` TargetType58 . java ` to improve performance by
hhh - 10956 - improve error message when no part of a composite identifier be find
rename findfulltextaction to downloadfulltextaction to be more intuitive
refactor URI registration to include host and port information to improve clarity and functionality of URI registration logic
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code readability and maintainability
added a check for non - blank OSDB hash before retrieving API information to avoid potential errors when the OSDB hash is blank
added token transfer functionality based on call token value and token ID in RuntimeImpl . java and MUtil . java to enhance contract token management and ensure
camel - 14284 : camel - ftp - fix file deletion in stepwise mode
updated the method call from ` withDefault ( searchBindDN , defaultConfig : : getSearchBindDN ) ` to ` withDefault ( searchBind
added assertions for empty result set in MapJoinOperator and modified conditional logic in HybridHashTableContainer to ensure proper handling of join results and
updated HTTPSPDYAsyncConnectionFactory to accept an AsyncEndPoint parameter and added methods to retrieve local and remote address , port , and server name
added extra " id " data to intent in multiple adapter classes to ensure proper identification of tweets in the intent
added proxy handling and improved web disconnect logic in HttpURLConnection to enhance proxy management and ensure proper response status handling
replaced ` int ` with ` AtomicInteger ` for ` _ numChildren ` and updated its usage in ` TraceContext ` and ` TraceContext
removed final modifiers from variable declarations in multiple files to improve code clarity and maintainability
disable a test in ValueTypeTests by setting the enabled attribute to false to improve test reliability by disabling the test
( chore ) camel - jbang : move resourcefactoryserviceimpl to kieresources interface
replaced ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` in multiple predicate classes to standardize the predicate ' s
replaced specific exception handling for ` AccountNotFoundException ` with a general ` Exception ` catch in multiple activities to improve error handling and provide clearer
added null check for witnessService before validating witness permission to avoid potential NullPointerException when witnessService is not initialized
updated the construction of ` taggedCol ` to use ` getExprString ( ) ` instead of directly accessing ` colExprMap ` to improve
added a check to ensure ` item . getJavadoc ( ) ` is not present before setting it to ensure that ` item ` is only set
rename ` holderMethod ` to ` holderMetadata ` and update related methods in ` CompiledICHolder . java ` , and add a new
replaced multiple calls to revalidate ( ) with revalidateWithAnimationSafety ( ) in Tabs . java to improve animation handling and
[ hotfix ] [ connector ] remove unsupported metricgroup exception in bulkformat
updated the calculation of ' y ' in the Polygon class to use a new variable ' oldX ' to improve code clarity and maintainability
updated the ` createCache ` method to cast ` null ` to ` Configuration < Object , Object > ` to ensure type safety by explicitly casting
added a check for non - empty stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java
refactor ShadowCookieManager to improve code readability to enhance maintainability and ease of understanding
added a configuration option for checking storage - based authorization permissions before dropping external tables to ensure backward compatibility with storage - based authorization for external tables
added a brace to a conditional statement in Stage . java and modified the position calculation in ProgressBar . java to improve code readability and ensure proper
sulong : cache byte endian support in llvmlanguage and platformcapability .
updated PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windows
updated initWebViewLogin method to accept a baseURL parameter and modified web view loading logic to enhance flexibility in handling web login URLs based on
corrected a typo in the exception message from " Paramter " to " Parameter " in CallableStatementHandler . java to ensure clarity
removed the required = false attribute from the @ RequestParam annotation in AuditEventsMvcEndpoint . java and updated the test method in AuditEventsMvcEndpoint
renamed ` ExponentialTimer ` to ` PreciseThroughputTimer ` across multiple files to improve clarity and consistency in naming conventions
fix flaky softbodytest by remove the softbody from the physic world
[ hotfix ] [ table - planner - blink ] make provider interface public
[ zeppelin - 5892 ] fix logging of exception in zeppelin hub client and websocket
add a test to ensure that the jingle do n ' t have a redundant namespace .
fix a crash when try to add a redplasma with a path that do n ' t exist .
added support for HTTP / 2 headers in BareResponseImpl and modified HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler
refactor conditionals in Remove . java for better clarity and functionality to enhance readability and maintainability of the code
updated line lengths and formatting in SimpleReport . java for consistency to improve readability and maintainability of the code
removed the option to ignore symbol files in ` JavapTask ` and added a new test class ` T6863746 ` to
renamed ` TickerDemo ` class to ` StreamingTickerDemo ` and updated related references to improve clarity and consistency in naming conventions
added null checks for contract and contract address in the transaction processing logic to ensure proper contract validation and prevent potential NullPointerExceptions during transaction creation
make sure input3d . createinput3d ( ) do n ' t create input3d for applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw a ParserException in scripttagpayloadreader
updated the ` getRepositoryFactoryClassName ` method to ` getRepositoryFactoryBeanClassName ` in ` JpaRepositoryConfigExtension . java ` to ensure proper
changed return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple rule classes to allow for
updated variable assignments from ' this ' to ' IOSGLES20 . x ' , ' this . y ' , and ' this . width
removed UploadPathActivity and related components from the codebase to streamline the upload process by eliminating unused components
modify return statements in SimpleTextFieldsReader to handle Docs _ ONLY index options to ensure accurate term frequency calculations based on index options
fix ( ctclass ) : fix bug with implicit constructor
added a check for OracleDatabase instances when populating validation methods in ColumnSnapshotGenerator to ensure that validation only occurs on Oracle - specific database instances
refactor Database class to improve code organization to enhance maintainability and readability of the code
refactor SpringApplicationBuilder to improve code organization to enhance maintainability and readability of the codebase
updated iterator assignment in PointInSetQuery . java to use ' this ' keyword for clarity to improve code readability and maintainability by
remove unnecessary substring operation in SchematicHandler . java to streamline code for better readability and maintainability
added a switch statement to handle specific collections types in AbstractCollectionAssert . java and updated CollectionAssert _ isUnmodifiable _ Test . java to improve
changed the enum declaration from static to non - static in ProcessExecutor . java to allow access to the Option enum from other classes
added a twitlonger confirmation dialog in Compose . java and modified ComposeActivity . java to handle it to improve user experience by
replaced the method ` toggleKeepInSync ( ) ` with a direct call to ` getFileOperationsHelper ( ) . toggleKeepInSync
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` in ` ImageUtil
added new classes ` ControllerCounter ` and ` DBCallback ` to manage MongoDB operations to facilitate tracking and management of MongoDB documents in
added a final modifier to the ticketId parameter in the deleteTicket method to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to initialize the application context with flyway configuration to facilitate the migration process
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in HashMap and added a new class ` OverrideIsEmpty `
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest version
updated the ` modify ` method in ` CompressionCodec ` and ` ZlibCodec ` classes to accept nullable ` EnumSet < Modifier > ` parameters
added null check for mainAttrs in LauncherHelper and improved resource management in TestHelper to ensure robust handling of missing main manifest attributes and
updated test class names from " Test " to " Tests " for consistency to improve clarity and consistency in naming conventions
make hotspotprofilinginfo . supportedcompiletype thread safe by synchronize access to it irtype .
pdfbox - 4892 : remove cloneable from cellcopypolicy , a suggest by valerybokov
added a resetIconLoadResult method to the FloatingIconView class and updated its usage in the Launcher class to improve resource management by
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated IconRecentsView . java to handle different screen orientations and adjusted margin dimensions to improve layout responsiveness based on device orientation and
deleted the AddAdapter . java file to the functionality was no longer needed in the project
[ hotfix ] [ runtime ] avoid indexoutofboundsexception in nonstaticlifter
modified the method signature of ` processSortCols ` in ` OpTraitsRulesProcFactory . java ` to include a ` boolean ` parameter to
[ java ] do n ' t rely on logwatcher . getlastevent ( ) to return - 1 when there be no entry .
added a print statement to print " < any > " in Java2TypeScriptTranslator . java to enhance debugging capabilities by providing clearer output
updated the SDK version from 4799589 to 4913185 in SdkConfig . java to ensure compatibility with the latest SDK versions
added a conditional check to set SPRING _ AOP _ PROXY _ TARGET _ CLASS to true if it is not already present to ensure
removed the singletonLock variable and its initialization in TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary logic
renamed ` responseClassCallback ` and ` forwardClassCallback ` methods to ` responseClassCallbackWithClass ` and ` forwardClassCallbackWith
refactor file writing methods to support appending to output files to enhance flexibility in file writing by allowing appending to output files based on specified directory
updated conditional checks in ` MavenExecutionContextView ` and refactored ` MavenRepositoryMirror ` logic in ` MavenRepositoryMirror ` to ensure
added a ` name ` parameter to the constructors of ` BuildRuleSourcePath ` and ` PathSourcePath ` classes and updated related classes to
updated redirect URI comparison logic in OAuth20CallbackAuthorizeEndpointController and added a test for operation clients with the same redirect URI in OAuth20Callback
refactor annotation handling by replacing EMPTY _ ANNOTATIONS _ ARRAY with AnnotationParser ' s toArray method to improve code readability and maintainability by
updated method calls in UserManagerCompatVL to use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawable
updated the default line separator description to specify LF or CRLF for output to improve clarity of the default line separator for better output formatting
fix bug in configurationmanagerutils . isimplementinginterface ( ) and add test for it
[ thymeleaf ] do n ' t escape quote in template
chore : update java and python dependency ( # 119 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added assertions for file contents to ensure that
refactor CountersReader to improve code organization to enhance maintainability and readability of the code
updated container type assignment in ` AllAppsRecyclerView ` and modified ` logDeepShortcutsOpen ` method to accept a ` View ` parameter
hbase - 25827 deprecate config key hbase . ipc . server . reservoir . initial . max and hbase
[ native ] fix npe in nativeworker
replaced the method ` getGenericParameterTypes ( ) ` with ` getAllGenericParameterTypes ( ) ` in ` Executable . java ` and `
refactor TestFSTs class for improved readability to enhance maintainability and ease of understanding
[ geot - 5892 ] fix input box height calculation for non - latex string
hbase - 25827 increase region split policy initial size for region split ( chunhui )
removed unnecessary model state reset and start loader in LauncherClings . java to streamline the launcher loading process by eliminating unnecessary state
removed initialization of ` keys ` and ` updates ` lists and initialized ` updatesAt ` directly to streamline the code by eliminating unnecessary
added a set to exclude Spring datasource beans in the SpringDataSourceBeanPostProcessor to ensure that only relevant Spring datasource beans are processed
added a call to storeUndoInfo ( ) in TableValuesView . java and removed null check for cb in TableValuesPanel . java to
camel - aws2 - kinesis : handle recoverable sdk client exception more gracefully .
refactor channel handling in VelbusSensorHandler to use a loop for processing channels to improve code readability and maintainability by reducing
disable localcacheselectorcode due to unfavorable benchmarks
added a test for illegal database names in IoTDBSessionSimpleIT . java and improved exception handling in PartialPath . java to ensure proper
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure new files are properly cleaned up after garbage collection
replaced ` desiredWorkspaceLeftRightOriginalPx ` with ` desiredWorkspaceHorizontalMarginOriginalPx ` and introduced ` getHorizontalMarginPx ` method
refactor code formatting in CharTokenizer . java for consistency to improve readability and maintainability of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 469 )
updated the value of XENSERVER _ NETWORK _ LABEL from " xenservernetworklabel " to " xennetworklabel " to ensure consistency
updated libGDX version from 1.5 . 5 and 1.5 . 6 - SNAPSHOT to 1.5 . 6 and 1
removed the private Set < String > metricNames and its getter method from SolrCore . java to streamline the code by eliminating unused
replaced ` URI ` with ` Path ` for working directory and absolute path in ` MavenManifestFactory . java ` to improve type safety and
replaced direct OS detection with a static final boolean variable to improve code readability and maintainability
refactor JdbcAggregationRepository to improve code organization to enhance maintainability and readability of the codebase
added a method to clear and add items to the slotList in the Frame class to ensure proper management of slot lists in the Frame class
initialize m _ predCount to - 1 in PredicatedNodeTest . java to initialize m _ predCount to a default value of - 1
added a ` mergeProperties ` method to the ` ConfigurationSpringInitializer ` class to retrieve and merge properties from the configuration to ensure that the
updated the ` setupLogging ` method to accept a ` org . slf4j . Logger ` instance instead of a ` Logger ` instance
replaced ` HashMap ` with ` LinkedHashMap ` for ` aliasToWork ` and its methods across multiple files to ensure consistency in data structure usage
added logic to retrieve the jdbcHandlerMap if it is null based on the type ' s superclass to ensure proper handling of class types in the
added debug logging to Hibernate , JPA , FlatFile , and JMS item writers for better traceability to improve troubleshooting
updated the parsing logic in LocaleUtils to handle trailing semicolons correctly to ensure proper parsing of locale range values without trailing semicolons
updated the handling of the close handler in VertxHttp2Handler and modified the server start method in Http2Test to ensure proper context management
make xssfevaluationworkbook . gettable ( string ) cache xssfevaluationworkbook . gettable ( string )
updated SchemaTextDetailType checks in BaseSchemaTextFormatter . java to ensure correct handling of primary key and unique index symbols to improve clarity
replaced instances of ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to align
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order for better performance
added a null check for the operator tree cloning in SkewJoinOptimizer . java to ensure that the operator tree is properly cloned before proceed
added a null check for the client ID before returning the registered client to avoid potential null pointer exceptions when the client ID is not provided
added a clear ( ) method call to AchievementList . field _ 187981 _ e in StatList . java to ensure proper
set default values for userName , productName , productVersion , driverClassName , and driverVersion in MutableDatabaseInfo and MutableJdbcDriverInfo to
updated string resource references from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog and
added functionality to read long data into a LongBuffer in ByteBuffersDataInput . java to improve performance by avoiding unnecessary operations on large data
updated variable names to include ' sec ' and ' nsec ' for consistency and clarity to improve readability and maintainability of the code
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection behavior on large object references to
added search bar visibility management in AllAppsContainerView to control the visibility of the search bar based on user preferences to improve user experience by allowing
[ hotfix ] [ config ] fix router feature to use route instead of router
added a null check for ' cur ' and ' next ' in LineChartRenderer to prevent potential NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` to handle page reloading functionality to enhance user experience by allowing users to reload the page after
changed log level from info to warn for various SQL entries in SQLManager . java to improve logging granularity for missing entries in the application
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type does not have a selected version
[ geos - 5396 ] fix geoserver extension not work ( # 5396 )
added a finalizer method to close the table in HiveHBaseTableInputFormat to ensure proper resource management during table closure
added a stopStatementExecutor ( ) method to JdbcConnector and HiveViewImpl classes to manage the execution of statement execution to ensure proper cleanup of
updated feature settings and generic type usage in DocumentFactory , XMLSAXHandler , and ElementHandlerTest classes to improve code clarity and maintain
replaced ` jdb . command ( JdbCommand . cont ( ) . waitForPrompt ( Jdb . APPLICATION _ EXIT , true )
added a method ` getType ( Uri uri ) ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enable retrieval
updated variable names in ExpressionThreadPoolManager for clarity to improve code readability and maintainability
updated the default HTTP port property from " port " to " vertx . httpPort " to allow dynamic configuration of the HTTP port based on
replaced ` addCaptureListener ` with ` addListener ` in ` Dialog . java ` to improve code clarity by using a more descriptive
updated the default batch size from a fixed value to a dynamic value based on available processors to improve resource management by allowing dynamic batch size based on
[ hotfix ] [ runtime ] log error when establish resource manager connection in task executor
refactor LambdaRewriter to handle null ClassFile and return a LambdaExpressionFallback if it is null to improve error handling and provide a fallback for
updated error message in IllegalArgumentException to include min and max values to improve clarity of error reporting for invalid limits
updated message handling methods to include an owner parameter in multiple state machine classes to ensure proper handling of telegram events based on the owner ' s
added new classes ` Cursor ` , ` Database ` , and ` Row ` to handle database operations in a structured way to facilitate
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
# 174 - enh : add ebeanserver . setbeanid ( bean , id ) - add ebeanserver . getbean
updated the xsl transformation method in RuleSetToDocs . java to use a dynamic method instead of a hardcoded string to improve flexibility in
replaced a single requestMatcher with a list of matchers in HttpSecurity . java to improve flexibility in handling multiple request matchers
added hashCode and equals methods to ContactResource class to ensure proper resource comparison and hashing functionality
move the getrequest ( ) and getresponse ( ) method from abstractajpprocessor to abstractprocessor
updated logging messages in FileManager . java for clarity and consistency to improve readability and maintainability of the code
added a tearDown method to TestIndexSearcher and reset mockControl in TestJdbcDataSource to ensure proper cleanup and reset of mock control
updated import statements in SyntaxTests . java for consistency and clarity to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes to improve code organization to enhance maintainability and readability of the connection management logic
fix for tika - 1369 : remove parserdecorator which be no longer support .
update fmlsecuritymanager to work with new version of minecraft .
removed redundant declarations of variables in AccountUtils , IndexedForest , and CustomPopup classes to improve code readability and maintainability by elimin
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
added a new test method ` testJsxComment ` in ` JsLexerJsxTest . java ` and modified ` Parser . java `
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for testing purposes
added error handling for missing Buck configuration in BuildEndToEndTest and updated assertions in CxxEndToEndTest to improve error reporting
added physical memory checks in TestStringBufferAndBuilderGrowth . java to ensure tests do not exceed the specified resource limit
deprecate conversionservice . share . convert ( ) in favor of conversionservice . convert ( )
added a success flag set to true in HiveMetaStoreClient . java to indicate success status during the operation
updated string comparison from ` = = " * " ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java
updated conditions in TimeLineCursorAdapter and TweetActivity to include " amp . twimg . com / v / " and modified related logic
added a @ Deprecated annotation to AreaReference . java to indicate that the class is outdated and may be removed in future versions
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
added assertions and modified reference kind handling in MemberName . java to improve code clarity and ensure correct reference kind management
changed the default value of __ submitKeyUpdates from " false " to " true " and added synchronization around the runChange method to ensure thread
added an else clause to the if statement in EditNodeTextField . java to ensure proper handling of mouse events in the input field
camel - 18443 : fixed bean not find when use static method in mock endpoint .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor exception handling in AgentRunnerTest to use a final modifier for the ClosedByInterruptException to improve code clarity and maintainability by
added ` getDescription ( ) ` method implementations in multiple classes and updated return statements to provide clearer descriptions to enhance clarity and maintainability of
replaced direct calls to ` activeGroup . faces ` with a local variable ` faces ` to improve code readability and maintainability by redu
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future updates
corrected the spelling of ' reentrantLock ' to ' lock ' in multiple files to improve code readability and maintain consistency in
updated the ` getBomReference ` method to include ` mavenPackaging ` as a parameter and modified related method calls to enhance flexibility in
updated back ( ) method to use evt . getComponent ( ) instead of a direct call to evt . getComponent ( ) to improve event handling by
refactor certificate verification logic in SASLAuthentication . java to improve readability and maintainability of the code
updated generic type annotations in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to enhance type safety and improve code clarity
replaced ` NutchConf . get ( ) ` with ` getConf ( ) ` in multiple files to ensure consistency in configuration retrieval across
remove the boards pane and update the selected stub handling in StubsController to ensure that the selected stub is only updated when the selected stub
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` variable
added null checks before setting time intervals for nodes and edges in ImportContainerImpl . java and updated assertions in ImporterGEXF2Test
updated the command line argument from " - logLevel INFO - serverPort " to " - serverPort " to simplify the command execution by removing unnecessary
updated error logging in FunctionRegistry to include the exception message to improve error reporting by providing more context in error messages
replaced RobotsHonoringPolicy with CrawlMetadata in DispositionProcessor . java to replace RobotsHonoringPolicy with a
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
use platform - independent file path in test to avoid test failure on window
added imports and implemented alternativePath method in ExpectNewDemo . java to handle potential runtime exceptions during file reading operations
updated the initialization method for the first filter in LogEntryParseTester to ensure the first filter is properly initialized before use
added protectionDomain parameter to the BufferAlignmentAgent method signature to enhance security by allowing access to protection domains
added a dispose method to properly release resources to ensure proper resource management and prevent memory leaks
added a configuration option to disable unsafe external table operations in Hive to ensure that external table optimizations do not affect data changes by external applications
updated the description of the Authorization header from " Uses basic authorization with ` base64 ( resource _ server : shared _ secret ) ` to "
updated wallpaper offset from - 30 to 0 in Launcher . java and Workspace . java to ensure the wallpaper is displayed correctly in the
updated return value in SybaseASADatabase and modified sequence retrieval logic in SequenceSnapshotGenerator and CreateSequenceGenerator to ensure proper handling of Sy
nifi - 5696 : do n ' t commit / rollback on cleanup if autocommit be set to false
added directory creation and validation for the parent directory in SnapPuller . java and corresponding test assertions in TestReplicationHandler . java to ensure
updated AppTargetId from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure correct identification of the
[ java ] : fix memory leak in framer . frame ( ) .
refactor constructor parameters in multiple classes to remove unnecessary parameters to improve code clarity and maintainability by standardizing parameter order
added an extended parameter documentation to the GenericUDFStringToMap class to clarify the use of multiple delimiters for key - value pairs in
updated the ` PlainFormatter ` class to use ` Instant . now ( ) . truncatedTo ( ChronoUnit . MILLIS ) ` instead of
updated timeout duration from 1000ms to 3000ms and refactored the close ( ) method to include a retry mechanism to improve resource management and
[ hotfix ] [ runtime ] remove reflection code from classloadingstrategyhelper
refactor Mockito class implementation to improve code readability and maintainability
updated debug log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the logging
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored to indicate that the test produces no sample results
updated the error message for IllegalArgumentException in GridLayout . java to ensure that rows and columns must be greater than zero to improve clarity and accuracy
[ wagoncart ] fix npe in decisionnode . tostring ( )
added functionality to sort BoundSheetRecords by BOF position in XLS2CSVmra . java and BoundSheetRecord . java to improve sheet
refactor calculations for average impulse and start thrust in ThrustCurveMotor . java to improve clarity and accuracy of thr
updated InputSystemJme initialization to include inputManager parameter to ensure proper input management for the input system
refactor conditional logic for setting the hash code field offset in UniverseBuilder . java to improve clarity and ensure proper handling of hash code
remove deprecate block . getmesh ( ) in favor of block . getmesh ( )
[ hotfix ] [ yarn ] rename keytabpath to localkeytabpath in yarnapplicationmanagerrunner
added option handling for empty word options in the LineReader and LineReaderImpl classes to improve flexibility in handling empty words based on user input
updated pushViewReplicaUpdates method to include writeCommitLog condition to ensure correct handling of commit logs during view replica updates
refactor clipboard handling logic in CaptureActivity and introduce a default button ID in ResultHandler and URIResultHandler to improve user experience by allowing
added a batch test method for batching functionality in JoinedTableTest . java to ensure proper functionality of batching operations in Hibernate
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate timestamp exceptions
removed the deprecated ` format ` option from ` CucumberOptions ` and updated its usage in ` RuntimeOptions ` and ` RunCuk
removed the save ( ) method call from PMS . java to streamline the code by eliminating unnecessary functionality
updated back key handling logic in ExtendedEditText . java to streamline back key event processing to improve code readability and maintainability
corrected the calculation of ` newCapacity ` in ` AbstractStringBuilder ` and added a new ` Capacity ` class with tests for ` StringBuffer ` and
replace ` goHome ( ) ` method with ` onNoteSaved ( noteTmp ) ` method in ` DetailFragment . java ` to enhance
added support for endnotes in XWPFDocument and updated related methods in XWPFParagraph and TestXWPFWordExtractor to support
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager and CasEventsReportEndpointTests to include client information during authentication events
added a test method ` testVersion ` in ` BridjOGRDataStoreTest . java ` to verify GDAL version information to ensure
added a new file ` Lifecycle . java ` to handle network errors in the application to provide a mechanism for managing network errors during application lifecycle
added error handling for 404 URLs in DeviantartRipper . java to improve robustness by avoiding potential errors during URL download
removed unused imports in BodyTubeShapes . java and RocketFigure . java to streamline code and improve readability by eliminating
added surface scaling logic based on RETINA flag and updated viewport and scissor calculations in PJOGL . java to improve rendering performance
auto - select create project offline if pub be unavailable
refactored DiskDocValuesConsumer to use BlockPackedWriter and adjusted value writing logic to improve performance and maintainability of the code
refactor DefaultRouteBuilder and DefaultRouter to use SortedSet instead of ArrayList for routes by status to improve data integrity by using a sorted set for
removed unnecessary data list and atomic increment in GoAwayTest . java to simplify code and improve performance by eliminating unnecessary data management
added property handling for Map and FluentSetter beans in ReflectionUtils . java and created corresponding test cases in EasyRandomTest . java to enhance flexibility
updated ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to use ` CharStreams ` for response handling and introduced a new ` HttpResponse ` class
updated fileUrl to remove the " noop = true " parameter and refactored related methods for clarity to streamline file URL handling and
updated logging statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity and accuracy of
added configuration options for image PDF conformance , PDF scaling , and output table table definition in the RtfDocumentSettings class to enhance flexibility in
modified the column addition logic to conditionally include the aggregate function based on the execution parameter to enhance flexibility in handling aggregate functions based on the
replaced ` LuceneTestCase ` with ` WithNestedTests . AbstractNestedTest ` in multiple test classes and added a cleanup method to
added functionality to enable or disable XCap server in the presence form to enhance user experience by allowing dynamic configuration of XCap server URI
ww - 4071 add a flag to indicate if a handler should throw an exception
added stopEditing method to CodenameOneImplementation , Display , TextArea , and AndroidImplementation classes to manage and stop text editing functionalities
[ flink - 10663 ] [ control - rate ] fix npe when no group attribute be set on a flowfile
renamed the parameter ` includeUndoModify ` to ` isNewComponent ` and updated related logic in ` ComponentConfigDialog ` , ` Rocket
fix a potential deadlock when send a message to the client .
added a check to ensure HTMLDataFlavorTest runs on both Windows and other operating systems to prevent tests from running on non - Windows environments
added SQL _ SERVER _ SNAPSHOT constant to TransactionIsolationLevel to support SQL server snapshot functionality
replace direct addition of newRecid to newRecids with a offer method that waits for the offer to complete to improve responsiveness by
use java . util . zip instead of deprecate jrecompat . getinstance ( )
added a null check for the command class before creating a new instance of RegisteredServiceImpl to prevent potential NullPointerExceptions when the command class is not
change default disk _ failure _ policy from best _ effort to ignore
removed public access modifier from method declarations in RipperInterface and RipStatusHandler classes to enforce encapsulation and improve code readability
do n ' t filter on ipv6 address in peerdiscoveryagent .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the code by eliminating unused functionality
updated import statements in PinotSegmentRebalancer . java to include ClusterDataCache and modified computePartitionAssignment method to include ClusterDataCache to
simonstewart : remove the ` ` delete ' ' method from the docker protocol , a it ' s no longer need .
simonstewart : make defaultseleneselecommand parse a little more robust .
added a MultipleAttemptsRule to the CreateGlossaryTests class to improve test reliability by allowing multiple attempts during test execution
replace references to ` $ ref ` with ` Components . COMPONENTS _ SCHEMAS _ REF ` in ` ModelResolver . java `
refactor EntityDeletedEvent to utilize JsonUtils for JSON serialization to improve code clarity and ensure proper serialization of the source data
added a check for the " gop " key in the FormatConfiguration class and updated media handling in DLNAMediaInfo and LibMedia
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate testing of return type printing
added a ReentrantLock for thread - safe access in the ParseConfigUtils class to ensure thread safety during updates to the multi - dimension
added AcquireReleaseColumnsSegmentOperator handling in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management by acquiring and releasing
danielwagnerhall : remove @ ignore from firefoxprofiletest
updated the return type of getSystemBars method to Map < String , Map < String , Object > > instead of Map < String , String
do n ' t add dead bug to project stats
bugfix # 118181 - disable the import panel for GTK
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code clarity and maintainability
added a check for empty byDays in ScheduledAction to return a date in the future if no byDays is set to ensure that scheduled actions
refactor upload button handling to use a menu item instead of a button to improve code readability and maintainability by using a more descriptive
rename multiple classes related to message evaluation and security to improve clarity and consistency in naming conventions
added the ` loadMetaData ` method implementation in ` MeXBTExchange . java ` and ` RippleExchange . java ` classes to
added a custom JSON serializer for Hadoop Writable types in CrawlDbReader to enhance serialization capabilities for Hadoop IO data types in the CrawlDb
remove testjaspicbasicauthenticator . testerrequest because it ' s not use anymore .
added a service and configuration PID to the @ Component annotation in MDNSDiscoveryService . java to facilitate dynamic configuration management for the
added null check for messageItem in ChatViewerFragment . java to avoid potential NullPointerException when messageItem is null
refactor ForkJoinPool initialization in TestBPIndexReorderer . java to utilize a custom ForkJoinWorkerThread to improve thread management
updated assertions in RoleCommandOrderTest to check for both DATANODE and NAMENODE roles to ensure that dependencies contain appropriate blocker roles for
added methods to restore and dedup local table information in PartInfo . java to ensure proper handling of TableInfo during serialization and deserialization
standardized spacing in conditional statements across multiple Java files to improve code readability and maintain consistency in formatting
added transformation matrix for the logo sprite in BitmapFontTest . java to ensure proper rendering of the logo sprite during rendering
[ hotfix ] [ python ] ignore built - in aggregate in streamphysicalpythongroupwindowaggregaterule
[ java ] remove the need for a volatile field in endpointstate and remove redundant code in gossiper .
added a method to retrieve unreachable token owners in Gossiper . java and updated references in StorageProxy . java to ensure proper handling of
[ geos - 5892 ] do not change to multiplication for x = ( x ^ 2 ) = ( x ^ 3 )
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to ensure proper content type is set based on saved request
changed static variables to instance variables and added null checks for local environment and display in XToolkit . java to improve code clarity and ensure
refactor RecommenderJob and AbstractJob classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` Object ` with ` ReentrantReadWriteLock ` for managing locks in ` EnvironmentImpl . java ` to improve concurrency handling
added a test for reading an identity provider in a zone using a token to ensure that the identity provider behaves correctly in the specified zone
replaced a job with an ExpireJob in ObjectTypeNode . java and added null check for timestamp in PointInTimeTrigger . java to
removed unused import of org . jasig . cas . authentication . principal . Service in SendTicketGrantingTicketActionTests . java to
[ rocketmq - 5892 ] send heartbeat on rebalance push change ( # 5892 )
[ cairo ] add property cairo . detached . mkdir . mode ( default 509 )
[ java ] do n ' t keep stable when there be a slow follower .
change default label pattern from [ authors3 ] [ year ] to [ auth ] [ year ]
refactor dependencies in DBinaryDescription and DLibraryDescription to utilize CxxPlatforms for parsing time dependencies to improve code clarity and
removed the ` initialized ` flag and updated the ` oAuthService ` management logic in ` GoogleCloudAPI . java ` , and added a `
camel - 1745 : fixed file completion on dynamic done file name
added a new configuration option ` reopenReaders ` in ` SolrConfig ` and updated the condition in ` SolrCore ` to enable reopening readers
[ freeplane ] add dialect attribute to mapwriter .
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition class to use an interface instead of an anonymous class to improve code readability and maintainability
replaced ` TermQuery ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` to improve search performance by using a
removed unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
refactor the ` providesUploadController ` method to use ` application . getSharedPreferences ( " direct _ nearby _ upload _ prefs " ,
added support for " SYSIBM " and " SYSDUMMY1 " modes in the database compatibility logic to ensure compatibility with different database
refactor logging statements in TraceGatewayEnvironmentPostProcessor for improved readability and consistency to enhance code clarity and maintainability by standardizing
added logic to track and return the last process ID in POIXMLProperties to ensure accurate identification of properties based on the last process ID
[ geotiff ] check for non - finite nodata in geotiffreader . read ( )
refactored error handling in CliDriver and updated session ID generation in SessionState to improve robustness and maintainability of the code by ensuring
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and refactored error handling in ` MockRestAdapterTest `
added a default implementation for the ` selectByRuleIdSet ` method in ` RuleConditionMapper ` to provide a flexible list of rule
added a new method ` addExitDescription ` to ` ExitStatus ` and updated exception handling in ` AbstractJob ` and ` AbstractStep `
fix the multiblock crash when click on the player .
renamed the ` columnFamily ` variable to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to clarify the purpose of the
removed unnecessary import statement from PlotConfiguration . java to streamline code by eliminating unnecessary dependencies
refactor ` DefaultIOSInput ` to use ` UIAlertController ` instead of ` UIAlertView ` to improve code readability and maintain
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure the correct
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more d
updated assertions in AdvServiceTest to check for null messages to ensure that the service correctly handles null messages gracefully
replaced ` potentiallyConvertMapKey ` with ` potentiallyEscapeMapKey ` and simplified key handling in ` MappingMongoConverter . java ` to
updated Timber logging syntax in NearbyMapFragment . java to improve code readability and maintain consistency in formatting
camel - 14850 : camel - jbang - make it easy to know if it be a deprecate or not .
added null check for terms in FuzzyLikeThisQuery and implemented a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to accept a boolean parameter for displaying a tabular list to enhance flexibility in displaying application links based on
[ ds - 3852 ] use identifierservicefactory . getinstance ( ) instead of dspace . getservicebyname ( null ,
replaced occurrences of ` bytes . length ` with ` bw . getLength ( ) ` in ` VectorColumnAssignFactory . java ` to ensure
changed the return type of the ` getDisplayScript ` method from abstract to non - abstract and added a default implementation that returns ` null ` to
replaced instances of ` keyToPress ` and ` keyToRelease ` with a single ` sequence ` variable in ` RemoteWebDriver .
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
added synchronization to wait for active interfaces in NetworkConfigurationWatcher . java and null check for dbusConn in NetworkManagerListenerImpl . java to ensure
fix bug # 45538 - handle nested object in hssfworkbook . getembeddedobjects
removed import of jogamp . common . os . elf . Shdr from ShaderNodeLoaderDelegate . java to eliminate unused dependencies
replaced instances of " hostParams " with " roleParams " in AmbariManagementControllerImpl . java to ensure consistency in variable naming
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font types
replaced glStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
refactor LiveTvGuideActivity to use a private Calendar instance for current guide start and update related date handling to improve code clarity and
updated method invocation in MockGateway . java and added new classes CommonParentTest . java and ChildA . java to improve method accessibility and
pdfbox - 4892 : load libfreetype . so and libfontmanager . so from libffreetype . so so
updated variable names and refactored the handling of multi - variable functions in FunctionParser . java to improve code clarity and maintainability by
loop safepoint elimination : do n ' t allow guard for unsigned range .
fix a bug in typeframemodelingvisitor . isinstance ( ) for reference type .
added a LocalizedString class to encapsulate localized string representation to improve code readability and maintainability by centralizing localized string handling
added a ` disableClasspathSearch ` property and its getter / setter in ` ServerConfig ` , and modified the condition in ` DefaultContainer `
change variable declarations from non - final to final and use Arrays . copyOf for array copying to improve immutability and performance of the code
updated the default number of retries from 0 to 2 in Reference . java and AnnotationPropertyValuesAdapterTest . java to increase the number of retries
added support for loading and processing settings in TexturePacker to enhance flexibility in configuring texture packing settings
added text views for uploaded images and used by wiki in AchievementsFragment to improve user experience by providing clearer progress bar display
added mock and logger methods for annotation processing round and parsing and processing round in TranslatingJavacPhaseTracerTest . java to enhance logging
added a new ` CategoryInfo ` class and updated the ` generator ` URL in ` CategoryInterface . java ` to include the ` categoryinfo
updated assertions for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error messages
added accessibility support to the TaskbarStashController by utilizing AccessibilityManager to improve accessibility control during taskbar visibility
added handling for the ' ^ ' character in the GenericSignatureParser to ensure proper exception handling for NoSuchElementExceptions during signature parsing
updated access flags handling in ClassVisitorDriverFromElement and added new tests for generic interface signatures , enums , and abstract enums to ensure proper functionality
added null checks for input parameter in IntervalFilter and LowpassIntervalsSource classes to ensure input is not null to prevent potential NullPointerExceptions
added tests for ` entrySet ( ) . iterator ( ) ` and ` hasNext ( ) ` methods in ` MapInterfaceTest . java ` to
added a serialVersionUID field to the TreeMap class to ensure proper serialization and deserialization of the TreeMap class
fix imagedata . createnotfoundexception for image with created time of second .
grobcov : use f2m instead of grobcovf2m in castranslator
added import for EncryptionUtils and called deleteKeyForAccount for private and public keys in AccountRemovalJob . java to ensure keys are deleted for
[ java ] make keep - alive header configurable for jdk and netty
skip postjoinmapoperation if there be no interceptor and lite member join
mondrian : remove standard inlining processor that be no longer support .
removed the ` spillEnabled ` parameter from several constructors and methods in ` BaseHybridHashTable ` , ` BinaryHashTable ` ,
replaced direct access to ` System . getenv ( ) ` with a new method ` envMap ( ) ` and ` processEnv ( )
update defaultactionmapper to work with the late version of openymphony
added import for SerializableMode in Mockito . java and adjusted formatting in PluginSwitch . java to enhance serialization support and improve code readability
fix field injection point to be set to null if it be declare nullable .
added isolation level handling in SQL queries and introduced a new isolation level flag in the Mode class to improve compatibility checks and ensure proper handling of isolation
replaced references to ` HiveConf . ConfVars ` with static final constants in ` HiveConnection . java ` to improve code readability and
added an ` isCacheable ` method to ` GlobalOrdinalsWithScoreQuery ` that returns false to indicate that the query is not
added a new file TestStrangeControl . java that implements a thread that executes StrangeControl . test ( 42 ) to demonstr
updated the output file format from " % s . json " to " % s . jsfile " and " % s . jslib "
added selectionStart and selectionEnd fields with their respective getter and setter methods in ShadowEditText . java to enable tracking of selection start and end
refactor grpc server initialization to use a try - with - resources statement and improve server shutdown handling to ensure proper resource management and prevent resource leak
added a new method ` use ( String path , Class < ? > routeClass ) ` to the ` Jooby ` class and
added a null check for the fst variable in FreeTextSuggester . java to prevent potential NullPointerExceptions during lookup operations
updated line separator handling in ` T4975569 . java ` and improved error handling in ` T6729471 . java `
added ABI writer class loading functionality in JavacInMemoryStep . java to ensure proper handling of ABI annotations during processing
added a suppression annotation for BooleanMethodIsAlwaysInverted in PubRoot . java to suppress warnings related to BooleanMethodIsAlwaysInverted
added checks for thread shutdown status before scheduling tasks in PullMessageService to ensure that scheduled tasks are only executed when the service is not stopped
refactor EnergyEndpointer class to improve code organization to enhance maintainability and readability of the code
refactor the handling of displayed columns in ComponentPresetChooserDialog to improve clarity and maintainability to enhance code readability and maintainability by
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase to clean up the code and improve maintainability
fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the files Constants . java and DistanceUtils . java to remove unused files to streamline the codebase
refactor key parsing in RandomPartitioner to use substring method to improve code readability and maintainability by eliminating unnecessary pattern compilation
[ gr - 17454 ] fix fail build - time initialization of fallback linker .
fix : add support for inline rolebinding creation
added logging statements to UaaSessionCookieConfig for session cookie configuration to improve debugging capabilities by providing detailed session cookie configuration details
updated the calculation of the file name in HotseatFileLog . java to use the current day of the year instead of a fixed
fix checkstyle issue in io . netty . util . blocking . subscribe ( ) .
added error handling for invalid options in JavapTask . java and created a new test class T8033711 . java to ensure
replaced calls to ` collect ( toList ( ) ) ` with ` toList ( ) ` in multiple Java files to improve code readability and
[ hotfix ] [ runtime ] do not log exception in taskdriver for shutdown
[ hotfix ] [ network ] enable tiered storage for hybrid result partition
replaced a constant ` SUCCESS _ CODE ` with a method ` isNotSuccessStatus ` in multiple services to improve code readability and maintainability
[ cuboc ] enable gl20 by default
removed unnecessary check for VoidType in JimpleBody . java to simplify code logic for better readability and maintainability
refactor OutputMacroExpander to replace DefaultSourcePathResolver and SourcePathRuleFinder with a new Arg implementation to improve code clarity and
[ hotfix ] [ test ] fix wrong assertion in simpletestinclustersupport
added additional conditions to check for both " / build / " and " \ \ build \ " in the duplicateWords validation logic to ensure that
[ # 6638 ] instructor : instructor : instructorfeedbackresponsecomment : add comment to question and response
removed unnecessary whitespace in the return statement to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java containing a class with methods to escape objects and validate equality of objects to ensure correct behavior of
replaced direct stream reading with IOUtils . skip and read methods in FilePreviewService . java to improve code readability and maintainability by using
added interceptor handling and error logging in ConnectionPool , DataSourceProxy , and TestSlowQueryReport classes to enhance connection management and improve error reporting during
changed catch block from Exception to Throwable in CoreContainer . java to handle potential runtime exceptions more gracefully
hbase - 10663 fix the bug in lrublockcache that cause block to not be evict by blockcache . getblock ( )
removed unnecessary check for zero task count in RecentsView . java to streamline code by eliminating unnecessary checks
added a instance configuration change listener in HelixBrokerStarter . java and increased sleep duration in HelixServerStarter . java to ensure
added CoinmateMetadataServiceRaw and CoinmateStatic interfaces and implemented remoteInit method in CoinmateExchange . java to retrieve exchange
improve error message when systempath contain $ { basedir } or $ { project . basedir }
pdfbox - 4892 : do n ' t overwrite object key if they do n ' t match
add displaydata to ptransform . setdisplaydata ( list < itemspec < ? > > )
replaced ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat ( (
added a security property to disable MD2 and RSA key size requirements in ClientJSSEServerJSSE . java to enhance security by restricting
added checks for sub - commands and sub - command groups in OptionData . java to ensure proper validation of option data for sub - commands and
updated module - info . java files for mmm and ppp modules to ensure consistency and clarity in module documentation
added error handling and improved error management in the ensureConnection method to ensure proper error management and provide clearer feedback when server errors occur
removed redundant assignment of sCheckingEvents in LauncherInstrumentation . java and ensured mFinished is reset in LogEventChecker . java to
refactor exception handling and resource management in FileSinkOperator . java to improve resource management and error logging to enhance error handling clarity and maintain
added diagnostic output to the return statement in SchemaGenerator . java to improve debugging by providing diagnostic information during execution
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to ensure compatibility with the
refactor DataSourceMonitorTests to improve test structure to enhance maintainability and readability of the test code
added a HashSet to track loaded resource paths and modified the resource scanning logic to improve performance by avoiding duplicate calls to scan methods
replaced the retrieval of the test instance with a null check and improved error logging to enhance robustness by handling potential null values gracefully
added a null check for the object before processing the response in RoutingInBoundHandler . java to handle cases where the object may be null or
added support for a nullable IP address in EkeyConfiguration and refactored logging in EkeyUdpPacketReceiver and EkeyHandler to
updated imports in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , Deserializer , and Serializer to use ArrowBuf instead of Netty
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP header and body buffers in HttpConnection to ensure proper handling of HTTP responses with invalid header and body lengths
refactor MultiTimeout to use an AtomicReference and AtomicLong for the upstream variable to improve thread safety and clarity in handling subscription states
improve leveledmanifest . getcompactioncandidate ( ) to handle overlapped sstables
added a test annotation to the TestOrcTimezone1 class to ensure proper test coverage for Orc timezone functionality
refactor conditional logic to use a dedicated method for matching metric and timer substrings to improve code readability and maintainability by reducing duplication
added error handling for JSON processing in PinotSegmentRestletResource . java and simplified return statements in TraceContext . java to improve robustness
modified the JTable class to handle null superclass cases and added a new test class for LookAndFeel functionality to ensure proper handling of null
added a conditional check for the existence of the shell file before adding it to the argument list to ensure proper handling of environments that do not have
updated the number of subscriptions from 10 to 1 in the deleteWithoutSubscriptions method to optimize the deletion process by reducing the number of subscriptions
replaced List with LinkedHashSet for managing test instances in MockitoExtension and added a test for mock injection in JunitJupiterTest to
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
added transactionDisable ( ) method and modified fileMmapEnableIfSupported ( ) method in BTreeMapTest . java to improve transaction management
refactor iterator initialization in SortedIntList and add a default constructor in SortedIntListTest to improve code clarity and ensure proper iterator behavior
added JMXHelper unregistration in DefaultRemoteProxy and changed exception handling in JMXHelper to improve resource management and enhance error handling clarity
[ hotfix ] [ runtime ] set default writebuffer size of rocksdb to 64mb
removed an unused parameter from the constructor call in Style . java to simplify the constructor call by eliminating unnecessary parameters
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure that the message is not encoded in the
removed logging of JSON graph in SamzaRunner . java to streamline the pipeline execution process by eliminating unnecessary logging
[ fix ] HelloAudio . java : fix wrong positioning of the audio .
refactor LoopRotateBadNodeBudget class for improved readability to enhance maintainability and clarity of the code
updated ` convertToMongoType ` methods to include ` TypeInformation < ? > typeInformation ` parameter across multiple classes to enhance type conversion functionality by allowing
[ inputbox ] do n ' t display i for complex input box
[ java ] fix sendkeytoactiveelement to return an empty array instead of an array
added methods to convert a BufferedImage to a scaled instance using a loop to improve image scaling efficiency and prevent potential errors during image scaling
removed duplicate methods ` extendArgumentCheck ( ) ` and ` extendWrapStore ( Engine engine ) ` from ` DBMaker . java ` to
update the shift state when the first key press .
removed detection of detected activity in multiple classes to streamline activity handling and maintain backward compatibility
updated import statements from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket
removed the import of Buildable from AaptPackageResources . java to streamline dependencies by eliminating unnecessary dependencies
added comments to indicate unused variables in multiple Java files to clarify the purpose of the code in the codebase
updated the exception message in WebSocketUpgradeHandler to include the status code of the upgrade protocol to improve clarity of error reporting for invalid upgrade protocol
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintainability
refactor Mockito class implementation to improve code readability and maintainability
refactor ownership check logic in Merge . java to improve clarity and maintainability of the code logic
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline code by eliminating
replaced ` com . sun . speech . freetts ` imports with ` de . dfki . lt . mary . unitsel
refactored ` stripQuotes ` method to use ` PlanUtils . stripQuotes ` in ` BaseSemanticAnalyzer ` and ` PartitionSpec
refactor rendering handling in DLNAResource and Request classes to improve clarity and maintainability of rendering context management
added a new list to store resolution and remote artifact repositories in DefaultPluginManager to improve repository management by including resolution group and project artifacts
camel - 14850 : fix the test error of cxfrsproducerclientfactorycachetest
refactor PhysicsClient to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failures
added a new File instance creation in ZipFile . java to facilitate file handling in the ZipFile class
added a deprecated method handleAll ( ) to the TryType class to indicate that the method should no longer be used in favor of a new
[ core ] make channel uid non - final by default .
added StackTraceUtils class and integrated logging functionality in GenericDAOImpl , ReflectionUtils , and ForumServiceImpl to improve stack trace management and facil
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution by eliminating unnecessary tests
fix ( sql ) : fix syntax error in unparse function
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to use a Multimap instead of a Set
updated variable name from ` supressWarnings ` to ` suppressWarnings ` for consistency to improve code readability and maintainability by using a more
updated JsonTreeReader to handle unexpected JSON elements and added a corresponding test in JsonElementReaderTest to improve error handling for unexpected JSON elements and ensure
added option handling for unexpected arguments after " -- " in TestCommand to ensure proper error reporting when using an external runner
added methods to dedup and index Solr functionality in SolrDeleteDuplicates and SolrIndexer classes to enhance functionality for managing Solr URLs in the application
[ hotfix ] [ table - planner ] add support for blink planner in streaming mode
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure proper database state management during tests
updated progress percentage handling and added disposal logic in Progress . java , and set default value in RSSReader . java to improve user experience by
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent is not a valid file
added methods for writing documents and closing POIDocuments in IOUtils . java to improve resource management by ensuring POIDocuments are
updated print statements in JavaBuild . java to include newline characters for runOptions , sketch name , and exportClassPath to improve readability of output
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for ` _ root `
added generic user search functionality in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance LDAP authentication
added default ports handling in NettyHttpServer , DefaultRouteBuilder , DefaultRouter , and FilteredRouter classes to manage default HTTP and server
updated status handling in SnmpTargetHandler and refactored related tests in AbstractSnmpTargetHandlerTest and StringChannelTest to improve cl
update instructorfeedbackeditpageaction to only include instructors with submit privilege
added @ Incubating annotation and @ Deprecated annotation in AvailableSettings . java to indicate that these methods are outdated and should not be used in
refactor path extraction logic in FileResolverImpl . java and add WarFileResolverTest . java to improve path handling and ensure compatibility with
updated the string format for newFlushedSize in DocumentsWriterPerThread . java to include documentstores in the output to improve clarity
use getunlocalizedname ( ) instead of getfunc _ 149739 _ a ( ) in dirt example
swapped the values of ` stripWhitespaceX ` and ` stripWhitespaceY ` in ` ImageProcessor . java ` to ensure consistency in whitespace
increased the maximum number of locks from 1000 to 1000 in FeedRefreshUpdater . java to improve performance by reducing unnecessary locking
updated the parameter from ` false ` to ` exactSearch ` in ` TsFileSequenceReader . java ` and added a test for the iterator
remove unused parameter from csvsaveservice # makeresultfromdelimitedstring ( )
added preferred size adjustment for the pane in NavigationShareTab to ensure the pane displays the correct row height based on the preferred size of the list
replaced OffsetAttribute with a State variable in BeiderMorseFilter and added a test for custom attributes in TestBeiderMorseFilter
refactor Upnp - related classes to improve code organization to enhance maintainability and readability of the codebase
fix warp burst not be collided at the right block .
added a new test method ` toJson ` to ` JsonTest ` and modified import statements in ` JsonTest . java ` to improve test coverage
refactor MutableContextDataSupplier for improved clarity to enhance maintainability and readability of the code
updated exception handling from ` Exception ` to ` Throwable ` and added a warning log for ` LogWatcher ` loading to improve error handling and provide
updated KubernetesMockServer constructor to use HTTPS parameter instead of true to enhance security by allowing HTTPS connections
[ gr - 13539 ] use correct stamp for foreign call in defaultjavalongloweringprovider .
updated response methods in DefaultServlet and DefaultServletTest to support both GET and POST requests to ensure proper handling of HTTP methods and enhance test coverage
tika - 1186 : use locale - dependent decimalformat in tika - tika - metadata - tika - tiff
replaced exception throwing with response exception setting in ShowFileRequestHandler . java and added a new test method in ShowFileRequestHandlerTest . java to
added try - catch functionality to the ReflectorClassWriter and corresponding test cases to enhance exception handling capabilities in the Reflector framework
added a ` clamp ` method to the ` Vector ` and ` Vector2 ` classes to enhance the functionality of the ` Vector ` and `
added client details handling and modified access token creation in ChainedTokenGranter . java to improve token management by ensuring requested scopes are properly
refactor BC _ instanceof implementation to improve clarity and maintainability of the code
added a Logger instance and modified save flags in EditorBottomSheetBehavior . java to improve logging capabilities and ensure proper handling of save flags
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and ensure compatibility with the
hhh - 15827 - fix classcastexception in nativequery
added a WeakHashMap to track font AAT status in SunLayoutEngine . java to improve thread safety when accessing font AAT data
replace intbigarray with intarraylist in typedset
simonstewart : do n ' t use ` ` session / : sessioid ' ' , use ` ` session / :
[ hotfix ] [ runtime ] fix checkstyle violation in brokerrequestutils
refactor InjectorBuilderImpl to use a map for managing instances in the correct order to improve clarity and maintainability of instance management in the
refactor RawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to use buildTarget . getBasePath ( ) instead of getAbsolutePathToBuild
added null check for ' val ' before parsing to avoid potential NullPointerException when ' val ' is null
fix a problem with the jabber not be able to connect to the jabber server when the jabber connection be close .
updated DEFAULT _ LOAD _ FACTOR from 0.67F to 0.67 in IntHashSet . java to correct the default load factor for
added a method ` getAllDataTypePhysicalVariations ( ) ` in ` VectorizationContext ` and updated related classes to utilize it to improve
move htmlassettranslator and stringsresourceloader from com . google . zxing to com . google . zxing .
updated conditional logic for handling vertical bar layout in OverviewState . java to ensure correct button behavior based on overview actions and shelf removal
added import statement for JPA ' s Entity annotation in BaseActivityEventEntity . java to facilitate the use of JPA '
added tracing functionality to NavBarSwipeInteractionHandler and TouchInteractionService , and modified SYSTEM _ TRACE to false in TraceHelper to enhance
added a new file ` InvalidOptions . java ` to test Java program execution with invalid options to ensure that the application handles invalid options gracefully and
added a condition to log an error when the number of supported display bounds changes to improve error handling for inconsistent display states in the application
refactor ` OAuth20UsernamePasswordAuthenticator ` to use a centralized ` OAuth20Utils ` method for extracting client ID and client secret to
set ` _ unwrapServletException ` to true in ` ErrorPageErrorHandler ` and ` AsyncContextTest ` to enable unwrapping of servlet exceptions
added logic to set the status of ShortcutInfo to DEFAULT when a specific condition is met to ensure the shortcut status reflects the current state
camel - 10650 : fixed seda component to use unbounded queue size . thanks to jbellis for the patch .
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App . java and implemented them in Kernel . java to facilit
added HttpClient configuration to ThirdEyeApplication to enable HTTP client integration in the application
added a sort parameter to JobInstanceFetchRequest and updated BatchSize method in JpaJobPersistenceImpl to support sorting functionality in job instance fetching
updated the cancelCryptoFacilitiesOrder method to return null instead of throwing an exception for invalid orders to improve error handling and ensure proper order cancellation
ggb - 1341 do not hide keyboard when click on av
llvmbean : use llvmbean . memcpy ( ) instead of llvmbean . memmove
removed unnecessary whitespace in BindLdapAuthenticationHandler . java to improve code readability and maintainability
[ web ] fix the tooltip not be block in web .
updated DefaultDateTypeAdapter to accept a configurable time style instead of a default date format to enhance flexibility in handling different date formats in the
updated playerSet string formatting from " < UID : " to " ( " and removed unnecessary parentheses to enhance code readability and maintain consistency in
added a check for empty lists in the List class to ensure proper handling of empty lists and avoid potential NullPointerExceptions
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper handling of CommandException during command execution
updated the ` getLikeExpression ` method to include a boolean parameter for handling regex patterns to enhance flexibility in expression filtering based on the presence
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl to provide lifecycle management for the component
modified the runChild method to set the default locale based on available locales to ensure the correct locale is set based on available locales
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method to improve code readability and maintainability by reducing duplication
camel - 9569 : camel - osgi - blueprint : fix camel - test - inf / blueprint / testroutebuilderref in o
updated assertions in TestExecuteStreamCommand to check for the presence of " fffffffffffffffffffffffffff " in the flowFile attribute to
refactored the ` returnTypeSubstitutable ` method to accept a ` Warner ` parameter and updated type comparisons accordingly to improve clarity
added a new enum ` ThrottleType ` and modified the ` processThrottled ` method to handle different throttle types to improve flexibility in
simplified the assignment of ' pixel ' in ColorBleedEffect . java and added a conditional check in SpriteBatch . java
updated annotations in mmm and ppp classes to improve clarity and consistency in annotation handling
added a new interface ` Model ` and updated ` Sheet ` and ` Workbook ` classes to implement it to implement the ` Model ` interface
camel - 18443 fixed the test error of camel - http - bridgeparser
added a boolean flag ` clearEntityManager ` to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control entity management
added null checks for ` info ` and ` intent ` in ` InstallShortcutReceiver ` , ` Launcher ` , and ` LauncherModel
added a constructor to TwoDimensionalCollectionValuedMap that accepts a boolean parameter to enable customization of the collection type in the core map node
updated the exchange specification host and exchange name from " btc - e " to " wex " in WexExchange . java to reflect the
added null checks for columnReaders and child in OrcEncodedDataConsumer and modified setBuffers method in EncodedTreeReaderFactory to ensure robustness
added a null check for files in SegmentInfos and implemented a test for opening IndexReader after deleting a directory to ensure that a NullPointerException is thrown
updated date parameter in HSearchSortHelperImpl and refactored test methods in FhirResourceDaoR4SearchWithElasticSearchIT
refactor the return statement to store the value in a variable before returning it to improve clarity and prevent potential division by zero errors
updated limit validation from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 17743 : camel - rout - optimize routescollector to reduce log overhead .
[ java ] fix incorrect calculation of start time for hl chunk .
updated package names and imports from ` com . apache . lucene . xmlparser . builders ` and ` NumericRangeFilterBuilderTestCase `
[ hotfix ] [ stream ] fix the checkpointing of statefuloperator
removed null check before setting bitmap shaders in Area and Line classes to simplify code by eliminating unnecessary null checks
refactor Blockchain class to improve database existence checks and error handling to enhance code clarity and ensure proper initialization of blockchain data
trim whitespace from the matched string in SQLPlusSupport . java to ensure consistent formatting by removing unnecessary whitespace
[ java ] make apr connector async so it do n ' t hang .
pdfbox - 4892 : remove unneeded code , a suggest by valerybokov
added health check metrics for broker status in PinotControllerHealthCheck . java and updated the checkHealth method in PinotControllerHealthCheck . java to
set the visibility of shared avatars to GONE in LocalFileListAdapter to hide the shared avatars view to improve user experience by
simonstewart : remove @ clientbundle . source from mebisresourceresources
replace ' > = ' with ' < = ' in condition checks across multiple classes to improve code readability and maintain consistency in comparison operator
added a log level check before executing a command in LogInterceptor . java to ensure that command execution is only executed when the log level is fine
replaced CountDownLatch with an assertion for finished spans in EventBusTracingTestBase . java to improve test reliability by ensuring spans are
refactored QueryParser to use Locale . getDefault ( ) directly and added getter methods for locale to improve code clarity and maintainability by
change to use a linkedhashset instead of a hashset to maintain order
jbrules - 1395 : fix bug in rulebase . getruleset ( ) for beta node constraint
added a new class ` OcspUnauthorized ` and modified ` OCSPResponse ` to handle ` UNAUTHORIZED ` case to improve error handling and
replaced a fixed sleep duration with a dynamic wait loop that checks if the server is already running to improve responsiveness by preventing potential
added support for tracking open connection counts in SourceCounter and related classes to enhance monitoring capabilities for active connections in the application
make executionstrategy . execute ( ... ) public so it can be use from other class .
refactor the ` createDefaultJavaPackageFinder ` method to return an ` ImmutableSet < String > ` for source roots to improve code clarity and
replaced OutputWriter with PrintWriter in ScriptExecutable . java to improve output formatting for better performance
updated the file creation logic in FileSourceTextLinesITCase . java to use a random UUID for the temporary file name to ensure unique file
added handling for DataTable instances in JRubyStepDefinition to ensure proper processing of DataTable instances in the step definition
updated visibility parameters in SearchImagesRenderer . java and refactored image retrieval in ApacheHttpClientMediaWikiApi . java to improve code clarity
doc : fix typo find by codespell on fossies . org
updated error message formatting in FormulaParser . java to improve clarity of error reporting for formula parsing errors
added getter and setter methods for the bind address in the WebSocketClient class to allow configuration of the bind address for the WebSocket connection
[ java ] clean up archive and aeron directory in consensusmoduleharness .
refactor width and height handling in WidgetGroup to use a unified setSize method to improve code readability and maintainability by reducing duplication
refactor sessionFixationAttribute comparison to use Boolean . valueOf for clarity to improve readability and maintainability of the code
fix issue with startonechannella not be call with the correct edge option
added linear backoff coefficient methods to ChromeBinary and updated sleep duration in ChromeDriver to improve backoff management and ensure accurate sleep duration
added HttpMethod and HTTPRoute parameters to the ClientResponseWrapper constructor and updated related methods to enhance response handling by allowing dynamic HTTP method and route retrieval
[ hotfix ] [ table - planner - blink ] fix nullpointerexception in precompactedrow
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to improve rendering
added logic to allow ` ` on ' ' or ` ` not sure ' ' question in ` ` contribution question ' ' form
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
added SuppressFBWarnings annotation to KafkaExactlyOnceSink and modified KafkaRecord class to remove Serializable interface to streamline code by eliminating
added PGConnection to the proxy instance in PooledConnectionImpl and implemented a test for PGConnection in BaseDataSourceTest to ensure proper connection handling
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging levels from warn to info and changed log level from warn to trace in TokenAuthenticationHandler . java to improve log clarity and provide
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class should no longer be used in future development
added topology update handling in AmbariManagementControllerImpl , AbstractServerAction , and FinalizeKerberosServerAction classes to improve command reporting and
added ITERATOR and END constants to NamedListCodec and implemented reading and writing methods in TestNamedListCodec to improve code clarity and
[ hotfix ] avoid npe in migrationmanager # assigncompletelylostpartitions
added schema inclusion rule to ApiExample . java to enhance schema accessibility in API documentation
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test accurately reflect
[ geot - 5892 ] fix polygon creation with invalid coordinate sequence .
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to retrieve base and dimension names
added setDebugEvaluationOutputForNextEval method to HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes to enable
test : migrate testmodule and refactoringtest to junit 5 ( # 3396 )
removed the ` false ` parameter from the ` ExoPlayerProfile ` constructor in ` LegacyMediaManager ` and updated the condition in ` Play
added a return statement in DynamicStyleBar . java to prevent further execution of the method
added SLF4J logging for database property settings in Utils . java to facilitate easier debugging by providing insights into the state
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if the type is a boolean in MethodEmitter . java to ensure proper handling of boolean types in string promotion
rename llvmstackframenuller to llvmachineframenuller and make it public
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added unit test to verify transaction - aware cache cache proxy
added a method to calculate a bounding box based on the number of vertices and position attributes to enhance the mesh ' s bounding box calculation for better
added a new ` TargetHashFunction ` enum and refactored hash function usage in ` TargetsCommand . java ` to allow customizable hashing
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of configuration properties
added high light color and alpha settings in ListViewMultiChartActivity and modified highlight drawing logic in BarChart to improve visual appearance and visual
removed the mapping of tmpPg to sgPathPlanMap in ClusterPlanRouter . java to streamline the code by eliminating unnecessary dependencies
[ hotfix ] [ test ] fix the test error of infinispanremoteproducerit
added file locking functionality in MavenArtifactFetcher and refactored dependency fetching logic in MavenDependencyResolver to improve resource management and ensure proper file deletion
updated fragment shader format in SpriteBatch . java to conditionally include GL _ ES precision to ensure compatibility with OpenGL ES rendering features
changed the type of ` servers ` and ` tables ` from ` SortedSet ` to ` Set ` in ` RSGroupInfo ` and ` Test
added a try - catch block to load the JspPage class and modified the logging level to debug if debug is enabled to improve error handling and
updated CustomAnalyzer and TestCustomAnalyzer to improve version handling and added a dummy version aware token filter to enhance code clarity and ensure compatibility with
added a test for retrieving package archive information in ShadowPackageManagerTest to ensure correct retrieval of package information from package archive information
replaced calls to ` method . invoke ` with ` MethodUtil . invoke ` and added package access checks to enhance method accessibility and ensure
added import statements for ProjectConfigurationStartEvent and TaskStartEvent in GradleBuildService and Main classes , and modified progress listener in Main
removed synchronized block from AndroidWebDriver . java to improve performance by reducing unnecessary synchronization
do n ' t throw poolinitializationexception if initializationfailtimeout be set to 0
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` Net ` class to simplify
changed the ` isNative ` field to be transient and modified the ` addEntry ` method to use a default value of ` false ` to
[ hotfix ] fix checkstyle violation in centrypointcallstubmethod
rename ruleenablehandler to ruleenablementactionhandler for clarity
fix javadoc warning in javax . servlet . jsp
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to include more descriptive messages to improve debugging clarity by providing clear
[ hotfix ] [ table - common ] fix typo in test
added null check for repository model in UsersPanel . java to ensure robustness by preventing potential NullPointerExceptions during repository access
added support for font file extensions " . otf " and " . OTF " in SunFontManager . java to enhance font handling capabilities
refactor AnnotationMatcher to improve type matching logic to enhance clarity and accuracy of type matching logic
updated error message from " OFF " to " SEVERE " in Grep . java to improve clarity of error reporting for better debugging
added a check for debug logging before logging messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when logging is not enabled
do n ' t add test class to the exclude list if it ' s empty .
added a condition to check if moving to the default screen when the home intent is handled to ensure that the default screen is moved to the default
updated maximum bitrate from " 110 " to " 30 " in configuration to increase the maximum bitrate for better performance
replaced the method ` getOptions ( ) ` with a direct iteration over ` optionsMap . values ( ) ` in ` CommandLineParser . java
trim whitespace from the description return in MutableDatabaseProperty . java to improve code clarity by removing unnecessary whitespace
updated the output filename in XOMParserTest . java to remove unnecessary slash to streamline output path for better readability and maintainability
do n ' t print process pid in error log ( # 1396 )
added getLoadedMusic ( ) and getLoadedSound ( ) methods to MusicLoader and SoundLoader classes to provide access to loaded
removed unused imports and updated type casting in OnBeanCondition . java to improve code clarity and ensure proper type handling
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording functionality for testing purposes
set the selected state of lrPauseButton to false in CPUFeature . java and MemoryFeature . java to ensure that the pause button is not
refactor preference handling by replacing ` accountsPrefCategory ` with ` mAccountsPrefCategory ` and introducing ` createAddAccountPreference ` to
do n ' t send ` ` available ' ' presence to the client - side
replaced the initialization of StringBuilder with a conditional initialization based on utflen to ensure StringBuilder does not exceed integer limits for improved performance
added property values to WebEndpointTestApplication configuration in WebApplicationContextRunner and ReactiveWebApplicationContextRunner to disable metrics export when metrics export is disabled
refactor InterruptedException handling to improve code readability and maintainability
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the codebase
refactor connection logic in ConnectionCheckOperation . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
added a check for ` Map ` type in ` ArgumentArrayMessageMapper ` to ensure proper handling of ` String ` values when the target type
added a check for ` IndexableDSpaceObject ` before accessing its parent object in ` SolrServiceCommunityCollectionItemFilterPlugin . java
replaced the addition of AuthenticatorActivity to sExemptOfPasscodeActivites with a direct intent flag setting to improve user experience by allowing
refactor : deprecate patternparameterconfigurator in favour of template .
modified the ` beginDraggingWidget ` method to return a boolean indicating success or failure to improve the handling of widget drag - and - drop
added JUnit @ Ignore annotation to TestPackedInts . java to mark tests as ignored due to LUCENE - 4488
added a null check for the root variable in DynamicStyle . java to prevent potential NullPointerExceptions when processing components
add the ability to save and save the confusion matrix in the test
corrected spelling of last _ sample _ ok - > last _ sample _ ok
added unit tests for ` getConnectedDevices ` , ` getConnectionState ` , and ` removeDevice ` methods in ` ShadowBluetoothHeadset
corrected a typo in the method name from " # autowire " to " # autowired " in PropertyBindingSupportTest
added " clone " method to the objectMethods set and introduced a finalizer method in ResultObjectProxy . java to enhance the handling of object
added null check for counters object in IntegrationTestBigLinkedList . java to prevent verification failures when counters object is null
[ jdwp ] return not _ implemented error code when unable to get instance info
updated the ` setRegisteredServiceFilter ` method to include a ` serviceId ` check to ensure that the registered service matches the specified service ID to
added null check for getActivity ( ) in PhotoFragment . java to prevent potential NullPointerException when accessing getActivity ( )
[ hotfix ] fix checkstyle violation in logging
added stringType property and its getter / setter methods in DatabaseAdaptor and modified access modifiers in JDBCSessionDataStore to enhance flexibility by allowing custom
updated UIMAUpdateRequestProcessorTest to use " suggested _ category " instead of " language : english " and modified the test method to
refactor thread name handling by introducing ` updateThreadName ` and ` resetThreadName ` methods in ` SessionState ` and ` Hive
refactor TaskletAdapter to improve code organization to enhance maintainability and readability of the code
[ dmn - 2200 ] dmn : fix evaluation context for dmn decision table
added glFlush ( ) call in TextureMap . java and set defaultEnabled to true in SplashProgress . java to ensure texture map creation is
added tooltip text for the showCGCP checkbox to improve user interface clarity by providing a more descriptive tooltip
replaced ` getTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory
add text to the action ' s presentation if it ' s not null
ggb - 1342 fix for spreadsheet label not work in some case
replaced ` intValue ( ) ` with ` doubleValue ( ) ` for ` BRIGHTNESS _ FACTOR ` in ` BindingConstants .
[ scm ] fix parsing of history entry without a specific branch
added a new parameter ` isAdmin ` to the ` createUser ` method and implemented ` listUsers ` and ` isUserIsAdmin ` methods in `
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor , and created a new test class
[ dynatrace ] fix type inference error in dynatraceexporterv2
updated method signatures in Context and Response classes to use ' task ' instead of ' runnable ' to improve clarity and consistency in method signatures
add miss setcapabilitiesspongebuilder ( ) method to the mixinitemstack class
[ hotfix ] [ test ] fix test failure in lifecycleutilstest
added validation checks for contract types in Wallet . java and modified contract retrieval in GetContractServlet . java to ensure only valid smart contracts are processed
added new package - info . java files for various packages and modified module - info . java files to organize the code structure and improve organization
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop for node addition to improve concurrency handling and ensure
added a HashSet to track duplicate JavaFileObjects and modified test execution logic to improve handling of duplicate JavaFileObjects and enhance test execution flexibility
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to improve flexibility in
added a new parameter ` addNewUserParameters ` to the ` LoginServerTokenEndpointFilter ` constructor and modified the handling of login parameters to allow
added a new constant ` C _ KEY ` and modified language checks in ` LanguageFactory ` and ` CPPParserTokenManager ` to support
replaced ` ThreadPoolExecutor ` with a single - thread executor in ` BuckEventBus ` and added a new class ` MoreExecutors
added HTTP headers for cache control and expiration in the LoginService and FormAuthenticator classes , along with assertions in ConstraintTest to ensure proper handling of
added exception message to the error logging in VoiceManager . java to provide more context in error reporting for better debugging
updated import statements and modified test suite names in HSSFTests . java and TestEmptyDocument . java to improve clarity and consistency in
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
refactor output retrieval in TestCommand . java to handle null output cases to improve robustness by preventing potential NullPointerExceptions
added ExternalResourceControlPriority imports and set access controllers for URI resolution in Java2DRenderer to enhance access control priority for URI resolution in the
added a try - catch block to handle ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to prevent the build from failing on certain fonts on Windows machines
updated HotspotThreadMBean to be final and modified main method to throw an exception to improve thread CPU time validation and ensure proper exception handling
added checks for empty comments in TabsAndIndentsVisitor . java to ensure that whitespace only occurs when there are comments to process
updated assertions in TestTriggerIntegration to use greater than 100.0 instead of 5.0 to ensure accurate validation of collection rates and shard rates
updated equality checks to be case - insensitive for path , author , and ID in multiple classes to ensure consistency and accuracy in string comparison across different
removed the ` getString ` method from ` ShadowBundle ` to streamline the code by eliminating unnecessary methods
updated time formatting logic in TweetActivity to account for military time settings to ensure accurate display of date and time based on locale
do n ' t create process session if there be no connection
refactor focus request logic in DetailFragment . java to improve code readability and maintainability by encapsulating focus request logic
updated classpath handling in App . java to ensure proper formatting of file paths to prevent potential errors in file path resolution
make sure we do n ' t create a new array for each solve call
added import statement for org . springframework . integration . core . Message in GenericMessage . java to utilize the Message interface for improved
updated SQL queries in PostgresConnector and refactored join method in TaskAttempt and MapReduceJobHistoryUpdater to improve code clarity and
updated file selection logic in AquaFileChooserUI . java to ensure the selected filter is only set if it does not already contain the
[ java ] fix a potential deadlock in p2p transport manager
updated the method to return a string representation of Boolean values in ArrayPtg . java and added a test for it in TestArrayPtg
updated import statements in PGtokenizerTest . java to use specific assertions instead of wildcard imports to improve code readability and maintainability
refactor variable handling in Java2TypeScriptTranslator for improved clarity and functionality to enhance readability and maintainability of the code
added PostgreSQL sequence handling for auto - increment columns in AddAutoIncrementChange . java to ensure compatibility with PostgreSQL ' s auto - increment functionality
modified the byte reading logic in DataInput . java to ensure proper handling of negative byte values and improve readability
removed assertions for VerticalPhysicalPixelSpacing and HorizontalPhysicalPixelSpacing in ImageParserTest . java to streamline test coverage by eliminating unnecessary
updated the way the parent is retrieved in Component . java to ensure proper retrieval of the parent component
refactor import statements and formatting in multiple Java files to improve code readability and maintainability
replaced ENGINE _ finish ( ) calls with ENGINE _ free ( ) and added ENGINE _ init ( engine ) in NativeCryptoTest . java
added a new method ` iteration ` to multiple controller classes and updated event firing logic to improve iteration handling and ensure consistent event firing across controllers
updated HttpContent handling in FormDataHttpContentProcessor and NettyStreamingFileUpload to properly release resources to ensure proper resource management and prevent memory
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are deleted during recovery operations
added a check for " twitter : / / " URLs in BrowserActivity to launch the activity if it contains " twitter : / / " to
added a client instance and a method to await the host status in DeploymentGroupTest . java to ensure the test waits for the host status to
updated logResult method parameter from false to true in VisibilityController . java to enable logging for list labels functionality
updated the MaxAutoRetries configuration from 0 to 25 in RestTemplateRetryTests . java to increase the maximum number of retries for better reliability
added @ Override annotations in StandardTypeMapperComponent . java and removed System . out . println in TranslatorSupportTest . java to ensure proper method
added support for a new resource type " fraction " in the ResourceLoader and Converter classes to enable handling of fraction resources in the application
removed confirmation check for file writing in BasicFrame . java to streamline the code by eliminating unnecessary confirmation logic
added retrieval of tag groupId and artifact ID in findNewerDependencyVersion method to ensure correct retrieval of dependency versions based on resolution results
hbase - 25827 namespacestatemanager should throw quotaexceededexception if the number of table in the namespace exceed the
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the codebase
[ gr - 13434 ] fix a bug in testfuzzpreloop . java
added a check to ensure f0 is non - negative in HTSVocoder . java to ensure f0 is non - negative and prevent
removed exception handling for database catalog retrieval and added null checks for primary and foreign key columns to improve robustness and prevent potential NullPointerExceptions
refactor : make b2cconverter thread - safe
added functionality to allow empty pages in the workspace based on user preferences to improve user experience by preventing unnecessary operations on empty pages
added a warning log message about the deprecated cucumber - needle version to inform users about using cucumber - cdi2 or c
replaced ` TestActivityWithAnotherTheme ` with ` Resources . newTheme ( ) ` in ` ShadowThemeTest . java ` to
updated error messages in VerifyFast . java to use Arrays . toString ( ) for better readability to improve code clarity and maintainability by
# 113 - do not migrate unknown column in history for mariadb
added type checking for propertyNode in CodeGenerator and introduced ScriptFunctions for Proto and SetProto checks in Global to ensure proper handling of property
updated the shuffle method to include a random seed in TestFilterDirectoryReader . java to improve randomness by using a random seed for readers
added conditional logic to determine the display name based on the user ' s name to enhance user experience by providing a more informative message based on
updated the path formatting in CookieRetrievingCookieGenerator to use a default value if it is blank to ensure a non - blank path is used
updated closing braces in multiple Java files to improve code readability and maintainability
updated backup count check from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated pageNumber comparison logic in ValidationResult . java to ensure correct comparison logic for non - zero pageNumber values
added a null and equality check for focusedWidget in UIDropdown . java to ensure that focusedWidget is not null and matches the current instance
fix checkstyle issue in io / entity / soundsutil . java ( # 1188 )
refactor ApplePackageDescription to utilize AppleCxxPlatformsProvider for retrieving AppleCxxPlatform flavors to improve code
add a test case for show ololo from format tab - separated with names and types in ClickHouseStatementTest . java to ensure correct
rename ` onConnect ` method to ` onAccept ` in ` ServerSessionListener . java ` and ` AbstractHTTP2ServerConnectionFactory . java
fix typo find by codespell on fossies . org , a suggest by valerybokov
added a new file TestGetLoggerNPE . java to implement logging functionality using Java AWT access to facilitate testing of Logger
added a ConcurrentHashMap to manage concurrent access in PathSharingContext and removed sharedMap initialization in ScriptedProcessor and ScriptedDecideRule to
[ gr - 4329 ] remove unnecessary try / catch block and use compilerdirectives . castexact to get field index .
added a pattern to determine if a next value is using a " NEXT VALUE FOR " or " NEXTVAL FOR " in NextValExpression to
add link to resources . md in unsupportedfeature error message
improve performance of boundedlocalcache . clear ( ) by reduce write buffer size
added Leverage _ Level parameter to QuoineExchange and implemented order direction property in QuoineNewMarginOrderRequest to enable leverage
added bound initialization for property descriptors in PropertyDescriptor . java and created unit tests for property binding validation in Test7192955 . java to ensure
replaced ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` Lwjgl
added a check to reset the buttonsAwatingRelease property if it is not null to ensure that the parent component ' s buttonsAwatingRelease
fix linecell height calculation for empty wrap width
removed unnecessary spaces in XSLTErrorResources _ it . java to improve code readability and maintain consistency in formatting
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
danielwagnerhall : use string . format ( ` ` % s ' ' , ... ' ' ) instead of string
replaced the method ` getNamespaceContext ( ) ` with ` getNamespace ( ) ` in ` StaxXmlPullParser . java ` to simplify
added support for nested joins in multiple test classes to enable testing of nested joins in the application
server : allow root admin only to query by root admin
added a check for ` JavacFileManager ` in ` SourceFileManager ` and modified the constructor of ` CompletionTaskProcesor
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest ' s MatcherAssert
use util . createhandler ( ) instead of create a new handler for each renderer .
fix ( tcp ) : fix symbol file offset calculation
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the test output and improve readability
removed the ` Reflection ` class and its references from ` jooby . internal . guice ` and ` jooby .
refactor ThreadlessExecutor to use private methods for tracking the ' finished ' state and ' waiting ' state to improve code readability and maintain
refactor error handling in DateTimeFormatter and add new test cases in TestDateTimeParsing to improve error handling clarity and ensure proper handling of null arguments
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and update related method references to improve clarity and consistency in naming con
added a new class T7034495 with generic interfaces in mmm Types . java and ppp T7034495 . java
replaced a ' do ' loop with a ' while ' loop in LotsOfEvents . java to improve code readability and maintainability
refactor conditional checks in TransclusionDecideRule . java for clarity to improve readability and maintainability of the code logic
remove micronaut . version . printmicronautversion ( ) since it be no longer use
added unit tests for the Print _ Area formula in TestBugs . java to ensure correct handling of formula names in Excel records
updated MindIconFactory to conditionally retrieve the description based on the presence of a leading slash to ensure proper handling of descriptions when the name
modified the ` onHomeIntent ` method to accept a boolean parameter indicating if the internal state is handled to enhance intent handling by allowing different state
replaced direct usage of ` getPreferDependencyTree ( ) . orElse ( false ) ` with a local variable ` preferDependencyTree ` to
added ` showDetails ` method to multiple activities and updated ` FileDetailFragment ` to accept an ` activeTab ` parameter to enhance file detail
updated function names from " $ apply " to " apply " across multiple files to standardize method naming conventions and improve code readability
added randomization logic to the MinimalEncoder and updated test sizes in HighLevelEncodeTestCase to improve encoding efficiency and ensure proper handling of
updated string formatting in SourceBuilder . java for better readability and consistency to enhance clarity and maintainability of the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure data is updated when data changes are detected
removed the method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection . java ` to streamline the code by eliminating
updated type checking logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to ensure correct type handling and improve test coverage for
chore : remove unused private getter from defaults3crtasyncclient
updated error messages in doDudPasswordTest for corrupted stream out of bounds length checks to ensure accurate validation of stream - out of bounds length
improve the error message when the collection size be incorrect
fix a bug in the graphbuilderphase that do n ' t handle graalinternalerror
mow - 285 fix for image with no size
refactor SQLXML class to improve code readability to enhance maintainability and ease of understanding
added a ` limit ` parameter to the ` getOrderBook ` method and updated related method calls to include a limit parameter to enhance functionality by allowing
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` in multiple files to standardize exception handling to use a more
added StreamReadConstraints to StandardDataFlow to enforce maximum string length limits to improve data integrity by preventing potential StringIndexOutOfBoundsException
updated the method for retrieving engines from the configuration to default to an empty string to improve flexibility in handling engines by providing a default value
rename ` FullIterator ` to ` WheelIterator ` in ` TimerWheel . java ` and update imports in ` TimerWheelTest
improve error message when custom annotation be miss
[ hotfix ] [ test ] fix flaky localchunkprovidertest
changed the visibility of the uncomplete check list menu item from true to false to prevent the menu item from being displayed for better user experience
refactor DefaultResultSetHandler to improve result map resolution and introduce a new Contract class with associated tests to enhance code clarity and ensure proper
added null checks for defaultHome and unregistering the receiver if it is not null to ensure proper handling of null cases and prevent potential NullPointerExceptions
removed the @ VertxGen annotation from PumpImpl . java to streamline code by eliminating unnecessary annotations
removed unnecessary type casting for FileDisplayActivity in FileDetailFragment and OCFileListFragment to simplify code and improve readability by eliminating
[ hotfix ] trim trail and leading space in configattributeeditor . setastext ( )
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , and SelfClassWithAuxiliary files to improve code clarity and maintain
[ gr - 17454 ] fix unnamed module lookup for jdk9 +
added conditional logic to set ` relKind ` based on the presence of " pg _ " prefix to ensure correct handling of " SYSTEM TABLE "
chore : deprecate tier _ enterprise _ plus in v1.15 . 0 ( # 377 )
updated the RQST field description and case handling in ThriftHiveMetastore . java and HiveMetaStore . java to correct the
added a new module - info . java file that defines module exports and requires for the com . speedment . runtime . core module to provide
added logic to handle flushing and interested states in SslConnection to improve connection state management and ensure proper fill handling
updated Log4j2LogDelegateFactory to use LogManager for logger retrieval and added NoExceptionInInitializerErrorTest to improve logging functionality and
updated VM handling logic in ExecutionEnvironment and added server VM checks in Test7029048 and Test7029048 to ensure
refactor multiple operation classes to improve code organization to enhance maintainability and readability of the codebase
replaced null with " org . postgresql . ssl . LibPQFactory " in PGProperty . java to ensure compatibility with the latest PostgreSQL
disable the test in TestInterProcessSemaphoreEdges for now to address a failing test case that is currently failing
added sorting functionality for theme keys in EditableResources . java to ensure consistent ordering of resource names and improve code readability
added a new file ` OSvTerminal . java ` and updated ` TerminalFactory . java ` to support the OSV flavor to enhance terminal
added additional file extension checks for " . gs " , " . gr " , and " . grs " in ClassType . java to
replaced ` HashMap ` with ` TreeMap ` for combined vectors in ` DrillTestWrapper . java ` to ensure consistent ordering of vectors in
added a condition to check for the size of names and values in XPathEntityProcessor to ensure that the loop handles cases where names and values are
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
changed ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` to instance variables and methods in ` ShadowTelephony
refactor standardmessageresolver to make it easy to configure whether to perform the resolution or not
updated class and constructor type declarations to use ` asSubclass ( ) ` for ` TraceMethodVisitor ` , ` TraceClassVisitor ` ,
added a new ` LoggingAuditService ` class for user authentication logging to facilitate auditing of user authentication failures in the application
added nullability annotations to temperature parameters in TadoZoneStateAdapter and modified temperature validation logic in AirConditioningZoneSettingsBuilder to ensure
fix : do n ' t generate proxy for abstract class
camel - 10663 : camel - http - allow to configure proxy host and port via system property .
updated the maximum encoding version from " 1.1 " to " 1.2 " in TemplateDTO . java to ensure compatibility with the latest
added a call to ` StaticProperty . jdkSerialFilter ( ) ` in ` System . java ` to facilitate serialization filtering
add the pool size to the log when pool mode be enable .
replaced ` forceFinished ( true ) ` method with ` forceFinishScroller ( ) ` method in multiple animation classes to simplify scroller
updated the parameter name in ensureRealtimeClusterIsSetUp method from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` to
added methods ` isError ( ) ` and ` error ( ) ` to ` ValidationReport ` and updated error handling in ` DisallowValidator `
refactor inline QSB handling in InvariantDeviceProfile to use closestProfile instead of displayOption to improve code clarity and maintainability by
updated ` createClassPath ` method to include ` throws Exception ` and replaced URL encoding with ` URLDecoder . decode ` to improve error handling and
updated regex patterns in the @ Given annotation to allow for wildcard characters to improve flexibility in matching method parameters
added null checks for ` retinaProp ` and ` image ` before setting it in ` PGraphicsJava2D . java ` to avoid
replaced hardcoded timeout values with a variable ` timeoutMs ` in multiple waitUntil calls to improve code readability and maintainability by using
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to ensure the environment uses the correct Docker image configuration
added multiple calls to System . gc ( ) in KnowledgeAgentTest . java to ensure proper resource management during test execution
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replaced ` createHardLink ` with ` copyFile ` in ` SnapshotTaker . java ` to improve file copying functionality to ensure that the
rename method ` appendToDescription ` to ` getDescription ` in multiple classes to improve clarity and consistency in method naming conventions
[ pytorch ] make sure all the ndarrays be in the same device
added a conditional check for ` Xml . Document ` before visiting XML visitors to avoid unnecessary processing when ` xml ` is an instance of `
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` in ` NotesHelperTest ` , ` GeocodeHelperTest `
added new rules for GasLimitRule , DifficultyRule , and ParentGasLimitRule in CommonConfig . java to ensure proper handling of gas
changed the visibility of the setupData ( ) method from public to private and added a static block in BaseAssumptionsRunnerTest . java
renamed the variable ` autocommit ` to ` runInTransaction ` in multiple files to improve clarity and consistency in naming conventions
added null check for listener in TripleServerStream . java to prevent potential NullPointerExceptions during stream processing
updated import statements to include Site . BaseURL in JobManagerOptions . java and RestartStrategyOptions . java to ensure proper URL formatting for task failure
added a new test method ` testIssue154 ( ) ` to ` SelectTest . java ` to validate SQL parsing and deparsing of discount
refactor Common class to improve code organization to enhance maintainability and readability of the codebase
refactor Launchable . java to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
refactor StreamExecDeduplicate class to improve code readability to enhance maintainability and ease of understanding
[ hotfix ] [ kafka ] log warn when send kafka message to topic
added ` setPersistentPropertyAccessorFactory ` method to ` SimpleElasticsearchPersistentEntity ` and overridden ` isImmutable ` method in ` SimpleElasticsearchPersistent
updated the return type of the ` setCoord ` method in ` GeoCoordSys1D ` and ` GeoSegment3D ` classes to
added scroll and swipe event handling logic in AskGestureEventsListener . java to improve gesture scrolling behavior for better user experience
improve ngramestimator comparison by compare key instead of value .
updated imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to align
updated method calls in StatsLogCompatManager to retrieve folder icon properties to ensure accurate retrieval of folder icon information for better tracking
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file TestSkeletonPredicates . java to implement and test skeleton predicates in the IR framework to facilitate testing of nested loops
refactor equals and hashCode methods in SelectionHighlighter . java for improved clarity and consistency to enhance code readability and maintainability while
added a new ` StringResultConverter ` class and refactored ` AsmRuntime ` and ` AsmUtil ` to utilize it
camel - 19751 : camel - test - infra - camel - marketdata and camel - test - infra - camel -
updated the condition in waitForSingleObject from ! = 0 to = = 0 to correct the logic for waiting for a single object to ensure that
added null checks and capacity setting for the buffer in the setInBuffer method to ensure proper buffer handling and prevent potential NullPointerExceptions
updated the assertion in TestSolrDiscoveryProperties to use File . separator for data directory comparison to ensure consistent file path formatting across different operating systems
updated OS detection logic for Windows and macOS in AutoUpdaterServerProperties . java to ensure compatibility with newer and pre - 10.15 operating
updated Lock class to use a string for the lock file name instead of a File object to improve clarity and flexibility in managing lock file
updated appIcon reference from " android . widget . TextView " to " apps _ view " and changed the method for retrieving visible bounds to improve
updated references from ` this ` to ` ClientDatagramEndPoint . this ` in ` ClientDatagramEndPoint . java ` to ensure consistency and
updated the SQL query in ` GET _ STEP _ EXECUTIONS ` to use " order by " instead of " oreder " to
updated button handling in LwjglInput . java to return - 1 instead of Buttons . LEFT and added checks for unknown buttons to
added tests for approving and rejecting claimed tasks in TaskRestRepositoriesIT . java to ensure that users can submit and reject claimed
replaced instances of ` logger ` with a static final logger in ` OpenIdServiceResponseBuilder ` , ` GoogleAccountsServiceResponseBuilder ` , and
updated the expiration time calculation in SsoAccessTokenProvider and modified test method visibility in SsoAccessTokenProviderTest to improve accuracy of token file expiration
[ geos - 8274 ] skip test that fail on github ( # 8274 )
added mock methods for alarm suppression requests in GreetResourceMockedTest . java and updated OciMetricsCdiExtensionTest . java
rearranged conditional checks for defaultCloseOperation in JFrame . java to improve code readability and maintainability
refactor database connection handling in LibraryScanner . java to ensure a valid connection is used before executing the ANALYZE SAMPLE _ SIZE command
replaced the use of ` metricsContext ` with a direct reference to ` solrMetricsContext ` in the ` SuggestComponent ` class to
refactor file and folder counting logic in OCFileListFragment . java to improve clarity and organization of output strings based on file and folder
change default value of HashKnownHosts from " yes " to " no " and modify loadKeys method return type to Iterable < KeyPair > to
refactor SourceVersion class to improve code readability to enhance maintainability and ease of understanding
added a new test class ` ThreadFactoryTest ` for testing thread factory functionality to ensure that the ` MyThreadFactory ` class correctly handles thread
refactor lockPeriod retrieval to utilize dynamicStore for dynamic property support to improve flexibility in handling lock periods based on dynamic properties
added a new instance of TicketModel in EditTicketPage . java to initialize the TicketModel instance
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow the feature to be enabled for
updated constructors in multiple assertion classes to include a self - type parameter for better type safety to enhance flexibility and maintainability of assertion classes
added a new menu item ` MENU _ QUOTE ` and updated its usage in ` TweetActivity . java ` to enhance the user
jmeterthread : do n ' t call interruptlock . lock ( ) if it be already acquire
corrected the spelling of ` decryptOnlyCodecFormat ` and refactored related methods in ` MediaCodecAudioRenderer . java ` to
added a conditional check for the result before offering and closing the consumer in ServerHTTP2StreamEndPoint . java to ensure that failure handling is
updated German and French XSLT error messages from " Stiller Modus " to " Silent - Modus " and " L '
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread - safe access to the CheckpointsCleaner class
replaced ` Observable . OnSubscribeFunc ` with ` Observable . OnSubscribe ` in ` MockRestAdapter ` and ` RestAdapter ` to
removed unnecessary else block in ComponentPresetManager . java to streamline the code for better readability and maintainability
added a new configuration option for unique column names in Hive and updated assertions in TestJdbcDriver and TestJdbcDriver2 to use this setting to
mary : fix for ticket # 1396 : replace audio effect do n ' t work for all domain .
added session validity check and exception handling in Session . java , along with a corresponding test in SessionHandlerTest . java to ensure that invalid sessions
hhh - 15827 - remove unused exceptionhelper . getrootcause
updated the key pair generator initialization from 256 to 255 in JceX25519Domain . java to ensure compatibility with the latest cryptographic standards
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41Post
[ hotfix ] [ runtime ] add debug log for empty checkpoint range header
added support for RSA / ECB / OAEPPadding algorithm parameters in the OperatorHelper to enhance security by allowing OAEP algorithm to
replaced instances of ` DARWIN _ AARCH64 ` with ` MACOS _ AARCH64 ` across multiple files to ensure compatibility
log a warning if we ca n ' t resolve the source
simplified the condition for returning transport values based on the operating system ' s is _ UNIX status to improve code readability and maintainability
updated error handling in FileUploadUtils and modified file handling in UploadRefreshDeleteIntegrationTest to improve error reporting and ensure proper file management during segment
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` in multiple classes and added memory freeing functionality to improve memory management and
updated the USE _ PIPELINE _ DOWNLOADER constant from false to true to enable the pipeline downloader functionality
removed unnecessary ZONE _ OFFSET setting in SimpleDateFormat . java and added a new test class Bug7130335 . java for time zone handling
refactor variable declarations to use a local iconCount variable instead of accessing mRollo . mState directly to improve code readability and maintain
server : do n ' t fall back to default vr if there be no default vr
refactor StringBuffer class to improve code readability to enhance maintainability and ease of understanding
added a line to assign the rule ' s UID to the rule resource to ensure that the rule ' s UID reflects the rule ' s
added a null check for the listener before unsubscribing the registry to avoid potential NullPointerException when the listener is not set
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified the JSON string conversion logic to
make access _ table public to allow subclass to access it
updated error messages in DataSourceInitializer and its tests to reflect that no resources are found at the specified location to improve clarity and accuracy of error
do n ' t swallow exception in xmpptransport . run ( ) , throw ioexception instead
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added parameters for effectiveClusterVersion and isUpgradeSuspended in AmbariManagementControllerImpl . java to enhance the handling of upgrade susp
updated copyright year from 2007 to 2009 Google Inc in FindsByCssSelector . java to reflect the latest changes in the project
removed the initialization of the list of fields from the writer to streamline the code by eliminating unnecessary field retrieval
updated EncryptionJwtCryptoProperties and OAuthProperties to set default encryption and signing keys to ensure consistent encryption and signing settings across the application
hbase - 13827 fix findbugs warn in htabledescriptor . getcolumnfamilystatus ( )
replaced the AllowedResourceAliasChecker with a lambda expression in the addAliasCheck method to simplify the alias check logic for better readability and
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and Serializable classes to improve code organization and maintainability
added a reset method to the Cluster interface and implemented it in ClusteredServiceAgent to enable resetting of the idle strategy for better resource management
updated the incrementing of currentChunkID in ChunkedWriter . java to correctly increment the currentChunkID variable
added a new file AbstractJobExecutor . java that implements the JobExecutor interface to facilitate job execution handling within the batch framework
replaced the return statement with a break statement in RecoveryStrategy . java to improve clarity and control flow in the recovery process
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
do n ' t return service id if discovery be disabled
replaced ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom ( ) . nextInt (
improve error message when runtime compilation fails
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline time comparison logic by eliminating unnecessary
updated the ` answer ` method to handle abstract methods in ` CallsRealMethods ` and added tests for abstract methods in ` CreatingMocksWith
refactor checkPackageAccess method to accept Class objects instead of String names to improve type safety and clarity in package access checks
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration methods to enhance plugin integration and improve error handling
refactor variable names and improve font handling in ContributionListPanel . java to enhance code readability and maintainability by using a consistent font
added REQUEST _ HAS _ TIS handling in QuickstepTestInformationHandler and TestInformationHandler , and modified LauncherInstrumentation to check for
removed unnecessary try - catch block and added a write access block in ConnectAction . java to improve code readability and ensure proper access to the
updated the type of ` showRulesResult ` from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget , ShowOptions
[ j2kt ] fix javadoc warning in j2kt
added support for HOME and END operations in the Less class to enhance user interface functionality by allowing for home and end commands
replaced the synchronized block with a direct iteration over connected plots in PlotHandler . java to simplify the code by eliminating unnecessary synchronization
refactor intent creation in Utilities . java to streamline package installation checks to improve code readability and maintainability by reducing duplication
removed the ' public ' access modifier from the constructor of the Roster class to enforce encapsulation by restricting access to the constructor
added basic constraints to certificate generation in TestUtils . java to enhance security by enforcing certificate validation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address failures due to incorrect transform
simplified the calculation of precisionStep in TrieDateField . java and TrieField . java to simplify the code by eliminating unnecessary
removed the TaskbarStateHandler class and updated BaseQuickstepLauncher to utilize it to streamline taskbar state handling by eliminating
added a new file ` ArrayLength . java ` to test array field access to ensure that ` getField ( ) ` and ` getFields ( )
wait for process to be destroy before shut down hzstartit
updated ApplicationSettingsService to use @ ApplicationScoped instead of @ Singleton and refactored the save method to use @ PostConstruct for initialization to
updated assertions and logic for handling negative values in Safepoint . java to improve clarity and correctness of value validation logic
updated the type of the " name " field in OopUtilities to use " Ljava / lang / String ; " instead of " [
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hns
refactor stroke handling in PGraphicsJava2D by introducing strokeObject and fontObject variables to improve flexibility in setting stroke and font
[ calcite - 1792 ] fix the problem that the expression of a dynamic star be not fully qualify .
added a new method ` findInterestingChildren ( ) ` to initialize the ` _ header ` and ` _ children ` records in ` Comment
added import for Messages and set a status warning icon in HTTPServer . java to enhance user experience by providing a clearer status warning message
use getmodifiersex ( ) instead of getmodifiers ( ) and deprecate getmodifiers ( )
make amd64countleadingZerosnode and amd64counttrailingZerosnode use the new node cycles .
fix npe in entityparser when content type be null .
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
added a clearLog button to the ErrorConsoleController and implemented clearLog methods in the ErrorConsoleViewModel and LogMessages classes to enable clearing
removed unnecessary line breaks in RecentsView . java to improve code readability and maintainability
replaced ConsolePlayer with LocaleHolder in Debug . java and updated message formatting in CaptionMap . java and DummyCaptionMap . java to improve
updated connection pooling logic and modified data source handling in multiple test classes to improve resource management and ensure proper resource management during test execution
[ java ] add opera blink capability to the default driver session
improve error message when download fails
added new Lifx product types to LifxProduct . java to support additional functionalities related to LIFX features
added asynchronous handling for collection creation in OverseerCollectionProcessor and modified test methods in CollectionsHandler and CollectionsAPIAsyncDistributedZkTest
refactor variable declarations in PostgresDatabase . java and update assertions in PostgresDatabaseTest . java to improve code readability and maintainability
updated LogPanel initialization to use getRepositoryModel ( ) . HEAD instead of objectId to ensure the correct repository is used when the reference ID is not
changed the unit of the parent tail from UNIT _ Y to UNIT _ XYZ in the SkeletonInterBoneWire class to ensure the bone
added a ` browserDestroy ` method to the ` AndroidImplementation ` class and refactored the ` deinitialize ` method to ` destroy `
added a wait for active collection ' readApiTestViolations ' in AutoScalingHandlerTest . java to ensure that the test correctly handles scenarios where
refactor loop structure in ScreenTerminal . java and update Tmux . java to improve readability and maintainability of the code to enhance
updated controller state checks in SoftResetAction . java to use ControllerState constants to improve code readability and maintainability by using more descriptive
disable on - disc stream cache to speed up texture pack reloading
added logic to retrieve the parent folder using DLNAResource in Request and RequestV2 classes to ensure the correct parent folder is used for
cloudstack - 4892 : fix typo in networkofferingvo . getpersistent ( ) method .
updated FileOutputStream to implement a custom close method to ensure proper resource management during file output stream closure
added error handling for ` RestClientException ` in ` StandardGitHubRepository . java ` to improve robustness by catching ` Forbidden ` responses
log4j2 - 1349 add original method to messagefactory2adapter and use it in abstractloggertest
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern in mmm Version . java and ppp Version . java from " 0.9 . 1 , 2 " to " 0
set initial and dismiss delays in ExtractionModelFrame to improve user interface responsiveness
refactor ProjectCommand to use a passed - in target set for improved clarity to enhance code readability and maintainability by using a
added timezone configuration and a test for date formatting in TimeTest . java to ensure proper handling of time zones in tests
refactor MediaSessionConnector class to improve code readability to enhance maintainability and ease of understanding
replace jssefactory . getsslsupport ( ) with endpoint . gethandler ( ) . getsslimplementation ( ) . getss
updated accuracy display in GpsLoggingService to use accuracy instead of altitude to improve accuracy accuracy display for better user experience
added a check for futures enabled in BinanceExchange and modified BinanceAccountService and BinanceTradeService to ensure that future exchange metadata is
rename instructoraccountmanagementhelper . accounts to instructorcoursedatatransfer . instructoraccountstable and instructorcoursesdatatrans
added a method to set the accept queue size in the connector to ensure the connector uses the correct number of worker threads
replaced calls to ` getClass ( ) . getName ( ) ` with a static final variable ` PROPERTY _ DISABLE _ WATCHER `
camel - 17654 : camel - jms - allow to use ssl for jms connection
replaced ` UserException . parseError ` with ` UserException . validationError ` in ` DrillSqlWorker . java ` and updated
updated the calculation of the duration variable in GCInspector . java to clarify that it may be zero for a really fast collection
fix nodewithjavadoc # getjavadoc on method with linecomment
replaced the method ` reserveMemory ` with ` readReservedMemory ` and added OS - specific checks in ` ReserveMemory . java `
added calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure that ungrouped
hbase - 25827 make hbaseadmin . getprocedureid ( ) protect instead of private to allow subclass to access it
camel - 14863 : camel - cxf - add the service class to the service factory bean .
refactor YamlChangeLogSerializer to use a list and a map for storing databaseChangeLog data to improve code readability and maintainability by
updated print statements in SchemaPrinter . java to include a newline character to improve readability and maintain consistency in output formatting
remove / plot regen all roads / plot regenallroads command line argument
updated ` HomeFragment ` to use ` getActivity ( ) ` instead of ` getContext ( ) ` for ` nowPlaying ` and ` footer
replaced @ GeneratedValue with @ GeneratedValue and @ GenericGenerator with @ GenericGenerator in multiple classes to ensure compatibility with Hibernate ' s
removed the country parameter from the getSystemTimeZoneID method and related code to simplify the method signature by eliminating unnecessary parameters
updated the write method to include position and remaining bytes in BZip2Codec . java and modified ByteBuffer initialization in TestBZip2Codec .
move startlogger ( ) to geogebralogger . initconsole ( )
added a constant VALUE _ TYPE _ EMPTY in Type . java and updated Value . java to use this constant to improve code clarity and maintain
updated group comparison from ` = = ` to ` . equals ( ) ` for improved readability to enhance code clarity and maintainability
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and ease of understanding
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and replaced instances of ` newInstance ` with it in ` VersionedTargetGraph
[ hotfix ] fix typo in nodetool and sstablereadertest
fix json serialization of artifact version reference in mod metadata
modified the handling of keys in the NativeArray class to accommodate current and previous states to ensure proper deletion of elements based on their presence
updated file handling logic in FileUploader . java to use the parent file ' s ID instead of the local file ' s local path to ensure
added a new file UTF8ReaderBug . java to test supplementary characters in XML parsing to ensure proper handling of supplementary characters in XML
added unit test base on user forum issue
updated subscription streams in BinanceIntegration and BinanceUsIntegration to include a new depth value to ensure that the build process accurately reflects
added a resetAllocation method to the Wrapper class to reset initial and maximum allocation states
removed the import of AssertTree from AmbariManagementControllerTest . java to eliminate unused dependencies and improve code clarity
replaced direct access to system properties with synchronized blocks in mmm Agent . java and ppp Agent . java , and added a new Agent
refactor ModelUtils class to improve code readability to enhance maintainability and ease of understanding
refactor AbstractDoubleArrayAssert for improved clarity to enhance maintainability and readability of the code
updated width and height calculations in Legend . java to include checks for the last index to ensure proper adjustment of width and height based on the
added ` testDelay ` and ` testAbort ` methods to the ` CodeFirstSpringmvcIntf ` and ` TestResponse `
replaced direct access to ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` in ` MoreLikeThis .
replaced the usage of ` CxxLink ` with ` BuildTargetSourcePath ` in ` Omnibus . java ` to improve
add a disabled botania . versioning . disabled message in the commanddownloadlatest
changed ` Collection ` to ` List ` for ` filePaths ` in ` MediaFolder ` and introduced ` numberOfFiles ` in ` MediaProvider
removed the " - b " argument from the AidlStep and GenAidlTest classes to simplify command line argument handling for better
fix # 798 : do n ' t delete obligation on comparison
added a TODO comment in FakeHttpLayer . java to temporarily disable the test for future development
replaced error handling with revokeLeadership method in EmbeddedLeaderService . java to improve leadership management by eliminating error handling
refactor CompositeDiscoveryClient to use Flowable ' s Single and ArrayList instead of Streams to simplify the code and improve readability by using a more
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ runtime ] add description for jobmanager . job - computation . max - execution - attempts
replaced ` updateNoWidgetsView ` and ` updateNoSearchResultsView ` methods with ` updateRecyclerViewVisibility ` for better clarity
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4357 ,
refactor test setup in AuditAliasCommandIntegrationTest to use a dedicated setup method to improve code organization and maintainability by separating setup logic
removed unnecessary logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and reduce unnecessary
( chore ) camel - cxf : disable test that be not applicable in this scenario
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging errors during periodic refresh failures
refactored ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` classes to use ` @ RequiredArgsConstructor ` and
added a method to check and set the default background color in HSSFCellStyle . java to ensure proper handling of automatic colors in the
refactor ZonedDateTimeFormatterBenchmark to improve code readability to enhance maintainability and ease of understanding
refactor DistributedUpdateProcessor to use a new method ` shouldBufferUpdate ` for better readability and maintainability to improve code maintainability and
added a null check for rocket stage in SimulationListHandler to ensure proper handling of null rocket stages during simulation
fix / editreplace / editscript and / editreplace / editreplace / editscript command ( # 1188 )
refactor ExtendedMasterSecretExtension class to improve code organization to enhance maintainability and readability of the code
changed the declaration of the InputProcessor variable to be final to ensure immutability of the processor variable
added a call to ` processedTask . getListener ( ) . onWriteFailed ( " Reached end of stream while writing " , null )
added " CUBE " to the list of database types in MySQLDatabase . java to support additional database types in the application
added a try - catch block around the ` rm ` method call in ` TestReplicationHandler . java ` to handle potential ` IOException ` during
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related method names
refactor defaultokhttpclientfactorytest to not use reflection
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the output stream in RawMessageContentRedirectInterceptor to avoid potential NullPointerExceptions when processing output streams
mow - 285 fix for avvieww . getparentsplitpane ( ) . getparentsplitpane ( ) = = null
updated the ` jailerMain ` method to include a ` fromCli ` parameter and modified the exception message accordingly to enhance functionality by allowing
refactor HttpRequest class to improve code readability to enhance maintainability and ease of understanding
added a shared preference for unread notifications in TalonPullNotificationService to enhance user experience by allowing unread notifications to be displayed
added a check for ` parent . object ( ) . kind ( Kind . Object ) ` before processing ` piValueStamp ` to ensure proper
updated world step parameters and modified camera initialization in Box2DTest . java , Pong . java , and OrthographicCamera . java
fix crash when click on comment in viewpostdetailfragment
changed the logging level from trace to warn for background operation abortation to improve log clarity by indicating that the background operation was aborted
fix a bug in the jimplebodybuilder when a method be declare to be abstract .
simonstewart : make sure mouseup callback be run on ie10 +
updated the ` getNotificationUsers ` method to include ` deviceId ` parameter and modified the user retrieval logic to include the device ID to enhance notification
updated the base URL in CGIARProvider . java to point to the correct SRTM data geotiff location to ensure compatibility with
removed unused listeners and set bottomPanel to null in MotifFileChooserUI . java , and added a new class bug6520101
change return type of hollowhistoryui and hollowdiffui from void to boolean
refactor methods in BuildRuleResolver to improve rule resolution logic to enhance clarity and maintainability of rule resolution logic
added visibility control for transportSpinner based on shortcut making to improve user experience by hiding the spinner when the shortcut is making
added null check for attributes _ field in Attr . java and created new classes T7043371 . java and T7073477
refactor backPressed ( ) method to return a boolean indicating success or failure to improve handling of back press events across multiple fragments
added support for long view index functionality in QueryServices and related classes to enhance flexibility in handling long view index configurations
corrected the capitalization of " V " in SDRTrunk . java to ensure consistency and accuracy in string representation
updated PrivateKeyParserTests to use StringUtils . cleanPath for path handling to ensure proper path formatting for private key paths
refactored the ` diffDropColumn ` method to remove the ` newTable ` parameter to simplify the method signature by removing unnecessary parameters
replaced instances of ` Version . LUCENE _ 40 ` with ` TEST _ VERSION _ CURRENT ` in ` TestAddIndexes .
hbase - 10663 add option to disable column family check in importtsv
[ java ] use logsubscriptionid instead of logrecordingchannel for stop recording .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " ) ` and added visibility
added a check to return early if the first element of the jsonNodeNew is " i " to ensure that processing of the " i "
refactor Procedure class to improve code readability to enhance maintainability and ease of understanding
added Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) parameters to ResourceBundle . getBundle ( ) calls to ensure consistent resource loading across different
[ j2kt ] add normalization for kotlin array creation .
modified the logic for incrementing segment positions and handling missing counts in PerSegmentSingleValuedFaceting . java to ensure proper handling of term enumeration
fix an npe in modmetadata . getauthorlist ( ) .
added a new test class ` OSGiTest ` and modified ` module - info . java ` to include a static requirement for unsupported Java
refactor controller service enabling check into a separate method to improve code readability and maintainability
hbase - 15938 htable . clearbufferonfail should be false by default
refactor ( ctscanner , defaultjavaprettyprinter , jdttreebuilder , annotationprinter ) : add miss cast ( ctstatement
added hasUserData method to SimpleFeatureImpl and its implementation in Property to provide functionality to check if user data is present in the feature
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify method
refactor RelyingPartyRegistration class to improve code structure to enhance maintainability and readability of the code
added a method to enable logging for all handlers in the JavaCompiler class to enhance logging capabilities for better debugging and monitoring
added a new class ` InJavaSourceSet ` to handle Java source set markers in the compilation unit to facilitate the handling of
updated the resource loading logic in TestGDALParser to use a variable for the filename to improve code readability and maintainability by reducing
added a static method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of a getter for an object
removed unnecessary check for default preferences in DirectUpload . java to simplify the condition for better readability and maintainability
added a new constant INDEXER _ NO _ COMMIT and updated related logic in IndexerMapReduce , IndexerOutputFormat , and Object
createvolume api : make diskofferingid optional
updated assertions in BaseTestCellComment to check for non - empty notes instead of empyy notes to ensure that non - empty notes are
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new file ` Issue382 . java ` to handle specific error types in the Jooby framework to ensure proper error handling
replaced the custom signum method with a static import of Integer . signum in PositionUtils . java to simplify the code by eliminating unnecessary
added logic to hide the holder text when a specific condition is met to improve user interface responsiveness by preventing unnecessary UI elements
fix ( astparentconsistencychecker ) : fix ( astparentconsistencychecker ) : fix ( astparentconsistencychecker ) : fix bug in
replaced method reference from ` : : getProfile ` to ` ( ) : : getProfile ` in ` XpiDriverService . java ` to
make liquidblock extend bucketpickup , close # 54688
fix intermittent test failure on slow ci server
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate
rename ` existingObservation ` to ` distinctObservation ` for clarity to improve code readability and maintainability by using a more d
updated ` TEST _ NIGHTLY ` , ` TEST _ WEEKLY ` , ` TEST _ MONSTER ` , and ` TEST _ BAD
[ iotdb - 4892 ] fix sqlexecutionloggerimpl . createlogger do n ' t close the logger
do n ' t allow access to field , method , and proxy in graalcontext
pdfbox - 4892 : implement updatepixels ( ) , a suggest by valerybokov
updated the parameter in verifyAndAddTransactionalProperties method from table . getSd ( ) to partition . getSd ( ) to ensure accurate
refactor overlay scrolling logic in Workspace . java to improve readability and maintainability of the code
hhh - 14827 introduce unmodifiablebatchbuilderimpl and unmodifiablebatchbuilderinitiator for jdbc batch initialization
improve error message for unexpected input
added a new test class ` MockWithStaticStateDemo ` and modified ` PartialMockingRetainsStateTest ` to utilize it to
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing of
refactor security handling in SecurityUtil to handle null ugi cases to ensure proper execution of actions when ugi is not available
updated error handling in OpenALMusic . java to store the error code in a variable before throwing a GdxRuntimeException to improve error reporting
rename endpointhelper . reslovestringparameter to resolveparameter and deprecate it
[ calcite - 2271 ] fix precision and scale be not correct in rexnodeconverter .
refactor code to use Optional for retrieving vendor and device properties to improve null safety by avoiding potential NullPointerExceptions
updated the expected value in the updateAccount method call from " testName " to " now " to ensure the test accurately reflects the
replaced ` AxialStage ` with ` RocketComponent ` in ` BasicFrame . java ` and refactored child selection logic in
added a new configuration parameter ` longRunningTime ` with getter and setter methods in ` Args . java ` to allow dynamic configuration of the long
updated the priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW in FindRefComparison . java and added a
updated import statements and method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider to use java . util . ServiceLoader instead
mondrian : fix xlsdecimalbinding . tostring ( ) to return plain string instead of string .
updated assertion syntax in TestRestClientRequestImpl . java for consistency to improve code readability and maintainability
added a condition to check if the reference database equals the comparison database before attempting to duplicate the index to ensure that the index does not already exist
removed the ` addAndroidConstants ` method and adjusted the handling of asset paths in ` IjProjectTemplateDataPreparer . java ` to
replaced direct assertions with awaitility in DuplicateCookieTest . java and SessionRenewTest . java to improve test reliability by ensuring requests are
added user _ args , is _ daemon , and timestamp fields to the ImmutableMap in ChromeTraceBuildListener and its test to enhance traceability by
[ gr - 10627 ] use modulesupport . getresourcebundle ( ) to retrieve resource bundle
[ hotfix ] fix typo in hepplanner trace log message
added a new file ` TheRockMetaDataDemo . java ` to demonstrate the usage of exchange metadata in a therock
replaced ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes with ` strictfp ` and added a new ` testStrictness
removed unparseIdentifier call from columnNamesBuilder append method to simplify column name handling by directly appending the column name
added a test method to replace variable declarations in JavaTemplateContextFreeTest . java and modified the contextFreeTemplate method in BlockStatementTemplateGenerator
added a condition to check if the class is not synthetic in InstantiateStaticClass . java and introduced a new test method in Bug1282 .
replaced ` projectFilesystem . getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify
added functionality to handle pending rescues in IkStepDefinition . java to improve error handling and resource management during message execution
made ` equals ` and ` hashCode ` methods in ` AbstractType ` subclasses and implemented their implementations in ` BigintType ` , `
added a new method getSyncLevel and updated SyncLevel enum initialization in UpdateLog . java to ensure proper handling of SyncLevel values and provide
make controlcommandstest more tolerant to slow machine
added a condition to check if the slice state is not RECOVERY to ensure that the recovery process only proceeds in the recovery state
removed unnecessary whitespace in the create method call to improve code readability and maintain consistency in formatting
added sdkPath variable to AppleBundle and modified the makeProcessExecutorParams method to accept an ExecutionContext parameter to ensure proper handling of SDK
[ hotfix ] [ runtime ] remove unnecessary lock in blob cleanup task
server : fix typo in log and exception message for static nat
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion of sort and union row types to relBuilder in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure
refactor BetterBlockPos class to improve code organization to enhance maintainability and readability of the codebase
updated the method to retrieve the ServletContext using the class loader instead of the default class loader to ensure compatibility with different class loading practices
updated version handling in MainWindow , ConnectionSettingsPanel , and Version classes to use a more descriptive method to improve code clarity and maintain
added conditional logic to remove trailing / ' s from SQL statements in LoggingExecutor and JdbcExecutor to ensure proper handling of line breaks in Oracle databases
added a new constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to provide a configuration
change the port of the jolokia test from 8080 to 12345
updated BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN values , and refactored time
added a method to include a multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration . java to enhance
reformatted method signatures in MaxRectsPacker . java for consistency to improve code readability and maintainability
( chore ) camel - jbang : fix checkstyle violation in dubbo - kie - services
added methods to set and get a help page in PMS . java and refactored help page handling in HelpTab . java to improve
added new files GeocodeProviderFactory . java and Constants . java to define geocoding provider and preferences functionalities to facilitate
updated import statements from ` org . apache . lucene . analysis . util . CharArraySet ` to ` org . apache . lucene
[ hotfix ] [ test ] replace expectedexception with a try - catch block
updated GATEWAY _ SERVER _ ID assignment to use Protocol . GATEWAY _ SERVER _ ID and modified object deletion logic in MemoryCommand
removed unnecessary checks for index options in SegmentsInfoRequestHandler and updated collection name in CollectionsAPISolrJTest to improve code clarity and ensure
updated the calculation of ` numPredictiveAppCols ` to use a conditional value based on phone type to ensure correct number of predicted app columns
added a new method ` hasScalarSubqueryInput ` in ` JoinUtils ` and refactored related code in ` DrillJoinRel
add a new class blockbuildcraft to allow the build of item in the craft world .
updated layout parameters for drag target bar in DeviceProfile . java to ensure proper positioning of the drag target bar and improve layout responsiveness
change yahoosession . run ( ) to yahoosession . start ( )
hive - 15928 : hive metastore client should be shutdown when it be close ( chaoyu tang via as
updated the ` getDisplayScript ( ) ` method to accept a display category parameter and added a new test for bug 7079486 to ensure
updated imports in mmm Replica . java and ppp Replica . java to use ZkStateReader directly instead of static imports to improve code
replaced ThreadLocalRandom with a custom Random instance in StoreDirectTest . java to improve performance by avoiding unnecessary ThreadLocalRandom usage
added a new method ` launcherIsReady ( ) ` to check if the launcher is ready before performing backup operations to ensure that backup operations are
updated error messages in Cell . java to include the context of the space values to improve clarity of error messages for better debugging and debugging
added unit test base on user forum issue
updated variable and method names from " BodySpace " to " BarSpace " across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability to enhance maintainability and ease of understanding
fix filemessageliststest failure on window
added debug logging level settings for various loggers in Grasscutter . java to improve troubleshooting by providing insights into
changed the visibility of ` highlightCnstScrRngQuery ` and its setter methods to static in ` SpanScorer ` to allow
added a new method ` getState ( ) ` to the ` Workspace ` class and modified the condition in ` Launcher . java ` to ensure
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability across the assertion framework
added a conditional check for ` args . cacheable ` before notifying ` args . info . notifyNewTemplate ( ) ` in ` Snippet
added a new scope ` SCOPE _ SOLR _ CORE ` and introduced a new scope ` SCOPE _ SOLR _ CORE ` to
added primary key validation for the measurement table in DatabaseMetaDataTest . java to ensure that the measurement table correctly retrieves primary keys from the database
rename ` -- permissions - config - path ` to ` -- permissions - config - file ` for consistency
refactor HttpSession handling logic in HttpSessionContextIntegrationFilter . java to improve clarity and maintainability of session creation logic
added a new file TestIfWithDeadRegion . java that implements a method that retrieves a string using a supplier to demonstrate the
corrected the spelling of " English UD " to " English USD " in the dependency parser tests to ensure consistency and accuracy in
refactor SnowflakeIdGeneratorTest to enable and disable HighResolutionTimer during concurrent access tests to improve test reliability by ensuring HighResolutionTimer
added a static boolean variable ` staticUi ` in ` AppSettings ` and modified ` MainFragment ` to conditionally hide the toast bar based
replaced an anonymous Privilege implementation with a lambda expression in WindowsSecurity . java to improve code readability and ensure proper resource management during
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added null check for ` clientId ` in `
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to use localized strings instead of hardcoded strings to improve user experience
tika - 4892 - add mime type test for poi file and ooxml file
refactor glue loading and logging in the Runner and FeaturePathFeatureSupplier classes to improve logging clarity and maintainability to enhance debugging capabilities and
[ camel - 14825 ] improve documentation generation for camel - spring - boot tooling
[ hotfix ] do n ' t wait for migration to complete when an endpoint be remove .
added debug logging for stored audio notify and playback devices in DeviceConfiguration . java to improve debugging capabilities and ensure proper handling of audio capture devices
added WebSocketConfig configuration to ShenyuConfig and modified WebSocketPluginConfiguration to accept it to enhance WebSocket integration with configurable maximum frame payload size
refactor cachevalidationlistener to implement isuitelistener
added trimming of content length before adding it to the document to ensure only non - empty content length is added to the document
[ jbrules - 3892 ] fix thread safety issue in defaultsolvingjob
[ iotdb - 5892 ] ignore pathalreadyexistsexception during concurrent insert of non - existent timeseries
added a new method ` check ( boolean result ) ` to the Authz class to provide a way to access the result of a check operation
changed access modifiers from public to protected for several methods in multiple classes to restrict access to these methods for better encapsulation and encapsulation
cloudstack - 4892 : fix a bug in listvirtualmachines api - add reservation flag to listvirtualmachines command .
modified HttpParser to initialize _ valueString as an empty string instead of null when compliance is RFC2616 to simplify the handling of HTTP header values
refactor thread initialization to use a dedicated method for setting standard error and output encodings to improve code readability and maintainability by reducing duplication
added ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created a test class for its functionality to ensure the external storage directory is
[ drools - 1867 ] fix type coercion for mvel 2.1 . 0 . drools9
removed unnecessary diamond operator and improved code formatting in LoggingConfig . java to enhance code readability and maintainability
added exception message to the logging statement in ActionNode . java to provide more context in error reporting for better debugging
remove the tel : from the number if it ' s already in the tel : format
refactor visibility logic for shared file icons in FileListListAdapter to improve readability and maintainability of the code
removed deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated its usage in TestTxnCommands3 . java to
refactor ExecuteStatementOperation and Operation classes to use a consistent configuration overlay handling to improve code clarity and maintainability by centralizing configuration management
refactor BTCMarketsStreamingAdapters and BTCMarketsStreamingService to use direct method calls instead of local variables to improve code read
[ zeppelin - 4892 ] fix test failure in ogrdatastoretest
removed the method ` onErrorInStep ` from ` StepListenerSupport ` to streamline error handling by eliminating unused code
refactor Wallet class to improve code readability to enhance maintainability and ease of understanding
camel - 14850 : camel - netty - http - fixed the issue of camel - netty - http do n ' t work
replaced System . out . println statements with logging statements in TestNonBlockingAPI . java to improve logging consistency and maintainability
added a boundary check for the row index in the connection list to prevent out - of - bounds errors when processing database connections
[ net . sourceforge . pmd . rules . methodwithsamenameasenclosingclass ] [ java ] add rule to report
added ExtendedPlatformComponent class to manage platform MBean beans and updated ManagementFactory to utilize these methods to enhance the management framework ' s ability to
replace single quotes with double quotes in SQL string processing to ensure consistent SQL formatting across different operating systems
updated response paths in Bleutrade test classes to include " org / knowm / xchange / bleutrade / dto / "
refactor TextEscapeUtils to improve code readability to enhance maintainability and facilitate future updates
updated AbstractSpatialFieldType to conditionally return a FilteredQuery based on the " filter " parameter to enhance query flexibility by allowing filtering based
removed progress display logic in GpsLoggingService and added a post to update results email sent in AutoEmailHelper to improve user experience by providing
replaced ArrayList with HashSet for inlinks in Inlinks . java and added an iterator method in LinkDb . java and LinkDbReader .
added synchronized stopScan ( ) method to removeolderResults ( getTimestampOfLastScan ( ) ) and set lastScan timestamp to current date to
hive - 15928 : hive metastoreclient . getpartitionsbynames ( ) should fail with blocking mode at server side (
added " Abandoned " status to multiple workflow states in TicketModel . java and updated related logic in TicketBasePage . java and Tickets
replaced the default value of ` columnAliasPrefix ` with a direct assignment to ` null ` in multiple platform classes to simplify the code by
replaced ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat ` classes to
[ terasology ] add a non - native jdk detector to make it easy to run on 32 - bit jvm .
refactor conditional checks in PdfCopy . java for better readability and logic flow to enhance code clarity and maintainability by simplifying conditional
added a new option ` DAEMON ` to the ` OptionEnum ` and implemented daemon mode handling in ` TerminalClient ` to enable
added a new file FlushIndexTask . java that implements a PerfTask for flushing index writers to facilitate the flushing of index
improve memtable flush performance by use estimate size of key and index entry
added support for SEASONS output in MediaLibraryFolder to ensure compatibility with additional media formats
added a new file LocalSocketAddress . java that implements a DatagramSocket using an IPv6 address to verify the local address of a Datagram
updated grid size points in GridSizeMigrationTask . java to correct the positioning of grid size steps
updated method calls to use ` classInfo . name ` instead of ` ci . getName ( ) ` in ` SerializerPojo . java ` to
added a read - only context option and improved transaction handling in the Context class to ensure proper transaction management and error handling during read - only
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future updates
updated the calculation of ` lastRunEnd ` to use ` ceiling ` instead of ` floor ` and modified the condition in ` BlockBox
added EOFException handling to the assertion in GracefulStopTest to ensure proper exception handling for closed channels
replaced ReentrantLock with direct method calls in NetJavaImpl . java to simplify code and improve readability by eliminating unnecessary
refactor NetworkParameters class to improve code readability to enhance maintainability and ease of understanding
removed conditional check for allowAccountAssetOptimization in DynamicPropertiesStore . java to simplify the code by eliminating unnecessary checks
added a new constant J9 _ GC _ POLICY _ NOGC with a default value of 0 to facilitate garbage collection policy
added validation for transactions in TransactionCapsule . java to ensure only valid transactions are processed to prevent runtime errors
remove exceptiontypechecking , it ' s no longer use
updated resource path from " helpPre " to " en / " and improved logging message formatting to enhance clarity of resource retrieval and provide
added a new file ` ProcessorInfo . java ` to provide functionality for retrieving available CPU cores to facilitate the retrieval of available CPU
add - html option to print html output ( default stylesheet be default . xsl )
fix ( logback ) : make logback . xml location configurable
updated HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to update cluster data before handling service component recovery changes to improve data integrity during service component recovery
added conditional on property for whitelisted keys in SleuthTagPropagationAutoConfiguration and updated tests accordingly to ensure the TagPropagationFinishedSpanHandler is
refactor conditional logic in RustCompileUtils to use a switch statement for setting rustDepType to improve code readability and maintainability
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` for query parameters to enhance error handling
hbase - 15938 hfilereader . seek ( ) should skip seek to the first key in the hstore if it ' s
hhh - 14827 deprecate @ generationtiming in favor of @ generationtiming . always
[ te ] add test for layer norm with nan
updated method calls to use ` getFileOperationsHelper ( ) . showShareFile ( ) ` instead of direct calls to ` showShareFile (
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of ` LiquibaseUpdate `
convert " proxyType " to uppercase in setProxyType method to ensure consistency in proxy type handling
add a new mod _ minecraftforge that do n ' t call dungeonlootTries ( ) to make things initialize
refactor JdbcDatabaseSnapshot to use separate keys for table and column retrieval to improve code readability and maintainability by reducing duplication
added a CSS border with a label to the container in CSSBorderTest . java to enhance the visual appearance of label elements in the UI
refactored RetryAutoConfiguration and RetryInterceptorAutoConfiguration classes , added RetryableStatusCodeException class , and updated retry logic in RetryLoadBalancerInterceptor
replace FILL _ PARENT with MATCH _ PARENT in CellLayout constructor to align layout parameters with expected behavior
updated the method of constructing the parentTaskName to use System . currentTimeMillis ( ) instead of System . nanoTime ( ) to improve accuracy of task
added error handling for parsing Add Service Request in ServiceResourceProvider . java to improve robustness by providing a clearer error message when invalid input
improve performance of indexdatabase . accept ( )
[ giac ] make sure round ( x [ 0 ] , x [ 1 ] ) work correctly for list [ 0 , 1 ]
refactor AnonCipherWithWantClientAuth class to improve code clarity to enhance maintainability and readability of the code
marked multiple methods in ProducerTemplate as deprecated to indicate that these methods are outdated and should no longer be used in future development
refactor JLayer class to improve code organization to enhance maintainability and readability of the code
make test more resilient to slow machine
refactor password encoding methods in Md5PasswordEncoder for improved clarity to enhance code readability and maintainability by using a more
replaced local variable ` viewTreeObserver ` with direct method calls in ` IconRecentsView . java ` to improve code readability and
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
change sstablereference . max _ timestamp from long . min _ value to long . max _ value
remove unused import and set preferred size of securitypanel to 200x60
added null and empty checks for replies in multiple classes to ensure that replies are only compressed when they are not empty
replaced Apache Commons ToStringBuilder with Java ' s built - in Objects utility in HitbtcBalance . java to improve code read
fix ( sql ) : fix order by for in clause in order by
replaced return statement with return addrs . toString ( ) in RetriesExhaustedWithDetailsException . java to improve clarity and consistency
updated the method for opening the open cookie in EditGcodeFile . java to improve code clarity and maintainability by utilizing OpenCookie
updated HTTP client imports from ` org . apache . http ` to ` org . apache . hc . client5 ` in JsonToGrpc
pipepowerwood : do n ' t send energy to wood pipe if they be out of range
added a check to delete the temporary output file if it exists to ensure that temporary output files are properly cleaned up before use
updated the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a new test for retrieving trades
added expiration checks in ReplayProcessor and ReplaySubject classes and corresponding tests in ReplayProcessorTest and TestScheduler to ensure proper handling of
updated expectedCitation string formatting in CitationStyleGeneratorTest . java to improve code readability and maintain consistency in formatting
added SQL insert and retrieval methods for setting video HDR format in MediaTableFiles . java to improve code readability and maintainability by central
show definition for equation in exam ( not only in equation )
added a null check for the component in SIPCommTextFieldUI to avoid potential NullPointerExceptions when accessing the component
hbase - 25827 add cache setting for meta scan ( chunhui )
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to provide a feature flag for enabling transient task
[ hotfix ] [ runtime ] fix typo in javadoc
added a condition to set density to 3f if scale is 3 to ensure consistent density handling for different scaling factors
rename ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
hbase - 15938 regionstatestore . getregionstate ( ) should log a stack trace when there be an exception
updated the assertion method in TestClusterUpgradeUtils to use a lambda expression instead of an anonymous class to improve code readability and maintainability by
updated warning message and refactored async context handling in AsyncHttpConnection . java , and created a new test class LocalAsyncContextTest .
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to allow control over arrow display behavior in the search functionality
updated lock mode handling in Database . java and removed the testSetMode ( ) method in TestRowLocks . java to ensure correct locking behavior
skip bigintegertest on linux / amd64 .
refactor input type checks for Integer , StringValue , and IntValue in Scalars . java to improve code clarity and ensure proper handling of
updated primary key validation logic in CreateTableStatement . java to check for empty or multiple primary keys to ensure that only one primary key is specified
added conditional checks in CellLayout , Hotseat , and Launcher classes to set drawable resources based on LMP status to ensure UI
fix an npe in the vmservicemanager when there ' s no isolate to query for the flutter view
added new header configuration methods for content type , xss protection , cache control , HTTP strict transport security , and frame options in HeadersConfigurer
refactor ObjectEnumerableAssert to improve code readability to enhance maintainability and facilitate future updates
[ java ] move distributed cdp test to selenium - grid - router
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the type of the @ AggregateRoot
added a path resolver for prebuilt libraries and updated related code references to enhance the handling of prebuilt libraries and improve code clarity
added client authentication handling in NetServerOptionsConverter and refactored related methods in HttpServerOptions and NetServerOptions to improve code clarity and
updated file paths in HiveConf and MetastoreConf to use the system ' s name instead of " / user / hive " to ensure
refactor task view retrieval logic to handle primary and secondary task views to improve code clarity and maintainability by consolidating task view management logic
add timeout to amqptransformertest to avoid flakiness
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary method calls
rename variable ` ` controller ' ' to ` ` flowcontroller ' ' for clarity
[ hotfix ] [ table - common ] fix the exchange sum number not be set correctly in the pipeline builder
added ClassLoaderHandler import in mmm module - info . java and ppp module - info . java to facilitate the use of
mondrian : add solve ( ) method that take the best solution from guiscoredirector .
added JsonIgnore annotation to ApplicationSettings . java to ignore JSON serialization during serialization
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that throwable is not null before proceeding with further
replaced direct access to queryInfoMap with a local variable for clarity to improve code readability and maintainability
fix auto workbench crash when there be no item in the inventory
fix gl200 text decoder ( fix # 284 )
updated variable names from ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to
removed duplicate calls to HttpMethed . waitToProduceOneBlock ( httpnode ) in HttpShieldTrc20Token004 .
[ work ] add initializable support to container .
[ java ] add longtasktimer . sample . start and longtasktimer . sample . stop ( ) to timer observation handler .
changed the data type of SYNC _ DELTA _ RATE from float to double and updated related calculations to improve precision and correctness
[ thymeleaf ] add warn log for deprecated fragment expression in thymeleaf template
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when deserializing session attributes
resolve http : / / issues . apache . org / activemq / browse / amq - 2590 - fix for amq
added constants for main color , secondary color , and light colors in ColorExtractionAlgorithm . java and refactored extractInto method to return fallback
added accessibility check for data folder in SketchBuilder . java to ensure that only accessible data folders are included in the source path list
updated the ` appendContent ` method to include a ` includeTitle ` parameter and replaced ` TextUtils ` with ` StringUtils ` in ` NotesHelper
removed initialization of sessionRegistry in ConcurrentSessionControllerImpl . java to simplify sessionRegistry initialization by eliminating unnecessary initialization
added logging for reconnection completion and error in NettyStreamingService to improve error handling and debugging during connection reconnection processes
replaced the usage of CglibProxyFactory with JavassistProxyFactory in multiple test files to ensure compatibility with the internal J
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management by using a more
replaced string concatenation with String . join for better readability in SocketExceptions . java and updated exception message validation in ExceptionText . java to
added a check to determine if a view path starts with the repository directory to ensure that the view path is under the specified repository to prevent errors
remove drag and drop of tab header area from tab pane .
added " - XX : + UseCompressedOops " and " - XX : + UnlockExperimentalVMOptions " flags to various
added a condition to check if an update log is in active or replaying state to ensure that updates are only processed in active or replaying
deleted the ConnectionHook . java file to the functionality is no longer needed in the project
solr - 12313 : testinjection . waitforreplicasinsync should be remove in favor of testinjection . waitforreplicasin
camel - 17979 : camel - aws2 - dsl - swagger - java : fix the test error of camel - core
updated ApexLanguageModule to use the external version instead of a hardcoded version string to ensure compatibility with the latest JorJe framework
fix checkstyle issue in io / entity / lfcaching / corsfilter . java and io / entity / tregex / tregex
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread pool creation and shutdown to improve thread management and ensure proper shutdown of the aggregate thread
updated WebSocketAsyncConnection to accept a ByteBufferPool instead of using a standard buffer pool to enhance flexibility in buffer management in WebSocket connections
added scroll functionality to the thumbnail layout in UploadActivity to improve user interface responsiveness by allowing scroll to the top and bottom of the thumbnail
fix ( sql ) : fix timestamp override by other column alias
refactored animation handling in LauncherAnimUtils and added transition step animation in LauncherStateTransitionAnimation to improve animation responsiveness and
added a check to disable the default user agent in the HttpClient configuration to ensure that the HTTP client behaves as expected when the user agent is
added a check for pubsub hubbub support in FeedRefreshUpdater and ApplicationSettings classes to ensure proper handling of pubsub hub connections based on application
changed the access modifier of the finalize ( ) method from public to protected and added an exception declaration to allow subclasses to override the finalize ( )
updated the method to check for synthetic classes in StubJarClassEntry . java and modified the expected hash value in CalculateAbiFromClassesStep
add a dspacewebapp that do n ' t have the rest api
added null check for leftTableAlias and implemented a method to retrieve the table alias containing a column to ensure proper handling of missing columns in the left
added a prefix " Trigger " to the triggerKey method call in JobGenerator . java to improve clarity of the trigger key generation process
updated logging levels from info to warn for broadcast transaction failures and improved logging messages to enhance error visibility and provide clearer context for transaction errors
test : fix broken test ( # 1748 )
removed unnecessary whitespace in HiveClientConfig . java and TestHiveClientConfig . java to improve code readability and maintain consistency in formatting
added a new enum ` TlsClientCertPolicy ` and refactored ` GitBlitServer ` to use it for client certificate policy
added a debug log statement to indicate that a new notification has been saved to the authenticated feed to improve debugging by indicating that the notification has been
added headers to the ProxyWebSocketHandler constructor and implemented subProtocols retrieval to enhance WebSocket handling by allowing customizable WebSocket protocols based on request headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability of query results retrieval process
updated formatting of dimensions and label in HolidayEventFormatter . java to improve clarity and consistency in formatting output
refactor inner class handling in FinalizePrivateFieldsTest and add isInnerClass method in FinalizePrivateFields to improve clarity and functionality of inner
refactor UnexpectedJobExecutionException for improved clarity to enhance maintainability and readability of the code
deleted ` module - info . java . extra ` file and simplified ` buttonShouldBeOpaque ` initialization in ` AquaLookAnd
updated DrillSidewaysQuery and DrillSidewaysScorer to use maxCost instead of maxFreq and added null checks for Docs
added a new entry for GeoDegeneratePath in the classRegsitry map to support GeoDegeneratePath functionality in the standardObjects
removed the ` preFill ` parameter from constructors in ` ParticleEffectPool ` , ` FlushablePool ` , and ` Pool ` classes
updated TaskbarLauncherStateController to conditionally update taskbar state based on launcher state to ensure proper state management when the application is not in
added a null check for the default style before comparing it to avoid potential NullPointerExceptions during style removal
refactor GuiUtil to use a unified setSize method for setting maximum size and preferred size to improve code readability and maintainability by central
refactor icon retrieval logic in FileTreeViewHolder . java to use TreeFileExtension . Factory to improve code readability and maintainability by
updated assertions in ParallelUniverseTest to use contains instead of isEqualTo to improve readability and accuracy of test assertions
added synchronization to the iteration over suite results in XMLReporter . java to ensure thread safety when accessing the results map
[ native ] add test for native probability function
[ java ] clean up shutdown thread when shut down the client container .
hhh - 14827 - drop temporary table after use in sybase dialect
danielwagnerhall : remove htmlunit - specific code from htmlunitdriver
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter to improve code organization to enhance maintainability and readability of the code
updated hexadecimal string format for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to ensure accurate representation of reserved memory for testing
include skipped ad group in ad playback state when there be no period
refactor equality check in MultimapSubject to use a boolean variable for clarity to improve readability and maintainability of the code
updated string resource references from ` deg _ text ` to ` unit _ hz ` in ` WaveGeneratorActivity . java ` to ensure accurate
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the creation of a TreeMap with a constructor that initializes it directly from includedLabelSets to simplify the initialization process and improve code readability
added a constant NORMAL _ 4F and modified vertex format handling in VertexLighterFlat . java to improve code clarity and maintainability by
added tracing tags for grpc message sent and received in multiple interceptor classes to ensure accurate tracing of gRPC messages and improve traceability
replaced ` ZoneId . of ` with ` TimeZone . toZoneId ` for time zone conversion in ` ScheduledTrigger . java ` to
added AsyncBucket and InMemoryExtension classes and updated methods in Bucket , Bucket4j , and ConfigurationBuilder to support asynchronous mode and custom time
updated the logic for determining the classes directory in resexhausted003 . java to ensure that the test class paths match the specified test classpath
reformatted code for consistency and clarity to improve readability and maintainability of the code
refactor OngoingStubbing class for improved clarity to enhance maintainability and readability of the code
refactor web server reuse logic to include an optional web server to enhance flexibility in managing web servers based on configuration
updated the variable name from productConstructor to constructor in HttpClientUtil . java and added a static import for SolrHttpClient in SolrTestCaseJ4
added a check to clear the thread allowlist if it is not empty to ensure that the thread allowlist is properly cleared when it is not
replaced the method ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the processor uses
dmndtanalyser : do n ' t find gap and overlap if hit policy be collect
[ beam - 10720 ] add test for sliding window combiner in combinefn
added a conditional check for ` allAppsDirty ` before binding apps in ` LauncherModel . java ` to ensure apps are only bound when
removed the check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to streamline the test by eliminating unnecessary assertions
refactor code to improve readability and organization to enhance maintainability and clarity of the code
refactor use of ` getPrivSysProp ` to use ` AccessController . doPrivileged ` for property retrieval to improve code clarity and maintainability
set fall distance to 0 on entity . setrawlocation ( )
refactor query handling in SimpleJpaRepository to use CriteriaQuery for improved query accuracy to enhance query accuracy and maintainability by using a
added methods to set timestamp , parent hash , nonce , and number in the BlockUtil class to facilitate the processing of genesis block
remove loop safepoints from hotspot backend and remove loop safepoints from hotspot backend .
refactor code to use a local variable for listing children instead of an enhanced for loop to improve code readability and prevent potential NullPointerExceptions
changed access modifiers of methods in ArtifactResolver from package - private to public to allow access to these methods from other packages
added thread termination and disposal logic in ClientConnectionHandler and BulletPhysics , and modified error handling in ChunkProcessingPipeline to ensure
added a validation check to ensure maxBufferedDocs is at least 1 to ensure that maxBufferedDocs is at least 1 to prevent runtime errors
added state management for login state in LoginActivity to ensure that login is only performed when currently in progress
added null checks for input elements and values in Pump . java and implemented a reverse test for UUIDs in PumpTest . java to
updated access modifiers from private to protected for several classes and methods in HttpShardHandlerFactory and LBHttpSolrServer to enhance encapsulation and
updated the order in BaseAuthenticationServiceSelectionStrategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added unit
added Jetty server handler setup in TestJNDI . java to enable proper handling of context handlers in the JNDI server
reformatted code for consistency and clarity in SortedDynPartitionOptimizer . java to improve code readability and maintainability
changed the return value of the method from checking if the loop is an instance of NioEventLoop to always returning true to simplify the logic
updated the logic for setting the number of nulls in StatsUtils to ensure that the new number of nulls does not exceed the existing number of rows
camel - 18686 : camel - jbang - export - add option to export kamelet from camel - kamelet . thanks to
replaced OkHttpOAuthConsumer with OpenStreetMap authorization handling in OSMJob . java to improve authorization checks and error handling for OpenStreet
[ gr - 3745 ] remove some debug output from ptx backend .
added a clientAuth configuration property and its getter / setter in IoTDBRestServiceConfig . java , and modified RestService . java to util
refactored the injection logic in ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSameParentFieldInjection
refactor BloomFilter64bit and BloomUriUniqFilter to use InitializingBean and add expectedInserts and hashCount properties to
updated the ` getCursorAdapter ` parameter to true in ` HomeFragment . java ` and added a preference commit in ` TweetPager .
updated intermediate header height ratio from 1f to 75f in ProfilePager . java to improve layout responsiveness for better user experience
replaced ` RuntimeEvent ` with ` RecompilationEvent ` in multiple files and added a new class ` RecompilationEvent ` to
added a new configuration property ` HOST _ SYS _ PREPPED ` and its corresponding getter method in the ` Configuration ` class to manage
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and updated related logic in ` DatabaseChangeLog . java
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 563636 - remove
added entity and score properties handling in StaticPipeline to enable dynamic configuration of entities and scores based on provided properties
updated file path handling in Frame . java and modified WhoopsModule . java to incorporate a configuration check for the Who
[ geos - 8545 ] catalogrepository . getdatastorebyname ( ) return null if the store do not exist in the workspace
refactor Assert class to improve code readability to enhance maintainability and ease of understanding
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` to
refactored the test so that it do n ' t fail on slow machine
replaced ` IMeasurementSchema ` with ` MeasurementSchema ` in ` writeAligned ` and ` writeAlignedWithTSRecord ` classes to simplify
updated loop structure and added memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve code
updated the JAR file name from " slf4j - log4j12 - . jar " to " slf4j - reload
[ huebridge ] fix osgi test failure
updated package names for multiple activities from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities `
[ drools - 1276 ] ignore kiecontainersolverfactorytest until fix
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ service ` , ` _ avroSchema ` , and ` _ topicName `
refactor AbstractExpressionPart class implementation to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in taskslot
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` NettyWebSocketTest
added error handling for lock release in MoveTask . java to improve robustness by catching LockException when releasing locks
replaced the use of Properties with ResourceBundle for retrieving gem path and version to improve resource loading efficiency and maintainability by using a centralized bundle
transaction : use byteutil . empty _ byte _ array instead of a static empty byte array .
refactor variable declaration for clarity in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] fix flaky jobmanagerstartuptest
fix : [ beam - 10625 ] add miss ` ` proto ' ' namespace for ` ` datastream ' ' resource
added a Bundle to the builder in FileDisplayActivity to allow customization of file display options
changed control flow from break to continue in ParticleEmitter . java to ensure proper handling of null particle scenarios
updated expect times in AmbariManagementControllerImplTest from 2 to 3 and increased the expected number of clusters from 2 to 3 to reflect
removed the nullable attribute from the @ Column annotation in TransientSessionTicketImpl . java and added exception handling in JpaTicketRegistry . java to
updated Bug4823811 . java file to improve code clarity and maintainability
replace direct argument addition with a function call to apply the path relativizer to enhance flexibility in path handling during pattern deletion
updated requestFullState ( ) method to accept a boolean parameter indicating if the request is an initial request to ensure that the requestFullState (
added attribute property and updated methods in ShibbolethCompatiblePersistentIdGenerator to support attribute - based ID generation to enhance flexibility in generating
removed unnecessary whitespace in RequestValidationService . java to improve code readability and maintain consistency
refactor keyboard message handling in UiThreadHelper to use a Bundle for hiding the keyboard logger to improve code readability and maintainability by
removed redundant lines in FileNodeProcessor . java and added imports in MManagerBasicTest . java and MTreeTest . java to improve code
renamed NavigableMap and NavigableSet classes to improve clarity and consistency in naming conventions
add a testslurpfile ( ) method to make sure slurpfile ( ) do n ' t throw an exception
changed access modifier of ` wrap ` method from protected to private and added ` @ FunctionalInterface ` annotation in multiple classes to enhance encapsulation
refactor span retrieval in TraceWebFluxTests to use a helper method for clarity to improve code readability and maintainability by redu
added support for DateWritable in ETypeConverter and related classes to enhance date handling capabilities in Hive schema processing
replaced a hardcoded comma - separated string with a constant from Patterns to improve code readability and maintainability by using a centralized
ggb - 1188 allow positive double value to be convert to double in the input dialog
refactor column count validation logic in SemanticAnalyzer . java to improve clarity and maintainability of column count checks
refactor WANDScorer . java to improve handling of max scores and assertions to enhance code clarity and ensure proper validation of max scores
refactor Correspondence class for improved clarity to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to improve clarity and maintainability of the code by
modified the initialization of ` curPixVal ` in ` XRSolidSrcPict . java ` and added a new class ` WhiteTextColor
fix a bug in the biomedictionary . gettypes ( ) method that return an empty collection instead of a set .
corrected the spelling of " withinTolerance " to " exceedsTolerance " in BoundedLocalCache . java to improve code readability and
updated the test stability annotation in TaplTestsLauncher3 . java to include local and platform stability rules to improve test stability
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure ` logFileSuffix ` is not empty before proceeding to avoid potential NullPointerExceptions when ` logFileSuffix ` is empty
refactor PythonBuckConfig to improve code organization to enhance maintainability and readability of the codebase
added methods to add and clear system shared library names in ShadowPackageManager and updated ShadowApplicationPackageManager to return an array of system shared library
[ meiligao ] fix meiligao data format ( fix # 389 )
fix a nullpointerexception in powerdiode . getbatterycapacity ( )
replaced direct calls to IOUtils . trimCache with a new TrimCache class to improve cache management and user feedback during cache trimming operations
remove reference to google . api . client . util . lists , use com . google . common . collect . lists instead
replaced return false with NotAuthorizedException in BasicAuthAccessControlFactory and ZkBasicAuthAccessControlFactory to throw a specific exception for unauthorized access to
added @ SuppressWarnings ( " unused " ) annotations to several method signatures in the Scheduler class to improve code clarity and maintainability by suppressing
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java `
added a check for multiple files matching a specified path in StreamUtil . java to improve robustness by allowing random file selection based on the path
refactor create _ table method to use CreateTableRequest instead of EnvironmentContext to streamline table creation process by eliminating unnecessary environment context
added a volatile boolean flag ` aborted ` and modified ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to
added indentation checks in multiple block parser classes to ensure proper handling of indentation levels during block parsing
added a new ` NetworkWifiStatusReceiver ` and ` ChangeWifiStatusEvent ` classes to handle network wifi status changes to enhance
remove the check for control frames in the FrameGenerator class to simplify the validation logic for fin frames
added visibility setting for the collapse handle view in WidgetsBottomSheet to improve UI responsiveness by hiding the collapse handle
added two new files , Issue475 . java and XSS . java , for handling HTML and JavaScript parameters in the request to enhance security
added a condition to return early if the units to scroll are zero to optimize performance by avoiding unnecessary processing when there are no units to scroll
updated the condition to check if the contract list size is not equal to 1 instead of greater than 1 to ensure that the contract list is not
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes and corresponding tests in ` JsonArrayTest ` and `
added hashCode ( ) method to IPPPrintService and created TestRaceCond class for testing equality checks to ensure consistent hash code behavior for
remove db2idialect . version field and use db2dialect . getversion ( ) instead
added a check for platform fee before establishing a connection in BaseStripeManager . java to ensure that connections are only enabled when the transaction fee
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
increment first sub - sample by adaptive reconfiguration bytes if possible .
removed the ' public ' access modifier from multiple classes and constructors to enforce encapsulation and improve code readability
added import statement for Retrofit in Part and PartMap classes to enable Retrofit functionality in the application
refactor JsonBuildHelper and ParamsBuildHelper to streamline parameter handling and improve clarity to enhance code readability and maintainability while ensuring
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the AbstractFloatingView class to enable taskbar overlay functionality in the floating view
fix : update gapic - generator - java with mock service generation fix
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation responsiveness based on
removed an argument from the createRenderScript method call in AllAppsView . java to simplify the method signature for better readability and maintainability
pdfbox - 4071 : fix typo find by codespell on fossies . org
fix issue with plugin list and system - bundle property be not be save in the database .
hbase - 25827 fix checkstyle violation in integrationtestsparkbulkload
replaced hardcoded value of 0.001 with a constant LOW _ FALSE _ POSITIVE _ RATE in KeyChainGroupTest .
refactor ` rocketConfiguration ` to ` defaultConfiguration ` and introduce ` selectedIndex ` for better clarity to enhance code readability and
refactor the return statement to store the result of findAttache ( hostId ) in a variable before returning its value to improve code read
added null check for value retrieval in DefaultRecordStore . java to avoid potential NullPointerException when processing null values
kvm : throw discoveredexception instead of return null when host discovery fails
improve error message when no name or value attribute be present in < param > element
updated constructor to accept a mock object instead of InvocationContainerImpl to improve clarity and flexibility in handling mock invocations
added a method to strip method parameters and updated the ` getMethodLine ` method to use this new method to improve method parameter handling by removing unnecessary
updated version name and code for the GreatVoyage application to reflect the new release version
mondrian : use set instead of arraylist for allowedcommands in outputfilter
[ geos - 5848 ] fix styleizer option name for labelcacheitem ( # 5848 )
ggb - 1342 fix problem with overlap feature in applet
updated error messages in ValidationSuite . java to remove unnecessary colons to improve readability and maintainability of error messages
replaced an anonymous inner class for handling task launching with a dedicated ` StartingWindowListener ` class to improve code organization and maintainability by
added a doc comment inherited from MBeanServerConnection to improve documentation clarity and maintainability of the MBeanServer class
updated exception messages in CheckPackageAccess . java to include " com . sun . corba . se . impl . " and added package definition
increased the timeout for the awaitTermination method from 30 seconds to 90 seconds and added an assertion to verify that the executor service is terminated
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` in ` XRLog . java ` and added a null
added @ JsonIgnore ( true ) annotations to Schema . java to ignore JSON serialization during deserialization
increased test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to improve test reliability by allowing more time
refactored the ` train ` method in ` SimpleNaiveBayesClassifier ` to remove unnecessary initialization of ` indexSearcher `
added CheckHelperAuditModule to the Guice injector and renamed CheckHelperModule to CheckHelperControllerModule to CheckHelperAuditModule to enhance audit
updated mmm Prototype . java and ppp Prototype . java files to improve code clarity and maintainability
added a check to retrieve the transactional table property if it is null to ensure that the table ' s transactional status is correctly set based on the
[ java ] remove unused recordingwriter . writeaddress method in recordingwriter . java .
fix : use offset _ sample _ relative instead of zero for time _ us
added ` ` alias ' ' to the kairos metric query so that it work with kairos
updated the currency pairs in VaultOfSatoshiBaseService to use USD instead of CAD and added additional currency pairs to enhance currency
hhh - 14827 fix test failure due to sessionfactory leak
updated KafkaSender import from ` zipkin2 . reporter . kafka11 . KafkaSender ` to ` zipkin2 . reporter . kafka .
added GwtBinaryIntegrationTest . java and A . java files to implement integration tests for Gwt binary building to ensure that the build process
updated mouse event handling logic in BrowserContentPane . java and refactored ResultSetRenderer initialization in SQLConsole . java to improve user experience by
reformatted code in EnhancedRandomImpl . java and EnhancedRandomImplTest . java for consistency to improve code readability and maintainability
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to manage XML security properties for improved security management
added a new file ` InlineDefaultMethod . java ` containing interfaces and classes with default methods to demonstrate the use of default methods
updated SQL query patterns in SqliteFieldPredicateView . java to replace " LIKE " with " GLOB " for improved matching to enhance
[ dmn ] change the visibility of dmnprofiles method from private to protect
fixed - rscript . load ( ) and rscript . loadlua ( ) method throw npe if slave node do n ' t
[ hotfix ] [ runtime ] fix checkstyle violation in espressolanguage
updated debug log messages to use size ( ) instead of formatted string to improve clarity and consistency in logging output
fix race condition in fmloutboundhandler . sendproxy ( packet ) .
added a new HTTP _ JETTY _ SERVER _ HANDLERS constant and updated thread pool configuration in WebServer . java to allow dynamic
replaced the ` idsToShortcuts ` map with a ` removedShortcutInfos ` list and added a check for empty shortcuts to improve cl
remove unnecessary type check for value in DefaultHttpClientBinderRegistry . java to simplify code by eliminating unnecessary type checking
removed the home case from DetailFragment . java to simplify the code by eliminating unnecessary navigation
added a condition to check if the Android market is present before including play services to ensure that play services are only included when the Android market is
refactor cell parsing logic in TableBlockParser and add a new test case in TablesTest to improve code readability and ensure proper handling of
added support for a bridging header in the NewNativeTargetProjectMutator and related classes to enhance functionality by allowing customizable Bridging
refactor PotentiallyDeadCode . java to improve method handling and source path generation to enhance code clarity and maintainability by using a dedicated
added functionality to find redundant arguments in diamond classes and created corresponding test classes to enhance type safety and ensure proper handling of diamond
replaced invocation . getInvocationStageTrace ( ) . startSend ( ) with invocation . onStartSendRequest ( ) in HighwayClient
removed unused import of Utils and a debug log statement in SolrCacheHolder . java to streamline the code by eliminating unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper exception management during authentication processes
updated the condition to check for negative values in the float comparison to ensure correct handling of negative values in the floating - point comparison
[ hotfix ] [ test ] add logback . dev . xml to the list of config file
added a new file ` JaasEventCheck . java ` to handle Jaas authentication events to enable tracking of failed and successful Jaas authentication
refactor QuickstepTransitionManager to use a list of views to animate based on visible pages to improve code readability and maintainability by redu
updated the string comparison logic in ConjunctionSolrSpellChecker and added a new test class for it to ensure correct handling of non - identical
replaced ` HashMap ` with ` Map ` for the ` fetchers ` variable in ` ShadowSystemServiceRegistry . java ` to improve performance
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
cloudstack - 4892 : make agent . script . timeout configurable .
added JDBC _ SCHEMA parameter to the table parameters in AbstractJDBCConnectorProvider . java to ensure proper handling of JDBC schema in the table configuration
corrected the spelling of " sqlUpdate " in multiple files to improve code readability and maintain consistency in naming conventions
refactor schemaTypeCache initialization to use a synchronized map for thread safety to improve performance by avoiding concurrent access to schemaTypeCache
updated header addition logic in StaticServerHttpHeadersWriter and added a test for header writing with different case to ensure headers are only added if they
added JUnit @ Ignore annotation to LatticeDemo . java to mark the test as ignored because it relies on files available only within CM
added a call to mkdirs ( TEST ) in TestCollector . java to ensure the storage directory exists before proceeding with operations
added a method to set chunked streaming mode in StarTreeJobUtils to improve streaming performance for large data sets
[ jsonschema ] add basicsyntaxchecker , multipletypescriptsyntaxchecker , and singletypescriptsyntaxchecker
hbase - 25827 move protobuf dependency from hbase - protobuf to hbase - thirdparty
added a new test for recursive structure handling in BeanPopulatorTest and created a Node class to ensure that recursive structures do not cause stack overflow
added IOException to the getRemoteName method signature to handle potential IOException during remote name retrieval
added handling for IllegalArgumentException in UserAccountManagerImpl and updated client creation logic in ClientFactory and ConnectivityServiceImpl to improve error handling and ensure
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to ensure compatibility with AspectJ annotations in the security context
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by enabling hostname verification
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enhance functionality
replaced invocation . invoke ( ) with invocation . invokeUrgent ( ) in ClientSchemaService . java and modified assertions in CompactFormat
destroy all joints in the world if they ' re not need
fix npe when search for phone number in chat room .
[ hotfix ] [ test ] move sourcereaderbasetest to testutils
removed redundant null checks for document and folder in DocumentsStorageProvider . java to streamline error handling and improve code clarity
added new files ` HookDefinition . java ` and ` JavaHookDefinition . java ` , along with a test class ` JavaHookTest .
refactor buffer flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by centralizing
updated setExoOptions method to include a boolean parameter for allowTs parameter to enhance flexibility in setting video options based on live TV
remove user identifier from the identifier collection in DMRDecoderState . java to ensure proper handling of user identifiers in the decoder state
added a static Color INVISIBLE constant and updated the toString method in Color . java , and refactored imports in RailButtonShapes .
updated null handling logic logic in CountAggregationFunction and added a test for null handling query options in NullHandlingIntegrationTest to ensure proper handling of
added a deep variable initialized to - 1 in InternalTransaction . java to initialize the deep state for transaction processing
updated the name attribute in StreamInitiation to escape XML characters to ensure proper handling of special characters in XML names
updated file initialization to use a configurable work directory instead of a hardcoded " work " string to allow dynamic configuration of the work directory across multiple
added functionality to mark a rule as deprecated in RuleSetFactory to ensure that the rule is marked as deprecated based on the deprecated attribute
make amd64directcallop use codebuffer . position ( ) to call jmp .
[ hotfix ] [ table - common ] make minstamp and maxstamp static final in timerange
refactor BitDocIdSet class for improved clarity to enhance maintainability and readability of the code
[ flink - 20663 ] [ connector / timeline ] [ connector / timeline ] fix stream leak when connect url be http
reformatted code for consistency and clarity in DetailFragment and GalleryActivity to improve code readability and maintainability
fix tank not be able to drain item from the player ' s fluid .
updated CsharpLibrary . java to handle RuleAnalysisLegacyBuildRuleView for C++ library resolution to ensure proper handling of legacy build rules
added handling of iq . type . get packet that require a pep service
intrinsificationphase : do n ' t throw npe if runtime be null
do n ' t refresh active metric when there be no active metric
pdfbox - 4892 : do n ' t increment tempoffset when read objectid , genid , and objoffset
added a new constructor to LwjglAppletApplication that utilizes a Canvas instance with a listener and configuration to enhance the application ' s
simplified the string representation of Docker configuration in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve readability and maintainability of the
refactor password policy handling logic in LdapAuthenticationHandler to improve code clarity and maintainability by centralizing password policy application logic
refactor Int2ObjectCache for improved performance to enhance performance and reduce memory usage
added a new private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated its value in ` LdapUtils ` to
refactor Readable class to improve code readability to enhance maintainability and ease of understanding
updated ` JsoupNonVisualRegressionTest . java ` to use ` TestSupport . WITH _ FONT ` for PDF document handling to
updated the menu item ' s icon from share _ menu _ item to ic _ menu _ share to enhance the user interface by providing a more
replaced the method of determining if the Java version is minimum and updated related constants to improve clarity and maintainability of JVM version checks
updated the logic for determining if the driver is a JDBC41 compliant driver and added error handling for AbstractMethodError and NoSuchMethodError to ensure
refactor GenericContainer class to improve code organization to enhance maintainability and readability of the codebase
replaced HashSet with ArrayList for filtered collections in Enclosed . java to improve performance by using a more efficient data structure
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , and AbstractCasView classes
removed redundant lines of code in ChartProvider . java to improve code readability and maintainability
fix : use file . getparent ( ) instead of file . getpath ( )
modified the return statement in JavacParser . java and added a new ExtraSemiTest . java file to improve code clarity and
added methods to find users by createdAt and createdAt in UserRepository and UserRepositoryTests , and updated JpaQueryCreator to handle created
updated Test15FloatJNIArgs . java file to improve code clarity and maintainability
updated import statements and formatted version strings in mmm plugin . java and ppp plugin . java to improve code readability and maintainability by
corrected substring length calculation in MockProcessContext and added a test for fake encryption and decryption in TestMockProcessContext to ensure correct substring handling
[ java ] ensure not reentrant call during archive callback .
added a null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
added a timeout of 10000 milliseconds to the SslBytesServerTest methods to improve test stability by allowing more time for tests to complete
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a new method ` toImmutable ( ) ` to ` RealtimeIndexingCoordinator ` and changed the return type of ` toImmutable ( )
added null check before calling writeTo ( ) on exportedData to avoid potential NullPointerException when exportedData is null
updated the calculation of ` top ` and ` top ` in ` RecyclerViewFastScroller . java ` to use a new method ` getSc
updated error message in BuckWSServerPortUtils and added a method to check if the tool window is instantiated in BuckEventsConsumer to
added a conditional check for Windows platform before creating a JCheckBox in the GeneralTab . java file to ensure the checkbox is only added on Windows
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java `
refactor cropping logic in QuickstepAppTransitionManagerImpl to accommodate different layout sizes based on device profile to improve layout respons
added methods to manage the full - screen exclusive mode state in XWindow and XWindowPeer classes to improve user experience by allowing full - screen
[ net . pms . util ] fix stringindexoutofboundsexception when parse played duration
added credential handling methods for MapWork and ReduceWork in DagUtils . java to enhance security by ensuring all URIs are marked as needed for
camel - 18443 : use entryset instead of keyset to avoid npe .
trim whitespace from the thread name in SessionState . java to ensure consistent thread naming by removing leading and trailing spaces
updated error message in GpsMainActivity from " Not yet " to " You can ' t add a description until the next point has been
refactor Job class to improve code organization to enhance maintainability and readability of the codebase
added a new abstract class ` Unused ` and a test method ` testUnusedType ( ) ` in ` Main . java ` to provide
[ hotfix ] [ runtime ] rename hbase _ master _ host to hbase _ master _ hosts in stageutils
deleted EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of ` GenericRecord ` instead of a single ` GenericRecord ` to allow multiple output
updated MAX _ DELEGATE _ LOCK _ PERIOD handling to allow values greater than or equal to 10512000 and adjusted related calculations to
server : fix npe when network rate be 0 ( # 4696 )
removed initialization of services and updated the applySpecification method in CmcExchange . java to streamline the exchange initialization process and improve code clarity
updated configuration retrieval from " seedNodes " to " seed . node . ip . list " and changed configuration constants from " config . json "
set ` ` hazelcast . client . tpc . enabled ' ' to false by default
updated Swagger version from 2.2 . 10 - 1 to 3.18 . 2 in multiple API application classes to ensure compatibility with the latest
refactored the division logic in MutableBigInteger and added a new ModInvTime class for computing modular inverses to improve performance and
refactor key assignment logic in NamedObjectList . java to improve clarity and structure to enhance readability and maintainability of the code
updated method names from ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` across multiple compactor classes to improve clarity and consistency in
refactor AsyncCache and Cache classes to improve code organization to enhance maintainability and readability of the codebase
added import for RCFileInputFormat and registered it with Kryo to enable support for RCFileInputFormat serialization in the serialization process
added methods to retrieve Java types and categories from a Column in TypeMapperComponent to enhance type mapping capabilities for better data handling
added error handling for invalid host headers in the Request class to ensure proper HTTP error handling and provide clearer feedback for invalid host headers
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` for retrieving ` TimeZoneFinder ` instances to improve
refactor addOutgoingValues and forEachOutgoingValue methods in StandardOp . java to improve handling of outgoing values to enhance code clarity and maintain
lucene - 10696 : fix segmentreader to use the same directory a the segmentreader
added methods to check for the existence of main thread profile in multiple DAO implementations to ensure proper handling of main thread profile checks in the application
added validation to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi to ensure that annotations are not
updated constant names from " greekLowerCase " , " irishLowerCase " , " uaX29UrlEmail " , and " t
refactor HSSFSheet and Sheet classes to improve code organization to enhance maintainability and readability of the code
replace lucenesearchrequestprocessor with discoverysearchrequestprocessor since dspace 4.0
added a list to manage time zone identifiers in BasicDateTime . java to ensure accurate representation of time zone identifiers in the application
updated SurfaceSyncGroup instantiation to include a specific name to improve clarity and consistency in naming conventions
updated GridFsTemplate to remove unnecessary casting of gridFSFile ID and improved assertions in GridFsTemplateIntegrationTests to enhance code clarity
added assertions for column indices in ` ShadowDownloadManagerTest ` and implemented methods to set total size and bytes in ` ShadowDownloadManager ` to
refactor character handling in TextField to use a boolean variable for clarity to improve readability and maintainability of the code
added a null check for equality comparison in GroupNodeViewModel to prevent potential NullPointerExceptions when comparing GroupNodeViewModel instances
added a method to determine if a block is terminal based on the last non - null variable node to improve code clarity and maintainability by
added hashCode method to IntervalXYDelegate and modified equality check in XYSeriesCollection to ensure consistent hash code generation and avoid potential null pointer exceptions
clean up clientqueuedisruptiontest after each test
updated formatting in CloudWatchAppender . java and refactored test method names in CachingAttributeRepositoryTests . java to improve code readability and
replace ` GsonBuilder . serializeSpecialDoubleValues ( ) ` with ` GsonBuilder . serializeSpecialFloatingPointValues ( ) ` in serialization methods
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduce
added checks for non - empty strings before canonicalizing language tags in Locale . java and LanguageTag . java to ensure that language tags are only
kvm : add kvm . ssh . to . agent configuration option to control whether or not the management server should be able to ssh into
removed the ` public ` access modifier from several methods and constructors in the ` Scheduler ` and ` SchedulerWhen ` classes to improve encapsulation and
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to ensure compatibility with the latest API changes
added a condition to check if the string contains a hyphen before processing it to ensure that the filter only applies to non - hyphen characters
updated label text from " natural order " to " Natural column order " in BrowserContentPane . java and modified method calls in Data
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in Utils . java to
replaced ` write ( remoteAddr ) ` with ` write ( htmlEncodeButNotSpace ( remoteAddr ) ) ` in ` HtmlSessionInformations
updated the event topic check in ItemStateTriggerHandler to include " smarthome / items / " instead of " / " to ensure accurate
refactored synchronization block in FastHttpDateFormat . java to improve code readability and maintainability
refactor file moving logic to use a fixed thread pool for improved concurrency handling to enhance performance and maintainability of file moving operations
added a new static method ` trigger ` to ` WrapTimer ` for scheduling timers with specified period to enhance timer functionality by allowing customizable period
[ flink - 20663 ] [ table - common ] support local _ date , local _ date , local _ time and local _
updated error handling in AbstractStatusReporter to include a verbose option for better error reporting
updated ClickStartHandler initialization to include a boolean parameter for menu visibility and added conditional menu toggling based on menu visibility to ensure menu is
server : do n ' t allow s2s vpn connection to be esitablished between the same account ' s vpn gateway and the
refactor error handling in CursorReadingTask and add a new test case in CursorReadingTaskUnitTests to improve error handling logic and ensure proper
added logging for encrypted PDFs in PDFBoxThumbnail and PDFFilter classes to ensure proper handling of PDF files that are not encrypted
fix the problem that the service be not shutdown when the zookeeper client be close .
rename AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve clarity and consistency in naming conventions
updated the ` deleteItem ` method to use ` getContentResolver ( ) . delete ( uri , null , null ) ` instead of ` getSelected
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of the replaceOrderBulk method from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > and updated
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and add ` enterFunctionNode
added a new file ` J9ConstantHelper . java ` and refactored ` ObjectHash . java ` to utilize it to improve
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification behavior to ensure that concurrent modification exceptions are
added ability to remove resource from roster of a session if it ' s unavailable .
replaced ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a new method
reformatted the loadHandle method call in FunctionObjectCreator . java for consistency to improve code readability and maintainability
added a null check for ` extTypeCustomDesers ` in ` MessagePackFactory ` and modified the ` copy ` method in ` Message
remove system . setproperty ( ` ` mockserver . logLevel ' ' , ` ` warn ' ' )
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test execution by eliminating unnecessary tests
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code and
updated scoreMap and termScoreMap to use String and Map < Float , Map < Float , Float > > instead of Float , and adjusted
updated conditional checks in U64 . java to use negative values and added a new eq method to improve input validation and implement equality check functionality
removed the headline style from MainViewModel to streamline the UI by eliminating unnecessary styles
updated notifyChange logic in WallpaperColorInfo to include support for dark text to ensure correct notification based on the support status of dark text
[ hotfix ] [ checkpoint ] fix checkstyle violation in checkpointrequestdecider
updated import statements and modified the maximum pool size and keep alive time constants in Parallel . java to improve code clarity and maintainability by using
replaced ` filter ` with ` anyMatch ` for provider matching in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
added test requirements for Windows and non - ARM environments in OpenCVImageFactoryTest . java to ensure compatibility with the Windows server core container
fix for http : / / issues . apache . org / activemq / browse / amq - 2590 - add prefetch support
[ py4j ] fix getreturnvalue ( ) method to throw any type of exception .
added a new annotation ` Issues ` to the ` Issue ` class in the ` mmm Issue . java ` file to provide a more
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java to align user
refactor socket connection to use a configurable socksProxyHost if available to improve flexibility in managing socket connections based on system properties
[ hotfix ] fix checkstyle violation in slotreport and slotstatus
replaced the import of ` ClassUtils ` from ` org . apache . commons . lang3 ` to ` org . apache . commons . lang
replaced instances of HashSet with LinkedHashSet in SslContextFactory . java to maintain insertion order for protocols , including cipher suites , and selected protocols
added a static ` systemResource ` variable and logic to return it if the resource matches ` systemResourceLocation ` to improve resource management by avoid
[ hotfix ] [ runtime ] use a constant for the number of plaintext segment in streaming aead .
added a test for invalid circuit breaker fallback in ServerMvcIntegrationTests to ensure proper exception handling for invalid fallbacks in the circuit breaker
added SSL connection factory to the HttpClient builder to enhance security by allowing hostname verification for HTTPS connections
replaced resetBytesReadCounter ( ) with setSizeLimit ( 0x7FFFFFFF ) in PerformanceTest . java to optimize memory usage
moved the ` preferAES ` property from the ` ProtectionPolicy ` class to the ` StandardProtectionPolicy ` class to streamline the
use logger instead of system . out . println in camel - opentelemetry
[ hotfix ] [ test ] remove flaky test from elbintegrationtest
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity by
added error handling for file creation in DiacriticTest . java to improve robustness by preventing file creation when the locale or file
hhh - 15827 - fix timeout in oracle 11
refactor texture file handling in TextureUnpacker . java to improve error handling to provide clearer error messages when an atlas image cannot be found
refactor AmbariManagementControllerImpl to improve concurrency handling and ensure proper synchronization to enhance thread safety and maintainability of the code
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the result set is not closed and implemented a method to check if the query is closed to ensure that the
http : / / issues . apache . org / jira / browse / amq - 4896 - remove support for mark ( 0
added logic to remove pre - deleted databases from the schema map in ClusterSchemaManager to ensure that all pre - deleted databases are removed from the
removed the " chunkedWriter " property and updated the write method in Http1xUpgradeToH2CHandler . java to streamline the
updated item ID comparison logic in EnhancedBrowseFragment . java and added deleteItem method in FullDetailsFragment . java to ensure correct item deletion
refactor RuleFinder to use an interface RuleBank and update related methods to improve code organization and maintainability by centralizing rule management
[ tl ] handle exception in jcatlscrypt . dofinal ( ) .
added new files TestMonomorphicObjectCall . java and Object . java implementing native methods to facilitate testing and object finalization
replaced the ` removeMetaDataSource ( session ) ` method with ` toFront ( ) ` in ` DataBrowser . java ` and `
hbase - 25827 scanquerymatcher should use scan . gettimerange ( ) instead of scan . gettimerange (
[ hotfix ] [ runtime ] rename local _ state _ root to local _ state _ directories in taskmanagerservicesconfiguration
updated AlterTimeSeriesStatement to accept a boolean parameter for altering the view to enhance flexibility by allowing different statement types based on the alter
[ java ] fix condition . matchtext ( string ) to handle special case like ` ` * ' '
added error handling for retrieving the routing table builder in HelixBrokerStarter . java to improve robustness by handling potential exceptions during routing table
replaced ` putAll ` with ` putIfAbsent ` for ` body ` in ` HttpClientIntroductionAdvice . java ` to ensure that
camel - jms : use char [ ] instead of string for password in test
server : fix for listdomainchildren api - return all domain in recursive mode
refactor equals and isUniformDistribution methods to use ' ! = ' instead of ' > = ' for clarity to improve readability and
changed the parameter name from ' status ' to ' original ' in the initialize method of BasicTumbleStepper to improve clarity by
[ gr - 13539 ] add truffleboundary to sulong syscallclockgettimenode .
updated the ` readObject ` method calls in ` PrettyPrinter . java ` to use a ` JCTree ` variable instead of ` tree `
modified the initialization of indexToNode array to check for null before creating it to avoid potential NullPointerExceptions during node creation
refactored filtering logic in DatagramSocket and DatagramChannelImpl classes to improve clarity and functionality to enhance the robustness of filtering
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestQueryDNS . java to ensure compatibility with the latest JUnit
added a new class ` NutchServerInfo ` to manage server configuration , jobs , and running jobs to provide functionality for managing server -
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter ` to streamline
added timestamp handling in CqlInserter and ThriftInserter , and updated SettingsColumn to include a timestamp parameter to ensure proper timestamp
refactor DSAParameterGenerator to simplify the handling of strength values and improve clarity to enhance code readability and maintainability by reducing
refactor Numbers class to improve integer and double conversion methods to enhance performance and maintainability of the Numbers class
updated the mask validation logic in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for
added checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of constraint violations in database operations
[ hotfix ] [ broker ] remove setsetzeroifnotfound ( false ) from request header
added a new method ` addTab ` and refactored tab creation methods in ` Tabs . java ` to improve tab management functionality and
replaced array initializations with zero - length array initializations in multiple Java files to simplify code and improve readability by eliminating unnecessary
[ hotfix ] [ runtime ] add taskmanagerruntimeinfo to mockenvironment
refactor conditional statements in MavenVisitor . java for clarity to improve readability and maintainability of the code
updated mock variable names from " MOCK _ SECRET2 " and " MOCK _ NAME2 " to " MOCK _ NAME _
added a new file FormatCheckingTest . java to test class format errors to ensure proper handling of illegal class names in Java processes
updated line number handling in CodeGenerator to use a variable instead of retrieving it from the statement ' s line number to improve code clarity and
added a try - catch block around the method call in ConfigHelper . java to handle potential exceptions during configuration retrieval
added methods to create toggle buttons in RadioButton with specified text , icon , and command to enhance user interface functionality by allowing toggling of
updated LRUCache to initialize with a specified cache size and changed CHUNK _ METADATA _ CACHE _ SIZE from 100 , 000 to 10 , 000
made DEFAULT _ CAPACITY public in SimpleChannel and refactored capacity handling in ChannelParser and MessageBusParser to improve accessibility and
added null check for symbolicName before quoting it to avoid potential NullPointerException when symbolicName is null
fix for modecontribution so that it can be load from the command line
[ hotfix ] [ yarn ] fix the flakiness of the yarnsessionfifileitcase
updated the ` RobolectricTestRunner ` class to replace ` projectRoot ` with ` androidManifestPath ` for better clarity to enhance
updated header propagation logic in AbstractMessageProducingHandler and added tests for non - existent headers in AbstractReplyProducingMessageHandlerTests to ensure
refactor CompareMode class to improve code readability to enhance maintainability and ease of understanding
added ` HasTests ` interface to ` Arg ` and implemented it in ` RustBinaryDescription ` and ` RustLibraryDescription ` classes
updated placeholder and error drawable resources in FileMessageVH . java to improve visual consistency and maintainability of the UI components
refactor OnExitTest class to improve test structure to enhance maintainability and readability of the test code
added a new method onUserPreferenceChanged to recreate the taskbar to ensure the taskbar is recreated when user preference changes
updated HeapDump . java to use reflection for heap dumping based on the type of the ibm VM to enhance performance and maintainability of heap
camel - mybatis : fix potential resource leak in camel - mybatis
simonstewart : add a method to switch to window and quit the ie driver
updated Java version from JDK 5 to Java 5 in IteratorToFor . java to ensure compatibility with Java 5 and improve code clarity
added a method to set the application state to UNAVAILABLE to ensure the application is in an unconnected state
updated position and limit handling in ByteBuffer , Heap - X - Buffer , and StringCharBuffer classes to improve clarity and correctness of position
replaced ` toUri ( ) . toString ( ) ` with ` toString ( ) ` in ` ConditionalResolverMergeFiles . java ` to
updated array handling logic in NativeArray and added setEmpty methods in ArrayData , DeletedArrayFilter , DeletedRangeArrayFilter , ObjectArrayData
changed enum declarations from package - private to public for Protocol and Transport to allow access to these enums from other packages
replaced ` doc4 ` with ` doc5 ` in ` TestMultiPhraseQuery . java ` and added a new ` Document ` instance
do n ' t send pending reservation status for offline payment
added a new thread variable ` _ onTimeoutThread ` and refactored timeout handling in ` HttpChannelState . java ` to ensure proper
replaced printStackTrace ( ) with logger . warn ( ) and added debug logging for exceptions in multiple test classes to improve logging clarity and provide
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
updated consistencyLevel handling in read method to differentiate between local SERIAL and QUORUM consistency levels
added support for detecting " Home " model in HeosDiscoveryParticipant and modified player property handling in HeosPlayerHandler to ensure proper handling
added a new ` Wait ` class and updated ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` classes to support
added AttributeController imports and refactored node and edge data handling to utilize AttributeController for improved attribute management to enhance code clarity
added a null check for serverName in SessionManager . java to prevent potential NullPointerException when serverName is not set
nifi - 1748 - move rocksdbmetronome to nifi - controller . repository and deprecate it in favor of n
updated the method to retrieve the value of " IS _ GRANTABLE " from a results object to enhance flexibility by allowing retrieval of the
added logging statements and modified URL validation logic in JavascriptContext . java to improve debugging capabilities and ensure proper handling of JavaScript URLs
camel - 14827 : camel - cxf - mtom - allow the cxf test to run on macos
updated column modification logic in LoadTestTool . java to handle new column descriptors correctly to ensure proper handling of column modifications based on the presence of
added Disposable interface implementation to the Texture class to implement the Disposable interface for better resource management
added null checks for ` tldBundleLocation ` and changed ` WebappRegistrationHelper ` to ` WebBundleDeployerHelper ` to ensure proper
do n ' t use goquorum privacy if goquorum compatibility mode be enable
replaced IOException with Throwable in HttpInput . java to improve error handling by using a more general Throwable type
added a condition to skip the " JP " country check in LocaleTest . java to address issue with era changes in the Japanese
updated response type references from ` Wrapper ` to ` HostResponse . HostResponseWrapper ` and ` ViewPrivilegeResponse . ViewPrivilegeResponseWrapper `
updated query equality and hash code calculations in FilteredQuery . java to include the boost value to ensure accurate comparison and hashing based on the boost
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 1188 fix for ` ` select first symbol ' ' and ` ` select second symbol ' '
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
do n ' t create itemtossevent for empty spongecommon entity
refactor ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and update related references to improve clarity and consistency
fix compactionstest to use identityqueryfilter
added null check for ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java to ensure
added support for the SPEL operator in the OperatorEnum and implemented the SpELJudge class in the OperatorJudgeFactory to enhance
[ hotfix ] [ table - common ] fix checkstyle violation in localexecutionplanner
bugfix # 20619 , use org . openide . util . lookup instead of sun . misc . service
updated imports in multiple files for consistency and clarity to improve code readability and maintainability
updated variable types from ` Ref < Long > ` to ` Ref < Long > ` in ` ShadowArscAssetManager9 . java `
updated the source and target options in SetupHid . java from " 1.5 " to " 6 " to ensure compatibility with the latest
changed the access modifier of ` extractMetadataColumns ` method from private to public and refactored project rewriting logic in ` PushProjectInto
added sorting functionality for localized names in AboutActivity to ensure consistent display of localized names in the AboutActivity
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before posting a delayed runnable in HomeFragment . java to ensure that refreshing preferences only occur when live
added an exception parameter to the MappingException constructor in AuditConfiguration . java to improve error handling by providing more context during the creation of the AuditStrategy
[ hotfix ] [ test ] fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in SchemaLoader , CompositeTypeTest , and DynamicCompositeTypeTest to use a wildcard for type safety to enhance type safety
added a new ` transports ` array and a ` supportsTransport ` method in ` GitClientApplication ` , and modified ` RepositoryUrlPanel `
updated the ` TouchInteractionService ` to include a reason string and implemented ` getDelegatorName ` method implementations in multiple input consumer classes to
add null check for mavenMetadata and modify version filtering logic in ChangeParentPom . java to improve robustness by preventing null pointer exceptions
8274188 : [ testbug ] testlargepageuseforheap fail on jdk8 because of jdk - 8
cloudstack - 4892 : skip event migration if usage db do n ' t exist
polish ` ` make brokerxmlconfigstarttest work on window ' '
added a new test class ` TestObjectStreamClass ` for testing the behavior of ` ObjectStreamClass ` to ensure proper deserialization and deserialization of
refactor conditional checks in ZoneAwareDiscoveryFilter for clarity to improve readability and maintainability of the code logic
changed log level from error to warn in OpenTracingTracer . java to provide more informative logging for tracing data failures
added a toString ( ) method to the Generator class to provide a clearer string representation of the generator state
refactor URI handling in ` mmm URI . java ` and add new test cases in ` mmm Test . java ` to improve code
added a check for non - existent resources in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to ensure
added error handling for API response extraction in AccepttoApiUtils . java to improve robustness by providing a clearer error message when the API
updated ByteBuffer allocation logic in VertexBufferObject for Android version 5 and above to ensure compatibility with newer Android versions and prevent potential memory leaks
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] backward compatibility of hashjoininfo
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` sd ` variable for better
added FLAG _ ONE _ SHOT , FLAG _ MUTABLE , and FLAG _ IMMUTABLE constants , and modified PendingIntent creation
added methods to append and read column IDs in HiveFileFormatUtils and updated HiveInputFormat to use these methods to improve code clarity and
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added multiple calls to DisplayTemporaryToast ( ) in SavedExperiments . java to improve user experience by providing a temporary toast message
added version resolution logic in ` ServiceModule ` and a corresponding test in ` ServiceModuleTest ` to ensure the service version is correctly set based
added a new test class ` RawSerializationTest ` for Gson serialization tests to ensure correct handling of primitive and object collections in JSON serialization
alexeibarantsev : rename seleniumserver to sslcertificategenerator and implement it
refactor the iteration over replies in ExpansionViewHelper to use an index - based approach to improve readability and maintainability of the code
increased the timeout duration in ExpiringUrlCacheTests from 3 seconds to 60 seconds to improve test reliability by allowing more time for
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the payload handling of chunked
refactor AclImpl class to improve code organization to enhance maintainability and readability of the code
refactor test methods in EasyRandomTest to improve clarity and structure to enhance test coverage for different array sizes in the EasyRandom class
cloudstack - 5892 : fix npe when stop a vm due to an error .
added a ThreadLocal variable ` __ tryWriteAgain ` to manage thread - safe execution of ` _ runCompleteWrite . run ( ) `
refactor conditional checks and add a method to check ancestors visibility in the Actor class to improve code readability and maintainability by standardizing method
added a logging statement for rolling - update failures in RollingUpdateOpFactory . java to improve visibility into deployment group failures during rolling updates
[ hotfix ] [ table - common ] fix checkstyle violation in flink - connector
added error handling for bad credentials in DaoAuthenticationProvider and created a new event class for authentication failures to improve user authentication failure handling and provide
rename AtMostXVerificationTest . java file to improve clarity and consistency in naming conventions
updated default QTYPE from " lucene " to " luceneQParserPlugin . NAME " and modified default QTYPE from " lucene
updated SimpleDateFormat instantiation to use Locale . US for consistency to ensure consistent date formatting across different locales
added an ` isInitialized ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new ` Main
updated the ` test _ fetch _ token _ from _ authorization _ code ` method to set the ` shouldHaveIdToken ` parameter to true
added transaction management methods in DatabaseAdapter and refactored account bulk operations in GncXmlHandler to improve transaction management and ensure proper handling of
replace byte array handling with ByteArrayOutputStream for reading input data to improve performance and maintainability of the code
refactored exception handling in messagingtemplate to use a local variable to improve code readability and maintainability by reducing redundant conditional checks
added an ` isAcceptable ` method to ` AutoFormatVisitor ` that checks if ` sourceFile ` is an instance of ` J . Compilation
updated TestIndexWriterMergePolicy to set maximum buffered documents and RAM buffer size to improve performance by reducing memory usage
added a test method to update witnesses in ManagerTest . java and modified witnessCapsule handling in NodeDelegateImpl . java to ensure correct
added exception handling for NoSuchElementException in CopyOnWriteMap . java to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ log4j ] remove the log4j . level parameter from the log method
added basic authentication credentials to the reindex collection and modified metrics assertions in BasicAuthIntegrationTest . java , and modified DaemonStream . java to improve
replaced HashMap with LinkedHashMap for the ' nodes ' variable in DependencyUtil . java to maintain insertion order for better performance
add jerseysupport . internalerrormapper to handle internal error from jerseysupport
refactor header validation logic into a separate method to improve code readability and maintainability by centralizing header validation logic
added a switch statement to handle specific property keys in the systemProperties map to ensure proper handling of specific property keys in the system properties map
updated method parameters from ` String ` to ` CharSequence ` in ` StringSubject ` and added corresponding unit tests in ` StringTest ` to enhance
[ gr - 13939 ] add miss intrinsics to checkgraalintrinsics .
rename IntUtilsTest class to PrimUtilsTest to improve clarity and consistency in naming conventions
updated the connection factory to use a new datasource instance based on the forCompactor flag to ensure the correct datasource is used for compaction scenarios
refactor DeploymentOptions class for improved clarity to enhance maintainability and readability of the code
updated the method signature of ` updateTextButtonWithDrawable ` to accept a ` Drawable ` instead of ` Drawable . ConstantState ` and adjusted
refactor XmlParser and YamlParser to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leak
added a method to rewrite coalesce expressions in RexNodeConverter . java and updated SqlFunctionConverter . java to support the " coalesce
camel - 15819 : camel - hl7 - fix the unit test error of camel - hl7
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader to ensure consistent class loading behavior across different threads
refactored DefaultDateTypeAdapter constructor to accept a DateFormat instance and synchronized the serialize and deserialize methods to enhance flexibility and ensure thread safety
removed unnecessary whitespace in DocumentUtil . java to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI setting and query handling to improve code clarity and maintainability by simplifying URI handling
added a filterOldEntries ( ) method to filter entries based on their guids to ensure only valid feed entries are processed in the database
[ hotfix ] [ runtime ] change log level from fatal to warn in fshlog
refactor NodeMap class to implement the NodeMapIterable interface and implement the remove method to enhance functionality and ensure proper removal of elements from the
updated import statements and variable naming for clarity in DiscoveryClientRouteDefinitionLocator . java to improve code readability and maintain consistency in naming con
added a check for non - empty fields before adding aggregation operations in MongoRecordReader . java and modified return logic in RexToMongoTranslator
added a check for an empty admin list in DefaultAdminProvider . java and initialized it if it is empty to ensure that the admin list is
replaced MultiFields . getFields ( searcher . getIndexReader ( ) ) with SolrIndexSearcher . getSlowAtomicReader ( ) in multiple
updated the return statement in ConstantBeanHolder to use ObjectHelper for class name and identity hash code to improve the clarity of the return value
removed unnecessary line number check in GroovyParserVisitor . java to simplify the code for better readability and maintainability
remove hashcode ( ) and hashcode ( byte [ ] ) from java . lang . string
updated offerTimeout values in SedaBlockWhenFullTest . java from 100 to 200 and 0 to 300 milliseconds to improve test reliability
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to
updated the calculation of ` readLen ` in ` MessageUnpacker . java ` to ensure proper handling of buffer size based on position to improve
updated import statement for Nullable from org . micrometer . common . lang to org . micrometer . core . lang in
updated SQL query in IconCache to include user serial information to ensure proper retrieval of user - specific icons based on user - specific data
( chore ) camel - core : fix typo in backpressureforasynccallsize
fix whitelisting of module - info . class and module - info . class
added a method to fix baremetal foreign keys in the Upgrade410to420 class to ensure proper foreign key management during database upgrade
removed the IJava2DRenderer interface from the Java2DRenderer class and its associated implementation to simplify the code by eliminating unnecessary
added onTearDown method to handle offload buffer clearing in DefaultAudioSink to ensure proper cleanup of offload buffer when the audio track
added a scheduled thread pool for scheduling upstream tasks in UpstreamCacheManager to improve task management and performance by allowing dynamic delay initialization
refactor StreamType class to improve code readability to enhance maintainability and ease of understanding
updated assertions in Recording . java to include a descriptive message to improve clarity of assertion failure messages for better debugging
replaced authentication checks with admin role checks in FilestorePage and RootPage classes to ensure users are logged in to access filestore data
camel - 17979 : ignore camel - elasticsearch test until it can be re - enable
refactor the ` accept ` method to include a check for the declaring class before calling ` ReflectionUtils . findMethod ` to improve code clarity
updated button text in OfferBookChartView from leftButtonAltcoin and rightButtonFiat to buyAltcoin , sell
camel - 10650 : camel - restlet - rest - dsl - allow restlet endpoint to use restlet context path matcher .
refactor createNextBlock and createNextBlockWithCoinbase methods to accept nullable Address and height parameters to enhance method flexibility by allowing nullable
removed Serializable interface from BTreeMapJava and updated related test methods to improve serialization handling and ensure proper exception handling
added a null check for the cause of the exception before logging the error message to avoid potential NullPointerException when the cause is not available
refactor conditional statement in Main . java for clarity to improve code readability and maintainability
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter .
deleted the PlainVerifier . java file to the verifier is no longer needed for JWT signing functionality
added a condition to close system windows when the ALT tab is triggered to improve user experience by ensuring recents are properly closed when the ALT tab
updated dialog handling in DialogFragmentIT and removed unused BottomSheetBehavior imports in OCFileListBottomSheetDialog to improve dialog responsiveness and
updated MimeUtil . parseCharset method to accept " UTF - 8 " as a parameter to ensure compatibility with different character encoding settings
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper initialization of the TextField instance
replaced custom serialization method with a utility method from TestUtilities to improve code readability and maintainability by centralizing serialization logic
[ calcite - 737 ] fix previous _ value not be parse correctly for group by ( calcite - 737 )
updated error handling for negative array sizes in JAXWSExceptionBase . java to ensure robustness by preventing negative array size exceptions
test : migrate ctunresolvedimporthandlerest to junit 5 ( # 1396 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow for more time for processing tasks
[ hotfix ] [ test ] change default default scheduling strategy from legacy to region
added a title field with getter and setter methods in ShadowActivity , updated annotations in ShadowAlertDialog , ShadowTextView , and ShadowToast
replaced Apache Commons Logging with POILogger in POIFSFileSystem . java to improve logging consistency and maintainability
updated alarm handling logic in InstarHandler . java to improve event processing and event detection to enhance clarity and functionality of motion detection in the
add map . delete ( ) and localmapstats . getremoveoperationcount ( ) in localmapstats
updated enum declaration formatting and modified status check logic in Response . java to improve code readability and handle additional status codes correctly
refactor code to use a dedicated method for finding the javac location to improve code readability and maintainability by centralizing javac location
add project name to -- project - name for stable channel support ( # 1188 )
added a new test class ` DeprecatedStubbingTest ` for verifying the latest stubbing behavior of Mockito to ensure that the latest stub
updated the import statement from ` org . eclipse . jetty . server . DispatcherType ` to ` javax . servlet . DispatcherType `
add nml and nx a valid pattern for the partmodifiermodel gr annotation , a suggest by valerybokov
add a system property to allow rsa key exchange .
corrected the variable name from ' output _ reader ' to ' reader ' in multiple Java files to improve code readability and ensure proper resource
added OAuthFactory and its service handle handling to PubSubAPI , SDMAPI , and SDMAccountHandler classes to improve OAuth service management and
replaced AGGRESSIVE _ EASE interpolation with EMPHASIZED interpolator in TaskbarEduView . java to
added functionality for updating region location in ConfigPhysicalPlan and improved logging in ProcedureManager and RegionMigrateProcedure to enhance region migration process and enhance
added a new file ` FileDialogLeakTest . java ` to test the finalization of ` FileDialog ` to ensure that the `
hbase - 2696 move testopentableincoprocessor to org . apache . hadoop . hbase . coprocessor
[ gr - 17454 ] disable uninterruptible method in truffle feature .
[ hotfix ] [ protobuf ] remove unused split method in pb deserializer and serializer
changed the condition from checking if ` dims [ 1 ] . disi ` is null to checking if ` dims [ 1 ] . disi
updated methods in ExoPlayerTest , DynamicConcatenatingMediaSourceTest , and FakeMediaSource to use a Handler for source info refreshing
added constants for Java version checks in Constants . java and updated Helper . java to use these constants to ensure compatibility with Java 9 and improve code
updated the constructor of FileReporter to accept String and File types to ensure proper type handling for null inputs in tests
changed the condition from checking if end - to - end encryption keys exist to checking if it exists to ensure that end - to - end encryption
added home button functionality to the action bar in DirectMessageConversation to enhance user experience by allowing users to navigate to the home screen
added user retrieval functionality in RpcServlet and RpcUtils , and updated protocol version to 6 to enhance user management functionality and improve protocol compatibility
added @ EnabledIfSystemProperty annotation for architecture detection in TestJdbcPluginWithMSSQL . java to ensure compatibility with AMD64 and
replaced ` startClass ` with ` originalStartClass ` in ` WhiteboxImpl . java ` to ensure proper handling of the original start
updated exception message and added local handling for parameter register numbers in DexBody . java to improve error reporting and ensure correct unit calculations for register
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
fix nimbus look and feel in common app ( fixes # 263 )
updated regex in AppPage . java to ensure consistent formatting of version strings to improve code readability and maintainability
refactor animation listeners to use local variables for alpha and translation values to improve code readability and maintainability by reducing redundancy
dumpedprivatekey : fix typo in exception message
fix typo : offerpayload - > newofferpayload
updated milestoneParameters initialization in TicketPage . java to differentiate between open tickets and repositories based on the milestone state
fix wood pipe battery to be 80 by default
added a new method ` getClusterKey ` and modified the ` getStateMachineClusterInstance ` method to include blueprint name and revision parameters to improve cl
set default value of downgradeAllowed to true in UpgradePack . java and added a test for downgrade functionality in UpgradePackTest . java
updated XML entity scanning methods to use NameType . ELEMENTSTART and NameType . ATTRIBUTENAME instead of NameType . ATTRIBUTE to ensure
added a new configuration option ` EMULATE _ SYSTEM _ LOADLIBRARY ` and modified library loading logic in ` Library . java ` to
refactor sorting and sorting methods to use a dedicated ` getAppNameComparator ( ) ` method to improve code readability and maintainability by central
refactored entry handling in DefaultPlatformManager and added directory creation in FatJarStarter to ensure proper resource management and ensure directory existence
reformatted the ` doTest ` method and enhanced the assertion message in ` TestSecretKeyCredentialHandler . java ` to improve code readability and
camel - 18443 : camel - spring - boot - starter - optimize routebuilderfinder to avoid reflection
[ hotfix ] [ metric ] clarify documentation of metricoptions
hbase - 25827 testfulllogreconstruction . testfulllogreconstruction fail on slow ci server
added a new boolean field ` reuseAddress ` and its corresponding getter and setter methods in ` DatagramSocketOptions ` to enable the reuse of
use getshutdownmessage ( ) instead of hardcoded " server shutting down . "
kristianrosenvold : remove deprecate locatable interface
updated error messages in VersionInfo . java to clarify that the VERSION _ FIELD field must be searchable or retrievable to improve clarity
replaced ` equalityPredicateColumns ` with ` predicateColumns ` for clarity to improve code readability and maintainability by using a more d
removed unnecessary whitespace in HandshakeHandler . java to improve code readability and maintain consistency in formatting
reformatted string in Navigator . java for consistency to improve code readability and maintainability
updated access modifiers of constants in RecordReaderFactory from private to package - private and added a new test class for ParquetRecordReaderConfig registration
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL query types in MongoQueryCreator and corresponding unit tests to enhance
refactor group by expression handling in CalciteSqlParser . java to improve clarity and maintainability of group by expression validation logic
replaced UnsupportedOperationException with a call to Unsafe . invokeCleaner in MappedByteBuffer and added atomic buffer reference counting in FileChannelLinesSpliterator to
replaced direct calls to ` l . getValidator ( ) ` with a local variable ` validator ` in LdapUtils . java to improve code read
added a schedule method to CircuitBreakerImpl and updated test cases in CircuitBreakerTest to utilize ScheduledFuture for better resource management and improve test
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags to simplify intent settings by removing unnecessary flags
changed ajax property from " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in Submission
updated the display name in TableExtRetrieverTest from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to
make addexportedcount ( ) and getexportedcount ( ) synchronize
updated import statement for IntRangeUtil . requireNonNegative from IntRangeUtil1 to IntRangeUtil . requireNonNegative to ensure compatibility with
updated character validation and encoding logic in HttpParser . java and added a test for encoded HTTP headers in HttpParserTest . java to ensure proper
updated the layout reference in ConfigurePagerActivity from trends _ activity to configuration _ activity to improve the clarity of the activity ' s
updated log message format in SLWTTextListing . java to include specific position information to improve clarity of log output for better debugging
refactor ForceLeaderTest to conditionally use Tlog replicas and introduce ForceLeaderWithTlogReplicasTest to improve test reliability by
refactor Thread class to improve code readability to enhance maintainability and ease of understanding
added new template file suffixes and a forceTemplateMode flag in AbstractConfigurableTemplateResolver . java to improve template file handling and allow for forced template
camel - 17462 : camel - cxf - do not set namespace to cxfpayload and cxfbinding if it be not specify
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency in formatting
updated ToChar . java to format date and month values to ensure consistent formatting of date and month values for better readability
added configuration for valid transaction list and write ID in GenericUDTFGetSplits . java to ensure proper handling of valid transaction and write ID
replaced ` ArrayList < String > ` with ` Collections . emptyList ( ) ` for ` columnNameProperty ` and ` columnTypeProperty ` to simplify
added null check for book path in DataHolder . java and implemented hasNoInitialImage method in Picture . java to ensure proper handling of book
added a check for ` NextRecord . sid ` in the ` manufactureStrings ` method in ` SSTDeserializer ` to ensure that
refactor grid column handling in AppPreferencesImpl to use a constant DEFAULT _ GRID _ COLUMN to improve code readability and maintainability by
updated the error message for the " diff " field in Platform . java and ComparisonFailureWithFieldsTest . java to clarify that line
added a ` waitingForKeys ` flag to ` DecoderInputBuffer ` and updated related logic in ` ClippingMediaPeriod ` and `
removed the " / api " prefix from multiple API path annotations in OkexV3 . java to streamline API path usage by removing unnecessary
refactor conditional statements in LineUtilitiesTests to use braces for clarity to improve code readability and maintainability
added error handling for varargs syntax in JavacParser and created new classes VarargsAndOldArraySyntax and T6569633 to
added thread verification for playback thread in DefaultDrmSession and DefaultDrmSessionManager classes to ensure proper access to playback threads during session management
added support for methods in the VariableContext and updated related tests to enhance functionality to support method calls and improve test coverage for variable context parsing
[ pytorch ] add test for invalid compilation unit and profile string .
[ java ] : fix ` ` buffer . limit ( bytes > = 0 ? bytes : 0 ) ' ' issue .
added a responseTimeout property to HttpClientProperties and updated NettyRoutingFilter to utilize it to enhance HTTP response handling by allowing configurable response timeouts
replaced ` NativeLinkTargetGroup ` with ` NativeLinkTarget ` and deprecated the method ` getNativeLinkTargetInput ` in ` NativeLink
added unit test base on user forum issue
added RexFieldAccess handling in ASTConverter and refactored ExprNodeFieldDesc handling in RexNodeConverter to improve field access processing
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
[ java ] fix npe in webclientrequestbuilderimpl # relativizerelativeuri when proxy = = noproxy
refactored certificate handling in PKCS12KeyStore and updated references in StoreSecretKeyTest to improve clarity and correctness of certificate management in the
added reflection access checks and refactored related methods in NativeObject , Bootstrap , and ReflectionCheckLinker classes to improve security checks and enhance
removed the public access modifier from the constructors of the CollisionMap class to enforce encapsulation and improve code readability
mark the method ` getRawInputFromTransactionInput ` as deprecated and add a null check for ` TransactionInput ` to indicate that the method should
refactor conditional statements into a switch statement in ConfigurationValueConverter . java and Main . java to improve code readability and maintainability by using
cloudstack - 4892 : remove region _ id parameter from user and account insert
added support for handling EncryptedDocumentException in OldExcelExtractor to ensure compatibility with old Excel files that do not support encryption
[ gr - 17449 ] add -- add - exports = org . graalvm . nativeimage . builder / com . oracle .
removed unnecessary whitespace in TimeLineCursorAdapter . java to improve code readability and maintainability
increase the timeout duration in BatchingStateChangeUploadSchedulerTest from 10 to 50 milliseconds to allow for more time for retries to complete
updated file handling in ShadowContext to create a new File object and refactored directory deletion in ContextTest to improve code clarity and ensure
replaced custom exception factory implementations with direct method calls for ` AssertionErrorFailedError ` and ` JUnit . framework . ComparisonFailure ` to simplify
increased WAIT _ TIME _ MS from 10 , 000 ms to 60 , 000 ms to allow more time for instrumentation to complete
updated import statements and added support for the " aud " extension in ConnectOAuth2RequestFactory and ConnectTokenEnhancer classes to enhance the
camel - kafka : remove default value for breakonfirsterror in camel - kafka
added a new constant selectableItemBackground with a value of 0x10a13 to facilitate the retrieval of the background color for
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type assignment for updated entries
[ java ] add resumablerandomaccessfilelistener to handle resumable file .
replaced the class name " AccessLogValve $ 3 " with " AbstractAccessLogValve $ 3 " in SecurityClassLoad .
added an iterator to iterate over formats in HSSFDataFormat . java and updated tests in TestWorkbook . java to ensure correct handling of
[ hotfix ] [ kafka ] deprecate unused method in flinkkafkaproducer
updated the condition for checking compressed length in CompressedInputStream . java to ensure correct validation of the compression length based on the maximum compressed length
camel - 18443 - camel - spring - data - redis : add an idempotent processor for string value to redis .
fix vanilla bug where vanilla do n ' t use metadata in containerrepair .
added conditional logic to return the correct artifact path based on the layout type to ensure proper handling of local repositories based on layout type
[ hotfix ] [ runtime ] make sure taskmanager be initialize before start it
added functionality to deploy a file based on its groupId , artifactId , version , and classifier to enhance the artifact resolution process by allowing users to deploy
replaced calls to ` getTemporalPath ` with ` getInternalTemporalPath ` in ` UploadFileOperation . java ` and added a method to
updated imports in FeedEntryStatusDAO to use Google Commons collections instead of Google API client utilities to improve code maintainability and reduce dependency on
added thread execution logic in ` ContextImpl . java ` and a test for blocking execution in ` BlockedThreadCheckerTest . java ` to
updated the ` instantiate ` method to include a ` formatterString ` parameter and modified the ` convert ` method to ` convertOrNull ` to ensure
updated file reading logic in LoadContactsTask to support different Android SDK versions to ensure compatibility with newer Android versions and improve file handling efficiency
replaced setter methods for remoteAddress and hostname with direct assignment to improve code readability and maintainability by using the ` this ` keyword
added a null check for realClass in Robolectric . java to ensure that shadowClass is not annotated with @ Implements to prevent runtime
do n ' t use tlsmutualauthenticationcertificatechain if tlsmutualauthenticationrequired be false
replaced a wildcard character set with ISO _ 8859 _ 1 and added a test for requesting plain HTTP endpoint over HTTPS to ensure proper
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to improve accessibility of consumer and producer properties
removed unnecessary else block in PageChangeListener . java and added import statements in FrameRenderer . java to improve code readability and maintainability
fix incorrect warn message in communicationmanager
# 1186 - optimize draft query for draftable element ( # 1186 )
added error handling for resource temporarily unavailable in MultipartBody . java to improve robustness by avoiding potential IO exceptions during file transfer operations
corrected array declaration syntax in ExecutableFactory and ZipFolder classes to improve code readability and maintain consistency in array usage
fix javadoc warning in javax . security . cert
fix attach file action not use the correct working directory
added LoadOptionsBuilder and SchemaInfoLevelBuilder imports and modified SchemaCrawlerOptions creation to use them to improve configuration flexibility by allowing dynamic schema
renamed the package from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary `
replace exception throwing with returning null in TestReader . java to improve error handling by returning null instead of throwing an exception
added setter methods for name , enabled , and expanded properties in ProjectProperty to ensure proper properties are set from the prototype object
refactor connectionInfo initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
refactor DataStreamJob to improve code organization to enhance maintainability and readability of the code
replaced the try - with - resources statement with a try - with - resources statement and added error handling for EPIPE to improve resource management
camel - 14863 : camel - cxf - fix the issue of camel - cxf do n ' t work with camel - c
added a conditional check for " h2 - 14 " protocol in the HTTP2ServerConnectionFactory to ensure proper handling of H2 - 14 protocol
updated method and variable handling in LambdaToMethod . java and added lambda detection in ClassFileVisitor . java to improve code clarity and ensure correct
mondrian : fix a bug with the tregex pattern that do n ' t match the whole expression
[ dl4j ] increase cache download timeout to 60
added a method to set the slop factor in the MPQ parser to enhance query parsing accuracy by allowing phrase slopping
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test reliability by allowing more time
updated the server port from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to
refactor : make game and screenshot task run on the main thread .
updated visibility logic in EditShareFragment to check for edit options availability to ensure proper visibility based on available edit options for better user experience
updated the progress calculation in DepthController . java to ensure progress does not exceed a minimum value of 1.1 f to improve user experience by
[ java ] remove unused method that be no longer need .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication response handling in DelegatedAuthenticationGenerateClientsAction to
added null checks for the service before accessing its properties in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUI
[ pantheon ] add ` ` hidden = true ' ' to help message
added a method to exclude the " CoroutinesRoom $ Companion " class from instrumentation in AndroidConfigurer to prevent instrumentation of specific room
modified the ` isSupported ` method to synchronize on the current thread ' s class loader to ensure thread safety when accessing the context class loader
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the initialization process by eliminating unnecessary methods
camel - 1745 : fixed the issue that camel - jbang - persistent and camel - jbang - temporary queue reply should use the
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added functionality to open and close MC blocks for tagged PDF elements in PdfDocument to ensure proper handling of tagged PDF elements in the document
log4j2 - 1349 add test for patternlayout . patternselector ( )
simonstewart : do n ' t throw unsupportedoperationexception when run hta test in iehta mode
renamed ` MwPostResponse ` to ` MwThankPostResponse ` and created a new response class ` MwThank
added SocketBased interface and updated ChannelEndPoint class to implement it to enhance socket handling capabilities in the application
updated the logic for enabling and disabling RevokingStore in mmm Manager . java and ppp Manager . java to ensure proper
added unit tests for the HQL collection implicit join functionality in HQLTest . java to ensure correct handling of implicit joins in the query results
added line breaks to expected and actual strings in NonVisualRegressionTest to ensure consistent line breaks across different operating systems
replaced references to ` toCommit ` and ` pendingCommit ` with a ` filesToCommit ` collection in ` IndexWriter . java `
updated method access modifiers from ` final ` to public in ` BaseError . java ` and added the ` @ Final ` annotation to ensure that
added validation for the consumption percentage in ConsumeUserResourcePercentActuator to ensure that the percentage is within the range of 0 to 100 to prevent
added a condition to check if the legacy login should be shown based on a new boolean resource to enhance user experience by allowing users to toggle the
renamed the test class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
updated response page assignment logic in EditTeamPage . java to ensure proper navigation to the UsersPage page
updated debug log message to include the exception when initializing plugin credentials to improve debugging clarity by providing more context in error messages
refactor shutdown logic in ConnectionManager to ensure proper shutdown of the server socket channel to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code organization to enhance maintainability and readability of the code
refactor dynamic partition specification creation logic into a separate method to improve code readability and maintainability by reducing duplication
fix problem with round hack in scientific format .
added a ` visitDirectory ` method to ` JarDirectoryStep ` and a corresponding test in ` DirectoryTraversal ` to ensure proper handling of directory
added a new file ` JWKSetEditor . java ` that implements a property editor for JWKSet to enable customization of JWKSet properties in
refactor ` finish ` method in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` to use ` PendingTerm `
[ gr - 17454 ] avoid call method . getparameterklasses ( ) in toespressonode . toespresso
changed the default value of " fetcher . threads . per . host . by . ip " from true to false to disable thread fetching by IP
added a check for queryTimeout in addition to transactionTimeout in the conditional statement to ensure proper handling of timeout values in the query execution logic
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to include target configuration
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
fix the issue of network usage stats update task be run immediately after the initial delay of network stats update task
updated animation interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use FINAL _ FRAME instead of a fixed fade interpolation to
updated swipe length calculation in Background . java to adjust navBar ' s visible bounds based on display density to improve user interface responsiveness by
added a new module - info . java file for the Jetty HTTP3 server module and refactored existing classes to improve module dependencies and
[ zeppelin - 4892 ] fix nullpointerexception in jsontype . settextvalue ( ) when value be null
simplified the assignment of the ` ctx ` variable by removing unnecessary parentheses to improve code readability and maintainability
[ hotfix ] fix checkstyle violation in checkpointconfig and executioncheckpointingoptions
updated the method signature of ` reportInnerClassReferences ` to use ` Element ` instead of ` TypeElement ` to improve clarity and functionality by
added an extra space to the command string in TimestampCheck . java to improve command formatting for better readability and maintainability
replaced FluentIterable with Java Streams for filtering and processing trace files to improve code readability and maintainability by using modern Java features
[ zeppelin - 4892 ] add register = true a default value for serviceconfig . register ( )
do not close otr session if security otr mode be disabled
added outline size , transparency , and color properties to NodeLabelRenderer and updated rendering logic accordingly to allow customization of node label outline properties and
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated a boolean value from false to true in the Win32FontManager class to ensure correct behavior of font management functionality
added null check and cursor setting in TreeVisitor . java to ensure proper handling of null values and prevent potential NullPointerExceptions
fix ( jdtbatchcompiler ) : do n ' t proceed on error if the compiler be not in a classpath
added contentAlignmentPoint and textAnchor properties with their respective getters and setters in LabelBlock . java and updated label drawing logic to utilize these
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
changed the type of the ` isLoopback ` variable from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface `
updated ` fromRfc1123DateString ` method to accept a ` Locale ` parameter to ensure consistent date formatting across different locales
updated the download method to use withExtension ( " . pdf " ) instead of download ( ) to ensure proper file extension handling for missing files
add an option to not output a hit flowfile even if no hit be find for a query
cloudstack - 4892 : remove aggregationratio parameter from quota update method ( # 4892 )
[ java ] fix switch / cases indentation find by codespell on fossies . org
do n ' t call uncheckrun ( ) in readfilesp . processfile ( )
refactor widget handling logic in PageChangeListener . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
patch from bug # 44536 - fix for bug # 44536 - handle write protected file
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session checks
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated status message from " reachable = false " to " not reachable " in HueLightHandler . java to improve clarity of status reporting
fix gamesettings not be write when load . close # 74303
updated return statements in UI . java and BlockInventoryFragment . java to include the unit of millions and thousands from a bundle to
refactor MessagePackParser to use a switch statement for type handling and introduce a BinKeyPojo class to improve code clarity and
added parameterized tests for query parsing with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure compatibility with
added tests for serialization and deserialization of a map in MapTest . java to ensure proper handling of nested and nested maps in JSON format
added boundary checks for x2 and y2 in GeometryUtils . java to ensure coordinates do not exceed the specified offset
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and maintainability by using a consistent sorting order
added exit ( 1 ) if the test plan can not be find
updated method names from " dbmsType " and " dbmsOperationHandler " to " getDbmsName " , " schemaName " , "
modified the handling of the ` argIdent ` variable to account for non - strict mode identifiers to ensure that the ` argIdent ` is only
updated the default protocol setting in JettyHttpComponent9 . java to use the configured protocol from scf instead of a hardcoded value to
set default value of displayVolume to true to ensure volume display functionality is enabled by default
refactor version method to accept a boolean instead of a key to enhance flexibility in handling version options based on whether the application is full or
updated condition checks and logic in ChangeLogParameters . java to handle global change logs and parent change logs more efficiently to improve robustness and
change log level from warn to debug for jtatransactionmanager . findtransaction ( )
hhh - 14827 skip test for basicformatterimpl on oracle
refactor socket timeout handling in Connection . java to improve readability and maintainability of the code
updated action bar size calculation in multiple fragments to account for the translucent state of MainActivity to ensure consistent behavior across different fragment implementations based
set cha to true by default and make default and noop class final
http : / / issues . apache . org / activemq / browse / amq - 2296 - fix for amq -
refactor test methods in JodaTimeRangeRandomizersTest for improved clarity and consistency to enhance test coverage and ensure correctness of
added conditional checks and redirect entities based on servlet version in WebDescriptor . java to ensure compatibility with Jakarta EE 9 and 5
fix : fix readiness . isready ( ) check for node .
replaced ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to ensure correct endpoint retrieval from the handler
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest version of the RPC
added security checks using System . getSecurityManager ( ) in ObjectStreamClass and ObjectStreamField to ensure security by preventing potential NullPointerExceptions during
removed unused imports and simplified return statements in Utils . java , and changed UGSCommandCount to private in XLCDCommunicator .
updated DefaultMetricsTagProvider to use an unmodifiable map for tags instead of an immutable map to improve code readability and maintainability by reducing
chore : fix checkstyle violation in clientdrivertestsuite
change default level from OFF to ERROR in opt2 to improve error handling by providing clearer feedback
changed instance variables from non - final to final in IconNormalizer . java to ensure immutability of variables and improve code readability
added a boolean flag ` firstCallPrepareDo ` and modified the handling of prefixes in ` PrepareInterceptor ` to allow configuration of the first call
removed the ` showWorkspaceAndExitOverviewMode ` method and replaced it with a direct call to ` showWorkspace ` based on focus state to simplify
replaced ` asEagerSingleton ( ) ` method calls with direct bindings in ` Auth . java ` and ` AuthWithStoreFeature .
updated the incomingAssociations method to include an ignoreInvisibleAssociations parameter to enhance flexibility in handling invisible associations during processing
remove private ip from the list of capacity when delete a pod
improve error message for empty diagram and linux 4.6 +
[ scb - 1341 ] add require flag to ref field ( # 1341 )
updated class names from CasCoreConfigurationWatchConfiguration and CasCoreConfigurationWatchConfiguration to CasCoreConfigurationWatchAutoConfiguration and CasCoreConfigurationWatchAuto
refactor FeatureFlags class to improve code readability to enhance maintainability and facilitate future updates
updated StringBuilder initialization and adjusted hue ID formatting in ConfigStore . java , modified UUID format in CommonSetup . java , and added a new test
added image loading logic in TimeLineCursorAdapter and TimelineArrayAdapter using CacheableBitmapDrawable to ensure proper handling of picture images in the
updated the compaction mechanism description for full CRUD tables to clarify that compaction on insert - only tables will always run via queries regardless of
added a null check for the storage path when checking if the waiting message is down to ensure that the storage path is not null before proceeding
refactor resize condition checks to use a dedicated method ` checkResize ( ) ` to improve code readability and maintainability by centralizing resize
refactor LDAPConnectionService to improve code readability to enhance maintainability and facilitate future updates
marked the @ XmlAttribute annotation as deprecated in AggregateDefinition . java to indicate that the attribute is no longer required and should no longer be
removed debug tracing logs from TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to clean up the code and improve debugging
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated assertions in TestMultiSearcher to compare lengths of hits2 and hits3 instead of hits to ensure accurate length assertions for better accuracy in
added a new class LucenePackage with a static method to retrieve the current package to facilitate the retrieval of the Lucene package
corrected the calculation of sizeInBytes by subtracting the existing size from the sizeInBytes to ensure that the size remains accurately within the existing
updated return statements to remove unnecessary casting of numRows and added estimation methods in various classes to improve code clarity and ensure accurate calculation of aggregation results
added a null check for the drawer toggle before executing animations to avoid potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to suppress the warning about the unused subject parameter
added logic to determine if modules should be scanned based on class loader overrides to ensure proper handling of specific class loaders in the scanning process
fix msbib export format for corporate field
added a method to cancel core recovery in ZooKeeper aware mode to improve recovery management for Solr cores during shutdown
replaced direct calls to ` System . currentTimeMillis ( ) ` with ` currentTimeMillis ( ) ` and introduced a new method ` currentTimeMillis ( ) `
removed debug print statements and modified conditional logic in RepoEditView . java to streamline code for better readability and maintainability
updated connection parameter descriptions in PGProperty . java for clarity to improve readability and maintainability of the configuration options
added trust resolver , role hierarchy , and permission evaluator to SecurityExpressionRoot and updated related tests to enhance security evaluation capabilities and ensure proper default role
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize is consistent with primeSize
replaced direct usage of ` FileStorageUtils . getSavePath ( ) ` with ` FileStorageUtils . getUsableSpace ( mAccount
updated the combine method in DistinctSqlAggregation to handle multiple values instead of a single delegate to improve flexibility in handling multiple distinct SQL aggregation
added a test to verify that the login method executes post - login activities for a successful authentication to ensure that post - login activities are executed for
extractorspanishstrippedverb now take a path , not a static final instance .
initialized ` code ` and ` len ` variables in ` CharArraySet ` , modified return logic , and added a new test method in `
updated error messages and improved track type validation in MuxerWrapper . java to enhance clarity and maintainability of track format validation logic
replaced ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule . java ` and updated related test cases to
updated character encoding handling in StringDictionary and added a test for UTF - 8 characters in DictionariesTest to ensure proper handling of UTF - 8
replaced instances of " Logical Analyzer " with " Logic Analyzer " and updated drawable resource references to improve clarity and consistency in the
added instance variables for ` instanceClassName ` and ` instanceClass ` , and modified the initialization of the ` vector ` object to ensure that the
removed syncMetaLeader ( ) method call from CMManager . java to streamline leader synchronization process for better performance
update contribution question to show ' no response ' instead of ' not submit '
added TestLoggingExtension to DiagramRendererTest to enable logging functionality in tests
updated method signatures to include a ` useCamelCaseMapping ` parameter and adjusted property retrieval accordingly to enhance flexibility in property mapping by allowing customization
added VIOMI _ WATERHEATER _ E1 device to MiIoDevices . java to support the electric water heater
replaced direct calls to ` getSslSessionData ( ) ` with a local variable ` sslSessionData ` to improve code readability and
added a new file CreateNewSpreadsheet . java to implement functionality for creating sheets in a Workbook to facilitate the creation of
replaced ` Duration ` with ` long ` for ` ttl ` in ` CacheProperties ` and updated related methods accordingly to improve clarity and
updated content URIs in LauncherBackupHelper and LauncherModel to use CONTENT _ URI _ NO _ NOTIFICATION instead of CONTENT _ URI to
updated the testCompile group version from ' 2.14 . 0 ' to ' 2.27 . 2 ' to ensure compatibility with the latest
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager . java `
added a condition to check if the character is equal to ' < ' in DocClassUtil . java to ensure proper handling of special characters in
removed String . format from the return statement to simplify the code by eliminating unnecessary formatting
added import statement for Liquibase Scope and sent a message to indicate when no validation errors are found to improve user feedback by providing clear
updated imports and refactored web resource configuration logic in IntegrationTestContextLoader . java to improve code clarity and ensure proper context handling in
updated scroll handling logic in Component , Container , and JavaSEPort classes to improve responsiveness and correctness of component retrieval logic
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new ClientStat class and refactored related methods to use String instead of Long for client IDs to improve clarity and consistency in
updated expression replacement logic in CellContentConverter . java to include new line characters to ensure correct formatting of input strings in the cell content converter
updated regex patterns in SeleneseTestCase . java to include line breaks and improved output formatting to enhance readability and maintainability of
[ hotfix ] [ doc ] fix typo in mondrianproperties
added error handling and stack trace printing in ProcessTools . java and improved file permission checks in CustomLauncherTest . java to enhance debugging capabilities
removed the test method ` testEmbeddedImage ` from ` TumblrRipperTest . java ` to streamline the test for
added a conditional check for symbol slots before converting storeType to ensure that storeType is converted only when the symbol has a slot for it to
[ java ] do n ' t call extractorwrapper . init if nextloadposition be 0 .
replaced the import of ` IndexWriterConfig ` with a custom ` IndexWriterConfig ` with a custom ` PrintStreamInfoStream ` for better
tika - 1342 - add support for dynamic service loader in tikaconfig .
updated imports and type declarations in DocLint . java and DocLintTester . java to improve code clarity and ensure proper handling of package
added a check for the IMPORT _ CMD command in the DataImportHandler and DataImporter classes to ensure proper handling of import commands in the import
added a test to ensure that inner classes are not modified if ignoreDefinition is true to ensure that inner classes are not modified when ignoreDefinition is
removed unused import of android . util . Log in JettyService . java to clean up the code and reduce unnecessary dependencies
modified the ` checkItemPlacement ` method to accept an additional ` workspaceScreens ` parameter and updated related logic to enhance flexibility in
simonstewart : add / quitquitquitquit to the webserver web interface
refactor transformation logic in LLRealtimeSegmentDataManager to use a transformedRows list to improve code readability and maintainability by reducing
added a check to skip processing for Teredo devices on Windows to ensure compatibility with Teredo environments
fix a problem with the add contact dialog when the protocol provider be not register .
replaced bean registration method from ` getReaderContext ( ) . getRegistry ( ) ` to ` registerBeanComponent ( new BeanComponentDefinition ( )
updated the parameters of the drawBitmap method to use null instead of r . left and r . top to ensure the drawBitmap method correctly handles
correctly decode meitrack and totem date
changed access modifiers of ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager `
added @ Deprecated annotations to EnhancedRandom . java to indicate that these classes are outdated and should no longer be used in future development
[ hotfix ] [ test ] fix exception handling in clientmapstoretest
add an option to documentprocessor to keep empty sentence
updated the ` createArtifactSubdirectory ` method to return a boolean and added error handling for directory creation failures to improve error handling and provide clear
removed unused imports and changed ` systemProvider ` from static to instance variable in ` ReusableCompiler . java ` , modified ` JavaLanguageServer
fix npe in directagentattache when resource return null answer
refactor sendEmail method to throw MessagingException instead of catching MessagingException to improve error handling by providing a more general MessagingException
fix a npe in the pipeitemsobsidian when there be no item in the pipe
dataimportrule - fix dateformatevaluator to use locale . root
added a boolean flag ` includeDecals ` to the ` StorageOptions ` class and a corresponding checkbox in ` StorageOptionChooser ` to allow
updated generateDocumentation method to include a null parameter in Liquibase . java and added a suppression warning in LiquibaseTest
updated HiveProtoLoggingHook to set a queue for performance metrics and refactored related methods in TestHiveProtoLoggingHook to improve performance
updated log messages in StopFilterFactory , SuggestStopFilterFactory , SolrIndexConfig , and DocExpirationUpdateProcessorFactory to improve clarity
updated class file version check to use a dynamic minor version to ensure compatibility with the latest runtime features
added a new test class ` LdapPasswordAuthenticationTest ` to verify LDAP password authentication functionality to ensure correct authentication behavior for LDAP users in the application
replaced OrcInputFormat check with BasicStatsNoJobTask check in TaskCompiler . java to improve the logic for determining footer scan usage
fix an npe with save all notification
refactor VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
[ scb - 2203 ] fix # 2203 : do n ' t swallow exception in start ( )
updated conditional checks in EdgeDataTable . java and NodeDataTable . java to include dynamic number columns to ensure correct handling of dynamic number columns in data
added null checks using ` Objects . requireNonNull ` for groupId , artifactId , and version in ` RawPom . java ` to ensure non -
added a null check for apiInfo before assigning it to avoid potential NullPointerExceptions when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added lighting functionality and debug logging in PhotoPanel and FlameRenderer classes to improve rendering performance and ensure proper resource management during texture and shader
updated scene size from 460 to 520 in FxWindow . java and added context menu handling in InsnListEditor . java to
updated character validation logic in CSSParser . java to handle cases where the index exceeds the length of the string to improve robustness by preventing
added a check for the " isLookAndFeelDecorated " property in UIServiceImpl . java to enable custom look and feel
removed unnecessary ' this ' keyword from method calls in HostRoleCommandDAO . java to simplify code and improve readability by eliminating unnecessary
updated function names from F5 _ UNKNOWN and F6 _ UNKNOWN to F5 _ TRANSPONDER _ TEST _ REPLY and F6
refactor swipe handling logic in WindowTransformSwipeHandler . java for clarity and maintainability to improve code readability and maintainability by
replaced HostDatabase with ColorStorage in ColorsActivity . java to utilize the new ColorStorage interface for better data management
refactor String class to improve code readability to enhance maintainability and ease of understanding
removed unused SLF4J logger imports and initialized a static logger in multiple classes to improve code clarity and maintainability by eliminating
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide a way to retrieve global entries from the
added multiple assertions to verify the functionality of the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` send
updated JUnit imports from ` org . junit . Test ` to ` org . junit . jupiter . api . Test `
replaced hardcoded ' ; ' with a dynamic path separator in JavadocReport . java to ensure consistent path handling across different operating systems
changed the access modifier of the ` augmentSuccessViewModelObjects ` method from static to instance to allow access to the method from other classes
updated field retrieval method from ` getField ` to ` getDeclaredField ` in ` TestUtil ` and added assertions in ` InheritanceTest ` to ensure
removed the ` getConf ( ) ` parameter from ` Outlink ` constructors across multiple parser classes to simplify the code by eliminating unnecessary configuration
removed unnecessary LexicalContext parameter from ensureUniqueNamesIn and copyFinally methods to simplify method signatures and improve code clarity
added import statements and modified type expression handling in UseLambdaForFunctionalInterface . java to improve code clarity and ensure proper handling of unused
[ hotfix ] [ test ] remove unnecessary appendclassselector call in ant task
added a check for Aggregate input in HiveCardinalityPreservingJoinOptimization . java to ensure that the root input is an Aggregate to avoid
fix miss mapping for registry event ( # 1188 )
removed redundant assignments of x3 and y3 in Intersector . java to improve code readability and maintainability
added default methods ` sbeDecodedLength ( ) ` , ` sbeLimit ( int limit ) ` , and ` sbeLimit (
refactor ElasticsearchContainer to use a constant for the version and add a health check method to improve code maintainability and ensure compatibility with the latest
fix a memory leak in the peermessage . parse ( byte [ ] , bytebuffer ) .
added versioning support to ClusterDefinition and updated related classes to support versioning and improve cluster management functionality
camel - 14863 : camel - ftp should use source code generate configurer to avoid reflection .
[ zeppelin - 4892 ] fix npe when load dependency .
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified ` Gen . java ` to ensure
added a check for basic constraints in ForwardBuilder and created a new BuildEEBasicConstraints class for certificate validation to ensure proper handling of basic constraints
added a method to initialize database connection in JdbcPostgresqlDAO to ensure that values with the same time will be upserted if PostgreSQL version is
updated WebSocket configuration to set a maximum message size and added input buffer size validation to ensure WebSocket connections do not exceed a defined buffer size and prevent
removed undeleteAll and rollbackUndeleteAll variables and added assertions for pendingDeleteCount in SegmentReader . java to streamline deletion logic and
added null check for scopes in ClientRegistration and updated test cases accordingly to ensure that scopes are not null and ensure proper handling of null values in
added null checks for orderBy before adding parameters in CartesianProductStream . java to prevent potential NullPointerExceptions when orderBy is not provided
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t delete snapshot in kvm when vm be in stopped state
replaced the direct call to ` LogUtils . initHiveLog4j ( ) ` with a variable ` initLog4jMessage
added a check for non - empty tasks before processing the first asset loading task to avoid potential NullPointerException when there are no tasks available
[ openpgp ] do n ' t delete pubsub node if it do n ' t exist .
improve code readability by remove unnecessary usage of relationentity
added a check for empty barcode in Code128Reader and Code39Reader , and implemented null check in TruePositivesBlackBoxTestCase to
replace TreeSet with LinkedHashSet for storing CipherSuites in SSLContextImpl . java to maintain insertion order for better performance
refactor control character validation in Escaper . java and update expected string format in InternationalizationTest . java to improve code clarity
refactor ` ProviderSqlSource ` to check for ` CharSequence ` return type and modify ` oneArgument ` method to return a ` StringBuilder `
added null checks for aliasChildren in InternalMNode . java to prevent potential NullPointerExceptions when aliasChildren is not initialized
added a method ` getLayoutTransitionOffsetForPage ` in ` PagedView . java ` to calculate layout transition offsets for a page to improve
renamed ` synthetic ` to ` pruned ` and updated related method calls in ` JavaTemplate . java ` to improve clarity and functionality of
added accessibility setting for the method in WidgetInterceptor . java to ensure proper accessibility for methods in the application
added a condition to check if the field name equals " database . server . id " before setting the default literal initializer to ensure that the field
updated the Mozilla version in AbstractRipper . java from Macintosh and Intel Mac OS X 10.7 to Windows NT
added a new menu item for accessing the server ' s host in BasicSystemUtils . java to enhance user experience by providing a quick access to
refactor HandleGetter to use a new local variable for actualValue and update innerThen statements to improve clarity and maintainability of the code
added error handling for Record building in EncryptedSlideShow . java to improve robustness by preventing ArrayIndexOutOfBoundsException when building records
refactor logging statements and improve error handling in Queue , FileCheckpointIO , and MmapPageIOV1 classes to enhance code clarity
removed a call to loadBattlePassManager ( ) before calling postLoad ( ) to avoid null pointer exceptions during avatar loading
updated SSH image version from 1.0 . 0 to 1.1 . 0 and modified SSH command options in PortForwardingContainer . java to
added a large array and forced garbage collection in ThresholdTest . java to improve memory management and prevent potential memory leaks during garbage collection
updated conditional checks in StdErrLog . java and added logging assertions in StdErrLogTest . java to improve logging accuracy and ensure proper logging
fixed - rremoteservice . getremoteserivce ( ) method should return rremoteservice object
added methods ` isSelected ( ) ` and ` setSelected ( ) ` to manage the selection state of buttons and checkboxes in the MultiButton class
rename ` UpNextActivity ` to ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to improve clarity and consistency in
[ hotfix ] fix checkstyle violation in brokercontroller
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for connection management to ensure proper resource management and avoid potential resource leaks
refactor theme color handling in ProgramGridCell and Utils classes to improve code clarity and maintainability by centralizing theme color retrieval logic
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
removed multiple type adapter registrations in ToolingApiLauncher . java to streamline the code by eliminating unnecessary dependencies
added a new line to the TestPayloadCheckQuery . java file to ensure proper formatting and readability of the code
refactor ConsoleReader to handle character printing with masking in addition to printing characters to improve readability and maintainability of the ConsoleReader functionality
added user - specific information to the exit command in BaseCommand . java to enhance user feedback during the command execution
move graal - compiler - test to graal - compiler - api . test to avoid conflict with graal - compiler - test
[ hotfix ] remove unused constructor in slotsharinggroup
updated the condition for Java 9 specific version handling in StreamExInternals . java and modified the dropWhile check in StreamExTest . java
updated texture paths in DecalTest . java and MusicTest . java , and modified color clearing in SimpleDecalTest . java to
removed duplicate calls to registerReceiver and unregisterReceiver in Launcher . java to improve code clarity and maintainability by eliminating redundancy
updated import statements in HostsRemovedEvent . java for consistency to improve code clarity and maintainability
updated ` reuseRefreshToken ` to true and added ` allowIntrospection ` property in ` ClientDetailsEntity ` , modified token introspection logic ,
replaced calls to ` write ` with ` writer . write ( htmlEncode ( remoteUser ) ) ` and added ` htmlEncode ( )
added PhrasePrefixQuery and SpanQuery links to the Query class to enhance query functionality and improve query performance
replaced size ( ) = = 0 with isEmpty ( ) in CommentsInserter . java and CommentsParser . java to improve code read
replaced the method ` isLiteralString ` with ` isLiteralString ` in ` NoValueOfOnStringType . java ` to improve
updated method signatures in AbstractAssert , Assert , DateAssert , Descriptable , and DescriptableAssert to use Object instead of A to
updated the package of ThrowingFunction from org . apache . shenyu . plugin . jwt . lambda to org . apache . sh
added methods to get and set uploaderBehaviour in AppPreferences and updated references in UploadFilesActivity to improve code clarity and maintainability by
fix ( prettyprinter ) : fix bug in getfinalfield in ctconstructor .
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to ensure compatibility with Robolectric ' s built - in
renamed the method from ` isValidSEnding ` to ` isValidEnEnding ` and added a character declaration to clarify the purpose of
updated PageMarkerResources drawable from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to accurately reflect the
added a reinvocations counter and updated log messages in BasicInvocation . java to track and track the number of reinvocations for improved
updated topPadding calculation in DefaultLookAndFeel . java to use getInnerHeight instead of getHeight to ensure correct positioning of text elements based
added a break statement in the Recognize . java file to ensure proper control flow in the Recognize functionality
added preference management for lock home screen functionality in multiple classes to enhance user experience by allowing haptic feedback when the home screen is locked
refactor ExcelBatchReader to handle different formula types in addition to numeric and blank cell types to improve flexibility in handling different formula types in
fixed bug 137048 - immutablefield no long report false positive for field assignment in anonymous inner class .
added a private String variable ` userAgent ` in ` CommaFeedConfiguration ` and modified ` HttpGetter ` to use it to ensure the user
updated the @ XmlAttribute annotation to require a required attribute in AvroDataFormat . java to ensure that the XML attribute is required for improved
change log level from info to debug for file not found message to reduce log verbosity for non - existent files
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to use OfflinePlayer ' s getUniqueID method instead of PS . get ( ) to
camel - 17979 : camel - jbang - optimize defaultroutescollector to avoid unnecessary processing of empty pattern .
added a vertexColor property and modified color handling logic in PShape3D . java to allow customization of the vertex color based on the
updated SchemaDotFormatter to include a new parameter for primary key column filtering and modified related methods accordingly to enhance functionality by allowing filtering of primary key
removed the use of ShadowMatrix in ShadowMotionEvent . java to simplify the code by directly accessing the matrix values
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
removed the ` classes ` map and simplified the class definition handling in ` GroovyEngine . java ` to simplify the code and improve readability by
fix ( plugin ) : move brandingservlet to hawt - branding - plugin
updated print statement formatting in NativeCodeGenerator . java to improve code readability and maintain consistency in output formatting
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` to improve
added unit tests for ExpectedException handling in ThrowableAssert _ hasCause _ Test . java to ensure proper error reporting when expected causes have different types
remove unused variable ` flatten ` and ` pack ` in ` AutomaticDependencies . java ` to streamline code by eliminating unnecessary variable
replaced ` requestedScopes ` with ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to ensure proper handling of null or empty
simonstewart : add a test to verify that we can set the profile in the firefox driver .
camel - 18443 : camel - core - add route description to route . thanks to david williams for the
refactor JavacTreeMaker class to improve code organization to enhance maintainability and readability of the code
added a line to set the edge ' s weight in ImporterCSV . java to ensure the edge ' s weight accurately reflects the
update tariffs cost calculation to account for current date
added ` d . adsrc ` and ` d . adrelid ` fields to the SQL query in ` DatabaseMetaData . java ` to
throw an error if binarized sentence be not build by the parser
modified the ` toString ` method in the ` User ` class to include authorities and their details to enhance the user ' s representation by providing
replaced the method ` extractBodyAsString ` with ` getMessage ` in ` MessageHelper . java ` to retrieve the message ' s body to
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory . fromexecutionvertex to taskdeploymentdescriptorfactory . fromexecution
improve roster access to check if a node be a member of a group
added a reference to " maven . test . classpath " in AbstractJRubyMojo . java and removed unchecked suppression in Cuc
updated method handle assertions to use ' mtype ' instead of ' rtype ' and added a new method ' userMethod ' in MethodHandlesTest to
added imports for StopFilterFactory , NamedSPI , and HTMLStripCharFilterFactory in various classes to enhance functionality and improve code clarity by
updated conditional checks in URLImage . java to compare width and height against placeholderImage ' s dimensions to ensure that the image dimensions are accurately
added a condition to check if the name does not start with " META - INF / " and modified the logic for appending package names to ensure
refactor createImageToFileSystem and createImageToStorage methods to include final parameters for better immutability to enhance code readability and ensure immut
updated assertions in StackWalkerTest to use a dynamic expected value based on version check to ensure compatibility with newer versions of OpenJ9
changed the access modifier of the ` addViewportJob ` method from protected to public to allow access to the method from other classes
removed the ` partitions ` parameter from the ` buildFlow ` method and related code to simplify the method signature by removing unnecessary parameters
removed server restart settings and exit checks in TestDatabase . java to simplify server state management and improve test reliability
added null and empty checks for block in NodePathsConvertOperator and modified child retrieval logic in SchemaQueryMergeOperator to ensure robust handling of null
added functionality to retrieve and display the total harvesting time in CallInfoFrame , IceUdpTransportManager , RawUdpTransport
updated frame size parameters for drawing fonts in ParticleEditor . java to improve rendering performance and responsiveness
added logic to update the " keyserver _ port " configuration in ` UpgradeCatalog240 ` to ensure that the " keyserver _ port "
added a transparent color to the SvgViewerFactory to enhance the visual appearance by providing a transparent background color
removed the minSdk attribute from the @ Implementation annotation in ShadowKeyguardManager and ShadowKeyguardManagerTest to simplify the code by removing unnecessary
refactor ` containsExactly ` method to accept ` varargs ` instead of ` first ` and ` rest ` to improve flexibility in handling
updated the ` addLimit ` method to use ` capacity ` and ` refillGreedy ` methods in ` Bucket4jFilterFunctions
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader for clarity to enhance code readability and maintainability by
updated the Generator class to accept a set of hooks and modified its initialization in multiple files to enhance lineage evaluation logic based on materialized views and
added error handling for NoClassDefFoundError in REngine . java to set supported to Boolean . FALSE when no class definitions are found
refactor TraceWebFilter to utilize SpanAndScope for span management to improve clarity and maintainability of span handling in tracing
updated exception handling in AbstractUpdateCommandStep to check for null causes before retrieving the message to ensure robustness by avoiding potential NullPointerExceptions
updated SolrServerException instantiation to include the base URL to improve error handling by providing more context about the server ' s URL
updated landscape setting logic in HSSFPrintSetup . java to ensure correct behavior when in landscape mode
updated null check in JavaVoidObjectInspector to ensure proper handling of null values to avoid potential NullPointerExceptions
added input validation for argument names in ArgDesc . java to ensure that invalid argument names do not cause runtime errors
added background location listener functionality in AndroidLocationPlayServiceManager to ensure proper handling of location updates based on the activity state
updated conditional check from ` primitiveType ! = GL10 . GL _ POINTS ` to ` primitiveType = = GL10 . GL
truffle : fix string . equals ( byte [ ] , byte [ ] ) and string . hashcode ( byte [ ] , int ) to
added a method to set the command list in the ComboBox class to ensure the command list reflects its current state
nifi - 1745 : fix issue with certificate alias file name contain forward or back slash .
replaced multiple instances of ` zkcli . sh - cmd ` with ` zkcli . sh - zkhost ` for command execution to ensure
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` equals ` and ` getStatusDetail
added a conditional check for remote gRPC status before posting a severe event to avoid posting a severe event when the remote gRPC status is not
refactor method signatures in XYItemRenderer . java for consistency to improve code readability and maintainability
fix entity entity not be add to the chunk in some case .
added a private static method ` getErrorString ` to handle error codes in ` GLSurfaceViewAPI18 . java ` to improve error
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3951 - add support
updated server URI handling in RFC2616BaseTest to use " Host : myhost " instead of converting it to a ASCII string to ensure
added a method addToHelperList ( ce ) to the Construction class to enhance the handling of helper lists in the construction process
updated the return value logic in GlyphLayout . java from - 1 to - 2 and added a condition to handle cases with a length of -
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to improve security by ensuring proper access control during thread context
refactor file synchronization logic in ReceiveExternalFilesActivity to handle null file scenarios to ensure proper synchronization and prevent potential NullPointerExceptions during file retrieval
added a null check for the service loader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is not set
removed unnecessary debug logging in BarrowmanCalculator and adjusted deltap calculation in TubeCalc to simplify code and improve clarity by removing unnecessary
updated column retrieval logic in TimelineControllerImpl to handle different types of nodes and edges to ensure correct column assignment based on the type of the
added a method to register extra components for the BrokerAdminApiApplication to ensure proper handling of additional components in the broker application
added a test method for bug 4658 in MultiCfQueryExecIT . java to verify the behavior of query execution with different column types
use a linkedlist instead of an arraylist in peergroup . findpeerbypeerid ( ) .
fix a bug in the abstract builder that could cause infinite loop .
[ iotdb - 6892 ] remove confignode simple consensus snapshot trigger threshold from ratis config ( # 6892 )
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added a null check for the ManagedService annotation before unregistering and registering the proxy to avoid potential NullPointerExceptions during proxy registration
tika - 1352 -- add support for non - unicode entry name in zip file .
added a new file TestSplitThruPhiDivMod . java with methods for testing modulo and division to ensure correct handling of problematic division
added methods to lookup generic types and superclasses in TemplateRegistry . java to enhance type resolution functionality for generic types in the application
increased the initial capacity of ByteArrayOutputStream from 512 to 1028 to optimize memory usage and improve performance
added comments to the ` languagesExcluded ` array in ` PlayerSettingsScreen . java ` to clarify the exclusion of unsupported symbols in the
refactor byte array initialization and transfer logic in TransferCompletionHandler . java to ensure proper handling of buffer sizes to improve memory management and prevent potential
replaced ` WindowFocusListener ` with ` WindowAdapter ` in ` SIPCommMenu ` and ` SIPCommPopupMenu ` to
refactor error handling in SemanticAnalyzer to check for null source AST nodes before throwing a SemanticException to improve robustness by preventing potential NullPointerException
added scaling functionality to the SkeletonRenderer by creating the center extent of the AABB based on the skeletal ' s scale
added ` getSolrHome ` method implementations in ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide
added ComponentScan annotation to SpringWebConfig . java to facilitate Spring Boot ' s component scanning functionality
removed the ` getAccount ( ) ` method from ` UserListItem ` to streamline the account retrieval process
added a test for installing a package with a default process name in ShadowPackageManagerTest . java to ensure correct handling of package and activity
refactor AvailableSettings class to improve code readability to enhance maintainability and ease of understanding
added TransactionCapsule imports and initialization methods to TransactionTrace . java to enhance functionality for managing TransactionCapsule instances in the application
add a client property to shuffle member list . ( # 1748 )
replaced Text ( ) with CrawlDatum ( ) in SegmentReader . java to utilize CrawlDatum for improved data handling
refactor JsonDeserializer class to improve code readability to enhance maintainability and ease of understanding
updated configuration names in TsfileDBConfig . java and modified fetchSize handling in QueryProcessExecutor . java to improve code clarity and ensure
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the argument
removed unnecessary import of ExecutionContext in TaskletStep . java to streamline dependencies and improve code clarity
initialize the title variable to an empty string to initialize the title variable to an empty string to avoid potential null pointer exceptions during initialization
[ java ] set response body to null if request do not have a body .
deprecate ` embeddedserverinstance ` in favor of ` discoveryserverinstance `
use reflection to register mac event in jabrefframe . registermacevents ( )
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated associated references to improve cl
refactor return statement in HandlerLibrary . java for clarity to improve code readability and maintainability
changed the visibility of the hideUnprivilegedObjects variable from private to private final to enforce immutability of the hideUnprivilegedObjects
fix the unit test error of audiodatasourcestest
added support for saving Giphy Android 11 video in IOUtils . java to ensure compatibility with Android Q and improve video saving functionality
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 235 : fix
refactor multiple classes including EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , SamlService , and SamlCom
replaced manual retrieval of logger instances with a more concise computeIfAbsent method to simplify code and improve readability by using a more concise
hbase - 13652 remove unused class dataoutputoutputstream from hbase - migration
removed a configuration setting for the " hive . stats . column . autogather " property in TestAcidOnTez . java to ensure
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity for success messages
added a method to get the default provider name in Platform . java and updated its usage in OpenSSLProvider . java and StandardNames . java to
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod to ensure proper handling of Captor annotations during testing
added error handling for non - existent class and method names in TestSuiteBuilder to improve robustness by throwing an exception when no test cases are
updated import statements and modified method calls in GroovyAutoComplete . java and GroovyLanguage . java to improve code clarity and ensure proper handling of
fix import to use graphhopperosm instead of graphhopper
simonstewart : make sure we use the correct client config when create a client
changed mHideSysUiScrim from final to non - final and added preference handling to control the visibility of the system UI scrim
added cancellation logic for calls in OkHttpCall and modified error handling in CallTest to improve resource management and ensure proper cancellation of calls before en
refactor swipe handling logic in WindowTransformSwipeHandler . java for clarity and maintainability to improve code readability and maintainability by
updated the RequestMatcher interface to extend the Spring Security web matcher package to ensure compatibility with the latest matcher package structure
added a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr ` to include ` IF `
[ j2kt ] use boxedprimitiveconstants instead of boxedprimitiveconstants for j2kt
added unit tests for applying qualifiers in DeviceConfigTest . java and modified DeviceConfig . java to set dimensions and density in DeviceConfig . java
replaced IOException with RuntimeException in ExternalViewReaderTest and modified timestamp initialization in PinotDataTypeTest and PluginClassLoader to improve error handling and simplify
updated the icon resource from the logo to the mipmap ' s ic _ launcher to enhance the user interface by providing a more appropriate launcher
added errorBuilder . setContentText ( content ) to FileUploader . java to set the content text for better error reporting
refactor ConcurrentHashMap implementation to improve performance and maintainability of the code
added methods to adapt user trades and fill data in AbucoinsAdapters , AbucoinsTradeService , and AbucoinsTradeService
updated plot event handling and modified claimation logic in various classes to improve plot claiming logic and ensure proper handling of economy claims
simonstewart : add support to the htmlunit driver for the firefox and internet explorer
added handling for VARBINARY data type in BlobType . java to ensure correct representation of VARBINARY data types in the database
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3951 - cooki
added synchronization to the ` simpleTypeMap ` assignment in ` LibFFIContext . java ` to ensure thread safety when accessing ` simpleTypeMap `
replaced ` Context ` with ` ContextInternal ` and updated thread checks in ` InboundBuffer ` to improve thread safety and clarity in
added a new method ` deadServerNoTimeout ` and modified timeout handling in ` LdapTimeoutTest . java ` to improve timeout management and ensure
corrected a typo in the usage message from " UniocdeData . txt " to " UnicodeData . txt " to ensure
camel - 14850 - camel - cxf : fix the unit test error of camel - cxf
refactor multiple Synth UI classes for consistency and clarity to improve code maintainability and readability across the Synth components
added support for BoosterSet in ComponentAssemblySaver and modified return value in BoosterSet to ensure proper handling of BoosterSet instances
added support for proxy authentication in jabref
replaced instances of ` BLOCKCHAIN __ FORK _ COUNT ` with ` BLOCKCHAIN _ FORK _ COUNT ` and adjusted interval
replace InternalError throwing with returning false in mmm Class . java and ppp Class . java to improve error handling by returning false instead of
replaced mortbay logging with Apache Commons Logging in TestIPCUtil . java to improve logging consistency and maintainability
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3952 - remove the
added a call to clearAttributes ( ) in PatternTokenizer . java to improve attribute management during tokenization
added a polling period parameter to the VerificationAfterDelayImpl constructor and improved error handling to enhance verification reliability by allowing a configurable polling period
added a compaction flag and modified the conditional check in the SemanticAnalyzer to ensure proper handling of compaction scenarios in the query processing logic
[ zeppelin - 5892 ] [ zeppelin - 5892 ] copy all jar file to interpreter
hbase - 25828 hbaseadmin # gettableregions should return the number of region instead of the number of region
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to performance issues
refactor ` calcXBounds ` methods in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to
added a try - finally block to ensure the XML reader ' s content handler and error handler are reset to ensure proper resource management during XML parsing
release headerBuffer from the byte buffer pool in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to include a
added null and closed checks before closing the ResultSet in JdbcExecutor . java to ensure proper resource management by preventing potential NullPointerExceptions
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 in DerbyDatabase . java to ensure compatibility with the latest
fixed bug 149448 - usesstringbufferlength no long report a false positive when a method have no literal
removed error logging statement in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
modified the ` createDb ` method to return a ` Connection ` object instead of void to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and their corresponding test classes to improve code organization and maintainability
hbase - 15954 add option to disable off - peak compaction for hbase compaction
added a new test class ` DepositAddressJSONTest ` and modified the ` BitstampDepositAddress ` class to handle JSON unmarshall
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener . java to improve error handling by throwing an IllegalArgumentException instead of throwing an IllegalStateException
convert ` linkPath ` to an absolute path before using it in the ` linkInDeletedDirectories ` method to ensure correct path handling for deleted
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and modified ` DefaultMetricsRegistry ` to use ` ConcurrentHashMap ` instead of `
refactor network interface retrieval logic to check for multicast support to improve robustness by ensuring only supported multicast interfaces are returned
refactored the validation check for valid checksums in ChangeSet . java to improve code readability and maintainability by consolidating validation logic
added a clone method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to ensure proper handling of the clone method in the IndexInput class
replaced ` Math . sqrt ( x * x + y * y ) < = 0 ` with ` x * x < = radius *
added a conditional check before setting the frequency band in P25Channel . java to ensure that frequency bands are only updated when they are the same
replaced ` tapSquareSize ` and ` inTapSquare ` with ` tapRectangleWidth ` and ` tapRectangleHeight ` in ` G
set default _ replicate _ on _ write to false by default
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` method and implemented date formatting in the ` Util ` class
added a getDelegate ( ) method to TraceCallable and TraceRunnable classes and corresponding tests in TraceCallableTests and TraceRunnableTests to provide a
replaced error response handling with a direct message retrieval in FileActivity and updated synchronization logic in FileDisplayActivity to improve code clarity and ensure
added functionality to write data to a stream in ForeignIncubatorQuicheConnection and JnaQuicheConnection to improve error handling
added a boolean parameter to a method call in JavascriptContext . java to enhance functionality by allowing the method to accept a boolean value
removed alignment parameters from TableCell constructors in BaseTextFormattingHelper and TableCell classes to simplify the code and improve readability by eliminating
added a new file ` TracingAutoConfiguration . java ` to configure tracing for the UAA service to enable auto - configuration of tracing capabilities for
refactor content addition in Submissions . java to use a new Para variable to improve code readability and maintainability
updated the ` getPrunedQueryableSegments ` method to accept a list of ` IndexSegment ` objects instead of returning them directly to improve
refactor VertxBufferTest class for improved readability to enhance maintainability and clarity of the test code
add unit test for mapi message submission chunk
change access modifier of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to improve code clarity and reduce unnecessary dependencies
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it to improve clarity and maintainability of
[ hotfix ] [ runtime ] fix return value of jobcompletionfuture method in jobcoordinationservice
refactored the ` bitsToHumanReadable ` method to ` bytesToHumanReadable ` and introduced a new ` mimeType2HUman
replaced ` newMergePolicy ( random ( ) ) ` with ` newTieredMergePolicy ( ) ` in ` TestUpgradeIndexMerge
added a check to return early if overview state is not enabled to improve performance by avoiding unnecessary operations when overview state is not enabled
[ zeppelin - 1357 ] add link to the issue report in the error message
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter for reference properties to enhance flexibility by allowing custom input streams for
added null checks for input parameters in FilterLeafReader constructor to ensure robustness by preventing NullPointerExceptions
add default key size provider to jcepkcs11encryptorbuilder .
updated exception handling in NetSocketReader and removed redundant constructor in SoftEndOfStreamException to improve error messaging for better clarity and maintainability
[ hotfix ] remove javax . inject . inject
updated the expected size in BundledDistributionTest from 9 to 10 and added assertions for database users in PostgreSQLTest to improve test coverage and ensure
[ hotfix ] [ runtime ] add pipeline . name config option to streamexecutionenvironment
refactor scale calculation in OverviewState . java to differentiate between two - panel and non - two - panel layouts to ensure correct layout
updated the IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome and adjusted the temperature and
removed unnecessary ` DateTimeZone ` parameter from ` getMinTime ` and ` getMaxTime ` methods in ` StorageUtils ` and ` DataUpdateManager `
[ j2kt ] add ` ` isqualified ' ' flag to the ` ` thisreference ' ' class .
updated regex pattern in XhamsterRipper . java to allow spaces in the xhamster gallery URL to enhance security by preventing
refactor entity iteration to use an ArrayList instead of a direct iteration over entities in GlowWorld . java to improve performance by avoiding unnecessary
hhh - 15827 - oracle dialect : add schema prefix to featuretype . gettypename ( ) for oracle dialect
fix a typo in the console filter
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing users to select or deselect all
[ java ] use termlengthmask instead of termwindowlength in networkpublication .
added comment to clarify that guildupdateownerevent . getguildid ( ) always return null
limit the number of in portal tick to 80 for creative and non - creative entities to improve responsiveness by preventing out - of -
added compressed handling and adjusted spacing calculations in ClusterMonitorTileSkin . java to improve visual representation of chart items based on compression status
refactor multiple template classes for consistency and clarity to improve maintainability and readability of the code
change variable types from int to long for length calculations in Base64 . java to ensure proper handling of integer values and avoid potential overflow issues
removed unnecessary null check for header in RendererConfiguration . java to simplify the conditional logic for better readability and maintainability
cloudstack - 4892 : do n ' t allow scale disk offering of the same disk offering of the same service offering
updated import statements and replaced wildcard imports in HitbtcAdapters . java and Order . java to improve code clarity and maintainability by
[ hotfix ] [ runtime ] fix checkstyle violation in llvmsegmentdatamanager
updated the description URI in the JRubyScriptEngineFactory annotation from " jruby " to " jrubyscripting " to accurately reflect
updated variable name from ' name ' to ' displayName ' in ConfigCategory . java to improve clarity and consistency in variable naming
updated the condition in ParticipateAssetIssueActuator to include a check for negative exchange amounts to ensure accurate validation of exchange amounts in the
added a loop to limit the number of iterations in FeedUtils to improve performance by avoiding unnecessary iterations
added a test method ` testHDF4 ` in ` HDFParserTest . java ` to verify HDF4 file reading functionality to ensure proper
added a new constant ` CALCITE _ 6092 _ FIXED ` and modified test cases in ` SqlOperatorTest . java ` to
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added a static method ` quietCloseAll ` to ` CloseHelper ` for closing multiple ` AutoCloseable ` instances to improve resource management by
replaced the temporary variable ` posBtn ` with a direct string reference in ` RemoveFileDialogFragment . java ` to simplify the code by
added null checks before drawing images in Pixmap . java to prevent potential NullPointerExceptions when image dimensions are zero
replaced ` ReflectionHelpers . callInstanceMethod ` with ` Unsafe . class . invoke ` for invoking the ` defineClass ` method to improve
updated regex pattern in GUIUtil . java and added unit tests in GUIUtilTest . java to improve regex validation accuracy and ensure proper validation of
updated conflict handling logic in CachedRowSetWriter to use a counter for conflicts instead of a boolean flag to improve clarity and accuracy of conflict
fix a bug where pubspec . yaml would not be load if the version file be n ' t find
added a conditional check before returning the reference in ReferenceMemory . java to optimize reference handling by avoiding unnecessary assignments
added logic to check for seed files before adding input paths in the Injector to ensure that only valid seed files are injected in the job
added a condition to check if ` hideOriginal ` is true before setting the visibility of ` originalView ` to ensure that the original view is
do n ' t allow maxnodes to be negative in defaultlooppolicies
added logging for unsupported texture coordinate types in CombinedTexture and UVCoordinatesGenerator classes to improve error handling and debugging for unsupported texture coordinate types
added error handling for file deletion in EncodeActivity and added input validation in DecodedBitStreamParser and MatrixUtil to improve error handling and ensure
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality for seeking and closing components
updated SQL query in HandleDAOImpl to use oldPrefixLength instead of locate to improve clarity and accuracy of substring operations
replaced the ` addAll ` method with a direct instantiation of ` convertedValsList ` to simplify the code by eliminating unnecessary method calls
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used in favor of a new constructor that accepts a
added a nightly build warning message when the Universal Gcode Sender version is a nightly build to inform users about issues related to
modify getresponsessortedbyrecipient to return user _ nobody _ text instead of an empty string
updated return statement to include " declarations . " to clarify the purpose of the removal of unnecessary throws
deleted ` CacheApplication . java ` and refactored ` CacheController ` usage in ` CommonsApplication . java ` and ` ShareActivity
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` for service and activity start methods to ensure
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future updates
updated RuntimeEnvironment to use ResourcesManager for configuration updates based on SDK version to ensure compatibility with devices running Android KitKat and above
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` in ` VersionDefinitionResourceProvider . java
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
[ hotfix ] fix npe in case oldindexname be null
added package imports for internal resolver helpers and readers in CheckPackageAccess . java to enhance access control for XML internal resolver helpers and readers
renamed methods from ` save ` to ` add ` and ` persistExecutionContext ` to ` updateExecutionContext ` across multiple classes to improve
fix a bug in graphutil . removeloopbegin ( ) that do n ' t work for loopexitnode
replaced RecyclerView with WidgetsRecyclerView and updated related methods in SearchAndRecommendationsScrollController . java to improve layout handling and
added a conditional check for terminal support in ConsoleReader . java to ensure compatibility with terminal features
changed variable types from long to int and updated method calls in CloudExitableDirectoryReaderTest . java and LBHttpSolrClient . java
added a validation check for session validity in AbstractSessionCache . java and modified session handling in RemoveSessionTest . java to ensure session validity before
refactored the handling of reference and compared columns in ChangedIndexChangeGenerator . java to improve null safety and maintainability of the code
replaced ` java . util . Vector ` with ` ArrayList < RadioButton > ` and added methods for adding and removing action listeners to improve
refactor UserManagerCompat classes to introduce UserManagerCompatVM for better user management to improve code organization and maintainability by centralizing user
added methods to retrieve database major and minor version in MockDatabase , AbstractDatabase , and HibernateDatabase classes , and modified ReorganizeTable
updated ActionGraphCache to improve handling of mismatched rules and improved error messaging to enhance clarity and accuracy of mismatched rules in the
added LockDatabaseDesc and UnlockDatabaseDesc classes for database locking and unlocking functionality to facilitate the management of database operations in the
refactor RankingTopComponent , RankingUIModel , and RankingToolbar classes to improve code readability and maintainability
added handling for disconnect messages in HandshakeHandler . java and updated logging in NodeImpl . java to improve connection stability and clarity in disconnect
added a test method for setting and deleting a storage group in IoTDBAuthorizationIT . java to ensure proper management and deletion of storage groups in
doc : fix namespace for documentai / v1beta1 / documentai / v1beta2 / documentai / v1beta1
updated type validation logic for method and variable declarations in Assertions . java and added validation for unknown variable types in FindMissingTypes . java to
added method declarations for afterTestClass and beforeTestClass in StepScopeTestExecutionListener . java to facilitate test execution flow by
updated import statements and modified constructor parameters in CountersManager . java for improved clarity and consistency to enhance code readability and maintainability
replaced string concatenation with parameterized logging in MultiSteps and SendEmail classes to improve performance and readability of log messages
added cloning of joinKeys in JoinDesc . java to ensure joinKeys is consistent across different joins
added PrincipalResolver to the authentication handler registration in WebAuthnConfiguration . java to ensure proper registration of authentication handlers with the default principal resolver
added ` ImmutableList < Path > searchPaths ` parameter to ` addSettingsFromFile ` method and updated related assertions in ` XcconfigParserTest
changed variable declarations from non - final to final in Oracle . java to enforce immutability and ensure immutability of variables
[ hotfix ] [ runtime ] disable unaligned checkpoint rescaling until unaligned checkpoint be complete
[ calcite - 1792 ] throw unsupportedoperationexception instead of sqlsyntaxexception when the function be not support
add a couple of println ( ) method to the compiletheworld class to make it easy to debug .
added a check for LocalVariable instances in LambdaRewriter to ensure proper handling of LocalVariable instances in lambda expressions
added support for MySQL - specific timestamp handling in CreateTableGenerator to ensure proper handling of timestamp columns in MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper class loader management during execution
added a condition to set ejection delay when stageNr is zero in SimulationListHandler . java to ensure that ejection delay is set
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related method names to improve clarity and consistency in
refactor TransactionUtil2 class to improve code readability to enhance maintainability and ease of understanding
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple services to enhance flexibility by
added null check for DocCollection reference in ClusterState . java to ensure robust handling of null references and avoid potential NullPointerExceptions
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance functionality by allowing customizable foreign column names
[ java ] throw a timeout exception when try to join a cluster member in an unsuccessful leadership bid .
replaced the static import of ` shadowOf ` with a direct method call to ` Shadow . extract ` in ` ShadowActivity ` and `
added error handling for null or empty selection root in FileSelection . java and introduced a test for Drill4192 in TestBugFixes
add oninventorytick to iforgeitem and deprecate it in iforgeitemstack
fix : zip export fail on window ( # 1745 )
added null check for getSherlockActivity ( ) before calling invalidateOptionsMenu ( ) to avoid potential NullPointerException when accessing getSherlockActivity (
updated widget binding logic in AppsCustomizePagedView and Launcher classes to handle options correctly to ensure proper binding of widgets based on
added new constants for Ecobee sensor capability constants in EcobeeSensorThingHandler . java to enhance clarity and maintainability of the
refactor code for improved readability and consistency in the OperationSetServerStoredContactInfoFacebookImpl . java file to enhance maintainability and
added environment variables for AAPT and AAPT2 in Genrule . java and updated corresponding test cases in GenruleTest . java to ensure
do not dump access table when truffle _ instrumentation _ branches be enable .
added null check for the message before disposing it to avoid potential NullPointerException when message is not initialized
changed the access modifier of the ` db ` variable from private to private final in ` TronStoreWithRevoking . java ` and
updated warning messages in CoreContainer . java for clarity and consistency to improve error handling and provide clearer feedback during logging
replaced printStackTrace ( ) calls with fail ( ) and return statements for cloning failures in CategoryPlotTests . java to improve error handling and
replaced ByteArrayOutputStream with a SmallByteArrayOutputStream and added a null check for the input stream to improve code robustness and prevent potential NullPointerExceptions
[ jme3 ] use intmap instead of hashmap to store attribute
replaced " close = true ; territory = en _ US " with " shutdown = true " in AbstractDIHJdbcTestCase .
changed the type of firstExchangeTimestamp and lastExchangeCompletedTimestamp from Date to Object and added null checks for them to ensure proper handling of null
updated javadoc method parameters and added new test cases in TestHtmlTag . java and TestUseOption . java to improve code clarity and ensure
updated condition to check if the result is incomplete and has more than 10 items to ensure proper handling of incomplete results and improve performance
updated command line argument usage and modified time column handling in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and functionality of command
updated variable names for output format and file extension handling to improve clarity and consistency in naming conventions
inverted the condition for checking QSB visibility in DeviceProfile . java to ensure proper handling of QSB behavior when QSB is enabled
refactor equals and hashCode methods in AnimationList class to use utility methods from java . util . Objects to improve code readability and maintainability
added a ` _ date ` field and its getter / setter in ` AbstractGenerator ` , updated date handling in ` HttpGenerator ` , and
replaced instances of Adler32 with CRC32 in mmm Store . java and ppp Store . java to standardize CRC32 implementation
updated the heartbeat interval parameter from " any # of seconds " to null in the XenHeartBeatInterval configuration to allow the heartbeat
added a new warning constant ` ZERO _ AREA _ FIN ` and updated geometry warning logic in ` FinSetCalc . java ` to improve
[ flink - 14827 ] [ connector / elasticsearch ] add support for retry _ on _ conflict and retry _ on _ conflict to
hhh - 14827 - add date _ trunc ( ) function to h2 dialect and oracle dialect
solr - 10362 : fix metricutils to handle memory pool not find error
updated ` ensureSignedUp ` method to include a ` useJavaScript ` parameter and modified error handling in ` UserContext ` and ` FileAccess
updated error messages to use ` RUNTIME _ PROTOTYPE _ TYPE ` and ` Types . PROTOTYPE _ FACTORY _
updated the BACKFILL endpoint from " / generateAnomaliesInRange " to " / replay " to improve clarity and functionality of the
replaced instances of ` new DataWord ( ) . getData ( ) ` with ` new DataWord ( 1 ) . getData ( ) `
refactor badge update logic in AllAppsContainerView to handle BubbleTextView instances to improve code readability and maintainability by utilizing
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceService and ResourceHandlerTest to clarify the intended behavior after the ContextHandlerCollection is started to improve code readability
removed unnecessary condition checking for WORKSPACE _ CUSTOM in Cling . java to simplify code logic for better readability and maintainability
trufflejdkservices : remove assert that lookupmodule be not null .
updated the method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to ` shadowInvocationWhenChildIsInstrument
updated import statements to reflect the new package structure to ensure compatibility with the latest ItBit API changes
ww - 4892 fix compilation error on jdk 1.6
added private constructors to class declarations in Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes to enforce immutability and prevent instantiation
fix findbugs warn in regionsapiutil . java unnecessary try with resource
replaced direct class name retrieval with string comparisons for Vector and Hashtable to improve readability and maintainability of the code
added ` tableNameWithType ` to the warning log message in ` RetentionManager . java ` to provide clearer context about the retention time
added trimming of whitespace before length checks in fragmentList to ensure proper handling of empty strings in query execution
fix resourcepackfilenotfoundexception to use modfile . getfilepath ( ) instead of path
refactor TransformerBuilder handling to use a generic type for nodes and edges to improve code clarity and flexibility in handling TransformerBuilder instances
removed unnecessary condition for showing as grid in RecentsView . java to simplify logic for better readability and maintainability
replaced ` Map < String , String > ` with ` BMIViewObject ` in the ` Calculator ` and ` CalculatorRest
removed the comparator from the thenComparing method in QueryCommand . java to simplify the comparison logic for better readability and maintainability
blockhaybale : adjust damage for block that have a hay bale .
updated environment variable handling and added checks for " OPENJ9 _ JAVA _ COMMAND _ LINE " and " IBM _ JAVA _ COMMAND _
added support for custom plugin properties in OptionsParser and corresponding tests in OptionsParserTest to enhance flexibility in handling plugin properties in configuration options
updated condition in HashJoinBatch to check if hashTable is not empty instead of null to ensure proper handling of empty hashTable cases
added a check for non - negative seconds in the Timestamp class and refactored TimestampTest methods to use assertEquals for clarity to ensure
[ java ] remove unused field archivectx in clusteredserviceagent . java .
added a check for the ` isCompiled ` condition in the ` COMPILE _ THRESHOLD ` condition to ensure that the code only executes
added unit tests for image mosaic functionality in the AbstractTest class to ensure that the image mosaic functionality works correctly in both DB2 and
refactor TogglableFlag to improve default value handling and add a change listener for app search improvements to enhance clarity and
updated logging statements in DockerClientFactory to include placeholder syntax to improve logging clarity and maintainability
added a condition to return early if the current platform is ANDROID to optimize performance by avoiding unnecessary operations on non - Android platforms
updated assertions in RoutesTest to use Hamcrest ' s assertThat for better readability to improve code clarity and maintainability by
added new functional interfaces for byte , float , and short predicates in the com . speedment . common . function package to enhance functionality for primitive
changed the return type of ` getSubsColor ` from ` int ` to ` String ` and updated related methods accordingly to improve handling of sub
added a conditional check before deregistering the invocation registry to ensure proper handling of future completion completion
replaced the manual creation of ControlFrameBytes with a method call to output to simplify the code and improve readability by eliminating unnecessary
added a check for the " redirected " flag before starting the WelcomeActivity in LoginActivity and set it to true in SignupActivity to
added a new class ` ShadowCheckedTextView ` in ` com . xtremelabs . robolectric . shadows ` to
added Serializable interface to ParserState and updated member variables to be transient in AccessorProperty and Property classes to ensure proper serialization and prevent potential issues
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to address certificate validation issues related to ID
removed redundant context . setAttribute ( TEMPDIR _ CONFIGURED , null ) and context . setAttribute ( TEMPDIR , null ) calls to stream
fix occupant . getnick ( ) to return the nickname of the occupant .
added a ` context ` map to the ` QuicSession ` constructor and modified the connection handling in ` QuicConnection ` and ` Qu
updated merge policy configuration to use ` getConfig ( ) ` instead of direct calls to ` writer ` to improve flexibility by allowing custom merge policies
refactor ICU4JImpl and TextPosition to use ' pageWidthValue ' and ' pageHeightValue ' instead of ' pageWidth '
added handling for ` ComputedDateValue ` and ` ComputedNumericValue ` in ` AddDefaultValueChange ` and ` AbstractDatabase ` classes
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future updates
do n ' t store saml2 service provider metadata if they do n ' t exist
make the idealgraphprinter public so that it can be use in other package
added BigDecimal import and updated order ' s average price calculation in HuobiAdapters . java to ensure accurate calculation of field cash and order
updated field handling in ProjectionOperation and TypeBasedAggregationOperationContext to use Target and Field objects instead of String to improve clarity and consistency in
modified the addViewer0 method to check if the player is already in the viewers list before sending a new packet to ensure that the player
added constant state management to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to enhance drawable state management and improve code clarity
refactored the handling of SSL connection and session creation in SPDYClient . java to improve clarity and maintainability of the code
fix nullpointerexception when write protostuffobject ( null )
pdfbox - 4892 : improve code style , a suggest by valerybokov
refactor BarrowmanCalculator to improve code readability to enhance maintainability and facilitate future updates
added a conditional check for axis visibility in DrawAxis . java to ensure axis visibility only occurs when necessary
replaced direct calls to setFilter and setWrap with unsafeSetFilter and unsafeSetWrap methods to improve performance by avoiding potential memory leaks
[ hotfix ] fix checkstyle violation in xmlworkflowserviceimpl
added SSL context and hostname verification for HTTPS connections in CustomUrlJob . java and created a new CustomUrlTrustEverything . java class to
updated clock rate handling in EncodingConfigurationTableModel , MediaStreamStatsImpl , and MediaFormat classes to utilize a new method for retrieving the
refactor TextureAtlas class to improve code readability to enhance maintainability and ease of understanding
updated the method to return the module name instead of the product name and added a method to set the module name in the AppleLibraryBuilder
added locking mechanism around the release process in TestSlot . java to ensure thread safety during resource release operations
# 169 - fix for findids ( ) with inheritance ( # 169 )
updated WebSocket connection handling in WebSocketServletRFCTest . java by replacing closeFrame with rbuf and modifying the read method to improve clarity
[ wasm ] fix memory leak in native - image .
[ type : fix ] add ` ` ttl ' ' parameter to create table sql query
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified serialization logic in CustomPreconditionWrapper and XMLChangeLogSerializer
refactor DeploymentExceptionTest to use Jetty ' s Server and HandlerCollection for improved server management to enhance test reliability and maintainability
added error handling for Fresco initialization in CommonsApplication and NearbyController to improve robustness by catching potential exceptions during initialization
added a null and empty check for objectName before trimming it to avoid potential NullPointerExceptions when objectName is null or empty
updated error message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve
[ hotfix ] [ table - planner ] make plannerclass and executorclass static final
updated variable names and logic in KeyTool . java for clarity and consistency to improve code readability and ensure proper handling of null values
added a deprecation annotation to the RuntimeOptions class to indicate that the class is outdated and may be removed in future versions
replaced byte encoding with direct string byte retrieval using ` getBytes ( utf8Charset ) ` to simplify code and improve performance by eliminating
added a new interface PermissionEvaluator in the security package to provide a mechanism for permission evaluation in the security framework
added a new option ` ERASE _ LINE _ ON _ FINISH ` and modified the ` doCleanup ` method in ` LineReaderImpl
added a condition to check if the server is not in the onlineServers list to ensure that the server is not in the onlineServers list when
replaced instances of SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ MERKLE _
do n ' t try to create a canonical docbase if it do n ' t exist
[ java ] catch throwable instead of exception in defaulthttpclient .
replaced ` center ` method with ` centerAbsolute ` method in ` Picker . java ` to ensure proper layout positioning of the spinner
[ flink - 20625 ] [ network ] fix bug in networkbufferpool . requestmemorysegments
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper cleanup of the MBeanServer
replaced JUnit runner annotations with RetryTestRule in AbstractIT . java to improve test reliability by using a retry mechanism
refactor QueryStateMachine to remove the auto - commit parameter and update related logic to streamline transaction management and improve code clarity
updated import statements in CsvFieldType , CsvTable , CsvTableScan , CsvTest , and added a new package - info . java file to
added a condition to check for both " javax . net . ssl . DistinguishedNameParser " and " javax . microedition .
[ hotfix ] [ test ] remove unnecessary anonymous class in test
refactor URI handling in Request . java and add a test for CONNECT method in RequestTest . java to improve code clarity and ensure proper
updated storage point retrieval methods in MainApp , WhatsNewActivity , and DataStorageProvider classes to improve compatibility with different Android SDK versions and
added methods to handle session availability and unavailability events in SessionManager to improve session management functionality for better session management
added " liquibase . pro " to the package scan list in ServiceLocator to enable support for Liquibase pro packages in the
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider . java ` to simplify folder
updated the ` loadWithNewGlobal ` method to accept an additional ` Object [ ] ` parameter and modified its implementation accordingly to enhance functionality by
updated variable names and logic in FastPathResolver . java for improved clarity and consistency to enhance code readability and maintainability by using
replaced ` length ( ) ` method with ` getRetainedSize ( ) ` method in ` HiveClientModule . java ` to ensure
updated method names from ` hasRandomizedType ` to ` hasAlreadyRandomizedType ` and ` isExceedRandomizationDepth ` to improve cl
[ flink - 3596 ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner
clear the proxy request headers in AbstractProxyServlet to ensure proper handling of proxy request headers
added a condition to skip the test if SA attach is not expected to work to ensure that the test is skipped when SA attach is not expected
added null check for bgColor in GraphicsDevice . java and created TranslucentWindow . java for testing window translucency functionality to ensure
added a null check for userInfo before accessing its properties in UserInfoActivity . java to avoid potential NullPointerExceptions when userInfo is null
added custom field serialization for precompiled headers in PrecompiledHeaderData . java and removed a precondition check in PreprocessorDelegate . java to enforce
[ hotfix ] [ table - common ] support append mode for kafkatablesourcingsink
added a new integration test class for named output groups in the Buck project to ensure that named outputs can be used in source of any rule
updated regex pattern and added content comparison logic in FileSettings . java to ensure consistent formatting of content based on setting keys
http : / / issues . apache . org / activemq / browse / amq - 2231 - fix issue with flow variable
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added a ` @ TaskbarModeSwitch ( mode = PERSISTENT ) ` annotation to ` TaplTestsQuickstep . java ` to
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
improve error message when item model can not be load
added @ Ignore annotation to import statements in KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test due to potential issues with
pdfbox - 4892 : do n ' t call window . getcurrentsurfacescale ( ) for 2x
refactor RussianLowerCaseFilter class for improved readability to enhance maintainability and facilitate future updates
removed redundant server and client properties creation in CsvBulkLoadToolIT . java and simplified server and client port handling in QueryUtil . java to stream
replace ` File . separatorChar ` with ` _ ` in ` displayName ` to ensure consistent file path formatting across different operating systems
pdfbox - 4892 : implement seekablestream for wavloader . readdatachunk ( )
added a boolean flag ` repeatFirstLineIndent ` and modified the ` setIndent ` method to include it to allow for customizable indentation behavior
change the type casting of the oid comparison from Oid to Object to ensure proper type handling for equality checks
do n ' t register mbeans and health - checks if they do n ' t already exist
loopex : rename controlflowanchornode to controlflowanchored for clarity
added a line to disable the focus painting of buttons in WindowsPlacesBar to improve user interface responsiveness by preventing unnecessary UI elements
updated the condition to check for both UniqueConstraint and PrimaryKey in DatabaseSnapshot . java to ensure proper handling of primary and foreign keys in the
added a new method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` and ` AccountAPI ` classes to provide
[ ds - 4892 ] ensure that a group can not contain a dc . title ( # 4892 )
fix bug in gap insertion detector when there be no word .
added unit test base on user forum issue
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and added `
increased FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 milliseconds in RecyclerViewFastScroller . java to improve performance
updated the initialization of SystemClassName by replacing MetaUtil . toInternalName with a direct reference to " Ljava / lang / System ; "
hhh - 13644 - add getresultstream ( ) to procedurecallimpl to return the result stream
added a null check for API properties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing API properties
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text frame data in WebSocket to enable handling of binary and text frame formats in
danielwagnerhall : wait for element to be load before fail the test
refactor latitude and longitude calculations in RandomGeo3dShapeGenerator to improve randomness and accuracy of shape generation logic
added a keepAlive method to the ResourceBundle class to facilitate garbage collection of ClassLoader instances
changed the return value from false to true in SQLiteDatabase . java to reflect the intended functionality of the database functionality
fix for jsr166 lockmonitorenter to report a high priority warning
added MkdirStep instantiation in multiple Java files and updated the expected number of steps in FatBinaryTest to ensure proper directory creation and improve test
updated coordinate comparisons and error messages in MeshLeveler . java to improve clarity and consistency in error handling to enhance code readability and maintain
( chore ) camel - jbang - pmml : skip kie - pmml parse and compilation if jpmml be not available
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure accurate validation of the thermal status during shutdown
added support for macOS temporary directory creation in MountableFile . java to ensure compatibility with different operating systems
added a conditional check for Windows OS in PrjFileReader and CatalogManager classes to ensure proper memory handling based on system property to ensure compatibility
added a null check for the organization in the pom . xml file to ensure Plugis are required to have an organization in the pom .
updated license information in SepPostingsWriterImpl . java to clarify contributor license requirements
deleted the TerminateWebSessionListener . java file to remove unused code to streamline the codebase
updated the method to use the Java class path instead of an empty string to ensure the process execution uses the correct class path configuration
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for ` cryptKeyInit ` , ` crypt
added JUnit Pioneer annotations and a new test method in AddLicenseHeaderTest . java to address issue 3198 related to Javadoc changes
changed the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the launcher3 features by default
added a ` < div class = ' noPrint ' > ` to the HTML output in ` HtmlThreadInformationsReport . java ` to
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and replaced LUCENE _
added macosx symbolicator and task handles in BsdDebuggerLocal . java and modified OS detection in PlatformInfo . java to support Mac
fix a memory leak in the indexedmessagetomessagecodec and fmlclienthandler
do n ' t log networkdispatcher exception in case it be a connection reset by peer .
[ java ] initialize client conductor in case of no conductor byte buffer be available .
added a break statement in TouchImageView . java to prevent infinite loops in the code
fix : [ dialogflow ] update documentation for advancedsettings . logging _ s and advancedsettings . logging _ s .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5448 - remove flush
added checks for object type constraints in TypeUtils . java to ensure proper handling of type variables in the conversion process
replace NonBlockingHashSet with ConcurrentSkipListSet in memtablesPendingFlush to optimize performance by avoiding blocking operations
added null check for ` tree . errs ` in ` MemberEnter . java ` and modified error handling in ` JavaCompiler . java ` ,
updated Browser instantiation to use SWT . NONE instead of SWT . NO _ BACKGROUND to improve visual consistency in browser rendering
updated the cancel button method from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to
fix division by zero in integerstamp . getdiv ( )
added a method to read an InputStream and updated image instance retrieval to use this method to improve code readability and maintainability by centralizing image
updated the ` CaseStmtToken ` class to include a ` locals ` set and modified the ` SwitchCompiler ` and ` ExprGenerator ` to
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions when attempting to initialize the cipher provider
updated AdditionalDependencies in WinGammaPlatformVC10 . java to include psapi . lib to ensure compatibility with the new library structure
updated string formatting in StringUtils and StringUtilsTest to use platform - specific line separators to ensure consistent line endings across different operating systems
added incompatible improvements and default encoding settings in TemplateEngineFreemarker . java , and modified malicious JavaScript content in Application
updated the byte array handling in CRDGeneratorTest to use a string representation of the output to improve clarity and maintainability of the code
fix sonar warning : make field final
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure the reporter is only added
added a quoted flag to the CommandLineBuilder and updated related tests to ensure proper handling of quoted characters in command line input
removed the ` public ` access modifier from multiple interfaces and classes from the ` Clock ` , ` DelegatingGauge ` , ` MetricProducer `
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to set the number of reduce tasks based on fetchers
refactor field handling in SchemaGeneratorHelper to use field definitions instead of object fields to improve code clarity and maintainability by consolidating field
updated the file version from " 505365 " to " 532077 " in SaveService . java to ensure compatibility with the latest
updated extension checks in FloatTextureData to use " GL _ ARB _ texture _ float " instead of " texture _ float " to ensure
add write ( ) and closefile ( ) method to fileserver to allow to write to a file
added a conditional check for outputDirectory and jarStream before setting the output directory to ensure output directory is only set when both outputDirectory and jarStream are
added performance measurement using PerfStatsCollector in ShadowSQLiteConnection to improve performance monitoring for SQLite connections
replaced ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java ` and
[ geos - 5396 ] add a new enum resourceerrorhandling to handle ogc _ exception _ report and skip _ isMIS
added a conditional check for buffer position in RAMInputStream and implemented EOFException handling in TestRAMDirectory to ensure proper buffer positioning and handle EOFException
updated error handling in DefaultServlet and JspServlet to include specific messages for missing resources to improve error reporting by providing clearer context for missing resources
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added AccessControlContext for permission testing to enhance thread management
updated CHECK _ EVERY _ N constant and modified memory checking logic in Caches . java to improve memory management and enhance debugging capabilities
hbase - 26969 testsplittransaction . testsplittransaction fails due to hregion . openhregion ( ) be call twice
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is not initialized
add a parameterized test for the JAAS demo in the DemoModulesTests class to ensure that the JAAS demo works as expected
added checks for spanX and spanY when creating a folder in CellLayout . java to ensure folder creation occurs only when both width and height
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
improve error message when try to create a table depend on a table with a higher id
added bounds checking for tile values in TiledLoader and improved logging for invalid XML gid values to ensure that extra XML gid values are ignored
make inmemorytilecache # setworkingset synchronize
added a new Java class to calculate the final steps based on a range of integers to facilitate the computation of final steps based on
added addresschecker interface to check for bad address .
fix rendertype = = rendertype . gettranslucentmovingblock ( ) in multilayermodel . getlayer ( )
remove the default tag from the config element comment ( # 1186 )
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` and updated its assignment in ` ModuleType ` and `
added null check for recieptents before mailing and changed time conversion from seconds to milliseconds to ensure robustness by preventing potential NullPointerException
refactor the single check logic into a separate method ` isSingle ` to improve code readability and maintainability
updated DockerClientFactory to include a failFast parameter for client method and improved logging in RemoteDockerImage and ImageFromDockerfile to enhance
added resourcesMode parameter to AndroidMetadata and updated related methods in RobolectricTestRunner and AndroidMetadata classes to enhance resource management by allowing
refactor date handling in HistoricProcessInstanceQueryImpl to use Calendar for time manipulation to improve code clarity and maintainability by using a
replaced ` gradleImporter . importProject ( projectFile ) ` with ` gradleImporter . importProjectCore ( projectFile ) `
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command execution failures
refactor TreeMap implementation to improve code readability and maintainability
added methods to enable or disable asynchronous stack traces in the Display class to enable asynchronous stack trace functionality in the application
added a method to set the glow color in BubbleTextView and updated Folder to use this method to enable customizable glow colors
added style class settings for link and description in LinkedFilesEditor to ensure consistent styling of link and description elements
added a test for the " alltypes " table in the ResultSetMetaDataTest class and modified the method to retrieve column class names to ensure correct
removed unnecessary file deletion in ` Lucene40LiveDocsFormat . java ` and ` SimpleTextLiveDocsFormat . java ` to streamline
added null check for _ info in HttpConnection . java to prevent potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class that accepts a provider string to facilitate the initialization of the ShadowLocation class
updated maxRAM calculation for 32 - bit devices in LauncherPreferenceJavaFragment . java to accommodate larger RAM sizes to ensure proper
include map with no data in localmapstats
added logging functionality to FileProfileActivator by implementing LogEnabled interface and enabling logging for file existence and missing files to improve error handling and
updated the string used in addToBody from " noname1234 " to " invalid _ " in PdfWriter . java to improve clarity and
make guild # getroles return a set instead of a list to avoid concurrentmodificationexception .
updated the maximum number of uploads in ExpandableUploadListAdapter from 30 to MAX _ NUM _ UPLOADS _ SHOWN to improve flex
added unit tests for the ` delete ` method in ` DashboardUserMapperTest ` to ensure proper functionality of the ` delete ` method in the
rename recipient to primaryparticipant in instructorfeedbackresultspageata to avoid confusion .
[ gr - 13939 ] fix dereferencing of llvmpointerstorenode on sulong address .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the ` bufferSize ` variable for better
added usageHelpAutoWidth option to the Terasology command and updated the headless option description to clarify the command ' s usage
updated action bar title setting logic in DrawerActivity . java and added a check for old interactions text in DrawerActivity . java to ensure
refactor CommandLineParserTest for improved readability to enhance maintainability and clarity of test cases
added interpolators for animation transitions in QuickstepAtomicAnimationFactory and PortraitStatesTouchController to enhance animation responsiveness based on user
updated the method to use ` javaNameFromExternal ( externalName ) ` instead of ` toUnderscoreSeparated ( externalName ) ` to improve
removed native method declarations from CWrapper . java to streamline code by eliminating unnecessary dependencies
added constant value checks in mmm Checker . java and created a new ValueTest . java class to ensure proper handling of variable references and validate
refactor MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code organization and maintainability
removed null check for constructors in PojoUtils . java to simplify code by eliminating unnecessary null checks
refactor JiraConfiguration class to improve code organization to enhance maintainability and readability of the Jira configuration
updated string representations for error and coverage scenarios in UploadBuild . java to improve clarity and accuracy of build status messages
updated bounds calculations in DeviceProfile . java to include search bar offset to improve layout responsiveness by accounting for search bar positioning
corrected spelling of " to " in logger warning messages and added conditional disconnect logic in PulseaudioSimpleProtocolStream . java to improve
refactor code to run on the UI thread for launching the RecentsActivity to ensure the RecentsActivity is launched on the
removed unnecessary imports and added a method to retrieve the source group in AppleSource . java to streamline code by eliminating unnecessary dependencies
increased wait times in TestSimTriggerIntegration from 220000ms and 60000ms to 320000ms and 90000ms to improve
[ hotfix ] [ runtime ] fix the size of all - null block return by float reader
fix abstractnodecostsearch . getbestpath ( ) to account for distance from startSq
added a check to skip processing for component types " com . codename1 . ui . Form " and " com . codename1 .
replaced ` UiThreadHelper . getBackgroundLooper ( ) ` with ` LauncherModel . getWorkerLooper ( ) ` in
added a null check for commitPoint and initialized it to the latest commit if it is null to ensure the correct commit point is used when no
added tests for IMEI and MEID functionality in ShadowTelephonyManagerTest and implemented corresponding methods in ShadowTelephonyManager to
added debug logging functionality to the SimpleHostRoutingFilter to improve debugging capabilities for Zuul requests
added ` destory ( ) ` method to ` OfflineResourceDataManager ` , ` IndexSegment ` , and ` BitmapInvertedIndex `
[ rocketmq - 4892 ] fix the bug of testsynsendmessage ( ) and testsynreceivemessage ( ) .
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 25828 bulkload should not fail if there be an io error when check if bulk load be ok .
added a nullable BigDecimal field ` commission ` to ` DefaultWithdrawFundsParams ` and updated its usage in ` RippleWithdraw
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to streamline code by eliminating unnecessary dependencies
consolidated multiple catch blocks for SolrServerException and IOException in LoadSolrBuilder . java and SolrLocator . java to improve code readability and
added error handling for abstract overloaded methods in Java to TypeScript translation to ensure proper error reporting when invoking abstract overloaded methods
added logging functionality using StacklessLogging in TestFileSessions . java to ensure proper resource management and prevent potential memory leaks
initialized ` type ` in ` MutableColumnDataType ` and implemented ` Serializable ` in ` SqlDataType ` , changed access modifiers in ` Entities `
renamed SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added a null check for claimRequestString in ConnectOAuth2RequestFactory . java to handle cases where the claimRequestString is empty
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility in creating HiveFilterSetOpTranspose
refactor ` processTypeHintForNestedDocuments ` method and add null checks in ` UpdateMapper ` and ` UpdateMapperUnitTests ` to
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest . java and added a new method in CoreAdminRequest
fix memory leak in moddirtransformerdiscoverer
updated error message formatting in AbstractQuerydslProcessor . java to improve clarity of error messages for better debugging
[ gr - 13434 ] improve bailout exception message to include the call stack .
updated method names from ` setOf ` to ` copiedSetOf ` for consistency to improve code readability and maintainability by using a more
camel - 14850 : camel - mail - should use objecthelper . getidentityhashcode instead of mailutils . dumpmessage .
http : / / issues . apache . org / activemq / browse / amq - 1390 - fix for amq -
updated the ` getIdentifierName ( ) ` method to include ` setIsPropertyName ( ) ` to ensure proper handling of property names in the parser
move wave generator to a separate activity so that it can be use by other apps
added null checks and logging for sheet overrides in KeyedProperties and SheetOverlaysManager classes to improve robustness by preventing potential NullPointerExceptions
test : add integration test for kubectl shell in podit
added a test method ` testNoWriter ` to ` TestReplicationHandler ` and modified ` useFactory ( null ) ` in ` MockDirectory
[ gr - 18686 ] fix dispatchmethodkokra ( ) call in graalkerneltester
[ java ] sort mxrecord by priority in order to be consistent with dns .
refactored thread creation in XToolkit . java and increased sleep duration in TestShutdown . java to improve code clarity and ensure proper
added validation in SelectBox and set the selected Linux version in UITest to ensure proper functionality and support Linux 6 in the user interface
replaced IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by printing stack traces instead of throwing an exception
added a new parameter ` parentSplit ` to the ` createState ` method and updated related logic in ` FlowBuilder ` , ` SplitState
changed the ` connectionState ` variable to be ` volatile ` and updated the return statement to use ` connectionState ` instead of ` getConnectionState
increase default polling period from 10 to 1000 in AbstractPollingEndpoint . java and enable integration tests in EnableIntegrationTests . java to improve polling
refactor memory allocation and method visibility in MemoryStack and MemoryUtil classes to improve code clarity and maintainability by using a consistent naming convention
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error reporting by
[ java ] unusedmodifier false positive with enum
refactor lambda expressions to method references across multiple classes to improve code readability and maintainability
updated the @ Parameterized . Parameters annotation in AbstractHttpClientServerTest . java to include SSL configuration to enhance test flexibility by allowing SSL connections
refactor exception handling in TransformationHelper for improved clarity and error messaging to enhance error reporting and provide clearer context for transformation failures
replaced userPermissions with activeConnectionPermissions in ActiveConnectionRESTService . java to ensure accurate accessibility of active connection identifiers
replaced manual equality checks with Apache Commons Lang ' s EqualsBuilder for improved readability to enhance code clarity and maintainability by
added a null check for outputRoot in the process method to prevent potential NullPointerException when outputRoot is not set
pdfbox - 4892 : add annotation filter to pdfpage and pdfrenderer , a suggest by valerybokov
refactor StackTraceCleaner class to improve code readability to enhance maintainability and ease of understanding
updated content type handling for CSS and JavaScript files in PluginServlet to ensure proper content type for CSS and JavaScript files based on the request path
hhh - 14827 skip test for oracle dialect in select expression test
updated the parameter name from ` slot ` to ` slotSize ` in the ` upgrade ` method and adjusted the logic for handling the stats array
added ` getStats ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , ` ContextImpl ` , and ` DocBuilder `
( chore ) camel - jbang - kie - client : introduce a long - polling mechanism
added accessibility support for scrolling in PagedView and modified gesture handling in LauncherInstrumentation to improve user interface responsiveness by allowing
replaced the initialization of UnlocksDialog in UI . java and added a button to the PausedDialog in PausedDialog . java to
clear the drop list in the PlayerEventListener to ensure the event ' s drops are properly cleared
added a new constant DEFAULT _ PARAM with a default value of " inputName " in StreamResult . java to provide a clearer default parameter for
updated the exception type in the test method from MalformedURLException to IOException to ensure proper exception handling for better error management
updated the print statement in TsFileSketchTool . java to include the chunk type and modified the line length in LocalTsFileInput . java
added a set to exclude specific headers from the UmbrellaHeader class to exclude specific headers from the project generation process
renamed the method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java `
added a call to ` encode ( ) ` in ` RequestPlugin . java ` to ensure proper encoding of request data
added support for DB2 dialect in ` RolapNativeSql ` and ` RolapNativeTopCount ` classes to ensure compatibility with different database
added a validation check for null or blank password in LdapAuthenticationProviderImpl . java and created a corresponding test class TestLdapAuthenticationProviderImpl .
pdfbox - 4071 : simplify code , a suggest by valerybokov
added a condition to clear the complexWriters in ProjectRecordBatch . java to ensure that the complexWriters list is cleared when the condition is met
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress serialization warnings to improve code clarity and maintainability by suppressing
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and updated the null check condition for ` classInfo ` to improve code
added a check for the name " _ errors " in the ErrorResponseException class and modified the return statement to handle empty location cases to improve error
added a constructor to ` EventSourcingRepository ` that accepts an ` EventStore ` and ` SnapshotTriggerDefinition ` to facilit
refactor symbol handling logic in binary node processing to improve code clarity and maintainability
modified the handling of search text in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure proper formatting of search text to avoid potential
[ nuvo ] add standby mode for command that end with ` ` on ' ' or ` ` page on ' '
tmi - tiff : fix a typo in the default planar configuration
added a close ( ) method call to the ItemListTag class to ensure proper resource management and prevent memory leaks
fix the laser table not be update correctly , and add averageutil .
added two new files , SigInt . java and SigIntBarrier . java , implementing sigint and sigintbarrier functionalities to
refactor graph handling in ExporterGEXF . java to utilize HierarchicalGraph and EdgeIterable instead of a single GraphModel instance to
refactor TCTLSeparatedProtocol to use Text class instead of byte arrays for null handling to improve code clarity and maintainability
[ # 8807 ] fix index out of range error in response
updated the condition to check for CatalogAndSchema . ORIGINAL _ CASE instead of DB2Database to ensure correct comparison of schema and catalog
refactor BrowserMobProxyTest methods to improve clarity and functionality to enhance test readability and ensure proper management of browser proxy settings
refactor criticalErrors string formatting to use Integer . toString ( ) for better readability to improve code clarity and maintainability by avoiding
removed redundant reset ( ) call in InPlaceEditView . java to streamline code by eliminating redundancy
refactor InternalByteArray and TruffleString classes to improve code organization and maintainability
[ hotfix ] [ graph ] change return type of outedgesfunction to tuples2
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability
deleted the file ` Class Á . java ` and added a new file ` DiacriticTest . java ` to implement a
replace CountDownLatch with CyclicBarrier in ClusterMembershipTest . java to improve concurrency handling by utilizing a cyclic barrier instead of a
added error handling for workspace reader lookup in DefaultMaven . java and modified project collection logic in DefaultGraphBuilder . java to improve robustness
updated the method for determining the SSL scheme in ServiceRegistryConfig and modified the IP port assertions in TestServiceRegistryConfig to improve code clarity
refactor Mockito class implementation to improve code readability and maintainability
reformatted the constructor of Jdbc3Connection for consistency to improve code readability and maintainability
refactored the servlet instance initialization logic into a separate method ` ensureInstance ( ) ` to improve code readability and maintainability by central
added logging functionality and modified deltaServerTime handling in BinanceExchange and BinanceBaseService classes to improve monitoring and monitoring of server and system
added a condition to check if the binding starts with " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.
added null check for the Form before deregistering the animated animation to avoid potential NullPointerException when accessing the component form
refactor ` decodeResource ` and ` describeDrawBitmap ` methods to accept ` BitmapFactory . Options ` as a parameter to enhance flexibility
[ java ] replace executor . execute ( lambda ) with executor . accept ( subscription ) .
added click and long - click functionality to the tweet holder in TimelineArrayAdapter . java to enhance user interaction by allowing customization of tweet
added " text " data type to the unmodifiableDataTypes list in PostgresDatabase and modified conditional checks in NumberType and ColumnSnapshotGenerator to
entryprocessorbouncingnodestest : cleanup after each test ( # 3683 )
updated method name from isHardDeletableState ( ) to isRemovableState ( ) in AmbariManagementControllerImpl . java to
updated the logic for adding results to the inbox in CreateBridgeServlet . java and modified test cases in CreateBridgeServletTest . java to ensure
crawldisable . updaterobots ( ) now synchronize to avoid race condition .
replaced direct calls to getDisplayName ( ) with a local variable dName in multiple files to improve code readability and prevent potential NullPointerExceptions
added a default shader parameter to SpriteBatch constructors and updated shader creation logic to enhance flexibility in shaders by allowing custom shad
added synchronous commit option to properties in TestUtil . java to enable synchronous commit functionality in the application
added type coercion functionality to SortedSetTypeCoercer and updated related tests to enhance type coercion functionality and ensure proper handling of
refactor confirmation messages and button assignments in RemoveFileDialogFragment and RemoveFilesDialogFragment for clarity and consistency to improve code readability and
added a bounds check for the character index in URLPathEncoder to ensure safe access to characters less than 256
updated the way the user ' s fragment storage is registered by using a dynamic port instead of a hardcoded value to improve flexibility by allowing
updated the expectation in HostResourceProviderTest to return an empty map instead of an empty map to ensure that the method returns an empty map when
[ hotfix ] remove unused logger from yarnentrypointutils # loadconfiguration
refactor sipcommframe so that it do n ' t need to be final
removed the ShadowHtml class and updated assertions in HtmlTest to simplify the code and improve readability by removing unused imports
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface
updated JettyLogger references to use " org . eclipse . jetty . http3 " and " org . eclipse . jetty
changed the access modifier of the ` addListeners ` method from private to public and added a test for listener validation in ` MockSettingsImplTest
[ hotfix ] [ runtime ] fix checkstyle violation in statehandlestore
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . j
[ # 8271 ] instructor can now enroll student in a different section ( # 8272 )
use try - with - resources to prevent resource leak
camel - 1145 : fix the unit test error of camel - jbang
added a new ` libraryTarget ` field and refactored jar parameter retrieval methods in ` JarBuildStepsFactory ` to improve clarity and
fix typo : validate - cerficates - > verification
cloudstack - 4892 : remove unused method listcapacitycmd . getpagessizeval ( )
added a case for CLOSED in IteratingCallback . java to handle the case where the callback is already closed
added a private boolean field ` isAuthorized ` to the ` AccessControlContext ` class and updated its initialization logic to ensure the ` isAuthorized `
refactor OSGiDeployer to check if the app is an instance of AbstractOSGiApp before sending events to ensure proper handling
added handling for " tiff " codec and container in DLNAMediaInfo . java to ensure proper MIME type assignment for tiff
fix a race condition in optimizedcalltarget . profilearguments ( ) .
added a new file ` Cubocy . java ` and modified the ` Map . java ` and ` MapRenderer . java ` to
updated file paths in PolicyMonitor initialization from ` getTestResourceDir ( ) ` to ` getTargetDir ( ) ` and ` getTestResourceFile (
added a call to removeAllFiles ( ) in TrashbinActivity to ensure all files are removed from the trashbin list
replaced the import of ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` with ` com . sun .
[ gr - 13939 ] fix checkglobalvariablestoragenode . execute ( ) and readdirectfinal ( ) method in llvm
modified the ` createLauncherEvent ` method to include an ` Intent ` parameter and updated related method calls to include intent information to enhance event handling
added a constant for the maximum burn amount and updated the return statement to use this constant to improve code clarity and maintainability by using a
updated imports in UniqueConstraintSnapshotGeneratorSnowflake . java and refactored schema handling in UniqueConstraintSnapshotGeneratorSnowflake . java
refactor DMLTransformer to handle empty insert statements more clearly to improve readability and maintainability of the SQL query generation logic
updated PGT URL in ServiceValidateControllerTests to use HTTPS instead of HTTP to ensure compatibility with secure URLs and improve test accuracy
added a boolean parameter ` isStatement ` to the ` getDefaultValidFunctionName ` method and modified the function body handling to improve function name validation and
refactor JarLauncher to improve code structure to enhance maintainability and readability of the code
updated generic types in multiple classes to improve type safety and clarity to enhance code readability and maintainability by specifying generic types
added a new Dimension ( 320 , 200 ) in DeviceConfiguration . java and implemented a sendHolePunchPacket method in TransportManagerGT
added a test method to update a PGobject in the ResultSetTest class to verify the functionality of updating an existing PGobject in the database
updated PasswordResetEndpoints to handle empty email queries and return an UNPROCESSABLE _ ENTITY when the user does not have a valid email to ensure
replaced the retrieval of a child node with a direct retrieval of the document element to simplify the code and improve readability by using a more
refactor caching logic in Cache . java to improve performance and maintainability of the code
rename timeInSec and prevTimeInSec to timeMillis and prevTimeMillis in Isochrone . java and SPTResource . java
fix an issue with the light relay not be able to bind properly .
added a new ` Chainer ` class and modified ` CollectionSubject ` to use it for ` contains ` and ` containsFailure ` methods to
refactor Model class to improve code readability to enhance maintainability and ease of understanding
updated the recordedTime calculation in Locations . java to include a long value of 619315200000L to ensure accurate time representation in
added a condition to resize the status if the terminal type is Windows to ensure proper resizing behavior for Windows terminal types
updated host version state logic in UpdateDesiredStackAction . java and modified repository version state in RepositoryVersionState . java to ensure only installed versions
[ j2kt ] move jre _ bundle _ deploy . jar to integration / j2cl _ bundle _ deploy . jar ( #
replaced ` HashSet ` with ` LinkedHashSet ` for ` resolvedArtifacts ` and updated ` setSettingsBuilderAdvice ` method to return ` Maven
removed try - catch block around operation initialization to simplify code by eliminating unnecessary exception handling
refactor property configuration resolution in KnativeEnvironment . java to improve code readability and maintainability
updated the executor name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in naming con
added a connect ( ) method to CloudSolrClient and a test for uploading configurations in TestCloudSolrClientConnections to ensure proper connection handling and
added synchronization around binding additions and removals in Breakpoint and DebuggerSession classes to ensure thread safety during concurrent access to the allBindings list
added methods to clear files and cache in RobolectricTestRunner and ShadowContext classes to improve code clarity and maintainability by central
added imports for LinkedHashSet and TreeMap in SecureXStream . java and modified styles handling in XStreamPersisterTest . java to enhance performance and ensure
( chore ) camel - jbang : add kiemodulemodel to kiehelper and internalkiebuilder
refactor Farmland handling in BlockEventListener to use instance checks for better clarity to improve code readability and maintainability by redu
added a default implementation for the ` getLocalIp ` method in ` FinishedSpan ` to provide a default implementation that returns ` null ` for better
updated JdbcStepExecutionDao to use deserialization for OBJECT _ VAL and added unit tests for integer handling to ensure proper serialization and deserialization of integer values
updated comments for clarity in multiple Java files to improve code readability and maintainability
[ pytorch ] add ` - python - py ` and ` - python - gpu ` build to presets for tensorflow
added a refresh button and refactored the plugin list handling in PluginTab . java to improve user experience by allowing refreshing the plugins list
changed log level from info to warn for error messages in DefaultHistory . java to provide more informative logging for errors during file reloading and
server : fix npe in vmwarestorageprocessor due to miss vm
camel - sftp : fix camel - sftp test failure on window
updated ExperimentalMockitoJUnitRunner . java file to improve test coverage and maintainability
updated serial handling in GpsSettingsActivity and Session to use a utility method for serial identification to improve code clarity and maintainability by central
refactor SwapGBuffers class to improve code organization to enhance maintainability and readability of the code
added null checks for spatial and skeletonControl before removing it to prevent potential NullPointerExceptions when spatial is not initialized
added a new method ` setSmartReplies ` to ` ShadowRankingTest ` and updated ` ShadowRanking ` to use a reflector for
[ java ] do n ' t use lambda for segment file lookup in archive conductor .
refactor carrot2ResourcesDir initialization in CarrotClusteringEngine . java to improve code readability and maintainability
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new class ` bug8004298 .
updated ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils and CompilationConfig classes to ensure compatibility with the latest
replaced null return statements with exceptions in RecommenderMapper . java and added null check in CacheTest . java to improve error handling and ensure
added client information handling in SurrogateAuthenticationEventListenerTests to improve test reliability by utilizing client - specific information
added a boolean variable isUserView initialized to false in CardPresenter . java to ensure user view state is correctly initialized for better user experience
replaced calls to ` GraphvizJavaExecutorUtility . isGraphvizJavaAvailable ` with ` GraphvizUtility . isGraphvizJavaAvailable
[ java ] store constructbatchhistogram and synclogtimeperrequesthistogram in local variable
added a new module - info . java file for the SQLite connector to define module exports and requirements for the SQLite connector to facilitate
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure thread safety during stream reset operations
removed conditional check for " new " web type in permissionsManager initialization to simplify the code by eliminating unnecessary checks
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a getDepth method to the SpringLoadedState class that returns a value of 0.5 to provide a dynamic depth calculation based on the context
replaced manual array allocation with ` Arrays . copyOfRange ` for data handling to improve code readability and maintainability by using a constant for
[ hotfix ] fix checkstyle violation in executiongraph
removed unused SwipeLayout references and updated notification handling in NotificationActivity and NotificationRenderer to streamline the code and improve user experience by removing unnecessary
updated exception handling in DefaultExceptionConverter to return " none " for null invocation and modified test assertions in ExceptionsTest to ensure proper handling of null
change glowcontainer ' s lock field to be empty string instead of null
replaced MethodHandle with reflection for setting a field in ProxyMaker . java to improve method accessibility and simplify exception handling
replaced direct casting with ` intValue ( ) ` for integer queries in ` MathTest . java ` to ensure proper handling of integer values in
updated the return statement in BaseEmailContentFormatter to remove unnecessary StringUtils . join for metrics and datasets to simplify the string representation for better readability
added a new JPanel to manage the visibility and display of a simple panel based on the layout node to enhance user interface responsiveness by allowing
added a null check for location in the dead server check to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for DSA public key parameters in BasicChecker . java to ensure the certificate path is valid and prevent potential NullPointerExceptions
refactor ignore logic in MediaTypeRequestMatcher to use a dedicated method to improve code readability and maintainability by reducing duplication
added taskNum variable and updated debug logging format in LlapBaseInputFormat . java to improve code clarity and maintainability by using task
added properties to the SpringBootTest annotation in EventServiceTests . java to allow configuration of bean definition overriding in the test class
added a null check before closing the indexReader to avoid potential NullPointerException when indexReader is not initialized
refactor BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , BTCMarketsStreamingMarketDataService , and B
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest ` to verify that ` code ` does not have
added a new file CompatibilityTest . java to test XML property loading and validation to ensure that the Compatibility class correctly handles XML
added new utility classes ` PushUtils ` and ` SecurityUtils ` for push - related functionality to facilitate utility functions for pushing
[ hotfix ] [ table ] fix the bug of tablerebalancer # getnextsinglesegmentassignment ( )
bump version to 2.7 . 0 and fix release note
log4j2 - 1348 fix line separator issue in test
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5448 -
set default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure default values are
updated anomaly class and method names from " fetchSaclingFactors " to " fetchScalingFactors " across multiple classes to enhance clarity
added error handling for shell command " am wait - for - broadcast - idle " in LauncherInstrumentation . java to improve robustness by
added unit tests for font and link tags in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure correct retrieval
fix / src _ work / minecraft / src / guistatscomponent . java not be in src _ base
added support for the CALL _ PHONE permission in the Launcher and Utilities classes to enhance user experience by allowing users to access a specific phone
updated return value from 32 to 36 in SimulationPanel . java and modified method signatures in BasicEventSimulationEngine . java to include Flight
updated visibility of BUF _ SIZE _ LONG and simplified byte handling in GeoEncodingUtils to improve code readability and maintainability by reducing
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to ensure thread safety when accessing the Docker client
added a new constant VPX with a value of " vpx " in CodecTypes . java to facilitate the use of
added a coordinator address parameter to the DistBuildFactory and DistBuildRunCommand classes to allow configuration of the remote coordinator thrift server to connect to
added a new method ` match ` in ` FsUtils ` and refactored timer usage in ` WrapTimer ` to improve path matching functionality
added a conditional check for non - positive values before adding label values in TestTaxonomyFacetSumValueSource to ensure that label values are only added
ggb - 1341 fix for ` ` possiblyGenericallyTrue ' ' boolean value
removed the @ Test annotation from TestPerfBenchMarkDriver . java to streamline test execution by eliminating unnecessary annotations
added a method to set the materialization time in ObjectStore and created a test for it in TestObjectStore to ensure that the materialization
added handling for UnsatisfiedLinkError in VoskSTTService methods to improve error handling and logging for missing native dependencies
remove the isoneAY property from the JMSSamplerGui and update string concatenation in JMSSampler to improve code readability and
updated break weight logic in GlyphView . java to improve clarity and correctness of break weight handling
refactor byte reading logic in RCFile . java to use a buffer for improved performance to optimize performance by avoiding repeated reading of sync
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address a known issue related to SOLR - 13
refactor ToePool to use a LinkedList for unwound steps and processors to improve readability and maintainability of the code
removed unnecessary parameters from the ` setToSortedDataFlavorArray ` method and updated the ` DataFlavorComparator ` implementation to simplify the code
hbase - 15928 testthriftservercmdline should use random free port to avoid port conflict
added a check for end of file in RegExpScanner to ensure proper handling of end - of - file scenarios
replaced Boolean . getBoolean ( ENABLE _ METRIC _ PROPERTY _ NAME _ PREFIX + name ) with a check for enabledMetrics and enabled
fix a nullpointerexception in chatroomjabberimpl when the chat room have no nickname .
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 563 , add
refactor refresh token creation into a separate method to improve code readability and maintainability
updated error message formatting in BuckConfig . java to improve clarity of error reporting for path transformations
[ hotfix ] remove dead code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` that returns ` null ` in ` ShadowNativeImageReaderSurfaceImage . java
added SSL URI configuration for BTCChinaExchange to ensure proper access to the BTCChina data service
[ net . sourceforge . pmd . ant ] fix file path issue on window
added OauthController and Oauth2PluginTest classes for OAuth - related functionality to facilitate OAuth2 access control in the application
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future updates
added ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and removed duplicate methods in ` EntryStream ` and ` Entry
added error logging for invalid parameters in RestCodec and improved exception handling in ExceptionToProducerResponseConverters to enhance error reporting and provide clearer
added a comment to the ` shouldComeFromThisClassLoader ` check in ` RobolectricTestRunner . java ` and ` Rob
inverted the condition checking for transmittable audio encoding to ensure proper handling of non - transmittable audio encodings
replaced ` SequenceNextValueFunction ` with ` DatabaseFunction ` in ` CreateTableGenerator . java ` and added a new test for default
[ wfs ] add test for station _ gml3 and station _ gml32 .
added a volatile boolean field ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added a check for configuration before expanding regex mappings in ColumnarDataSource and changed return types to unmodifiable collections in RowProcessor to ensure proper handling of
updated ` CustomSeekProvider ` to handle different seek lengths and refactored the ` splitIntoThirtyParts ` method to improve accuracy in
added ` XLCDCommunicator ` and ` XLCDController ` classes , modified ` FirmwareUtils ` to handle ` X
[ drools - 5892 ] allow to define a custom xsd for a kie - kmodule
replaced infinite loop with a retry loop that checks for empty strings and added assertions for retry times to ensure that retry times are greater than zero
refactor WorkerProcessPoolTest to use a timeout constant for thread joining and simplify thread state assertions to improve code readability and maintainability by
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
reduce EnergyCost constants from 20 , 000 , 000 to 10 , 000 , 000 to reduce resource usage and improve performance
added exception handling for ConfigurationException in DownloadPlugins . java to ensure proper configuration management during command execution
deleted the ` SpringTransactionHooks . java ` file and updated the test class to use ` AbstractSpringTransactionHooks ` instead to streamline
refactor AbstractClassAssert to improve code readability to enhance maintainability and ease of understanding
added a new file GetUninitializedStringValue . java implementing Java ' s StringReference functionality to facilitate testing of uninitialized String values
added support for provided dependencies in AndroidLibraryDescription and updated GraphEnhancementQueryEnvironment to enhance dependency resolution and support additional query patterns
added a new device flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of keyboard open
replaced the system anomaly message retrieval with a boolean flag to track bug report status to improve code clarity and maintainability by reducing
added a constant for " cinepack " format in FormatConfiguration and updated LibMediaInfoParser to use it to support CinePack format
added camera bobbing functionality and adjusted animation offsets in the Player . java file to improve player responsiveness during camera bubbling
updated the data retrieval from ` data . describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlobUploader
deleted the HSQLDBServerFilesFilter class and replaced its usage with a custom FilenameFilter implementation to streamline the code by eliminating
walletappkit : fix nullpointerexception when restore from seed / key
updated API version from APIUtils . getApiDataVideoVersion ( ) to APIUtils . getApiDataSeriesVersion ( ) and added trace logging for
added a method to check if a type already exists in the method to improve method invocation handling by avoiding duplicate type checks
updated array size from 6 * 3 to a constant NUM _ VALUES in AmbientCubemap . java to improve code readability and
[ netbeans - 4892 ] fix npe when profile mode be not configure properly .
[ hotfix ] [ table - common ] fix handling of zero value in udf
change test to use temporaryfolder instead of file . createtemp
add itemstack . isitemstackdamageable ( ) and itemstack . gethassubtypes ( ) to getitemstackd
fix line _ width not be set properly in renderstate .
danielwagnerhall : set the ` ` browser . startup . page ' ' preference to ` ` 0 ' ' in
updated the condition in Http1xClientConnection to handle both CONNECT and GET requests for better connection handling to ensure proper handling of HTTP / 1
updated the task ' s accept method from " compile " to " process - classes " to accurately reflect the purpose of the task ' s
replaced ` shutdown ( ) ` method with ` closeIdleConnections ( 1L , TimeUnit . MICROSECONDS ) ` in ` HTTP
added a check for aggregate function suffix before creating new metrics in AmbariMetaInfo . java to ensure metrics are only generated for non -
added a method to set fullscreen parameters in TaskOverlayFactory and updated related methods in TaskThumbnailView and TaskView to improve fullscreen handling
added a new Java file ` Solution . java ` that counts occurrences of a specified number of frequencies to provide a solution for counting the number of
initialize the SocketChannel variable to null to ensure proper initialization of the SocketChannel variable
refactor MutisignOperationerGodicTest class for improved readability to enhance maintainability and ease of understanding
added exception handling for NoSuchElementException in StaxEventItemReader and a corresponding test in StaxEventItemReaderTests to improve robustness by prevent
replaced specific imports with a wildcard import and modified return logic in ShadowTextView . java , and added null handling in TestAttributeSet .
updated import statements from ` com . nimbusds . jose . shaded . json ` to ` net . minidev .
updated OS detection to handle AIX and added support for Linux - s390x - 64 in PKCS11Test to ensure compatibility with A
server : fix vr ip in access command ( # 5696 )
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate asynchronous execution of a Runnable
remove ignored test that be break the build
replaced integer multiplication with Math . round for width and height calculations in PortraitPagedViewHandler . java to ensure proper handling of
reformatted code in TestClusterDumper . java for consistency to improve code readability and maintainability
[ hotfix ] [ table - common ] fix the size of the row cache in keyvalue .
camel - 17743 : camel - core - add type converter to camel context so it can be use by other component .
added handling for ConditionalTask in SparkCrossProductCheck . java to improve task dispatching functionality for conditional tasks
added a check for ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED actions in Launch
added a condition to check for JSON responses when account chooser is present in the LoginInfoEndpoint to ensure that the prompt is present when there
[ flink - 11904 ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner
renamed the ` message ` field to ` msg ` and introduced a new ` result ` field in ` HuobiAccountInfo ` to
added support for " PERIOD " column in MariaDBDatabase and a corresponding test case in AddColumnGeneratorTest to ensure proper handling of
[ beam - 10663 ] update the documentation of portablepipelineoptions . process _ command and process _ variables .
added new version change log entries for Android 7.1 - you now have Launcher shortcuts and some bug fixes to enhance user experience by providing
updated the visibility of the NUM _ MILLIS _ IN _ DAY constant in IndexExpressionIT . java and TestUtil . java to public to
removed debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] ensure that aeron client use conductor agent invoker .
added validation for implicit lambda parameters and updated type creation in method parameters to ensure correct type handling and avoid warnings for implicit parameters
refactor menu item visibility and enabling methods in FileMenuFilter and add hideMenuItems method in FileDetailFragment to improve code readability
updated BTCETransHistoryResult to include new reserved types ( BTC _ deposit , BTC _ withdrawal , credit ,
replaced ` ArrayList ` with ` HashSet ` for ` series ` and ` exceptions ` in ` RetryFilterFunctions . java ` to improve performance
marked the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of a new implementation
updated condition in LastQueryExecutor . java and added a new test method in IoTDBLastIT . java to ensure correct handling of unseq
removed unnecessary line breaks in HttpResponse . java to improve code readability and maintainability
added a static block to set the SLF4J simple logger to an ERROR property to improve logging configuration for better error handling
added a method to set the safe area of the title bar to improve UI responsiveness by ensuring safe area visibility
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to ensure correct retrieval of TimeSeriesChunkMetaData from the list
added SQL syntax for renaming a column from " test _ column " to " test _ c " in AlterTest . java to ensure that
change method visibility of copyState from package - private to public to allow access to the method from other classes
fixed - redissonexecutorservice . executeasync ( ) method should return a completablefuture
add a constant suffix _ split _ file and use it in the filelister
[ hotfix ] [ table - common ] fix checkstyle violation in hive - orc
[ hotfix ] [ table - common ] fix nullpointerexception in comparefunctionprocessor
fixed checkavailablediskspace to properly check disk usage of compaction task
removed redundant ` toString ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to stream
added checks to prevent processing when the handler is invalidated in AbsSwipeUpHandler and null check in TaskAnimationManager to ensure proper handling of
added methods to get and set lock timestamps in AppPreferences and updated related references in PreferenceManager and PassCodeManager to improve preference management and ensure
refactor artist setting logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by reducing duplication
added a null check for remoteMessage in NCFirebaseMessagingService . java to avoid potential NullPointerException when accessing data
nifi - 1774 : fix npe in splittext when there be no header
added support for Windows key store configuration in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
updated the default CHECK _ TIMEOUT value from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to
added a condition to check if the result code is not FILE _ NOT _ FOUND before executing the else block to handle cases where the remote
added animation functionality to the Slider class to enhance visual animation control and allow customization of animations
replaced occurrences of ` eol ` with ` lineSeparator ` in ` LineSeparatorProcessorTest . java ` to ensure consistency in variable naming conventions
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to optimize texture packing size for better performance
added a new test method ` negatedTernaryNotUnwrapped ` in ` UnnecessaryParenthesesTest . java ` and modified the `
camel - hazelcast : fixed the npe issue of hazelcastconsumer . poll ( )
added a new test class ` TextFeedbackTest ` and modified ` AllTests ` to include it in ` TestRunner ` to enhance test coverage
replace Math . round with Float . compare for score comparison in DefaultSolrHighlighter to improve precision in score comparison logic
updated DENSITY case values and refactored file handling in ResourceEditorApp . java to use try - with - resources for better resource
added a method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and modified ` ArrayCopySnippets ` to
log4j2 - 1348 : log4j2 - 1348 log4j2 - 1349 should skip processing
added support for remote SCM systems in Configuration and RuntimeEnvironment classes to enable remote SCM functionality in the application
[ mielecappliance ] add miss state _ end and state _ roinse _ hold to miele appliance handler
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to standardize
updated logger variable name from ' log ' to ' LOG ' for consistency to improve code readability and maintainability
added unit tests for ProjectGenerationEvent ' s finished and started states in EventSerializationTest . java to ensure proper serialization and deserialization of ProjectGeneration
ggb - 1341 select only point of the first point , not the first point of the second point .
refactor JavaCompiler class to improve code organization to enhance maintainability and readability of the code
added a check for non - positive remaining time before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to ensure that
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added " -- gc - sections " and " nocopyreloc " flags to the ldflags list in NdkCxxPlatform
updated the SpringCloudCircuitBreakerFilterFactory to expand the fallback URI and refactored related tests to enhance URI handling and improve test coverage for
refactor test class names for consistency and clarity to improve maintainability and readability of the codebase
refactor code to check for the namespace instead of the name in ReadOnlySharedStringsTable . java to ensure proper handling of URIs with the correct
added a method to retrieve account network by HTTP in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to
added a check for available text width before layout processing in SwingUtilities2 . java and modified the GTKLookAndFeel setting in Test
refactor ` FlatteningIterator ` to initialize ` next ` and introduce a new boolean variable ` nextBlank ` to improve code clarity
updated TweetLinkUtils to remove HTML tags from title and body in NotificationUtils to improve HTML formatting by removing leading and trailing spaces
doc : generate sample code in the java microgenerator ( # 10 )
[ # 8271 ] instructor : edit question : delete exist question after test ( # 8271 )
fix for bug # 54444 - fix issue with hssfsheet . getfirstrownum ( ) and getlastrownum (
added permission checks for malicious intents in ` InstallShortcutReceiver ` and modified ` Launcher ` and ` PendingAddItemInfo ` to
[ java ] send the initial cluster session to the consensus module after the consensus module have be initialize .
refactor hashCode and equals methods in AbstractParquetMapInspector to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector
added a check to flush the session and release the buffer if the connection is remotely closed to ensure proper resource management and prevent memory leaks
replaced the close ( ) method with AutoCloseable in the SplitReader interface to ensure proper resource management and prevent potential memory leaks
added a deep copy method to the GsonBuilder class to ensure proper serialization and deserialization of GsonBuilder properties
[ hotfix ] fix npe in llscanner . getsource ( )
refactor file opening and closing logic in RestClientRequestImpl . java to improve code readability and streamline asynchronous file handling to enhance code
reformatted the dispatchStatusString method call for consistency to improve code readability and maintainability
updated MockFactory to use a new SearchingClassLoader for better class loading to improve class loading flexibility and maintainability by allowing multiple classes to
[ jme3 ] add testcase for refresh flag bug
added a new condition check for LEFT _ SEMI _ JOIN in the ConstantPropagateProcFactory to ensure proper handling of LEFT _ SEMI
refactor HttpReceiver and HttpSender to simplify response completion checks to improve code readability and maintainability by eliminating unnecessary variable declarations
rename array _ length _ offset to array _ oop _ desc _ length _ offset for consistency .
http : / / issues . apache . org / jira / browse / amq - 4892 - add default policy for the broker
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added a check for the running state before stopping the application context to ensure that the application context is only stopped when it is currently running
changed the return type of the ` drawItem ` method from ` void ` to ` GlyphLayout ` to allow the method to return the result
refactored metrics retrieval in SpringmvcClient and updated error handling in CodeFirstSpringmvc to improve metrics management and ensure proper
removed unnecessary type specification from Optional return statements in AccountAgeWitnessService . java to simplify the code and improve readability
refactor switch - case statements in StructureHeader . java and StructureReader . java for improved readability to enhance code clarity and maintain
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and related tests to enhance webflow interceptor handling for resource URL providers
add dexreturninliner to handle return statement in the dex body .
[ regen ] enhance enrichedruledto to include property
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java and updated the test arguments in AliasCheckerSymlinkTest .
[ hotfix ] [ table - planner - blink ] remove dialect configuration from executioncontext
replaced ` rDotJavaPackages ` with a ` Supplier < ImmutableSet < String > > ` and ` hasRDotJavaPackages ` to
pmd : add test for astpackagedeclaration . getpackagenameimage ( )
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor . java to enable dynamic configuration of minimum cross compaction unseq file level
[ hotfix ] [ runtime ] move activeresourcemanager to correct package
rename the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify the
updated URI handling in ZipResource to use CLASSPATH _ SCHEME and added a test case for parsing feature files with spaces to improve error handling
reformatted code for consistency and clarity in ExpandableUploadListAdapter . java to improve code readability and maintainability
refactor RobolectricTestRunner to iterate through the parent class hierarchy for config annotations to ensure correct merging of parent classes and methods in
replaced direct instantiation of lists with Iterables . filter for block and item registry to ensure that blocks and items are filtered based on their registry name
changed method visibility from abstract to default in AbstractDataChangedListener and updated websocket connection handling in WebsocketCollector and WebsocketDataChangedListener to
updated JSONPojoConvertor to handle enum types in type conversion and added color handling in JSONPojoConvertorTest to improve type handling
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to indicate that the ` -- view
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and refactored the input stream handling to
added orientation correction functionality to GyroControl to improve mouse event handling based on device orientation changes
set biomedictionary . biome _ list _ size to the length of the biomegen array instead of a hardcoded value
updated method calls from ` println ` to ` print ` in ` GetInterfaceTest . java ` and made interfaces public in ` Foo ` and
[ hotfix ] [ core ] move the getenvironment ( ) call out of the try / catch block
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide a utility
added a preload parameter to MMapDirectoryFactory to control the preloading behavior of the map directory
added custom metrics for various components in BukkitPlatform . java to enhance monitoring capabilities for various components in the project
refactor QuickConnectREST to improve code readability to enhance maintainability and facilitate future updates
added aspect ratio and default card image handling in CardPresenter . java to enhance card presentation functionality and improve user interface responsiveness
do n ' t increment authmethodcount if it ' s already in use
updated cloning logic for longValues , doubleValues , and byteValues in VectorHashKeyWrapper . java to handle empty arrays gracefully to avoid potential
added tests for System . nanoTime ( ) in TimeChangeTest . java to ensure proper execution of System . nanoTime ( ) during CRIU
added trimming of lines in MultiPartFilter and a print statement in MultipartFilterTest to improve line handling and debugging in the multipart filter tests
add experience drop event to entitylivingbase and entitylivingbase
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use localized text instead of hardcoded strings to improve user feedback by providing
[ flink - 13404 ] [ sql - planner ] remove unsupportedopsvisitor from beamqueryplanner
updated GraphEnhancementQueryEnvironment to handle RdepsFunction and improved graph retrieval logic to enhance dependency management and ensure proper handling of R
refactor Character class to improve code readability to enhance maintainability and ease of understanding
added a flag to scale all rockets in the selection option to ensure only relevant rocket components are scaled to improve user experience by allowing
removed unnecessary ` Arrays . toString ( bytes ) ` calls from assertions in ` UpdateableResultTest . java ` to simplify test assertions by directly
added logic to retrieve and attach time boundaries for offline and realtime tables in the BaseBrokerRequestHandler to ensure proper handling of time boundaries for hybrid
http : / / issues . apache . org / activemq / browse / amq - 1188 - remove unnecessary check for async
updated regex pattern and modified album title extraction logic in EightmusesRipper . java to improve accuracy of album titles and enhance URL
replaced direct calls to ` mDevice . wait ` with ` TestHelpers . wait ` in multiple test files to improve code clarity and
added a condition to check if the profile is a phone and not in landscape mode to ensure proper layout behavior for phone profiles when not in
updated assertions in PartTreeJpaQueryIntegrationTests to use unwrap ( QueryImpl . class ) instead of getValue ( query , PROPERTY ) to
replaced ` Files . readAllLines ` with ` subsystem . readMatchingLines ` for reading file lines to improve security by using privileged actions
added dynamic check for the ` getResultStream ` method in ` JpaQueryExecution . java ` to ensure that the ` getResultStream ` method
added null check for entity in PhysicsProcess . java to prevent potential NullPointerExceptions during entity processing
added a test for entry processor with a predicate that clears a map when value attributes are indexed to ensure that the entry processor correctly clears the map
add a call to notify the jitsi - meet room when a conference room be join .
updated color normalization logic in Utils . java and modified HTML message format in UtilsTest . java to ensure correct color representation and improve test coverage for
fix : disable menu item when it ' s empty
updated scratch path format in Aapt2Link . java and added RmStep for link tree path generation to improve path resolution and ensure proper
replaced ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java `
ggb - 1343 do n ' t update selection when click on algebra view
do n ' t catch markedyamlexception and emptystackexception in ysldvalidator
added ` isCanceled ( ) ` method implementations in multiple classes and updated the ` ExecutorCallAdapterFactory ` to use the delegate ' s `
refactor ` isAnnotationPresent ` methods across multiple classes to use a default implementation to improve code clarity and maintainability by reducing duplication
added a default implementation of the removeAllWidgets method in UILayout . java to provide a default implementation that throws an UnsupportedOperationException
[ hotfix ] [ yarn ] fix flakiness in yarntestbase
fix opensslcipher . getoutputsizeforfinal to return the correct output size
added logic to force a transcode of high - res content when using Fire TV Stick to enhance user experience by allowing high - res
[ beam - 10720 ] add support for mock source in dataflow runner
replaced specific imports with a wildcard import and modified preference handling in GpsLoggingService to ensure consistent listener management based on user preferences
modified the ` putString ` method to accept a ` byte [ ] ` instead of a ` boolean [ ] ` for full widths and updated related
added import for BaseItemDragListener and updated item assignment logic in FolderIcon . java to handle drag events for better drag - and - drop
added ` createEmptyArtifact ` method to ` RepositoryConnector ` and modified ` AbstractRepositoryConnector ` and ` FileSystemConnector ` to handle ` String
removed unnecessary comments in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed unnecessary check for ` afterAug1 ` in the video link check to simplify the condition for better readability and maintainability
camel - 17979 : camel - sftp - fix path issue on window
updated the assertion method in BaseWeatherConsumerTest from assertIsSatisfied to assertMockEndpointsSatisfied with a timeout of 20 seconds to
renamed ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more descriptive
added support for LARGE _ FERN alongside DOUBLE _ TALLGRASS in BlockDoublePlant . java and BlockType
replaced focusable method with request focus enabled method in the TranscodingTab class to improve user interface responsiveness by allowing focus to be
server : do n ' t swallow exception while start vms
updated the license acceptance logic in DB2TestSystem and modified import statements in DockerDatabaseWrapper and TableIsEmptyGenerator to improve license handling and
added a setUnitGroup method to the DoubleModel class and refactored unit handling in the GeneralOptimizationDialog to improve unit management and
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support currency pairs for BTC and ZM
added logic to set the number of samples based on the number of samples in TestPBRLighting . java to ensure that the fpp
updated tasklet assertions in StepWithSimpleTaskJobParserTests to remove unnecessary " job . " prefix to streamline test assertions by removing unnecessary
updated variable declarations to be final in CentralAuthenticationServiceImplTests . java to ensure immutability of variables for better immutability
remove extra space in ggbabs ( ) in expressionnode . tostring ( )
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` and modified the ` addServiceOutput
[ zeppelin - 1551 ] fix bigdecimal coercion in executable model
added " org . eclipse . jdt . " to the WebAppContext to hide jdt usage by jetty
modified the return value of the useAuthCache method from super . useAuthCache ( ) && cacheSPNEGO to always return false to
updated namespace assignment to capitalize the first segment to ensure consistent capitalization of the first segment in the page title
camel - 18443 : camel - direct - optimize to avoid use deprecated exception .
added a null check for the ZooKeeper object before setting it to null to prevent potential NullPointerException when accessing the ZooKeeper object
updated progress bar message formatting in Loader . java to improve code readability and maintain consistency in naming conventions
replaced direct calls to ` mVibrator . vibrate ( ) ` with a call to ` runOnUiHelperThread
added a method to update the last remote stream ID in HTTP2Session . java to ensure the session ' s last remote stream ID reflects
set render hint for text antialiasing in EditorHeader . java and EditorToolbar . java to ensure text antialiasing is applied
[ java ] : remove usage of termwindowsize and use currentwindowsize instead .
refactor : remove static import of enums in ctannotationimpl . java
refactor ExoPlayer class to improve code readability to enhance maintainability and facilitate future updates
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` to simplify the pixel retrieval process by
added a new method ` newPrintStream ` for creating ` PrintStream ` with specified encoding to enhance flexibility in output stream handling by allowing custom
increase the vibration duration from 1 to 25 milliseconds to improve user experience by allowing more responsiveness during movement
updated import statements in AppEngineSqlCloudSession . java , FlybushDataClearer . java , and TestEnvironment . java to
reformatted the constructor of WebSocketClient for consistency to improve code readability and maintainability
simonstewart : make the i18n test work again
refactor error handling in BytecodeParser and SharedGraphBuilderPhase to use a more descriptive method name for loading constants to improve clarity
added a call to restore the authentication system state in XmlWorkflowServiceIT . java to ensure proper cleanup of authentication state during tests
added a custom LowercaseComparator for string comparison in CoNLLUFeatures . java to ensure consistent sorting of features by preserving null values
refactor JavadocTool to utilize a unified parse method for handling multiple JavaFileObject instances to improve code readability and maintainability by reducing
danielwagnerhall : add a test for toggling an option in a multi select
added a validation check for the length of keys in HighestKvno . java to ensure that the number of keys does not exceed the
added error handling for retrieving attributes in HDF5BatchReader to ensure compatibility with Huge objects and prevent runtime errors
[ beam - 1797 ] use ptransform . in ( pipeline ) instead of pcollection . in ( pipeline )
[ zeppelin - 4892 ] add form data to processgroup resource for template file upload
added a new file TestMultiANewArray . java to implement and test multi - dimensional arrays in Java to ensure that multi - dimensional arrays
added a configuration option for the secondary storage VM in the management server configuration to enable dynamic management of secondary storage based on zone configuration settings
refactor code to use local variables for headID and headNum in SyncBlockChainMsgHandler . java to improve code readability and maintain
added theme setting in PreviewTabView to ensure the preview tab displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle timeout in ConnectorTimeoutTest . java to ensure proper handling of idle timeouts in HTTP connections
refactoring to make it easy to read dictionary property from property file
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a new `
updated generic type usage in JpaPagingItemReader and improved assertion message in JobLaunchingGatewayParserTests to enhance code clarity
changed log level from warn to debug in DistributedQueue . java to reduce log verbosity for child nodes
refactor color extraction logic to use a dedicated method for retrieving the hotseat palette to improve code readability and maintainability by reducing
added default data table entry and cell transformers to TypeRegistry to enable customization of data table types in the application
added an assertion to check if newAvailableShared is less than or equal to initShared in AtomicRemainder . java to ensure correct shared state
chore ( regen ) : regenerate with update license year
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` and updated its value in ` WorkspaceAndProjectGenerator ` to
[ java ] fix checkstyle violation in driverutils
added contact form functionality to the ApplicationController and created a Contact class to facilitate contact - related functionality in the application
guac - 1396 : use objectpermissionset instead of permission , a it ' s a bit more flexible .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
[ drools - 686 ] fix checkstyle violation in traitfactory
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple files to improve
replaced manual consumer closure with IOUtils . closeSafely for improved resource management to ensure proper resource management and avoid potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added an OnClickListener to the overflowButton in ExpansionViewHelper . java to ensure the menu is displayed when the overflow button is clicked
updated error messages to use " a null reference " and " a non - null reference " instead of " is null " and " is not
ggb - 1745 update the line height of the help button in the algebra view .
move protobufferutilitiestest to core package
fix : set divider position and side pane width in split pane
improve handling of crossreference entry in aux file
refactor geoserverfeaturesource to use metadatamap instead of map .
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of the data table
update contact list when a contact have be add to the list .
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command
added a test method to clean up the audit log table based on the position of the post parameters to ensure that the audit log table is properly
changed the return type of the inject method from a generic type T to an Object type T in ComponentContext . java to improve type safety and
added regex patterns for parsing comments and end line in ACLFileParser . java to improve code readability and maintainability by utilizing regex patterns
updated ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` classes to include ` DrillTable ` and ` DynamicDr
added an ancestorDimensionValues map and improved node name formatting in StarTreeImpl and StarTreeNodeImpl classes to enhance data integrity by
added user unlock check before dumping plugin manager dump in TouchInteractionService and refactored closeOpenViews method in Launcher to ensure proper
replace widthStr check with positionStr check in Photo . java to ensure proper handling of position strings in the image processing logic
refactor trusted certificate validation logic in PKIXValidator . java to improve clarity and maintainability of certificate validation logic
[ hotfix ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest . dubbo ` to ` org . apache . sh
vpc : remove skipprojectnetworks from listnetworks call in networkserviceimpl . listnetworks
updated JSON element retrieval method in RuntimeTypeAdapterFactoryFunctionalTest . java to ensure correct retrieval of the shape type from the JSON element
added a boolean flag ` storeUndoInfoForProperties ` and its corresponding getter and setter methods in ` App . java ` to manage the undo
replaced direct access to system property " sun . java2d . xrgradcache " with a privileged action to ensure proper access to
replaced assertion with awaitility in StreamCloseTest . java to improve test reliability by waiting for the number of streams to be available
removed the ` doAfterFlush ` method from ` DocConsumer ` and modified the initialization of ` perFields ` in ` TermVectorsConsumer `
filter out non - deprecated properties in ConfigurationMetadataGenerator . java and add @ NestedConfigurationProperty annotation in AbstractJpaProperties . java to ensure
refactor capacity and mask variables to be final in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity and maintain
updated the number of files thread from 25 to 15 in HiveConf . java and corrected a variable name in Hive . java to improve thread management
improve trace logging of exception in parallelnosender . close ( ) and disconnect ( ) .
added a null check for the context in SchemeAndroidIDE . java to ensure a default instance is returned when no context is provided
[ gr - 23263 ] native - image - builder should use the application classloader if available .
changed the return type of modifyGrantedAuthorities from void to List in SwitchUserAuthorityChanger and updated its implementation in SwitchUserProcessingFilter
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and created new classes ` RawJaxrsIntegrationTest `
fix # 1186 - do n ' t set query timeout if jdbc4 be not support
added DataProviders for general and supplementary character tests in XslSubstringTest . java to facilitate testing of substring functionality in
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for MariaDB sequences in MariaDBDatabase and modified sequence generation logic in CreateSequenceGenerator to ensure compatibility with MariaDB
updated formatting of error messages in MappedResizeableBuffer , UnsafeBuffer , CompilerUtil , and Int2ObjectCacheTest to improve code readability
updated imports in multiple test files to use TableDataManagerProvider instead of BrokerResponse to ensure consistency and accuracy in table data management across tests
added a new property " jsse . enableMFLNExtension " with a value of false in the SSLExtension class to enable support for
replaced generic type ` ObjectIterator < T > ` with ` ObjectHashSetIterator ` in ` ObjectHashSet . java ` to simplify the iterator
updated character count calculations from 22 to 23 in Compose . java and TweetFragment . java to ensure accurate character count for shortened URLs
added data point ttl to data point write buffer ( # 1186 )
modified the ` checkForAndKillXcodeIfRunning ` method to accept a boolean parameter for enabling prompt functionality to enhance user experience by allowing
added a method ` getTerrainAtCell ` to retrieve the terrain associated with a given cell coordinate to provide access to the terrain
added default value handling in the Pretty . java file and created a new T6665791 . java file with a Java compiler task to
added error handling for missing quest keys in ResourceLoader . java to improve robustness by logging an error when the quest keys file is
added a condition to check if the transport is not a push before verifying push support to ensure that push functionality only applies to non - push
refactor PointValue class to improve code readability to enhance maintainability and ease of understanding
removed the sign operation for local witnesses in BlockUtil . java to streamline the code by eliminating unnecessary sign functionality
refactor FileSystemView to return null if no root is available and enhance security checks in Win32ShellFolder2 to improve robustness by ensuring
updated method names and logic in ColumnText and PdfPRow classes for better clarity and functionality to improve code readability and maintainability by
refactor ListFragment to use a SparseArray for managing unsaved notes to improve code clarity and maintainability by using a single list for
[ # 1868 ] uploadbackupdata : adjust id for feedback question and response ( # 1868 )
removed null check for data in getTransferData method to streamline code by eliminating unnecessary exception handling
# 113 - remove unused pstmtdelegate from ebean - config
refactor widget padding retrieval to use ` AppWidgetHostView . getDefaultPaddingForWidget ` instead of a custom ` Padding ` class to
refactor static MethodHandle initialization to a static block in NashornBeansLinker . java to improve code readability and maintainability by
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
replaced the variable ` latch ` with ` goAwayLatch ` for clarity to improve code readability and maintainability by using a
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to improve cl
replaced ThreadLocal currentBook with a null assignment in multiple files to simplify the management of the current book reference
added support checks for MethodInvocation and Object types in ContactSecurityVoter to ensure that the vote method operates correctly based on the provided object
removed unused imports from DataLoader . java to clean up the code and improve maintainability
added a new ` rowsAffected ` variable and updated the ` postUpdateLog ` method to accept it to track the number of affected rows affected
ggb - 1343 fix margin of suggestion in applet
initialize foregroundFPS and backgroundFPS with a default value of 60 to ensure foregroundFPS and backgroundFPS are set to a minimum
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper tracking and releasing of objects in the transaction logging process
updated WebSocket frame handling in DefaultHttpServer to use a ChannelFutureListener instead of a DefaultWebSocketFrame to improve clarity and maintainability of
updated event listener classes and added new test cases for state machine error handling to improve event listener integration and ensure proper handling of state machine errors
refactor SettingsActivity to use a separate method for setting the list background to improve code readability and maintainability by centralizing background setting logic
updated the import statement from ` org . apache . commons . lang3 . StringUtils ` to ` org . openhab . core . util
added an ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class to facilitate the accumulation of sums and counts
[ hotfix ] [ runtime ] fix checkstyle violation in replicationsink
replaced VALID _ CACHE _ SET with REGEXP _ CACHE for caching regular expressions to improve performance by caching regular expressions instead of recompiling
added a static method ` reset ( ) ` to reset the ` gameThread ` instance to facilitate the cleanup of the game thread
added a login method to the DigestAuthenticator class that checks if the digest realm matches the login service name to ensure that the authentication process only proceed
refactor parameter handling in SavedRequestAwareWrapper for improved clarity and efficiency to enhance code readability and maintainability by utilizing
updated logging messages to use the correct variable and improved string representation to enhance clarity and maintain consistency in logging output
replaced ` hasNotified . countDown ( ) ` with ` this . wakeup ( ) ` in ` CommitLog . java `
added a condition to check if the Android version is not O in PhotoViewerActivity and implemented user auto - completion logic in UserAutoCompleteHelper
updated schema info level from minimum to basic in SchemaCrawlerTest to ensure compatibility with the latest schema information
replaced XML writer with a buffered output stream in SaveTask . java to improve performance by avoiding unnecessary operations on the output stream
refactor byte handling in TestPayloads . java to utilize Charset for UTF - 8 encoding to improve code clarity and maintainability by
fix mc - 103516 not be able to remove entity from the world . close # 103516
added Tomcat container adapters to the ProbeConfig list to enable support for Tomcat container adapters in the application
[ drools - 5892 ] fix protobuf input marshalling for multi - accumulate
refactor comparison logic in NowSearchTerm and SearchTermBuilder for improved clarity to enhance code readability and maintainability by standardizing
pdfbox - 4892 : make class package - private again
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method resolution to improve flexibility and flexibility in handling HTTP
added a new method ` newResponseBuilder ` to encapsulate the creation of ` ResponseBuilder ` to improve code readability and maintainability by
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command start events during background task execution
refactor the ` computePreviewDrawingParams ` method to be public and add a null check for ` mReferenceDrawable ` to improve handling of
replaced TokenFilterFactory with CharFilterFactory in LukeRequestHandler . java to improve code clarity and maintainability by using a more
replaced null checks with ParamChecks . nullNotPermitted for ' plot ' , ' generator ' , and ' hotspot ' arguments to improve
updated the ` createSubContext ` method to include an ` Optional < Verbosity > verbosityOverride ` parameter for better control over verbosity behavior to
added a check to convert " oracle " schema to uppercase in DbSqlSession . java to ensure compatibility with Oracle database schema handling
added a class name to the context description in AsyncLoggerAllThreadContextImplementationsTest . java to ensure that the context description reflects the
added a new file TestShrinkToOneRegion . java that calls System . gc ( ) to facilitate testing of the garbage collection process
replaced string splitting with Splitter for package names in SandboxTestRunner . java to improve readability and maintainability of the code
updated context handling in AnalyzingInfixSuggester and added a test for binary context in AnalyzingInfixSuggester
updated the handling of local attachments in PushsaferMessageBuilder . java to improve clarity and correctness of the URL encoding logic
do n ' t print provenance hash in stripprovenance output
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
changed the ' final static ' modifier of the FORMATTER function from ' private final static ' to ' private static final ' in multiple test classes
replaced Apache Commons Logging with Java ' s built - in BigDecimal and RoundingMode in UDFRound . java to improve compatibility with Java '
[ graaljsscriptengine ] use configutil . valueasorElse ( ) to simplify code
changed class declarations from package - private to public in Test1 . java and Test2 . java to allow access to the Test1 and Test
updated player event notifications to use " deny . no _ enter " and " plot " instead of " permission . no _ permission _ entry _
fix bug in conditioninconstantset and conditionandor , fix testoptimizations
replaced occurrences of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in
added random box and circle creation methods in Box2DCharacterControllerTest . java and reset friction in ContactList . java to ensure
added tests for exceeding maximum size limits in flight recorder options and modified memory size handling in TestMemoryOptions to ensure that memory and global buffers
removed redundant checks for " must be power of 2 " in ObjectAlignment . java and Options . java to simplify code and improve readability by
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` , ` AndroidInstrumentationTest ` , and
refactor DocHelper class to improve code readability to enhance maintainability and ease of understanding
updated acceptableThrowawayItems initialization to use an ArrayList instead of a single element to improve flexibility in handling multiple item types in setting settings
replaced specific method calls with direct method calls in Test6987555 . java to simplify code and improve readability by eliminating
reformatted code in MessageHandler . java for consistency to improve readability and maintainability of the code
[ hotfix ] [ javadoc ] fix typo in inflection . java
added methods to retrieve and set the locale in EvaluationContext to enhance context management by allowing retrieval and setting specific locale values
removed the import of ` Plugin ` from ` SummaryPrinter . java ` to streamline the code by eliminating unnecessary dependencies
added a break statement in a switch statement in DrawerActivity . java to ensure proper handling of case statements in the loop
updated import statements in MongoQueryCreator . java to use a wildcard import and modified debug logging to use getQueryObject ( ) to improve code cl
added a new constant for the user logger factory in XWorkConstants and modified LoggerFactory to utilize it to improve logging configuration flexibility by
renamed test methods in AdminAddPeerWithP2PDisabledAcceptanceTest for clarity to clarify the purpose of the test
updated bean names from " livenessStateProbeIndicator " and " readinessStateHealthIndicator " to " livenessStateHealthIndicator " and
added a ConcurrentMap to manage PStore instances in LocalPStoreProvider to improve thread safety and performance when writing local PStore instances
changed the access modifier of the deleteFiles method from public to private to restrict access to the method for better encapsulation
replaced ` Provider ` with ` ServiceProvider ` and updated related methods in ` ServiceLoaderSpliterator . java ` and ` TypeUtil .
refactor javainteropreflect . findfield and javainteropmessageresolve . setfield to throw runtimeexception instead of runtimeexception .
added checks for toolchain creation in AbstractCell and implemented corresponding methods in ToolchainProvider and DefaultToolchainProvider to ensure proper handling of tool
fix deadlock in polyglotengineimpl . removecontext ( ) .
updated string checks from ` indexOf ` to ` contains ` for " { { fails } } " in ` AbstractCheckDescriptor . java ` to
updated method names from ` setLinkerFlags ` to ` setExportedLinkerFlags ` and added a test for exported linker flags to enhance
updated method names and logic for updating recents rotation in AbsSwipeUpHandler and RecentsView classes to improve code clarity and
updated type parameters in multiple listener checks for consistency to ensure type safety and prevent potential runtime errors
updated the way the ` newBlock ` is retrieved by using ` getHeader ( ) . getHashAsString ( ) ` instead of ` newBlock ` to ensure
[ issue # 3996 ] fix defaultmessagestore do n ' t use getstorepathcommitlog ( )
[ hotfix ] remove unnecessary try - with - resources in micrometermetricmanager
[ issue # 1867 ] update get message latency in compaction log ( # 1867 )
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used in future development
added a method to check for the presence of a system UI object and executed a shell command for the keyguard status view to enhance functionality by
changed logger from static final to instance - level and made principal and sessionIds fields final to enforce immutability and ensure immutability of
added a check for an empty cookie jar in InMemoryCookieStore and implemented the removeAll method in NullUriCookieTest to ensure that removeAll method
[ bonsai ] do n ' t clear bonsai world state if it ' s not need .
updated method signatures from ` String ` to ` CharSequence ` in ` ITextRepository ` , ` LimitedSizeCacheTextRepository ` , and
simonstewart : unignoring a test in marionette , fixes # 1477977
added a finally block to handle connection closure in SocketConnector . java to ensure proper resource management and handle potential IOException during connection handling
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references to improve clarity
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety during concurrent access to heartbeatExecutorService
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce ` wrapWithTracingAndCancellation
added a method to update the first line showing state in the TextArea to fix drag - selecting text out of the TextArea ' s bounds
added work directory configuration for MapReduce job tracker in TestInformationSchemaWithPrivilege . java to ensure consistent file system usage across different environments
refactor graphics configuration retrieval logic in Component . java to improve null safety and readability to enhance code robustness and maintainability by avoiding
tika - 1348 -- fix the oom test case in tika - server
camel - 1770 : move pipeline . doprocess ( ) to be a no - op method
refactor argument handling in PrintTagList to allow specifying a model file and adjust tag processing to enhance flexibility in specifying the parser ' s
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
[ iotdb - 4892 ] fix test for eof index recovery error
[ java ] make startfromtruncatedrecordinglogtest more reliable by wait for cluster ready .
updated the calculation of ` arc ` and ` outer ` in ` LineBorder . java ` to use ` float ` instead of ` int `
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to ensure that the method handles cases where galleryImages is null or
updated deployment ID handling in StandardChangeLogHistoryService and removed NotNullConstraint from CreateDatabaseChangeLogTableGenerator to streamline deployment ID management and
pdfbox - 4892 : rename fdf to interactive form , a suggest by valerybokov
removed unnecessary boolean parameter ` moreColumnOk ` from multiple method signatures in ` AlterTableAddConstraint . java ` to simplify method signatures and
added provisionalEngines map and modified engine handling logic in QuickfixjComponent to improve flexibility in managing provisional engines and ensure consistent
added a new boolean field ` displayZoomControls ` and modified the ` setMixedContentMode ` method to return ` mixedContentMode ` to
added corporea block , brick , and slab to the registry , so they can be use .
refactor ConnectionFactory to improve code readability to enhance maintainability and facilitate future updates
added a method to enable or disable menu items based on user settings to enhance user experience by allowing editing or editing based on user settings
updated the ` setMessageForEmptyList ` method to use a new string resource for the favorite headline and filter list to improve clarity and
hhh - 14827 fix compile error in entitytests
updated MotorMountConfigurationPanel to use subpanel instead of this and adjusted auto - resizing behavior to improve user interface responsiveness
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator , subject , and title in POIXMLProperties . java and created a test for document properties in Test
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] avoid infinite loop if cnc file be empty .
refactor ` NonMarkedFoo ` and ` MarkedFoo ` classes to ` FooCommand ` and introduce a new helper class
added support for handling JMod class names in ClassFileSourceImpl . java to ensure compatibility with different file paths for jmod - related classes
updated ` TreeBackedElement ` , ` TreeBackedEnter ` , and ` TreeBackedPackageElement ` to remove ` PostEnter
initialize tokenRequest with PublicTokenRequest and set request parameters in Saml2TokenGranterTest and UserTokenGranterTest to
updated the array reference from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure correct
added synchronization functionality in ZKAssign and ZooKeeperWatcher classes to ensure data integrity during ZooKeeper operations
added checks for EGL _ NO _ CONTEXT in GlUtil . java to ensure proper exception handling when no current context is available
[ zeppelin - 4892 ] fix the issue of executionflowcontrol . deactivateruleflowgroup do n ' t work
added a return statement in HystrixDashboardConfiguration . java to prevent further execution of the method
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertion in IoTDBPipeIT . java to improve error handling and
clean up clientqueuedisruptiontest after each test
refactor : replace signatureprinter with defaultjavaprettyprinter in getsignature ( )
changed the access modifier of the ` validateInstance ` method from public to protected to restrict access to the method for better encapsulation
lucene - 6930 : deprecate geopointfield in favor of custom geopointtokenstream and termenum for geopoint
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` to use it to facilitate testing of
replaced null checks with isEmpty ( ) method for itemstack in GuiIngameForge . java and UniversalBucket . java to improve
updated variable and method names from " path " to " timeseries " in TSParser . java and SQLParserTest . java to improve clarity
added a minimum value check for velocity in TubeCalc . java to ensure that velocity does not exceed a valid range of 0 to
replaced calls to ` getBucket ( gcsUri ) ` with ` _ storage . create ( BlobInfo . newBuilder ( BlobId . of (
removed redundant blockCloseVertxByName call in TestHighwayTransport . java to streamline code and ensure proper resource management during transport closure
ddl - db - ddl - create history view for postgres and db - ddl - history view for postgres
updated the test timeout from 2 to 3 in CarrotClusteringEngineTest . java to allow for more time for the clustering engine to
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored to temporarily disable the test due to
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand . java ` and added a new class ` ParserState
added null checks for ` changeLog ` and ` objectQuotingStrategy ` assignment in ` ChangeSet . java ` and ` DatabaseChangeLog .
replaced ` MetainfoParser . parse ` with ` MetainfoParser . fromXmlStream ` in ` SliderAppsViewControllerImpl .
deleted the CsrfControllerAdvice . java file to the functionality is no longer needed in the project
refactor endorsed directory handling to use a new method ` quotePathList ` to improve code readability and maintainability by ensuring proper
added a scrim animation for backgrounds in Launcher . java and updated LauncherAnimUtils . java for drawable alpha handling to improve animation
updated the type inference logic from 2 to 1 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest . java to
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added handling for Windows path prefixes in WindowsPathParser and corresponding tests in PathOps to ensure proper path parsing and validation for absolute and UNC
replaced InetSocketAddress instantiation with direct instantiation of MulticastSocket to simplify the code and improve readability
updated the closing order of writer and query1 in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
change return statement to return a cloned version of nBits to ensure that the returned instance is not modified
changed the access modifier of the ` deriveCollectorName ` method from private to protected in ` ProfilerCollector . java ` and added new test cases
refactor type hint handling in MappingMongoConverter to use a dedicated method to improve code readability and maintainability by reducing duplication
added performance measurement for proxy factory creation in ProxyMaker . java to improve performance monitoring during proxy creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting by providing more context when port binding fails
refactor ` reinflateWidgetsIfNecessary ` method to utilize ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( ) `
added a new file DeleteInsideFileDialogTest . java to demonstrate the deletion of two files in a file dialog to ensure that
* lwjgl2 : do n ' t flush the display when a renderable be set to false
[ # 8017 ] instructorstudentlistpageuitest : add test case for update profile picture
added environment variable handling in TestIgnorance . java to ensure tests are ignored due to specific environment variables
removed the ' pointer ' parameter from the ' fling ' method in ScrollPane . java to simplify the method signature by removing unnecessary parameters
added null check for pageable in QueryDslJpaRepository and created a corresponding test to ensure proper handling of null pageable scenarios in
added a new method ` computeMemorySize ` to ` MemoryManager ` and corresponding tests in ` MemoryManagerTest ` to ensure that memory size
increase the timeout of the JMSPublisherConsumerTest from 2000000ms to 20000ms and update method calls in PublishJ
refactor SnowballAnalyzer to improve code readability to enhance maintainability and ease of understanding
updated previousIndex handling and refactored InternalBatch initialization in StreamingAggTemplate . java to improve clarity and efficiency in batch processing
throw graalerror instead of assertionerror when invocationplugin need to be null check .
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` that calls ` computeIntensityDefault ( ) ` in ` Stream
updated logging messages to reflect changes from watchedFile to fully played and added a retry mechanism for moving files to improve clarity and reliability
replaced the ` setAccessable ` method with a ` newInstance ` method in ` InjectorProxy ` and modified access modifiers in ` InjectorTest
[ hotfix ] [ stream ] remove unnecessary close ( ) call in flinkstreamingcreatefunction
added unit tests for creating and altering tables in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest to ensure proper SQL parsing and
replace return null with return ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of null
updated the test case to replace " Deliberate error " with " Quality Distribution , Inc . " in NamedSetTest . java to
refactor WebSocket connection state management to improve clarity and consistency in connection state management to enhance code readability and maintainability by reducing red
replaced setAttribute calls with removeAttribute for ACEGI _ SECURITY _ AUTHENTICATION _ KEY and ACEGI _ SECURITY _ TARGET _ URL
hbase - 25828 retry table creation in testregionreplicareplicationendpoint . testenabletablewithretries ( ) (
added PMS . get ( ) and setConfiguration ( new PmsConfiguration ( false ) ) in FormatRecognitionTest . java to ensure
create ovum data disk template after image upload
updated test imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 and SpringJUnit4ClassRunner to
added @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding
updated table and column names from ' metricVal ' to ' metricVal1 ' in AppendOnlySchemaIT . java to ensure consistency in naming
added a check to ensure deleted documents count does not match segment document count to prevent potential corruption errors when document counts do not match
add some method to the siplogger to provide a way to get the name of the jain - sip logger
increase the length of staves to allow for staves w / no starting barline .
removed default value for handleFileUploads in VertxPlatformHttpServerConfiguration . java and set it in VertxPlatformHttpEngineTest . java
added a test method to verify the behavior of the Csrf filter with case - sensitive methods to ensure proper handling of CSRF protection requirements in
replaced static fields with local fields in HotSpotObjectConstantImpl . java to improve code readability and reduce boilerplate code
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions related to suggestion
fix ( fileio ) : add watermark to fileio . match ( )
hhh - 14827 fix sqmctestatement . copy ( ) not copy ctedefinition
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData functionality for better data handling
updated the argument for the library command from ` -- out ` to ` -- root ` to include the project ' s root path to improve cl
updated slider position from - 180 to - Math . PI in RailButtonConfig . java to ensure the slider aligns with the current angle
updated the y - coordinate of the encloser in OverlayRenderer . java and improved error handling in Saves . java to enhance the
added support for expression language in KerberosProperties to enhance security by enabling expression language support
removed null checks before setting the held item mount point scale in the ThirdPersonRemoteClientSystem to simplify code by eliminating unnecessary null
updated the ` setupViews ` method to include ` ScrimView ` as a parameter and modified related animation logic to enhance animation respons
[ flink - 20663 ] [ checkpointing ] enable periodic materialization by default
added a private ` value ` field with getter and setter methods in ` ProtocolParameter ` , modified ` List ` and ` ParamTagHandler `
add a test to verify that the chunkedservlet do n ' t ignore date header
added a boolean flag ` isBumped ` and modified the ` parseDetails ` method to handle the " Bumped : YES "
added a Content - Type header with a value of " application / x - www - form - urlencoded " in SwitchToPostInterceptor and
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging functionality to PhoenixResultSet to warn about unsupported fetch size to improve troubleshooting and troubleshooting
added initialization of AndroidNet with null parameters to ensure proper initialization of the AndroidNet instance
fix formatting in LLRealtimeSegmentDataManager . java to improve code readability and maintain consistency in formatting
removed unnecessary parameters from the getDepositAddresses method calls in KrakenAccountService . java to simplify the method calls by removing unnecessary parameters
hbase - 15920 remove hbase - prefix - tree from tablemapreduceutil
added a inflation failure check in DesignerActivity and changed the root view declaration in XMLLayoutInflater to ensure proper handling of inflation
refactor PushbackInputStream class to improve code readability to enhance maintainability and ease of understanding
make loweringphase abstract to allow subclassing
updated the error message format from ` download _ folder _ failed _ content ` to ` sync _ folder _ failed _ content ` to improve cl
replaced instances of Scanners . among ( " \ n " ) with Scanners . string ( " \ r \ n " ) and
replaced direct calls to ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and added
replaced the call to ` super . setTransformRefresh ( ) ` with ` refreshFlags | = RF _ TRANSFORM ` and added
[ gr - 13539 ] do not insert safepoints for uninterruptible method .
added a framebuffer size callback to handle window size changes in LwjglWindow . java to ensure proper handling of window size changes and
updated translation calculations for center task animations in LauncherAppTransitionManagerImpl . java to improve visual clarity by using offscreen transitions instead of
updated the ` LiteralNode ` class to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and modified the ` newInstance ` method to
added totalSize calculation and setLength method to CompoundFileWriter , FSDirectory , and IndexOutput classes , and implemented setLength method in FSDirectory and Index
updated AndroidNdkScriptGenerator to check for the existence of " AndroidManifest . xml " and modified GwjglDebugStarter to
camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource in camel - aws2 - s3
added role handling for " * " role in RuleBasedAuthorizationPlugin and improved test cases in TestRuleBasedAuthorizationPlugin to ensure proper role
refactor ZookeeperClientServerRegisterRepository to improve null and empty checks for URI registration to enhance robustness by ensuring proper handling of null and
renamed methods and classes related to deep stubs for clarity and consistency to improve code readability and maintainability by using more descriptive
replaced direct calls to ` toByteArray ( ) [ 0 ] ` with a conditional check for empty ` contract . getCallValue ( ) `
improve error message when date can not be parse
modified the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and updated the PBE algorithm string to use " PBE
pdfbox - 4892 : improve code readability , a suggest by valerybokov
added validation for job parameters in CommandLineJobRunner to ensure valid job parameters are provided to prevent runtime errors
updated assertions in SmtpTests and MailTests to remove carriage return characters to simplify test cases by removing unnecessary line breaks
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve code readability and maintainability
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for lastSequenceId to improve thread safety and reduce synchronization overhead
added a new file ` Test . java ` containing a method to calculate the sum of two integers and a main method to facilitate
updated SDK version configuration from Q to R in ShadowWifiManagerTest . java and changed private fields in WifiUsabilityStatsEntryBuilder
added a new Java class to implement a solution that checks if elements in an integer array are less than a specified range to implement a solution that
[ hotfix ] use concurrentmap instead of map to avoid concurrentmodificationexception
refactor taskbar recreation logic to improve clarity and structure to enhance readability and maintainability of the code
refactor SyncFutureCache to improve synchronization logic to enhance performance and maintainability of the code
updated DUBBO _ PROTOCOL _ VERSION from " 2.0 . 1 " to " 2.0 . 2 " and changed the minimum
[ java ] uselessstringvalueof : fix false positive with string literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the drag
added targetmaxtypethardsize option to hollowproducer
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
refactor CompilationTask class to improve code organization to enhance maintainability and readability of the code
updated assertions to check for " mydb " instead of " mydb . db " and refactored parameter handling in DDLTask to ensure
added a call to execute a ClearDatabaseChangeLogTableStatement in the executor to ensure proper handling of database change log table operations
added version handling to RestClient and CallPath classes to support versioning and improve path comparison logic
updated exception message formatting and added closed state management in PhoenixDriver . java to improve clarity of error messages and ensure proper resource
simonstewart : fix typo find by codespell on fossies . org , a suggest by valerybok
added file deletion functionality and modified FolderPickerActivityIT to extend AbstractIT and implement a ScreenshotTest method to improve test coverage and ensure proper
[ gr - 18686 ] remove deoptimization group phase when devmode be set to true .
added a check for short string length in StringHelper and implemented unit tests for removing leading and ending quotes in StringHelperTest to ensure proper handling of string
refactor JpaQueryCreator to use a local variable for type handling and update exception messages accordingly to improve code readability and maintainability by
do n ' t try to push a branch if it ' s already encrypt
added dispatch ( new P25Message ( mMessage . copy ( ) , duid , mAliasList ) ) in P25MessageF
added null checks for handler before calling checkClosed ( ) in WebSocketImpl . java and implemented a test for clearing client handlers on end in We
[ ds - 3852 ] update discoveryit to use indexablepooltask and claimedtask instead of pooltask
updated widget padding retrieval in AppWidgetResizeFrame and Launcher classes to use the new padding retrieval method to improve widget responsiveness and maintain
added hideAllApps methods to TaskbarUIController and TaskbarAllAppsController classes , and updated closeOverlay method in BaseActivityInterface to
removed synchronized keyword from launch method and replaced Thread . sleep ( 1500 ) with launcher . join ( ) in CrawlJob . java to
modified the calculation of the Point object in JavaSEPort . java to account for the absence of the canvas coordinate to ensure correct positioning
replaced notificationManager . notify with startForeground for upload progress notifications to streamline notification handling by using a dedicated method for starting the foreground
fixed bug 149445 - excessive public count no longer report a false positive for static final .
hbase - 25827 fix flaky testthrifthbaserunner testthrifthbaserpclient
change log level from info to debug for half offset commit / rolled back message
added error handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve error handling
added a new response class ` BittrexTickersResponse ` and modified ` Bittrex ` and ` BittrexMarketData
updated the handling of enum constants in EntityEntry . java to improve type safety and clarity to enhance code reliability and maintainability by ensuring
updated method signatures to use ` Object ` instead of ` Class ` for session registration and unregistration to improve type safety and clarity in session
updated character array initialization in FileUtils . java to include additional characters to enhance compatibility with Unicode characters in file operations
added methods to set and get a stylesheet in ResourceService and updated related logic in ResourceHandler and DefaultServlet to improve stylesheet handling and ensure proper
added a call to clearIndex ( ) in TestFiltering . java to ensure that the index is cleared before further operations
changed the method call from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure the method is called with a pointer
updated database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockroach
removed the condition checking for enum type in ObjectStreamClass . java to simplify the condition for better readability and maintainability
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and created a new class ` SymbolNotFoundError
updated BinaryResponseWriter to conditionally create a SolrDocument based on the presence of pseudo fields to enhance flexibility in handling document retrieval based on
added handling for PING and PONG cases in WebSocketImplBase and implemented a test for WebSocket pause functionality to ensure proper handling of ping and
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in non - IDENT
do n ' t set ttl for dns resolver if cache = false
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration . java to ensure messaging tracing is only enabled when the messaging tracing class is present
mondrian : remove db2 - specific code in sqlquery . getquotedidentifier ( ) and sqlquery . getquotedidentifier (
updated import statements in IDELanguageClientImpl , EditorTextActionMode , IDEEditor , EditorTextActionWindow , and IDEEditor
added handling for the ' / ' character in XMLLightweightParser to ensure proper closing of XML tags during parsing
set the visibility of the TouchCharInput to GONE to improve user interface responsiveness
added a null check for the current user before accessing its ID to avoid potential NullPointerException when accessing the current user
modified the handling of object slots in JSObjectLinker to ensure proper slot assignment based on key type
refactor DefaultUniqueTicketIdGenerator to initialize randomStringGenerator and suffix directly instead of relying on constructor parameters to improve code clarity and
mark the SecurityConfig class as deprecated to indicate that the class should no longer be used in favor of a new configuration option
mark multiple classes as deprecated to indicate that these classes are outdated and should no longer be used in future development
deleted the JoglDebugAdaptor . java file and removed its functionality from RocketFigure3d . java to streamline the code
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and ` AWSPropagation ` classes to improve string representation of ` ExtraFieldPropagation
added PendingIntent functionality to FileDownloader and FileUploader classes to ensure notifications are updated on the current thread
refactor nextOrd method in Lucene80DocValuesProducer to utilize a dedicated set method to improve code readability and maintainability by
refactor DateTimeFormatter class to improve code readability to enhance maintainability and ease of understanding
removed unnecessary try - catch block when setting DnD autoscroll properties to streamline code by eliminating unnecessary exception handling
added null and empty checks to the setAdministratorCredentials method in KerberosOperationHandler to ensure that the administrator credentials are not null or empty
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and adjusted width used based on device profile to
add render to sketch window in psurfacejogl ( fixes # 284 )
refactor Hashing class to improve code readability to enhance maintainability and ease of understanding
updated the ` accept ` method to use ` folderPath ` and ` fileName ` instead of ` file ` and ` s ` to improve clarity
updated the ` addToListIfNeeded ` method to include a content description parameter for better user information display to enhance the user interface by providing additional context
removed null check for the type variable in JavaType . Method to simplify the code by eliminating unnecessary null checks
increased ACTIVITY _ START _ DELAY from 500 to 800 milliseconds to improve responsiveness during activity startup
added a new constant WEBAPP _ HOME in SolrJettyTestBase and updated the path in JettyWebappTest to use it to
updated diameter assignment logic in ThrustCurveMotorSelectionPanel . java to reset selectedMotorSet to null and clear the table '
added BufferUtil import and called clearToFill method in ByteBufferPool . java to enhance buffer handling functionality in the application
fix a bug in the notification rule controller and add a test case for it
updated LDAP group properties from " authorization " to " authentication " to align with the new LDAP authentication standards
added deleteExchange ( ) and queueDelete ( ) calls in DurableOnTransient . java to ensure proper handling of exchange deletion and queue deletion
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest # testbulkslotallocationfulfilledwithnewslots
added a listener to handle connection failures in ServerInfoService to improve error handling by providing more informative error messages when the server cannot connect to
refactor CompositeHandlerAdapter to improve code organization to enhance maintainability and readability of the code
refactor Quartz2Adapter to improve code organization to enhance maintainability and readability of the code
[ java ] do n ' t throw illegalstateexception when lookup .
updated Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security 6.3 schema
updated the method signature of ` newNameResolver ` to accept ` NameResolver . Args ` instead of ` Helper ` to enhance flexibility by allowing
added a check for non - empty newAnnotations before converting it to JCAnnotation and introduced a method to earlier determine position to ensure proper handling of
added " com . sun . naming . internal . " to CheckPackageAccess . java to support internal naming conventions in package access checks
updated the strict variable from false to true in StaxEventItemReader . java to enable strict validation by default
added an ` isExhausted ` boolean to the ` OfflineSorter ` class and modified the ` readPartition ` method to handle it to
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
updated the logic in LightStateConverter to check if the light state is in XY mode before converting it to a HSBB type to ensure
refactor drag - and - drop functionality to utilize a target cell array for folder creation radius calculations to improve code readability and maintainability
replaced direct calls to ` activity . showLoadingDialog ( ) ` with a call to ` ( ( FileDisplayActivity ) callerActivity )
added null checks for ` uigestureFile ` and ` uigestureFile . exists ( ) ` before initializing ` xmlLogs ` and
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for string comparisons to ensure consistent behavior across different locales
added listeners to the result in XmlSuite . java to enhance listener management during test execution
added a new method ` loadWithNewGlobal ` to handle global loading with a new global context to enhance functionality by allowing dynamic loading of global
[ hotfix ] [ table - common ] add json support for star tree index spec
added import statement for ObjectPostProcessorConfiguration in HeadersConfigurer . java to utilize ObjectPostProcessorConfiguration in security configuration classes
replaced double quotes with single quotes in string replacement methods across multiple files to enhance code readability and maintain consistency in character encoding
[ drools - 5390 ] fix npe when use in operator with null fire
added import for FieldCache and modified commit and purgeFieldCache calls in TestDistributedSearch . java to ensure proper handling of multiple segments and
http : / / issues . apache . org / activiti / browse / amq - 2231 - add test for message boundary
add resolvestaticcall ( ) method to handle static method .
http : / / issues . apache . org / jira / browse / amq - 4892 - add message group hash bucket to
added constants for slot IDs and replaced boolean fips with slotId in Secmod . java to improve code readability and maintainability by using
added alignment support to the dialog group in Layout . java and modified the startRenderering method in GdxRenderer . java to enhance widget addition
[ hotfix ] [ test ] temporarily disable unalignedcheckpointitcase
added imports for sound midi classes and modified conditional logic in JDK13Services . java to ensure only valid classes are processed to prevent runtime errors
added a condition to check if a keyword is already in the map before adding it to the keywordToReference map to avoid duplicate keyword references and
camel - 18443 : fix the issue of multicast eip do n ' t take into account the size of the collection .
removed unnecessary methods and adjusted constructor parameters in SegGraph , SegToken , and WordDictionary classes to improve code clarity and maintainability
[ statsd ] escape space in telegraf statistic ( # 644 )
add a udp port to the member so that it can be broadcast on a different multicast address .
rename rx . operators . operatormulticast to rx . operators . operationmulticast , a suggest by valerybokov
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time
added a try - finally block around the node start check in VertxTestBase . java to ensure proper resource management and prevent potential memory leak
added a synchronized destroy method to reset the cachedEventListenerRegistry to null to ensure proper resource management and prevent potential memory leaks
simonstewart : fix some test to work in firefox
[ pytorch ] remove pytorch engine dependency from ivalueutilstest
added a TaskStackChangeListener to manage task stack visibility in RecentsView to improve user experience by managing the invisible flag during pinned stack animations
pdfbox - 4892 : fix date pattern optimization , a suggest by valerybokov
camel - 14863 : camel - cxf - fix the cxf test error of camel - cxf
refactor pending animation handling by extracting logic into a separate method to improve code readability and maintainability
added debug logging and modified play time calculation in LauncherAnimationRunner . java to improve debugging capabilities and ensure accurate play time is set based on
added conditional logic to handle exception bailouts based on C1XOptions to improve error handling by providing a clearer default behavior when bailout
changed default values of signup and passwd from " / create _ account " and " / forgot _ password " to null to ensure default
[ hotfix ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
[ flink - 20625 ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner
added NoDataContainer to GeoTiffReader and corresponding test in GeoTiffReaderTest to enable handling of NoDataContainer in image rendering
fix npe when parse a function with no source section .
replaced ` toString ( ) ` method with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and
replaced the blockUntilConnected ( ) method with a connection state listener in TestPathChildrenCache . java to ensure proper handling of connection states
refactored the ` ArrayTypeHandler ` class to include null checks for nullable parameters and result sets to ensure proper handling of null values in array
replaced the existing ` RegexpTunnel ` class with a reflection - based approach for retrieving the prefix from ` REProgram ` to improve flexibility
updated the application picking method to use Application . class instead of null to ensure compatibility with the latest application configuration
[ drools - 5390 ] fix npe on mutable global
replaced Preconditions with TransactionUtil for asset name and URL validation in AssetIssueActuator . java and added validation methods in TransactionUtil . java
fix for copypast ( textfield ) : do n ' t copy paste ( textfield )
updated label and description from " @ text / actionShowToastWithIconLabel " to " @ text / actionShowToastWithIcon
refactor node setting methods to use ` addAll ` for seed , active , and trust nodes to improve code readability and maintainability by redu
improve error message in basetokenstreamtestcase to be more informative
log4j2 - 1348 : timebasedtriggeringpolicy now allow to specify a modulus when incrementing time
refactor item click handling methods in ShadowAdapterView and ShadowListView to improve code clarity and maintainability by centralizing item click logic
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a null check for loopScope and implemented afterMethodScope method in GraphDecoder and PEGraphDecoder classes to ensure proper handling of method scope
refactor HttpSessionDestroyedEvent to improve session attribute retrieval and added unit tests for security contexts to enhance code clarity and ensure correct handling of session
added a test for changing the service name in ZipkinSpanReporterTest to ensure proper functionality of span reporting with a manually provided service name
added logging statements to ` JavaInMemoryFileManager ` and ` JavacToJarStepFactory ` classes and modified spooling logic
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to clarify the purpose of the class
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow for more time for the lock to be acquired
added DEFAULT _ CACHE _ CAPACITY constant and updated method signatures in ConfluentSchemaRegistryDeserializerProvider to use it to improve flexibility in
renamed the JCheckBox ' remind ' to ' checkAtStartup ' and updated its tooltip text to improve clarity of the checkbox '
refactor NodeGenerator to improve method handling for strong keys , weak values , and soft values to enhance clarity and maintainability of the code
hhh - 15827 - improve performance of cascadingactions . istransient ( )
added support for the ` __ proto __ ` property in the ` ScriptObject ` class to ensure proper access to the ` __ proto __ `
updated the default read mode from " heap " to " mmap " in CommonConstants . java and refactored ImmutableSegmentLoader . java to
added support for ByteArrayTemplate in ArrayTemplateBuilder to enhance template functionality for byte data types
added Hipchat support to the SamlServiceProviderProperties and created a new CasSamlSPHipchatConfiguration class to enhance SAML service provider
replaced ` List < URL > ` with ` Set < URL > ` for ` commandRegistryUrls ` and updated resource retrieval logic to improve
updated warning log message to include the current context for uncovered HTTP methods to improve logging clarity by providing context context for better debugging
updated the login method in SvnRepositoryConnector to remove the checkLoggedIn ( ) call and set loggedIn to true in SftpRepositoryConnector
camel - 18443 : camel - jms - do not create a transaction manager if the session be not transacted .
cloudstack - 4892 : fix checkstyle violation in vmwareresource . java
refactor Timers class to improve code readability to enhance maintainability and ease of understanding
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to
deprecated several string constants and constructors in UAX29URLEmailTokenizer . java to streamline code and improve maintainability by eliminating
removed unnecessary ` Map < Object , Object > ` from ` ScriptObject ` class and updated assertions in ` ContextTest . java ` to simplify
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future updates
refactor : move i18nutil . getsupportedlocale ( eperson ) to dspace - api .
updated JaversTransactionalDecorator to implement InitializingBean instead of PostConstruct and modified the schema handling method to improve bean initialization and ensure schema
removed null check for pgTypeName before adding it to _ pgNameToSQLType to simplify code by eliminating unnecessary null checks
added server setup for multiple handlers in ScopedHandlerTest . java to ensure compatibility with the latest Jetty server implementation
improve calltimeoutexception handling in waitnotifyserviceimpl . cancel ( )
replaced StringUtils . isBlank with StringUtils . isEmpty in RestLoginProcessingFilter . java to ensure proper handling of empty password checks
updated permission check logic in CommandMap . java to handle " * " as a valid permission to ensure proper permission validation for account accounts
rename ` encoding ` to ` sourceCharset ` and update related methods in ` AbstractCompiler ` and ` ICompiler ` classes to improve clarity
changed the type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and updated related methods accordingly
added imports for GenericComponentModifier and FinSet , and modified simulation handling in GeneralOptimizationDialog . java to improve code clarity and ensure
camel - 17654 : camel - main - engine - add option to turn on / off context reload
updated console and logger configuration parameters in CommonTestUtils . java to improve clarity and consistency in logging configuration
refactor PrologSizeSanityCheck class to improve code readability to enhance maintainability and facilitate future updates
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a check for ` nonCloseable . markSupported ( ) ` before invoking ` invokeSafely ( nonCloseable : : reset )
added a check for ` embeddedSettings . isEnabled ( ) ` in ` EmbeddedNeo4jServer . java ` and modified conditional logic in
use prefab : prefab : player for movement and health debug
added a halfLengthTotalWeight parameter to the random method and adjusted its logic accordingly to ensure the random number generation behaves correctly based on the
refactor GsonParser to simplify cache string handling and update test method names for clarity to improve code readability and maintainability by reducing
added comments to parameter ` gcmsort ` and ` gcmdir ` in ` ApacheHttpClientMediaWikiApi . java ` to clar
replaced multiple instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract
[ iotdb - 3396 ] pipe : fix the race condition in pipetaskcoordinator ( # 3396 )
added conditional logic to determine the version of Robolectric using preinstrumented JARs based on system property to enhance flexibility in managing
modified the conditional check from ` if ( ! isSilent ) ` to ` if ( isSilent ) ` to correct the logic for handling silent
added checks to ensure dynamic fields cannot have default values or required in IndexSchema . java to improve error handling for unsupported attributes on dynamic fields
do n ' t call randomreadrepair ( ) if repair fails
replaced ImmutableSortedSet with Iterables in PrebuiltCxxLibrary . java and added a new test method in PrebuiltCxxLibraryDescription
refactor ` AdaptableX509CertSelector ` to initialize ` startDate ` and ` endDate ` with default values and introduce ` isSK
[ hotfix ] [ log4j2 - 1010 ] remove unnecessary try / catch block in nosqlappender . parseint (
deprecate guiscreencorevent . getcurrentscreen ( ) in favor of getcurrentscreen ( ) .
added methods to manage category additions and removals in CategoryEditSearchRecyclerViewAdapter to enhance category management functionality for better user experience
# 1745 - enh : add servercachetype parameter to servercachefactory . createcache ( )
refactor RocketComponent to iterate through child components instead of directly setting properties to null to improve code clarity and ensure proper handling of mass
nbjavac : release compiler instance on destroy ( )
refactor ` Task ` implementation to use a ` Supplier < V > ` instead of an anonymous inner class to improve code readability and maintain
added synchronization to the ` StripedExecutor ` initialization in ` WanReplicationServiceImpl ` to ensure thread safety when managing ` StripedExecutor
added null checks for tPartition and table locations in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to ensure robust
refactor lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to improve code readability and maintainability
added unit tests for the ` Files ` class and implemented the ` delete ` method in ` mmm ` and ` ppp ` classes to
removed exception handling around socket closure in ServerSocketAdaptor and SocketAdaptor to simplify resource management by eliminating unnecessary exception handling
updated the class name check in SSLLogger from " java . lang . System " to " Logger . class . getName ( ) " to ensure
replaced the use of ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f . toString ( ) ) `
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of
changed the access modifier of the ` GeneratedEntityDecorator ` class from public to private to allow subclasses to access the ` GeneratedEntityDecorator ` class
updated Java command - line arguments in SimplePostTool . java to remove unnecessary URLs to streamline the command line for better readability and maintain
make sure min and max command have symbolic toggle in algebraitem . issymbolicdiffers
refactor client container startup handling and shutdown thread registration in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error
updated conditional check to use logical OR instead of logical AND for null checks to improve readability and maintainability of the code
ensure web application be clean up after each test
added a method to retrieve search strings from query parameters in RemoteBrowseHandler to enhance user experience by allowing custom search functionality based on user input
set the visibility of the neutral button to INVISIBLE to improve user interface clarity by removing unnecessary visibility settings
refactored itemdao # countitems and itemdao # getnotarchiveditemscount to use itemdao # countitems
updated SQL statements to use backticks for table and column descriptions to ensure consistent SQL syntax for better readability and maintainability
added logging functionality to CheckTokenEndpoint for handling OAuth2 exceptions to improve error reporting for better debugging and monitoring
refactor multiple Java classes to improve code organization and clarity to enhance maintainability and readability of the codebase
refactor IdentityZone endpoint tests to use the exchange API for updating identity zones to improve test clarity and ensure correct response handling for identity zones
increased dismiss delay from 20 , 000 , 000 to 10 , 000 , 000 in ExtractionModelFrame and DataBrowser , and added
fix warn message when run single test method with junit 5
replaced ` HumanReadableException ` with ` RuntimeException ` in ` WorkerShellStep . java ` to handle ` IOException ` to improve error
[ hotfix ] [ connector / flink ] move datastreamutils and socketstreamiterator to the experimental annotation
refactor StreamCepstrumSource class for improved readability to enhance maintainability and clarity of the code
added a boundary check for the index variable in the List class to prevent index out of bounds errors when accessing the items list
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct type validation for Parenthesis expressions
added confirmation and required type to the DebugPaste command in DebugPaste . java to enhance the debug paste functionality by allowing confirmation and required
replaced ` get ( ) ` method calls with ` orElseThrow ( ) ` in multiple configuration classes to improve error handling by providing clearer
simonstewart : fix focus problem with mathquill ggb
updated imports and refactored the ` Arg ` class to ` GoBinaryDescriptionArg ` in ` GoBinaryDescription . java ` to improve
refactor environment variable retrieval logic in Jooby . java to improve clarity and ensure proper resource loading for logback configuration
replaced ` RetryListenerSupport ` with ` RetryListener ` in multiple files and introduced a new ` SecondDummyRetryListener ` class to improve
[ doc ] fix count report with decimal ( # 498 )
changed the ` email ` and ` author ` fields to be ` final ` and initialized ` commits ` in the ` Contribution ` class to
replaced a for loop with a do - while loop that appends a period until the end of the string to improve performance by avoiding unnecessary
refactor the way elements are initialized by checking the type of the " elements " field to ensure that elements are created only if it is not
enhanced error messages in ` StaxEventItemReader ` to include the resource URL to improve clarity of error messages for better debugging and
[ fix ] testmultirendertarget . simpleupdate ( ) do n ' t need to call rootnode . addlight ( )
added null check for currentProfile and a debug log statement in DelegatedAuthenticationClientLogoutAction . java to improve robustness by preventing null
replaced ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java `
added BigInteger instances for cryptographic operations in KeyStoreManager . java to enhance security by integrating cryptographic algorithms for improved security
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
added engine version setting in BpmnDeployer and corresponding test in BpmnDeployerTest to ensure correct engine version is set for process definitions
updated property names in SpecificCompiler . java for consistency and clarity to improve code readability and maintainability
replaced ` isCurrentThread ` method with ` verifyThreadIsAttached ` and updated thread verification logic in ` VMThreads ` to enhance thread verification
added null check for map values in GenericUDFMapValues . java and created a corresponding test class TestGenericUDFMapValues . java
rename " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to improve clarity and consistency in naming conventions
added configuration properties for oil well generation rate and enabled oil spouts in BCEnergyConfig . java and updated OilGenerator .
added functionality to create a new file named " . clean - me " if it does not exist to ensure that the directory is eligible for cleaning
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5448 -
removed unused imports from CRLDistributionPointRevocationCheckerTests . java to clean up the code and improve readability
updated constants in ` ZipConstants64 ` and added an import statement in ` ZipEntry ` to improve code organization and maintainability by organizing constants
refactor ` newFileSystem ` methods to improve file validation and error handling in ` ZipFileSystemProvider . java ` to enhance error handling and ensure
replaced ` createHorizontalStrut ` with ` createHorizontalGlue ` in ` IfControllerPanel . java ` to improve layout consistency by
refactor connection initialization in FailoverUpdateURIsTest . java to improve code clarity and maintainability
added Gson @ SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enable serialization
fix crash when delete book from database
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
corrected the calculation of response message position in AbstractAjpProcessor . java to ensure correct handling of response message lengths
use restart ( ) instead of start ( ) to restart the admin console server .
refactor unregisterHandlers ( ) method to use instance variables for binaryConsumer and textConsumer to improve code clarity and maintainability by reducing
added configuration properties for device ID transformation method , ID table , and ID table log file in IoTDBDescriptor . java to enhance configuration flexibility
updated the number of documents in ExitableDirectoryReaderTest from 2000 to 100 and added a new DelayingSearchComponent class to improve test coverage
updated the condition for mocking the access error in TestSignatureInfo . java to ensure proper handling of access errors in the test case
transaction : remove unnecessary usage of scriptbuilder . data ( ) . build ( ) .
updated the expression to include " / schema / types / fieldType " alongside " / schema / types / fieldtype " to ensure accurate
updated the ` valueCompleter ` check to include ` NullCompleter . INSTANCE ` and added a new test class ` OptionCompleterTest
removed unnecessary whitespace in S3Utils . java to improve code readability and maintain consistency
changed the type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to allow more flexible representation of peer
added logic to upload zip files and refactored error handling in FtpHelper . java to improve file upload handling and ensure proper error logging
updated the reply button ' s alpha value from 0.5 f to 1.0 f to improve the visual appearance of the reply button
updated the expected string format in AccessLogSupportTest to include a timestamp to ensure accurate comparison of remote IP addresses based on the expected timestamp
marycachetest : move testfiles - deleteme to tmp / testfiles - deleteme
simplify settingimpl . hassubscribers ( ) , no need for null check
added a null check for the marshaller in AbstractSamlObjectBuilder and removed unnecessary imports in AbstractSaml10ResponseView to improve error handling by throwing
replaced printStackTrace ( ) method calls with LogUtil . warn ( ) method calls in DataBrowser . java to improve error handling by using a
added a check for the existence of a file in the dev mode in AssetsController . java and updated tests accordingly to ensure that static assets are
[ hotfix ] [ rocksdb ] add writeoptions to rocksdb backend
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to improve clarity
updated the ` setAlgorithm ` and ` putHint ` method calls in ` MainActivity . java ` to ensure proper configuration of the dijk
enable native secp256k1 and altbn128 by default
rename DuclsSandboxTest to SandboxTest and update related references to improve clarity and consistency in naming conventions
camel - 18443 : camel - cxf - do not log exception in case of failure .
make forwardpropagatetree public in sentimentcostandgradient
updated the SQL query in JDBCExample . java to use an array instead of a single element for time filtering to improve the accuracy of the query
improve error message when interpolation of $ { project . * } expression in profile activation
refactor Style class to improve code readability to enhance maintainability and ease of understanding
added zoom functionality to handle back key events in ShareActivity to enhance user experience by allowing zoom out of the app
added a check to skip deprecated fields when they are annotated with @ Deprecated to ensure proper handling of deprecated fields in JSON processing
added fade - in and fade - out animations for the send layout in LauncherFragment . java to enhance user experience by providing visual feedback during
[ hotfix ] fix checkstyle violation in yarn - utils
added Progressable parameter to multiple methods in Utilities , PTFRowContainer , HiveBinaryOutputFormat , and HiveIgnoreKeyTextOutputFormat to
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove contributions from the panel by contribution and update the panel ordering and color settings to ensure that the contributions are properly removed and updated the
updated the class name from HyervisorTemplateAdapter to HypervisorTemplateAdapter to improve clarity and consistency in naming conventions
added a check to initialize dPath if it is empty to ensure dPath defaults to the user ' s directory if it is empty
fix e - ac3 passthrough when format . samplerate be not set
log4j2 - 1349 improve performance of mapfilter . filter ( )
renamed VerificationInOrderWithCallsTest . java to improve clarity and consistency in naming conventions
updated the axis parameter from ' z ' to ' x ' in the setFromAxis method to align the method with the intended axis specification
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to ensure consistency with the
[ java ] add a test to verify that the client be connect at start .
[ phpcc ] fix broken documentation for union and functional type
refactor the handling of one - handed mode support in RecentsAnimationDeviceState . java to improve code readability and maintainability by
added onDetachedFromWindow method to properly cancel running tasks to ensure proper resource management and prevent potential memory leaks
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter constructors to allow customization of the dictionary
updated exception handling logic in ResultSetTest . java to reset ' thrown ' flag to false to ensure proper handling of exceptions during test execution
updated the initialization of ` InitializeProjectMessage ` to use an empty string instead of " debug " to improve clarity and consistency in project initialization
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for ` preventedByLocking ` and introduced ` AtomicBoolean ` for
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability to enhance code maintainability and reduce redundancy in tooltip
increased await timeout from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server to
add check for deviantart . username and deviantart . password to avoid npe .
refactor Google sign package key constants in PackageUtils . java to improve readability and maintainability of the code
fix importdirsolveallturtetest to use createsolutionbusiness ( )
added a method to notify window state changes in WWindowPeer . java to ensure proper handling of window state changes in the application
added emailDescription to templateData in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to include email description in data
replaced the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to
refactor language handling in Locale . java and add error handling in LocaleTest . java to improve code clarity and ensure proper handling of ISO
refactor ChangeLog parsing and update visitor creation in Liquibase . java to improve code readability and maintainability by centralizing update
added a check to return early if the screen is pinning in OverviewCommandHelper . java to improve performance by avoiding unnecessary actions when
added customizable text fields for no chart data in the Chart class to improve user interface by allowing customization of no chart data display
added synchronization to check if the response head has already been sent in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread
refactor chunk handling logic in NettyResponse . java to utilize a separate chunkHandler method to improve code readability and maintainability by
added a new header " : scheme " with the value " http " in Http2TestBase . java and updated corresponding test cases in Test
fixed - rlocalcachedmap . keyset ( ) , value ( ) , and entryset ( ) method do n ' t return cached
camel - jpa - fixed the issue that camel - jbang do n ' t work when use a component that do n ' t have
update jumpSpeed assignment from fallSpeed to jumpSpeed in PhysicsCharacter . java to correct the assignment from jumpSpeed to jumpSpeed
added a null check for reparsedFunction in the syntax extension condition to ensure proper handling of cases where reparsedFunction is null
refactor logging variable names and improve order book handling in BitstampPusherService . java to enhance code clarity and maintainability by using
added deprecated methods to retrieve old upload segment URIs in FileUploadDownloadClient to ensure compatibility with the latest API changes
modified the way tracking objects are retrieved by using a filter parameter to ensure accurate retrieval of tracking objects based on the specified filter
added unit test to verify that the juel language do n ' t throw an exception
added a range check for the alpha value in RecentsView . java to ensure the alpha value is within the valid range of 0 to
corrected the string concatenation syntax for the " Import - Package " attribute in ManifestReversion . java to ensure proper formatting of the import package
refactor DataSyncConfiguration to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized it in JavaLanguageServer to facilitate the initialization of the Java snippet repository
added a loop to iterate over time buckets before updating sums in StarTreeRecordStoreCircularBufferImpl . java to improve performance by avoiding
updated URLs in ChromeDriverService and ChromeOptionsFunctionalTest from " http : / / code . google . com / p / chromed
camel - 14832 : camel - pgjdbc should use prepared statement instead of direct execution
updated import statements from ` com . sun . syndication ` to ` com . rometools . rome ` and added a close
added Content - Length header handling in TransferCompletionHandler and refactored NettyTransferAdapter initialization in NettyAsyncHttpProvider to ensure accurate
refactor Dialog class to improve code readability to enhance maintainability and ease of understanding
removed the constructor from EnhancedRuntimeException to simplify the code by eliminating unnecessary parameters
make socketappendertest more robust on slow machine
camel - 14863 : camel - core - optimize to reduce stack frame in use during camel - core
updated exception handling and method parameters in ByteArray . java to improve error handling clarity and maintain consistency in method signature
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to ensure proper handling of input events during touch events
camel - 6770 : fixed the camel - restlet test error
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify method signature by removing unnecessary parameter
[ hotfix ] [ test ] move module - path test to test - modulepath
added a method ` getSourceDirs ( ) ` to ` JavaServerConfiguration ` and modified the ` getCompiler ( ) ` method to include source
updated menu item ID from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to improve user
renamed methods and assertions in AncestorDescendantTests for clarity and consistency to improve code readability and maintainability by using more descriptive
make worldeditplayer . gety ( ) return negative y - coordinate instead of negative y - coordinate
[ iotdb - 4892 ] fix partial insert do n ' t throw pathnotfoundexception when data path do not exist
removed an extra space in the closing brace in JavaCompiler . java to improve code readability and maintain consistency in formatting
[ hotfix ] [ stream ] move mailboxexecutor to abstractstreamoperatorfactory
hbase - 10663 add precheck for settablestateinmeta and fixmeta to master rpc service
updated method reference syntax and improved error message formatting in GatewayMetricFilterTests . java to enhance code readability and maintainability by using method
updated BlockJUnit4ClassRunner constructor to accept a Java class instead of a TestClass to ensure compatibility with different Java classes in the test
[ drools - 5842 ] use lastdata instead of remoteitems in kiewatcher . delete ( )
adjusted calculation for allAppsCellWidthPx by incorporating padding to improve layout responsiveness by incorporating padding
[ hotfix ] [ core ] make coreoptions . parent _ first _ logging _ patterns public
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to writer . forceMerge ( 1 ) in TestMultiPhraseEnum . java to ensure proper merging of multi - phrase documents
hhh - 14827 - make session . close ( ) return void instead of connection
refactor GetLocations class to improve code structure to enhance maintainability and readability of the code
updated exception handling to check for null instead of not null and simplified stack trace printing to improve code readability and maintainability by eliminating
refactor exception handling to use a more descriptive variable name to improve code readability and maintainability by using a more descriptive variable name
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android versions
ruby flavor : fix syntax error when use multiple repeat
updated logging level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
http : / / issues . apache . org / jira / browse / amq - 4892 - remove the usecaches
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for database reading to improve flexibility and flexibility in handling database
update instructorfeedbackresultspageuitest to use the new instructorfeedbackresultspage
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to enhance flexibility in handling encoded qualifier lists based
removed public access modifier from several methods in ApprovalStore and ApprovalsControllerService classes to simplify method visibility and improve code readability
added a new boolean variable ` mStartedDownload ` and implemented a delayed task to cancel the download task if it is not already started to improve
replaced ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in ` AbstractFloating
updated project version from 1.0 . 11 to 1.0 . 13 and adjusted the year from 2008 to 2009 in JFree
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
refactor GsonBuilder class to improve code readability to enhance maintainability and ease of understanding
added null checks for ` centerGeo ` before adding it to ` circleCenters ` and ` fixedPoints ` to avoid potential NullPointerExceptions when
remove -- java . espressohome option for java on truffle ( espresso ) inside a graalvm .
doc ( javadoc ) : fix typo in javadoc ( # 1188 )
changed access modifiers of ` timeToDieInSeconds ` and ` deleteSession ` from protected to private and removed unnecessary getter / setter methods to enhance encaps
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency in
initialized ` sz ` to 0 and updated result initialization in ` SolrIndexSearcher ` , and modified field assignment logic in ` TestJoin `
added a file parameter to the triggerMediaScan method call to include the file object for better tracking of media scans
removed conditional logic for posting test results in TestRunning . java to simplify test execution by eliminating unnecessary verbosity checks
added custom G - code text settings to the MainWindow settings to enhance user experience by allowing custom G - code customization options
replaced PrintWriter with BufferedWriter in AdditionalJaxbMappingProducerImpl . java to improve character encoding handling for output streams
refactor JsonElement class to improve code readability to enhance maintainability and ease of understanding
added imports for SolrTestCaseJ4 and JUnit to handle exceptions related to the " unset . sys . property " system property to ensure
added a method to remove fragments and the action bar in GpsMainActivity to ensure the action bar is properly hidden when the current fragment is
updated spanishTokens and spanishTokens2 to replace " = LRB = " with " ( " , " ) " in TokenizerAnnot
replaced instances of ` Range . create ` with ` Range . Byte ` and added checks for ` end ` and ` start ` to ensure
updated gcode file path and enhanced debug output in VisualizerCanvas . java , and modified GcodeViewParse . java to include additional G
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " while
reformatted method calls in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java for improved readability to enhance code
added a condition to close the exchange client if the output stage is null and the query state is complete to ensure proper resource management and prevent potential
fix integritycheck to work on non - default file directory
added SolrClient import and a private Map < String , List < SolrClient > > shardToClient to the ChaosMonkey class
fix potential npe in configuration activator
removed unnecessary whitespace in the NestedRepositoryTreePanel . java file to improve code readability and maintain consistency in formatting
changed the constructor visibility of ` ExtensionTypeHeader ` from package - private to public and added a validation check for the extension type to ensure that
pdfbox - 4892 : remove try / catch block , a suggest by valerybokov
updated the default value of ` pushOnShutdown ` from ` deleteOnShutdown ` to ` pushOnShutdown ` and added getter and setter methods
refactor handleEvent method to include a triggerCallback parameter and improve error handling to enhance event processing by providing a context - driven error management
added a test for multiple Python executables on the first path in BuckConfigTest . java to ensure that the first executable executable is correctly
added a default button to the root pane in the InitialAccountRegistrationFrame to enhance user experience by allowing sign - in functionality
added a new configuration option TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging messages in RegistrationRestRepository . java to include exception details to improve error reporting for better debugging and debugging
remove reference to org . axonframework . util . reflection since it ' s not in use anymore
added a static method to ` OidcIdTokenClaimCollector ` and a new test class ` OidcIdTokenClaimCollectorTests ` to
removed the private ` center ` variable from multiple classes to streamline the code by eliminating unnecessary initialization
[ hotfix ] [ runtime ] fix checkstyle violation in registerandprocessbundleoperation
refactor SslContextFactory to improve code readability to enhance maintainability and ease of understanding
[ hotfix ] [ runtime ] remove unused configuration property ` ` maxexpectations ' '
updated the return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive error message for access
[ 3.0 ] fix the context classloader be not set correctly when create reference config ( # 3806 )
added parameters to the ` shiftRows ` method for better control over row height adjustments to enhance the functionality of the ` shiftRows ` method
replaced instances of ` setRolloverIcon ` with ` setRolloverPressedIcon ` in ` FontImage . java ` to align the
refactor grid translation handling in TaskViewUtils and related classes to improve code clarity and maintainability by centralizing grid translation logic
refactor Assertions class to improve code readability to enhance maintainability and ease of understanding
added a check for ` currentDateTimeFunction ` in multiple database classes to return it if it is not null to improve performance by avoiding unnecessary
[ scb - 2321 ] fix illegalargumentexception in ioutils . anonymouspath ( )
updated the call method signature and added content description retrieval in DigitalWellBeingToast . java and TaskView . java to enhance
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] increase wait time in catalogtracker
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
update genericitem . getstate ( ) to use stateconverterutil . defaultconversion ( )
added IntegratorProvider integration and a new fetchPostAndDetailsProjection method in BidirectionalOneToOneNPlusOneTest . java to enhance
remove extra empty screen from the workspace in Launcher . java and update startSearchPageIndex initialization in LauncherModel . java to ensure proper
fix npe in markbasepointersphase and add null check in indexedvaluemap
updated string formatting in GoogleLineChart . java and GooglePieChart . java to use double quotes instead of single quotes to ensure consistency in
refactor wait logic in SendingAccountor . java for improved clarity and error handling to enhance code readability and maintainability by
hbase - 15938 walprettyprinter should seek to the correct position in the log when write to a file
updated the port number in the NettyTransceiver initialization from 1 to 0 to ensure the transceiver is started on the correct port
added event sorting functionality to the SimpleReport class to ensure that events are sorted before generating a report
added a test for the ` getCsvLine ` method that returns a formatted CSV line with double quotes to ensure correct handling of escaped quotes in
updated command - line arguments in DcorefChineseBenchmarkSlowITest . java and modified method names in AbstractSequenceClassifier . java to
added check to make sure we do n ' t send iq message to remote server .
removed the @ JniImpl annotation from VM . java to clean up the code and improve readability
refactor configuration settings to use constants instead of string literals to improve code readability and maintainability by using constants instead of hardcoded strings
added a condition to check if the media ' s HDR format is not " dolbyvision " before processing the SID parameter to
fix bug in asttests due to change in package name
[ net . minestom . server . instance ] fix worldborder . setradius and worldborder . resizeworldborder do n ' t
hbase - 25828 hmaster . getwalgroupsreplicationstatus should return an empty map if master can not host user region
ggb - 1343 remove the user from the view when the login be successful .
refactor routing table markDataResourceOnline calls to use a dedicated method for instance configurations to improve code readability and maintainability by reducing
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
added unit test to verify that a project can be read from an erroneous maven project
removed unnecessary conditions from the if statement in PropertyMap . java to simplify the conditional logic for better readability and maintainability
refactored the ` getControllerId ` method to accept a ` configId ` parameter and updated related logic to enhance flexibility by allowing dynamic
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper
removed the check for refresh token generation in OidcConsentApprovalViewResolver to simplify the conditional logic for consent prompts
removed debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced the extractor method in BaggagePropagation from a lambda expression to an enum containing a NoopGetter implementation to improve code clarity
refactor ConditionalOnEnabledResourceChain class for improved clarity to enhance maintainability and readability of the code
added a condition to check if the child count is greater than zero in the BarrowmanCalculator class to ensure that the treeRoot does not
replace ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java ` to ensure correct
updated log messages and added intent result listener functionality in FacebookImpl . java to improve logging clarity and ensure proper intent handling during session operations
updated the return value from " h : mm a " to " skeleton " in ShadowICU . java and added a new test for date
removed unnecessary KeyguardManager dependency from TouchInteractionService to simplify code logic for better readability and maintainability
cloudstack - 4892 : check for null diskofferingvo before set volume . defaultdiskofferingid
replaced ` FileChannel ` with ` AsynchronousFileChannel ` in ` UtowBodyHandler . java ` and added ` position ` variable to
removed unnecessary whitespace in SigInt and SigIntTest classes to improve code readability and maintainability
refactor : remove unnecessary method updatebyboundingboxresize ( ) , use prepareboundingboxresize ( ) instead
change return value from - 1 to 0 in Asset . java to reflect the intended behavior of the method
improve performance of computebenchmark by use a lambda instead of lambda
added a refresh listener to the UploadListFragment to notify the adapter when data changes are detected
change bibdatabasecontext . file to optional < path > instead of file . tofile ( )
replaced ` ParticleEmitter . items [ i ] ` with ` emitters . get ( i ) ` in ` ParticleEffect .
refactor Tomcat . java to improve service and engine retrieval logic to enhance code clarity and maintainability by simplifying service and engine
updated error messages in BuildRuleFactoryParams , Console , and BuildRuleFactoryParamsTest to include a period at the end to improve clarity
added a condition to check if the playback state is not PLAYING before proceeding to prevent unnecessary operations when the playback state is not P
replaced the retrieval of ` ServiceComponentDesiredStateEntityPK ` with a direct call to ` findById ( 0L ) ` to simplify the
refactor inner class handling logic in Java2TypeScriptTranslator and introduce InnerClassFieldClash class to improve code clarity and ensure
added logging and follow redirect filter configuration to DockerClientFactory and DockerClientProfile classes to enable customizable logging and follow redirect filters based on configuration
replaced direct call to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure proper
hhh - 10183 fix test failure on postgresql
refactor input closing logic in OPCPackage and ZipHelper classes to ensure proper resource management and prevent potential resource leaks
changed the access modifier of the ` storeClassFile ` method from private to public to allow access to the method from other packages
replaced the assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues and added a test class TestSortedSetDocValues
simplified error messages in CGIHandler and added a new start method in JavaVM to improve code readability and ensure proper execution of
added conditions to check for additional line endings in LineReaderImpl . java to ensure compatibility with additional line endings
updated method signatures and variables from List to Set in DistBuildService , ServerContentsProvider , and its test to use ImmutableSet instead of List to
added a check to return early if the mesh has no vertices to improve performance by avoiding unnecessary rendering when no vertices are available
updated verification methods in IncorectBindingPuzzleFixedTest and added error handling in DescriptiveMessagesOnVerificationInOrderErrorsTest to improve
replaced ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root
truffle : remove unused import in truffle - api .
refactor JsonObject class to improve code readability to enhance maintainability and ease of understanding
updated idle timeout condition in SelectChannelEndPoint . java and modified max idle time retrieval in HttpConnection . java to ensure proper handling of maximum idle
fix harmlandblock . cansustainplant not use the actual blockstate .
added a new table ` SALTEDTABLE123 ` and modified the query to include ` MULTI _ TENANT ` and ` SALT
updated SimpleDateFormat to use Locale . US in HttpCookie . java and added a new class B6791927 . java for cookie parsing to
removed multiple redundant calls to ` db . close ( ) ` in ` DbHelper . java ` to streamline resource management by eliminating
increase poll timeout to 5 second in batch message listener container integration test
[ gr - 13535 ] add trace phase for economy compiler .
add save _ database and save _ all key binding to source tab
refactor ObjectMapper initialization to use a static block to ensure proper line separator setting for better readability and maintainability
updated path normalization logic in NativeEnvironmentRepository . java to ensure consistent path formatting across different operating systems
refactor Application usage in multiple test classes to use a static Application instance to improve resource management and ensure proper shutdown of the Application instance
[ java ] remove validation of record in the archive when prepare for recovery .
fix : replace groupname with errorgroupname in itsystemtest
[ hotfix ] [ test ] remove unnecessary code in testfuzzoptimizations
replaced shared preferences retrieval with a private boolean variable for reverseImage to streamline code by eliminating unnecessary SharedPreferences usage
updated equality checks for " META - INF / " and " META - INF / INDEX . LIST " and " META - INF / aop
added a new predicate for excluding IDs and metadata in TerserUtil . java and refactored the replaceFields method to use it to
updated JUnit 4 annotations and methods to JUnit 5 in AuthenticationSuccessListenerTests . java to ensure compatibility with the latest JUnit 5 features
remove usage of h2 . util . new . arraylist ( ) , use arraylist . indexof ( ) instead
refactor TypeUtil class to improve code readability to enhance maintainability and ease of understanding
[ hotfix ] [ runtime ] fix timezone issue in alert notification
added a new method ` maybeCreateAbstractMethodErrorThrower ` to handle ` AbstractMethodError ` in the ` MethodHandleResolver ` class
camel - 17979 : camel - core - optimize simple language for ognl syntax .
remove unnecessary check for empty ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary
camel - jclouds : fixed the issue that jcloudspayloadconverter do n ' t copy the input
camel - jbang - fix camel - consul test after osgi bundle release
updated conditional check in Check . java and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java to ensure
[ java ] increase driver timeout for channel validation test .
added a new file ` FileExtensions . java ` with constants for CLANG source and headers to provide a centralized way to manage CLANG
replaced ` ThreadLocalDateFormat ` with a static final instance of ` ISO8601CanonicalDateFormat ` to simplify the code by eliminating unnecessary
8274869 : remove vmdeprecatedoptions . java test that be no longer require .
added displayName property to Pac4jBaseClientProperties and updated related classes to support custom display names to enhance client configuration flexibility by allowing
replaced RuntimeException with a custom EarlyTerminationException in multiple classes to improve error handling for early termination scenarios
[ hotfix ] fix checkstyle violation in tracefunctionaroundwrapper
fix for http : / / issues . apache . org / activemq / browse / amq - 2203 - fix issue with
fix npe in forgeeventfactory when parent be null
removed KeyCrypterException from the catch block in WalletTool . java to simplify exception handling by eliminating unnecessary exception handling
added a @ Deprecated annotation to the SubmitOrderedCompletionService class to indicate that the class is outdated and should not be used in future development
modified the length calculation in HyphenationTree to correctly store the original length to ensure accurate representation of the original length in the Hyphenation
add a delay to make sure we do n ' t get stuck in a race condition .
move the call to resourcemanagementserviceutils . getservice ( simpleaccountregistrationactivator . bundlecontext ) into a separate method so that it
corrected the spelling of " use the javac flag - parameters " in the PARAMETER _ NEEDS _ TO _ BE _ NAME
added a new boolean variable ` providersChanged ` initialized to false in ` ConfigurationManager . java ` to ensure that the ` providersChanged ` flag
added a method to escape identifier tokens in the TokenRewriteStream to ensure proper handling of quoted identifiers in Hive syntax
added a null check for the ' name ' entry in the font file to handle cases where the ' name ' entry is missing for PostScript
updated type casting and suppressed warnings in SolrResourceLoader . java to improve code clarity and maintainability by ensuring type safety
modified the condition for hitting cells in the Window class to ensure proper traversal of parent actors before returning the current object
added a null check for appManifest before retrieving targetSdkVersion to avoid potential NullPointerException when appManifest is not initialized
refactor ConfigurationMetadataGenerator to use a dedicated method for adjusting configuration metadata to improve code readability and maintainability by reducing redundancy
added userName property and its getter / setter methods to the Driver class and its implementations to allow users to specify the user ' s name in the
camel - 18443 : camel - xslt - allow to configure xslt source , url , and converter via spring xml .
added HadoopShim dependency and updated related classes to utilize it to enhance the integration with tez ' s Hadoop shim functionality
removed unnecessary variable declarations from ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to streamline code and improve readability
added null check for request . getMappingData ( ) . context before logging access to avoid potential NullPointerException when mapping data is not available
log4j2 - 1349 fix the timing issue in throughputlogger
updated VM version checks to use Platform . isDebugBuild ( ) in CompilerConfigFileWarning . java and ConfigFileWarning . java , and added VMOption
refactor meter statistics management to use a map for better clarity and maintainability to enhance code readability and maintainability by utilizing a
refactor logback configuration handling in FrameworkLauncherExtended . java to improve clarity and ensure correct system property resolution
updated method signatures to use @ NotNull annotations and renamed DefaultCookieValueManager to NoOpCookieValueManager to improve null safety and clarity in
replace ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in ` ExecutableMacroExpander . java
[ hotfix ] [ test ] fix container leak in httpwaitstrategytest
rename the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to improve clarity and consistency in naming conventions
removed unnecessary whitespace in RelativeDateFormatTests . java to improve code readability and maintain consistency in formatting
added a method to generate a shield address in RpcApiService to facilitate the retrieval of shield addresses from the wallet
changed return type of readConsoleInput ( ) method from byte [ ] to String and updated its implementation to return an empty string instead of a
updated regex patterns and initialized sRunFlavor in TestStabilityRule . java to improve matching accuracy and ensure proper handling of platform identification
added a condition to limit fragments based on score in DefaultSolrHighlighter to ensure that multi - valued fields do not exceed the number of values
updated the ` tryToLogin ` method to accept additional parameters for username and password to enhance the method ' s flexibility by allowing users to
removed unnecessary imports and updated entity handling logic in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to streamline entity management
fixed checkstyle issue in camel - jms
removed the wrapping of a collection in the update method to simplify the method call by eliminating unnecessary wrapping
added logging functionality to handle IllegalCurrencyException in BTCEAdapters . java to improve error handling for unknown currencies during currency conversion
refactor subscription creation logic in DurableConduitBridge . java to improve clarity and efficiency to enhance code readability and maintainability
pdfbox - 4892 : increase default value for ` ` spacingTolerance ' ' , ` ` averageCharTolerance ' ' and ` `
updated the ` startController ` method to accept a boolean parameter for tenant isolation and added new methods for creating broker and server tenants to enhance
replaced ImmutableMap builder with direct casting for response value to simplify code and improve readability by eliminating unnecessary type casting
added a check for non - empty attrs before validating its size in ProjectWorkspace . java to ensure that attrs . size ( ) is greater than
added methods to retrieve project properties and updated related classes to use IjProjectConfig instead of BuckConfig to enhance project configuration management by allowing
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to improve code readability
added tests for handling user - specific authentication tokens in the GrantedAuthorityEffectiveAclsResolver to ensure correct handling of user - specific principal types
javaparser : use get solvedjavalangobject ( ) instead of reflectionmodel . getclassdeclaration ( object . class ,
added button count management logic in XToolkit . java to ensure proper handling of button mappings based on available buttons
updated import statement from ` jdk . testlibrary . Asserts . assertEquals ` to ` com . oracle . java . testlibrary .
added a new ` MessagePackFactory ` class and refactored the ` newUnpacker ` method in ` MessagePack . java ` to
[ 1.19 . x ] add is _ desert and is _ cave biome tag , fix # 119 .
renamed the method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming conventions
added conditional checks for horizontal layout and updated UIID assignments in ComponentGroup . java to ensure proper layout management based on horizontal state and element UI
replaced the use of DOI _ URL _ PATTERN . matcher ( identifier ) with matcher in the URL validation logic to improve clarity and
replaced ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLockless
[ java ] make sure commit position counter be close to avoid deadlock .
# 1841 - add example for @ record ( id = ' ' id ' ' )
added error handling for malformed URLs and improved port resolution in HttpConverterRegistrar to enhance robustness and robustness of address parsing logic
cloudstack - 4892 : do n ' t ignore storage _ offering and storage _ offering in listvirtualmachines api response
replaced ` dir . openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` dir . fileLength ( fileName
refactor JavascriptCompiler to use a new generateClass method and improve exception handling to enhance code clarity and maintainability by centralizing class generation
removed synchronization from the ` store ` method in ` UISettings ` to ensure thread safety when accessing ` UISettings `
added a check to return early if native text input is enabled and focus is present , and changed the visibility of the fireDataChanged method from
[ hotfix ] [ spannerio ] add check for emulator only support one transaction at a time
use diamond operator to reduce compiler warning
replaced ` double [ ] ` with ` short [ ] ` in ` ObjectInputStream . java ` and added a new class ` CloneArray .
replaced ` getClaim ( " nonce " ) ` with ` getStringClaim ( " nonce " ) ` in ` OIDCAuthenticationFilter .
added a condition to check if a field is a relationship field to ensure proper handling of relationship fields in DCInputSet
added server slogan functionality to the capabilities table and updated related logging messages to enhance user theming functionality and improve code clarity
updated conditional logic for tinting menu items in DrawerActivity . java to improve clarity and correctness of menu item tinting
replaced a failure assertion with a console output message and added an assumption to ensure tests do not fail if the network connection is not available
added a check to return early if there are no missing symbol events to optimize processing by avoiding unnecessary processing of missing symbols
added a new test case for handling a specific data format in StringHelperTest . java to improve test coverage for various data formats in the StringHelperTest
added a warning log for empty data providers in the Parameters class to ensure that the test does not do anything when the data provider returns an empty
[ camel - 1770 ] use collections . emptyList ( ) instead of collections . empty _ map / empty _ list / empty _ list
[ freeplane ] fix npe when select style do n ' t exist in parent map .
physicsrigidbody : fix typo in setrestitution ( )
added a new file ` AutoFtpActivity . java ` implementing an FTP activity to handle FTP test success and failure scenarios to facilit
refactor code to introduce a variable for token type and handle StringLiteral cases to improve code readability and maintainability by reducing red
added getComponentState methods to ImageViewer , OnOffSwitch , Component , and GenericSpinner classes to enhance component state management in the UI components
added a new class ` RemoteExecutionEnabled ` and corresponding tests in ` BuildableSerializerTest ` to implement serialization and deserialization of ` Boolean `
pdfbox - 4071 : fix typo find by codespell on fossies . org
replaced FileReader with InputStreamReader in ImportCsv . java and added suppression warnings in PublicBAOS . java to ensure compatibility with S355
added a new assertion method ` assertWorkingScoreFromScratch ` in ` AbstractScoreDirector ` to ensure that shadow variables are not stale
updated the configuration key for semi - join conversion from " hive . enable . semiJoin . conversion " to " hive . optimize . semiJoin
added SLF4J logging functionality to multiple datagram - related classes to ensure proper handling of message content and improve debugging capabilities
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated logic in ` FileDisplayActivity
added assertions to validate transaction hash in PollingTransactionReceiptProcessorTest to ensure proper validation of transaction hash in transaction receipt processing
added a deprecated annotation to ISchemaRegion and updated the test method name from " testConstructSchemaBlackList " to " testDeleteTimeseries
added a null check for sampleMimeType in MediaCodecRenderer to ensure that an IllegalArgumentException is thrown when the sampleMimeType is not provided
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23Pool
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to the ` @ AllArgsConstructor ` annotation to ensure that
added a check to throw an exception for creating an index on a view in MetaDataClient . java to indicate that creating an index on a view
added a new ` Website ` class and a corresponding test in ` PopulatorImplTest ` to facilitate the population of the
added a setup method to set the default locale in BSFormatterTest to ensure the test runs in the correct locale for consistency
check for badly download jar file in coremodmanager . listfiles ( )
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve case - insensitive comparison for expected
added checks for single and variable expressions in SimpleExprGenerator to ensure correct handling of single - valued parameters in the expression generation
added a volatile boolean flag ` createdVertx ` and modified the conditional check for ` vertx ` to ensure proper handling of vertx creation
updated NodeStyleBuilder to use a NodeModel instance instead of null for style and size attributes to ensure compatibility with the updated NodeModel structure
updated log messages from " Synchroned " to " Synchronized " in SynchronizeFolderOperation . java and added null checks in FileDisplayActivity
added a new property ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in ` CategoryREST ` and ` FeedREST
replaced instances of ` MavenTestingUtils . getTargetDir ( ) ` with ` MavenPaths . targetDir ( ) ` in multiple test files to
added validation logic for URI and MetaData registrations in RegisterServerConsumerExecutor . java and updated URIRegisterExecutorSubscriber . java to ensure only valid data
updated sound playback state condition in GwtMusic . java to ensure sound is not playing when not paused
added a new permission for the admin area ' s sudo functionality in the MainCommand and Captions classes to enhance user experience by allowing users to
replaced ImmutableMap with HashMap for query options in ServerRequestPlanVisitor to improve flexibility in setting query options based on tracing capabilities
updated file name comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject
refactor assertions in ResourcesTest to use local variables for clarity to improve readability and maintainability of the test code
replaced the existing NMTWaitForDataMerge method with a new NMTOverflowHashBucket method and added a new NMTM
[ hotfix ] [ serializer ] rename either - serializer to java - either - serializer
updated the initialization of ` DEFAULT _ NDOTS ` and ` DEFAULT _ ROTATE _ RESOLV _ OPTION ` in ` Address
added a call to ` super . __ associate ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplateTest
pdfbox - 4892 : avoid npe , a suggest by valerybokov
update schema path from " liquibase / parser / core / xml " to " www . liquibase . org / xml
move commonmimetypetypelocator to test / source so it can be run from the same package .
updated repository version state from INIT to NOT _ REQUIRED in multiple classes to ensure that the repository state is not set to a non - required state
updated the CompareControl instantiation in GenerateChangeLogTask . java to include additional schema comparison parameters to enhance compatibility with different schema types during comparison
[ hotfix ] [ test ] use testng annotation instead of junit one
added a new file ` ProgressiveJPEGTest . java ` for testing progressive JPEG rendering to facilitate testing of the rendering of
replaced alpha test settings with a dynamic alpha discard threshold setting in MaterialLoader . java to improve the flexibility of material loading by allowing dynamic
[ gr - 18686 ] improve error message when building native - image on window
added a null and length check before setting the size in the Label class to avoid potential NullPointerExceptions when the text is empty
modify the readVarInt ( ) method call to include a modulo operation to ensure correct handling of integer values within the range
made PushUtils class final and added private constructors to PushUtils , ThumbnailsCacheManager , and PushUtils classes to enforce immutability
replaced the calculation of ' length ' with a direct call to ' getLength ( ) ' from ' curConfig . getBounds ( ) ' to
removed unnecessary casting of ` dir ` to ` MockDirectoryWrapper ` to streamline code by eliminating unnecessary type casting
updated the filename pattern in the componentPresetDao . load method from " . * " to " ( ? i ) . * " to enhance
added a conditional check for duration and isInApp ( ) before announcing accessibility in TaskbarStashController . java to ensure access
updated the instantiation of ` homeNode ` to use ` RefreshTask . getNodeId ( ) ` instead of ` Args . getInstance ( ) .
added test case for jdk 1.5 and jdk 1.3
replace PowerMockito with Mockito for mocking in QuotaResponseBuilderImplTest to improve test reliability by replacing PowerMock with Mock
added static PrintStream variables for error and output streams in TestSchemaToolCatalogOps . java to improve error handling and stream management during testing
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper constructor and updated the SaslNegotiate
updated MongoQueryMethod to accept RepositoryMetadata as a parameter to enhance flexibility in handling repository metadata in MongoDB queries
refactor entity resolution to support both EntityResolver and EntityResolver2 to improve flexibility and flexibility in handling XML entity resolution
updated import statements in MetaDataEndpointImpl . java to remove redundant constants to streamline the code and improve readability by eliminating redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry logic in TxnHandler . java to
updated variable names from ` xl ` to ` xAxis ` for consistency and clarity to improve code readability and maintainability
added methods to validate and validate printable characters in FsUtils . java and defined a set of supported system names to improve character handling and ensure
[ java ] rename ` ` in ' ' method to ` ` using ' '
[ mng - 5892 ] do not process plugin configuration in defaultmaven . build ( )
updated division operations to use ' d ' for decimal places in ProxyConnectionManager . java and ServerTrafficCounter . java to ensure proper precision in
updated the initialization of ` RESOURCES ` to check for the existence of " google - cloud - vision / src / test / resources /
replaced the return value of " STUB " with null in ModeledConnectionRecord and ActiveConnectionRecord , and added remote host retrieval in
[ ds - 3852 ] add admin button to community list ( # 3852 )
refactor longCompactions and shortCompactions initialization to use AtomicInteger for thread counter to improve thread management and clarity in thread naming
replaced ` getApplication ( ) . getPackageName ( ) ` with ` resources . getResourcePackageName ( R . array . wallpapers ) `
refactor plot player retrieval to use a dedicated method to improve code readability and maintainability by centralizing player visibility logic
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
rename MlibOpsTest . java file to improve clarity and consistency in naming conventions
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _ IMPL
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test case in SchemeGenerator
removed unnecessary null checks for key and iv in UploadFileOperation . java to simplify code by directly using EncryptionUtils for key and iv generation
[ flink - 243688989 ] [ test ] add stability annotation to workprofiletest
removed conditional check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary checks
replaced ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` G
refactor LockFreeBucket class to be abstract and introduce LockFreeBucket _ FinalFields _ CacheLinePadding and LockFreeBucketLayout classes
add tpstats command to nodeprobe to print pending task
updated max bitrate setting to include user preferences in ExternalPlayerActivity and PlaybackController to ensure consistent bitrate settings are applied based on user
refactored span ID checks in ZipkinHttpSpanExtractor and added new test cases in TraceFilterTests to improve code clarity and ensure
move getuserpaymentaccounts ( ) method from mutableofferdatamodel to createofferdatamodel and duplicateofferdatamodel
fix an issue where the right - aligned icon be not be show in the suggestion
added a method to set the project in LauncherUtils . java to ensure the project is properly set before use
updated ` JsBundle ` , ` JsBundleBuilder ` , ` JsLibraryBuilder ` , and ` JsBundleWorkerJobArgsTest ` to
refactor multiple Java classes related to envelope and databinding to improve code organization and maintainability across the application
refactor MetricsDSLContext to improve code organization to enhance maintainability and readability of the codebase
removed the VersionConfig interface and modified the VersionBuckConfig class to streamline the code by eliminating unnecessary interface implementation
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException during binding
changed the visibility of the ` validateTypes ` method from static to public and updated the exception message format to improve accessibility and clarity of
chore ( deps ) : update gapic - generator - java with mock service generation fix
added SLF4J logging functionality to SimulationStatus . java to facilitate better debugging and monitoring of simulation status updates
updated VERSION _ POSITION _ Y and VERSION _ FONT from 138 to 150 and changed the font size from 9 to 14 to improve the visual
added a runLater ( ) method to the notifications list in UserInterfaceComponentImpl . java to ensure notifications are executed on the main thread
added a mock return statement in ReturnsElementsOf . java to enable mocking of return values for testing purposes
updated the error message for non - string partition columns from " non - equality " to " only equal " to improve clarity of the error
added a test for LineFileDocs in BaseStoredFieldsFormatTestCase to ensure proper handling of stored fields in line - file documents
added a method ` getVersionCode ( ) ` in ` MainApp ` and updated references in ` FeatureList ` and ` WhatsNewActivity
camel - 1745 : fixed issue with beaninfo . requestbody ( ) and beaninfo . requestbody ( ) do n ' t
replaced calls to ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in test assertions to ensure consistency in file name
added buffer ownership checks and modified buffer disposal logic in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and
added a transition for " forgotPassword " to the login form in PasswordManagementWebflowConfigurer . java to enhance user experience by allowing
[ hotfix ] [ doc ] fix typo in jerseyclientconfiguration
polish ' remove ' class reference for ' characterstreamreadingmessagesource ' and ' characterstreamwritingmessagehandler '
replaced instances of ` s ` with ` o ` in ` InstanceOfPatternMatchTest . java ` and ` RemoveRedundantTypeCast
added a method to check if an array is empty and updated column and row counts accordingly to ensure proper handling of empty entries in the table
deprecated the ` withCustomizer ` method in ` GenericContainer ` and added ` withCustomizer ` method in ` GenericContainerRuleTest `
updated logging level from info to error in MediaInfo . java and modified test methods to throw ConfigurationException in RendererConfigurationTest . java to improve error
added support for " schemapattern " option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database configuration flexibility by allowing
pdfbox - 4071 : return an empty byte array instead of null when there be no tls session
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve clarity and maintainability of bitmap creation logic
refactor Base64 encoding methods to improve code readability and maintainability
sulong : add fallback support to llvmglobalcontainer .
danielwagnerhall : ignore a test that fail on the iphone
refactor FlowBuilder and FlowJobBuilderTests files to improve code organization and maintainability
replaced ` @ NotNull ` annotations with ` @ NotNull ` for ` resName ` and ` resId ` in ` AttributeResource ` to
resolve docker context tl file if it ' s present in the config file
updated JUnit test annotations from @ After and @ TearDown to @ Before and @ TearDown in SimpleReactiveElasticsearchRepositoryTests
added a loop to handle type variable type variable capture in ppp Attr . java and created a new class T6450290 . java
added logging level configuration to ` LoggingFlags ` and ` LoggingOptions ` classes to enable customizable logging levels based on configuration settings
added logging statements to LauncherModel , SecondaryDropTarget , and ModelWriter for better tracking of package removal and item removal processes to improve debugging
added ` allFilesOption ` method to ` FileActivity ` , ` FileDisplayActivity ` , and overridden it in ` PreviewImageActivity `
added deprecated methods ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` to indicate that these methods should no longer be used
updated the calculation of ` numPredictiveAppCols ` to use a conditional value based on phone type to ensure correct number of predicted app columns
updated String initialization to use UTF - 8 character set to ensure compatibility with UTF - 8 encoding
added a new RequestMatchers class to handle request matching logic to facilitate the use of multiple matchers in the security web application
mow - 285 fix for input box for temporary mode
updated calculations in ProgressBar . java to include bgBottomHeight and bgRightWidth to ensure proper positioning of the knob and its dimensions based
[ native ] fix external _ functions . json path for native native query runner
make extra _ l0 , extra _ l1 , extra _ l3 , and extra _ l4 final in bruteargumentmover
added a condition to check if the handler state is invalidated in the gesture handling logic to ensure proper handling of gesture states when the handler is invalidated
updated layout calculations for landscape and portrait layouts in DynamicGrid . java and Workspace . java to ensure accurate cell dimensions based on layout constraints
added a condition to check if the file is " / robots . txt " in the HttpRobotRulesParser to ensure proper handling of robots .
[ netbeans - 4892 ] fix warning icon for nb - javac library
replaced " continue " and " close " actions with " createWorld " and " return " actions in AdvancedGameSetupScreen . java to
updated the null check in UDFOPDivide . java and added a new test class TestUDFOPDivide . java to
refactor code formatting and improve error handling in FlowJob . java and StopAndRestartFailedJobParserTests . java to enhance code readability
updated filter configuration in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use a matcher for logoutUrl and requiresAuthenticationRequestMatcher to enhance
added onDestroy ( ) method to unbind the upload service in ShareActivity and ContributionsActivity to ensure proper resource cleanup during activity destruction
corrected the spelling of ' thumbnail ' in WallpaperPickerActivity . java to improve code readability and maintain consistency in variable naming
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a call to set the request timeout in RaftServerConfigKeys . Rpc to ensure proper handling of request timeouts in the Raft server configuration
replace error logging with debug logging and modify time index handling in TsFileResourceManager to improve logging clarity and ensure proper handling of time index
added a call to setSystemProperties ( System . getProperties ( ) ) in MavenModuleLoader . java to ensure that system properties are properly set
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS metrics to ServerMeter
fix : register custom itemblock for animatedtorch
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when writer is not initialized
added a method to retrieve Hive configuration from a directory in UtilsForTest . java and updated multiple test classes to utilize this method to ensure
added " Muting Users " link to the documentation in FeaturesActivity . java to enhance user experience by providing a link to the user ' s
added a new property ` jdk . reflect . useDirectMethodHandle ` with a value of " false " to disable direct method handle usage
hbase - 20619 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] remove duplicate code in abstractyarnclusterdescriptor # addenvironmentfolders ( )
updated method calls to retrieve pronunciations and word spelling in BuildTranscriptHMM and TrainerDictionary classes to improve code
removed unnecessary newline characters from JSON string representation in JsonUtilsTest . java to simplify the output format for better readability and maintainability
added extra data for tweetId in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure proper identification of tweets
[ hotfix ] [ runtime ] log a warning when a ringbuffer data be lose in a reliable topic .
make findbugs2 more resilient to miss class
replaced import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to align
replaced the existing boolean variable ` isIncompatible ` with a new instance variable ` isIncompatible ` to improve clarity and maintainability of the
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and consistency in
pdfbox - 4892 : avoid arrayindexoutofboundsexception if range array be empty
resolve http : / / issues . apache . org / activemq / browse / amq - 2590 - fix for amq
enable off - heap star tree format by default
updated title handling in FeedUpdateService to limit the length of the content title to 2048 characters to ensure that the title does not exceed the maximum
updated the initialization of ` previewPanel ` in ` JColorChooser ` and modified the logic in ` BasicColorChooserUI ` to ensure proper
changed log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity for extension checks
added a null check for reusableBitmap before setting bitmapFactoryOptions to avoid potential NullPointerException when reusableBitmap is not available
added a layoutParams field and a method to retrieve its value in FakeView . java to provide access to the layout parameters of the FakeView
added a check to throw an IllegalStateException if the cursor is already closed in DefaultCursor . java to ensure that an IllegalStateException is thrown when the cursor
pdfbox - 4892 : simplify code , a suggest by valerybokov
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private String field ` ts ` with getter and setter methods in ` Message . java ` to provide a way to access and modify the
add more logging to genericexceptionmapper , validationexceptionmapper , and validationexceptionmapper
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
fix : remove legacy hint in isochrone resource
removed the ' public ' access modifier from multiple test classes to enhance encapsulation and improve code readability
refactor CSRF handling into a separate method called setCSRF to improve code readability and maintainability
fix for lombok . launch . shadowclassloader do n ' t work in bootstrap mode .
[ drools - 5892 ] add support for disable numeric cell in rule sheet ( # 5892 )
updated log level from info to debug in HiveConf . java to improve logging granularity for default values
added null checks for axes and buttons in Lwjgl3Controller and modified controller handling in Lwjgl3ControllerManager to ensure
updated ObjectFactory import from cucumber . api to io . cucumber . core . backend in WeldFactory and WeldFactory
refactor port forward saving logic to use HostDatabase for better clarity to improve code readability and maintainability by reducing duplication
added a new property ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter in ` GlobalConfiguration ` , and updated related logic
refactor job scheduling logic to check for null names before starting a job to improve robustness by avoiding potential null pointer exceptions
refactor LocationMarshaller class to improve code organization to enhance maintainability and readability of the code
removed unnecessary trackpad motion event checks in StatusBarTouchController . java to simplify touch event handling logic and improve code clarity
refactor ` VectorReader ` from an interface to a regular class and update its implementation to streamline the code structure and improve maintainability by
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to improve clarity and consistency in usage of Mockito matchers
updated method calls and variable names from ` getRelativePathName ( ) ` to ` getRelativePath ( ) ` across multiple classes to improve clarity and consistency
updated method signatures and parameter types in SegmentMapper , CompositeTransformer , RecordTransformer , and RecordReader classes to include RecordReaderFileConfig to enhance
added a null check for the extractor before instantiation in ` ControllerMethodInvoker . java ` and annotated ` Param . java ` and ` Params .
cloudstack - 4892 : fix max _ secondary _ storage _ ingb / maxproject _ secondary _ storage for project volume
add a new event ` ` potionshiftevent ' ' to the gui ' s screen . close # 489
[ hotfix ] [ runtime ] deprecate cold _ reads _ to _ omit option in sizetieredcompactionstrategy
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to stop the leech thread to ensure proper
[ rocketmq - 6630 ] fix the bug that brokermetricsmanager do n ' t report message count for retry message ( #
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
replaced the @ Test annotation with @ Ignore in ShadowDateUtilsTest . java to temporarily disable the test due to time issue
updated references from ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and changed
added UpgradeRequest and UpgradeResponse handling to JettyTrackingSocket and ClientConnectTest classes to ensure proper handling of upgrade requests and responses in the
added a timeout feature to the AndroidImplementation class to allow customizable connection timeouts
updated getUserAccessPermissions and getTeamAccessPermissions methods to return user and team permissions instead of individual user and team permissions to enhance permission management by
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to verify SQL parsing and deparsing of quoted cast
refactor file access assertions to differentiate between root and non - root environments to improve clarity and correctness of file access checks based on
refactor FixedThreadExecutor to utilize dynamic properties for group and thread counts and improve executor selection logic to enhance flexibility and maintainability of
added null check for the field before processing " catalogname " to prevent potential NullPointerException when accessing the field
replaced ` CasEventListener ` with ` RegisteredServicesEventListener ` and ` ServiceRegistryInitializerEventListener ` across multiple configuration classes to align with the new
refactor animation end handling by extracting it into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added a custom close method to the DeflaterOutputStream class to ensure proper resource management and prevent potential memory leaks
added a new file ` gsp001 . java ` to test ` GetSystemProperty ` functionality to ensure that JVMTI can retrieve
refactor BeanDefinitionInjectProcessor to use AnnotationMetadata for better readability and maintainability to improve code clarity and maintainability by reducing
[ jme ] fix cameracontrol . readenum ( ) and cameracontrol . writeenum ( ) method .
refactor popup window disposal logic in PopupNotificationPanel . java to improve code readability and maintainability
replaced custom NoInstanceException and InvalidInstanceException with a single InferenceException in the Infer . java file to simplify exception handling by
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` variable
changed the parameter type from ` int ` to ` long ` in the ` after ` method from ` int ` to ` long ` to allow
added ` onBuild ` and ` executionDriver ` fields with their respective getter and setter methods to ` ContainerConfig ` and ` Info ` classes
added conditional logic to set icon based on RTL mode in Toolbar and FlowLayout classes to improve UI responsiveness based on RTL
added a boolean flag ` enablePositionIncrements ` to the ` StopFilterFactory ` class and modified the creation of the ` StopFilter `
replaced hardcoded " noreply @ " string with an instance of InternetAddress in EmailsTest . java and SystemErrorEmailReport
added a new boolean variable ` mTryShareAgain ` with a value of ` false ` in ` FileActivity . java ` to track the
added logic to determine if TTY is used based on the version of the JANI native pom properties to ensure compatibility with the JAN
updated variable name from ' bytes ' to ' bytesSize ' for clarity to improve code readability and maintainability by using a more d
replaced direct assertions with Jayway ' s Awaitility ' s await method in Issue410Tests . java to improve test reli
replaced multiple URL constants with a single API _ BASE _ URL constant in EaseeBindingConstants . java to improve code readability and
increase read timeout from 1 / 2 to 1 second and add startup attempts to the Kafka container to improve test reliability by allowing more time
updated the matchers in SearchResultMatcher . java to use is ( itemName ) instead of allOf ( ) to improve clarity and accuracy of JSON
added SSL trust management functionality to OkHttp . java to enhance security by ensuring all SSL certificates are validated before proceeding
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code clarity and maintainability by
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` for field length
added null checks for ` workingDirectory ` and ` stdout ` and ` stderr ` in ` ShellStep . java ` to ensure proper handling of
increase timeout from 1000ms to 2000ms in AsyncAppenderTest . java to allow more time for asynchronous logging operations
updated methods to use ` objectName ` instead of ` tableName ` in the ` escapeDatabaseObject ` method to improve clarity and consistency in object
added a boolean field ` inputChanged ` to track input state changes in ` MaterialRenameDialog . java ` to ensure that input fields are correctly
added a test for state change functionality in ShadowDisplayTest and implemented setState method in ShadowDisplay to ensure that state changes apply to different display instances
[ geos - 6638 ] fix method invocation in dispatcherservice and add test
[ web ] fix for ^ x and ^ y key in gwt
updated SQL query construction to conditionally include pg _ catalog . pg _ depend dep and pg _ catalog . pg _ class to ensure compatibility with
removed initialization of the message variable to allow for null handling in the QueueChannel class
refactor ` getPathsFromResource ` method to use ` URI ` for better clarity and consistency to improve code readability and maintainability
added logic to handle monitoring and monitoring of Jenkins nodes in the CollectorServer to improve monitoring capabilities for Jenkins nodes in the application
refactor header handling to use a dedicated method for resolving attributes to improve code readability and maintainability by centralizing attribute resolution logic
[ flink - 20619 ] [ connector / protobuf ] do n ' t throw eofexception when seek to the end of the file
reformatted the destroy method in DefaultApplicationDeployer and added a shutdown method in NacosRegistry to improve code readability and ensure proper
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator , GoAwayBodyParser , and GoAwayGenerateParseTest to use a new method for writing status
refactor AuditEvent and its tests for improved readability to enhance maintainability and clarity of the code
added checks for FLOAT _ ROUNDING _ ERROR and modified return statement in the Interpolation class to ensure proper handling of floating - point errors and
fix path for default folder in forgeworldedit
refactor code to store the executable path in a variable before adding it to the builder to improve code readability and maintainability
added assertions to verify the equality of ` PointRangeQuery ` instances in ` TestPointQueries . java ` to ensure that ` PointRangeQuery
added a constant for the MOCK _ ARCHIVED _ HFILE _ DIR and updated its usage in the archivedHfileDir initialization to
updated file label assignment logic in ReceiveFileConversationComponent . java to conditionally display the file name based on the transfer request ' s filename to
do n ' t swallow exception in jedisclustercommand
[ hotfix ] [ runtime ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap `
updated QMap benchmarks to use a predefined size of N and added benchmark methods for different data types to improve performance and maintainability of the
added initialization of G _ SCH _ B as a new HashMap in HybridPlotWorld . java to initialize G _ SCH _ B
added checks for empty fields and refactored method matching logic in GroovyEngine . java to improve code robustness and maintainability by ensuring proper
fix for dependent number not be drawable properly .
added SERVER _ READ _ SOCKET _ TIMEOUT and SERVER _ TCP _ KEEP _ ALIVE configurations to HiveConf and modified TServer
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve clarity by indicating the method ' s purpose
# 119 - remove unused import ( # 119 )
replaced anonymous inner classes with lambda expressions in RealtimeSegmentRelocator . java to improve code readability and maintainability by reducing
vpc : remove unnecessary assignment of success variable in createvpccmdbyadmin
updated the calculation of ` windowAlpha ` in ` WindowTransformSwipeHandler . java ` and modified the condition in ` FloatingIconView
updated fatal error message to reference Spring Security 4.0 schema instead of 3.2 schema to ensure compatibility with Spring Security 4.0 schema
refactor multiple assertion and subject classes for consistency and clarity to improve maintainability and readability of the codebase
[ hotfix ] fix checkstyle violation in disruptorprovidermanager
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to utilize it to
updated regex pattern matching in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve robustness of regex matching and ensure
replaced multiple instances of ` logger ` with direct calls to ` LoggerFactory . getLogger ( INTERNAL _ LOGGER _ NAME ) ` to improve code
updated method names from ` updatePurgedShardNodes ` and ` updatePurgedShardNodes ` to ` deletePurgedShards ` and `
added support for the Java language version " 17 " and " 17 - preview " in the JavaLanguageModule to ensure compatibility with the new version
[ java ] wait for compression job to finish in timebasedrollingpolicy .
[ gr - 13434 ] fix assertion in volatilereadnode . isvolatileread ( )
added a method to retrieve an unmodifiable list of steps and adjusted formatting in the ` getStep ` method to improve code readability and maintain consistency in
removed redundant base58 fields from JsonRpcApiUtil and TronJsonRpc classes to streamline code and improve readability by eliminating
refactor currency pair creation in BitstampAdapters . java to improve code readability and maintainability
updated measurement to use baseTimeUnit instead of TimeUnit . NANOSECONDS in LongTaskTimer . java and added assertions in MeterRegistryCompatibilityKit
[ hotfix ] [ euphoria ] do n ' t use hashpartitioner in reducebykeytranslator
updated value handling in HostEditorActivity to use CharSequence instead of String and added support for ListPreference to improve flexibility in handling color values and
replaced IncompatibleDatabaseHandler with DatabaseVersionHandler and refactored the putDatabaseVersion method to accept a SystemProperties parameter to improve code
added a constant for the maximum number of tweets in a conversation and updated the condition in a loop to ensure that the number of tweets
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to improve test reliability by allowing
http : / / issues . apache . org / activemq / browse / amq - 2596 - ensure that the persistent byte
fix checkstyle issue in entity / passive / glowserver . java ( # 686 )
refactor the grow loop logic in DataIO . java to improve code readability and maintainability
removed unused import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide a way to retrieve the submitted file name
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure that the fragment is marked as read for loading
added ` ClassNotFoundException ` to method signatures and modified exception handling in ` JarInstrumentor . java ` to handle ` NegativeArraySizeException ` to
added a method ` checkForSpillPossibility ` to handle spill behavior in ` HashAggTemplate ` to ensure proper handling of out -
updated variable declaration from ` info . info . getDocStoreSegment ( ) ` to ` dsName ` in ` IndexWriter . java ` to
added a default name ID format in SamlProfileSamlNameIdBuilder to ensure a valid name ID format is used when no supported name formats
added a redirect setting and an error message for password change aborted in ChangePasswordPage . java to improve user feedback when password changes are aborted
added a semicolon to the end of a block in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide access to the maximum idle time for
deleted the FontScalingTest . java file to remove unused font size checks to streamline the codebase by eliminating unused code
added validation for filter begin and end dates in RRD4jPersistenceService . java and changed log level from warn to debug in RRD
added checks to return early if numVectors is less than or equal to zero to optimize performance by avoiding unnecessary operations
test : migrate executablereftest to junit 5
added null checks before setting view and glass pane in JLayer . java and created a new test class bug6994419 . java
camel - 18443 : added wiretap to support dynamic expression in dynamic route . thanks to jbellis for the patch .
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
[ hotfix ] [ table - planner - blink ] add planner . enable _ topn option
[ java ] remove redundant aerondirectoryname assignment in agent test .
fixed - rbatch . ping ( ) and rbatch . execute ( ) method do n ' t handle queued command correctly
replaced InputStream with URL in HiveConf and removed LoopingByteArrayInputStream class to simplify configuration variable handling and improve resource management
replaced ` Device . defaultDevice ( ) ` with ` criteria . getDevice ( ) ` in ` BaseModelLoader . java ` to ensure
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to ensure proper menu inflation and item selection behavior
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
fix : hawtio home directory should be relative to the hawtio . dirname system property
added a condition to return single space if comments are empty and whitespace is empty to ensure proper handling of empty comments and whitespace in the code
added volatile keyword to several instance variables in multiple classes to ensure thread safety during concurrent access to these variables
removed printStackTrace ( ) method call from Throwable class to streamline error handling by eliminating unnecessary stack trace printing
move customitemdroptest to spongecommon - mctester - integration - regression
added a check for non - existent partitions in DDLTask and introduced a boolean flag for ifNotExists in DDLSemanticAnalyzer to enhance partition
refactored input handling in NfsSecondaryStorageResource . java for improved readability and efficiency to enhance code clarity and maintainability
[ hotfix ] [ runtime ] remove unused controlrequeststreamid in clustered service node
added spatial operators and a test for supported spatial operators in the CapabilitiesTransformer and WFSTestSupport classes to enhance support for spatial operators in
added import for LuceneTestCase and annotated BasicDistributedZkTest with AwaitsFix to address issue SOLR - 2161
added a condition to check for client preface presence in the Http11InputBuffer to ensure proper handling of client preface parsing logic
[ java ] set aeroncluster . ingressexclusivity to false by default .
replaced static final strings with an array of cache keys in HBaseStorageHandler . java to improve flexibility by allowing multiple cache keys to be
added methods to track the running record count and updated the context pushing logic to improve clarity and maintainability of record processing logic
added filtering of out years from mergedItems in CategorizationFragment to ensure only relevant items are processed in the categorization fragment
updated drawColor method calls in CacheableTextView , CellLayout , and HolographicOutlineHelper to use zero mode instead of a
added a check for OpenGL 2.0 availability in the render method to ensure compatibility with OpenGL ES 2.0 rendering methods
added context management for the action execution in BackgroundProcess . java to ensure proper context management during process execution
updated methods in BaseSemanticAnalyzer , QBParseInfo , and SemanticAnalyzer to include a database name parameter to improve table name handling and
added a connection timeout configuration in TestConnections . java and changed the ' count ' variable to be final in StubConnection . java to improve connection
added multiple assertions for the ` approx _ percentile ` query in ` TestHiveAggregationQueries . java ` to ensure that the query behaves
updated ` DEFAULT _ IDLE _ TIMEOUT ` from ` Duration . ZERO ` to ` Duration . ofSeconds ( 30 ) ` and refact
updated the way shared shares are retrieved by using ` user . toPlatformAccount ( ) . name ` instead of ` account . name ` to
updated type parameters for InetAddress and NetworkInterface in Inet6Address . java to improve type safety and clarity in enumeration handling
updated variable names and refactored button enabling / disabling methods in PlaybackControlView . java to improve code clarity and maintain
updated session handling in Session . java and Token . java to use a session ID instead of a session object to improve clarity and consistency in
replace ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to
[ fix ] disable exception probability by default
updated the color assignment logic in PredictedAppIcon . java to differentiate between themed and non - themed icons to improve visual
guac - 1845 : refactor mysqluser init method to accept userID , username , password , and permission set
added " centre " alias to the aliases in the Middle class to enhance functionality by integrating centre - specific functionality
added DirectUpload import and injection method in CommonsApplicationComponent . java , and made DirectUpload class public in DirectUpload . java to enhance
added space adjustments for left and right axes in BarChartActivity and adjusted formatting in BarLineChartBase and YAxisRenderer to improve layout
added checks for additional Java ABI flavors in AndroidLibraryDescription . java and JavaLibraryDescription . java to ensure compatibility with additional Java AB
added a new request parameter for operation event status type in OnlineHubService . java and initialized the services list in CompositeLogService . java
added debug logging for parameter annotations and implemented a check for the presence of a visibility annotation to enhance debugging capabilities and ensure proper handling of visibility annotations
camel - jbang - use @ setup and @ teardown instead of @ startbundle and @ finishbundle
refactor classpath handling in SortedArrayStringMapTest to improve readability and maintainability of the code
updated the way resource paths are loaded in PackageResourceLoader to ensure consistent file path formatting for Android resources
[ hotfix ] [ dataset ] remove redundant ' this ' keyword in dataset . minby and dataset . maxby
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to a known issue b / 243855320
updated error message formatting to escape percent signs to ensure proper formatting of stack traces in error messages
fixed - jcache . close ( ) method do n ' t call cachemanager . geturi ( )
reduce log level of commandcontext exception when it be already claimed
added a conditional block around the ALPNClientConnectionFactory initialization in HTTP2Client . java to ensure proper initialization of the ALPNClientConnectionFactory
change entitypropertiespacket to use basevalue instead of value
[ sonos ] only play mp3 notification sound if the speaker be initialize
increased the timeout duration for countDownLatch . await from 500 milliseconds to 5 seconds in multiple test files to allow more time for asynchronous
changed log level from info to debug in LightThingHandler . java to provide more informative logging for unsupported effect light type resolution
cloudstack - 4892 : fix asyncjobmanagerimpl to use a fixed thread pool for job execution
updated import statements and method signatures in Reporter , ReturnsSmartNulls , and Mockito classes to improve code clarity and consistency in method signatures and
refactor ` generate ` method to remove unnecessary casting of ` DataFrame ` to improve code readability and maintainability
refactor multiple module - info . java files to improve code organization to enhance maintainability and readability of the codebase
fix orc page source factory to work with empty orc file
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine ` class to enhance audio playback functionality
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
updated calculations in ` FinderPatternFinder ` and modified test cases in ` QRCodeBlackBox1TestCase ` and ` QRCodeBlackBox
removed unnecessary checks for presence of leadingIncludePaths in PreprocessorDelegate . java to simplify the validation logic for presence of leadingIncludePaths
[ fix ] fix npe in stringtemplate . ismatrixmultiplication ( )
simonstewart : add find and findall to the list of search method
fix e - ac3 passthrough when format . samplerate be not set
add a method to get and set formula in the xssfname , so that it can be use in the xssfworkbook
increased the target long value from 60000 * scaleFactor to 90000 * scaleFactor to accommodate larger data sizes
mondrian : fix arrayindexoutofboundsexception in simpletypegt
added a new test class ` ClassPathXmlJobRegistryContextTests ` to verify job retrieval from ` ClassPathXmlJobRegistry ` to ensure
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 : camel - restlet - fixed the camel - restlet error of camel - restlet
camel - 14863 : camel - core - optimize log component to reduce object allocation
refactor ChromeTraceEvent handling by extracting it into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability
added status checks before adding limit orders in HuobiAdapters . java to ensure only relevant orders are added to the limitOrders list
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to improve image layout handling and ensure correct pixel stride calculations
updated timestamp handling in Event . java and JrubyEventExtLibrary . java to utilize JrubyTimestampExtLibrary ' s RubyTimestamp class
added a check to return the resource if the path ends with a slash in ContextHandler . java and created a test for real path existence in
replaced TYPE _ ERROR _ THROWER _ SETTER with TYPE _ ERROR _ THROWER _ GETTER in ScriptFunctionImpl to
renamed variable ` amt ` to ` scrollAmount ` for clarity to improve code readability and maintainability by using a more descriptive
added null check for callerLoopScope before setting guardsStage and stageFlags in GraphDecoder . java to avoid potential NullPointerException when callerLoopScope
test ( refactor ) : migrate sniperprettyprinterjavaxtest to junit 5
refactor URLOutputStream usage to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added Entity annotations to the Mail class to ensure proper entity management during entities
updated default values of " includeTablespace " from false to true and added a new command parameter " -- includeTablespace = < true |
added getter methods for ` metaDataBuffer ` and ` valuesBuffer ` in ` CountersReader ` to provide access to these buffer properties for better
added a flag to handle reading non - empty files in ScanBatch and implemented a test for empty files in TestJsonReader to ensure that empty
updated failure message formatting in StringSubject . java and modified assertions in StringTest . java to improve clarity of failure messages for better debugging and
added a regex pattern to check for specific library names in LibUtils . java to improve robustness by ensuring only valid library names are processed
updated exception handling in JrtJavaBasePackages and PackageHelper to catch both Exception and Error instead of ClassNotFoundException and NoClassDefFoundError to
hbase - 15921 masterfs should wait for dfs ' s safemode before try to write to it
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and message to improve clarity of error reporting for
refactor : remove unused code in defaultplugincache
[ jabber ] do not dispatch the presence status change event if the contact be not online .
no effective change - code cleanup - remove unused method
added a new integration test class for fetching account information in BTCE exchange to ensure proper retrieval of account information from the BTCE exchange
added mouseWheel method to VDUInput and vt320 classes for handling mouse wheel events to enable custom mouse wheel functionality for better user interaction
refactor library path setting to use a local variable for clarity to improve code readability and maintainability by reducing redundancy
# 113 - remove deprecate @ columnhstore from ebean - annotation
add player _ skin _ flags ( 10 , byte , humanentity . class ) to the metadata index , fix # 269
updated LoadBalancerWithServiceTests to use the master URL logging and refactored service creation logic to improve logging clarity and streamline service retrieval
added curly braces to method declarations in MapService . java to improve code readability and maintainability
replaced System . getProperty with AccessController for retrieving the operating system version to improve security by using privileged actions for property retrieval
updated file suffix handling in TemplateEngineFreemarker to allow configuration of the freemarker file suffix to improve flexibility in
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure
added animation callback to hide - HDragger and hide - HDraggerRightPanel animations in ToolbarPanel . java to improve respons
fix ( textfield ) : use bind when caret be not present
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to utilize CxxBuckConfig for
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` in multiple files to standardize naming conventions and improve code clarity
added a null check for passwordAttribute before setting it in ldapAuthenticator to avoid potential NullPointerException when passwordAttribute is null
added a check for array types in DataUtilities and created a test for default values in DataUtilitiesTest to ensure proper handling of array types in
updated SSL engine creation logic to handle null addresses and client authentication to ensure correct host name verification based on client authentication settings
[ hotfix ] [ table - common ] fix test failure in testfstabledescriptors
simonstewart : make sure we delete all cooky in the ie driver , not just the current one .
added a flag to track launcher transition state in AbsSwipeUpHandler and modified controller recreation logic in RecentsView to ensure proper
added charset attribute " utf - 8 " to HTML tags in HTMLListWriter and HTMLWriter to ensure consistent character encoding in HTML output
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
updated the maximum length of the stats key prefix from 200 to 150 and refactored path separator handling in multiple classes to improve flexibility in
added a new class ` bug6337518 ` extending ` BasicComboBoxUI ` and modified ` comboBox ` addition in ` BasicComboBox
rename TestRandomAccessBuffer . java file to improve clarity and consistency in naming conventions
refactor UserInfoActivity to improve code readability to enhance maintainability and ease of understanding
added ` HomeContentProvider ` import and implemented ` notifyChange ` method in multiple service classes to ensure changes are sent to the correct content URI
added functionality to manage the ` mStayPressed ` state in ` BubbleTextView ` and modified activity behavior in ` Launcher `
updated ` getFallbackResponse ` method signatures to include an ` Throwable ` parameter across multiple classes to enhance error handling by providing more context during fallback
removed the condition checking if ` env . _ compile _ only ` is true in ` DumpBytecode . java ` to simplify the code logic
added null checks for tags before accessing their indices in ChannelUri . java to prevent potential NullPointerException when tags are null
updated JAVA _ REGEX _ SPECIALS in RegexpUtil and modified test method names in TestSqlPatterns to improve regex matching accuracy and clarity in
added action bar title handling in FileActivity and updated file display logic in FileDisplayActivity to ensure the action bar title reflects the current state
updated type retrieval from ` Iterables . getOnlyElement ( convertedElements ) ` to ` Iterables . getLast ( convertedElements ) ` and added a
updated the scheduled time from " * " to " 0 " in the CleaningService class to simplify the scheduling process by removing unnecessary minutes
added logic to validate table structure for partitioned tables in TransactionalValidationListener . java to enhance validation of table structure for partitioned tables in the
added a configuration option for polling in the ReplicationHandler and SnapPuller classes to enable polling functionality in the replication process
changed ` generatedKey ` type from ` int ` to ` long ` and modified SQL execution logic in ` ShadowSQLiteDatabase . java `
simplified the retrieval of the proxy object in SimpleReferenceCache to improve code readability and maintainability
inlining error message should be more descriptive than ` ` not inline ' '
camel - 18443 : make keepalivetimeout configurable in webclientfactoryimpl
deleted the HttpTestAccount001 . java file to remove unused test code to streamline the codebase
updated exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and modified tests in ` DispatcherTest . java ` to
camel - 14863 : camel - cxf - fix the issue that camel - cxf do n ' t support the cxf message
added a case for the ' ~ ' character in ClientUtils . java to handle the ' ~ ' character in client operations
camel - slack : camel - slack - allow to configure the consumer ' s delay . thanks to jbellis for the patch .
fire blockharvesting event instead of blockdropped event . close # 1186
updated layout dimensions from 4 * to 5 * in TranscodingTab . java and modified checkbox text formatting in JCheckBox . java to improve layout
added a new file ` bug8057791 . java ` to demonstrate the use of a NimbusLookAndFe
updated flag assignment logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and functionality of
do n ' t register websocket when engine api be not available
changed the condition from checking if ' to ' is not empty to checking if ' to ' is not null to improve null safety and prevent potential
refactor ParquetFixedWidthDictionaryReaders to handle dictionary reading differently based on the use of BigIntVector to improve performance by avoiding unnecessary
refactor layout handling in PortraitPagedViewHandler to improve layout consistency and clarity to enhance readability and maintainability of the
added new annotation classes ` Log ` and ` LogInterceptor ` in the ` org . apache . shenyu . examples . springcloud
updated the ` toString ` method in ` QueuedThreadPool ` to include a check for non - empty trace arrays before adding it to the dump
added an Optional < Implementation > parameter to several methods and updated related logic in CacheGenerator and CacheProvider classes to enhance flexibility in handling cache
added totalFrameSize parameter to createReferenceMap method in FrameMap . java to ensure accurate representation of the total frame size in the reference map
refactor TypesafeConfigurator for improved clarity to enhance maintainability and readability of the code
add karaf integration test for camel - graphql
refactor RFE2891944 . java by adding two static methods , bug1 ( ) , bug2 ( ) , and bug
replaced URL encoding with direct key and value appending in HttpClientIntroductionAdvice . java to simplify code and improve readability by
refactor unsupportedPlatformTool to a new class UnsupportedPlatformTool to improve code readability and maintainability
updated the loopCount variable type from double to int and modified the logging statement to use milliseconds to improve clarity and accuracy of recovery delay in
added a size ( ) method to FlightConfiguration and FlightConfigurationImpl classes to provide a way to retrieve the size of the flight configuration
( chore ) camel - jbang - address - manager : fix test
updated column specifications and row specifications in VLCVideo . java to improve layout consistency and clarity in UI components
updated references from " bisq " to " bitsquare " in multiple Java files to ensure consistency and accuracy in resource URLs across the application
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
ensure user . m2 / user . xml file exist before use it
added binding of GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure compatibility with OpenGL ' s array buffer handling
refactor ServerHttpSecurity class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers handling in HttpClientProperties and CasCoreHttpConfiguration to support custom HTTP headers in the HTTP client
improve error message when user password be not valid
deleted the NoOpConfigPathGetter . java file to remove unused configuration path getter functionality
replaced codec . base16Decode with Bytes . fromHexString for signingKey to improve code readability and maintainability
replaced ` CascadedStyle ` with ` CSSName ` and added validation for float values in ` FloatUtil . java ` to ensure
improve javadocs for planningfactproperty , planningcollectionproperty , planningfactproperty and planningscore
replaced instances of ` getDefaultHeaders ( ) ` with ` defaultHeaders ( ) ` in ` RestUtils ` and ` WebsocketUtils `
replaced ` String ` encoding with ` Charset ` charset in ` ProxyServer ` and ` Realm ` classes to improve clarity and consistency
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
replaced ` Long . valueOf ( ) . compareTo ( ) ` with ` Long . compare ( ) ` in ` ExpandableUploadListAdapter
change defaultjdkhttpclient to use debug log level instead of error
updated import statements in LegacyAuthenticationHandlerAdapter . java to improve clarity and consistency in naming conventions
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
filtermanager : do n ' t try to remove the filter from the network if it ' s not our own .
move wrap ( inputstream in bcpginputstream ) to bcpginputstream .
replaced DataOutputStream with BufferedOutputStream and added a try - finally block for resource management to ensure proper resource management and avoid potential memory leaks
added a new test method ` testSelectAllFromView ` and updated assertions to use ` tableName ` instead of ` colQualifier ` to ensure
rename FocusTransitionTest . java file to improve clarity and consistency in naming conventions
replaced the GWT import from ` org . gwtproject . core . client . GWT ` to ` com . google . gwt .
added a check for ` MapRedTask ` instances before attempting to retrieve job counters to ensure proper handling of ` MapRedTask ` instances and
removed unnecessary whitespace in HttpInput . java to improve code readability and maintain consistency
refactor color setting logic into a separate method called changeComponentColor to improve code readability and maintainability by reducing duplication
updated the parameter from ` false ` to ` hidden ` in the constructor of ` TaskHelper ` to ensure the method correctly reflects the intended
resolve intermittent failure in failovertimeouttest
pdfbox - 4892 : fix resource leak , a suggest by valerybokov
updated imports in BoundSql , SqlSource , and LanguageDriver classes to utilize DefaultParameterHandler to improve code clarity and maintainability by
[ fix ] linear scan optimization : do n ' t apply spill optimization if the loop depth do n ' t match
[ micronaut ] [ test ] add test case for groovy code generation
refactor PgResultSet to use a new method ` closeInternally ( ) ` for closing resources to improve code readability and maintainability by
set default value of serviceAdvisorType to ServiceAdvisorType . PYTHON to ensure proper initialization of service advisor type
replaced the ` resolver ` variable with a ` ThreadLocal < ResolvingDecoder > ` instance in ` GenericDatumReader . java ` to
replaced ` Collection ` with ` List ` in the ` Path ` constructor and modified the return type in ` PdfContentStreamProcessor ` and
replaced direct byte array instantiation with a method call to generate random bytes in SendCoinShieldTest . java to improve code readability and
added a method to set personalisation in SkeinParameterSpec for formatted date strings with a specified locale to enhance flexibility in handling different
removed redundant condition checks in CodeGenerator . java to streamline code logic for better readability and maintainability
removed the ` percent ` parameter from the ` scroll ` method in multiple classes to simplify the method signature by removing unnecessary parameters
changed the access modifier of the ` pointer ` variable from private to public and added ` reset ` and ` resetTo ` methods in ` Flat
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
[ cfr ] fix boolean cast to int _ one and int _ zero in cfr
replaced ArrayList with a boolean flag for determining if the accepted media list is empty to improve code readability and maintainability by reducing unnecessary
added a new boolean variable ` false ` to the TaskView class to indicate that the task view should not be displayed in the UI
added a method ` isAutoIncrement ( ) ` in ` LiquibaseDataType ` and its implementation in ` LiquibaseType `
initialize errorText with a default value of " Command failed due to Internal Server Error " to provide a clearer error message for better debugging
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils , and added JVM options to enhance
replaced calls to ` toSimulate . add ( currentStatus ) ` and ` toSimulate . add ( boosterStatus ) `
added AJP connector setup and configuration in GitBlitServer . java to enable dynamic port binding for AJP connections to enhance flexibility in
added type coercion logic for intersection types in TransTypes . java and created a new Intersection03 . java file to ensure correct type
renamed the class ` EmbeddingTest ` to ` EmbeddingITest ` to improve clarity and consistency in naming conventions
refactor thread creation in WToolkit to use a native method for starting the toolkit thread to improve code readability and maintainability by
[ gr - 13939 ] use a forkjoinpool in bundlecontentsubstitutedlocalizationsupport to optimize performance
add workaround for pgraphicsopengl . setvisible ( ) on window
updated the temporary directory path in AbstractRecordExtractorTest to use the current class name instead of a hardcoded string to improve clarity and maintain
added configuration parameters for enabling fullNodeHttpEnable and solidityNodeHttpEnable in CommonParameter and updated related service additions in FullNode and
added a new property ` service ` to the ` GoogleCloudFirestoreTicketDocument ` class and implemented the ` countTicketsFor ` method
refactor Generate class to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] [ table - planner - blink ] fix json _ format ( jsonmap ) to return null
added a new constant ` DOTS _ ONLY ` and updated width calculation logic in ` BadgeRenderer ` , modified color handling in ` Icon
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to enforce immutability
added a test for invalid excluded package name patterns in OgnlUtil to ensure that an exception is thrown when setting an excluded package name pattern
updated device Udid assignment logic to handle platform name " mac " to ensure compatibility with different operating systems
replaced error logging with warning logging and updated HTTP response handling in DefaultHttpClientFilter and TestDefaultHttpClientFilter to improve logging clarity and ensure
refactor context binding and execution logic in AllAppsView . java to improve code clarity and ensure proper execution flow when mScript is not
added a new boolean flag ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to handle text rendering based on its
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database tables and views during tests
added a line to retrieve the parser from the parsers map to ensure proper access to the parser associated with the specified name
removed unnecessary whitespace in BoundedLocalCache . java and added a new test method in BoundedLocalCacheTest . java to improve code read
refactor RawConnection to extend WebSocketConnection and implement complete and flush methods in WebSocketAsyncConnection to improve connection handling and manage frame completion and flushing
added two new test methods for asserting multiple assertions in SoftAssertionsPerfTest . java to improve test coverage and ensure correctness of assertions
added a test failure exit code check in PythonRunTestsStep and modified its execution logic in PythonTestIntegrationTest to ensure proper handling of test
refactor conditional logic in GlyphLayout . java for better readability and handling of glyph processing to improve code clarity and ensure proper processing of
refactor score comparison in TestBooleanRewrites to use streams for improved readability and efficiency to enhance code clarity and maintainability by
updated the method for retrieving the enclosing class of an anonymous class from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` to
move connection . flush ( ) from playersocketconnection to connectionmanager . flush ( )
added a check for ` mStarted ` before removing the OnDrawListener in ` Launcher ` and ` LauncherAnimUtils ` to prevent
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
replaced specific imports with wildcard imports in ReplicaAssigner . java and updated conditional check to include NOT _ APPLICABLE to streamline import
updated the return value of getBoolean ( MEDIAPARSERV2 , false ) from false to true in RendererConfiguration . java to enable media
fix : do n ' t generate aop proxy for aop method with @ aop .
added assertions and permission verification for the " TRUNCATE TABLE " operation in FolderPermissionBase . java to ensure that the " TRUNCATE
do n ' t publish status for provider in wrong state
updated the random color generation logic in PastelColor . java to improve the accuracy of random color generation based on a specified base value
refactor ScriptEngineFactory to improve code organization to enhance maintainability and readability of the code
updated bitmap handling in HolographicViewHelper to utilize original and outline images to improve visual consistency and clarity in image rendering
refactor request method handling to use HttpMethod . fromString ( ) for improved clarity to enhance code readability and maintainability by reducing
add a new method to infer the position of a word from a tree containing a phrase to improve the accuracy of the preprocessing process by allowing
[ hotfix ] [ test ] fix checkstyle violation in iochannelutilstest
added handling for Hive passthrough output format in mmm Table . java and ppp Table . java to ensure proper class loading based on storage
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added a validation check for the start and length parameters in DOMBuilder . java to ensure proper validation of input parameters for better error handling
refactor conditional logic in ClusteringCoefficient , EigenvectorCentrality , DiameterUI , and GraphDensityUI classes to improve
camel - 16832 - camel - aws2 - translate : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods and created a test class to d
camel - 18443 : defaultkeyselector now support the camelcontext property placeholder . thanks to jbellis for patch .
replaced instances of ` ThreadDeath ` with a more general ` throw ` statement in ` LogResolverBean . java ` to simplify exception
refactor multiple certificate - related classes to improve code organization to enhance maintainability and readability of the codebase
updated JGit version from " 1.0 . 0 " to " 1.1 . 0 " and sorted the jars in multiple files to
updated client key handling in HttpClientIntroductionAdvice to ensure consistent retrieval of client path from clientAnn to improve code clarity and
int - 1344 add the transformer configuration to the spring xml config .
replaced BACK _ FACTOR with REWIND _ TIME and adjusted related conditions in ResumeObj . java to improve clarity and functionality of
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and modified ` Button ` to conditionally
updated usage string formatting in UtilityCommands . java and modified usage logic in DocumentationPrinter . java to improve readability and ensure non - empty usage
corrected the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in
removed setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource . java and updated size checks in RewriteCrossSpaceCompaction
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor rule synchronization logic in ProjectPropertiesModelImpl . java to improve clarity and maintainability of rule synchronization logic
refactor : remove unnecessary synchronization in abstractsootfieldref . getfield ( string , int )
use a custom name convention for elastic meter registry ( # 1186 )
updated imports and method signatures in IController , TinyGController , and BackendAPI classes to use IController instead of AbstractController to improve
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to verify rendering behavior with huge horizontal rules
replace system . out . println with system . tty . println
updated multiple Java files for consistency and clarity to improve code readability and maintainability
[ java ] make sure frame length be less than or equal to zero in loginspector .
replaced return statements for zeroValue with return defaultValue in IntFloatMap and IntIntMap classes to improve clarity and consistency in handling zero
refactor image setting logic to run on the UI thread using Runnable for improved performance to ensure that UI components are refreshed on the UI thread
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerException when registered is null
simonstewart : remove node . hasnextSibling ( ) in favor of node . hasnextSibling ( )
added null check for results before accessing its size to prevent potential NullPointerException when results is null
updated logging statements in MobFileCache . java to include cache size and eviction periods to improve visibility into cache configuration for better debugging and monitoring
refactor ColConvCCMTest class to improve code readability to enhance maintainability and facilitate future updates
refactor variable declarations to use local variables instead of instance variables to improve code readability and maintainability
pdfbox - 4892 : fix some generic warning and add some javadocs
replaced ` Float . toString ( jsonData . asFloat ( ) ) ` with ` asString ( ) ` and added a new class ` X
added a return statement in GenericFileConsumer . java to prevent potential NullPointerExceptions during file operations
added an EventQueue . invokeLater call in bug6638195 . java to ensure that the delegate method is invoked on the Event Dispatch
updated the method call from ` getMaxBinaryMessageBufferSize ( ) ` to ` getMaxBinaryMessageSize ( ) ` in ` CompressExtension . java
corrected the calculation of steeringValue in multiple test files to ensure correctness of steeringValue in various scenarios
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
refactor JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp conversions to improve code clarity and maintainability by standardizing date and
updated VERSION from 2 to 3 and modified metadata handling logic in ParseData . java to ensure compatibility with newer versions of the code and improve data
refactor FlywayAutoConfiguration to use a conditional bean for the FlywayInitializerJpaDependencyConfiguration to improve flexibility by allowing
added a sorted ( ) method call to ClassesImpl . java to improve performance by avoiding unnecessary sorting operations
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer to improve code readability to enhance maintainability and facilitate future updates
refactor memory scope handling in TestCloseScope0 . java to support different versions of MemoryScope and ResourceScopeImpl to ensure compatibility with different
increased the timeout value in the test method from 500 to 5000 to improve test reliability by allowing more time for server socket communication
refactor CaptchaChannelProcessorTests to improve test clarity to enhance maintainability and readability of the test code
added a condition to update the owning collection of an item if it is not the same as the current collection to ensure that the item ' s
added a retry mechanism for saving registry cache files with a maximum number of retry attempts to ensure that save properties do not exceed a defined limit and
updated the constructor parameter from ` mergeDirectory ` to ` directory ` in ` TrackingDirectoryWrapper ` to ensure the correct directory is used for
pmd : fix unusedimports for loop and generic
added validation for insert overwrite on bucketed Iceberg tables in HiveIcebergStorageHandler to ensure proper handling of insert overwrite queries on
updated assertions in BootstrapTests to check for presence of legacy SAML keys to ensure that SAML keys are correctly validated based on the default identity zone configuration
updated the method name from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and added a check for non - static
refactor variable name from ' theAddressie ' to ' addressees ' for clarity and consistency to improve code readability and maintain
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE _
added IOException handling to the release method in Lock and NativeFSLockFactory classes and introduced LockReleaseFailedException class to improve error handling and provide clear
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align the
added a conditional check for unary operators in SpelExpressionTransformer and modified operator handling in LiteralNode , OperatorNode , and OperatorNode classes to
added TypeValidation . DISABLED to ByteBuddy instantiation to disable TypeValidation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in multiple locations in ` JavacRoundEnvironment . java ` to simplify type handling
updated LockModePessimisticReadWriteIntegrationTest to handle PessimisticEntityLockException and modified timeout values in MySQLTableLock
do n ' t override system property if log . file = target / $ pid
added a method to check for redirect status codes and modified the request method to accept a first connection to ensure proper handling of HTTP redirects and improve
added new constants for service mapping , version mapping , and application ID in ServiceCombConstants . java and updated MicroserviceFactory . java to util
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
changed DB _ PATH _ REGEX to static final and added a DB _ PREFIX constant in BaseAndroidTestCase . java to improve code readability
updated return statement to return unread count from HomeDataSource to ensure accurate counting of unread accounts in the HomeFragment
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and modified market price key retrieval in Wallet to limit the number
updated user handling in HomePage . java to check for null user before retrieving user settings to improve robustness by preventing potential NullPointerExceptions
updated the method to retrieve the absolute file path in LocalFileSystem and added a new test for matching relative wildcard paths in LocalFileSystemTest to ensure
added width and height limits to the instance ' s bounds in ComponentBuilders . java to ensure that the instance ' s dimensions do not exceed the
added SLF4J logging functionality to CommonsHttpSolrServer and marked a method for setting connection manager timeout to improve logging clarity and
added error handling for document creation failures in PrintController . java to improve error reporting for document creation failures
refactor filename formatting in CrateType . java and add assertions in RustBinaryIntegrationTest . java to improve code readability and ensure
added checks for empty and numeric words in SpellChecker . java and created corresponding unit tests in SpellCheckerTest . java to enhance spell
removed unnecessary whitespace in the MESSAGE constant declaration to improve code readability and maintain consistency in formatting
refactor file action handling in FileDisplayActivity to improve code readability and maintainability to enhance code maintainability and facilitate easier
added a try - catch block around the logReplicationTimeAndConfFiles method in SnapPuller . java to handle potential exceptions during replication
updated the method call from ` e . update ( 2L , recid , Serializer . LONG ) ` to ` e . update ( rec
renamed the parameter from ' materials ' to ' theMaterials ' and added logic to remove specific RocksimComponentFileColumnParser instances
updated string array entries in DependencyBank . java for consistency and clarity to enhance maintainability and readability of the code
added maximum recycled views for various device profile types in AppsContainerRecyclerView to optimize recycling behavior based on available height and
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that the build process
fix the examplebaritonecontrol so that it do n ' t crash if the player have no block for the mining .
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating Liquib
added null handling logic in FilterOperatorUtils and a corresponding unit test in NullHandlingEnabledQueriesTest to ensure proper handling of null values in query
added validation for bootstrap method ' s signature and argument types in JDynamicInvokeExpr . java to ensure proper handling of bootstrap method arguments and their
fixed the test error of jmshttpjmstest
removed the clear ( ) method call from runtimeOptions to streamline the code by eliminating unnecessary method calls
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and updated return statements in ` AbstractRegistered
added conditional logic to adjust workspace labels based on cell padding to ensure workspace labels are only displayed when necessary for better user experience
updated assertions in ReplicationFactorTest . java to improve clarity and consistency to enhance readability and maintainability of the test code
sulong : allow context to be initialize during pre - initialization .
[ hotfix ] [ test ] remove @ ignore from chaosmonkey test
replace RuntimeException with JsonIOException in Gson . java to improve error handling by using a more specific exception type
replaced ` Integer . valueOf ` with ` Integer . parseInt ` for value parsing in ` VisualScoreTagTest . java ` to improve code
updated error messages and modified file tree walking parameters in Copy . java to improve clarity of error reporting and ensure accurate file tree walking
refactor HLCSegmentName , LLCSegmentName , and SegmentName classes to use a new method for checking low - level consumer segment
added startActivity and startActivityForResult methods to ShadowFragment and corresponding test cases in FragmentTest to ensure proper handling of activity intents and
replaced ` DateTime . now ( ) ` with ` new DateTime ( clockReader . getCurrentTime ( ) ) ` in ` DueDate
added " - target " and " x86 _ 64 - none - linux - android " to the return value in TargetCpuType . java
added a ` deleteAllFiles ` method to ` FileDataStorageManager ` and integrated it into ` ManageAccountsActivity ` to ensure files are deleted
updated command - line option from " - ? " to " - h " in SchemaCrawlerCommandLine . java to improve clarity and consistency in
added a method to create a suite description and updated its equality checks to ensure unique IDs are not null to improve code clarity and prevent potential
replaced the decoding method from ` decode ` to ` decodeBarcode ` in ` SnapshotThread . java ` to streamline the code by
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and its associated logic to simplify the constructor by elim
added unit tests for range calculations in GWCZoomContextFinderTest . java to ensure correct handling of range boundaries in the GWC
added a new configuration option for dependency tracking in JRubyScriptEngineConfiguration and updated its usage in JRubyScriptEngineFactory to enable tracking functionality
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
do n ' t attempt to create a new table if it already exist
refactor WelcomeWindow to use a caching mechanism for image updates to improve performance by reducing unnecessary rendering overhead
updated tuner configuration handling and error logging in multiple classes to improve clarity and ensure proper resource management during tuner resubmissions
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a new test method in ShBinaryRuleIntegrationTest to enhance test coverage for sh
added a conditional statement to set includeString to " db : hsqldb " based on the presence of " db : hsqldb "
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
do n ' t materialize host exception in case of empty stack trace .
do n ' t export the provider to javaci if the service be not need
added test for duplicate command handler resolution
[ flink - 20865 ] [ runtime ] set fine - grained - shuffle - mode to all _ edges _ blocking for batch
fix entityfish hook not work properly in water . close # 4890
camel - ftp - add documentation for ftp and ftp component
rename ` getCommandRunner ` to ` getStepRunner ` across multiple classes to improve clarity and consistency in naming conventions
renamed ` useShortNames ` to ` compressPackageNames ` and updated related methods in ` GangliaReporter ` to improve cl
added a check for empty items in AppsContainerRecyclerView to avoid processing empty items gracefully
added a conditional annotation for the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration . java to ensure a bean is
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3951 - xmllayout
added a new constant ` OMIT _ HEADER ` in ` CommonParams ` and implemented the ` remove ` method in ` NamedList ` to
updated the method to return the property number instead of the ID in EscherProperty . java and added unit tests in TestEscherProperty .
updated method call to use ` Description . getBuildRuleType ` instead of directly accessing ` key . getSimpleName ( ) ` to improve code clarity
fix a crash when remove a method from a class that do n ' t have a hierarchy .
fix null pointer exception in tradingdatavalidation . testifdisputetriesreplay
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` and modified the ` retrieveColumns ` method
wallet : set transactionconfidence . type . not _ seen _ in _ chain to not _ seed
refactor HttpClientIntroductionAdvice to handle Body and Header annotations more efficiently to improve code clarity and ensure proper handling of
fix craftinghelper to handle json file that start with ` ` _ ' ' .
hbase - 15938 region close ( ) should log a warning if the region open fails
refactor length comparison logic in Credential . java for improved clarity and efficiency to enhance code readability and maintainability by reducing redundant
[ java ] fix checkstyle violation in client conductor . java
replaced the method for destroying a process with a direct call to destroyForcibly to simplify the process destruction process handling and
added Oracle support to the conditional check in TestDefaults . java to ensure compatibility with Oracle database scenarios
camel - 18443 : fixed the issue that mailconsumer do n ' t check if the store be connect to the mailstore .
added token validation logic to check if there are more tokens in the query to prevent parsing cancellation when there are more tokens in the query
camel - aws2 - translate : list all the available language in the enum - aws2 - translate
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the ` Voice ` class to handle different model types based
added emailDomain property with getter and setter methods in LdapIdentityProviderDefinition and IdentityProviderDefinition classes to allow dynamic configuration of email domain for the identity
added configuration constants for request read and connect timeouts in the Configuration class and updated the ViewRegistry to use these constants to enhance configuration flexibility and
do n ' t run processDeferredConcepts ( ) if myDeferredConcepts and myConceptLinksToSaveLater be empty
added RedisCategory import and JUnit category annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
updated FindDeprecatedMethodsTest to use parameterized tests and modified method parameters in FindDeprecatedUses to improve test clarity and ensure proper handling of deprecated
added a call to the superclass ' s paintComponent method in OverlayPanel and WaterfallPanel to ensure proper component painting during rendering
removed unused import statements from multiple Java files to improve code clarity and reduce unnecessary dependencies
updated event signature handling in ContractEventTriggerCapsule and added a new method in LogEventWrapper to provide a full event signature for better event
updated filter condition in FileTestHelper to exclude filenames ending with " _ " instead of contains to ensure proper filtering of file names that end with
replaced ` clearRect ` method with ` fillRect ` method in ` MapView . java ` to improve rendering by setting the background color
added an else block to handle invoker compilation errors in PackageBuilder . java to ensure proper error reporting for invoker compilation errors
removed debug print statements from multiple Java files to clean up the code and improve readability
added a conditional check for NaN score values in TestFieldCacheSort . java to ensure that only positive and negative score values are validated to prevent
replaced the direct access to ` oldKeys ` with a copy of ` deviceProfile . getEntityKeys ( ) ` to ensure the original set
added a check for zero - time strings in ColumnSnapshotGenerator and created a new test for date default value in MySQLIntegrationTest to ensure correct
replaced ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and ` t
updated the type of the ` vsContext ` map from ` Map ` to ` Map < ? , ? > ` across multiple collector classes to
[ drools - 5892 ] fix session configuration not be update when edit a kiesession
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to improve code clarity and maintain consistency
added a conditional check to return early if the modalness matches the current modalness to optimize performance by avoiding unnecessary operations when the modalness
added unit test for CodecCapabilities in ShadowMediaCodecListTest . java and implemented native _ getGlobalSettings method in ShadowMediaCodecList . java
add requestfocus to confirm button when enter enter key ( # 5460 )
added validation for width and height parameters in SunVolatileImage , X11SurfaceDataProxy , and XRSurfaceDataProxy , and introduced
updated the thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure consistent formatting
updated AsyncStressTest and StressTest classes to use AtomicInteger instead of an int array for thread - safe operations to improve thread safety and
added beta flavor handling in AchievementsFragment and LeaderboardFragment to manage unavailable achievements to enhance user experience by providing clear feedback
added access , name , and description fields to SearchMethodVisitor to ensure proper access and name retrieval from the context
added sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling to include InterruptedException to improve error handling and ensure proper synchronization during
removed unnecessary whitespace in DLNAResource . java to improve code readability and maintain consistency in formatting
[ te ] remove the required = false attribute from the @ xmlrootelement annotation .
refactor transaction handling in TableReader by introducing acquireTxn ( ) and releaseTxn ( ) methods to improve transaction management and ensure proper resource
use ssl . keymanager . algorithm property instead of hardcoded keymanager - type property
refactor ` getSingleSourceApplicableTest ` method to use ` Applicability . or ` instead of ` JavaIsoVisitor ` to improve code
added exit ( ) method to handle tab key events in Blockmania . java to ensure proper handling of tab key events in the application
replaced ` PACKAGE _ PRIVATE ` access with ` NONE ` access in multiple files to improve clarity and consistency in access specifier usage
renamed the method ` unHandled ` to ` unhandled ` and updated related error logging for improved clarity to enhance code readability and
updated stripes and stripeStats assignments in OrcInputFormat . java to ensure consistent retrieval of stripes and stripe statistics from orcReader
added a null check for the exception in JCache . java to avoid potential NullPointerExceptions during execution
updated URLs from " http " to " https " in MyhentaicomicsRipper . java to ensure compatibility with the latest
added command - line argument handling for the ' v ' option in UpdateUtils to ensure the application displays the current version when the ' v '
use splittokens ( ) instead of split ( ) in sketch . exportlist ( )
added keyboard rotation handling in ConsoleActivity and improved input connection methods in TerminalView to enhance user experience by allowing dynamic rotation options based on keyboard
changed the type of the ` hq ` PriorityQueue from ` HitQueue ` to ` PriorityQueue < ScoreDoc > ` to ensure
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 1745 : added support for camel - headersmap in camel - jbang and camel - jolokia
updated closing brace formatting in JavaCompiler and Diagnostic classes to improve code readability and maintain consistency in formatting
int - 1186 add the ability to configure the jmsoutboundgateway with a custom bean definition .
updated the variable ` i ` from ` i + 1 ` to ` i 2 ` in the ` expecting ` method call to correct the index
refactored script engine handling and improved error logging in AbstractScriptProcessor and InvokeScriptedProcessor to enhance code clarity and ensure proper
added ` org . postgresql . PGStatement ` to the proxy instances in ` PooledConnectionImpl . java ` and implemented a test for
refresh size estimate on test failure
change log level from error to warn in AtomicRemainder . java to provide clearer feedback when no more memory is available
[ flink - 20663 ] [ table - common ] fix aggressive ttl expiration
fixed - rblockingdeque / deque . poll ( ) and rblockingdeque . poll ( ) method throw illegalargumentexception . #
removed unnecessary format parameters from printMap calls in JobInspectCommand to simplify output formatting for better readability and maintainability
refactor Engine class to improve code readability to enhance maintainability and ease of understanding
refactor sorting logic in ChildHolder to use a more comprehensive stream processing to improve code readability and maintainability by using a
[ issue # 5892 ] fix the issue of acl client fail to connect to broker
updated condition from numIndexDims to numDataDims in BKDWriter . java to ensure correct handling of single - dimensional data dimensions
[ hotfix ] [ runtime ] fix npe in notebookserver
replaced the variable ' funN ' with ' lt ' in the addListElement method call to improve clarity and consistency in variable naming
removed the public access modifier from the verifyIdsAreStable and getNodeId methods in NodeIdAccessor . java to enforce encapsulation by restricting
server : do n ' t allow attach volume to vm before create snapshot policy
removed public access modifier from write , flush , and clear methods in ItemWriter . java to simplify method visibility and improve code clarity
updated the parameter of the ThingImpl constructor from an empty string to " test " to provide a more descriptive identifier for the test case
added a ` toString ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest ` to
replaced FSDirectory with RAMDirectory in TestNorms . java to utilize a more efficient directory management approach
added a check for the height of mDrawTextRectBuffer to ensure it does not exceed the defined line height to avoid potential errors when the
refactor WalletAppKit class to improve code readability to enhance maintainability and facilitate future updates
[ netbeans - 4892 ] remove hardcoded hat . js and hat _ nashorn . js from oql
chat transport selector box : remove button group when remove a chat transport .
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
updated bsqBlockExplorer handling to use Optional for better null safety to ensure proper handling of null values and avoid potential NullPointerExceptions
added attributes management functionality to StandardSession and Session classes to enhance session management by allowing retrieval and setting attributes
added assertions to verify the presence of a bean ' s name and alongside attributes in TestDbJson _ List to ensure correct retrieval of
updated the array size in MonotonicAppendingLongBuffer from pageSize to initialPageCount to improve memory efficiency by using initialPageCount instead of
refactor BatchCommandLineLauncher to improve code readability to enhance maintainability and facilitate future updates
added data source and transaction manager beans in BatchMetricsApplication . java to enable HSQL database integration in the batch application
updated the implementation of the GlowrootLogHttpService class from UnauthenticatedHttpService to HttpService to align with the new HTTP service interface
pdfbox - 4892 : set composite to non - composite , a suggest by valerybokov
removed synchronization from the close method in DocumentsWriter and added synchronization for segment refreshing in DocumentsWriterPerThread to improve thread safety by
added methods to retrieve multiple choice options and validation constraints in UiBinding . java to enhance UI component functionality by allowing dynamic configuration of multiple choice options
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency across multiple classes to improve code clarity and
bug fix : only update the stored copy of the tree for a full save
refactor ` Affix ` and ` Dictionary ` classes to use ` Pattern ` instead of ` String ` for condition handling to improve flexibility
replaced explicit generic type declarations with diamond operator in KrakenAdaptersTest . java to improve code readability and maintainability by
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class to improve code organization to enhance maintainability and readability of the codebase
removed unsupported encoding check from VectorizedPrimitiveColumnReader to streamline the code by eliminating unnecessary error handling
added SLF4J MarkerFactory import and modified logging logic in HttpSolrCall . java to improve logging clarity and ensure proper handling of
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure that the metadata service proxy is properly removed when instances are
fix infinite recursion when max level be set to 10
updated error message handling in HubChangeExecListener to include a check for null changelog ID to improve clarity of error messages when a changelog is
added a ` TRY _ HARDER _ HINT ` to track barcode decoding behavior in ` AbstractBlackBoxTestCase . java ` to
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompile
updated the handling of maxEvents and removed the numEvents variable in the loop to simplify the loop logic and improve readability
removed unnecessary logging and simplified the return statement in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability by reducing
fix entityawareworldprovider . removetemporaryblockentities ( ) not be clear .
remove unnecessary type check in IntrinsifyArrayCopyPhase . java to streamline code by eliminating unnecessary checks
[ java ] remove unused logger . setlevel in testcoyoteadapter
replaced the custom ` WantedAnywhereAfterFollowingInteraction ` exception with a more informative ` WantedAnywhere `
added validation checks for ownerAddress and keyAddress in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure proper account access and key
[ zeppelin - 1341 ] fix the order of command in the help output .
chore : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
replaced ` addProperty ` method calls with ` setProperty ` method calls in ` BaseSingleTreeBuilder . java ` to improve code readability and maintain
updated AsmLoader constructor to accept a ClassLoader parameter to ensure proper class loading by using the interface ' s class loader
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
updated Java2TypeScriptTranslator to include " declare " or " export " based on whether the class is a definition scope to improve clarity
replaced EmptyServerHandler with AbstractHandler in HttpClientTest to ensure proper handling of HTTP requests by copying the input stream
refactored inputListener calls in HelloInput . java for consistency to improve code readability and maintainability
added a null check for the lhs variable in AbstractSqmPath . java to ensure a valid SqmPath is used when the lhs is
added package declarations for CreateFolderTest , DeleteFileTest , ReadFolderTest , RenameFileTest , and TestActivity to improve code organization and
refactor AwtCanvas to handle byte - indexed images more efficiently by creating new BufferedImage instances based on their type to improve image processing efficiency
[ gr - 18686 ] fix native image location qualifier not be set properly .
[ hotfix ] [ test ] remove dataflowportabilityapiunsupported from pardotest
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for the classes
refactor CallStack class to improve code organization to enhance maintainability and readability of the code
log a warning if the per - node max size of a map do not allow any data in it
updated return statements to reference " LST " instead of " AST " across multiple files to ensure consistency with LST terminology across the codebase
thirdeye - 389 : fix outofmemoryexception in threadedacousticscorer . getbestjob
replace AssertionError with a return null statement in NetHooks . java to improve error handling by returning null instead of throwing an exception
updated method calls in ApplicationControllerFluentLeniumTest to use window ( ) instead of getServerAddress ( ) to improve clarity and consistency
added a default ` makeString ` method to multiple iterable classes and implemented it in ` AbstractSynchronizedRichIterable ` , ` AbstractMultiReader
updated the order setting in OidcServicesManagerRegisteredServiceLocator to use a constant DEFAULT _ ORDER to improve code readability and maintainability by
updated ` WeakAssociationsAnalyzer ` to accept a ` Predicate < ProposedWeakAssociation > ` parameter and modified related classes to utilize it
refactor Deflater class to improve compression handling to enhance performance and maintainability of compression operations
added a try - catch block that throws an IOException if a Throwable occurs to handle potential exceptions during font operations
added a null and empty check for content in VersionTypeBinding . java to ensure a default version is returned when no content is provided
replaced the private variable ` places ` with a direct return in ` NearbyListFragment . java ` to improve code readability and
updated content type check to be case - insensitive in MailConverters . java to ensure consistent content type handling across different locales
fix openssl key format for private and public key
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding to improve flexibility in handling folder name suggestions based
replaced specific Hibernate imports with a wildcard import and modified cache annotations in InheritanceCacheTest . java to streamline import statements and enhance
updated import path for DefaultOAuth2RequestFactory and implemented getUserApprovalRequest method in TofuUserApprovalHandler to ensure compatibility with the latest
fix influxdb name convention not apply to tag value ( # 645 )
refactor : remove system . out . println in favor of a custom dump method
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection to improve clarity and accuracy of cookie handling
added a static method ` classMetadataUnsupported ( ) ` in ` Platform ` and refactored its usage in ` Subject ` and ` Platform `
added functionality to toggle the visibility of the clear all button and its preference in OverviewActionsView to enhance user experience by allowing users to clear
changed ` desiredRepoVersion ` to be final and added a check for existing ` ClusterStackVersionEntity ` before creating a new one to ensure
deleted the MemoryLeakTest . java file to the test class is no longer needed for memory leak testing purposes
updated the return statement in ServletTester . java to conditionally use the local host address to ensure the returned URL reflects the local host
only hook mvdwplaceholderapi if plotSquared be enable
[ hotfix ] [ test ] fix cluster size assertion in abstractpartitionassignmentscollectionstest
implemented a singleton pattern for the FFIProvider class to enable dynamic loading of FFI providers based on JNA configuration
added a test method ` testHierarchicalWFileList ` in ` BatchProcessTest . java ` to verify the functionality of hierarchical file list handling
added null checks and improved null handling in MongoTemplate . java and corresponding unit tests in MongoTemplateTests . java to enhance robustness and
update position initialization to use NODE _ LIST instead of 0 for direct input and successor counts to ensure proper handling of node lists in position calculations
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and updated related methods to allow retrieval and validation of
updated logging statements to include segment names in ` RealtimeSegmentDataManager . java ` to improve logging clarity by including segment names in log
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java
replace ArrayList with CopyOnWriteArrayList for headerReaders , dataReaders , and readers in FixedByteMVMutableForwardIndex and FixedByteS
fix typo find by codespell on fossies . org
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is null
fix camel - jbang - camel - msv unit test fail on slow machine
updated the condition to check if ` beginCycle ` is greater than ` currentCycle ` instead of equal to ` currentCycle ` to ensure correct
reduced the length of generated codes from 6 to 10 in multiple test files to allow for more flexibility in code generation and validation
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper handling of unique constraints in the filter
refactor MediaDetailFragment to simplify code and improve handling of language codes to enhance readability and maintainability of the code
added catch block for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve error handling by logging recoverable exceptions for better debugging
added reference filtering functionality to the ListImagesCmd and ListImagesCmdImpl classes to enhance flexibility in listing images based on specified references and values
remove bridgeerrorhandler from camel - jms , a it ' s not support on jms endpoint .
added checks for specific line characters in OpExclusionUtils . java and set a default value of " allOps " when no ops are found
added return false statements in DatabaseCommand . java to ensure proper handling of database commands
replaced instances of " blair " , " bush " , " chirac " , " tsar " , and " omn
[ zeppelin - 4892 ] fix npe in beanshellinterpreter when initfile be empty
camel - 10663 : camel - restlet - fixed the restlet component to use the correct port .
remove switch blockid . wind _ sign from schematicformat
added a system property " hive . query . max . length " with a value of " 100Mb " in QTestUtil . java
changed visibility of userName and securityMgr variables from public to private and refactored the createHttpConnector method to baseHttpConfig ( ) to
updated processor names from " writeHdfs " and " writeKafka " to " hdfsSink " and " kafkaSink " across multiple files
updated the logic for determining if the application name is not equal to " spark . app . name " and modified the way Spark application names are
rename variable ` whiteName ` to ` includedName ` for clarity to improve code readability by using a more descriptive variable name
danielwagnerhall : implement window . maximize ( ) and window . restore ( ) in the remote server
updated methods in ` LocalCellProviderFactory ` , ` AbstractEmbeddedCellBuckOutInfo ` , and ` DefaultProjectFilesystemFactory ` to
updated the assertion in TestXMLEntityExpansion to check for the presence of " entity expansions " in the error message to ensure
updated table offset and length assignments to mask values with 0x7FFFFFFF to ensure proper handling of padding and length values
added an assertion to the customize method in DirectMethodHandle to ensure that the customized field is not null to prevent runtime errors
refactor LineChartRenderer to use a variable for the number of floats and adjust bounds checks accordingly to improve code readability and maintainability by
refactor flavor handling in AndroidBinaryDescription . java for improved clarity and functionality to enhance maintainability and ensure proper rule resolution based on
updated buffer assignment from ` offset ` to ` i ` in ` LwjglGL11 . java ` to correct the index used for
added new files ` Property . java ` and ` PropertySuper . java ` , and created ` Property . java ` and ` PropertySuper .
do n ' t remove the shutdown hook if it ' s disable .
replaced ` FilterChainProxy ` with ` FilterChjainProxy ` and removed the ` url ` parameter from the ` VirtualFilterChain
replaced ` Collections . sort ( intermediateResult ) ` with ` Arrays . sort ( values , 0 , size ) ` and refactored
added checks for schema availability before loading tables in MetaDataBasedSQLCompletionProvider and modified MDTable assignment logic in QueryTypeAnalyser to ensure
set baseType to null in DatabaseInfoRetriever and initialize literalPrefix , literalSuffix , and localizedTypeName in MutableColumnDataType to ensure proper handling of
updated link references in multiple Java files to use { @ link } syntax to improve code readability and maintainability by standardizing link syntax
refactor EvaluatorFactory to use static instances of ObjectEqualEvaluator , ObjectNotEqualEvaluator , and BooleanEqualEvaluator to improve code readability and
updated configuration paths from " / / : osx " to " / / : osx _ config " and " / / : linux _
added sound effect functionality to AllAppsView . java to enhance user experience by allowing custom sound effects
changed the exception type in the main method from Exception to IOException to provide a more specific exception type for better error handling
added granularity configuration to the left axis in BarChartActivitySinus . java to enable granularity for left axis elements in the chart
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by reducing duplication
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS - specific assumptions to improve test reliability and
added a ` close ` method to ` Connection ` , ` JsonAsyncHttpPinotClientTransport ` , ` PreparedStatementTest ` , and `
refactor event handling in SocketRemoteTest , MockAppender , and SocketServerFunctionalTest to use a BlockingQueue for event tracking to improve
[ beam - 4142 ] improve error message for hadoopresourceid . isdirectory ( )
removed multiple unused sprite batch imports from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability by
removed duplicate unbindHandle call in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
removed unused imports and updated button tinting logic in NavbarButtonsViewController . java to streamline navigation button handling based on the
make polybenchlauncher . getlanguage ( ) throw instead of return null
replaced ` bootstrapMethodIndex ` and ` nameAndTypeIndex ` with ` refKind ` and ` memberIndex ` in ` ClassWriter .
added BlockFormattingContext parameter to findBox and findElementBox methods in BasicPanel . java to enhance rendering capabilities by allowing custom block formatting context
added a new method ` getStdErrorOutput ` to handle standard error output in ` WorkerProcess ` and ` WorkerShellStep ` to improve
added null checks and null operator handling in CheckedListReplaceAll . java to ensure robustness by preventing NullPointerExceptions when passing a null operator
added a volatile boolean flag and a FutureCallback to manage asynchronous write operations in SslConnectionTest . java to improve connection handling and ensure proper asynchronous
refactor DeviceFlag and FeatureFlags classes to improve listener registration and initialization to enhance code clarity and ensure proper handling of device configuration changes
added an import statement for JUnit ' s Ignore annotation in GatewayRSocketIntegrationTests . java to mark the test as ignored due to a
removed import of MalformedURIException in StandardRequestHandler . java to eliminate unused dependencies and improve code clarity
[ # 1748 ] instructorfeedbackeditpage : focus after click on the end date ( # 1748 )
refactored synchronization logic in KrakenStreamingTradeService . java to improve code readability and maintainability
replaced ` System . err . println ` with ` System . out . println ` in ` ChangeableUrls . java ` to standardize
added support for random access in SparseRowMatrix by introducing a new constructor with a boolean parameter to improve flexibility in handling random access scenarios
cloudstack - 4892 : fix npe in delete volume usage event when the volume be not a pool
refactor input stream initialization to use dynamic path based on configuration to improve flexibility in handling the " HIVE _ PLAN " path based
[ beam - 10625 ] fix build break by update to guava 1.19 . 0
reset memorycctprovider before register it in memorycallgraphbuilder .
fix a nullpointerexception in the conferencechatmanager if the client do n ' t have a multichat operation set .
added file writing validation in Save . java to ensure the update file can be safely written to prevent errors during file updates
added a new ` FolderSyncActivity ` class and integrated it into ` DrawerActivity ` to manage folder synchronization in the application to enhance user
[ hotfix ] [ network ] fix the resource leak in sequentialchannelstatereaderimpltest
fix a bug in spanishtreenormalizer that cause an exception when parse a pair with a comma .
replaced pointReader with packedValueSlice in SimpleTextBKDWriter to streamline value handling by eliminating unnecessary reader operations
added a new ` LocaleRandomizer ` class and its corresponding test class ` LocaleRandomizerTest ` to facilitate randomization of
added unit tests for MIME types in TestMimeTypes . java to ensure correct handling of font printer metric and type data in the application
add version 10.0 and 9.0 to the list of supported version in installer and autoupgrade
reformatted the code for better readability in TCPTransport . java to improve maintainability and clarity of the code
added a default read timeout of 0 to the socketWrapper ' s read timeout in Http2AsyncParser . java to ensure proper handling of read
updated the default WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to increase the initial delay for
updated the error message to include the column name instead of the column name to improve clarity of the error message for better debugging
added Joda - Time imports and updated date field handling in ThirdEyeJiraClient . java to ensure compatibility with Joda -
refactor priority handling in HeadersGenerator and PriorityGenerator classes to improve code clarity and maintainability by consolidating priority generation logic
added a maximum scalar replacement code size constant and updated the scalarReplace condition to ensure scalar replacement is only applied when the class length does not exceed
added ` Media . DATE _ TAKEN ` to the ` projectionTest ` array and modified sorting logic in ` MediaProvider . java `
adjusted rectangle dimensions in TexturePacker2 . java for better rendering to ensure proper positioning of the image within the specified dimensions
added WebSocketUpgradeFilter handling in JettyWebSocketServerContainer and refactored related test methods to improve WebSocket upgrade filter management and ensure proper test
shutdown validate sign service and transaction handle pool to ensure proper resource management and prevent memory leaks
added ` RawJsonRequestBodyAnnotationProcessor ` and integrated it into ` JaxrsSwaggerGeneratorContext ` and ` Echo ` classes to handle raw
added a new method ` newTarget ` to create a ` Target ` object with specified type and extension to facilitate the creation of
updated BeanContainer to create a new ListBeanContainer with an ArrayList parameter and added unit tests for the BeanContainer class to enhance functionality and ensure
hbase - 15827 fix typo in testmetricsregionserver
camel - 14850 : fixed memory leak in cachedoutputstream due to fileinputstreamcache
add deviceid to teltonika position ( fix # 489 )
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` for reading the first line to improve code readability and
added a null check for the operator in JCAssignOp and created a new Test class with a test method to ensure proper handling of null operators
added a boolean flag ` enableAccountHandling ` to ` BaseActivity ` and modified its usage in ` FirstRunActivity ` and ` BaseActivity
replaced specific imports with a wildcard import and refactored the logic for finding the maximum polygon to improve code readability and maintainability by
updated DrillViewTable to include a path parameter and modified its constructor to accept a list of paths to enhance flexibility in view handling by
updated the constructor of PooledByteBufAllocatorL to include additional PooledByteBufAllocator properties to enhance flexibility in configuring the allocator
replaced ` double [ ] ` with ` short [ ] ` in ` ObjectInputStream . java ` and added a new class ` CloneArray .
added LLAP _ IO _ THREADPOOL _ SIZE configuration to HiveConf and updated LlapIoImpl to use it to configure the number
re - initialize sun . security . ssl . debug and sun . security . ssl . ssllogger for jdk11 +
updated latitude and longitude range checks in LatLonGrid and added a new test for growing polygons in TestLatLonGrid to ensure bounds checking
danielwagnerhall : add expectedconditions . invisibilityofelementwithtext ( ) and expectconditions . refresh (
added a new boolean parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated its usage accordingly to support the handling of insert
added a test for the ` SomeInnerClassReflector ` in ` ReflectorTest . java ` to verify the behavior of the ` get
added a new configuration option " auto _ generate _ android _ facet _ sources " in both ConfigIgnoredByDaemon and IjProjectBuck
updated logging messages in HubChangeExecListener to include changeset ID and author to improve clarity of error messages for better debugging and debugging
added a properties list and corresponding getter and setter methods to the Link class to allow customization of link properties in the QuickLinks configuration
updated annotations in InitialConfig . java and YamlConfigFileDTO . java , and added a toString ( ) method in YamlConfigFileDTO . java to
updated generic type usage in SimpleForwardingServerCall and SimpleForwardingClientCall in AwaitableServerClientCallConfiguration . java to improve type safety
refactor ` forName ` methods to include ` @ CallerSensitiveAdapter ` and update caller class retrieval logic to improve code clarity and ensure proper
replaced ` isEmptyOrNullString ` with ` isEmptyString ` and refactored authentication handling in ` RequestItemRepositoryIT . java ` to
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve clarity and consistency in the executor
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
refactor TimeStepdefs to use JCucumber ' s Options and Calendar classes instead of Cucumber ' s XStream converters to
fix spark _ isolated and spark _ recessive not be in the banner
updated RestInvocationHandler to accept a URL parameter instead of an ExchangeSpecification instance to enhance flexibility by allowing external access to the URL in the
removed redundant print statements in RecordGenerator . java to streamline output for better readability and maintainability
camel - kafka : do n ' t commit offset when auto commit be enable .
removed lockService . releaseLock ( ) in Liquibase . java and added outputStatement ( sql ) in LoggingExecutor . java to
updated suppress warnings in AbstractAuthorizeTag . java and AuthorizeTagCustomGrantedAuthorityTests . java to improve code clarity and suppress warnings related to
removed unnecessary synchronization on the ` this ` context in multiple methods to improve performance by ensuring thread safety when accessing shared resources
refactor property resolution logic in SpringBootAutoConfigurationMojo . java to improve clarity and functionality to enhance the handling of nested properties and
updated the ticker type from baseSymbol to counterSymbol in VirtExMarketDataService . java to ensure the correct ticker is used for
camel - 14850 : camel - core - optimize camel - core to reduce memory usage
updated the way the ` testId ` field is retrieved in ` HoneycombJdbcInterceptor . java ` to use ` System . getProperty
added synchronization to date and number formatting methods in DefaultJobParametersConverter . java to ensure thread safety when parsing date and number formats
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
updated the heightmap ' s height scale from 256 to heightScale to ensure consistent height scaling behavior
replaced ` assertEquals ` with ` assertNotSame ` in ` SecurityConfig ` and ` SecurityConfigTests ` to ensure consistency in comparison
set default value of dumpPartitionId to false to ensure default behavior is applied when dumpPartitionId is not provided
added UTXO test setup and verification for TronTXOutput and TronTXOutputs in UTXOSetTest . java to ensure
[ java ] avoid false positive for unused variable name .
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated jobRestartProperties handling in JsrJobOperator and added a new test for job parameters override to ensure job restart properties are correctly updated and
added a protected boolean field ` disallowBatchOnCascade ` and its getter method ` isDisallowBatchOnCascade ` to provide a
removed redundant initialization of the principal variable in JaasAuthenticationHandler . java to streamline code by eliminating redundancy
refactor core closing logic to use an ExecutorService for better resource management to improve thread safety and resource management during core termination
added null check and visibility logic for mActionsView in RecentsView . java to ensure mActionsView is visible when fullscreenProgress
refactor the creation of JobParameters to use a conditional expression to improve code readability and maintainability by avoiding unnecessary null checks
refactor BasicEntity and TestUtil classes to improve code organization to enhance maintainability and readability of the codebase
added assertions to verify the number of matched devices for a specific root path in SchemaRegionBasicTest to ensure that the test correctly verifies the correct
[ hotfix ] [ metric ] add try - catch for metric event invocation
added a conditional check for ` max ` in ` EigenvectorCentrality . java ` and created a new ` Eigenv
updated registry creation and lookup method to use a dynamic port instead of a hardcoded registry port to improve flexibility and maintainability of the registry
refactor geometry data handling to use a unified method for setting attributes to improve code readability and maintainability by reducing duplication
set the amplifier to 0 instead of 2 in the BlockEntityBeacon class to ensure the entity ' s amplifier is set
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable http client health check by default
updated the type of the ` groups ` list from ` List < Class > ` to ` List < Class < ? > > ` and added
added a new key and a timeout for the main method in the JList selection issue to improve user experience by providing a clearer error message
added a daemon thread for the scheduled executor in StatisticsReporterComponentImpl to allow speedment applications to exit via main method completion
simplified the parsing of the version string by removing unnecessary replacement to improve code readability and maintainability
added ReflectionCheckLinker . checkReflectionAccess ( type ) method to JavaAdapterFactory . java to ensure proper access control for reflection types
camel - 18443 : camel - amqp - fix the test error of camel - mina
updated initIOContext method to include RecordReader as a parameter to enhance flexibility in handling RCFileRecordReader instances
deleted ` ClassLoaderHolder . java ` and ` LoaderManager . java ` files , and modified ` VerticleManager . java ` to streamline
added a new method ` configurationChanged ` to handle configuration changes and modified the root removal logic to ensure that only valid source directories are removed and
added try - catch blocks around session callback registration and unregistration to handle potential exceptions during session callback registration and unregistration
updated index file paths in TestBackwardsCompatibility . java from " src / apache / lucene / index / index . cfs " and
refactor ` createAndStart ` method to accept a ` BiFunction < ActorSystem , AkkaRpcServiceConfiguration , AkkaRpc
added retry configuration for mapreduce map retries in TestExportSnapshot . java to increase the maximum number of attempts for retries during mapreduce operations
pdfbox - 4892 : fix typo find by codespell on fossies . org , a suggest by valeryb
added a new file ` SslConnectionTest . java ` to test SSL connection handling to ensure proper management of SSL connections in the application
added validation for address family types in InetAddress and NetworkInterface classes to ensure that only valid family types are processed to prevent runtime errors
added a test for date serialization in a collection in DefaultTypeAdaptersTest . java to ensure proper serialization and deserialization of dates in a collection
refactor Message class to improve code readability to enhance maintainability and ease of understanding
added debug logging for SQL generation and modified conditionals in PutDatabaseRecord . java to improve debugging capabilities and ensure proper handling of the first update
corrected the loop condition in TableOutput . java to correct the calculation for running width
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
change priority of vr _ format _ string _ EXTRA _ ARGUMENTS _ PASSED to high if format string contain { 0 }
[ java ] localvariablecouldbefinal : add property to ignore non - final loop variable .
updated PDFExporter to set PDF format version and full compression settings , and modified the test sample path to reflect Java . gexf to enhance
added a new test class ` LdapUserDetailsMapperTests ` to validate role attribute mapping to ensure correct functionality of ` LdapUserDetailsImpl `
cloudstack - 5892 : make ldap connection read timeout configurable
refactor multiple TestDescription classes to improve code organization to enhance maintainability and readability of the codebase
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
replaced instances of ` shouldCacheIterator ` with ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the allocation
added a condition to check if the handler state is invalidated in the gesture handling logic to ensure proper handling of gesture states when the handler is invalidated
updated the maximum distance for folder creation from 0.6 f to 0.55 f to improve user experience by reducing folder creation distance and
updated import statements and modified configuration handling in OciConfigConfigSource . java to improve code clarity and ensure proper resolution of configuration properties
refactor Testjsig class to improve code readability to enhance maintainability and ease of understanding
fix mana tablet , ring , and terra pick not respect the stack ' s mana count
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress potential serialization warnings during serialization
refactor validation logic to check if a tsFile resource is empty before validating it to improve error handling and ensure proper cleanup of tsFile resources
added new classes Switch21 and Switch19 for enhanced switch pattern matching functionality to improve code readability and maintainability
updated error message for String conversion in ComparableSubjectTest . java to simplify error reporting for better clarity and maintainability
[ bugfix ] set xml standalone flag to true in streamhelper
updated capacity check and improved error message formatting in Int2ObjectCache . java to enhance code clarity and ensure proper array size validation
updated security filter chain ordering in WebSecurityConfiguration and added a test for it in WebSecurityConfigurationTests to ensure correct ordering of security filter chains
removed the ` TimeInForce . GTC ` parameter from the method call in ` BinanceTradeService . java ` to simplify the method
refactored FloatRangeRandomizer to extend AbstractRangeRandomizer and added validation for min and max values to improve code clarity and ensure
updated the KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure
camel - 18443 : camel - jms - add documentation for camel - activemq - component
added error handling for bound retrieval in SourceUtils and created unit tests for bound retrieval to improve robustness and ensure correct handling of type parameters in
refactor code to use a helper method for creating FilterPredicateLeafBuilder based on Parquet type to improve code readability and maintainability by
modified ` BatchPropertyBeanPostProcessor ` to check if ` artifactName ` starts with ` SCOPED _ TARGET _ BEAN _ PREFIX `
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5358 - read all
refactor ` getDefaultBooleanValue ` method to return a ` String ` instead of a ` boolean ` and introduce ` DnsFallback ` class
ww - 4071 add more information when tag can not be write
changed the ` success ` field to ` url ` and updated related JSON properties in ` DepositAddress . java ` to improve clarity
replaced an anonymous Privilege implementation with a lambda expression in WindowsSecurity . java to improve code readability and ensure proper resource management during
removed " address " and " phone " scopes from the OAuth2 provider to simplify the OAuth2 provider configuration by removing unnecessary scopes
refactor ManagedSelector to use a separate Start class for managing the start state to improve code readability and maintainability by encapsulating the state
added ` BIG _ DECIMAL _ 182 _ 04 ` constant and updated ` WLedHandler ` to calculate ` hue65535 ` and
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set for better clarity to improve code readability and maintain
added a method ` caseJSRInst ` to ` InstSwitch ` class to enable handling of JSR instances in the switch statement
added transactionmanager to subscriptionactivingsubscriber so that it can be use in a transaction .
refactor database update and insertion logic in DBMSProcessor . java to improve code clarity and ensure proper execution of data updates and inserts
updated elevation handling in ContactItemInflater for devices running Android Lollipop and above to ensure consistent elevation behavior across different Android versions
renamed ` typeInformation ` to ` identifier ` for consistency to improve code readability and maintainability by using a more descriptive variable name
replaced direct file operations with privileged actions in SandboxFileManager . java to enhance security by ensuring privileged access to file operations
refactor GroovyParserVisitor and GroovyPrinter to improve handling of G . Binary . Type . Access to enhance code clarity and maintainability by
updated warning message to include the exception class name instead of the exception message to improve clarity of logging by providing more context about the exception type
updated character reading and compression logic in RecordInputStream and UnicodeString classes , and added a test for Unicode reading and writing in TestUnicodeWorkbook to
added a test for downloading files with " N ø rway " characters in the name to ensure that the download functionality works correctly for
replaced RuntimeException with CancellationException and added cancellation checks in AsyncResource . java and FingerprintScannerSample . java to improve error handling for cancellation
added null check for statistics before handling cache in TimedMemberStateFactory . java to avoid potential NullPointerException when statistics is not provided
refactor MongoTemplateTests by adding a test method for removing an object from an explicit collection to improve test coverage and ensure proper functionality of the
updated copyright year from 2015 to 2022 in multiple Java files to reflect the latest changes in the project structure
[ beam - 10720 ] fix format exception in coder . tostring ( )
added a new boolean variable ` mIsClearAllButtonFullyRevealed ` and modified scroll handling logic in ` RecentsView `
refactor HiveIcebergMetaHook to use a static final map for common HMS properties to improve code readability and maintainability by
refactor exception handling to use a new method ` isAddressInUse ` to improve code readability and maintainability by centralizing error checking logic
added a command line argument for the test class path in TestNestmateAttr . java to ensure the test class path is correctly configured
updated logging type from verbose to verbose _ schema in Grep . java to improve logging clarity by using a more descriptive variable name
add miss @ override annotation and remove unused import
# 1745 - add support for nested nested transaction ( # 1745 )
replaced a primitive int fetchSize with a ThreadLocal < Integer > fetchSize in QueryProcessExecutor . java to improve performance by reducing
[ java ] do n ' t use backoff and share network idle strategy in ping pong test .
refactor call handling in HttpClientIntroductionAdvice to use a new handleBlockingCall method to improve code readability and maintainability
added HDP version configuration handling in SliderAppsViewControllerImpl . java to ensure the system property HDP _ VERSION is set correctly based
added private fields for loaderClass , jusl , and loader , and implemented close methods in JavacProcessingEnvironment . java to improve
added DeepCloner class and modified parameters in ParameterizedRobolectricTestRunner , RobolectricTestRunner , and Robolect
added binding for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to enable stack trace display functionality in the web server
added type checking for OBJECT type in NativeObject . java to ensure proper handling of OBJECT type in the code
replaced multiple instances of ` OopField ` with a single ` OopField ` in ` SystemDictionary . java ` to streamline
updated JwkKeyListView and JsonWebKeyEndpoint to use PublicKey instead of RSAPublicKey and added Base64 encoding for public keys to
use onlywritablebootimageheap instead of not spawnisolates
refactor MBeanServerMXBeanUnsupportedTest for improved clarity to enhance maintainability and readability of the test code
removed an unused import of OrderClassLoaders in MavenPluginCollector . java to streamline the code by eliminating unnecessary dependencies
replaced the ` Validator ( ) ` method with ` validator ( ) ` and added ` getOwnerAddress ( ) ` method in multiple actuator
http : / / issues . apache . org / activemq / browse / amq - 61613 - add main class for am
replaced direct calls to ` toByteArray ( min ) ` and ` toByteArray ( max ) ` with conditional logic for min and max values to ensure
added handling for empty indices in the Protobuf annotation serialization to ensure proper handling of empty indices in the graph representation
[ java ] remove entry from asynccommandid set when a correlationid be no longer need .
added saveConflict method calls in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure file conflicts are only saved when the
updated generic type usage in ExecutionContext , AbstractMethodInvokingDelegator , and AbstractTransactionalResourceItemWriter classes to enhance type safety and
replaced instances of ` StrUtils . splitFileNames ` with a direct call to ` splitFileNames ` across multiple filter factory classes to
added Oracle and MySQL specific driver properties in DatabaseFactory . java to enable remarks reporting and information schema functionality for Oracle and MySQL databases
added a ` handler ` parameter to the ` MockMethodInterceptor ` constructor and updated the ` serialVersionUID ` in ` SignedSupportingClassProxyFactory
replaced the use of ` new Date ( ) . getTime ( ) ` with ` System . currentTimeMillis ( ) ` for time measurement to improve
[ hotfix ] [ table - planner - blink ] fix classloader leak in executioncontext
added onBufferChanged method to handle buffer changes in TerminalView and TerminalTextViewOverlay to ensure proper handling of buffer changes during UI updates
reformatted code for better readability in ConfigDispatcher . java to improve maintainability and clarity of the code
refactor freeze action logic to handle both v2 and non - v2 configurations to improve clarity and maintainability of the code
added support for insecure TLS configuration in TlsConfig and updated TlsUtils to utilize it to enhance security by allowing the use of insecure
refactor code to simplify source and class path handling in JavadocTool . java and introduce a new class T7091528 . java
replaced nodeColumns with edgeColumns and updated edge ID handling in ExporterGDF . java to improve consistency and clarity in edge data
added cascade = CascadeType . ALL to the @ OneToOne annotation in DefaultUserInfo . java to ensure that only the DefaultAddress entity is
refactor message . equals ( ) to use arrays . equals ( data ) instead of getMessageId ( ) . equals ( ) .
updated URL encoding in ` AsyncProvidersBasicTest . java ` to use Unicode characters to ensure consistent character encoding across different operating systems
[ hotfix ] remove unused iskeyserializertypevariablesized ( ) method from rocksdbserializedcompositekeybuilder
added a method to retrieve the static permissions from a ProtectionDomain and updated the SubjectDomainCombiner to use this method to enhance security by
add a null check to the recipe handler , and fix a couple of checkstyle warning .
refactor parsing logic in Parser . java to improve readability and maintainability of parsing logic
added a ` showConnectionErrorPopup ( ) ` method in ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter ` to
added a new file ` Issue596 . java ` to implement a test for 404ing requests on unsupported media types to ensure that the server
updated bitwise operation from ` 1 < < bitIndex ` to ` 1L < < bitIndex > ` in ` NodeBitMap . java
updated import statements in ImportLayoutStyle . java to improve code clarity and maintainability
replaced ` gitBashConfigValue ` with ` useStdIn ` and updated related logic in ` ConsoleUIService . java ` to
replaced mocking of AccountManagerCallback with a TestAccountManagerCallback and updated assertions in ShadowAccountManagerTest to improve test clarity and
do n ' t store enclosingtype in analysistype . getenclosingtype ( )
rename methods in Pairs from ` get * ` to ` entries ( ) ` and ` getConcatSeparator ( ) ` to ` entries (
[ hotfix ] [ runtime ] remove timeout from putallcallable . set ( )
[ rocketmq - 4892 ] fix npe when consumer be not register ( # 4892 )
[ java ] generate the source identity before use it in the driver conductor .
added a new file ` TopTabAction . java ` that implements the ` Presenter . Toolbar ` interface to display a top - tab
camel - 14850 : dynamic - router - should use reactivehelper to copy filter in all match mode to avoid deadlock .
updated imports and added JUnit annotations in AggregateItemReaderTests . java to improve test structure and ensure compatibility with the latest JUnit framework
added generic type parameter ` < T > ` to the ` Procedure ` constructor in ` AbstractObjectValueTypeMap . java ` to enhance type safety
updated import statements and added a method to set the wikidata edit count in AchievementsActivity and OkHttpJsonApiClient
added a validation check for the length variable in OfflineSorter . java to ensure it does not exceed Short . MAX _ VALUE to prevent runtime errors
do n ' t report unconditional bug for long . min _ value and int . max _ value
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
enhanced the exception message in ` ProvisionTopologyTemplateException ` to include acceptable credential types to improve clarity of error reporting for invalid credential types
updated random number generation for vector elements in TestVectorUtil . java to improve randomness and accuracy of vector elements
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the time comparison logic to improve code
added SSL property handling in TestUtil and modified test assertions in PGPropertyTest to ensure proper SSL configuration and improve test reliability
simonstewart : enable safbrowsing in chrome by default
added null checks before cloning oldConfig in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource to ensure proper rendering behavior when transcoding is disabled
added checks for empty gherkinRows and empty raw lists in DataTable and modified table diff logic in TableDiffer to ensure proper handling of
added a static string ` CustomIgnoreTag ` and a condition to remove elements from the iterator if the section ' s native code starts with it
camel - 14850 : camel - jdbc - optimisticlocking should use optimisticlockingaggregationrepository . optimisticlockingerror
fix ( configproperties ) : support @ configurationproperties ( ` ` parent ' ' )
updated ` PreferencesActivity ` to extend ` LimitlessIDEActivity ` instead of ` IDEActivity ` and refactored related methods to improve
deleted the ClusterNodeInfo . java file to remove unused code to streamline the codebase
removed unnecessary whitespace in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output for chosen ciphersuite in ServerHandshaker . java to provide visibility into the ciphersuite being used for debugging purposes
updated the onTemplateChosen method in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle cases with multiple templates to improve user
added a ` nodeLabelMap ` to track node drafts and modified the handling of duplicate node labels to improve node existence checks and enhance error
added a new file R2303044ListSelection . java that implements a list selection functionality to test the selection of an item in a
[ java ] avoid duplicate registration of a publication with the same correlationid .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerException when mWorkspace is not initialized
added a new test method ` testCompoundPropertyTwice ` in ` StepScopePlaceholderIntegrationTests ` to verify the behavior of compound properties in
refactor row counting logic in StatsRulesProcFactory to use a new list to improve clarity and maintainability of row counting logic
added logic to handle path and query parameters in SpringBootDocBuildTemplate . java to improve API parameter handling and ensure proper configuration parameters are set
updated logger initialization to be static final in GuiActivator . java and refactored action handling in NotificationServiceImpl . java to improve
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and updated related logic in ` DistBuildSlaveExecutor .
updated RuntimeException to include JSON parsing error messages to improve error reporting by providing more context about JSON parsing failures
added a DEBUG condition to the logging statement in WidgetsModel . java to ensure logging only occurs in debug mode for debugging purposes
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the codebase
updated the calculation of ` numTerms ` in ` SimilarityBase . java ` and added a new test method in ` TestSimilarityBase
added a check for the send method in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to ensure that the send method is only
added new exit and quit methods with corresponding properties in Global . java and removed the old quit method from ScriptingFunctions . java to streamline
replaced the instantiation of ` LoanBrokerGateway ` with a context variable in ` LoanBrokerSharkDetectorDemo . java ` to
renamed methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method naming con
cloudstack - 4892 : fix npe in vmware web service when no cookie be find .
removed unnecessary whitespace in assertions in ResinAcegiAuthenticatorTests . java to improve code readability and maintain consistency in formatting
updated bigIntegerToBytes method calls to include a 32 - bit parameter to ensure compatibility with larger data sizes
rename ` ` fml . disabledmods ' ' system property to ` ` fml . modstates ' '
refactor account selection handling by introducing a separate method for displaying the account chooser dialog to improve code readability and maintainability by redu
[ hotfix ] [ connector / collectsink ] improve error message when unable to get back stream
added error handling for unexpected empty simulation results in ValidatorContractController to ensure proper error reporting for unexpected results from the validator smart contract call
updated TexturePackerFileProcessor to handle empty JSON files by checking for null before reading fields to improve robustness by preventing null pointer exceptions
added a null check for ` getDataSource ( ) ` and ` getDataSourceJNDI ( ) ` in ` PooledConnection . java ` to ensure
increased TARGET _ MB and WINDOW values from 10 , 000 to 1 , 000 , 000 , and introduced a sink object to improve
added null checks for currentConsole before writing bytes to avoid potential NullPointerExceptions when currentConsole is not initialized
added a credential refresh delay of 100 milliseconds to the Kinesis connection settings to improve user experience by allowing more time for credentials to be refreshed
replaced multiple AlertDialog calls with a single method call to showInfoAlert to improve code readability and maintainability by reducing duplication
added a new parameter ` pack ` to the ` test ` method in ` T4501661 . java ` to indicate if the test
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUse
updated import statements in PluginBundleManager . java and added a method to check if a dependency is provided to improve code clarity and ensure only
added a set to track ZipFileInputStream instances and modified the releaseInflater method to ensure proper resource management and prevent memory leaks
corrected the spelling of " DATA _ MATRIX " to " DATA _ MATRIX " across multiple files to ensure consistency and
added logic to run active or idle tasks based on key ranges in SequenceGeneratorSource . java to ensure proper handling of key ranges during processing
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " in BlobServer and BlobServerGetTest to ensure
replaced ` findAny ( ) ` method with ` findFirst ( ) ` and added a new method ` getAnnotations ( Class < T > type
added support for " ppc64 " and " ppc64le " architecture checks in Bits . java and ByteArrayAccess . java to ensure
updated the exception message in RoboMonitoringInstrumentation . java to include a link to the GitHub issue for better clarity to improve error reporting
use long . max _ value for timeout in transactionimpl . waitwithdeadline
replaced instances of ` new Date ( ) ` with ` Instant . now ( ) ` and ` OffsetDateTime . ofInstant ( moment ,
refactor BytesRef class to improve code readability to enhance maintainability and ease of understanding
added a toast message to indicate that the YouTube Player does not work on Lollipop yet while waiting on an update from Google to
added checks for unterminated dollar quotes , string literals , and block comments in SQL parsing to ensure proper handling of SQL syntax errors and prevent
do n ' t try to videofocus when there be no vibrator
updated border and background color settings in DotRenderer . java and modified column background handling in DotRenderer . java to ensure proper rendering of primary key
added a method to check if a configuration variable is encoded in HiveConf . java and updated SetProcessor . java to use this method to ensure
added catch block for StringIndexOutOfBoundsException in PDFParser . java to handle potential StringIndexOutOfBoundsException during parsing
refactor X509Certificate class to improve code readability to enhance maintainability and facilitate future modifications
fix wavefront config uri validation ( # 3903 )
refactor image loading logic to utilize NetworkedCacheableImageView for improved image loading efficiency to enhance image loading efficiency and maintainability
removed unnecessary parameters from ` LauncherAnimUtils . ofFloat ` method calls across multiple classes to simplify method signatures and improve code readability
update gdx - controllers dependency to 2.0 . 0
refactor LaunchedURLClassLoader to improve code readability to enhance maintainability and facilitate future updates
updated DataSourceHealthIndicator to use DataAccessUtils for retrieving result set values to ensure correct column count validation and improve error handling during database query execution
add no - cache header to response for layout tag .
updated the ` warnMsg ` format to use ` Locale . ENGLISH ` to ensure consistent formatting of warning messages across different locales
added a constructor to SolrQueryParser that accepts an Analyzer parameter to enhance flexibility in query parsing by allowing custom Analyzer instances
updated copyright year from 2016 to 2017 and added licensing information in multiple Java files to ensure compliance with the latest Licensing
removed a semicolon from MainTest . java to clean up the code and improve readability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added support for VoidColumnVector in VectorizedBatchUtil to improve handling of VoidColumnVector data types
updated the parameter from templateName to req . getName ( ) in StatementGenerator . java to improve clarity by using the request ' s name instead
removed unnecessary type matching logic in AbstractConfig . java to streamline configuration handling for better readability and maintainability
[ java ] set initial timestamp and reset message buffer when offer to a publication .
renamed methods from ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll
fix : do n ' t generate bootstrap if there be no @ bootstrap annotation .
hbase - 25832 tabledescriptorchecker . getmaxfilesize ( ) and tabledescriptorchecker . getmemstoreflushsize ( ) should
replaced ` maxCommits ` with ` requestedCommits ` in ` BranchGraphServlet . java ` to ensure correct handling of commits based on the
6794831 : test javax / swing / jslider / 6794831 / bug6794831 . java fails due to
added a new constant BUILD _ ID and refactored cache metadata handling in BuildInfo and CachingBuildEngine classes to improve code clarity
removed unused imports of TxInputUtil and TxOutputUtil in TransactionCapsule . java to clean up the code and improve maintainability
removed duplicate call to markAsDone in HttpProtocol . java to streamline code by eliminating redundancy
added import for TezConfiguration and implemented a copyInto method in TezConfigurationFactory to facilitate the use of TezConfiguration
updated null check for keyPurposes in TimestampedSigner . java to ensure robustness by preventing potential NullPointerExceptions
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a ` forget ` method to the ` OpenALSound ` class and modified the ` stop ` method in ` OpenALAudio ` to
clear position discontinuity only once in simplebaseplayer . invalidatestate ( )
added decimal formatting options for number formatting in NumberAxis . java to improve readability and maintainability of the code
refactor TargetGraphAndBuildTargets usage to streamline builder method calls to improve code readability and maintainability
removed the IndexFileNameFilter class and simplified file name checks in IndexFileDeleter . java to simplify code and improve readability by elimin
allow dummy container to check entity ' s collision bounding box for ladders instead of just the entity ' s collision bounding box
added a ` DEFAULT _ COMPRESSION _ LEVEL ` constant and updated method signatures to include a ` compressionLevel ` parameter to improve code clarity
added a test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify the inclusion of static fields in a class
replaced ` UNDEFINED _ FIELD _ SIZE ` with ` UNDEFINED _ METRIC _ SIZE ` and added support for ` BYTES ` data type in
updated StringBuilder construction and improved formatting in multiple test files to enhance readability and maintainability of error messages
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed unnecessary
added caching functionality using CacheManager in multiple service classes to improve performance and maintainability of cache management operations
[ pronunciation ] fixed pronunciation model to use locale prefix .
do n ' t create formbody . builder when there be no postbody
added a dispatcher to manage the shutdown of the OkHttpClient in ClientSideSlb . java and invoked it in ClientSideSlbTest .
updated texture positioning logic in TextureRegion . java to differentiate between y - flipping and non - y - flipping to ensure accurate
improve error message for unknown property in defaultdiscoveryservice
updated contextPath variable to be non - final and added a null check for it to ensure a default value is used when contextPath is null
[ drools - 5842 ] fix class load issue during kie container reinitialization
added a new constant B _ TREE _ MAP _ ROOT _ HEADER and validation in BTreeMap . java to ensure the BTreeMap
added precompiled header handling and validation in AppleDescriptions and AbstractCxxSourceRuleFactory classes to ensure proper handling of precompiled headers and
replaced WeakReference with a custom AccWeakReference class and added security context handling to improve security by ensuring proper access control during image updates
refactor methods in ObjectMap and ObjectSet for consistency and clarity to improve code readability and maintainability
changed the assignment of isDirect from true to false in VertexBufferObject . java to ensure the isDirect variable reflects the correct state of
mary : fix checkstyle issue in generator / objects / maryclient . java
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to return the result of the method
pdfbox - 5764 : use limit instead of capacity , a suggest by valerybokov
added a null check for the context before removing the close hook to avoid potential NullPointerException when the context is not initialized
updated border spacing logic in CellLayout and DeviceProfile classes to accommodate both folder and non - folder layouts to improve layout responsiveness
refactor valueNumeric and defaultValueNumeric initialization to use a custom ValueNumeric class to improve code readability and maintainability by centralizing number parsing
added a condition to check if the response is not deferred in the FormAuthenticator class to ensure proper handling of deferred responses in the authentication process
updated argument checks in StartArgs . java to replace " -- module - startd - ini " with " -- add - to - start "
added default partition value retrieval in DynamicPartitionFileRecordWriterContainer to ensure proper handling of default partition values when partition values are not provided
[ hotfix ] [ stream ] add nullability check to streamnode and streamgraph
updated the return statements in DefaultArtifact . java to conditionally include classifier to improve clarity of artifact ID and version representation based on classifier presence
camel - 14850 : camel - kafka - should not call staterepository . getstate twice for the same topic in the kafka consumer
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor to provide clearer feedback when a dependency is missing in the classpath
change the default gmail notification name to enable _ gmail _ notifications
doc : generate sample code in the java microgenerator ( # 119 )
updated LumberjackMultiThreadTest to use a configurable concurrency level for message count and loop iterations to improve test reliability by allowing more
fix ( player ) : check player be not dead before getplayerdisplayname ( )
camel - 17979 : fix the javadoc error of exchange . getmessage ( string key , string value )
update updateuser api doc to indicate that apiKey / secretkey be must be specify
refactor switch - case statements to if - else statements in multiple classes for improved readability to enhance code clarity and maintainability by
updated AbstractMetaDataExportMojo . java file to improve metadata export functionality
added exception handling for SQLIntegrityConstraintViolationException in Hive . java to ensure that a table cannot be dropped if a materialized view definition is used
updated property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to improve clarity and consistency in
added a new class ` RoboExecutorService ` that extends ` org . robolectric . android . util . concurrent . RoboExecutorService
added conditional checks for root groups in GroupTreeView to ensure proper handling of subgroups in root groups
updated the method signature of ` buildServiceAndSpanName ` and modified the condition check in ` BraveClientExecutionInterceptor . java ` to
refactor GC thread configuration to use dynamic base arguments for improved clarity to enhance maintainability and readability of the test code
replaced ` ImmutableFlavor ` with ` Flavor ` in ` getHostFlavorMap ` and ` getAllPossibleHostFlavors `
updated SQL creation statements to include options from PlainSelect for better flexibility to enhance flexibility in handling database creation options and table options
set the alpha of the background color of the chat account to 64 to improve the visual appearance of the chat account
test ( refactor ) : migrate ctiteratortest to junit 5 ( # 4696 )
added token . clear ( ) calls in CharTokenizer , KeywordTokenizer , TokenStream , Tokenizer , and DocumentsWriter classes to ensure proper token
added test to demonstrate that astinitializer do n ' t crash on blockstatement
updated generic type parameters in StateMachineConfiguration and StateMachineFactoryConfiguration classes and added validation for configurers in StateMachineConfiguration and StateMachine
danielwagnerhall : fix link locator in selenium test
updated StringConverter to handle different maximum fraction digits for BigDecimal and Float types to improve flexibility in formatting numeric values based on their type
remove check for managedaggregates in aggregatelifecyclelistener to avoid npe
updated touchable insets in TaskbarDragLayerController to use REGION instead of CONTENT to improve user interface responsiveness by providing a more
added a check for the presence of a ' ~ ' character in the FencedCodeBlockParser to ensure proper handling of special characters in
added socketTimeout property and its handling in multiple classes to manage socket read operations with a configurable timeout value to improve flexibility in socket read operations
added a sleep delay of 500 milliseconds in ElementAttributeTest . java to handle potential interruptions during test execution
updated BufferedReader to use UTF - 8 encoding in HttpUtils . java to ensure consistent character encoding for input streams
refactor List class to improve code readability to enhance maintainability and ease of understanding
added a constructor to ` AsyncFileImpl ` that accepts ` URI ` and ` Path ` , and modified error handling in ` AsyncFileImpl
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the class is stable and should not be
fix npe when there be no Nuage VSP device configure on the physical network
updated the method name from ` retryUploads ` to ` retryFailedUploads ` and modified its logic for retrying failed uploads to improve clarity
updated Java version references from 1.8 . 0 to 1.9 . 0 in ConstantPoolTagTests . java to ensure compatibility with Java
do n ' t try to compile with - xlint because they ' re not support
added a method to remove all client headers from the client header map to facilitate the removal of unnecessary headers from the client ' s
replaced Vector with ArrayList and simplified argument handling in Main . java to improve code readability and performance by eliminating unnecessary type casting
updated the default GRID _ COLUMN value from 4.0 f to 3f in AppPreferencesImpl . java to improve the accuracy of the
added a condition to check if ' forViewCreation ' is false when verifying table presence to ensure that ' forViewCreation ' is not
updated datePattern string and refactored assertions in TestHS2HttpServer . java for clarity to improve readability and maintainability of
added a try - catch block around the method call to handle potential exceptions during object conversion to improve error handling and prevent potential runtime exceptions
replaced IE driver with FIREFOX and updated test method in SingleTestSuite . java to ensure compatibility with the firefox driver and
replaced ` byteOffset + = BYTE _ BLOCK _ SIZE ` with ` Math . addExact ` in ` ByteBlockPool . java `
changed static fields to instance variables for firstEncoder and secondEncoder in InteractionValueEncoder . java and modified string formatting to use Locale . ENGLISH
[ java ] do n ' t swallow exception in tcptransport . stop ( ) .
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress warnings related to serialization issues
updated ` OcamlDebugLauncher ` to extend ` AbstractBuildRule ` instead of ` AbstractBuildRuleWithResolver ` and removed ` Source
improve error message when database have change .
added response type validation and service access validation in OAuth20DeviceCodeResponseTypeRequestValidator . java and improved error logging in Nexmo
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure that the index is within valid
updated the ` initTableMapperJob ` method to accept a ` Class < ? extends InputFormat > ` parameter and modified the job ' s
removed duplicate call to append in AbstractJRubyMojo . java to streamline the code by eliminating redundancy
sulong : throw an exception instead of an npe if the language be not find .
added deprecation warning and validation for the RESERVE parameter in ReplicationHandler . java to ensure compatibility with Solr 7.1 with the master '
hhh - 15827 - fix bug in cache - related unit test ( # 15827 )
replaced long [ ] handles with Object [ ] keyBytes in ECKeyPairGenerator . java to improve type safety and clarity in key pair generation
[ hotfix ] [ runtime ] add suspend method to restarting and restartingwithexecutiongraph
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation to simplify the code by eliminating unnecessary singleton usage
refactor code to use flatMap for port table filtering and improve readability to enhance code clarity and maintainability by using a more concise
updated method parameters and variable names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity
remove an offer that have the same offer id from the offer list when the state or error be different .
refactor to avoid use of deprecated tls . istlsv13available ( ) method
added type - based mock handling in MockitoMethodInvocationControl and simplified mock methods in SystemClassUserTest and SystemClassUserCases to ensure
replaced instances of ` DatabaseObject ` with ` PartialDatabaseObject ` in multiple exception classes to improve clarity and consistency in exception handling
removed the import of DisplayUtils and added an extra file to the intent in FileDisplayActivity to streamline the code by eliminating unnecessary
added error handling and improved file deletion logic in StoreDirect and StoreWAL classes to ensure proper resource management and avoid potential memory leaks
added a task snapshot retrieval in AbsSwipeUpHandler and refactored the stopSwipePipToHome method call in SystemUiProxy
added hidden property and related methods to CommandArgumentDefinition and updated LiquibaseCommandLine to handle it to improve command argument management by allowing hidden
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct
[ geos - 6638 ] remove dependency on geoserverdatadirectory from stylegrouphelper . getcatalog ( )
added permission checks for launching activities in InstallShortcutReceiver and modified how shortcuts are created in Launcher to ensure that malicious intents are
added ` getId ( ) ` and ` setId ( ) ` methods to various tiled and mx map tile classes to provide a unique identifier for
refactor Manager class to improve code readability to enhance maintainability and ease of understanding
updated JDBC connection string to include version parameter and modified session builder to include version specification to ensure compatibility with version 0.13 and improve session management
added schema - related properties and modified diff output control initialization in LiquibaseGenerateChangeLogMojo . java to support dynamic schema inclusion
replaced ` putIfAbsent ` with ` put ` in ` JmxRegistry . java ` to improve performance by avoiding unnecessary operations
[ hotfix ] log singlebenchmarkrunnerexception at warn level instead of error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to enforce immutability
fix file selector not work on window .
refactor FastCGIProxyServletTest to improve response content handling and add tests for large and slow requests to improve test reliability and ensure
added a call to start the ReadInteractionsService in MarkReadService . java to establish a read interaction service for improved user experience
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure that warnings are only logged when
added logic to set a default email server port if it is not provided to ensure a valid port is used for SMTP connections
add retry logic for sslfactory reload in tlutils ( # 4696 )
updated the date format in ObjectMapperProvider from " mm : mm ' Z ' " to " mm : ss ' Z ' " to ensure accurate
updated the assertion message in SpyingOnRealObjectsTest from " Most likely it is a private class that is not visible to Mockito "
added functionality to handle line ending with a newline in InlineBoxing and LineBox classes to ensure proper handling of line endings based on line
updated filePathString initialization to handle potential null values to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to streamline code by eliminating unnecessary dependencies
refactor NinjaServletContextTest to use createHttpServletRequestInputStream for input stream creation to improve code readability and maintainability by reducing
updated the properties in AbstractCasEndpointTests to include " management . endpoints . web . exposure . include = * " to enhance security by
added a validation check to ensure the current graph is a dynamic graph to prevent runtime errors when the current graph is not a dynamic graph
log a debug message when a bean of type ` ` @ scopeone ' ' be disable
added support for suppressExceptions property in JsonPath expressions to enhance the flexibility of exception handling in JSON path operations
removed duplicate call to ControllerLeaderLocator . create in HelixServerStarter . java to streamline the code by eliminating redundancy
updated usage messages in CLHSDB . java and HSDB . java to include " - help " to clarify the usage instructions
refactored the configureChunkProvider method implementation in FaultTolerantStepFactoryBean and removed duplicate listener registration in SimpleStepFactoryBean to
[ beam - 13434 ] remove deprecate write class in favor of write
refactor ShadowAccessibilityManagerTest to use a local AccessibilityManager instance instead of a method call to improve code clarity and maintainability
register usage statistic to the analytics . group _ display _ id
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in multiple classes to simplify the class hierarchy by removing unnecessary
refactored enum data type handling in PostgreSQLDatabaseConnector and created a new PostgreSQLEnumDataTypeHelper class to improve code organization and facilit
updated log path assertion to use File . separatorChar instead of a hardcoded slash to ensure consistent file path formatting across different operating systems
replace instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency in naming con
added support for dropping index tables in HiveMetaStoreClient to ensure proper handling of unsupported operations during table dropping
added a condition to update disabled flags when the visibility is not visible in RecentsView . java to ensure that disabled actions are only updated
added a condition to set a specific highlighter for non - Windows platforms to ensure compatibility with Nano syntax highlighting on non - Windows platforms
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5638 -
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
added a semicolon to the end of the method call in SelectBox . java to improve code readability and maintainability
changed the value of the ` _ metaDataComplete ` variable from ` true ` to ` false ` to ensure that the metadata completion state is not
refactor ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` in ` RecentsAnimationController
added environment variables for release flavor in JsBundleGenrule and corresponding tests to ensure proper handling of environment variables based on the flavor of the build
updated type casting logic in ` ppp Lower . java ` and added a new class ` ppp T6500701 . java `
added tests for crlf new lines in comments and Javadoc in AddImportTest . java to ensure proper handling of new line characters in import statements
added hubMode property to AbstractLiquibaseChangeLogMojo and configured it in AbstractLiquibaseChangeLogMojo to
removed unnecessary null checks in JsrChunkProcessor . java to simplify the code by eliminating unnecessary null checks
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure that the
replaced the method for retrieving the " setIndexerThreadPool " method with a direct call to ` IndexWriterConfig . getDeclaredMethod ( ) `
removed the port number from the address string in GameCanvasImplementation . java to simplify the address format for better readability and maintainability
refactor MapJobExecutionDao to utilize a copy method for job executions to improve code clarity and ensure proper serialization of job executions
added a new file ` DownloadTest . java ` to demonstrate the download functionality of a PNG image in the badlogic games
updated language normalization logic in multiple classes to ensure consistent language handling across the application
updated error handling in GenericUDFRound . java to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and maintainability of error
added a null check for selectedVersion in manageDependencies . java to prevent potential NullPointerException when selectedVersion is null
added multiple matchers for various media types in SecurityConfig . java to enhance security by matching specific media types in the application
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
do n ' t generate bean definition for java . lang . object if it ' s a super class
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test for future development
changed ` SUPPORTED _ THING _ TYPES ` and ` ENERGY _ SUBSCRIPTION _ PERIOD ` from ` final static ` to
[ java ] remove unnecessary code that do n ' t work for apr .
deleted the SunToolkitSubclass . java file to the functionality was no longer needed in the project
replaced MathUtils with Matrix4 and added a method to retrieve translation based on rotation or scaling to improve code clarity and maintainability by
[ mybatis - 165 ] add unit test for typehandlerregistry . register ( int , datetypehandler )
added a method to convert a raster to an RGB image using a specified alternate color space to improve image processing by allowing alternate colorspace to be
updated references to constants from CommonsApplication to BuildConfig in CommonsApplication , PageTitle , and Utils classes to utilize the new Build
camel - 18443 : camel - main - http - health - add health check for camel - main http server
fix an npe in the thorn chakram when there ' s no block
added a test for altering tables with indexes with primary key constraints in AlterTableWithViewsIT . java to ensure that the primary key
replaced the initialization of ` offset ` with ` readerContext . docBase ` in ` FileFloatSource . java ` and modified assertions in
remove DrillMongoConstants . ID from fields in MongoRecordReader to ensure that the ID field is not removed from the fields collection
added disconnection methods to YeelightHandlerBase and DeviceBase , and modified connection state handling in WifiConnection to improve connection management
added support for " AUTO _ INCREMENT " column in the parser and created a new table with a primary key to ensure proper handling of integer
fix flaky test in sharedinformerfactorytest
server : fix npe while update private template detail
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage instead of Point to improve image size retrieval and ensure proper
removed deprecated constants from LauncherSettings and added new ones in LauncherProvider to streamline code and improve maintainability by eliminating obsolete
( chore ) camel - example - broker : move file to the correct package
added a new variable ` legendTop ` and updated related calculations in ` PieChart . java ` to improve legend positioning and ensure proper
added a check to return early if the world transform det is zero to optimize performance by avoiding unnecessary rendering operations
added a new file ` MaryScriptCreator . java ` that implements a script for generating Mary scripts to facilitate the creation
added remote source host attribute to the flowFile in ListenHTTPServlet . java to ensure the flowFile reflects the remote source ' s host
refactor compaction logger initialization and file deletion logic in LevelCompactionTsFileManagement . java to improve code clarity and ensure proper resource management
updated attribute retrieval from " xlink : href " to " href " in ComponentDescription . java to ensure compatibility with the latest API changes
camel - 14284 : camel - aws2 - s3 : use a more descriptive timeout checker name
hbase - 15832 addendum log regionserver state information when cluster be shut down
added null checks for spans in Slf4jSpanLogger and DefaultTracer classes to prevent potential NullPointerExceptions during span logging
trim whitespace from the active options before adding them to the configuration to improve option handling by preventing whitespace errors
added depth preference handling in DepthController to enable dynamic wallpaper depth adjustments based on user preferences
added an assertion to verify the success count of the overseer in the OverseerTest class to ensure that the overseer test
replaced the method ` getKernelVersion ( ) ` with a direct return of ` true ` in ` LinuxFileStore . java ` to
refactor ExecConstants for improved readability to enhance maintainability and clarity of the code
removed the import of ScreenRecordRule and the ScreenRecord annotation from ThemeIconsTest . java to streamline screen recording functionality by eliminating
added a method to set the scan attribute for paging in ScanUtil and updated TableSnapshotResultIterator to utilize this method to enhance filtering capabilities
updated lowRange validation in Request and RequestV2 classes to ensure lowRange is only set to a minimum of 1 , 000 , 000 to
changed access modifier of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java , modified cache size calculation in Async
server : fix zone id from uuid to zone uuid in listhosts api response
[ zeppelin - 4892 ] fix content - type header for livy interpreter
updated filesystem removal logic to include zfs parameter to ensure proper handling of filesystems during removal
changed the type of the ` obj ` variable from ` Object ` to ` String ` in ` HttpRequestBuilder . java ` to improve clarity
increased the polling wait time from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 5 ` and ` hard
fix flaky test : listener . beforeevent and listener . afterevent be call twice
refactor multiple dial - related classes to improve code organization to enhance maintainability and readability of the dial - related components
reformatted error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the newer version
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a
[ mojang ] remove legacyxmllayout . jar check from fmlclientlaunchprovider . setup
[ hotfix ] [ yarn ] replace yarnclient with createyarnclusterdescriptor in yarnitcase
update localmapstatsprovider to include map that do not have data
deleted the AllTests . java file to the test suite is no longer needed for the current test suite
added character constants for non - breaking hyphens and zero - width space in AbstractWordConverter to enhance character handling for better text formatting
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to ensure that large stack trace invocations do not star
replaced ` getResultMappings ( ) ` with ` getResultMappingsForRowKey ( nestedResultMap ) ` in ` createRowKeyForMapped
added a flag ` eventHandled ` initialized to true in ` UIText . java ` to indicate that the event has been handled correctly
deleted the ` Controller . java ` file and renamed the ` Weldby ` class to ` WeldModule . java ` to remove unused
[ zeppelin - 1341 ] fix the problem of capture group in empty check .
replaced the initialization of ` liquibaseProLicenseKey ` with a protected field ` liquibaseProLicenseKey ` to
refactor setMeasuresHierarchy method calls to use a dedicated setMeasuresHierarchyMemberReader method to improve code readability and maintainability by
add option to generate debug information for node source position
[ hotfix ] [ doc ] fix typo in mondrianproperties
added support for friend paths in Kotlin compiler and step factories to enhance flexibility in handling Kotlin compiler arguments
added aliases for " BATAK , " BRAH , " BRAHMI , and " MANDAIC " in Character
updated equality checks in ExecutionCommand to use equals method and added a utility method for converting a JSON string to ExecutionCommand to improve code readability
refactor Mockito class implementation to improve code readability and maintainability
refactor OCFile . java to improve code organization to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope instance
refactor CSS parsing logic to handle both CSS _ NUMBER and CSS _ PERCENTAGE types to improve clarity and functionality of parameter validation
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to ` LocalIndexIT ` to verify the correctness of
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` and updated method names in ` BackupHelperTest ` and ` LanguageHelperTest `
updated string resource calls to use a centralized method for displaying toast messages to improve code readability and maintainability by reducing duplication
refactored conditions in RendererUtilities and updated corresponding test cases in RendererUtilitiesTests to improve readability and maintainability of the code
replaced ` Iterator < JsonNode > ` with ` ArrayNode ` for ask and bid in ` KrakenStreamingAdapters . java ` to
added error handling for SQLite column addition in FileContentProvider to prevent potential issues when adding the same column twice when upgrading from 24 - >
removed System . err . println ( line ) statement from AsyncServletIOTest . java to clean up the code and improve readability
added a new method to compute online data size based on hash table load factor and updated totalSize and bigTableSize calculations accordingly to improve data size
refactor ` buildView ` method to accept a ` Context ` parameter and apply theme - based background resources to enhance flexibility in view rendering
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and a corresponding test in ` SecurityMockMvcResultMatchersTests `
vpc : set vpcid to null to avoid npe when vpc be not in use
[ flink - 10955 ] [ test ] disable flink savepoint test for 1.11
changed the access modifier of multiple fields from ` @ ` to ` private ` in multiple classes to improve code readability and consistency by standardizing
removed the variable ' n ' from the for loop and added a condition to check if ' i ' is less than the size of actions to
updated ` BitmexStreamingExchange ` to extend ` BitmexExchange ` instead of ` BaseExchange ` to ensure compatibility with the latest
[ ds - 1348 ] add test for orgunit and orgunit relationship virtual metadata ( # 1348 )
added null check for spatial before casting to Geometry to prevent potential NullPointerExceptions when spatial is null
updated ` ConditionalTokenFilter ` to set ` lastTokenFiltered ` to true and modified position increment logic in ` FixedShingleFilter ` , and
make unsafestorenode and storefieldnode use graph . unique ( ) instead of graph . unique ( )
replaced super . putAddress ( base + offset , value ) with io . putAddress ( base , value ) in BoundedMemoryIO
added an assertion to verify that the casEventRepository ' s load method does not return an empty list to ensure that the event repository does not
removed the ` attributeTemplateName ` , ` attributeLine ` , and ` attributeCol ` parameters from ` AuthenticationAttrProcessor ` to simplify the code
added null key validation in MacOSXPreferences . java and created a new RemoveNullKeyCheck . java file to ensure that null keys are
added a runtime exception to the setTypeface method in CodenameOneTextPaint . java to ensure that the method throws a runtime exception for
implemented the ` open ` method in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS `
simonstewart : remove deprecate seleniumrunner . fail ( string message )
simplified the conditional statement in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to remove unnecessary ResultObject class and simplify result object creation to improve code clarity and maintainability by eliminating
updated SQL syntax in CreateTableGeneratorTest . java to include quotes around the table name to ensure proper SQL generation for schema names with special characters
added logic to handle filter mode in VectorizationContext to ensure correct handling of filter expressions in the query execution
fix type inference error in exhaustivesearchphaseconfig
replace ReorganizeTableStatement with modifyDataTypeStatement in ModifyDataTypeChange . java to improve code clarity and maintainability by using a more
updated cluster name handling to use constants in SystemPropertiesUtils , ConfigNode , and DataNode classes to improve code readability and maintainability by
refactor connection handling in PeerGroup . java and update exception type in ClientConnectionManager . java to improve error handling and enhance logging clarity
added style handling logic for various style strings in Nano . java to ensure correct style assignment based on the provided strings
use adventurenbtconverter . fromadventure ( ) to fix datafixer . fixup ( )
updated the return statement in NoToStringOnStringType . java from " Use ` String ` " to " No # toString ( ) on String
updated the JVM option from " - Xmx64m " to " - Xmx32m " to optimize memory usage for better performance
fix : dataprovider . retry ( ) should return failurecontext instead of int
updated the return statement to use a variable ' bandwidth ' instead of a constant ' tokens [ 0 ] ' to ensure accurate retrieval of the token
danielwagnerhall : implementing pop - up and network traffic functionality in the webdriverbackedselenium
refactor ` doPrintEntry ` method to remove the ` printWarning ` parameter and simplify method signatures to streamline code by eliminating
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added checks for dialog opacity , shape , and background color in Dialog and Frame classes to ensure that dialog and frame components are opaque and not un
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem ` to ensure immutability of the ` state `
added support for Redis standalone configuration in RedisObjectFactory to enhance configuration flexibility for Redis connections
added lastseendelayedmessage property to allow jabber to know if it have be mark a delayed or not
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to simplify
refactor share creation and retrieval in FileOperationsHelper and OperationsService classes to use a unified service for sharing operations to improve code maintainability and
removed unnecessary condition in ` BeanDefinitionInjectProcessor . java ` and added ` @ Inject ` annotation in ` FieldPropertyInject . java ` to
replaced calls to ` classicPlotWorld . getMinBuildHeight ( ) ` with a variable ` yStart ` to improve code readability and
added null check for exceptions in SmackIntegrationTestFramework to ensure proper handling of NullPointerExceptions during integration tests
tmi - tiff : do n ' t read interop sub - dirs for exif with interop sub - dirs
added a new ENABLED _ LS constant in VersionTargetGraphMode and modified the executor assignment logic in VersionedTargetGraphCache to accommodate different
added a condition to check if the child format is a video in DLNAResource . java to ensure proper handling of video formats in the
chore ( regen ) : update license year for generated file
added a static method ` load ( ) ` to ` LwjglNativesLoader ` and modified ` LwjglApplet `
updated CSVRequestHandler to handle escape parameters and improved encapsulator handling to enhance flexibility in CSV processing by allowing custom escape options
added validation for only AUTHORIZATION _ CODE grant types in ClientRegistrations . java and updated corresponding test cases in ClientRegistrationsTests .
updated exception messages in Throwable . java and added a method to initialize throwable suppression in SuppressedExceptions . java to improve clarity of error
added a SQL query and assertions in DerivedTableIT . java and modified the OrderedResultIterator constructor in ClientAggregatePlan . java to ensure
added functionality to retrieve the RSquare value in RegressionEvaluator and updated StreamExpressionTest to verify the correctness of the RSquare value
added handling for request header names in ThreadContextMDCServletFilter to ensure all request headers are processed in the servlet context
refactor code to use a local variable ` mapWork ` instead of casting it to ` MapWork ` to improve code readability and maintain
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport classes to improve code readability and maintainability by reducing
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test method in JwtIssuerAuthenticationManagerTests to improve caching efficiency and
updated the condition from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for database
do n ' t cache interop function type if it ' s not a method
removed a redundant sleep statement in AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating unnecessary sleeps
added a new file ` KernCrash . java ` that implements a custom font rendering with Kerning functionality to facilitate
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure that the test case handles potential errors gracefully
added a method to retrieve network interface addresses with a prefix in NetUtil . java to enhance functionality by allowing dynamic interface address addition based on prefix
[ zeppelin - 4892 ] fix potential deadlock in hikariconfig . shutdown ( )
updated the client address check from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java `
refactor Assert class to improve code readability to enhance maintainability and ease of understanding
added a new test file ` Issue247Test . java ` to verify the functionality of the ` TreeMap ` class to ensure that the
changed the type of the ` results ` set from ` Set < CategoryItem > ` to ` Set < String > ` and modified the `
added logic to check if the person ' s date is a leap year before validating the max age to ensure that the person ' s max age
added error handling for alarm and error codes in GrblController to improve error reporting for better user feedback
added a condition to return a default home button label when no screens are available to improve user interface responsiveness by providing a clear
removed the ` count ` parameter from the ` getTrades ` method across multiple classes to simplify the method signature by removing unnecessary parameters
updated ConsoleReader to use stripAnsi for cursor calculations and modified loop conditions in MemoryHistory to improve code clarity and ensure proper handling of
updated the jdkPath assignment to remove the " . jdk " suffix to simplify the path construction for better readability and maintainability
replaced calls to ` input . getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) ` across multiple files
added a logger parameter to the JFCModel constructor and updated related methods to enhance logging capabilities for missing control settings
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance value is positive to prevent runtime errors
added methods to create and drop views in TestUtil . java and implemented a test case for view privileges in DatabaseMetaDataTest . java to improve
added support for checking stable float and double expectations in NaNTest . java to ensure tests are run on both X86 and X86 architecture
added a new ` DesktopTaskbarUIController ` class and integrated it into ` TaskbarManager ` to manage the hotseat icon
add progress - based task count listener to moditemadapter so it can be run on ui thread .
refactor methods in mmm and ppp files for clarity to improve code readability and maintainability
refactor interceptor handling in AnnotationGrpcServiceDiscoverer and update annotations in GrpcServerAutoConfiguration to improve code clarity and maintainability
updated the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and modified the ` ChainingServicesManager ` class implementation to ensure
add log to resourcepackloader for modinfo generation
chore : update gapic - generator - java version to 2.1 . 0 ( # 44 )
added methods to set the expandX , expandY , and fillX properties in the Cell class to enhance flexibility in cell growth behavior
refactor DefaultInputHandler to replace currentBindings with bindings and simplify keyStroke handling to improve clarity and maintainability of key binding management
add try - catch to prevent test failure on ci server
replaced long [ ] [ ] [ ] with byte [ ] [ ] and added a memory fail count check in MetricsMemoryTester .
deleted the JobParametersPrototype . java file to the functionality was no longer needed in the project
added a securityEnabled flag to the MappingsTable class and updated related methods accordingly to enable security - related functionality based on configuration settings
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE constant from true to false to disable file output during development
do n ' t eospropagate omx . rk . video _ decoder . avc for amazon model
[ java ] check if log buffer be connect before set the publisher limit .
added a check for no info output options in the databaseInfo null check to ensure proper handling of output options when no info is present
enable ssl by default for driver uri
added DOMOutputOptions to the buildDOMSubtree method in DOMConverter . java to enhance error output for XHTML rendering
refactor Assert class to improve code readability to enhance maintainability and ease of understanding
[ java ] add ` ` retain ' ' option to publish .
remove @ JsonIgnore annotation from TestResultSummary . java and update test cases in EventSerializationTest . java to ensure proper serialization of test case
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix the name of window function
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter .
use read - only lock in abstractsessioncontext . setssionidcontext .
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and
[ hotfix ] [ table - planner - blink ] replace calcitesqldialect with ansisqldialect
changed log level from debug to trace in FirmwareUpdateService . java to provide more detailed logging for missing firmware update handlers
added unit tests for handling null date and timestamp scenarios in DateTest and GetObjectTest classes to ensure proper handling of null values in date and timestamp
refactor string concatenation logic in StringSubject and Subject classes for clarity to improve readability and maintainability of the code
added a test method to verify repository permissions for multiple teams in UserModel to ensure correct handling of repository permissions for different teams in the application
added a new file Test7088020 . java that implements method handles for testing with incorrect argument types to ensure that method handles correctly handle
refactor audience restriction validation to use a set for improved clarity to enhance readability and maintainability of the audience restriction validation logic
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code readability and maintainability to streamline
updated the handling of the ` _ stderr ` variable to allow null values to improve robustness by preventing potential NullPointerExceptions when ` _ stderr
added a new constant ` SEPARATION _ ORDER ` in ` Warning . java ` and modified the logic in ` BasicEventSimulationEngine .
updated the parameter in the optimize method from offlineTableConfig to realtimeTableConfig to ensure the optimization process uses the correct real - time table
refactor aggregation SQL statement handling in PhoenixHBaseAccessor . java and add a property check in UpgradeCatalog240 . java to
[ hotfix ] fix checkstyle violation in savepointv2 and filestatehandle
added Bluetooth class handling methods to ShadowBluetoothDevice and ShadowBluetoothDeviceTest to enable proper functionality for setting and getting Bluetooth class
fix checkstyle issue in util / glowplayer / uuidlistfile . java ( # 669 )
[ te ] fix npe in sum ( ) when list be empty
replaced ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with ` graph . readUnlockAll ( ) ` to stream
updated coreNodeName construction to use coreProps . getCoreName ( ) instead of coreName to ensure consistent retrieval of core name from node properties
change chatactivity to refresh the contact list on backpressure change
updated test cases in TaggerParserPosTagCompatibilityITest . java to improve test coverage for tagging functionality
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
modified the condition in ` mmm Types . java ` and added a new class ` ppp T7005671 . java ` with null
updated triangle calculations in DelaunayTriangulator and replaced EarClippingTriangulatorTest with DelaunayTriang
added ` @ Override ` annotation to several ` ArrayList ` , ` PriorityQueue ` , ` LinkedHashMap ` , and ` TreeSet ` classes to ensure
refactor JWTClaimsSet initialization to use builder pattern to improve code readability and maintainability
refactor state management in StackOverflowCheckImpl to use local variables for improved clarity to enhance code readability and maintainability by redu
added shadow methods for SQLiteDatabase and ContentValues in Robolectric and updated imports in ShadowContentValues and ShadowSQLiteDatabase classes to
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` in ` BKDWriter . java ` to utilize a custom comparator
replaced language , country , and variant properties with script , country , and variant properties in Locale . java to enhance locale management by allowing dynamic
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct text alpha is returned for the last set
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to ensure accurate logging of the number of Property
replaced specific test class imports with a call to UaaJunitSuiteRunner ' s allSuiteClasses ( ) method to streamline test
trim whitespace from token tokens in GzipFilter . java and update test parameters in GzipFilterDefaultTest . java to ensure proper handling of whitespace and
removed unnecessary whitespace in Response . java to improve code readability and maintain consistency
updated the default regex implementation from JDK to JONI to ensure compatibility with newer regex patterns
replaced ` LooperExecutor ` with ` Executor ` and replaced ` Future ` with ` FutureTask ` in ` ViewCapture . java `
mary : add support for the ` ` style ' ' query parameter in the ` ` info ' ' request
added a check to create a parent folder if it does not exist and throws an exception if it does not exist to ensure that the parent folder
updated the default node discovery bind IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " to
camel - jbpm - camel - workitem : fix typo in default handler name
pdfbox - 4892 : remove unused import , a suggest by valerybokov
replaced ` WorkModeToggleContainer ` with ` WorkFooterContainer ` in multiple files to improve clarity and consistency in naming conventions
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the code
fix : do n ' t print super class in anonymous inner class
[ hotfix ] [ runtime ] fix memory leak in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder and modified replacement logic in StringQuery to improve readability and maintainability of error messages
refactor ` ConcurrentLRUCache ` and ` FastLRUCache ` classes to use ` AtomicLong ` for ` evictionCounter ` and
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` in ` DefaultTaskExecutor . java ` to
updated the condition to check if intendedDestination is an instance of Inet4Address instead of using InetAddress . getLocalHost ( ) to ensure correct type
[ java ] set data root and source root in the main frame .
added constructors for MarkedClientEnabled and MarkedServerEnabled classes to log the success status of Solon Admin client and server in specified
[ hotfix ] [ table - common ] fix typo in tableenvironment
updated statement timeout handling in MapperBuilderAssistant and modified fetch size and timeout in ExecutorTestHelper to ensure consistent timeout configuration across the statement builder
removed the ` hangingTscTimeout ` parameter from multiple method signatures in the transpilation process to simplify method signatures and improve code read
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocation
replaced instances of ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to ensure
tika - 1348 -- fix for tika - 1348 -- do n ' t throw exception in summaryextractor for non -
make sure updatescript do not trigger concurrent modification
fix ( nio ) : wait for data to be available before try to write to the pipe .
added checks to ensure that ` GuavaOptionalSubject ` does not fail with the same value as ` actual ` and ` expected ` to improve
updated visibility checks in BackgroundAppState and modified midProgress and midAlpha calculations in ShelfScrimView to improve UI responsiveness
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerException when nav is not initialized
ggb - 1341 fix for absolute positioning of image in classic box .
[ hotfix ] [ doc ] fix typo in javadoc
use schedulewithfixeddelay ( ) instead of scheduleatfixeddelay ( ) for astro discovery job
simplified the initialization of irrUnit and pemUnit variables to improve code readability and maintainability
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang due to
updated import statements in GuiceFactoryTest . java to include specific dependencies to improve code clarity and maintainability by using specific dependencies
added system feature management functionality to RobolectricPackageManager to enhance feature management capabilities in the application
refactor RCAFrameworkLoader to use a loop for retrieving property paths and add a new test class RCAFrameworkLoaderTest to improve code
removed a log statement indicating the start of cancellation watch dog to streamline logging by eliminating unnecessary information
added a null check and initialization for enumerationValues in RADProperty . java to ensure that enumerationValues is set to null when it is empty
refactor inline box handling in BoxBuilder and InlineBoxing classes to improve clarity and functionality to enhance code readability and maintainability while
[ flink - 14920 ] [ runtime ] fix the problem that the remote _ ip be not send to akamai . com
removed conditional logic for altering the UPGRADE _ ITEM _ ITEM _ TEXT column type in UpgradeCatalog260 . java to simplify code
updated error messages in BaseTableDataManager to provide clearer guidance on available space and write - permissions for index and temp resources directories to
refactor DatasetUtilities class to improve code readability to enhance maintainability and ease of understanding
added a line to append the selector ID in the key to improve the identification of the selector by including its ID
updated debug logging statements in GouraudShadingContext . java for consistency to improve code readability and maintainability
updated taskbar visibility handling in StashedHandleViewController and added alpha updates in TaskbarDragLayerController and TaskbarLauncherStateController to
removed unnecessary whitespace in KeyExchange . java to improve code readability and maintain consistency
added a check for ` JdbcConnection ` before executing a query in ` CockroachDatabase . java ` to ensure proper handling of database
updated the logic for determining the index of " 2 . log " and " 3 . log " files in ServerMainTest . java to ensure
added methods to retrieve media recordering MIME type in CodenameOneImplementation , MediaManager , and ImageIO classes to enhance media recording functionality
make shaderhelper . useshaders ( ) public instead of confighandler . useshaders ( )
updated the BindableFilter condition in DruidAdapterIT . java and modified the return value in the DruidAdapterIT . java file to
updated the instantiation of ZkStateReader in CloudSolrServer . java to ensure consistent timeout handling for ZkStateReader
refactor XMPMetaParser to improve code formatting and disable external XML features to enhance readability and maintainability of the code
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced a conditional check with a while loop for checking for the presence of " < script > " tags to improve code readability and maintain
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic for better clarity to
replaced calls to ` getTemplateProperty ( ) ` with ` borderIsNotSetOrBlank ( ) ` in ` BorderPropertyTemplate . java `
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity for clarity in reconnect
refactor ` InternalDropAllCommandStep ` and ` HubUpdater ` to return ` HubRegisterResponse ` instead of void to improve response handling
replace bitwise operations with ` Byte . toUnsignedInt ( ) ` in multiple Java files to improve clarity and consistency in handling unsigned byte values
[ hotfix ] fix checkstyle violation in opentracingtransactionproducer
updated the default dependency from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to reflect the correct caching behavior in the build engine
changed the rangePannable property from true to false to disable range pannability in the plot implementation
updated the logic for managing the main active page in AllAppsContainerView to ensure proper management of the work mode switch view based on the current
changed access modifiers of ` glCaps ` and ` renderer ` to private and initialized them in ` Visualizer2TopComponent . java ` to
added handling for CancellationException in FunctionTest . java to improve error management by catching potential cancellation exceptions
changed constructors of ` JarFileResource ` and ` JarResource ` to be protected in ` JarFileResource ` and ` JarResource ` classes
refactor DefaultTrackSelector to improve code readability to enhance maintainability and facilitate future updates
added a delay of 200 milliseconds to wait for unseq merging to complete before proceeding with compaction operations
updated the expected currency from AUD to BTC in the BTCMarketsAdaptersTest to ensure the test reflects the correct currency being
updated the table name from " Post " to " post " and modified assertions in HibernateDTOProjectionTest and JPADTOProjectionTest to
refactor Unicode class to improve code readability to enhance maintainability and ease of understanding
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
remove unnecessary whitespace in SendHeadersFirstPublisher . java to improve code readability and maintain consistency
camel - aws - sse : use jsonpojobuilder instead of custom jsondeserializer for sse customer key .
added support for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to enhance flexibility in handling BIG _ DECIMAL dictionary values
replaced references to ` inner ` with ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper . java ` to improve clarity
removed annotation printing from generic parameter type to streamline the code by eliminating unnecessary output
added a new preference for AC3 compression and modified playback state handling in the PlaybackController and VideoManager classes to enhance compatibility with AC3
updated the return statement in LocalNode . java to include a null value in the HttpResponse to ensure that the return value is properly set to null
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to address deprecation warnings related to Common
added a test method to validate SQL query execution in IoTDBExtendTemplateIT . java to ensure correct handling of SQL statements and schema templates in
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
jme3test : fix issue # 358 : incorrect positioning of text
added unique names for ` QueuedThreadPool ` and ` ScheduledExecutorScheduler ` in ` ClientConnector . java ` to improve clarity of thread
refactor JScrollPane and JSplitPane initialization in ViewResultsFullVisualizer . java to improve code readability and maintainability by reducing
added descriptions and a new field for user ' s phone numbers in ScimUserEndpointDocs . java to enhance clarity and maintainability of
added private constructors to classes and methods in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles to enhance encapsulation and prevent unint
added null checks for ` responseMap ` and ` statusCode ` in ` JsonHttpPropertyRequest . java ` and ` URLStreamProvider . java
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a condition to check if ` DEFAULT _ PARALLEL ` is not equal to ` parallel ` in ` XmlSuite . java `
vmware : fix checkstyle violation in test
added a condition to check for SCARD _ E _ NO _ SMARTCARD in the TerminalImpl class to enhance error handling by preventing
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary system output during test execution
added a list parameter to the bind method in BindyKeyValuePairFactory and BindyKeyValuePairDataFormat classes to allow flexibility in binding
set default value of useowner and usetimestamp to false
updated method signatures to use ` ThrowingRunnable ` instead of ` Runnable ` to improve error handling by providing a more specific exception type
refactor CrawlURI to handle null values for ` via ` , ` viaContext ` , and ` pathFromSeed ` to improve robust
camel - aws - sdb : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version string from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in Liquib
change proxy . cert . validity default value to 90
replaced the ` frame ` variable with ` smoothDelta ` and introduced ` lastDeltaUpdate ` for tracking elapsed time to improve clarity and
added pagination support to the HttpBatchReader and HttpScanBatchCreator classes to ensure proper handling of table names and pagination in JSON queries
added null check for CompactionInfo client in Worker . java and created a test for FindNextCompactAndExecute in TestWorker . java to
added fragment state saving functionality in ShadowFragmentActivity and corresponding test in FragmentActivityTest to ensure proper handling of fragment state saving in the fragment activity
refactor code formatting in BatchResourceFactoryBean . java for consistency to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure proper handling of Android color references in the ColorResourceLoader
added error handling for NoResultException in AbstractJPAQuery to improve robustness by handling potential NoResultException during query execution
replaced the variable ` fromCache ` with ` owner ` for better clarity to improve code readability and maintainability by using a more
updated the method to retrieve the wallpaper depth preference using LawnchairApp ' s instance to ensure compatibility with the latest Lawnch
removed redundant import of ProcessTools in LocalManagementTest . java to streamline the code by eliminating unnecessary dependencies
removed the parameter ` now ` from the ` updateTotalEnergyAverageUsage ` method in the ` EnergyProcessor ` class to simplify
added null checks for extensions and improved string representation in ExtensionStack . java to ensure robust handling of null values and avoid potential NullPointerExceptions
2 . x : fix flowable . flatmap do n ' t dispose subscriber on error .
added connection timeout settings to MultiGetRequest and modified ConnectionManager initialization in ControllerStarter to improve connection management by allowing configurable timeout settings
removed unnecessary line breaks in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to improve clarity and consistency in naming conventions
removed duplicate fetchers for SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java to streamline event fetching logic
added a new test method to verify that output hash is not calculated when cache is not writable to ensure proper handling of build rules in the caching
camel - 14884 : camel - netty - should use bytebuf for message body in camel - netty
updated the method call to use ` Warehouse . getQualifiedName ( tbl . getTTable ( ) ) ` instead of ` alterTbl . getOld
updated the IllegalArgumentException message to specify that the Vertx instance must be created with the preferNativeTransport option set to true to create domain sockets to
split unit and integration test for enum and color type handler
refactor StreamEx class to improve code readability to enhance maintainability and ease of understanding
added hint settings for JavaEE query timeout and lock timeout in SessionImpl . java to enhance query performance by reducing unnecessary timeout settings
added a new class ` StaticLoggerBinder ` that implements ` LoggerFactoryBinder ` to provide a single instance of ` ILoggerFactory ` for
replaced instances of ` this . familyMap . put ( family , list ) ` with ` familyMap . put ( family , list )
added checks for window orientation changes in TaskbarManager to ensure proper handling of window orientation changes
fix unescaping of nickname in jabber chat room
updated longStackPut method signature in StoreDirect . java and added a new test class Issue265Test . java with compact and compact methods to
added @ SuppressWarnings ( " mutable " , " mutable " , " SelfAssignment " , " ImmutableEnumChecker " , " ArrayToString " ,
( chore ) camel - jbang - test - refactored executionflowcontroltest to avoid circular dependency
refactor conditional statements in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability
modified the NBWriteServlet and TestWriteListener constructors to include an unlimited parameter to enhance flexibility in handling unlimited write scenarios
fix invalid block total difficulty in minercoinbase ( # 1560 )
refactor action handling in DefaultPlaybackController to streamline window seekability checks to improve code readability and maintainability by eliminating unnecessary
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and refactored verification cache cleaner initialization in SecurityServicesFeature .
added conditional calculations for bend angle and distance in AllAppsView . java to optimize performance by avoiding unnecessary calculations when mUniformAlloc is
added a check for the presence of a colon in the key in HttpURLConnection to ensure proper handling of keys containing a colon
added PrincipalResolver annotation to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable bean name resolution for principal resolution in the authentication process
replaced ObjectMapper with Noggit ' s ObjectBuilder and added UTF - 8 encoding handling in DelegationTokenResponse . java to improve JSON parsing
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve handling of leading slashes in string operations
added methods to match patterns in ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to enhance pattern matching functionality and ensure
[ hotfix ] [ hbase ] fix string concatenation in loadincrementalhfiles
make fire fire fire on water potion , not just water potion
removed unnecessary whitespace in the beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintainability
updated calculation of decreasePercent in ContractStateCapsule and adjusted formatting in ReceiptCapsule and ResourceProcessor to improve code readability and maintain consistency
refactor AsyncContentProducer to use a local ServletChannelState variable for readiness checks to improve code readability and maintainability by reducing
added a null check for the weightField parameter in DocumentDictionaryFactory to ensure that the weightField parameter is mandatory to prevent runtime errors
added plist variable substitution functionality in AppleBundle . java and a corresponding test in AppleTestIntegrationTest . java to enhance plist variable handling
do n ' t turn turret if they ' re not in the world .
change return type of adaptOrder method from OrderCreateApiRequest . OrderCreateApiRequestBuilder to OrderCreateApiRequest . OrderCreateApiRequestBuilder to ensure type
added a new file ` PreParseGrammarTest . java ` to implement XML grammar preparation testing to facilitate testing of XML grammar parsing
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java files to improve code clarity by suppressing missing documentation warnings
added FontManager import and overriddenFont method calls in ExtendedEditText . java to ensure font overrides are applied to the current context
added a null check for currentUser in AuthorizeTag . java and a corresponding test in AuthorizeTagTests . java to ensure proper handling of null user
camel - 14884 : camel - cxf - do not encode uri that contain unsafe character . thanks to jbellis for the
added a ` setUpData ` method to the ` JDBCGeometryTestSetup ` class to ensure proper setup of data for geometry tests
removed the import of DumpHandler in MultipartFilterTest . java to streamline the code by eliminating unnecessary dependencies
[ hotfix ] [ runtime ] throw a flinkexception if restore attempt for already cancel task
add server . rmi . create property to enable rmi registry creation
replaced String . join with StringUtils . join for string concatenation in CompactionManager . java to improve code readability and maintainability by using
added methods to set display metrics in ` ParallelUniverse ` , ` RobolectricTest ` , ` ResBundleTest ` , and
[ java ] add the cluster member id to the service heartbeat .
added conditional handling for total thread allocated bytes in TestThreadMXBean based on version check to ensure compatibility with newer versions of Java
modified the return logic in CustomExpression to handle negative and positive infinity values and adjusted the hash code logic to ensure accurate handling of NaN values and
updated logging statements in AjaxListener . java to use parameterized messages and improved error handling to enhance code readability and maintainability by reducing
added GET and POST routes in Routes . java and implemented authentication methods in AuthenticityController . java , along with a corresponding test case in
added assertion to ensure nextNode is alive in LoweringPhase . java and reformatted code in SnippetTemplate . java to improve code clarity
updated the logger reference in HttpClientRequestImpl from ConnectionManager to HttpClientRequestImpl to ensure consistency with the class used for logging requests
remove duplicate code in defaulttrackselector . equals ( )
[ hotfix ] [ runtime ] fix checkstyle violation in runtimeserialization
ggb - 1352 fix for image with crop box .
refactor UnitOfWorkFactory class to improve code readability to enhance maintainability and ease of understanding
added a new variable ` allAppsCellWidthPx ` and updated related calculations in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and
tika - 1342 - add content type name to the submd if it ' s not blank .
updated the URI construction in ThumbnailsCacheManager . java to use localId ( ) instead of getRemotePath ( ) to improve clarity and
added checks for input mark and reset methods in Source . java to ensure proper handling of input marking and reset operations
added @ Deprecated annotations to AsyncProcessor , BehaviorProcessor , AsyncSubject , and SerializedSubject classes to indicate that these classes should no longer be used
added a new configuration property ` SERVER _ SHOW _ ERROR _ STACKS ` in ` Configuration . java ` and integrated it into ` Amb
cloudstack - 4892 : fix the bug that delete account do n ' t work in some case .
refactor foreign call handling in SPARCArithmeticLIRGenerator to remove unnecessary null checks for fremCall and dremCall to
[ drools - 5852 ] fix deprecation warning for drl rule template
updated the onRequestPurchaseResponse method to run on the UI thread using a serial execution mechanism to ensure that the purchase callback is executed on the
increase default timeout from 100ms to 1000ms in UnboundedSourceSystemTest . java to improve test stability by allowing more time for
reordered import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code readability and ensure proper handling of parent
deleted the MrefStat . java and MrefStat1 . java files to remove unused code to streamline the codebase
replaced direct retrieval of scope with a call to StringUtils . isBlank ( ) in DependencyInsight . java to ensure a default value is returned
refactor error handling in BTCETradeServiceRaw to use constants for error messages to improve code readability and maintainability by avoiding
[ hotfix ] [ test ] use hamcrest assertion instead of junit in integrations / cdi / cdi - kafka
added a method to retrieve payment request URLs in BitcoinURI class and corresponding tests in BitcoinURITest to ensure proper handling of multiple payment protocol
[ optaplanner - 383 ] fix illegalargumentexception when use a parameterized collection .
removed redundant call to setFolderInfo in FolderPagedView . java to streamline the code by eliminating redundancy
fix ( jfr ) : fix jfrthreadlocal . notifyeventwriter ( ) call in jfrchunkwriter . write ( )
refactor null value handling in BasicAbstractTuple to use a loop for improved readability to enhance code clarity and maintainability by using
refactor LintUtility to use InputResource for reading linter configurations to improve resource management and error handling during file reading
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a Runnable implementation to ensure backgrounds and padd
fix inventory tick not be call properly .
added a new case for OCELOT _ BABY in PlayerEvents . java to handle the OCELOT _ BAB
[ hotfix ] [ runtime ] add miss @ publicevolving annotation to statettlconfig
added null check for variable ' x ' in PreparedStatement and Array classes to ensure proper handling of null values in prepared statements
[ java ] add an option to describe all recordings in the archive .
replaced double quotes with single quotes in StringBuilder . java to improve code readability and consistency
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest ` to verify JSON serialization functionality to ensure proper handling of JSON
added a method to remove transaction and block caches in BroadTest . java and updated JUnit imports to improve test clarity and ensure proper
added handling for LensMaskOpen , LensMaskClose , and LensMaskOff commands in AmcrestHandler and Dahua
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to
refactor ChangeLogIterator constructor to accept a list of ChangeSetFilters instead of a single list to improve flexibility in handling multiple ChangeSet
[ gr - 18686 ] do n ' t swallow guest exception in polyglot launcher
[ hotfix ] [ ec2 ] fix option ` ` opt _ out _ tracing ' ' be not support in ec2
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for the classes
replaced the method for handling annotation array initializers in SpacesVisitor . java to improve code readability and maintainability by using a more
fix : add servercacheoptions . copy ( boolean nearcache ) . setnearcache ( true )
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to ensure that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` to
updated URI constants from LIVE _ URI to PROD _ URI and improved exception handling in KucoinExchange . java to enhance cl
updated string concatenation syntax and modified search path handling in SpringResourceAccessor . java to improve code readability and maintain consistency in resource path formatting
[ smarthome ] add unit test for microwatt per cubic meter and per square centimetre
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure
deleted the Tls12SocketFactory . java file to the functionality was no longer needed in the project
refactor : remove duplicate code in texbibentriesresolver
added a method to check for Robolectric ' s legacy mode in ResourcesTest . java to ensure compatibility with Robolectric '
added a condition to return " DOUBLE PRECISION " for FirebirdDatabase in DoubleType . java to ensure proper data type handling for Firebird
added null checks for ` dataSource ` and ` transactionManager ` before assigning them to avoid potential NullPointerExceptions during initialization
[ gestalt ] add @ api annotation to unittest stub package .
updated the command from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1
# 1186 - use try - with - resources to prevent resource leak
updated TermScorer to use scoreMode ' s needsScores method to ensure correct scoring behavior based on score mode requirements
fix npe in dataflowmetrics when no metric be configure
server : fix deployvm api to return all vms for the current user
refactor DynamicPartitionPruner to use a new method for finding the target object inspector to improve code readability and maintainability by reducing
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` and ` ArtifactFilesystemTest ` to
added row selection logic in ThrustCurveMotorSelectionPanel . java to ensure the selected row is correctly set based on the selected state
[ j2kt ] add assertthrowsarraystoreexception ( ) method for j2kt integration test
refactor PropertySource class for improved clarity to enhance maintainability and readability of the code
added environmentName parameter to HttpClientBuilder and updated related methods to support user agent configuration to enhance HTTP client flexibility by allowing customizable user agent
refactor session creation and restoration logic in MemorySessionStore . java to use a dedicated restore method to improve code readability and maintainability
updated assertions in ` IssueTest . java ` and modified ` Reporter . java ` to use ` IdentityHashMap ` instead of ` HashSet ` to
updated ByteArrayDataSource initialization to use a default content type if the file ' s content type is null to ensure proper handling of file content type when
added activationrequestdenied event and fix typo .
added @ SuppressWarnings ( " serial " ) annotation and adjusted sine graph calculations in GraphApplet . java to improve code clarity and ensure proper
added a method to update task views snapshot radius in RecentsView . java and modified visibility of the method in TaskView . java to
added SLF4J logging for schema generation and modified microservice instance revision setting to improve logging clarity and ensure proper handling of swagger content
changed the return type of the ` put ` method from void to int in ` ArrayMap . java ` to return the index instead of void
updated KafkaContainerCluster to improve startup timeout and streamline broker start logic to improve code clarity and maintainability by using a more concise
( chore ) camel - defaultmqpushconsumer : improve retry logic
updated header checking logic in StaticServerHttpHeadersWriter and added a test for header writing in StaticServerHttpHeadersWriterTests to ensure headers are
added package access check for the listener type in EventListenerList . java to ensure that the listener type is valid before attempting to load it
added a CustomAdapter class to manage application lists and images in the ApplicationsFragment and updated the onCreateView method to use a ListView
updated the ` applyIcon ` method to accept both ` iconView ` and ` task ` as nullable to ensure proper handling of null values and
replaced try - finally blocks with try - with - resources in DownloadTracker , DownloadManager , and DownloadStateCursor classes to ensure proper resource
fix ( sqm ) : fix syntax error in sqm - to - sql conversion
added JUnit @ Test annotations and modified method names in HibernateCursorCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests
added a polling mechanism using an ExecutorService and updated variable types in DataInputStreamWithTimeout . java to improve thread safety and handle interruptions during data
added ENABLED _ TS ( 0 ) case to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to
refactor UpgradeCatalog150 class to improve code organization to enhance maintainability and readability of the code
renamed ` testNet3 ` to ` oldTestNet ` in multiple files to improve clarity and consistency in naming conventions
bug fix : do n ' t update property if there be only one geos
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code robustness
replaced ` IndexOutput ` with ` BufferedIndexOutput ` and modified the ` HdfsIndexOutput ` class to extend ` BufferedIndexOutput
pdfbox - 4892 : do n ' t call setclip if the path iterator be complete , a suggest by valerybok
simplified the local address assignment logic in SocketChannelImpl . java to improve code readability and maintainability
refactor TemplateTransformer to use a new method ` addToRow ` for adding values to a row to improve code readability and maintainability by
wallet : improve handling of rename to canonical file on window .
replaced ALPHABET _ STRING with CHECK _ DIGIT _ STRING in Code39Reader . java and updated references in Code39Writer . java
updated the logic for handling unexpected types in NodeGenFactory . java to improve clarity and correctness in handling unexpected types during execution
removed unnecessary conditional check for stored fields in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : fix timestamp with nanosecond in where clause
removed conditional check for ` postedRunnableStacktraces ` before adding ` Throwable ` to ` runnables ` to simplify the logic for adding
fix checkstyle issue in io / entity / gc / gcp / abstractgcsprocessor . java ( # 4696 )
replaced ` assertInitialized ` method with ` waitUntilInitialized ` method in ` ConnectionPoolTest . java ` to ensure thread - safe wait
updated method calls in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use a string parameter " single " instead of null to ensure consistency
refactor FaultTolerantChunkProcessor to replace size calculation with a filter count and update related methods to improve data handling and ensure accurate filtering
updated the ` tabbedMethod ` method to include a newline character and modified the ` main ` method to include exception handling for unexpected return codes
replaced multiple conditional checks with a single assumeTrue method in ConsoleReaderTest . java to improve code readability and maintainability by using a
removed unnecessary check for isAdmin in GetFeedbackSessionsAction . java to simplify code logic and improve readability
adjusted calculations for newSelection and currentPageCol in AllAppsView . java to improve accuracy of selection and message position checks
[ java ] do not call notifyclientonresultsavailability ( ) when initialize a threadinfo object .
added null checks and improved handling of connection list in DataModelManagerDialog and ExportPanel classes to enhance robustness and prevent potential NullPointerExceptions
refactor writeBufferSize to a static final variable WRITE _ BUFFER _ SIZE and update its usage across multiple classes to improve code readability and maintain
replaced the segment size calculation method with a SegmentInfo instance in DocumentsWriter . java and added a test for no documents index in Test
fix a bug where the armature modifier be not validate if the dvert be non - null .
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
replace direct creation of UnsupportedOperationException with a custom implementation that returns null to avoid stack trace filling in stack trace for better error handling
replaced the calculation of label height with a stream - based approach for retrieving line height to improve accuracy in calculating label height based on line height
replaced the singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility by allowing
refactor the handling of quoted strings in AVA . java to improve clarity and maintainability of the code logic
replaced Long . valueOf ( s , 16 ) with IdConversion . convertToLong ( s ) in ServletHandlerInterceptor . java and updated state
added a new test method ` testSmall ( ) ` and ` testBig ( ) ` in ` ServerDatagramConnectorTest . java `
updated SQL query syntax in TestSqlEntityProcessorDelta . java to ensure correct substring generation for COUNTRY _ CODE _ s to improve accuracy in
refactor caching logic in Cache . java to improve performance and maintainability of the code
updated variable names from " e " to " ev " in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in variable naming
modified the doBefore method to remove IOException handling and updated the IndexSearcher initialization to improve code clarity and ensure proper handling of document counts
added a JFrame and JScrollPane implementation in GcodeTable . java to implement a persistent JTable using a JScrollPane with a user interface
replaced a hardcoded WebApp _ CONNECT _ TIMEOUT with a dynamic connect timeout from the configuration to improve flexibility by allowing dynamic configuration of
updated variable declarations and error logging in various Java files to improve code clarity and maintainability
refactor TestMediaService to improve code readability to enhance maintainability and ease of understanding
removed the static string ` HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK ` from the ` Messages ` class to
add desktop markets - print tool for all btc / fiat / crypto currency
improve error message for invalid account name in endpointaddressinterceptor
added multiple registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration functionality for improved
refactor ServerSpanThreadBinder class to improve code readability to enhance maintainability and facilitate future updates
updated user pointer retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified block
updated the field name from " Location " to " the _ geom " and added " number " to the builder in Csv2Shape . java
replaced callGasWord . longValueSafe ( ) with gasCost in VM . java and removed unused imports in Program . java to streamline
refactor parameters handling in the Parameters class to improve code readability and maintainability
added piePlot . setIgnoreNullValues ( true ) to MultiplePiePlot . java to allow null values in piePlot data
refactor bundle loading logic in ResourceBundle . java to streamline the process to improve code readability and maintainability
pdfbox - 4892 : use hyphen instead of underscore to avoid confusion
[ java ] allow action to be run in a freeplane mode even if they be not allow during edit .
added a userModified flag to the LoginSamlAuthenticationProvider class to indicate that the user has been modified in the authentication process
added a new file ` TestSealedObjectNull . java ` to test the behavior of ` SealedObject ` with null values to ensure
updated method names from ` onOpen ` to ` setResponse ` in ` ConnectPromise . java ` and ` WebSocketClientConnection . java ` to
added support for SNOW material in BlockEventListener based on server version to ensure compatibility with versions prior to 1.16 . 5 and improve event
updated CryptsyAdapters and CryptsyPublicTrade classes to include an ' id ' field and modified trade handling to include the trade ID
added error handling for closing the HMS connection to ensure proper resource management and prevent potential memory leaks
use random . nextlong ( ) instead of system . currenttimemillis ( ) for seed
updated the device profile parameters and added a new device profile for Nexus 5 to ensure compatibility with the new Nexus 5 device architecture
2 . x : fix refcount not be reset on disconnect .
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP token in the FormatToken and FormatVisitor classes to enhance formatting functionality for
added checks for file existence and file length in SaveTask . java and implemented tests for empty project file overwrite and cancellation in SaveAndLoadTask
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during operations
log4j2 - 1349 add support for mutablelogevent to smtpmanager
updated the PADDING property builder from LengthLike to NonNegativeLengthLike to ensure proper handling of negative padding values
replaced multiple calls to ` createContext ( getUser ( headers ) ) ` with a single ` createContext ( ) ` method across multiple resource
fix the handling of caughtedexceptionref in case of jimple catch
updated import statements and improved error message formatting in JUnitRunner and AndroidPlatformTarget classes to enhance code clarity and provide clearer context
updated cacheSize calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for better performance
added a check for ` start ` in the ` InvocationStageTrace ` class and modified the test cases in ` TestInvocationPublishModelFactory `
added a try - catch block around the loading of a KeyStore instance to handle potential NullPointerExceptions during key loading
updated server socket initialization and modified test assertions in UpstreamCheckUtilsTest . java to use a dynamic port instead of a hardcoded value to
bugfix : fix for split pane with wrong dimension
added conditional checks for OpenGL extensions before retrieving shader storage limits in GLRenderer . java to ensure compatibility with OpenGL versions that support shader storage
refactor PopulatorContext class for improved clarity to enhance maintainability and readability of the code
skip save all notification for project that do n ' t match
added charset handling for JSON output in ZQLJobManager to ensure compatibility with different file encoding settings
added a check for non - empty arguments in the IkStepDefinition class to ensure proper handling of empty arguments and prevent potential ArrayIndexOutOfBoundsException
replaced hardcoded header strings with a constant from the FakeOSSOHeaderDecoder class to improve code readability and maintainability by central
deprecate generate - java - sources option in favor of generate - java - sources goal
removed unnecessary debug log statements related to Apache Derby driver class version check to streamline error logging for better clarity and maintainability
[ hotfix ] [ test ] fix flaky test in ksession
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by redu
added a check for ` hubConfiguration . getLiquibaseHubMode ( ) ` before updating ` liquibase . hub . mode
added constants for Java VM version - specific success and failure commands in Constants . java and implemented a test for it in TestDDRExtensionGeneral
modified font addition logging to handle CompositeFont cases and added a new DebugFonts class to improve logging clarity and facilitate debugging
added HTTP version check in NegotiatingServerConnectionFactory to ensure compatibility with HTTP / 1.1 negotiation
added RateControl import and set No _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable rate control for HTTP / 2
added a new Java file ` Test6741426 ` implementing a Nimbus look and feel with a JComboBox and JTextField
updated the error message in the assertion from " Could not verify the CSRF token " to " ex . getMessage ( ) " to improve clarity
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure robustness by preventing potential NullPointerExceptions
added package declaration for S3CopyObjectRequest to organize code under the appropriate package for better organization
removed accentColor parameter from setupCategory methods and replaced them with direct calls to viewThemeUtils . files . themePreferenceCategory ( ) to simplify
updated the error message in TemporaryFolderUsageTest to include the file ' s root path instead of a relative path to improve clarity of error
replaced custom TypeInformation instances with direct class references in MappingMongoConverter . java to improve code readability and maintainability by using ClassTypeInformation
check for empty or null address in clientnetworkconfig . addaddress ( string , string ... )
added " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate validation by including a specific key
[ java ] return the size of the pipeline output instead of void .
added a conditional check before setting the menu mode in ModeToggleMenu . java to ensure that the menu mode is only set when the popup is
[ java ] fix an arrayindexoutofboundsexception in memoryttfdatastream . read
added a new test class ` FinalizerInfoTest ` to verify the finalization of ` MyObject ` objects to ensure proper handling of final
replaced ` map ` method with ` doOnNext ` method in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator `
[ ds - 3852 ] fix burningmanservice not handle custom issuance .
refactor StringSubject class to improve code readability to enhance maintainability and ease of understanding
updated the byte array size in BatchValidateSignContractTest from 1 , 000 , 000 to 1000 , 000 , 000 and added an Ignore annotation
corrected the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to ensure consistency in method naming conventions
replace " @ " with " from : " in query handling in RetweetActivity and Search classes to ensure correct query formatting for recent suggestions
removed a conditional check for forRebalance in SimulatorDiscoverer . java to simplify the code by eliminating unnecessary complexity
added a new POST endpoint for importing an account in the YubiKeyAccountRegistryEndpoint to enable users to import accounts from the YubiKey
added shaders for various components in ShaderManagerLwjgl . java and updated parameter names in FontMaterialProducer . java to
added null check for ` cnt ` in ` paintOnTopLoop ` and adjusted padding logic in ` SideMenuBar ` and ` Toolbar
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future updates
added a null check for subName before setting the caption in HierarchyBase . java to ensure that the caption is only set when subName
updated data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to align data
added null checks for ` sim ` and ` sim . getCustomExpressions ( ) ` in ` CustomExpression . java ` to ensure proper handling of
remove requestblindvotelistfromnetwork method and use sendrepublishrequest ( ) instead
added a new test method ` testCase4 ` to ` PostgresTest . java ` to verify the functionality of the ` Hikari
updated string literals from double quotes to single quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintain consistency
updated line separator usage in DefaultJavaPrettyPrinter and added StringTokenizer usage in CommentTest to improve code readability and maintain consistency in line separator handling
truffle : use atomicreferencefieldupdater instead of atomicreference in singleimplementor .
added null checks and modified query filtering logic in SimpleFacets . java and a corresponding test in SimpleFacetsTest . java to ensure robust
[ core ] fix merging of bridge and bridgeimpl child in thinghelper .
replaced calls to ` printHelp ( ) ` with ` error ( " A command must be provided " ) ` and ` error ( "
do n ' t create a file if it do n ' t exist
added support for parsing date strings with ' T ' , ' + ' , and ' - ' characters in DateConverter to ensure proper date formatting
added a test for a post with a specific slug in SpringDataJPALockTest . java and implemented a query in PostRepository . java
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and updated related logic in ` Oracle
added a SimpleClientHttpRequestFactory with connection and read timeout settings to enhance HTTP client connection timeouts for improved reliability
updated SourceTest . java to include assertions for file existence and name verification to improve test coverage for the Source class ' s functionality and ensure correct
removed dependency on ALT _ GRAALVM _ VERSION _ PROPERTY and directly set GRAALVM _ VERSION from system properties to simplify code
added logic to reset access and refresh token validity values in ClientAdminBootstrap to ensure proper handling of token and refresh token configurations
updated the return statement to include a conditional check for the Android API version to ensure compatibility with the latest API version settings
refactor references from ' this . ' to direct references in PropertyPlaceholderHelper . java to improve code readability and maintainability by reducing
updated string format in Resources . java for clarity to improve readability and maintainability of the resource file
solr - 12028 : fix flaky test in zksolrclienttest
added import for BigInteger and updated simpleTypes to include BigInteger . class to enhance type handling for BigInteger functionality in MongoDB
added a condition to check if the button text equals the view in HomeFragment . java to ensure that the toast is only displayed when the button
added a condition to check if MEncoder is no out - of - sync and disabled MC0 and Noskip to ensure proper handling
reduce io . netty . eventloopthreads default value to 15
changed access modifiers of several fields and methods from package - private to protected in CountMin4 and updated feedback handling in AdaptiveWindowTiny
added sorting functionality to ` ExternalFileField ` and created a corresponding test class ` ExternalFileFieldSortTest ` to enhance sorting functionality and ensure
updated error message from " Invalid URL " to " Connection Error " in DoiFetcher . java to improve clarity of error reporting for connection
added source attribute handling to event processing in OpenRocketSaver . java and updated FlightDataBranchHandler . java to include source ID
changed the access modifier of the check method from private to protected final to restrict access to the method for better encapsulation
added handling for SynchronizeFileOperation completion in FileActivity to improve file synchronization process and enhance user feedback during file synchronization
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for file path encoding to improve URL handling and ensure proper URL encoding
added a check to return early if the client property " cn1 $ infinite " is not initialized to ensure that the application does not attempt to
updated the initialization of the total variable from 0 to 1 and modified the addition of a value to ensure the total value accurately reflects the
added conditional logic to handle lock timeout in FeedRefreshUpdater to improve error logging for lock timeout scenarios
refactor conditional statements in SolarisAclFileAttributeView . java for improved readability to enhance code clarity and maintainability
replaced the use of ` ArrayList ` with an array for managing edges in ` LatLonTree . java ` to simplify the code and improve
added IOUtils import and resource cleanup in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
update bibtexparser to remove trail carriage return ( # 1186 )
added strict property handling in Main . java and corresponding test cases in MainTest . java to ensure proper parsing of properties based on strict mode and
allow custom constraint to be validate via @ constraint ( validatedby = { ... } )
camel - 14884 : camel - http4 should be the name of the component to avoid conflict with camel - http4
added a waitForThingsToLevelOut ( 300000 ) method call in TestCloudPivotFacet . java to enhance test reliability by waiting
simplified conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability by eliminating unnecessary
refactor ApplicationTest class to improve test structure to enhance maintainability and readability of the test code
replaced String with StringBuffer for string concatenation in ConnectionFactoryImpl . java to improve performance by reducing string concatenation overhead
refactor : rename type to robype to avoid ambiguity
[ java ] send an abort action when a recording descriptor be complete .
added checks for ' cacheKey ' and ' cacheLookup ' in EntityProcessorBase and updated related logic in TestCachedSqlEntityProcessor to ensure proper
added a new file PutfieldError . java that demonstrates the handling of IncompatibleClassChangeError to demonstrate the
fix the issue that aws address do n ' t translate to public address .
hbase - 15827 enqueue memtable flush for cf that have reach memtable _ throughput _ in _ mb and memtable _ operations
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple files
replaced the existing method ` encodedLength ( ) ` with a new implementation in ` Flyweight . java ` to standardize the method
refactor TestMethodResultMapBuilder for improved clarity to enhance maintainability and readability of the code
fix findnulldereference to handle illegalargumentexception and illegalargumentexception
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated return values for various time - related strings in mmm Utils . java and ppp Utils . java to ensure accurate representation of time and
updated logic to handle DeepShortcutView instances in Utilities and FloatingIconView to ensure proper handling of DeepShortcutView instances in the drag layer
changed the type of the ` JwtClaimValidator ` from ` String ` to ` Object ` and updated its validation logic to enhance type safety and
renamed methods for buying and selling quick rates in Coinmate to improve clarity and consistency in method naming conventions
[ cloudfoundry ] refactored coveragecontroller to use coverageconfig
added a check to ensure EventBus is registered only if it is not already registered to avoid potential null pointer exceptions during sticky registration
added a check for ASCII characters in NormalizerBase . java and modified return statements accordingly to ensure consistent normalization behavior based on the presence of ASCII
[ hotfix ] [ runtime ] fix wrong migration check in jobcoordinationservice
added error handling for the SQL update statistics command in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL
( chore ) camel - cometd : migrate to junit4 for camel - cometd and camel - ssl
updated ` HR ` and ` attrs ` parameters in ` HtmlTag . java ` to include ` attrs ( AttrKind . OK , WIDTH ,
added a line to write a " < br / > < br / > " tag in HtmlCoreReport . java to improve the formatting of
updated the calculation of ramBytesUsed to handle null scores gracefully to improve robustness by preventing potential NullPointerExceptions when scores are null
added a new ` StringHolder ` class and a custom ` StringHolderTypeAdapter ` for serialization and deserialization of ` JsonElement ` to enhance JSON
set extra data from mining parameters in MergeCoordinator to ensure proper handling of extra data from mining parameters
added a static map to track the number of arguments passed to ` StringUtils . argsToProperties ` to improve flexibility in handling command line arguments
refactor PathParamServerEndpointConfig to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ migration ] fix race condition in migrationrulelistener
updated method parameter name from ' part ' to ' partOrList ' in RestClientRequest and RestClientRequestImpl classes to improve clarity
( chore ) camel - twitter : move the bootstrap . css to twitterbootstrap / css
added a regex pattern for basic category handling in SpanishTreebankLanguagePack . java to improve category extraction logic for better accuracy in treebank
hhh - 15827 - deprecate entityloader . load ( ) in favor of entityloader . load ( ) .
hbase - 15928 regionserverflushtableproceduremanager and regionserversnapshotmanager should use taskpool . poll instead of taskpool
fix a bug where setsize ( ) be call when the width or height be zero .
fix checkstyle issue in util / hikariconfig / hikariconfig . java
added assureMatchVersion ( ) method to multiple filter factory classes and set luceneMatchVersion to Version . LATEST in AbstractAnalysis
[ java ] fix proxy generation for interface method .
added a conditional check for the first occurrence of the DRLLexer . COMMA in the DRLParser . java file to ensure proper parsing of the
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
improve error message when payload length be negative .
moved PublishSubscribeChannel and related classes from the ' channel ' package to the ' dispatcher ' package to improve organization and clarity of the
updated executionId handling from String to Long in multiple classes to ensure consistent execution ID retrieval across different configurations
added multiple calls to ` digest . update ( ( width > 24 ) , ( width > 16 ) , ( height > 8 ) ) `
added imports for CollectionParams , CoreAdminParams , and LocalSolrQueryRequest in SolrConfigHandler . java and modified logging in SolrConfig .
updated the delay duration in FileSyncAdapter from 24 hours to 30 seconds to avoid too many automatic synchronizations during the synchronization process
fix checkstyle violation in segmentv1tov3formatconvertertest
refactor ` addPathToMTree ` method to accept a ` Path ` object instead of a ` String ` to improve code clarity and
updated URL handling in DefaultPackageScanClassResolver and added a new test method in DefaultPackageScanClassResolverTest to improve URL processing and ensure
[ hotfix ] [ table - common ] move timestampextractorutils to table - common
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` for retrieving LDAP principal and credentials to facilit
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version in ShadowAlarmManager from LOLLIPOP to KITKAT to ensure compatibility with the latest KitK
replaced auto - suggest dialog with a cached file suggestion dialog using SimpleFormDialog to improve user experience by allowing custom filename selection
added a new test method ` testNewput ` in ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
updated the collection name parameter in the stream method from ` collection . getName ( ) ` to ` collectionName ` to ensure the correct collection name is
update zoom handling in MapOverviewImageMouseHandler by removing unnecessary scroll amount calculation to simplify zoom calculation and improve code clarity
added similarity support to KNearestNeighborClassifier and updated related test methods to enhance similarity functionality and improve test coverage
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to replace SolrQueryParser with a new ConstantScoreRange
updated method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity of
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
updated ` requestMtu ` method implementation in ` ShadowBluetoothGatt ` and ` ShadowBluetoothGattTest ` classes to
refactored the output stream creation into a separate method ` createServletOutputStream ( ) ` to improve code readability and maintainability
added error handling for UnsatisfiedLinkError in VoskSTTService to set the Vosk log level to WARNING to improve
replaced HashMap with ConcurrentHashMap for mProcessingChains to ensure thread - safe access to mProcessingChains
updated Japanese and Chinese resource files to replace " all " and " grouped " with " all " and " summary " to improve
updated size check from ` size > 0 ` to ` size > 1 ` in JDBCTypeMapping . java and modified assertions in JDBCTypeMapping
added synchronized keyword to addPlayer and removePlayer methods and replaced direct entity addition with streams in GenshinScene . java to ensure thread safety
replaced the method ` isScreenReaderActive ( ) ` with a new method ` AccessibilityStateTester ` to handle control codes and
updated command behavior checks in MenuBar . java and modified icon handling in SideMenuBar . java to improve command behavior handling and ensure proper icon
removed unnecessary import of Disposable in PoloniexManualExample . java and added state change handling in WampStreamingService . java to
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java to ensure that energy limit values are greater than zero and
updated variable names from ` url1 ` to ` javaUrl ` and added protocol handling in ` UrlBean ` to improve code clarity and
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to allow external access to the namespace prefix reference
refactor assertions in TestRange . java to use a new helper method for date comparison to improve code readability and maintainability by reducing
added server restart logic in BasicAuthIntegrationTest and updated security properties in ZkStateReader to ensure proper authentication status verification during server restarts
fix currency code in tradeschartsviewmodel when use sticky market price
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a local variable
replaced variable ` from ` with ` end ` and adjusted related logic in ` NativeString . java ` to improve clarity and correctness
added file download functionality using FileDataStorageManager in FileDownloader . java to enable file download functionality for better data management
[ java ] set the length of the randomaccessfile to match the length of the log file .
added a method to check if a registry is running in TestLibrary . java and a method to delete a file if it exists in FileUtils .
updated import statements in EditTest , Quick3dMain , and TextureTest to call componentPresetDao . startLoading ( ) to ensure proper
added multiple ` @ SuppressWarnings ( " rawtypes " ) ` and ` @ SuppressWarnings ( " unchecked " ) ` annotations in multiple Java files to
added a null check for instances in TraceFeignContext to prevent potential NullPointerException when instances are null
added a new isolation level constant and modified transaction handling logic in PhoenixConnection . java and PhoenixDatabaseMetaData . java
added transaction handling in ` AbstractStepFactoryBean ` and ` ItemOrientedStep ` classes to ensure proper transaction management and error handling during
replaced CasClient with DirectCasClient in CasManagementWebAppConfiguration . java and refactored the security interceptor implementation to improve client
removed the ` menu _ add _ category ` menu item from ` ListFragment ` and added it to ` NavigationDrawerFragment ` to streamline
renamed method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated method names in ` FileDisplay
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve clarity and consistency in text size management
added a validation check for the fact object before processing it to avoid potential NullPointerExceptions when the fact is invalid
refactor multiple Java classes including DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser to improve code organization and maintain
replace direct return of spans with a new ArrayList instance to ensure that the returned spans list is immutable
removed unnecessary locking mechanism in Liquibase . java to simplify the code and improve performance by eliminating unnecessary lock management
added a ` setRevision ` method to ` MicroserviceVersions ` and updated ` InstanceCacheChecker ` and ` TestInstanceCacheChecker ` to
replaced the constant ` UNKNOWN ` with a formatted string for ` foreignKeyName ` and ` indexName ` in ` TableRetriever . java ` to
camel - 14832 - camel - aws2 - s3 : add uri - endpoint - override option to all the component - s3
removed currency pair parameter from the getBitstampUserTransactions method in BitstampAccountService and added error handling in BitstampAccountServiceRaw to simplify
added error handling for component instance retrieval in BlueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException
refactor push method to return a pushtoken object instead of void
refactor LegacyAddressTest to read data from a file instead of hardcoded strings to improve test reliability by dynamically loading data from a file
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other packages
added a Snackbar setup method and refactored push URL handling in NotificationsActivity . java to improve user experience by displaying push notifications
added logging for channel closure and refactored exception handling logic in NettyAsyncHttpProvider . java to improve error management and ensure proper resource
updated null checks for noWarnAttribute , warnDaysResult , and validDaysResult in LdapPasswordPolicyEnforcer . java to use StringUtils . isEmpty
refactor DefaultAnnotationEngine and Stubber classes to improve code readability and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840
nifi - 1745 : add timezone support to the about and flow resource
updated assertions and logic in Splitter . java and StorageService . java to improve boundary handling and ensure proper split behavior
removed exception handling for IOException during object deserialization to simplify code by eliminating unnecessary exception management
removed redundant synchronization block in CircuitManagerImpl . java to streamline the code by eliminating unnecessary synchronization
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using a more specific exception type
[ hotfix ] [ runtime ] move source / sink to pollablerunner , pollablesinkrunner and pollablesourcerunner
replaced error logging with info logging in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
updated the implementation of ContainerOrderFocusTraversalPolicy to improve focus traversal behavior for better user experience
make sure geolocolocation . getpointlength ( ) return int instead of double
reformatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent for consistency to improve code readability and maintainability
refactored database connection handling in SchemaCrawlerMain and Executable classes to improve resource management and error handling to ensure proper resource management and avoid potential
change default tl protocol to prefer ` tlsv1.2 ` by default
updated exception messages in CountersManager . java from " values " and " labels " to " metadata " to clarify the error context
updated audio stopping logic in MediaManager . java to ensure proper handling of the current audio queue position
updated debug logging to include the connection ' s cancellation status to improve logging clarity by including the cancellation status in the debug log message
added support for transient fields in JpaPersistentPropertyImpl and its unit tests to ensure proper handling of transient fields in JPA persistent properties
updated the stack version ID from " HDP - 2.1 . 1 " to " HDP - 2.2 . 0 " and
trufflevm : fix findbugs warn in trufflevm . eval
changed access modifier of ` isBinaryType ` method from private to public and modified logging statements in ` Proxy . java ` to improve accessibility
updated the configuration key from " tez . dynamic . parition . pruning . max . data . size " to " hive . te
remove javaproblem . findproblem ( int line ) , since it ' s no longer use .
replaced the usage of ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` and ` BloomFilterHandler
replaced hardcoded newline characters with a system - dependent line separator in TableWriterTest . java to improve code readability and maintainability by
refactor DebugHelper class to improve code readability to enhance maintainability and ease of understanding
added a boolean field ` ownsTexture ` to manage texture ownership in ` ParticleEffect . java ` to prevent unnecessary operations when the texture is
added LDAP authentication configurations to HiveConf . java to enhance security and support LDAP authentication in the application
added import statement for SearchCatalogRequest . Scope in DatacatalogSearch . java to utilize the SearchCatalogRequest ' s Scope class in the
updated InputMethodManager calls to include SHOW _ FORCED and HIDE _ IMPLICIT _ ONLY in DetailActivity . java to enhance input method
added a test for converting a map of primitive types to a map of primitive types in DataTableTypeRegistryTableConverterTest to ensure proper handling of
updated the size calculation in TestFileSystem from 100 , 500 to 10 , 50 , and added a deletion of " memFS : fsMem .
updated error message in ContentTypeManager . java for clarity to provide clearer guidance about closing open resources before filing a bug report
made the ` dropSequences ` method abstract in ` AbstractDatabase ` and overridden it in ` MergeColumnChange ` to allow subclasses to override
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
replaced direct assignment of the result of binaryField . createField with a variable ' f ' to store the result of binaryField . create
gather leaf and parent style for hierarchical icon event
added a test method to verify the behavior of the ` findOne ` method after upserting a non - existing object to ensure that the method correctly
refactor calculation of ' mid ' in multiple classes to use ' low ' instead of ' ( + high ) > > > 1 ' to
added stats tracking for app launches in Launcher and refactored broadcast intent handling in Launcher to improve tracking of app launches and
updated graphics handling in JavaSEPort . java to create and dispose a graphics object to ensure proper graphics management and prevent memory leaks
update instructorfeedbackresultspagedata to remove unnecessary team member from roster
fix ( inventory ) : handle zero inventory id
added a conditional check for ` found ` before breaking the loop in ` ConfigDescriptionRegistry . java ` to ensure proper handling of cases where `
updated method signatures in ReloadableJava parser visitor classes to include returnTypeAnnotations conditionally to ensure correct handling of return type annotations when return type is
refactor TileMapRenderer to handle null blended tiles gracefully to improve robustness by preventing potential NullPointerExceptions when blended tiles
replaced multiple instances of ` @ Classes ` with a single ` @ Classes ` annotation in ` Probe . java ` to streamline
refactor getArea method in IfcTools2D . java to use Math . abs for accurate calculations to improve accuracy of area calculations by
modified the initialization of ` lockOnSync ` and ` throttleRate ` in ` Throttler . java ` to improve clarity and consistency in
pipe : fix pipeeventitem . modifyspeed and pipeBehaviouremzuli not be register properly .
increased timeout duration from 1000 to TIMEOUT in ZkController instantiation to improve test reliability by allowing more time for the ZkController
added a test for passcode functionality with client parameters in TokenMvcMockTests . java to ensure proper handling of client - specific parameters in the
added broken offsets for LengthFilter and KeepWordFilter in TestRandomChains . java to ensure compatibility with Lucene ' s miscellaneous features
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to streamline the test code by elim
fix ( griffin ) : fix int / long conversion in llvmx86 _ 64bitvastart .
replaced the static method ` upcast ` with a direct method call to ` getInstance ` in ` btCollisionObjectArray ` and removed
added a new build copyright property and updated the OPENROCKET URL in AboutDialog . java to improve build copyright handling and clarify
added ` getDistributedObjects ` method to ` JetClientInstanceImpl ` and corresponding test in ` JetClientInstanceImplTest `
added debug print statements in FinSet . java and modified calculations in MassCalculatorTest . java to enhance debugging capabilities and improve code clarity
replaced TOTAL _ MEMORY with MAX _ MEMORY in SmartDexingStep . java to ensure accurate memory management by using maximum
[ iotdb - 4892 ] fix the typo in createalignedtimeseriesplan . setcompressors ( )
do n ' t validate delayed payout tx if they do n ' t match
updated JsonLoaderTest to use a new json method and added exception handling for " big _ integer _ t " to improve code clarity and
updated the validation condition for tableSize in ObjectSet . java from 1 < < 30 to 0x40000000 to ensure that the required capacity
updated import statements in ColumnSnapshotGenerator . java and added null and empty checks for dataScale to improve code clarity and ensure proper handling of
removed @ AddToRuleKey annotations from several fields in AppleTest . java to simplify field annotations for better readability and maintainability
added security exception handling in FileHelper . java and modified content handling in TextHelper . java to improve robustness by ensuring security exceptions are properly
added a new constant StyleWithMultipleAttributes and corresponding tests in ShadowThemeTest . java to support multiple attributes in theme attribute resolution
updated the method to check for sheet names in HSSFWorkbook and modified the creation of sheets in TestHSSFWorkbook to enhance sheet
replace primaryColor ( ) with elementColor ( ) in ManageAccountsActivity . java to improve clarity by using elementColor instead of primaryColor
updated the initialization of the ` wrapped ` handler in ` DefaultEventBus . java ` and simplified path resolution in ` DefaultPlatformManager . java
added binaryCollationName configuration and SQL predicate fragment handling in MariaDbDbmsType and MySqlDbmsType classes to enable binary collation
added a new method ` whenType ` to the ` Tree ` class that returns an ` Optional < T > ` to enhance functionality by allowing
refactored navigation logic in ItemLauncher to utilize a new method for retrieving user view destination to improve code readability and maintainability by
replaced Response . OK with Response . temporaryRedirect in FeedREST . java to redirect to a temporary URL to improve user experience by providing a
[ hotfix ] [ kinesis ] add check for non - serializable deserializer in flinkkinesisconsumer
javadoc fix : fix checkstyle violation in camel - core
replaced a fixed sleep duration with a try - finally block to ensure proper resource management and prevent potential resource leaks
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
replaced direct calls to ` _ endPoint . fill ( _ buffer ) ` with a new method ` read ( ) ` in ` ProxyHandler
replaced instances of ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to simplify
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success to simplify the method signature and improve code clarity
refactor comparison logic in AbstractConfigLoader and update test cases in TestMicroserviceConfigLoader to improve code readability and maintainability by using
added a new file ` PicOfDayAppWidget . java ` that implements the ` PicOfDayAppWidget ` class to handle image updates
server : fix default value of internallbviceregionid in case of invalid offering uuid
updated import statements in HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil and refactored join condition handling
[ hotfix ] [ runtime ] add miss @ deprecate annotation
added username and password options for accessing remote Jmx in NodeToolCmd . java to enhance security by allowing users to access the remote Jmx
removed duplicate instantiation of BytesRef in Stemmer . java to streamline code and improve readability
updated widget handling in AppsCustomizePagedView . java to use mPageViewIconCache instead of a hardware accelerated flag to
ggbapplet . getviewforthumbnail ( ) : use 3d view if available
updated rotation calculations in GcodeRenderer . java to ensure proper positioning and prevent potential errors during rendering
added a new option WORKSPACE to the TerminalClient and updated its usage in the DAEMON command to allow configuration of the workspace directory
updated the file path from " target / test - classes / options . apt " to " target / test - classes / options . html
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test coverage and ensure compatibility with the latest
updated the ` confimAccess ` method to use a ` Map < String , Object > ` instead of a ` ModelAndView ` to
added assertTrueEventually to validate the second - level cache hit count in HibernateIT to ensure accurate tracking of the second - level cache
refactor EventBusHook class to improve event handling logic to enhance code maintainability and readability
refactor MultiPaintEventTest for improved clarity to enhance maintainability and readability of the test code
updated variable declaration for mNewScale in WorkspaceStateTransitionAnimation . java to improve code clarity and maintainability by removing unnecessary final modifier
refactor SyncFactory class to improve synchronization logic to enhance performance and maintainability of the synchronization process
added uniqueKey field handling in LukeRequestHandler to ensure unique key fields are correctly stored in the schema
added a round border color attribute and updated related methods in Border and BorderEditor classes to support customization of the rounded border color in the UI
[ gr - 13939 ] make sure that binaryparserexception . neverpartofcompilation ( ) be never call .
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchschedulingtest
added logging statements for pending requests in GatewayRSocket and modified back - pressure handling in PingPongApp to improve logging clarity and ensure
added a toolbar menu item click listener to the RecentChatFragment to enhance user experience by providing access to recent chats under construction
updated ` InfoDropTarget ` to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget ` and modified ` startDetailsActivityFor
replaced ` add ( ) ` and ` removeTail ( ) ` methods with ` push ( ) ` and ` pop ( ) ` methods
updated API and image URLs from " https : / / test . wikipedia . org / wikipedia / test " to " https : / / commons
refactor index handling by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by encapsulating index
replaced ` Collections . sort ( ... , ... ) ` with ` . sort ( ... ) ` for sorting collections to improve code readability
added datetime patterns to the FormatData _ hr _ HR . java file to support additional date and time formats in the application
added a call to clear focus on the clickedView in DetailFragment . java to ensure the clickedView is cleared when necessary
updated language selection logic in DescriptionsAdapter and removed unnecessary language handling in SpinnerLanguagesAdapter to improve user interface clarity and ensure proper language
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple
added native methods for registerGlobal and registerWeak , and refactored accessFields methods in FastGetField . java to improve field management
added default value handling for UNION and NULL types in ReflectData . java and updated corresponding tests in TestReflect . java to ensure correct handling of
increase offer timeout for seda block when full test
added a null check before remapping the R class in ResourceMerger . java to avoid potential NullPointerException when remapping resources
add a constructor to the hbase dialect that take a databaseversion
camel - 10750 : camel - http - do not close http connection on close . thanks to jbellis for the patch .
increased the socket timeout from 60 seconds to 120 seconds to allow more time for distributed operations to complete
added an assertion to verify that the count of tickets with status ' FREE ' and final _ price _ cts greater than zero to ensure
refactor Parser class to improve code readability to enhance maintainability and ease of understanding
refactor CasProcessingFilter to improve code readability to enhance maintainability and facilitate future updates
replaced usage of ` getFirstChild ( ) ` with ` getFirstElementChild ( ) ` in multiple template parser classes to improve code clarity and
[ zeppelin - 4892 ] fix npe when remove enum value ( # 4892 )
[ java ] wait for the cluster node to shut down before start a new one .
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 395 : do
added a default content type of " application / octet - stream " to set the content type to " application / octet - stream " to ensure
added a method to ` LazyTraceThreadPoolTaskExecutor ` and created unit tests for it to ensure the ` getQueueSize ` method behaves correctly
fix distanceop to skip line with less than the min distance
rename ` required ` to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity and consistency in naming conventions
removed the next ( ) method from PurgingPartitionIterator and called updateProgress ( ) directly to streamline the code by eliminating unnecessary
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated its usage in ` VectorUtil ` to enhance the
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access
added validation to ensure polygons contain at least 3 points and updated localVertices assignment logic to ensure that polygons do not contain at least 3 points and
replaced direct instantiation of ObjectMapper with ObjectMappers . newDefaultInstance ( ) across multiple files to streamline object mapping usage and improve code
added a null check for the coeff array before processing its square free values to avoid potential NullPointerExceptions when coeff is null
updated ExternalNameRecord to handle Unicode names more accurately based on multibyte flags to ensure correct handling of Unicode names in external name records
updated the description of the JMS Destination type from ' TOPIC ' to ' QUEUE ' in AbstractJMSProcessor . java to clarify
added conditional logic to exclude " username " , " password " , and " passcode " prompts based on the ` returnLoginPrompts
updated listener removal method from ` remove ( listener ) ` to ` removeIf ( listener - > l = = listener ) ` to improve listener
added a spin action to the PieChartActivity to enhance user experience by providing visual feedback during chart spinning
kvm : kill the vhd if it ' s copy from secondary storage to primary storage
hbase - 15939 skip normalizing a table if it have a namespace quota ( chaoyu tang via ashut
removed unused imports and added a resize method in AndroidInput . java to improve code clarity and ensure proper resizing of input pressure array
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and refactored the ` @ VisibleForTesting ` annotation to
ignore clientmapnearcachetest until we can fix it
fix the hopperhock ' s getitemswithinaabb use the wrong x - range instead of the correct x - range .
updated SsoWebViewClient to use AlertDialog for authentication dialogs to enhance user experience by providing user feedback during authentication process
refactor TestStressIndexing2 to improve document deletion and query handling to enhance test reliability and clarity in document management operations
[ flink - 22559 ] [ table - planner - blink ] ignore upsertkafkatabletableitcase test
replaced ` get ` with ` computeIfAbsent ` for retrieving ` typeList ` and adjusted variable declarations in ` ResTable . java ` to
added a configuration to accept single values as an array in DefaultEntityMapper to ensure proper handling of array values during deserialization
updated localization update messages in VersionChangeLogs . java to include additional localization options
use resourceutils . getstring ( ` ` cl . app . categories ' ' ) instead of hardcoded string ` ` application ' '
[ feel ] fix ` ` instanceof ' ' operator in ` ` and ' ' expression
nifi - 1745 : added mime . type attribute to the flowfile in gethttp
refactor resource provenance handling in BaseHapiFhirDao and add a toProvenance ( ) method in ResourceHistoryTable to improve
rename ` exitButton ` to ` doneButton ` and update its click listener to ` doneListener ` in ` HelpActivity . java ` ,
refactor NatsConfiguration to improve code readability to enhance maintainability and facilitate future updates
refactor ` invalidateStalePartition ` method to ` invalidateStalePartitions ` and introduce ` metastoreContext ` parameter to improve clarity
improve performance of viewresultsfullvisualizer by use circularfifobuffer and unboundedfifobuffer
replaced ` ic _ group ` icon with ` ic _ chat _ bubble ` icon in multiple classes to enhance the user interface by providing a
replaced ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure thread - safe access
updated method names in MocksCreationTest for consistency and clarity to improve readability and maintainability of test method names
added a constant for the data source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to
increased timeout duration from 10 seconds to 30 seconds in awaiter method calls to improve reliability by allowing more time for the awaiter
removed the ` BuildSlaveFinishedStatusEvent ` class and updated the ` publishBuildSlaveFinishedEvent ` method to simplify the event publishing process by
cloudstack - 4892 : fix findbugs encode issue in vmwarestoragemanagerimpl . java
added test for depositing workspace item without workflow
added distinct ( ) method to the classpath stream processing in ClassLoaderSupportImpl . java to ensure unique classpath files during processing
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to simplify the method for better readability and maintainability
refactor argument handling in SpecificCompilerTool to use indexOf for " - encoding " , " - string " , and " - templateDir "
added a null check for the table before deleting the directory in HiveMetaStore . java and updated tests in TestHiveMetaStore . java
increased the maximum number of asynchronous execution threads from 50 to 100 and added new configuration options for wait queue size and keep - alive time
added try - catch block around dismissing the dialog to handle potential exceptions when dismissing the shortcut dialog
refactor UpgradeResourceProvider to use TaskWrapper for service and component retrieval to improve code clarity and maintainability by centralizing task execution logic
fix a nullpointerexception in operationsettelephonyconferencingsipimpl . getconferenceinfo ( ) .
fix an issue where the log view would n ' t update the model
updated return conditions in ChannelEndPoint . java to include checks for input and output shutdown status to ensure proper handling of socket shutdown states in the channel
refactor SetNullableGenerator to improve code readability to enhance maintainability and facilitate future updates
camel - 14850 : camel - example - reportincident - should use newfile instead of file for example
simplified import statements in NettyRoutingFilter and refactored form handling in FormIntegrationTests to improve code readability and maintainability
added @ ApiOperation annotations for " hello " and " helloWithValue " methods across multiple service classes to enhance API operations for better integration with
refactor lifecycle listener handling in Lwjgl3Application and Lwjgl3Window classes to ensure proper disposal of listeners before
updated the FG _ FK color from 90 , 0 to 200 , 0 to improve the visual appearance of the foreground color
do n ' t require mp3 audio format by default
fix secondaryindexmanagertest to check that index be not mark a built
[ pmd ] display preference about group in the general preferences page
[ hotfix ] [ test ] refactor customserializationitcase to use findthrowable
refactor MediaFormatUtil to improve code organization to enhance maintainability and readability of the code
added a method ` isCellEditable ` that always returns false to indicate that the cell is editable in the GeneralTab class
added an abstract method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified the message generation logic to conditionally
updated the VocalTractModifier and VocalTractScalingProcessor to use a temporary count and adjusted the vscales array to improve performance
updated import statements in TestUDFRound . java and TestGenericUDFConcat . java to ensure consistent usage of the BaseScalarUdf
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper serialization and deserialization of UaaAuthenticationDetails objects
testskeletoncontrolrefresh : fix broken test
rename nodeutil . nodefilter to nodeutil . nodecountfilter for clarity .
updated the condition to check if the sync block to fetch is less than or equal to SYNC _ FETCH _ BATCH _ NUM to ensure
updated the state variable from 365 to 366 and adjusted the type assignment logic in DebugExpressionParser . java to improve clarity and correctness
updated dependency exclusion logic to filter dependencies based on their scope to ensure only valid dependencies are excluded from the classpath
replaced the method ` tmp ( ) ` with ` dst2 ( v ) ` and added a new method ` dst2 ( v )
set default value of ` args ` to an empty array to avoid potential NullPointerException when ` args ` is not initialized
updated linker argument handling in RustBinaryDescription and added a test for linker flags override in RustLinkerIntegrationTest to improve flexibility
[ # 1748 ] fix error in adminemailpageuitest ( # 1748 )
added dagName configuration to TaskExecutorService and enhanced logging in GenericUDTFGetSplits to include external query names to improve debugging capabilities by providing
remove unused import of java . io . file from tileatlas .
[ gradle ] do not throw an ioexception when attempt to write on a closed stream .
updated the ` validateQuery ` method to include an additional ` arguments ` parameter to enhance error handling by providing more context in error messages
updated INDEX _ VERSION from 1 to 2 and removed unnecessary fields and methods in LuceneExecutor . java to improve code clarity and maintainability
[ hotfix ] [ runtime ] add test for kryoserializer ' s default kryo registration
added a null check before removing a property in the configuration to avoid potential NullPointerExceptions during property removal
refactor boolean handling in MetaStoreDirectSql . java to use BooleanUtils for better clarity to improve code readability and maintainability by
added a call to hideCustomizationDrawer ( ) in mmm Launcher . java and ppp Launcher . java to improve user interface
added a warning key to the termVectors and updated the handling of warnings in the TermVectorComponent to improve the handling of term vector warnings and
added conditional logging for optimistic types and modified log levels based on logging settings to improve logging clarity and control over logging behavior based on optim
refactor Expect class to improve code readability to enhance maintainability and ease of understanding
added a new ` UnixSocketConfigurationStrategy ` class and updated ` DockerClientFactory ` to include it to enable Unix socket access for Docker connections
added a test method ` testEvenLowRateIP ( ) ` in both ` CloseableDoSFilterTest . java ` and ` CloseableDo
camel - 18443 : camel - reactive - stream : improve error message when the stream have no active subscription .
refactor ` Vectorizer ` to use ` convertMapWork ` instead of ` validateMRTask ` and ` vectorizeMRTask ` for
updated constructors in StringAppender and LogDivertAppender to include a boolean parameter to ensure compatibility with the latest logging framework changes
fix a nullpointerexception in the tree model when there be no guicontainer
sulong : make linkage . isweak ( ) return true for weak function .
refactor multiple Java files including XShareAuto , LoadClassNegative , XCheckJSig , and ReadFromNoaccessArea to improve code organization
# 1746 - enh : add test for defaulttransactionthreadlocal . get ( )
added a check for invalid operation handles in the HiveStatement class to improve error handling by logging warnings for invalid operation handles
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - 14832 - camel - aws : support ability to load property from vault / secrets cloud service - aws secret manager
refactor SimpleTree class to improve code readability to enhance maintainability and ease of understanding
simplified the return statement in UserREST . java to improve code readability and maintainability
updated the ` fromContent ` method to include a ` subTree ` parameter and adjusted its logic accordingly to enhance functionality by allowing sub - tree
fix for bug # 54444 - fix column width calculation in sheet . getcolumnwidth
added ` configPath ` parameter to the ` less ` method in ` Builtins . java ` to enhance command execution by including the configuration path
replaced ` Set ` with ` Collection ` for ` tables ` and ` weakAssociations ` in ` DotWriter . java ` and ` Graph
updated the default SSH container image from " quay . io / testcontainers / sshd @ sha256 : 18aa929c65
added an assertion to check if hostId is not null in AgentManagerImpl . java to ensure that hostId is not null before proceeding
refactor group by key generation logic in DefaultGroupKeyGenerator . java to improve clarity and maintainability of key generation logic
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and modified seeking logic to improve clarity and
replaced the creation of IngredientStack with a builder pattern in BCSiliconRecipes . java to improve code read
rename method ` put ` to ` putObject ` in ` GraphHopperConfigMixIn . java ` to improve clarity of method '
updated visibility logic in CellLayout and refactored drag exit handling in Workspace to improve code clarity and maintainability by simplifying drag exit
modify request body rewriting logic in ModifyRequestBodyGatewayFilterFactory and add a test for empty request bodies in ModifyRequestBodyGatewayFilterFactoryTests to
updated access modifier checks in ConstructorFinder , FieldFinder , and MethodFinder to include package accessibility checks to ensure proper handling of package - private
replaced instances of logger . warn ( ) with logger . trace ( ) in LoggingHandler . java to improve logging granularity by reducing verbosity
fix # 348 : ignore wildcard in whitelist ( # 348 )
added imports for AppTourHelper , Display , and ShowcaseView , and modified options menu handling in GalleryActivity to improve user experience by
refactor MongoDBServiceFactory to initialize instance and service lazily to improve performance by avoiding unnecessary instantiation of MongoService instances
added tests to ensure boolean values are replaced correctly in InlineConstantMutator to ensure proper handling of boolean values in code formatting
added a Blackhole parameter to the decode method in RecordTest . java to facilitate the handling of double values during decoding
chore ( deps ) : update gapic - generator - java with mock service generation fix
refactor unit string handling to use Map . Entry < String , String > instead of String to improve type safety and clarity in unit string
removed the clear ( ) method call from dbManager ' s witnesses to streamline the code by eliminating unnecessary operations
do n ' t swallow exception in jdbcpagesink . abort
removed the " stack " property and replaced it with getter and setter functions in NativeError . java to streamline stack management by eliminating
added a check to return false if the path name starts with a dot in DrillPathFilter . java to ensure proper handling of path names
corrected the spelling of " onboard " to " autoload " in the ThirdEyeAnomalyApplication and ThirdEye
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure proper cleanup of the index after test execution
change boldweight _ normal from 190 to 0x190 in hssffont . java
changed fThreadGroup to be volatile and made fLookForStuckThread final in Timeout class to ensure thread - safe access to fThread
made the ` getValue ` and ` setValue ` methods consistent in ` ValueResultData ` class to improve code readability and maintainability by
updated hash code and equality checks in FuzzyQuery . java to ensure proper object comparison and prevent potential NullPointerExceptions
removed debug print statements from PushedResourcesTest . java to clean up the test output and reduce unnecessary console output
changed return type of ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` to ` void ` and removed unnecessary return
updated the product version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated the ` retrievePersonAttributes ` method to initialize ` attributes ` with an empty ` HashMap ` and modified the principal creation logic to ensure that
changed log level from info to warn for ZigBee USB Gateway connection messages and BUS Gateway connection messages to improve log clarity by
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency in naming
added a constructor to ThumbnailGenerationTask that initializes storageManager and account to ensure that storageManager is not null and mImageViewReference is
updated the loop condition in GroupSelectionQuery . java to check if nrFound is within the bounds of count and tries to ensure that the loop
add test case for [ 1933922 ] recursive compilation issue
removed unnecessary parentheses in comparison methods across multiple classes to improve code readability and maintainability
updated character range check from 33 to 32 in FileResolver . java to ensure proper validation of control characters for space characters
added a requestFocus ( ) call to the cmp component to ensure the component is focused when necessary
update instructor home page test to use new instructor home page
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions related to JSON
replaced Crouton . cancelAllCroutons ( ) with Crouton . notifyAppWidgets ( ) in DetailFragment . java
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to verify schema queries and retrieval with unrelated templates to ensure
refactor Dialog class to improve code readability to enhance maintainability and ease of understanding
refactor process execution in SourceCompiler to use ProcessBuilder instead of Runtime . getRuntime ( ) to improve clarity and flexibility in handling Java
updated the method to use ` InetAddress . getByName ( " 127.0 . 0.1 " ) ` instead of ` InetAddress . getLocalHost
refactor subsystem assignment in Metrics . java to use a loop for better readability and maintainability to enhance code clarity and maintainability by
added assumptions to test platform compatibility in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on macOS environments and
refactor jvmciversioncheck to use getrequiredproperty instead of validateproperties
refactor Mockito class implementation to improve code readability and maintainability
modified TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage
added charset handling to ParsingExecutionContextView and updated BinaryParser , PlainTextParser , and ParsingExecutionContextView classes to improve character encoding management
added support for setting and getting ` MultiPartFormDataCompliance ` in ` HttpConfiguration ` and created a new enum ` MultiPartFormDataCompliance `
added GradleVersion . version ( " 7.2 " ) to GradleDistributionManager . java to support Java version 7.
added a new method ` addType ` to ` SnapshotControl ` and refactored type handling in ` DatabaseSnapshot ` and ` SnapshotControl `
refactor Term class to improve code readability to enhance maintainability and ease of understanding
updated return statement to handle null or empty runWith values to ensure robustness by preventing potential NullPointerExceptions
fix for http : / / issues . apache . org / activemq / browse / amq - 2237 - add test case
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
pdfbox - 417 : make sure the pixel be within the range of 255 to avoid outofboundsexception
updated tinting logic in TaskView to use a new variable ` mTintAmount ` to improve code readability and maintainability by redu
added a new file ` SumZeroFunctions . java ` and implemented the ` SumZero ` aggregate function in ` SumZeroFunctions . java `
[ hotfix ] [ table - planner - blink ] remove unnecessary not null constraint
refactor getAllocationFailWarningMessage method to use a StringBuilder for better string representation to improve readability and maintainability of the method ' s
added a null check for propName before putting it into the properties map to avoid potential NullPointerExceptions when propName is not set
updated access modifiers to ` @ VisibleForTesting ` and modified method visibility in ` StatusBarTouchController ` , ` RecentsView ` ,
added a method to log a container stream in DockerClient . java to enable streaming of container logs for improved functionality
mvstore : improve performance of mvstore . cache ( )
updated LONG type from " L " to " J " in PrimitiveType . java to reflect the correct data type for long values
changed the access modifier of the delegatingApplicationListener method from public to static to allow access to the delegatingApplicationListener from other classes
camel - rest - dsl - reset message body to null in case of error .
added FileDeletingTasklet and TaskletJobFunctionalTests classes to manage file deletion and job functionalities to facilitate tasklet
mow - 212 update sizekeepdrawables for plane companion
refactor bitwise operations in BitUtil , Int2IntCounterMap , and Int2IntHashMap for clarity and consistency to improve code read
updated ` sendEventToTest ` method to ` sendStateEventToTest ` and modified related parameters across multiple classes to improve event handling and
added checks for video thumbnail requests in the RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on the Lavf
updated error handling logic in ErrorCheckerService . java for improved clarity and functionality to ensure proper handling of line offsets and error scrolling behavior
updated the layout constraints for the title area based on the parent theme constants to ensure the title area aligns based on the menu button ' s
updated Skia . java to include the " libskia " library and modified the value and link properties to ensure compatibility with the latest library
added a constant for the ID " com . google . bitcoin . unittest " in NetworkParameters . java to support the retrieval of unit tests
added validation for format arguments in QueryCommand to ensure only valid format arguments are provided to prevent runtime errors
replaced the ` capacity ` variable with a ` length ` variable for clarity and consistency to improve code readability and maintainability by using
updated the ` walkRuleAndAdd ` method to include ` projectConfig . getSrcRule ( ) ` as a parameter to enhance dependency traversal
[ netbeans - 4892 ] fix source override for patch module ( # 4892 )
[ java ] remove redundant major version check in election .
added conditional logic to set the default policy based on authentication type to ensure proper client behavior based on authentication status
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure that mappedTableResource is required when building a ReadBatch
refactor : replace manual close ( ) call with utility . close ( ) .
refactor AnonymousAuthenticationFilter to utilize a deferred context for improved security context management to enhance security by ensuring the correct authentication context is set
modified the removeActor method to include an unfocus parameter and updated related calls to enhance actor removal functionality by allowing unfocusing based on the
refactored the prompt method call to use a variable for cloudConfig to improve code readability and maintainability by reducing duplication
added logging functionality to NettyHttpServer and updated RoutingInBoundHandler to handle log levels to improve logging control and ensure proper handling of HTTP
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
replaced a direct call to ` update ( ) ` with a call to ` SwingUtilities . invokeLater ( this : : update ) `
camel - 18443 : camel - groovy - optimize to avoid load the groovy script multiple time . thanks to jbellis for the
[ mng - 5892 ] remove dependency on managed version map and use set instead
[ hotfix ] make clifrontendparser and clifrontendutils public
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
removed storage alias retrieval and certificate chain retrieval in HttpsMessenger . java to streamline storage alias handling and improve certificate chain retrieval efficiency
simonstewart : make sure we do n ' t get a classcastexception if we ca n ' t convert the response
changed access modifier of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow
fix server level resource not be drop in block # dropresources ( # 6240 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to facilitate the retrieval and retrieval of spatial location
refactor multiple Java classes related to community detection and components to improve code organization and maintainability across the project
replaced the method ` keySet ( ) . isEmpty ( ) ` with ` isEmpty ( _ root ) ` in ` TreeTrie . java `
updated the foreground and background methods to include parameters for r , g , and b instead of a fixed column to improve accuracy in handling color values
added a condition to disable fingerprinting based on the " solr . disableFingerprint " system property to improve flexibility in fingerprinting behavior based on
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
added event emission for BeforeConvertEvent in MongoTemplate and enhanced test cases for PersonWithIdPropertyOfTypeUUID in MongoTemplateTests to ensure
fix settransactiontest and fix collectioncontainer logger initialization
make sure to close the inputstream in tikacli . run ( )
replaced ` ApiBag . ExceptionWithErrObject ` with ` ApiException ` in ` TestCollectionAPIs . java ` to improve error handling
removed unnecessary line breaks in OptionsParser . java to improve code readability and maintainability
[ # 8271 ] instructorfeedbackfeedback : fix typo in test
[ hotfix ] [ test ] fix checkstyle violation in test
removed the ` step ` property and related methods from ` HmDatapoint ` and ` HomematicTypeGeneratorImpl ` classes to
updated logging messages and added exclusive lock handling in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of lock acquisition and
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline the code by eliminating redundancy
danielwagnerhall : do n ' t run testgettextcontent until we can fix a lameness issue .
refactor Logger class to use ThreadLocal for logger management to improve thread safety and maintainability of logger management
updated the visibility of the convertToCompilationUnit method from private to VisibleForTesting and replaced Mockit with MockitoJUnitRunner in tests to enhance
added a new method ` boxedTypeOrType ` in ` Types ` and modified type checking in ` Infer ` and ` T6
updated task view handling in RecentsView and removed initialization of Digital WellBeing Toast in TaskView to improve task orientation
hbase - 25828 fix flaky testtestflushfromclient # testflushfromclient
added logic to clone and delete a contract based on its details in TransactionExecutor . java to ensure that changes to contract details are properly managed and
updated balance calculations in TokenIssueProcessor to use dynamic properties instead of a static constant to improve flexibility in asset issue fees based on repository
updated RealisticRenderStrategy to use URI types for texture caching and introduced a clearCaches method to improve texture management by ensuring proper resource management and
refactor raster creation and compositing in Blit . java and add a new class Bug7049339 . java to improve
added a new boolean variable ` isUnselectedStyle ` and modified the ` getStringWidth ` method in ` Label . java ` to handle unselected
updated ArrayList initializations to specify initial capacity for improved performance to optimize memory usage by reducing unnecessary initializations
removed the ` flags ` parameter from multiple ` queryImplicitIntent * ` methods in ` ShadowApplicationPackageManager . java ` to simplify method signatures
refactor PingRequestHandler to improve code readability to enhance maintainability and ease of understanding
move mp4 _ sample _ with _ increasing _ timestamps _ uri string to test
updated firmware version checking logic in TradfriGatewayHandler . java to ensure compatibility with newer firmware versions and improve logging clarity
refactor AjaxElementLocator class for improved clarity to enhance maintainability and readability of the code
updated condition checks in BoxLayout and DefaultLayout to include " table - cell " display to ensure proper layout handling for different display scenarios
updated JsonDecoder logic to handle nested arrays and added a new test for reordering fields to improve code clarity and ensure correct handling of JSON
updated the listener parameter in BlockCache . java from a lambda expression to a lambda expression to enhance code readability and maintainability by reducing
ignore savepoint test until we can fix it
added two @ Test annotations to DroolsMvelParserTest . java to enable unit tests for improved functionality and maintainability
changed variable declarations from non - final to final in ContextRegisterListener . java to ensure immutability of fields for better immutability
refactor ObjectHashSet to initialize the iterator with a default constructor and update related tests to enhance flexibility and ensure proper initialization of ObjectHashSetIterator
added batchBytes variable and adjusted row index boundary checks in SparkReduceRecordHandler and ReduceRecordSource classes to ensure accurate batch size handling and prevent
changed context constants from MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE in AppSettings and Update
updated logging messages in JdbcProxyGenerator to clarify that close ( ) is called after already close ( ) or abort ( ) is called
updated the method call to use ` mState ` instead of ` getState ( ) ` and added accessibility imports based on the current state to
changed log level from warn to debug in ProtobufLogReader . java to reduce log verbosity for malformed edits
updated scope substring handling in UaaTokenServices and added a new test for persisting scopes to ensure that the scope is longer than 1000 characters
updated import statements in SchemaRetrievalOptionsBuilderTest . java and added a toString method in AvailableJDBCDrivers . java , and renamed TestAvailablePlugins
( chore ) camel - kie - api : move executablecommand to kie - api
remove the jdbctableservice from camel - itest - idempotent
added padding retrieval methods in CellLayout and modified bitmap creation in Launcher to improve padding handling and ensure correct bitmap scaling based on orientation
modified the initialization of ` cands ` to conditionally use ` possible ` based on the presence of a ` sb ` to ensure proper handling
updated the handling of ` SamlMetadataUIParserAction ` to use ` Action ` instead of ` SamlMetadataUIParserAction ` to
added a method to check open ports in LdapMockMvcTests . java to ensure that LDAP ports are properly configured before running tests
[ hotfix ] [ runtime ] fix checkstyle violation in log4j2 - core
updated URL handling in Fetcher . java and modified refresh logic in HTMLMetaProcessor . java to improve URL processing and ensure proper handling of protocol
updated SolrQuery in TestSpellCheckResponse to use " name : samsang " instead of " * : * " and corrected spell
refactor Console initialization to use reflection for compatibility with newer Karaf Console API to ensure compatibility with newer Karaf Console API and improve
updated the access modifier of ` getVerticesColors ` method and adjusted the initialization of ` mCol ` in ` MeshHelper . java ` to
added a new file filter to exclude timed reports directories and updated the copyDirectory method to use this filter to ensure that timed reports are not copied
updated method names from ` testDeviceName _ thenOK ` to ` validateName _ thenDataValidationException ` and refactored test methods to
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to prevent potential NullPointerExceptions during form binding
removed a debug print statement from JoglInput . java to clean up the code and reduce unnecessary console output
added a flag ` allowExtractingPrivateFields ` to control field extraction behavior in ` FieldSupport ` to allow flexibility in extracting private fields
added a replacement for device name in WebDataHandler . java to ensure consistent display of device names for better debugging
replaced the direct instantiation of ` Lookup ` with a conditional creation using ` MethodHandles . lookup ( ) ` to improve flexibility in handling
replaced the old ` weights ` method with a new ` weightsByDouble ` method in ` ZParams ` and marked it as deprecated to
added a ` Database ` parameter to the ` writeCustomHTML ` method across multiple writer classes to ensure compatibility with the latest Liquibase
removed unnecessary type casting in BTreeMap . java to simplify key deserialization and improve code clarity
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to throw a specific exception for BalanceInsufficientException and
do n ' t write zero file when heap heap heap zerofile be disable .
replaced direct print statements with a method call to ` Scope . getCurrentScope ( ) . getMessage ( ) ` in ` Main . java `
increased the size of the buffer from 14 bytes to 13 bytes in HortonworksEncodedSchemaReferenceStrategy . java to optimize memory
added imports for ChunkListener , ItemProcessListener , and ItemReadListener in multiple batch - related classes to enhance batch processing capabilities and improve error
refactor code for improved readability and consistency by removing unnecessary parentheses to enhance code clarity and maintainability
updated print statements in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser for consistency to improve code readability and maintainability by
updated Test7005594 . java file to improve test coverage and maintainability
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code organization to enhance maintainability and readability of the code
server : fix npe while try to map ip address to vm in case of vm restart
updated Gamepad . java to replace ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and introduced ` MCOptionUtils
updated method names and imports in IterableSubject . java and IterableTest . java for clarity and consistency to improve code readability and maintainability
camel - 17979 : camel - http - optimize the code of defaulthttpbinding
added assertions to verify the behavior of native queries in ActivityHistorySQLServerStoredProcedureTest to ensure that the count method returns zero for various data
added a new ` LargeValueFormatter ` class and updated related methods in ` BarChartActivityMultiDataset ` , ` BarLineChartBase
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR in CommentsParser . java to improve code readability and
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to streamline code by eliminating unnecessary sup
reformatted printLir call in TraceLinearScanLifetimeAnalysisPhase . java for consistency to improve code readability and maintainability
removed TODO comment from NullAssertionValidator . java to streamline code by eliminating unnecessary stubs
added import for RuleKeyAppendable and modified rule key appending logic in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances
added directory creation for system profile directory and refactored test setup and teardown methods in DLNAMediaInfoTest and SearchRequestHandlerTest
replaced the instantiation of ` DefaultThreadFactory ` with a new method ` createThreadFactory ( ) ` in ` TestcontainersDockerCmdExec
refactored message counting logic in HttpChannelOverHTTP and HttpReceiverOverHTTP classes to use a dedicated method to improve code readability and
added a new attribute " accept " with a value of " image / * " in the ImageFileInputDialog to allow the dialog to accept
refactor ElasticIndexWriter to use PreBuiltTransportClient and Node for improved transport client initialization to enhance code clarity and maintainability by
added detailed information about witnesses and witness class in ForkController . java to improve debugging by providing more detailed information about witnesses and their class
added a new test class ` NullPointerAndEmptyArrayTest ` to verify behavior of null pointer and empty array handling to ensure correct behavior of
added a method to find generated source paths using dependencies in BaseIjModuleRule . java and updated references in IjProjectBuckConfig
updated UaaStringUtils to include a new method for constructing wildcard patterns with a character delimiter and modified wildcard pattern construction to enhance flexibility in
added validation for multiple TableScanOperator aliases in the map work to ensure that only one TableScanOperator is processed when there are more than one
updated MockitoJUnitRunner import from Mockito . runners to Mockito . junit . MockitoJUnitRunner and removed exception
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging errors when setting values fails
replaced specific imports with a wildcard import and modified the ` getLangs ` method to return a ` Set < String > ` instead of an
reordered import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency to improve code readability and maintainability
hbase - 25827 takesnapshothandler should acquire table lock before try to load table descriptor
[ j2kt ] introduce runtimemethods . createplatformisnullcall ( ) and use it in try - finally - via - control
added a test to verify that the HTTP RPC endpoint is modified correctly in the DockerQuickstartTest class to ensure that the HTTP RPC endpoint is
added a volatile boolean field ` isSuspended ` and modified thread suspension logic in ` Thread . java ` to ensure thread suspension
updated Javadoc visitor methods to replace Author and Since with Hidden , See , and SerialData in Java11JavadocVisitor and ReloadableJava8Javadoc
camel - 18443 : fixed the issue of camelcontextid be n ' t check if it be non - null .
removed @ Override annotations from multiple security - related classes to improve code clarity and maintain consistency across security - related classes
added module import functionality in Java2TypeScriptAdapter and updated test assertions in EnumTests to ensure correct module usage and improve test coverage for static
use http : / / www . w3 . org / 2001 / XMLSchema instead of xmlconstants . w3c _ xml _
added logic to set content description based on badge status in BubbleTextView . java to enhance user experience by providing a more informative notification
added mouse wheel listener to handle mouse wheel events in TestMouseWheelScroll . java to ensure proper mouse wheel behavior when the scroll pane is
added closing statements for PDDocument in VisualTester . java and a new test method in VisualRegressionTest . java to ensure proper resource
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to align
replaced instances of ` VacuumEnvironment . Location . A ` with ` VacuumEnvironment . LOCATION _ A ` and
removed unnecessary currency checks in BitfinexAdapters . java to simplify code and improve readability
updated import statements and refactored field handling in JsonFormat . java to use ImmutableSet and TreeMap to improve code clarity and maintainability by
updated JacksonXmlFormatMapper to handle array and enum types correctly to ensure proper serialization of arrays and enums in the Jackson XML format
refactor variable names and improve null checks in VirtualThread . java to enhance code readability and maintainability by using more descriptive variable names
refactor DirectoryTaxonomyWriter to improve term handling and cache management to enhance code clarity and maintainability by utilizing a unified caching mechanism
refactor VetoableChangeSupport class for improved clarity to enhance maintainability and readability of the code
adjusted the calculation for the Y - coordinate in the BrowserContentPane to correctly account for the height difference between the owner and its height
pdfbox - 4892 : remove unnecessary throw of invalidpasswordexception from method signature
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
inputbar help : make sure close button be close when the menu be open .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced ` Thread . sleep ` with ` ThreadHelper . waitUntil ` for controller state checks in ` BackendInitializerHelper ` and ` Terminal
updated release status checks in SwingStartup . java to streamline version update logic to improve code clarity and maintainability by utilizing ReleaseStatus
added support for including generated file comments in database migration to enhance migration flexibility by allowing customization of generated file comments
updated player usage syntax in various command classes to use " < player | * > " instead of " < player > " to ensure compatibility with
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filter implementations to streamline the
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency in naming conventions
added a condition to check for parallel classes in TestNGContentHandler to ensure proper handling of parallel classes in the test suite
[ hotfix ] [ runtime ] fix checkstyle violation in routeinfomanager
fix ( core ) : remove static import of enums in ctmethodimpl
added serialVersionUID fields to multiple Java classes and deleted unused files to clean up the code and improve maintainability
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated ShibbolethCompatiblePersistentIdGenerator to include a constant separator for SHA - 64 hashing to ensure consistent hashing behavior across different operating systems
added null check for SYSTEM _ ACTIONS _ ENABLED parameter in Parameters . java and modified condition in TestAction . java to ensure proper handling of
added a new class ` Person ` in the ` org . apache . maven . it0074 ` package to provide a simple implementation of a
[ hotfix ] remove usage of fbutilities . getlocaladdress ( ) in gossiper
updated the method call to convert ` timeStr ` to uppercase in ` AbstractClient . java ` to ensure consistent case handling for time strings in
added assertions to verify the presence and absence of timeColumn , timeUnit , and totalDocs in the metadata to ensure the metadata reflects the
replaced the import of ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` and updated
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure
fix : use getannotationtypesbystereotype ( ) instead of getannotationnamesbystereotype ( )
danielwagnerhall : add a test to verify that clicking on an element hidden by double overflow do n ' t
added try - catch block around dismissing the dialog to handle potential exceptions when dismissing the shortcut dialog
added logic to lookup the JTA TransactionSynchronizationRegistry using a custom JNDI location to enhance flexibility by allowing users to specify the JTA
changed the access modifier of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to simplify the code by eliminating unused functionality
replaced ` enabledCiphers ` with ` result ` for clarity and consistency to improve code readability and maintainability by using a more
[ beam - 10625 ] fix timestamp conversion in bigquery to bigquery ( # 10625 )
replaced multiple null checks with requireNonNull for buffer and userCredentials in Identifiers . java and DatabaseConnector . java to improve code readability and
refactor variable name from ' input ' to ' inputMap ' to improve code readability and maintainability
added boundary checks for row and column indices in FlightConfigurablePanel . java to ensure that row and column indices do not exceed table ' s
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness by
[ java ] unnecessarylocalbeforereturn false positive with nested member
replaced the initialization of ` scriptEngineManager ` with a direct assignment of ` scriptEngine ` to simplify the code by eliminating unnecessary
simplified calculations in EuclideanDistanceSimilarity and updated test assertions in EuclideanDistanceSimilarityTest to improve accuracy of correlation calculations and
move backup of sstables to a separate thread to avoid deadlock
updated the ` relativize ` method to accept two ` Path ` parameters and added a new test case for handling empty dot paths to ensure
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values for column size and decimal digits
updated file deletion logic to filter out files ending with " . tmp " to ensure that the test does not skip the current writer head file
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure consistency in
renamed ` ErrorHandlerController ` to ` Error403Controller ` and created new controllers ` Error404Controller ` and ` Error403Controller
replaced ` TerminalFactory . resetTerminal ` with ` TerminalFactory . resetIf ` in ` UnixTerminal . java ` and ` WindowsTerminal
[ netbeans - 4892 ] fix java . util . collections . toarray and java . util . collections . toarray do
refactor connection acquisition logic in ConnectionPool . java to improve code clarity and maintainability to enhance code readability and maintainability by
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple classes to improve clarity and consistency
pdfbox - 4892 : check for exist id _ tree entry , a suggest by valerybokov
updated error message formatting in JavassistUtils . java for better clarity to improve error reporting by providing more context about the class loader
added exception handling for reader and writer threads in LargeStreamletTest . java to improve error reporting and ensure proper thread join behavior
updated the logic for setting the current item ' s extra pages based on user preferences to ensure the correct number of extra pages is displayed based on
added error handling for Bitmap creation and adjusted return logic in AndroidImplementation . java to improve robustness by preventing potential runtime exceptions during image processing
removed the use of suppressNode ( ) method in BaseParser . java to simplify the code by eliminating unnecessary suppression of subnodes
refactor FDFParser initialization to use try - with - resources for better resource management to ensure proper resource management and prevent memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to remove unused code to streamline the codebase
added shell command " input keyevent 82 " in AbstractLauncherUiTest . java and modified assertion in LauncherInstrumentation . java to enhance
added filenameToUrl mapping and JSON serialization in FileDumper . java to improve URL handling and ensure proper JSON output format
bugfix # 139625 - reset profilerserver . resultsnotified flag after shutdown
[ blender ] refactored texturehelper . gettexturefromimage ( ) to loadimage ( )
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to remove the " : " prefix
updated test cases in RandomizersTest . java to use a new isbn randomizer with a specific locale to ensure tests reflect the correct randomization
updated notification sound setting to use a configurable ringtone URI to enhance user experience by allowing customizable ringtone settings
add a method to report loop count in RootNode . java to ensure proper handling of loop count reporting in the call target
added version finalization logic for standard repository type in FinalizeUpgradeAction . java and updated cluster entity merging in ClusterImpl . java to ensure proper
server : fix regionid in search by regionid in portableipdaoimpl
removed duplicate call to streamManager . open in ItemOrientedStep . java to improve code clarity and maintainability by eliminating
added a new file ` CountedLoopProblem . java ` that generates random numbers and checks for unexpected results to implement a loop that generates random
remove unused parameter from executecompiledmethod ( ) and executecompiledmethodvarargs ( )
[ gr - 10625 ] fix pending _ failed _ speculation _ offset to work with jlong type .
refactor KafkaStreamsTracing methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities for key - value transformations
[ # 8807 ] feedback constant sum question : include received point in result ( # 881 )
removed the call to ` DynamicColors . applyToActivitiesIfAvailable ( this ) ` in ` BaseApplication . java ` to streamline the application
added a method to dump all thread stack traces and modified thread joining logic to improve thread management and ensure proper termination of child threads
updated return statement to use intValue ( ) in IntPointField . java and added multiple assertions in TestPointFields . java to ensure correct conversion
updated the arcSize variable from an integer to a double and adjusted its value based on the width to improve the accuracy of the arcSize and
updated width values from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to improve image
replaced ` isMinifySqlEnabled ` with ` isShrinkWhitespacesInSql ` in ` SqlSourceBuilder ` and ` Configuration `
refactor state transition methods in AbstractLauncherUiTest and WorkProfileTest for improved clarity to enhance code readability and maintainability by
updated import statements in multiple test classes to include new configuration classes to ensure compatibility with the latest Apereo and Apereo features in the
replaced ` raf . readLong ( ) ` with ` DataIO . getLong ( buf , 0 ) ` and ` DataIO . readLong (
camel - http : fix the unit test error of camel - http
refactor the creation of ClassPathInfo in DeclarativeHintsParser to use a builder pattern to improve clarity and maintainability of the
[ media ] add mediascriptscopeprovider for audio and voice .
added methods to get and set layer managers in AnimComposer and modified event handling in AnimEvent to improve layer management management and ensure proper
added a check to return early if the queue is empty in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to
added null checks for mapOp and mapWork in MapRecordProcessor and modified exception handling in TezProcessor to improve robustness by preventing
replaced ` center2D ` with ` center ` and refactored related methods in ` CylinderRegion . java ` to improve
replaced the static import of ` Assert . assertThat ` with ` ExpectedException . none ( ) ` in ` TestBadUseCases .
modified the ` sendOneQuery ` method to handle ` SimpleParameterList ` and added a new test for multi - execution in ` StatementTest
do n ' t call customizeenvironment ( ) if it do n ' t exist
added " rctag = android% 20app% 20edit " to the GET method in ReviewInterface . java to ensure compatibility with Android
refactor Test . java to improve code structure to enhance maintainability and readability of the test code
updated PBEKeySpec parameter from blkSize * 8 to keyLength in PBES2Core . java to ensure correct key length is used for
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in the RtfDocumentHeader class to ensure the section definition is correctly written for the document header
added a check for large jump detection in GpsLoggingService . java and updated the accuracy check in Maths . java to ensure accurate accuracy
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 119 )
replaced boolean flags with Reference < Object > objects for rootNameFn , sourceFilterFn , and sourceFilterFnHash in InsightFilter
removed binary search for app names when adding to the data and added lists to simplify the code by eliminating unnecessary binary search operations
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` in ` SettingsActivity ` and removed ` ThemedPreferenceActivity `
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
updated assertion formatting in FST . java to improve code readability and maintain consistency
added an assertion to check if the security policy exists or is a file to ensure that the security policy file is valid to prevent runtime errors
camel - olingo - add miss getconfiguration ( ) method to olingo2component .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for recovery operations to complete
removed the exception from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception context
added ability to publish xmpp image by http
camel - 15850 : camel - netty - optimize the netty producer so it do n ' t need to create a channellocal
updated URL _ TEMPLATE regex to allow spaces in host names and added tests for valid and invalid host names in BalancedClickhouseDataSource to improve
added a system property to disable JSR - 199 compilation in FragmentActivator . java to improve performance by avoiding unnecessary JSR - 199
added support for null string values in CSVRecordReader and CSVRecordReaderConfig to enhance flexibility in handling null values in CSV records
added LiquibaseService import and annotation to multiple connection classes to enable Liquibase service functionality for better connection management
updated references from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java ` to ensure compatibility with the latest
updated event topic handling in ItemCommandTriggerHandler and ItemStateTriggerHandler to use a dynamic topic instead of a hardcoded value to improve flex
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve cl
solr - 10625 : deprecate zkcredentialsprovider in favor of zkaclprovider
fix the mana tablet not be able to damage all the mana . close # 389
added a line to set the identifier collection in the current call event to ensure the correct identifier collection is used for processing call events
removed unused imports of HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter in TestRandomChains . java to clean up the code
updated the thread pool name format from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to improve cl
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the codebase
updated the assertion message in TypeDefinitionRegistry to include the variable ' definition ' to improve clarity of error message for better debugging
removed unused import statements and set visibility of the shareWithMeIcon view to GONE to improve code clarity and ensure the shareWithMe
updated the link to the Bootstrap CSS from " http " to " https " in multiple filter files to ensure the Bootstrap CSS link is accessible to
added @ NotNull annotation to headers parameter and updated method to use getOrLoadSortedService with Collections . emptyMap ( ) to enforce non - null values
enhanced assertion to include detailed error messages in TestIndexWriterMergePolicy to improve debugging and troubleshooting of test cases
added @ Deprecated annotation to multiple Java classes to indicate that these classes are outdated and should no longer be used in future development
added a null check for the context in the CrawlerSessionManagerValve and introduced a new test for multiple contexts to ensure proper handling of context
modified the ` getJspApplicationContext ` method to use a privileged action for retrieving ` JspApplicationContextImpl ` based on security settings to enhance security by
updated length calculation logic in RocketComponentConfig . java to account for minimum and maximum values to ensure correct positioning of components based on their
updated NonceService binding to use Scopes . SINGLETON in OpenIDAuthenticationProviderModule . java to ensure NonceService is only bound to a single
added a new ` thenCompose ` block to update child links in ` FileWrapper . java ` to ensure that child links are properly updated during
refactor ` doExecute ` method and improve error handling in ` SpringCloudPlugin . java ` to enhance code readability and maintainability by
increased the delay duration in the publishWithDelay method calls from 100 to 500 milliseconds to improve test reliability by allowing more time for
add a flag to control whether shift code should be override in the keyboard .
[ hotfix ] [ runtime ] fix the leader check in nodeclustercoordinator # isleader
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated filter condition in AbstractKerberosDescriptorContainer to use isReference ( ) instead of getName ( ) for identity validation to improve clarity and
updated method signatures to replace ` AbstractCommandOptions ` with ` noop ` in ` ArtifactCacheFactory ` , ` LoggingArtifactCacheFactory ` ,
added a sleep delay of 3000 milliseconds in the TestListenTCPRecord . java file to improve responsiveness by allowing more time for IO operations
patched the original argument of methodCall . arguments in PatchExtensionMethod . java to ensure proper handling of method calls by reusing original arguments
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` and updated related methods to
add support for ' apply - sequence ' and ' ignore - send - failures ' attribute on router element .
added x509 publish URL handling in ClientKeyPublisherMapping and modified x509 view name handling in JwkViewResolver to improve client certificate publishing
updated the handling of the single reader in QueryComponent . java to ensure proper initialization of the SolrIndexReader when there is only one reader
replaced ` ValueSourceParser ` with ` Double2Parser ` for " max " and " min " in ` ValueSourceParser . java
simplified return statements in Container . java to improve code readability and maintainability
removed unused variables in Highlighter , SpanGradientFormatter , and TokenSources classes to streamline code and improve readability
cloudstack - 4892 : fix the wrong uuid in the db insert statement ( # 4892 )
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use ObjectProvider for flowBuilderServices to improve flexibility in
updated PostgreSQL connection handling and improved SQL execution methods in WriteJdbcPTest . java to enhance database connection management and ensure proper connection termination
removed conditional check for " editor . laf " preference before setting the look - and - feel in DefaultPlatform . java to simplify the
replaced calls to ` getStateEntity ( ) ` with ` stateEntity ` and ` desiredStateEntity ` in ` ServiceComponentHostImpl .
simplified margin calculations in FloatingTaskView . java to improve readability and maintainability of the code
added a break statement in RootFolder . java and updated the status line in NavigationShareTab . java to improve error handling and provide user feedback
[ hotfix ] [ runtime ] fix thread id in cpu call graph builder
ggb - 1842 : do n ' t call toolbar . getalltools ( ) for perspective . Probability
added NetworkAddressChangeListener implementation and improved logging messages in HomekitImpl . java to enhance network address management and enhance logging clarity for better
replaced lease retrieval method with leaseRenewalTime retrieval in TestHDFSEventSinkOnMiniCluster . java to improve clarity
replaced ` Optional . < SourcePath > absent ( ) ` with ` Optional . absent ( ) ` for ` prefixHeader ` and `
added null check for exception message in ExceptionHandlerRegistryFactory to prevent potential NullPointerException when handling null messages
changed the ` nextID ` variable to be ` volatile ` and updated related methods in ` DirectoryTaxonomyWriter . java ` to ensure thread safety
http : / / issues . apache . org / activemq / browse / amq - 2237 - wait for message to be
added ` HasSourcePath ` interface and implemented ` HasSourcePath ` interface in multiple classes to implement the ` HasSourcePath ` interface for
replaced StringBuffer usage with direct string concatenation in IllegalArgumentException to simplify error handling by eliminating unnecessary string manipulation
added custom index field name handling in OrdinalMappingAtomicReader and refactored test cases in TestOrdinalMappingAtomicReader to ensure correct
updated the ` toEpochMilli ` method to handle negative seconds and negative nanoseconds correctly to ensure accurate conversion of nanoseconds to milliseconds in the
updated attribute retrieval in OGLESShaderRenderer and LwjglRenderer to use the name ( ) method instead of direct access to
added logic to manage block update scripts in CopyPaste . java to ensure that scripts are only updated when the application is blocked
added a new file TestCMoveLimitType . java with methods for testing ByteBuffer and CharBuffer to facilitate performance testing of character
reset temporal attributes in ChannelState and modify audio packet processing logic in AudioPacketWaveRecorder and OverflowableTransferQueue to improve memory management and
camel - 14650 : fix the build error of camel - sspt
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor code to encapsulate console creation and version printing logic into a separate method to improve code readability and maintainability by encapsulating version
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to improve code organization and maintainability by centralizing token validation logic
added handling for EOFException in Http11InputBuffer . java to ensure proper error management when reading data
improve test coverage for defaultgroupprovider . deletemember ( )
camel - core - optimize camel - ftp to avoid unnecessary object array creation
deleted the V2ReplicationProtocol . java file to the replication protocol is no longer needed for protocol version 2
updated ` ImmutableSortedSet < BuildRule > ` to ` ImmutableSortedSet < SourcePath > ` for ` compileTimeClasspathSourcePaths `
added new files ` ConstructorArgsDemo . java ` , ` StrictDemo . java ` , and ` StupidFinal . java ` to
[ geot - 5892 ] fix memory leak in directtemplatefeaturecollectionfactory ( # 5892 )
updated the assertion to check for responseCount against a factor of 2 to ensure that the response count does not exceed the replication factor
added a null check for ` item . getIndexNumber ( ) ` in ` ItemRowAdapter . java ` to prevent potential NullPointerException when accessing `
corrected the spelling of " areAnchestors " to " areAncestors " across multiple files to improve code readability and maintain
added a width check in KBBase . java to return early if the app ' s width is less than 12 to optimize performance by avoiding
updated equality check from ` = = ` to ` . equals ( ) ` in ` ChangeLogParameters . java ` and added a new test
changed the ` loggers ` map from static to instance variable to allow concurrent access to the ` loggers ` map
update return statement to use getBasePlot ( false ) instead of directly returning the plot object
camel - 10650 : camel - rest - upload - do not create upload directory if they do n ' t exist
updated ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnection classes to introduce a new boolean parameter ` sendStatus200 `
added a condition to check if the comment length is greater than zero before processing it to ensure proper handling of multi - line comments in comments
added imports for BuckFileType and its associated file type management in BuckModule . java to ensure proper file type associations are removed when the
replaced multiple specific imports with wildcard imports in ComposedUtil . java and changed return types from ToLong < T > to ToInt <
added a new constant RTM _ OS _ ERROR and updated error handling for unsupported CPU options to improve clarity of error messages related to RT
removed unnecessary whitespace in test methods in AccountsActivityTest . java to improve code readability and maintain consistency in formatting
refactor Player class to improve code organization to enhance maintainability and readability of the Player class
added a mockito package import for ChannelTypeUID in AbstractModbusOSGiTest . java to enable mocking of ChannelTypeUID
[ gr - 18686 ] fix typo find by codespell on fossies . org
set ` systemContext ` to null in ` AndroidTestEnvironment ` and implement a reset method in ` ShadowFontsContract ` to ensure proper
added a method ` toMillis ` in ` TimeGranularity ` and modified date handling in ` PinotDataSourceMaxTime ` and ` Pinot
refactor control flow handling for try - finally statements in ControlFlow . java to improve clarity and maintainability of try - finally blocks
updated assertion logic in Assert . java to handle different array sizes and improved error messaging in ArrayEqualityAssertTest . java to enhance robustness
fixed switch / cases indentation see http : / / github . com / codenameone / codenameone / issues / 158
updated bitwise operation syntax in MeshBuilder . java to improve code readability and maintain consistency in bitwise operations
nifi - 1745 : remove unnecessary controllerserviceprovider field in standardprocessscheduler
added Java annotation processor parameters handling in KotlincToJarStepFactory and created a corresponding test in KotlinLibraryIntegrationTest to
updated RESCROLL _ DELAY from 750 to PAGE _ SNAP _ ANIMATION _ DURATION 150 and refactored page snap
added shortcut permission checks and updated shortcut loading logic in LauncherModel and DeepShortcutManager to ensure shortcuts are refreshed only if they are required for
added case handling for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance search functionality in the console
added null check for core name in CoreAdminHandler and implemented a null check in CoreAdminHandlerTest to ensure proper handling of null core names
added marker selection functionality to the NearbyMapFragment to ensure the bottom sheet is hidden when the selected marker is selected
added error handling in FileSyncAdapter to print stack trace for better debugging and troubleshooting issues
refactor memory check logic in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve clarity and robustness of
modified the initialization of feeds in FeedQueues . java to filter out non - heavy load feeds based on application settings to ensure that feeds are
added thread verification for playback thread in DefaultDrmSession and DefaultDrmSessionManager classes to ensure proper access to playback threads during session management
updated locale handling in AndroidBinaryDescription and added setter method in AndroidBinaryBuilder to ensure consistent behavior across different locales for packageType and resourceCompression
[ wfs3 ] use application / xml instead of text / xml by default
updated the instantiation of ` confFile ` and ` config ` to use ` INSTANCE . confFile ` instead of ` configFile ` to ensure consistency
removed " sleep 5 " from the waitUntilReadyAndTimeout method call to simplify the test execution by eliminating unnecessary sleep duration
updated imports and conditions in HiveExpandDistinctAggregatesRule . java from IntMath to LongMath and modified the getGroupingIdValue method to use
added multiple checks for headless environment in mmm Toolkit . java and ppp Toolkit . java to ensure proper handling of headless
updated the conditional check in ExoflameFurnaceHandler to include a match check for the furnace ' s world to ensure
add solverconfig . move _ thread _ count _ none to default solver .
do n ' t select wrong resource with the same spname when search with revinclude
added a new test class ` Issue582Test ` for testing the ` Pump ` functionality to ensure that the ` Pump ` class
[ native ] add more e2e test for decimal overflow
refactor LoadingCache class to improve code readability to enhance maintainability and facilitate future updates
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest to ensure proper handling of non - constructor methods in the
simonstewart : add expectedconditions . elementtobeselected ( ) and expectconditions . elementselectionstatetobeselected ( )
added a new method ` hasView ` to the ` DatabaseSnapshotGenerator ` and ` JdbcDatabaseSnapshotGenerator ` classes to check for views to
refactor DOMUtil class to improve code readability to enhance maintainability and ease of understanding
added translation calculations in TaskViewUtils and a method to log matrix values in Utilities to improve animation responsiveness and facilitate debugging
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM to false in both FeatureFlags . java and RotationHelper . java
added a static method ` walk ` to ` TempFSTTermsReader ` for processing arc nodes and modified the ` writeVInt ` and
added SolrQueryRequest parameter to the create methods across multiple factory classes to enhance flexibility in handling Solr query requests
updated trigger creation and validation logic in SingleTableMySQLTriggerTest . java to ensure proper handling of null values in post content and announcement records
refactor FieldValueHitQueue to use a dedicated setComparator method for setting comparators to improve code clarity and maintainability by centralizing
updated string concatenation syntax in PhoenixQueryBuilderTest . java to ensure proper formatting of SQL queries to avoid SQL injection vulnerabilities
added Spark import and invoked awaitInitialization method in the init method of RequesterTest . java to ensure Spark is properly initialized before running tests
added methods to retrieve and save the total storage pool settings in DynamicPropertiesStore . java to enhance storage management functionality and provide error handling for invalid
added NinjaProperties to manage file paths in AssetsController and modified URL retrieval logic based on dev mode to improve resource management and error handling for
bugfix : mapmarksmanager . getmapmarkkey ( ) should use mapmark . getmapmarkkey ( )
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance token handling for default values in
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to
refactor JxBrowserManager to use a variable for the file path and improve logging messages to enhance code readability and maintainability by redu
added logic to retrieve the " AppVersion " property and simplified string comparison to use equals method to improve code readability and maintainability by using
replaced ` getBridgeUID ( ) . getId ( ) ` with ` getUID ( ) ` in ` SomfyTah
disable flaky test on github
refactor OpenWireConnectionTimeoutTest to use static properties for SSL keystore and trust manager to improve code maintainability and ensure proper configuration of SSL
[ dynatrace ] do n ' t export nan value in dynatrace metric
removed a session from the sessionIdToSessionInfo map to ensure the session is removed from the session manager ' s session information
added a check to set the hostname if it is null in the HeartBeatHandler and updated a log message in AlertReceivedListener to
simplified the buffer flushing logic in ChannelEndPoint . java to improve readability and maintainability of the code
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . kmodule
added unit test for seeking to mode in ShadowMediaPlayer and implemented seekTo method in ShadowMediaPlayer to ensure correct behavior of seekTo
updated method names from ` createTask ` to ` createThrowingTask ` across multiple classes to improve clarity and specificity in task creation
added border settings for tabCloseButton based on Aqua LAF mode to ensure proper UI behavior when using Aqua Laf
added HTTP POST request and connection timeout settings in TSPTimeStampService . java and updated test assertions in TestSignatureInfo . java to enhance HTTP
( chore ) camel - jbpm : add miss permission to xstream
added error logging for diamond non - generic types in Attr . java and created a new DiamondRaw class in Neg12
[ calcite - 1341 ] fix checkstyle violation in reloptutil
updated validation checks for setting ID and value in Http2Settings . java to improve clarity and correctness of setting validation logic
deleted the file Issue664Test . java to the test file is no longer needed for the current functionality
removed exception handling for disposed sessions in SessionsPoolTest . java to improve test reliability by preventing operations on disposed sessions
added root object creation and end method for FeatureCollection in GeoJsonWMSBuilder . java to ensure that the FeatureCollection object is properly formatted
replaced the method ` setIndex ( int mode ) ` with ` setSelectedIndex ( intValue ( selectedIndex ) ) ` for setting the selected index to
added a check for manual unstashing in TaskbarStashController to ensure proper handling of app stashed state during manual unstashing
camel - 17777 : camel - jbang - do not use customid for route coverage in xml
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for wait for expected events to enhance event mismatch handling by allowing optional wait for
added a new file ` HeaderFixer . java ` that uses a custom file processor for processing headers to ensure that headers are correctly formatted and
added functionality to send a loading complete broadcast in the Launcher class to ensure the app widget is properly bound when the first load completes
deleted the ` SuperJumperAndroid . java ` file to the functionality was no longer needed in the project
[ hotfix ] [ table - planner ] fix systemtablescan . isdistributed ( ) return false
added interfaces KeyValuesProviderAware and ObservationConventionAware to the Observation interface to enable handling of key values and observation conventions in the
add miss block and item to the registry ' s processidrematches method
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use explicit casting of ' i ' to long to ensure correct
added caching mechanism for formatted data format strings in HSSFCellStyle . java to improve performance by avoiding repeated calls to getDataFormatString
updated the request to filter users by username in the RemoteAuthenticationEndpointTests to ensure that only valid usernames are processed in the response
change the condition from checking if def needs input to checking if the def is finished to ensure that the def is finished before proceeding with input
updated logging to include container information for launcher _ allapps _ exit to improve logging clarity by including workspace information
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to remove unused test code to streamline the codebase
do n ' t update marker if they do n ' t exist
added a new menu item " Reopen in Browser " and implemented a method to check if the server is running to enhance user experience by allowing
added a new error message for multiple outputs in ErrorMsg . java and improved conditional checks in SemanticAnalyzer . java to enhance error handling for
added tests for the ` addEntryListener ` method in ` BasicTest . java ` to ensure that the ` addEntryListener ` method throws
fix a bug in coordinatearrays . reverse ( ) and add unit test
removed unnecessary whitespace in ToolbarPanel . java to improve code readability and maintain consistency
added a boolean variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to ensure proper initialization of the
replaced the method ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to
[ java ] : set the destination of the message dispatch in the test .
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE to ensure proper handling of negative integer values
pdfbox - 4071 : fix checkstyle violation in amd64floatconvertnode
replaced writerIndex calculations with direct addition of pendingChunks and buff in HttpClientRequestImpl . java and modified buffer handling in HttpTest . java
updated artifact replacement logic in GetMavenDependenciesTask . java to ensure correct formatting of " analysis - " to " analyzers - "
pdfbox - 4892 : remove unnecessary type cast , a suggest by valerybokov
removed unnecessary print statements in ReferenceUtil . java to clean up the code and improve readability
refactored field visibility predicate to use visible field predicate environment .
added configuration parameters for JSON - RPC SOLIDITY port and enablement to enable or disable JSON - RPC based on configuration to enhance flexibility
added a type check for the folder before removing it from the drag controller to avoid potential ClassCastException when processing DropTarget instances
refactor stub jar creation logic into a separate method ` createStubJar ` to improve code readability and maintainability by reducing duplication
added new Feature entries for Setup wizard and Workflow helper in StartPageTopComponent . java to enhance user experience by providing guidance on setup wizard
do n ' t schedule a meteredflusher until we ' ve fix it .
removed unnecessary null check for available in OnlineTestCase . java to simplify the code logic for better readability and maintainability
updated return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure the correct return attribute is used for user
refactored onIdleTimeout handling in HttpChannelState . java and added failure listener in HttpChannelTest . java to improve error handling and
modified the CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to ensure proper handling of non - blocking operations in the
updated TABLE _ HEADER _ SEPARATOR regex and modified the matcher logic in TableBlockParser . java , and added a new test method in TablesTest
updated return value from 32.0 f to 31.5 f to improve camera scaling accuracy
added a preference to disable the start on - boot setup in GpsSettingsActivity and updated URL return values in Utilities to improve user experience by
updated the client secret length in DefaultOAuth2ClientDetailsEntityService from 128 to 512 to optimize secret generation for better security
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include a boolean parameter for enabling null parameters to improve clarity of
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to mark the test as ignored due to race conditions
updated the ` getInputPinotFS ` and ` getOutputPinotFS ` methods to use ` PluginManager ` instead of ` PinotFS
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting based on the application ' s locale
added MetalLookAndFeel import and set it in UIManager to enhance UI appearance by using a custom look and feel
refactor ping task handling and introduce a pre - destroy method for better resource management to improve thread safety and prevent potential memory leaks during
updated the error message from ` throwable . getMessage ( ) ` to ` throwable ` in ` GlobalErrorHandler . java ` to improve error reporting by
renamed parameters in ` addReads ` , ` addExports ` , and ` equals ` methods from ` module ` to ` from ` to
added handling for CmdLineException in PinotAdministrator . java to improve error logging for command line exceptions
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and marked ` hashCode ( ) ` as deprecated to
removed unnecessary comments and adjusted visibility of boolean variables in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and maintain
pdfbox - 4892 : disable zoom by default , a suggest by valerybokov
refactor user - related variables to use process - specific methods instead of conditional checks to improve code clarity and maintainability by centralizing user
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in UnixFileSystemProvider and WindowsFileSystemProvider to
added ArgumentExtractor as a parameter to the DelegatedClientAuthenticationAction constructor and updated service resolution logic to enhance flexibility in handling argument extraction in
changed the defaultGroup variable from private to private final in NacosServerRegisterRepository . java to enforce immutability of the defaultGroup
fix tilesizechanger not use tilecache . destroy ( ) and tilecaches . create ( )
removed redundant calls to removeAllViews ( ) in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline the code and improve readability by
refactor the cleanEntriesForFeedsWithoutSubscriptions method to improve clarity and structure to enhance code readability and maintainability by encapsulating
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to stream
nifi - 1748 : fix filebasedclusternodefirewalltest failure on window
pdfbox - 4892 : improve the accuracy of conic through 5 point
added braces for EOF checks in RandomAccessReader . java to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod .
refactor CImage to use a new method for converting images to arrays and introduce a new method to create images from multiple images to improve
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to ensure compatibility with
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity and consistency in
replaced manual null checks with ` Objects . equals ` in multiple Java files to improve code readability and reduce potential null pointer exceptions
[ j2kt ] fix handling of inner class name in classpath symbol resolver .
added tests for various Ninja properties in NinjaDefaultTest . java to ensure proper handling of HTML error states in the Ninja configuration
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve clarity and functionality
adjusted padding values for timestamps view in DetailFragment and adjusted list view position offset in ListFragment to improve layout responsiveness and ensure proper
updated exception handling to use ` Thread . currentThread ( ) . interrupt ( ) ` instead of ` KeeperException ` and ` InterruptedException ` to
added null checks for field and field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure that
server : do n ' t allow static nat service to be use in a network without static nat
added resetHeaderScrollingState ( ) calls and resetFabVisible ( false ) in OCFileListFragment . java to ensure header scrolling
added functionality to remove extra empty screen from the workspace to improve user interface responsiveness by removing unnecessary screen elements
added support for fixed width in BitmapFont by introducing a fixedWidth flag and adjusting glyph positioning based on its width to ensure proper
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored related logic in ` ChangeLogFragment ` to simplify
added preEvent , preTransition , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state machine interceptor functionality for better
refactor ConfigDescriptionProvider to improve code readability to enhance maintainability and ease of understanding
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf handling in StorageBasedMetastoreTestBase and TestStorageBasedMetastore
refactor sorting logic in FacetComponent to use a boolean variable for clarity to improve readability and maintainability of the code logic
replaced the use of ` createOverridingProperties ( ) ` with a local variable ` overridingProperties ` and updated the cache file path to
added logic to stop Jetty instances based on the presence of a stopped replica in a collection to improve test reliability by ensuring all Jetty
added a fileName parameter to the newInstance method in FileActionsDialogFragment to allow customization of file names in the dialog
replaced hardcoded value for reorder direction with a constant INVALID _ DIRECTION to improve code clarity and maintainability by using a constant for
updated API endpoint paths and structure in InnerTransferRequest and AccountAPI classes to improve clarity and consistency in API endpoint structure
fix jetstestutils . assertjobrunningeventually ( job , long executionid ) to check job execution id
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to
replaced specific imports with a wildcard import and added multiple visitIdentifier methods to improve code readability and maintainability by using a wildcard import
added a method to set the action text color in AuthenticatorActivity to improve user interface clarity by using the primary dark color
added ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` for improved handling of foreign key
renamed methods and variables from ` addTestStepsFor * ` to ` createTestStepsFor * ` in ` Runner . java ` to
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests `
added a ` cancelClient ` method to ` RpcServer ` and modified ` startDriver ` in ` SparkClientImpl ` to handle client cancellation
added ` getImplicitPreCoercionValue ` method implementations in ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller `
initialize lastDisplayedUser as Optional . empty ( ) in FileDisplayActivity . java to ensure that lastDisplayedUser is not set to
added a new method ` findAll ` in ` QueryDslMongoRepository ` and a corresponding test in ` AbstractPersonRepositoryIntegrationTests ` to
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl instances to avoid potential NullPointerExceptions when stopping components
[ hotfix ] [ benchmark ] exit the warm - up loop in case of a failure .
add xread ( ) and xreadgroup ( ) method to multistagepipelinebase and multistagepipelinebase
refactor ` LinkedBufferInput ` and ` StreamInput ` classes to remove unnecessary ` this ` references and simplify method calls to improve code cl
added WebSecurity configuration to CasWebAppSecurityConfiguration and refactored HttpSecurity configuration in CasWebSecurityConfigurerAdapter to streamline security
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to ensure
added a method to register a ContentProvider in ShadowContentResolver and modified ContentProviderController to utilize it to ensure proper registration of ContentProviders
updated the type of the ` version ` variable in ` AttributeReader ` from ` Version ` to ` ClassFile . Version ` to ensure compatibility with
added a line to set the keep - alive configuration based on the configuration ' s keep - alive status
[ java ] rename context . unicastsenderflowcontrol to context . unicastsenderflowcontrolsupplier for clarity .
ggb - 1343 fix for 3d locus with no point in 2d
added concurrent imports and improved error handling in ChannelEndPoint , WebSocketConnectionD13 , and WebSocketMessageD13Test classes to enhance thread safety
simonstewart : introduce selenium . take . screenshot option to take screenshots
replaced JUnit ' s assertEquals with AssertJ ' s assertThat in multiple test files to improve code readability and maintainability by
truffle : remove trufflelanguage . getcontextreference ( ) , since it be no longer use
initialized the ` e ` variable to ` null ` and updated exception handling logic in ` StubberImpl . java ` , along with creating new
updated error messages in Actor and Group classes to use " Actor " instead of " Child " to improve clarity and consistency in error handling
updated the ` getCenter ` method to handle location permissions using ` LocationPermissionsHelper ` to enhance user experience by allowing location access and enabling or
http : / / issues . apache . org / activemq / browse / amq - 2237 - add a countermdb
added import for CookieSpecs and set the request ' s cookie specification to standardize cookie handling in HTTP requests
simplified the overlap check in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering method to improve audio
added a monitoringUrl parameter to the ScrollingPanel and SystemInformationsButtonsPanel constructors to enable monitoring functionality in the application
[ hotfix ] [ k8s ] remove kubernetes . service . create - timeout config option
updated icon setting logic in NearbyListFragment to handle different place descriptions to improve user experience by providing appropriate icons based on their descriptions
added null check for type . getPackage ( ) in DefaultPackageScanClassResolver . java to prevent potential NullPointerException when accessing the package
added a new file PrintInlining . java containing a main method that prints " Passed " to facilitate the printing of
fix ( javadoc ) : fix parsing of nested brace in javadoc tag
[ java ] remove unused field in archive test .
updated EdgeDataTable to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) for improved data handling to enhance data integrity by
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
updated logging format from integer to floating - point in VideoManager . java to improve logging clarity and provide clearer context for playback speed setting
send roomremovedevent when room be remove from cluster
changed the configuration from ' replicas ' to ' cores ' in the AutoScalingHandlerTest . java file to align the test with the new configuration standard
added key flipY and generateMips settings and set texture key in TextureHelper . java to enhance key rendering capabilities for improved texture
replaced ` PythonDslProjectBuildFileParser ` with ` EventReportingProjectBuildFileParser ` and updated related classes to utilize event
[ j2kt ] introduce librarynormalizationpass to handle normalization .
removed the ` this ` parameter from the ` nextResponseBodyConverter ` method in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverter
[ hotfix ] [ runtime ] fix checkstyle violation in memorymanager
[ hotfix ] [ table - common ] add @ temporal to consolesessionvo
added new files Hbs . java and HbsTest . java to implement the Handlebars template engine in the Jooby framework to
updated visibility logic for HintMessage and IncomingMessage in ChatMessageAdapter to handle empty hints and messages to improve user interface responsiveness by
fix importcsv to use value ( ) rather than keyset ( )
[ java ] add waituntilalertdialogappears test for slow alert dialog .
added a null check for distinct column indices in ReduceSinkDeDuplication . java to ensure proper handling of cases where there are more than
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4358 ,
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated websocket dependency from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty
changed return type from unmodifiableMap to unmodifiableMap in SAMLAuthenticatedUser . java to improve immutability and readability of the attributes collection
fix a bug where the header be not repaint after save a program .
replaced instantiation of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return values in multiple classes to simplify
replaced ` getDate ( colName ) ` with ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure accurate retrieval of timestamp
updated conditional check in HtmlJndiTreeReport to include " javax . naming . Context " to ensure compatibility with javax . naming . Context and
updated the ` createDefaultDbOptions ( ) ` method to handle different database types and improved logging format to enhance flexibility in handling different database
updated edgeType check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual
removed the private static final int FLAG _ SLIPPERY and replaced it with a static import from WindowManager . LayoutParams to streamline
fix truffleconstantfieldprovider . getarraydimension to return 1 for array field .
added methods to get and set Google Drive folder path in PreferenceHelper and updated related classes to utilize this preference to enhance user experience by
added shufflingsuggestions ( ) method for the suggestion popup .
added @ Nullable annotation to multiple assertThat methods in Truth . java to ensure proper handling of null values in method signatures
refactor return statements in ArrayUtil . java for improved clarity to enhance readability and maintainability of the code
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to include a method to check if a constructor can be instrument
added waitingForAnticompaction management in StreamIn and StreamInManager classes to track and manage the state of waitingAnticompaction
added a boolean field ` isKeyguardSecure ` and its getter and setter methods in ` ShadowKeyguardManager ` to enable secure keyguard
added serialVersionUID fields to StringDialog . java to ensure compatibility with the latest version of the class
updated GrblUtils to replace spaces with spaces in the status string and added a conditional check for overrideParts length to ensure proper parsing of
corrected the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrow
added a new test method ` testDrainNotCalledAfterClose ` in ` FileSystemTest ` and modified the logic in ` AsyncFileImpl `
increased LIGHTS _ NUM and LIGHT _ INTESITY from 4 to 8 and adjusted light shader parameters to improve lighting
replaced instances of ` TestProjectFilesystems . createProjectFilesystem ( ) ` with ` workspace . getProjectFileSystem ( ) ` in various integration
[ java ] use pathwithlines in cucumberfeature . loadrerunfile ( )
refactor Gson , JsonArray , and JsonObject classes to improve code readability and maintainability
removed the @ NotNull annotation from TEST _ DIRS in PubRoot . java to indicate that the TEST _ DIRS array must not be null
added a call to close the ParcelFileDescriptor using Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) to ensure
added a method to reset the prefix index in BasisLibrary and modified its usage in Stylesheet and BasisLibrary classes to improve thread safety
added import statement for LogLevel and annotation for HttpConnection in TestDistributedStatsComponentCardinality . java to enable logging for debugging purposes during test execution
added ` throwIfImmutable ( ) ` method to ` IntList . java ` to ensure immutability of ` IntList ` instances
added @ NotNull annotation to onApplicationEvent method and improved URI creation in GrpcClientBuilder to enhance null safety and ensure proper URI generation
move graal demo to jline . demo . graal so it can be run from the command line .
[ gr - 13939 ] ensure that the assumption be invalidate even if the function array be not valid .
added platform - specific handling for writing XML files on Windows to ensure proper line endings in manifest files for Windows compatibility
fix for rcn _ redundant _ nullcheck _ of _ nonnull _ value warning
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and modified null checks in ThingResource to improve null safety and prevent potential NullPointerExceptions
[ hotfix ] do n ' t wrap cancellationexception in masterjobcontext
pdfbox - 4892 : do n ' t call page . getcropbox ( ) if it ' s null
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR in FeatureFlags . java to enable access to All Ap
refactor FragmentActivity initialization to use Robolectric ' s ActivityController to improve code clarity and maintainability by utilizing Robole
renamed method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` in ` ShareActivity `
rename classes from ABCase to TestABCase across multiple files to improve clarity and consistency in naming conventions
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for getBlackhole
updated the handler setup in OpenRocketViewer to call doSimsChanged ( ) before setting the current rocket ' s handler to ensure
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe to change Maven dependency groupId and artifact ID to enhance
refactor file system initialization and add segment checking logic in IndexingJob and SegmentChecker classes to improve code clarity and ensure segments are only
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use Supplier for managing replacement paths and source path mappings to improve performance and maintainability of the code by reducing
rename JsonExamples class to Examples for clarity to improve code readability and maintainability
added debug logging statements in ViewExtractor . java for better traceability to facilitate troubleshooting by providing insights into
refactor FindsByLinkText class to improve code readability to enhance maintainability and ease of understanding
added a new file ` Main . java ` containing a class that prints the " java oop entry point hit " message to facilit
add some synchronization around the creation of cSeqHeader and handleChallenge to ensure thread safety .
removed redundant continue statements in NativeScanner . java to streamline code by eliminating unnecessary continue statements
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unnecessary
refactor dependency resolution to use ` Supplier < ImmutableList < BuildRule > > ` instead of ` ImmutableSet . Builder ` to improve performance and reduce
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added charset extraction from content type in ExtractingDocumentLoader to ensure proper handling of content encoding based on the provided content type
fix findbugs sql _ prepared _ statement _ generated _ from _ nonconstant _ string warning in databaseconfig . java
added a null check for the slot variable in WindowListener . java to prevent potential NullPointerException when accessing the slot variable
add -- ignore - transitive - repositories option to maven execution request
removed duplicate dependency on BackgroundJobManager in ContactsPreferenceActivity . java to streamline dependency injection by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android versions
added null check before closing selection in NIOTransport . java to avoid potential NullPointerException when selection is not initialized
added a check to break the loop if the matcher ' s start and end are the same and the current index equals the string length to ensure
updated the IntegrationTest annotation to include server port configuration to ensure compatibility with the server ' s port configuration
added a new ` UDFReverse ` class and registered it in the ` FunctionRegistry ` to implement a reverse function in the Hive query framework to
updated context path retrieval methods to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to improve clarity and consistency in
refactor Tracer class to improve code readability to enhance maintainability and ease of understanding
[ hotfix ] [ test ] ignore flaky rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java to improve code readability and maintainability
added synchronization to clear the buffer in StarTreeRecordStoreCircularBufferImpl . java and implemented a test for clearing it in TestStarTree
updated forecast minutes , hours , and days from 0 to 60 , 48 , and 8 in OpenWeatherMapOneCallHandler . java to
added timeout annotations and updated fetch request time variables in AbstractPageOperationTemplateTest . java to improve test reliability and ensure accurate tracking of fetch
updated RemoteTargetGluer and FloatingHeaderView to improve handling of split task IDs and added animations for the " All Apps " button
updated the ` parseRerunFile ` method to return a ` Stream < Collection < FeatureWithLines > > ` instead of a ` Collection
fix botania creative tab not show up in the creative tab .
updated assertion parameters in TestRadioButtons . java for consistency to improve code readability and maintainability
added functionality to handle file sizes in RCFileCat and introduced a method to retrieve the number of rows in RCFile to improve file size management
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
[ jna ] add ndarray check to jnautils . verifyndarray ( ) method .
refactor BlobServer class to improve code organization to enhance maintainability and readability of the codebase
fixed bug 1188238 - unusedprivatemethod no longer report a false positive when a method be call from an initializer .
replaced instances of ` lexicalScope ` with ` lexScope ` in multiple files to improve clarity and consistency in variable naming
added a test method to verify that the SFTP inbound adapter is not running during auto - startup to ensure that the SFTP inbound adapter is
added methods to retrieve node level , quadtree root , and child boundables in the AbstractStrtree and STRtree classes to enhance accessibility
updated version parsing logic to handle minor version number correctly to ensure accurate parsing of version numbers in the application
added a check for non - empty tags before adding them to the active item to ensure that tags are only added if they are not empty ,
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a corresponding method ` fromDateTime ` in ` DateTime
refactor the disassembly method to use a dedicated ` disassembleForCache ` method to improve code readability and maintainability by reducing
refactor Log4j2ConfiguratorServlet to improve code readability to enhance maintainability and facilitate future updates
removed unnecessary initialization of HiveException and AuthorizationException in StorageBasedAuthorizationProvider . java to simplify exception handling by directly returning new exceptions
updated the handling of the " CC " key in CGoCompileStep . java and added a new test case in GoBinaryIntegrationTest .
added @ Buildable annotation to CustomResource . java to ensure proper builder configuration for the Kubernetes API
removed the @ Override annotation from the Only class to streamline the code by eliminating unnecessary overriding
added a timeout constant for HTTP connection parameters in two hours to improve connection stability by allowing more time for HTTP connections
added new event scopes for " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _
simonstewart : add support for enabling all but trace to the security context
removed the @ Singleton annotation from ApplicationController . java to simplify the code by eliminating unnecessary singleton usage
refactor username retrieval in ShareActivity to use OwnCloudAccount for improved account handling to ensure proper username retrieval based on user display name
added BatchStatus import and a test for pausing a job in SimpleJobLauncherTests to ensure proper handling of paused instances in the job execution
added a null check for cacheConfig in HttpSyncDataService . java and refactored data refresh logic in DataRefreshFactory . java to
[ java ] make dockersession public and remove unused import from localnode
fix compilationunitcontext . trytosolvetype ( string ) for java . lang .
pdfbox - 4892 : do n ' t decrypt dictionary in fdfdocument , a suggest by valerybokov
[ hotfix ] [ test ] fix checkstyle violation in testdistributedlanczossolvecli
refactor HttpServerTestBase class to improve test structure to enhance maintainability and readability of the codebase
updated test assertions in PortletApplicationMapTest to use keySet instead of entrySet and added a mock implementation for attribute retrieval to improve test clarity and
added tests for handling nested beans with null values in BeanTableSchema and NestedBeanIgnoreNulls to ensure correct behavior of nested beans with null values
added support for auto - configuration customizers in RedissonAutoConfiguration and created a new RedissonAutoConfigurationCustomizer interface to enable customization
fix a bug in the todouble ( ) method of the indicator class
added new methods ` execInContainerWithUser ` and ` execInContainer ` to ` ContainerState ` and ` ExecInContainerPattern `
refactor conditional checks for ` interestedInByteMessages ` and ` interestedInTextMessages ` in ` NettyWebSocket . java ` to improve
add semgrex test for attribute substitution and negation
added a broadcast intent to clear the pull - unread prompt in the HomeFragment to enhance user experience by allowing users to tap on the pull -
removed conditional checks for pre - gingerbread and non - pre - gingerbread versions in TouchImageView . java to simplify
[ dstu - 21 ] add defaultprofilevalidationsupport bean with flush ( ) and destroy ( ) method
camel - 16950 : camel - jbang - do not throw runtimeexception when try to start camelcontext due to veto
added FloatingActionButton functionality to manage FAB menu visibility in ShareActivity to enhance user experience by allowing users to access the FAB menu
added support for inline date formatting in ToDateTokenizer and updated tests accordingly to enhance date parsing functionality and improve test coverage for date formatting
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
corrected spelling of " tecken " to " token " in multiple error messages to improve clarity and consistency in terminology
added a check for server state before binding the OperationsService connection to ensure that the server is checked before proceeding with the login process
updated Position constructor calls to use getBeginLine ( ) and getEndLine ( ) instead of getBeginColumn ( ) and getEndColumn ( ) to ensure
added waitFor ( ) method to ManagedThread and invoked it in CxxPreprocessAndCompileStep . java to ensure proper handling of process termination
added a new boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented attribute merging logic in ` CoreAuthenticationUtils `
wait for cluster to be safe before check if the record store be load .
added support for enabled SSL protocols in the Netty web server configuration to enhance security by allowing custom SSL protocols based on configuration settings
replaced ` AtomicBoolean ` with ` AtomicReference ` in ` SetOnce . java ` and introduced a wrapper class to improve thread safety and
updated QueryDslMongoRepository to handle null property cases and added a test for empty key retrieval in SpringDataMongodbSerializerUnitTests to
updated assertions in RoundRectBorderTest to ensure round rect borders are only equal with the current style to improve test accuracy by ensuring round rect borders
added a check for empty genesis configuration before creating it in the cluster to ensure that an empty cluster does not throw an exception when attempting to verify
remove parallel test for selenide - webdriver
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the sign length to ensure
updated conditional check from ` if ( windows ) ` to ` if ( ! windows ) ` in ` ProcessInformationsPanel . java ` to
refactor ` MoreCollectors ` methods to use ` empty ( ) ` and ` greatest ( ) ` instead of ` maxN (
added null checks and improved WebSocket client handling in BitmexStreamingService and BitmexManualExample classes to enhance robustness and prevent
added validation for lat and lon in GeoPointField to ensure that lat and lon values are valid to prevent runtime errors
updated method names and logic in OozieProxyImpersonator and WorkflowFilesService for clarity and consistency to improve code readability and
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
updated ` getTableDocument ` method to include a ` withDependents ` parameter for handling dependent tables to enhance flexibility in managing table documents based
added logic to track number of consecutive uploads without coordinates in UploadActivity and UploadPresenter to ensure users are aware of uploads without consecutive coordinates in the
added caching functionality for profile data retrieval in ProfileResources . java to improve performance by reducing unnecessary processing of query profiles
refactor property setting logic in JpaMetamodelEntityInformation to handle nested and non - nested ID classes to improve property handling and ensure proper
added tests for verifying the timestamp retrieval of last DDL timestamps for tables and views in the UpgradeUtil class to ensure accurate verification of index timestamps
enable default exception mappers by default in jersey
added a new parameter ` false ` to the method call in ` EntryEditor . java ` to control the behavior of the ` storeFieldAction
updated nativeCreateNSWindow method to include an owner pointer parameter to ensure proper handling of window ownership in the native window creation
updated SQL command to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure compatibility with the latest database schema changes
added a new STOCK ( " Stock " ) case to the Tile class to enhance the visual representation of Stocks in the
fixed - rbucket . get ( ) and writeasync ( ) method do n ' t use the correct codec
do n ' t log complex generic signature in findunrelatedtypesingenericcontainer
refactor ` LauncherBackAnimationController ` to introduce ` BackProgressAnimator ` for better back animation handling to improve animation responsiveness
modified the ` _ initialPageNo ` variable to be non - final and added logic to initialize ` _ contentLimits ` based on ` page
fix crc16 benchmark , increase total operation to 100 million
added comment handling in FormattedSqlChangeLogParser and corresponding test cases to ensure correct parsing of change sets with comments based on user input
refactored the initialization of JarArchiver in MavenArchiver and AbstractJarMojo classes to improve code readability and maintainability by
replace ` HumanReadableException ` with ` BuckUncheckedExecutionException ` in ` DefaultClassUsageFileReader . java ` to improve error
removed unnecessary condition checks in ` TSServiceImpl . java ` and added a new test method ` multiAggregationTest ( ) ` in ` Daemon
added checks for supported formats and types in GwtGL20 . java and implemented pixel reading functionality to ensure that input data is of type ByteBuffer
updated method calls in OutputMemoryTest , PrintR , and VarDump classes to use ` env . invokeMethod ` instead of ` invokeDynamic `
replaced ` UnmodifiableClassException ` with a more general ` Exception ` in ` InlineBytecodeGenerator . java ` and added error handling
[ gr - 23263 ] add class initialization trace to instrumentation
[ hotfix ] fix typo in query timeout
updated ` TopicRouteService ` to use ` Caffeine ` for caching topic routes and added error handling for invalid topic routes to improve
mbtiles : add read - only option to jdbc connection pool
updated the regex pattern for invalid source and target release in FindBuildToolFailures . java and added a fatal error in FailureLogAnalyzerTest .
updated URI construction logic in DetailFragment . java and added Intent check for location availability to ensure proper URI formatting and avoid potential null pointer exceptions
added a null check for inheritedParameterContexts in StandardParameterContextDAO . java to avoid potential NullPointerException when accessing inherited parameter contexts
refactor ClassLoader methods for improved readability to enhance maintainability and ease of understanding
added origin response header handling in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure that the origin response headers are correctly set
added a new instance of ProfileSettingDrawerItem to GpsMainActivity to facilitate the handling of profile settings in the application
added a new constant ` JASPER _ XML _ VALIDATION _ ATTR ` and updated related classes to use it to control XML validation behavior
danielwagnerhall : fix a bug in the firefox driver and add a test for it .
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to ensure maxRows does not exceed defined limits and improve error
refactor ` isCountOptimizable ` method to ` allActionsAreOptimizableFilters ` for improved clarity and functionality to enhance the
added event handlers for node and mouse left click events in StandardVizEventManager . java to enable handling of node and mouse events based on
replaced direct memory setting with a dedicated zeroBuffer method in ManyToOneRingBuffer . java to improve code readability and maintainability by redu
[ iotdb - 4892 ] make xorgroup accessible from terminalnodememory
remove unused getheight ( ) and getwidth ( ) method from lcduiimagemonochromebitmapsource
refactor SourcePathResolver to use a new method getPathPrivateImpl for path resolution to improve code clarity and maintainability by centralizing path
fix a bug in the dstu2 parser where the value be not set correctly .
updated the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and added encoded URL handling in the ` WebsocketRoutingFilter ` to
rename sulong test suite config to test suite execution config
refactor CxxPlatform retrieval logic into a separate method to improve code readability and maintainability by reducing duplication
added imports for ` IndexReader ` , ` IndexReader ` , ` Similarity ` , and ` Hits ` in multiple Java files to
updated ` ConcurrentLinkedStack ` to handle null values and added new test methods for pop and iterator functionality to improve robustness and ensure proper handling
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before initializing mDirs to avoid potential NullPointerException when mDirectories is not initialized
updated gesture condition in RecentsView . java to check if overview state is not enabled and first layout is not active to improve gesture handling
added multiple package - info . java files for various Lucene packages to improve documentation clarity and organization of Lucene packages
added a line to set the visibleAutoLeveler text in AutoLevelerTopComponent to improve user interface clarity by providing a clearer
added optimizations for post - optimizations in DirectUpdateHandler and DirectUpdateHandler2 , and implemented post - optimizations in UpdateHandler to
updated the Inflater and Deflater constructors to include a boolean parameter and adjusted the compressed length handling to ensure proper handling of compressed data
removed the check ( user _ data ) method call from Shaderc . java to simplify the code by eliminating unnecessary checks
added a condition to check if the base is a local meta store before retrying retries to ensure retries are only performed when the local meta store is
updated import statements and added checks for TimeoutException and ConnectionClosedException in HeliosSoloLogService . java to improve exception handling and prevent
refactor Subject class to improve code readability to enhance maintainability and ease of understanding
added referencetype . weak and referencetype . strONG to abstractserializationservice . typemap
fix issue with hssfpalette . findsimilarcolor and add unit test
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 to 2.16 . 0
danielwagnerhall : add test for find element by numeric id .
added an ` flags ` parameter to the ` registerReceiver ` method and updated related calls across multiple classes to allow for more control over receiver registration
update ffmpegtest to use mockito ' s answer instead of mockito ' s mock
added handling for previous input streams in Ogg and OpenALMusic classes to ensure proper resource management and prevent memory leaks during input processing
replaced string literal " Response was null " with a constant RESPONSE _ WAS _ NULL in AssertionResult . java to improve code readability
[ hotfix ] [ table - common ] remove duplicate check for anomalyfailurecount and anomalywarningcount
refactor Toast usage in BaseActivity and DetailActivity to use a new method showToast to improve code readability and maintainability by
updated the method to use ` delegate . httpMethod ( ) ` and ` delegate . requestTemplate ( ) ` instead of ` delegate . method (
added checks for LDAP names and updated referral handling in LDAPCertStore . java to improve error handling and ensure valid LDAP names are validated
refactored retain logic into a separate method in GatewayRSocket . java to improve code readability and maintainability by reducing duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click handling in ` FakeListView ` to
[ hotfix ] [ test ] simplify checkpointfailuremanageritcase to use @ classrule
remove genericitemuiprovider , it ' s not use anymore
add the ability to set the selected object for the sipcomm selector box
added @ Isolated annotation to FileSystemPool in MetaInfConfigurationTest . java to enable concurrent access to FileSystemPool for testing purposes
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to configure the server ' s host to ensure the server connects to the
updated token validity settings based on heart mode and grant types in DynamicClientRegistrationEndpoint to enhance token management based on client credentials and authorization code
added a new ` CloverInstrumentationFilter ` class and modified the filtering logic in ` SplitLogCounters . java ` to include it to
added support for the Smartmi Evaporative Humidifier in MiIoDevices . java and updated ReadmeHelper . java
improve break detection logic to not break block that be too far away .
changed the visibility of the setScrollRangeDelta method from private to public to allow access to the method from other classes
ambari - 20663 . ambari should not be able to start hoststack if the repository list be empty . ( rajesh
simplified the return statement in the IntHashSet class to improve readability and maintainability of the code
added Serializable interface to RuleAdministrator to enable serialization for the RuleAdministrator class
refactor ` allowedOrigins ` and ` allowedTimingOrigins ` to use ` Set ` and ` Pattern ` types instead of ` ArrayList
updated imports in BaseG3dHudTest . java to include " g3d / knight . g3dj " and "
added error handling for ` solidifiedPosition ` in ` updateLatestSolidifiedBlock ` method to improve robustness by logging errors and preventing
hbase - 15939 fix npe in execresult # getrow ( string key , object value ) when value be null
added a method to check access permissions and improved error handling for unauthorized users to enhance security checks and prevent potential NullPointerExceptions during unauthorized
replaced the method ` writeTo ` with ` getStubClassBytes ` in ` ClassMirror . java ` and introduced a new ` CreateStub
added a TextView to display internal link text based on whether the file is a folder or a file to improve user experience by providing a clearer
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting of accuracy in tests
updated the condition to check for SATURDAY in ModelZooTest . java to ensure that SATURDAY is not equal to
added ime hiding functionality in AllAppsContainerView and logged it in LauncherAllAppsContainerView to improve user experience by preventing
added inmemoryeventstorageengine to eventhandlingconfigurationtest and sagaconfigurationtest
replaced the method for retrieving the parent directory in BsdFileStore . java and added native methods in BsdNativeDispatcher . java to
add test case for issue # 1599 symbol resolver
add ` ` x ' ' , ` ` y ' ' , and ` ` z ' ' parameter to the ` / spawn ` command (
added MIN _ CONTENT _ DIMEN constant and refactored methods for calculating content area dimensions to improve code readability and maintainability by
move graalcompilertest . java and hotspotcryptosubstitutiontest . java to graal - test .
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added plugin check class names to failed checks in UpgradeCheckRegistry . java to ensure proper handling of failed checks in the upgrade process
refactor Environment class to improve code readability to enhance maintainability and ease of understanding
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with BadApple to address issue SOLR - 7421
updated the path construction logic in CodenameOneImplementation . java and removed a warning check in HashtableContent . java to ensure proper handling of
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
replaced specific ResourceAccessor imports with a wildcard import and updated resourceAccessor initialization in LiquibaseEntityResolver . java to streamline imports
added import of Security and set " jdk . tls . disabledAlgorithms " to an empty string in ComHostnameVerifier and JavaxHostname
replaced the usage of ` EMPTY ` with ` CxxDeps . of ( ) ` in the ` AbstractCxxDeps ` class and
renamed ` expectedDirectory ` to ` expectedStubDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory
removed unnecessary line breaks in Int2ObjectHashMap . java to improve code readability and maintainability
updated folder name hint logic to check for empty title to improve user experience by providing a clearer hint when the title is empty
updated client loading method to include " uaa " parameter in UaaResetPasswordServiceTests to ensure compatibility with the latest client details and improve
changed method visibility from public to private for ` isEmptyOrWhitespace ` and ` isSpecialCaseOrUnknown ` methods in ` ShadowSQLiteDatabase .
updated string representation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to include " ( isClosed ? - 1 : value ) " to
refactor MimetypeIconUtil class for improved readability to enhance maintainability and clarity of the code
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in method naming con
added a test for negated instanceof checks in UnnecessaryParenthesesTest . java and updated the instanceof check in UnwrapParentheses . java
added a ` built ` flag to track the creation of instances of ` Location ` and implemented a ` teleport ` method in the ` Location `
replaced direct Base64 encoding with Base64Utils . encodeToUrlSafeString for modulus and exponent in TokenKeyEndpoint to improve URL safety
updated imports and modified statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
renamed the interface ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the annotation ' s purpose
added a null check for the result parameter in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value
refactored the setupRevampedTweet method to include a new isMuffled method and updated related logic to improve clarity
added conditional logic to display verified text based on the addon theme setting to enhance user experience by allowing dynamic verification based on user theme settings
refactor AbucoinsDigest to remove static instance variable and make timeDiffFromServer private final to improve encapsulation and ensure immutability
camel - 15863 : camel - mongodb - allow to configure the mongo connection via spring boot 2.0 . 0
added a new parameter ` sourceIndex ` to the ` AttributeMapping ` constructor and updated related methods to allow dynamic retrieval of the source index based
[ hive ] log corrupt partition statistic when alter partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to ensure security is enabled for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 6638 ] escape email in geoserver home page ( # 6638 )
[ api ] move reflections . cache to modulemanagerimpl and enhance engine reflections .
fix join modeller to use the number of feature instead of a hardcoded value
added a check to ensure the command string length is greater than zero before processing it to avoid potential ArrayIndexOutOfBoundsException
[ hotfix ] [ kafka ] avoid unnecessary logging in single node kafka resume strategy
replaced references to ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _
updated IgnitionConfigurationHandler to handle ' automatic ' separation and added new methods in MotorMountHandler , FlightConfigurationID
tika - 3895 -- fix for tika - 3895 -- ensure ascii name length be consistent with unicode length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to non - deterministic
refactor lock file creation into a separate method ` createLockFile ( ) ` in ` MavenDependencyResolver ` to improve code readability and
updated sync settings from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added new sync interval settings to
added a check to return null if the username equals the FEDERATION _ USER in AuthenticationManager . java to ensure proper handling of user
do n ' t execute method with parameter type that be not a truffleobject .
replaced ` Collectors . toList ( ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest
[ java ] do n ' t throw an error if the filter chain do n ' t exist .
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed the import of ` org . apache . lucene . util . Version ` from ` CreateIndexTask . java ` to eliminate unused dependencies
added logic to handle missing primary key changes in Oracle and DB2 databases to ensure correct schema and catalog handling for missing primary keys in the database
added ` MetastoreException ` to the method signatures in ` MsckOperation . java ` and ` Msck . java ` , and
[ hotfix ] [ kafka ] improve retry logic in kafkaproducer
[ rocketmq - 1340 ] fix the issue of duplicate receipt handle in the forwardmessagetolqactivity .
added a ` services ` list and a method to set it in ` DockerComposeContainer ` , and created a new test class ` DockerCompose
fix ( core ) : fix concurrentmodificationexception in export and structcontextdecorator
removed HTMLCleaner and simplified XML return logic in FeedParser . java to streamline the code and improve readability by eliminating unnecessary
removed unnecessary conditional check for ` mAppsCustomizeContent ` in ` Launcher . java ` and modified the way ` CellLayout ` is
changed data types of energy reactive and WAC sum fields from int to double in MeterRealtimeBodyDataDTO . java to improve precision
added a new file ` bug4150029 . java ` that implements a JApplet with file chooser functionality to create temporary directories and
added a boolean flag ` isSparkConfigUpdated ` and corresponding getter and setter methods in ` HiveConf ` , modified ` SparkClient ` handling
added a long press indicator method to AppIcon and AppIconMenuItem classes and modified Launchable and Workspace classes to utilize it to enhance user
added a check for empty polygon in WKBWriter and updated test cases in WKBWriterTest to ensure proper handling of empty polygon scenarios and
refactor UnflavoredBuildTarget creation to use a builder pattern to improve code readability and maintainability by utilizing a builder pattern
added a new file MultiplyByMaxInt . java that implements a method to multiply an integer by the maximum value of an integer multiple times
updated file display logic in OCFileListFragment to enable the navigation drawer indicator based on the current file ' s status to improve user experience by
changed the package of TestRAMDirectory from org . apache . lucene . index . store to org . apache . lucene . store
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify code
replaced string concatenation with message creation for error messages in DMNEvaluatorCompiler . java and added a new message constant in Msg . java
replaced occurrences of @ ContainedBy ( AC . class ) and @ ContainerFor ( B . class ) with @ Repeatable ( AC
updated message formatting in AbstractController to include send duration to improve clarity of file sending status messages
updated the way class names are retrieved and checked for package access in OpenMBeanAttributeInfoSupport . java to improve code clarity and ensure proper
[ hotfix ] fix quorumresponseresolver . isdatapresent ( ) and quorumresponseresolver . isdatapresent ( ) to check response count
update freeSize calculation in StoreDirect . java to correctly adjust the free size based on the current size
fix issue with touch event not be properly disable in some case .
replaced instances of ` SslContextFactory ` with ` SslContextFactory . Server ` in multiple server - related classes to ensure compatibility with the latest SSL
removed the ` PrivilegedSocket ` class and simplified the ` Socket ` instantiation in ` PG _ Stream . java ` to simplify the code by elim
refactor InputTest class to improve code readability to enhance maintainability and ease of understanding
updated finishRecentsAnimationOnTasksAppeared method to accept a Runnable parameter and modified related logic in AbsSwipeUpHandler and Task
refactor NearbyMapFragment to remove current location marker and add null check for curLatLng to improve code robustness and prevent potential
updated ` removeSecret ` method calls to use ` clientDetailsService . retrieve ( clientId ) ` instead of ` client ` to ensure proper retrieval
updated SQL source test setup to use ` @ BeforeEach ` instead of ` @ BeforeAll ` and modified the expected value assertion to improve test
fix for amq - 1348 : wait for thread to stop before close the consumer .
added unit tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure robustness by verifying key - related exceptions during data
added Optional handling for conditionDataList in ShenyuTrieRuleListener and added return statements in ZookeeperSyncDataService to improve null safety
[ fix ] [ control ] change controldirection enum name to be more descriptive .
updated the logic for hiding stack traces and improved code clarity in StdErrLog . java to enhance code readability and maintainability
updated HttpSessionEventPublisher to utilize a new method for retrieving the application context to improve code clarity and ensure that the context is not null
added a check to ensure the syntax of the CREATE CQ statement has changed from v0.14 to v0.14 to ensure compatibility
[ hotfix ] [ table - common ] fix checkstyle violation in flinkiotdbsink
do n ' t simplify custom node if they do n ' t have them
updated the method call to include a context parameter for retrieving file type icons to ensure the correct context is used when retrieving file type icons
updated ` readIdentifierWithSchema ( ) ` to use ` schema . getName ( ) ` instead of ` readIdentifierWithSchema ( ) `
[ beam - 10625 ] support timestamp field in bigquery read ( # 10625 )
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` , and created corresponding tests in ` ViewGroupTest
replaced explicit type parameters with generics in multiple Java files to improve code readability and type safety
removed unused import of PColumnFamily from IndexTool . java and updated imports in IndexTool . java and MetaDataClient . java to streamline
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and updated enum value retrieval logic in SpringBootDocBuildTemplate to improve
[ gr - 13939 ] fix resource feature for jar file .
reformatted CUDA _ * constants in cuda . java for consistency to improve code readability and maintainability
refactor ResourceLoader to use FileFilter for listing layout directories to enhance flexibility in resource loading by allowing multiple layout directories
fix redstone torch not be attachable properly . close # 1186
added handling for VARBINARY case in RelToStageConverter . java to support VARBINARY data type in the RelToStageConverter
removed unused import of DateHelper in NoteAdapter . java to streamline code by eliminating unnecessary dependencies
updated error messages and added validation for backup loading in Backup . java and Captions . java to improve clarity and ensure proper handling of backup
mow - 285 fix the position of the eview in the simple panel
removed file deletion logic for the pipe file in ShadowParcelFileDescriptor . java to simplify the file creation process by directly using the temporary directory
replaced ` poll ( ) ` and ` offer ( ) ` methods with ` addFirst ( ) ` and ` removeFirst ( ) `
changed the rule from " optimizations " to " controversial " in BooleanInversionTest . java to align the rule with the
fix canonicalization of x ^ y = = ( x ^ y ) to y = = ( y ^ y )
added a static final Type STRING _ ARRAY to the TypeFactory class to facilitate dynamic type handling for String arrays in the application
refactor IME hiding logic in AllAppsContainerView and improve logging in LauncherAllAppsContainerView and LiveSearchManager to improve
add blockstatecontainer . setbits ( ) patch to fix network issue .
refactor assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest for improved clarity and consistency to enhance readability
add max texture size optimization to forge ' s gl _ max _ texture _ size .
[ java ] : do n ' t try to stop log recording when there be no need to .
added a condition to reset startPosn when the analysis is in transform to ensure startPosn is reset when the analysis is not in transform mode
replaced the method ` StarTreeUtils . isStarTreeDisabled ( ) ` with ` _ queryContext . isSkipStarTree (
added a lockNearbyView flag and modified progress bar visibility logic in NearbyActivity . java to ensure that nearby places are refreshed
add a factory method for maptransformers that can be use with a map .
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for loading launcher widget span information in the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to enhance functionality for displaying widget details in the
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to improve event handling capabilities and
added methods to manage calling process ID and UID in ShadowBinder and updated tests in ShadowBinderTest to ensure proper management of calling process and UID
replaced the ` @ AutoValue ` annotation with a ` @ Nullable ` annotation and refactored the ` ExpectationFailure ` class to
bitcoinserializer : remove log warn for no support for deserializing message
simplified the calculation of newWidth and newH by removing unnecessary conditional checks for targetWidth and targetHeight to improve code clarity and
added handling for carriage return and newline characters in Markdown rendering to improve Markdown formatting and ensure proper handling of carriage return characters
updated the sharing logic in SharePasswordDialogFragment to use a dedicated method for setting password to improve code readability and maintainability by reducing
refactor method retrieval for map and unmap methods to use a class - based approach to improve flexibility and maintainability of the code by
updated method access modifiers from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to enhance
added new options for Slider keytab functionality in LlapOptionsProcessor . java to enhance flexibility in setting default settings for Slider AM
updated tearOutGraphViewContainer method to accept a JFrame parameter and added animation control to enable and disable animations in the graph view to
added a mechanism to execute tasks after the loader has been completed in LauncherModel . java to ensure that shortcuts are only added when the loader
refactor ` NodeManageMemoryMergeOperator ` , ` NodePathsConvertOperator ` , and ` NodePathsCountOperator ` to use ` final
updated the ` add ` method signatures in ` IssueInterface ` and refactored ` ValidationReport ` to ` JsonValidationReport ` to enhance
added a method to safely retrieve the cipher provider name to improve error handling and provide clearer debugging information
[ hotfix ] rename dynamicconfiguration to flinkconfiguration in mesos container
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity for better debugging
modified the formatting logic in AggregateLifeCycle . java to improve readability and maintainability of the code
changed the access modifier of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to BITMAP _ HEIGHT
removed the @ Ignore annotation from CovariantOverrideTest . java to indicate that we do not know how to implement it covariant override
refactor curly method to use Qtype directly instead of a separate parameter to improve code readability and maintainability by reducing duplication
camel - 1745 : camel - jbang - model - reloadstrategy should use the node ' s ownerdocument to load route .
added space minimum and maximum values for the X - axis in ScatterChart to ensure proper spacing in the chart ' s X - axis
updated the formatting of the INTERVAL string in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` State
added a check for the presence of the UTF8 key in the properties file to ensure that the UTF8 key is present in the properties file
updated LuceneTestCase to use @ SeedDecorators and modified System . out . println in TestReproduceMessage . java to improve
added logging for user long - presses on an AllApps item in StatsLogManager and ItemLongClickListener to improve tracking of user long -
added a null check for the log variable in StoreWAL . java and created a new test class Issue112Test . java to ensure that
added a condition to check for the ` showSectorLandInfo ` property in the ` Control ` class to ensure that the ` showS
added generic type < ? > to compositetype . gettypeat and flatfieldtype . gettypeat ( string , string , ... )
refactor Enum class to improve code readability to enhance maintainability and ease of understanding
add check for null nearbyrandom ( randomselection ) in nearbyselectorconfig and nearbyvalueselector
remove temporarycache . removerevent ( ) and replace it with temporarycache . cache ( ) .
updated visibility settings for SQL view and WMS layer imports in NewLayerPage . java to improve user experience by preventing unnecessary UI elements
initialize Availability _ availability to Availability . UNAVAILABLE to ensure proper initialization of the availability state
updated method parameters and logic in FetchInvDataMsgHandler , PbftDataSyncHandler , PeerConnection , and SyncService classes to improve
chore : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
replaced the ` _ freeSpaceReclaimDisabled ` boolean with an ` _ freeSpaceReclaimQ ` integer and added validation for the
changed KDCOptions constants from public to private static in KDCOptions . java and added a new class KdcDefaultOptions . java to
replaced instance variable ` this . writer ` with a direct assignment of ` writer ` to improve code clarity and ensure proper initialization of the
updated formatting of code in ProfilePager . java for consistency to improve code readability and maintainability
renamed the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to clarify that the method
added a method to retrieve the value from a class constant in Configuration . java to enhance flexibility in handling object value constants in configuration
added error handling for service initialization in KafkaService . java to improve robustness by logging errors during service initialization
updated the initialization of ` RESOURCES _ TO _ ALWAYS _ ACQUIRE ` from ` Set ` to ` ImmutableSet ` to include additional resources
camel - 18443 : fixed the issue of auto - create channel be not work for the message bus .
added keyword handling in HTMLDocument and a corresponding test in TestDemo to ensure proper indexing and indexing of HTML documents with keywords
update SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added an else block to initialize ` _ addresses ` based on the presence of ` _ addresses ` to ensure proper initialization of ` _ addresses `
replaced the instantiation of ` CorrespondenceSubclassToFactoryCall ` with ` CorrespondenceSubclassToFactoryCall . class `
refactor Builder class to improve code readability to enhance maintainability and ease of understanding
update isbntobibtexfetcher to use http url instead of manas . tungare . name
fix polyglot error handling and increase keep - alive time to 10 second
added null check for the text before firing data change events and adjusted cursor position accordingly to prevent potential NullPointerExceptions when the text is not initialized
make the sentimentmodel use the rnnutils for vector conversion , and add some documentation .
added line trimming of the input string in SuffixURLFilter . java to ensure clean input by removing unnecessary whitespace
added a conditional check to return early if the player is in Godmode to optimize performance by avoiding unnecessary processing when in Godmode
ggb - 1342 fix popup registration and unregistration in textinputdialogw
updated the constructor parameters in LinkedHashMapCache and BoundedLinkedHashMap to use ' maximumSize ' instead of ' maximumSize ' to ensure consistency in
replaced ` _ channel . close ( ) ` with ` close ( ) ` in ` ChannelEndPoint . java ` to ensure proper resource cleanup
added null check for keyIndex in FixAcidKeyIndex . java and updated KeyIndexBuilder instantiation in OrcRecordUpdater . java to
added Locale import and modified exception handling in DirectUpdateHandler2 . java to improve error message formatting for better localization support
make store check guard a a guarding node and update usages accordingly .
[ gr - 10625 ] do n ' t follow edge for exception dispatch block .
add disagreement calculation for controversial
removed unnecessary ` @ Value . Parameter ` annotations and replaced ` BuildTarget . copyOf ( unstrippedTarget ) ` with ` buildTarget `
refactor SqlRunner class to improve code readability to enhance maintainability and ease of understanding
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and
renamed ` knownApis ` to ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` and ` Robolect
replace progressindicator with confidenceprogressindicator in createofferview
updated user - agent header check from " Cling / " to " UMS / " across multiple files to ensure accurate identification of UMS
make sure bpts be iterate even if they do n ' t have an iterator
[ crowdfunding ] add itemviewtype to crowdfundingchatadapter for no - complex message
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
fix a syntax error in an exact match expression
removed the canvas parameter from the insert method in TexturePacker . java to simplify the method signature and improve code clarity
replaced the ` getVisitors ( ) ` method with a default ` apply ( ) ` method in the ` RefactorModule ` interface to
added methods to retrieve child elements by name and recursive name in Xml . java to enhance functionality by allowing retrieval of child elements by name and recursive
set the Content - Charset header to UTF - 8 in HttpSolrServer . java and its corresponding test in BasicHttpSolrServerTest . java
updated SystemUiController to use @ SystemUiControllerFlags annotation and modified UI state management to improve code clarity and maintainability by using a
removed the private ClientConfigurationService variable from IntrospectingTokenService . java to streamline the code by eliminating unnecessary dependencies
updated the exception message format in HiveRecordSet . java for better clarity to improve error reporting for Hive split operations
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unnecessary fields
rename ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` to clarify the purpose of the configuration
added score calculation in the merge method of TextFragment to ensure accurate text positioning during merging of TextFragments
removed the private Digester field from Md4PasswordEncoder . java to simplify the code by eliminating unnecessary dependencies
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure maximumUnimprovedStep
added a check to return early if there are no currently opened editors to avoid unnecessary operations when there are no currently opened editors
replaced direct calls to ` verify ` method with ` Mockito . verify ` method in ` BDDMockito . java ` and added
replaced ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` in ` PathScanner
[ codefirst ] fix classcastexception when call codefirst . sayhi2 ( )
added logging configuration to abstractsplitbraintest and fix format
updated logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null before adding the logout filter to ensure logout functionality is only
simplified the construction of the ` ret ` string in ` CASgiac . java ` to improve readability and maintainability of the
refactor DockerComposeContainer to use a concurrent map for logging consumers and add a new test class for logging functionality to improve logging management and ensure
updated the type parameter in the testMapping method from ` Function < ResultSetMapping , Object > ` to ` Function < ResultSetMapping < ? >
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to facilitate the creation of a ` Throwing
replaced a ` break ` statement with a ` return ( true ) ` statement in ` ConsoleActivity . java ` to improve code clarity
camel - 14284 : camel - platform - http - fix send body with content - type header .
added methods to handle platform - specific path separators in MorePaths . java and updated references in CopyStep . java and AarWithLibs
added a null check for authorizationContext . getParams ( ) before processing solrParams to avoid potential NullPointerException when accessing authorizationContext parameters
replaced the ` loadLibraryOnlyIfPresent ` method with a ` throwExceptionIfFail ( ) ` method in ` NativeLibraries . java `
updated SDK version from " 4611349 " to " 4514284 " and added unit tests for text - to - speech functionality to
fix queuetransactionlog . gettransactionid ( ) and queuetransactionlog . gettransactionname ( ) to return the correct key .
[ hotfix ] add ` ` enablesqlwithoutprofile ' ' property to jdbcenvironmentproperties
added a try - finally block around the write operation in ConnectHandler . java to ensure proper resource management during data writing operations
fix compile error with eclipse compiler
updated the date parameter from ' date ' to ' calendar ' in DateUtils . java and removed an assertion in FontParsersTest . java to
updated the ` loadValue ` method in ` CachedThreadStatesGaugeSet ` to call ` super . getThreadInfo ( ) ` and added a
added a new TransactionLog variable and modified transaction commit handling in UpdateLog . java , and modified sleep duration in LeaderTragicEventTest
updated the file path from " . net / job / FastAsyncWorldEdit - P2 - V6 / " to " . net /
refactor file creation logic in SegmentGeneratorConfig to ensure output directory exists and improve path handling to enhance code robustness and prevent potential NullPointerExceptions
added a new method ` calculateNormalVector ` to ` ObjUtils ` and modified the way normal vectors are calculated in ` TriangulationHelper
updated the ` find ` method in ` JdbcAuditService ` to include ` identityZoneId ` as a parameter to ensure correct retrieval of identity
refactor SpanCollector class to improve code readability to enhance maintainability and ease of understanding
added a null check for the getCurrSession ( ) method in AuthorizationFilter . java to ensure that the session info is not null before proceed
refactor TransactionIsolationLevel class for improved clarity to enhance maintainability and readability of the code
corrected the spelling of " printLVgroups " to " printLogicalVolumegroups " in OshiController .
added thread name setting for the current thread in TestSession . java to improve clarity of the thread ' s context during the forwarding process
refactor CookieManager to improve code readability to enhance maintainability and ease of understanding
replaced the manual creation of an ArrayList with an empty return statement in LauncherExtension . java to simplify the code by eliminating unnecessary
added OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance user interface responsiveness by providing
replaced ` scaleHotseatWithWorkspace ( ) ` method with ` getHotseatScaleAndTranslation ( Launcher launcher ) `
added a check for JUnitRule in the DefaultStackTraceCleaner and created a new test for filtering out elements under Mockito JUnitRule
refactor ` MappedResizeableBuffer ` to replace ` dstnull ` and ` srcnull ` variables with ` dstByteArray ` and ` src
refactor balance listener handling in DepositListItem . java to improve clarity and maintainability of balance listener management
added conditional logic to handle edge modes in RealisticRenderer to ensure proper color conversion based on edge modes
added null check for httpClientResponse in HttpClientBeanPostProcessor . java to prevent potential NullPointerException when httpClientResponse is null
fix gl200 decoder ( remove unused import )
refactor playback time checks in FullDetailsActivity for better clarity and efficiency to improve code readability and maintainability by reducing redundant checks
added functionality to handle elliptic nodes in SpanishXMLTreeReader and introduced a new method to check for matching Lemmas to improve
added a check to clear the " language " field of an item if its value is an empty string to ensure that the item ' s language
updated ReactiveLoadBalancerClientFilter to override the scheme based on the secure status of the service instance to ensure proper handling of secure service instances in the
defaultmessagestore : avoid unnecessary bytebuffer . duplicate ( ) call .
[ hotfix ] fix checkstyle violation in debuginfobase and nativeimagedebuginfoprovider
refactor the comparison logic in ShadowBackupManagerTest from an anonymous inner class to a lambda expression to improve code readability and maintainability by
updated language support checks from US to EN language in JRELocaleProviderAdapter . java and LocaleDataMetaInfo . java to ensure compatibility with
remove redundant null check for redeemData in LocalTransactionSigner . java to simplify the conditional logic for better readability and maintainability
add a new minecraftforgeclient class that can be use to render the terrain texture .
added a return statement in TxCacheDB . java to prevent further processing of cache operations
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . asm ` to ` jdk . internal
refactor FastDictionary class implementation to improve performance and maintainability of the code
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5448 -
updated the parameters of the FlightEvent instances in FlightEventsTest . java to use new values instead of hardcoded values to improve accuracy
[ beam - 1740 ] fix import to match the one declare in the proto
replaced ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java `
refactor : rename profilepicturelink to profilepicturelinks in instructorfeedbackresultspagedata
added shortRules list and adjusted password validation logic in DefaultPasswordValidator to enhance password validation flexibility by allowing alphabetic and numeric sequence rules
danielwagnerhall : increase timeout for selenium server to 20 second
removed the JUnit @ Test annotation from ProxyClassSerializationTest . java to simplify the test execution by eliminating unnecessary annotations
updated string concatenation syntax in DLNAMediaInfo . java to improve code readability and maintainability
remove speculatablereguard movement phase from speculatablereguardtest and related test
added conditions to check for the absence of the AUTHENTICATION _ MANAGER bean definition in the AuthenticationManagerBeanDefinitionParser to ensure that
updated the handling of forwarded server fields in ForwardedRequestCustomizer . java and added corresponding tests in ForwardedRequestCustomizerTest . java
added a line to reset the StringBuilder length in ConsoleReader . java to ensure the StringBuilder is properly initialized before use
changed access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists
updated OpenIDE - Module - Specification - Version and OpenIDE - ModuleSpecification - Version versions across multiple files to ensure compatibility with the latest Open
hbase - 10663 add an option to set sslhandler . sslhandler . wrapDataSize in netty rpc server
refactor CookieStore , HttpURLPermission , Inet4Address , Inet6Address , ProtocolFamily , SocketOption , and URI classes to improve
updated FixedLengthTokenizerTests to use JUnit 4 annotations and added tests for incorrect line length exceptions to improve test coverage and ensure proper exception handling
updated the protocol binding handling in OpenSamlAuthenticationRequestFactory and added unit tests for its functionality to ensure proper protocol binding validation and improve test coverage
added AttachedSurfaceControl import and refactored SurfaceControl transaction handling in DepthController . java to improve code clarity and ensure proper transaction
updated the version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to
hbase - 14827 prepreparebulkload and precleanupbulkload action should be create instead of write
updated the substring method to use the start index instead of the size of unSeqMergeList to ensure correct indexing of the unSeqMergeList
camel - 17743 : fixed the issue of genericfileconverter do n ' t work with java . io . file .
added a login method to the ShardManager interface and modified DefaultShardManagerBuilder to conditionally login based on the login flag to enhance security by
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency in formatting
changed the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve clarity and consistency in
camel - 1770 : fixed the issue that httpsender do n ' t check if the response be mark a mark
modify condition to check if the student be a student before comparing with the giver of the response to ensure that the response is only processed for
added checks for linked profiles and updated profile path handling in BMPImageReader . java to enhance security by enabling or disabling
updated location and PlotBlock parameters in setSimpleCuboid method calls to ensure correct positioning of coordinates for plot worlds
added a wait message for PMD status and refactored the actionPerformed method to run it in a separate thread to improve UI responsiveness
refactor grid presenter initialization to use a dedicated method for setting grid sizes to improve code readability and maintainability by reducing duplication
updated return statements in ContributionsListFragment . java to return true instead of false to ensure that the method correctly reflects the intended state of
added a test skip range query in DistinctPrefixFilterIT . java and modified the limit handling in BaseResultIterators . java to improve
added a new test method ` testAcrobatCheckBoxGroupProperties ` to verify the properties of a checkbox group in the acrobat ac
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to enhance functionality by allowing retrieval of the last
added a check for the existence of a " metaTable " property in the HiveIcebergStorageHandler to ensure that only valid metadata tables
add a popup for select the default currency in the cash deposit form .
replaced catch block for IOException with catch block for Throwable in WriteFlusher . java to improve error handling by catching all throwable types
added a new boolean variable ` mStartedEnterAnimation ` and modified animation behavior in ` IconRecentsView . java ` to improve animation handling
added a new public String field ` activeKeyId ` to the ` UaaConfiguration ` class to provide access to the active key ID for better
updated action labels and descriptions in SendMailActions . java for improved clarity and consistency to enhance user experience by providing more descriptive action
changed the ` isActive ` variable from private to volatile to ensure thread safety when accessing the ` isActive ` variable
updated the ` isDesc ( ) ` method to ` isAsc ( ) ` in ` OrderByExpressionContext ` and ` SelectionPartiallyOrdered
[ conic ] cast the result of string . tostring ( ) to charsequence .
added a condition to check if the application name is equal to " ownCloud " before proceeding with the date check to ensure that the application
hbase - 2697 master should not add hbase . rootdir . perms if kerberos be enable
updated method calls from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in ` JakartaServlet
refactor Instant class to improve code readability to enhance maintainability and ease of understanding
added a default state format of " 2 " to the properties if it is not already present in the properties to ensure the default state format is
removed the type variable from the logging statement in CentralAuthenticationServiceImpl . java and modified the conditional check in AbstractTicket . java to simplify
added IllegalArgumentException to the exception type check in PDICCBased . java to handle additional exceptions related to illegal argument exceptions
reformatted conditional statement in AbstractFileResourceSet . java for consistency to improve code readability and maintainability
[ mng - 4892 ] fix file path resolution for plugin parameter ( # 4892 )
[ beam - 13434 ] move protobuf coders to extensions / protobuf ( # 13434 )
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer and added a test for query with signed numeric literals in H
refactor LaunchLugHandler and RailGuideHandler to use a new method for setting instance count and separation to improve code clarity
removed the getNonceFactory method implementation in BitmexStreamingExchange to simplify the code by eliminating unnecessary method implementation
updated logging statements in MailBinding . java to use placeholder syntax to improve code readability and maintainability by using parameterized logging
[ java ] update driverconductortest to use default timeouts and mtu length .
change default value of initializeLoadedClasses from true to false to disable loading classes during scanning
added a call to grab the focus of the search field in FullTextSearchPanel . java to ensure the search field is focused when necessary
refactor the creation of NioParams in TlsConnectionLogging to use a local variable to improve code readability and maintainability
removed the assertion for random number retrieval in StatementTest . java to simplify the test by eliminating unnecessary assertions
updated the assertion message in TestSolrConfigHandler to include the server URL to improve clarity of error messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and updated mocking in ` CsrfWebFilterTests ` to improve test clarity
replaced direct usage of density . toString ( ) with a variable fromDensity for better clarity to improve code readability and maintainability by
added a buttonUIID variable and refactored UIID updates in ComponentGroup . java to improve clarity and maintainability of UIID
removed unnecessary densityDpi check from RecentsAnimationDeviceState . java to simplify the condition for better readability and maintainability
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java to implement array cloning
added import for LuceneTestCase . AwaitsFix and annotated the test class with @ AwaitsFix to indicate that the test
fixed - rexecutorservice . schedule ( ) method throw npe if nextstartdate be null
simplified the condition for updating credentials in FileDownloader . java and FileUploader . java to improve code readability and maintainability by
added null check and closing logic for StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
[ java ] do n ' t use get ( ) with default value of 0 for net metric .
added a nonce parameter to the token claims retrieval in TokenMvcMockTests . java to ensure that the token claims match the expected nonce value
updated multiple chart editor and editor classes in the project to improve code organization and maintainability
added methods to set the width and height of the form layered pane in the Form class to ensure the form layered pane aligns with
added a maxY method to the BrowserContentPane class that calculates the maximum height based on the owner ' s owner ' s height to ensure proper
modified the ` openDatabase ` and ` openSharedDatabase ` methods to return a boolean indicating whether the database is connected to improve error handling by
replaced the static final DOCKER _ COMMAND with a public static final Platform . DOCKER _ COMMAND in DockerTestUtils . java
added null check for the input stream in the initializeParameters method to prevent potential NullPointerException when no input files are found
updated the ` drawLeaveBehind ` method to accept a custom color parameter to enhance flexibility by allowing customization of folder leave - behind
show an error dialog when the canary plugin do n ' t work with android studio .
cloudstack - 4892 : fix npe in identityproxy sanity check ( # 4892 )
added modulePersistEnable and modulePersistDisable lists and their respective getter and setter methods in StartArgs . java to enable and disable module persistence options
updated argument length check from ` = = 1 ` to ` > = 1 ` in GeminiMarketDataService . java to ensure
replaced HashSet with LinkedHashSet for the " questions " field in VerifyPasswordResetRequestAction to maintain the order of questions in the flow scope
add a test case for a bug report in http : / / issues . apache . org / activemq / browse / amq -
removed specific JSP files from the AuthCheckFilter to streamline the code by eliminating unnecessary exclusion patterns
refactored runnable execution logic in Scheduler . java and added a test in SchedulerTest . java to ensure that posted runnables are
updated method signatures in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and ` CommandRunner ` to use varargs instead of varargs to
refactor XML parsing logic to handle end - of - stream error to improve robustness by avoiding potential end - of - stream exceptions
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to handle horizontal page overflow
added pivot point adjustments for mArrow in DeepShortcutsContainer to ensure proper positioning of the arrow based on icon positioning
change log level from info to debug for interruptedexception in fileupdatemonitor
refactor the updateThumbnail method to include a refreshView parameter for better control over thumbnail updates to enhance user experience by allowing refreshing the thumbnail
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated InternetAddress constructor to include a boolean parameter and modified hostname validation logic in HostnameFormatSpecifier to ensure valid hostname validation and handle potential IllegalArgumentException
updated references from ` this ` to ` this ` in multiple activity classes to improve code readability and maintain consistency across the codebase
updated the initialization of ` _ maxDocId ` and introduced ` _ currentDocId ` in ` SizeBasedDocIdIterator ` to ensure
refactor ` promptToOpenFile ` methods to accept an ` existingFileName ` parameter for improved file handling to enhance flexibility in file
updated ` sPageSleepDelay ` from 200ms to 150ms and refactored ` setCurrentPageToWidgets ` method to ` updatePage
added transformation logic for flight components in FlightConfiguration . java and updated bounds calculation in FlightConfigurationTest . java to improve accuracy of flight
[ micrometer ] use direct : prefix instead of seda : prefix for test
updated DateTimeFormatter to use Locale . ROOT in TimeHelper . java to ensure consistent date formatting across different locales
[ ds - 3892 ] filter out hidden metadata field in dspaceobjectconverter
added a test method to verify that missing dimension and metric names are set to null in StarTreeConfig to ensure that the builder correctly handles
camel - 17462 : camel - jbang - allow to configure recipient list via @ fluent
refactor InlineLayoutBox and HoverListener to improve parent handling and repaint logic to enhance code clarity and maintainability by ensuring proper repaint
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsService ` in ` AuthenticatorActivity ` to streamline authentication method handling and improve service management
